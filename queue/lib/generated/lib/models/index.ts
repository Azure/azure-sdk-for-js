/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";


/**
 * @interface
 * An interface representing AccessPolicy.
 * An Access policy
 *
 */
export interface AccessPolicy {
  /**
   * @member {string} start the date-time the policy is active
   * **NOTE: This entity will be treated as a string instead of a Date because
   * the API can potentially deal with a higher precision value than what is
   * supported by JavaScript.**
   */
  start: string;
  /**
   * @member {string} expiry the date-time the policy expires
   * **NOTE: This entity will be treated as a string instead of a Date because
   * the API can potentially deal with a higher precision value than what is
   * supported by JavaScript.**
   */
  expiry: string;
  /**
   * @member {string} permission the permissions for the acl policy
   */
  permission: string;
}

/**
 * @interface
 * An interface representing QueueItem.
 * An Azure Storage Queue.
 *
 */
export interface QueueItem {
  /**
   * @member {string} name The name of the Queue.
   */
  name: string;
  /**
   * @member {{ [propertyName: string]: string }} [metadata]
   */
  metadata?: { [propertyName: string]: string };
}

/**
 * @interface
 * An interface representing ListQueuesSegmentResponse.
 * The object returned when calling List Queues on a Queue Service.
 *
 */
export interface ListQueuesSegmentResponse {
  /**
   * @member {string} serviceEndpoint
   */
  serviceEndpoint: string;
  /**
   * @member {string} prefix
   */
  prefix: string;
  /**
   * @member {string} [marker]
   */
  marker?: string;
  /**
   * @member {number} maxResults
   */
  maxResults: number;
  /**
   * @member {QueueItem[]} [queueItems]
   */
  queueItems?: QueueItem[];
  /**
   * @member {string} nextMarker
   */
  nextMarker: string;
}

/**
 * @interface
 * An interface representing CorsRule.
 * CORS is an HTTP feature that enables a web application running under one
 * domain to access resources in another domain. Web browsers implement a
 * security restriction known as same-origin policy that prevents a web page
 * from calling APIs in a different domain; CORS provides a secure way to allow
 * one domain (the origin domain) to call APIs in another domain
 *
 */
export interface CorsRule {
  /**
   * @member {string} allowedOrigins The origin domains that are permitted to
   * make a request against the storage service via CORS. The origin domain is
   * the domain from which the request originates. Note that the origin must be
   * an exact case-sensitive match with the origin that the user age sends to
   * the service. You can also use the wildcard character '*' to allow all
   * origin domains to make requests via CORS.
   */
  allowedOrigins: string;
  /**
   * @member {string} allowedMethods The methods (HTTP request verbs) that the
   * origin domain may use for a CORS request. (comma separated)
   */
  allowedMethods: string;
  /**
   * @member {string} allowedHeaders the request headers that the origin domain
   * may specify on the CORS request.
   */
  allowedHeaders: string;
  /**
   * @member {string} exposedHeaders The response headers that may be sent in
   * the response to the CORS request and exposed by the browser to the request
   * issuer
   */
  exposedHeaders: string;
  /**
   * @member {number} maxAgeInSeconds The maximum amount time that a browser
   * should cache the preflight OPTIONS request.
   */
  maxAgeInSeconds: number;
}

/**
 * @interface
 * An interface representing GeoReplication.
 */
export interface GeoReplication {
  /**
   * @member {GeoReplicationStatusType} status The status of the secondary
   * location. Possible values include: 'live', 'bootstrap', 'unavailable'
   */
  status: GeoReplicationStatusType;
  /**
   * @member {Date} lastSyncTime A GMT date/time value, to the second. All
   * primary writes preceding this value are guaranteed to be available for
   * read operations at the secondary. Primary writes after this point in time
   * may or may not be available for reads.
   */
  lastSyncTime: Date;
}

/**
 * @interface
 * An interface representing RetentionPolicy.
 * the retention policy
 *
 */
export interface RetentionPolicy {
  /**
   * @member {boolean} enabled Indicates whether a retention policy is enabled
   * for the storage service
   */
  enabled: boolean;
  /**
   * @member {number} [days] Indicates the number of days that metrics or
   * logging or soft-deleted data should be retained. All data older than this
   * value will be deleted
   */
  days?: number;
}

/**
 * @interface
 * An interface representing Logging.
 * Azure Analytics Logging settings.
 *
 */
export interface Logging {
  /**
   * @member {string} version The version of Storage Analytics to configure.
   */
  version: string;
  /**
   * @member {boolean} deleteProperty Indicates whether all delete requests
   * should be logged.
   */
  deleteProperty: boolean;
  /**
   * @member {boolean} read Indicates whether all read requests should be
   * logged.
   */
  read: boolean;
  /**
   * @member {boolean} write Indicates whether all write requests should be
   * logged.
   */
  write: boolean;
  /**
   * @member {RetentionPolicy} retentionPolicy
   */
  retentionPolicy: RetentionPolicy;
}

/**
 * @interface
 * An interface representing StorageError.
 */
export interface StorageError {
  /**
   * @member {string} [message]
   */
  message?: string;
}

/**
 * @interface
 * An interface representing Metrics.
 */
export interface Metrics {
  /**
   * @member {string} [version] The version of Storage Analytics to configure.
   */
  version?: string;
  /**
   * @member {boolean} enabled Indicates whether metrics are enabled for the
   * Queue service.
   */
  enabled: boolean;
  /**
   * @member {boolean} [includeAPIs] Indicates whether metrics should generate
   * summary statistics for called API operations.
   */
  includeAPIs?: boolean;
  /**
   * @member {RetentionPolicy} [retentionPolicy]
   */
  retentionPolicy?: RetentionPolicy;
}

/**
 * @interface
 * An interface representing QueueMessage.
 * A Message object which can be stored in a Queue
 *
 */
export interface QueueMessage {
  /**
   * @member {string} messageText The content of the message
   */
  messageText: string;
}

/**
 * @interface
 * An interface representing DequeuedMessageItem.
 * The object returned in the QueueMessageList array when calling Get Messages
 * on a Queue.
 *
 */
export interface DequeuedMessageItem {
  /**
   * @member {string} messageId The Id of the Message.
   */
  messageId: string;
  /**
   * @member {Date} insertionTime The time the Message was inserted into the
   * Queue.
   */
  insertionTime: Date;
  /**
   * @member {Date} expirationTime The time that the Message will expire and be
   * automatically deleted.
   */
  expirationTime: Date;
  /**
   * @member {string} popReceipt This value is required to delete the Message.
   * If deletion fails using this popreceipt then the message has been dequeued
   * by another client.
   */
  popReceipt: string;
  /**
   * @member {Date} timeNextVisible The time that the message will again become
   * visible in the Queue.
   */
  timeNextVisible: Date;
  /**
   * @member {number} dequeueCount The number of times the message has been
   * dequeued.
   */
  dequeueCount: number;
  /**
   * @member {string} messageText The content of the Message.
   */
  messageText: string;
}

/**
 * @interface
 * An interface representing PeekedMessageItem.
 * The object returned in the QueueMessageList array when calling Peek Messages
 * on a Queue
 *
 */
export interface PeekedMessageItem {
  /**
   * @member {string} messageId The Id of the Message.
   */
  messageId: string;
  /**
   * @member {Date} insertionTime The time the Message was inserted into the
   * Queue.
   */
  insertionTime: Date;
  /**
   * @member {Date} expirationTime The time that the Message will expire and be
   * automatically deleted.
   */
  expirationTime: Date;
  /**
   * @member {number} dequeueCount The number of times the message has been
   * dequeued.
   */
  dequeueCount: number;
  /**
   * @member {string} messageText The content of the Message.
   */
  messageText: string;
}

/**
 * @interface
 * An interface representing EnqueuedMessage.
 * The object returned in the QueueMessageList array when calling Put Message
 * on a Queue
 *
 */
export interface EnqueuedMessage {
  /**
   * @member {string} messageId The Id of the Message.
   */
  messageId: string;
  /**
   * @member {Date} insertionTime The time the Message was inserted into the
   * Queue.
   */
  insertionTime: Date;
  /**
   * @member {Date} expirationTime The time that the Message will expire and be
   * automatically deleted.
   */
  expirationTime: Date;
  /**
   * @member {string} popReceipt This value is required to delete the Message.
   * If deletion fails using this popreceipt then the message has been dequeued
   * by another client.
   */
  popReceipt: string;
  /**
   * @member {Date} timeNextVisible The time that the message will again become
   * visible in the Queue.
   */
  timeNextVisible: Date;
}

/**
 * @interface
 * An interface representing SignedIdentifier.
 * signed identifier
 *
 */
export interface SignedIdentifier {
  /**
   * @member {string} id a unique id
   */
  id: string;
  /**
   * @member {AccessPolicy} accessPolicy The access policy
   */
  accessPolicy: AccessPolicy;
}

/**
 * @interface
 * An interface representing StorageServiceProperties.
 * Storage Service Properties.
 *
 */
export interface StorageServiceProperties {
  /**
   * @member {Logging} [logging] Azure Analytics Logging settings
   */
  logging?: Logging;
  /**
   * @member {Metrics} [hourMetrics] A summary of request statistics grouped by
   * API in hourly aggregates for queues
   */
  hourMetrics?: Metrics;
  /**
   * @member {Metrics} [minuteMetrics] a summary of request statistics grouped
   * by API in minute aggregates for queues
   */
  minuteMetrics?: Metrics;
  /**
   * @member {CorsRule[]} [cors] The set of CORS rules.
   */
  cors?: CorsRule[];
}

/**
 * @interface
 * An interface representing StorageServiceStats.
 * Stats for the storage service.
 *
 */
export interface StorageServiceStats {
  /**
   * @member {GeoReplication} [geoReplication] Geo-Replication information for
   * the Secondary Storage Service
   */
  geoReplication?: GeoReplication;
}

/**
 * @interface
 * An interface representing ServiceSetPropertiesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ServiceSetPropertiesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [timeoutParameter] The The timeout parameter is expressed
   * in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/setting-timeouts-for-queue-service-operations>Setting
   * Timeouts for Queue Service Operations.</a>
   */
  timeoutParameter?: number;
  /**
   * @member {string} [requestId] Provides a client-generated, opaque value
   * with a 1 KB character limit that is recorded in the analytics logs when
   * storage analytics logging is enabled.
   */
  requestId?: string;
}

/**
 * @interface
 * An interface representing ServiceGetPropertiesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ServiceGetPropertiesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [timeoutParameter] The The timeout parameter is expressed
   * in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/setting-timeouts-for-queue-service-operations>Setting
   * Timeouts for Queue Service Operations.</a>
   */
  timeoutParameter?: number;
  /**
   * @member {string} [requestId] Provides a client-generated, opaque value
   * with a 1 KB character limit that is recorded in the analytics logs when
   * storage analytics logging is enabled.
   */
  requestId?: string;
}

/**
 * @interface
 * An interface representing ServiceGetStatisticsOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ServiceGetStatisticsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [timeoutParameter] The The timeout parameter is expressed
   * in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/setting-timeouts-for-queue-service-operations>Setting
   * Timeouts for Queue Service Operations.</a>
   */
  timeoutParameter?: number;
  /**
   * @member {string} [requestId] Provides a client-generated, opaque value
   * with a 1 KB character limit that is recorded in the analytics logs when
   * storage analytics logging is enabled.
   */
  requestId?: string;
}

/**
 * @interface
 * An interface representing ServiceListQueuesSegmentOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ServiceListQueuesSegmentOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [prefix] Filters the results to return only queues whose
   * name begins with the specified prefix.
   */
  prefix?: string;
  /**
   * @member {string} [marker] A string value that identifies the portion of
   * the list of queues to be returned with the next listing operation. The
   * operation returns the NextMarker value within the response body if the
   * listing operation did not return all queues remaining to be listed with
   * the current page. The NextMarker value can be used as the value for the
   * marker parameter in a subsequent call to request the next page of list
   * items. The marker value is opaque to the client.
   */
  marker?: string;
  /**
   * @member {number} [maxresults] Specifies the maximum number of queues to
   * return. If the request does not specify maxresults, or specifies a value
   * greater than 5000, the server will return up to 5000 items. Note that if
   * the listing operation crosses a partition boundary, then the service will
   * return a continuation token for retrieving the remainder of the results.
   * For this reason, it is possible that the service will return fewer results
   * than specified by maxresults, or than the default of 5000.
   */
  maxresults?: number;
  /**
   * @member {ListQueuesIncludeType} [include] Include this parameter to
   * specify that the queues's metadata be returned as part of the response
   * body. Possible values include: 'metadata'
   */
  include?: ListQueuesIncludeType;
  /**
   * @member {number} [timeoutParameter] The The timeout parameter is expressed
   * in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/setting-timeouts-for-queue-service-operations>Setting
   * Timeouts for Queue Service Operations.</a>
   */
  timeoutParameter?: number;
  /**
   * @member {string} [requestId] Provides a client-generated, opaque value
   * with a 1 KB character limit that is recorded in the analytics logs when
   * storage analytics logging is enabled.
   */
  requestId?: string;
}

/**
 * @interface
 * An interface representing QueueCreateOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface QueueCreateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [timeoutParameter] The The timeout parameter is expressed
   * in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/setting-timeouts-for-queue-service-operations>Setting
   * Timeouts for Queue Service Operations.</a>
   */
  timeoutParameter?: number;
  /**
   * @member {{ [propertyName: string]: string }} [metadata] Optional. Include
   * this parameter to specify that the queue's metadata be returned as part of
   * the response body. Note that metadata requested with this parameter must
   * be stored in accordance with the naming restrictions imposed by the
   * 2009-09-19 version of the Queue service. Beginning with this version, all
   * metadata names must adhere to the naming conventions for C# identifiers.
   */
  metadata?: { [propertyName: string]: string };
  /**
   * @member {string} [requestId] Provides a client-generated, opaque value
   * with a 1 KB character limit that is recorded in the analytics logs when
   * storage analytics logging is enabled.
   */
  requestId?: string;
}

/**
 * @interface
 * An interface representing QueueDeleteMethodOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface QueueDeleteMethodOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [timeoutParameter] The The timeout parameter is expressed
   * in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/setting-timeouts-for-queue-service-operations>Setting
   * Timeouts for Queue Service Operations.</a>
   */
  timeoutParameter?: number;
  /**
   * @member {string} [requestId] Provides a client-generated, opaque value
   * with a 1 KB character limit that is recorded in the analytics logs when
   * storage analytics logging is enabled.
   */
  requestId?: string;
}

/**
 * @interface
 * An interface representing QueueGetPropertiesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface QueueGetPropertiesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [timeoutParameter] The The timeout parameter is expressed
   * in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/setting-timeouts-for-queue-service-operations>Setting
   * Timeouts for Queue Service Operations.</a>
   */
  timeoutParameter?: number;
  /**
   * @member {string} [requestId] Provides a client-generated, opaque value
   * with a 1 KB character limit that is recorded in the analytics logs when
   * storage analytics logging is enabled.
   */
  requestId?: string;
}

/**
 * @interface
 * An interface representing QueueSetMetadataOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface QueueSetMetadataOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [timeoutParameter] The The timeout parameter is expressed
   * in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/setting-timeouts-for-queue-service-operations>Setting
   * Timeouts for Queue Service Operations.</a>
   */
  timeoutParameter?: number;
  /**
   * @member {{ [propertyName: string]: string }} [metadata] Optional. Include
   * this parameter to specify that the queue's metadata be returned as part of
   * the response body. Note that metadata requested with this parameter must
   * be stored in accordance with the naming restrictions imposed by the
   * 2009-09-19 version of the Queue service. Beginning with this version, all
   * metadata names must adhere to the naming conventions for C# identifiers.
   */
  metadata?: { [propertyName: string]: string };
  /**
   * @member {string} [requestId] Provides a client-generated, opaque value
   * with a 1 KB character limit that is recorded in the analytics logs when
   * storage analytics logging is enabled.
   */
  requestId?: string;
}

/**
 * @interface
 * An interface representing QueueGetAccessPolicyOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface QueueGetAccessPolicyOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [timeoutParameter] The The timeout parameter is expressed
   * in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/setting-timeouts-for-queue-service-operations>Setting
   * Timeouts for Queue Service Operations.</a>
   */
  timeoutParameter?: number;
  /**
   * @member {string} [requestId] Provides a client-generated, opaque value
   * with a 1 KB character limit that is recorded in the analytics logs when
   * storage analytics logging is enabled.
   */
  requestId?: string;
}

/**
 * @interface
 * An interface representing QueueSetAccessPolicyOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface QueueSetAccessPolicyOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {SignedIdentifier[]} [queueAcl] the acls for the queue
   */
  queueAcl?: SignedIdentifier[];
  /**
   * @member {number} [timeoutParameter] The The timeout parameter is expressed
   * in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/setting-timeouts-for-queue-service-operations>Setting
   * Timeouts for Queue Service Operations.</a>
   */
  timeoutParameter?: number;
  /**
   * @member {string} [requestId] Provides a client-generated, opaque value
   * with a 1 KB character limit that is recorded in the analytics logs when
   * storage analytics logging is enabled.
   */
  requestId?: string;
}

/**
 * @interface
 * An interface representing MessagesDequeueOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface MessagesDequeueOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [numberOfMessages] Optional. A nonzero integer value that
   * specifies the number of messages to retrieve from the queue, up to a
   * maximum of 32. If fewer are visible, the visible messages are returned. By
   * default, a single message is retrieved from the queue with this operation.
   */
  numberOfMessages?: number;
  /**
   * @member {number} [visibilitytimeout] Optional. Specifies the new
   * visibility timeout value, in seconds, relative to server time. The default
   * value is 30 seconds. A specified value must be larger than or equal to 1
   * second, and cannot be larger than 7 days, or larger than 2 hours on REST
   * protocol versions prior to version 2011-08-18. The visibility timeout of a
   * message can be set to a value later than the expiry time.
   */
  visibilitytimeout?: number;
  /**
   * @member {number} [timeoutParameter] The The timeout parameter is expressed
   * in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/setting-timeouts-for-queue-service-operations>Setting
   * Timeouts for Queue Service Operations.</a>
   */
  timeoutParameter?: number;
  /**
   * @member {string} [requestId] Provides a client-generated, opaque value
   * with a 1 KB character limit that is recorded in the analytics logs when
   * storage analytics logging is enabled.
   */
  requestId?: string;
}

/**
 * @interface
 * An interface representing MessagesClearOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface MessagesClearOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [timeoutParameter] The The timeout parameter is expressed
   * in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/setting-timeouts-for-queue-service-operations>Setting
   * Timeouts for Queue Service Operations.</a>
   */
  timeoutParameter?: number;
  /**
   * @member {string} [requestId] Provides a client-generated, opaque value
   * with a 1 KB character limit that is recorded in the analytics logs when
   * storage analytics logging is enabled.
   */
  requestId?: string;
}

/**
 * @interface
 * An interface representing MessagesEnqueueOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface MessagesEnqueueOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [visibilitytimeout] Optional. Specifies the new
   * visibility timeout value, in seconds, relative to server time. The default
   * value is 30 seconds. A specified value must be larger than or equal to 1
   * second, and cannot be larger than 7 days, or larger than 2 hours on REST
   * protocol versions prior to version 2011-08-18. The visibility timeout of a
   * message can be set to a value later than the expiry time.
   */
  visibilitytimeout?: number;
  /**
   * @member {number} [messageTimeToLive] Optional. Specifies the time-to-live
   * interval for the message, in seconds. Prior to version 2017-07-29, the
   * maximum time-to-live allowed is 7 days. For version 2017-07-29 or later,
   * the maximum time-to-live can be any positive number, as well as -1
   * indicating that the message does not expire. If this parameter is omitted,
   * the default time-to-live is 7 days.
   */
  messageTimeToLive?: number;
  /**
   * @member {number} [timeoutParameter] The The timeout parameter is expressed
   * in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/setting-timeouts-for-queue-service-operations>Setting
   * Timeouts for Queue Service Operations.</a>
   */
  timeoutParameter?: number;
  /**
   * @member {string} [requestId] Provides a client-generated, opaque value
   * with a 1 KB character limit that is recorded in the analytics logs when
   * storage analytics logging is enabled.
   */
  requestId?: string;
}

/**
 * @interface
 * An interface representing MessagesPeekOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface MessagesPeekOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [numberOfMessages] Optional. A nonzero integer value that
   * specifies the number of messages to retrieve from the queue, up to a
   * maximum of 32. If fewer are visible, the visible messages are returned. By
   * default, a single message is retrieved from the queue with this operation.
   */
  numberOfMessages?: number;
  /**
   * @member {number} [timeoutParameter] The The timeout parameter is expressed
   * in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/setting-timeouts-for-queue-service-operations>Setting
   * Timeouts for Queue Service Operations.</a>
   */
  timeoutParameter?: number;
  /**
   * @member {string} [requestId] Provides a client-generated, opaque value
   * with a 1 KB character limit that is recorded in the analytics logs when
   * storage analytics logging is enabled.
   */
  requestId?: string;
}

/**
 * @interface
 * An interface representing MessageIdUpdateOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface MessageIdUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [timeoutParameter] The The timeout parameter is expressed
   * in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/setting-timeouts-for-queue-service-operations>Setting
   * Timeouts for Queue Service Operations.</a>
   */
  timeoutParameter?: number;
  /**
   * @member {string} [requestId] Provides a client-generated, opaque value
   * with a 1 KB character limit that is recorded in the analytics logs when
   * storage analytics logging is enabled.
   */
  requestId?: string;
}

/**
 * @interface
 * An interface representing MessageIdDeleteMethodOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface MessageIdDeleteMethodOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [timeoutParameter] The The timeout parameter is expressed
   * in seconds. For more information, see <a
   * href="https://docs.microsoft.com/en-us/rest/api/storageservices/setting-timeouts-for-queue-service-operations>Setting
   * Timeouts for Queue Service Operations.</a>
   */
  timeoutParameter?: number;
  /**
   * @member {string} [requestId] Provides a client-generated, opaque value
   * with a 1 KB character limit that is recorded in the analytics logs when
   * storage analytics logging is enabled.
   */
  requestId?: string;
}

/**
 * @interface
 * An interface representing ServiceSetPropertiesHeaders.
 * Defines headers for SetProperties operation.
 *
 */
export interface ServiceSetPropertiesHeaders {
  /**
   * @member {string} [requestId] This header uniquely identifies the request
   * that was made and can be used for troubleshooting the request.
   */
  requestId?: string;
  /**
   * @member {string} [version] Indicates the version of the Queue service used
   * to execute the request. This header is returned for requests made against
   * version 2009-09-19 and above.
   */
  version?: string;
  /**
   * @member {string} [errorCode]
   */
  errorCode?: string;
}

/**
 * @interface
 * An interface representing ServiceGetPropertiesHeaders.
 * Defines headers for GetProperties operation.
 *
 */
export interface ServiceGetPropertiesHeaders {
  /**
   * @member {string} [requestId] This header uniquely identifies the request
   * that was made and can be used for troubleshooting the request.
   */
  requestId?: string;
  /**
   * @member {string} [version] Indicates the version of the Queue service used
   * to execute the request. This header is returned for requests made against
   * version 2009-09-19 and above.
   */
  version?: string;
  /**
   * @member {string} [errorCode]
   */
  errorCode?: string;
}

/**
 * @interface
 * An interface representing ServiceGetStatisticsHeaders.
 * Defines headers for GetStatistics operation.
 *
 */
export interface ServiceGetStatisticsHeaders {
  /**
   * @member {string} [requestId] This header uniquely identifies the request
   * that was made and can be used for troubleshooting the request.
   */
  requestId?: string;
  /**
   * @member {string} [version] Indicates the version of the Queue service used
   * to execute the request. This header is returned for requests made against
   * version 2009-09-19 and above.
   */
  version?: string;
  /**
   * @member {Date} [date] UTC date/time value generated by the service that
   * indicates the time at which the response was initiated
   */
  date?: Date;
  /**
   * @member {string} [errorCode]
   */
  errorCode?: string;
}

/**
 * @interface
 * An interface representing ServiceListQueuesSegmentHeaders.
 * Defines headers for ListQueuesSegment operation.
 *
 */
export interface ServiceListQueuesSegmentHeaders {
  /**
   * @member {string} [requestId] This header uniquely identifies the request
   * that was made and can be used for troubleshooting the request.
   */
  requestId?: string;
  /**
   * @member {string} [version] Indicates the version of the Queue service used
   * to execute the request. This header is returned for requests made against
   * version 2009-09-19 and above.
   */
  version?: string;
  /**
   * @member {Date} [date] UTC date/time value generated by the service that
   * indicates the time at which the response was initiated
   */
  date?: Date;
  /**
   * @member {string} [errorCode]
   */
  errorCode?: string;
}

/**
 * @interface
 * An interface representing QueueCreateHeaders.
 * Defines headers for Create operation.
 *
 */
export interface QueueCreateHeaders {
  /**
   * @member {string} [requestId] This header uniquely identifies the request
   * that was made and can be used for troubleshooting the request.
   */
  requestId?: string;
  /**
   * @member {string} [version] Indicates the version of the Queue service used
   * to execute the request. This header is returned for requests made against
   * version 2009-09-19 and above.
   */
  version?: string;
  /**
   * @member {Date} [date] UTC date/time value generated by the service that
   * indicates the time at which the response was initiated
   */
  date?: Date;
  /**
   * @member {string} [errorCode]
   */
  errorCode?: string;
}

/**
 * @interface
 * An interface representing QueueDeleteHeaders.
 * Defines headers for Delete operation.
 *
 */
export interface QueueDeleteHeaders {
  /**
   * @member {string} [requestId] This header uniquely identifies the request
   * that was made and can be used for troubleshooting the request.
   */
  requestId?: string;
  /**
   * @member {string} [version] Indicates the version of the Queue service used
   * to execute the request. This header is returned for requests made against
   * version 2009-09-19 and above.
   */
  version?: string;
  /**
   * @member {Date} [date] UTC date/time value generated by the service that
   * indicates the time at which the response was initiated
   */
  date?: Date;
  /**
   * @member {string} [errorCode]
   */
  errorCode?: string;
}

/**
 * @interface
 * An interface representing QueueGetPropertiesHeaders.
 * Defines headers for GetProperties operation.
 *
 */
export interface QueueGetPropertiesHeaders {
  /**
   * @member {{ [propertyName: string]: string }} [metadata]
   */
  metadata?: { [propertyName: string]: string };
  /**
   * @member {number} [approximateMessagesCount] The approximate number of
   * messages in the queue. This number is not lower than the actual number of
   * messages in the queue, but could be higher.
   */
  approximateMessagesCount?: number;
  /**
   * @member {string} [requestId] This header uniquely identifies the request
   * that was made and can be used for troubleshooting the request.
   */
  requestId?: string;
  /**
   * @member {string} [version] Indicates the version of the Queue service used
   * to execute the request. This header is returned for requests made against
   * version 2009-09-19 and above.
   */
  version?: string;
  /**
   * @member {Date} [date] UTC date/time value generated by the service that
   * indicates the time at which the response was initiated
   */
  date?: Date;
  /**
   * @member {string} [errorCode]
   */
  errorCode?: string;
}

/**
 * @interface
 * An interface representing QueueSetMetadataHeaders.
 * Defines headers for SetMetadata operation.
 *
 */
export interface QueueSetMetadataHeaders {
  /**
   * @member {string} [requestId] This header uniquely identifies the request
   * that was made and can be used for troubleshooting the request.
   */
  requestId?: string;
  /**
   * @member {string} [version] Indicates the version of the Queue service used
   * to execute the request. This header is returned for requests made against
   * version 2009-09-19 and above.
   */
  version?: string;
  /**
   * @member {Date} [date] UTC date/time value generated by the service that
   * indicates the time at which the response was initiated
   */
  date?: Date;
  /**
   * @member {string} [errorCode]
   */
  errorCode?: string;
}

/**
 * @interface
 * An interface representing QueueGetAccessPolicyHeaders.
 * Defines headers for GetAccessPolicy operation.
 *
 */
export interface QueueGetAccessPolicyHeaders {
  /**
   * @member {string} [requestId] This header uniquely identifies the request
   * that was made and can be used for troubleshooting the request.
   */
  requestId?: string;
  /**
   * @member {string} [version] Indicates the version of the Queue service used
   * to execute the request. This header is returned for requests made against
   * version 2009-09-19 and above.
   */
  version?: string;
  /**
   * @member {Date} [date] UTC date/time value generated by the service that
   * indicates the time at which the response was initiated
   */
  date?: Date;
  /**
   * @member {string} [errorCode]
   */
  errorCode?: string;
}

/**
 * @interface
 * An interface representing QueueSetAccessPolicyHeaders.
 * Defines headers for SetAccessPolicy operation.
 *
 */
export interface QueueSetAccessPolicyHeaders {
  /**
   * @member {string} [requestId] This header uniquely identifies the request
   * that was made and can be used for troubleshooting the request.
   */
  requestId?: string;
  /**
   * @member {string} [version] Indicates the version of the Queue service used
   * to execute the request. This header is returned for requests made against
   * version 2009-09-19 and above.
   */
  version?: string;
  /**
   * @member {Date} [date] UTC date/time value generated by the service that
   * indicates the time at which the response was initiated
   */
  date?: Date;
  /**
   * @member {string} [errorCode]
   */
  errorCode?: string;
}

/**
 * @interface
 * An interface representing MessagesDequeueHeaders.
 * Defines headers for Dequeue operation.
 *
 */
export interface MessagesDequeueHeaders {
  /**
   * @member {string} [requestId] This header uniquely identifies the request
   * that was made and can be used for troubleshooting the request.
   */
  requestId?: string;
  /**
   * @member {string} [version] Indicates the version of the Queue service used
   * to execute the request. This header is returned for requests made against
   * version 2009-09-19 and above.
   */
  version?: string;
  /**
   * @member {Date} [date] UTC date/time value generated by the service that
   * indicates the time at which the response was initiated
   */
  date?: Date;
  /**
   * @member {string} [errorCode]
   */
  errorCode?: string;
}

/**
 * @interface
 * An interface representing MessagesClearHeaders.
 * Defines headers for Clear operation.
 *
 */
export interface MessagesClearHeaders {
  /**
   * @member {string} [requestId] This header uniquely identifies the request
   * that was made and can be used for troubleshooting the request.
   */
  requestId?: string;
  /**
   * @member {string} [version] Indicates the version of the Queue service used
   * to execute the request. This header is returned for requests made against
   * version 2009-09-19 and above.
   */
  version?: string;
  /**
   * @member {Date} [date] UTC date/time value generated by the service that
   * indicates the time at which the response was initiated
   */
  date?: Date;
  /**
   * @member {string} [errorCode]
   */
  errorCode?: string;
}

/**
 * @interface
 * An interface representing MessagesEnqueueHeaders.
 * Defines headers for Enqueue operation.
 *
 */
export interface MessagesEnqueueHeaders {
  /**
   * @member {string} [requestId] This header uniquely identifies the request
   * that was made and can be used for troubleshooting the request.
   */
  requestId?: string;
  /**
   * @member {string} [version] Indicates the version of the Queue service used
   * to execute the request. This header is returned for requests made against
   * version 2009-09-19 and above.
   */
  version?: string;
  /**
   * @member {Date} [date] UTC date/time value generated by the service that
   * indicates the time at which the response was initiated
   */
  date?: Date;
  /**
   * @member {string} [errorCode]
   */
  errorCode?: string;
}

/**
 * @interface
 * An interface representing MessagesPeekHeaders.
 * Defines headers for Peek operation.
 *
 */
export interface MessagesPeekHeaders {
  /**
   * @member {string} [requestId] This header uniquely identifies the request
   * that was made and can be used for troubleshooting the request.
   */
  requestId?: string;
  /**
   * @member {string} [version] Indicates the version of the Queue service used
   * to execute the request. This header is returned for requests made against
   * version 2009-09-19 and above.
   */
  version?: string;
  /**
   * @member {Date} [date] UTC date/time value generated by the service that
   * indicates the time at which the response was initiated
   */
  date?: Date;
  /**
   * @member {string} [errorCode]
   */
  errorCode?: string;
}

/**
 * @interface
 * An interface representing MessageIdUpdateHeaders.
 * Defines headers for Update operation.
 *
 */
export interface MessageIdUpdateHeaders {
  /**
   * @member {string} [requestId] This header uniquely identifies the request
   * that was made and can be used for troubleshooting the request.
   */
  requestId?: string;
  /**
   * @member {string} [version] Indicates the version of the Queue service used
   * to execute the request. This header is returned for requests made against
   * version 2009-09-19 and above.
   */
  version?: string;
  /**
   * @member {Date} [date] UTC date/time value generated by the service that
   * indicates the time at which the response was initiated
   */
  date?: Date;
  /**
   * @member {string} [popReceipt] The pop receipt of the queue message.
   */
  popReceipt?: string;
  /**
   * @member {Date} [timeNextVisible] A UTC date/time value that represents
   * when the message will be visible on the queue.
   */
  timeNextVisible?: Date;
  /**
   * @member {string} [errorCode]
   */
  errorCode?: string;
}

/**
 * @interface
 * An interface representing MessageIdDeleteHeaders.
 * Defines headers for Delete operation.
 *
 */
export interface MessageIdDeleteHeaders {
  /**
   * @member {string} [requestId] This header uniquely identifies the request
   * that was made and can be used for troubleshooting the request.
   */
  requestId?: string;
  /**
   * @member {string} [version] Indicates the version of the Queue service used
   * to execute the request. This header is returned for requests made against
   * version 2009-09-19 and above.
   */
  version?: string;
  /**
   * @member {Date} [date] UTC date/time value generated by the service that
   * indicates the time at which the response was initiated
   */
  date?: Date;
  /**
   * @member {string} [errorCode]
   */
  errorCode?: string;
}

/**
 * Defines values for StorageErrorCode.
 * Possible values include: 'AccountAlreadyExists', 'AccountBeingCreated', 'AccountIsDisabled',
 * 'AuthenticationFailed', 'ConditionHeadersNotSupported', 'ConditionNotMet', 'EmptyMetadataKey',
 * 'InsufficientAccountPermissions', 'InternalError', 'InvalidAuthenticationInfo',
 * 'InvalidHeaderValue', 'InvalidHttpVerb', 'InvalidInput', 'InvalidMd5', 'InvalidMetadata',
 * 'InvalidQueryParameterValue', 'InvalidRange', 'InvalidResourceName', 'InvalidUri',
 * 'InvalidXmlDocument', 'InvalidXmlNodeValue', 'Md5Mismatch', 'MetadataTooLarge',
 * 'MissingContentLengthHeader', 'MissingRequiredQueryParameter', 'MissingRequiredHeader',
 * 'MissingRequiredXmlNode', 'MultipleConditionHeadersNotSupported', 'OperationTimedOut',
 * 'OutOfRangeInput', 'OutOfRangeQueryParameterValue', 'RequestBodyTooLarge',
 * 'ResourceTypeMismatch', 'RequestUrlFailedToParse', 'ResourceAlreadyExists', 'ResourceNotFound',
 * 'ServerBusy', 'UnsupportedHeader', 'UnsupportedXmlNode', 'UnsupportedQueryParameter',
 * 'UnsupportedHttpVerb', 'InvalidMarker', 'MessageNotFound', 'MessageTooLarge',
 * 'PopReceiptMismatch', 'QueueAlreadyExists', 'QueueBeingDeleted', 'QueueDisabled',
 * 'QueueNotEmpty', 'QueueNotFound'
 * @readonly
 * @enum {string}
 */
export type StorageErrorCode = 'AccountAlreadyExists' | 'AccountBeingCreated' | 'AccountIsDisabled' | 'AuthenticationFailed' | 'ConditionHeadersNotSupported' | 'ConditionNotMet' | 'EmptyMetadataKey' | 'InsufficientAccountPermissions' | 'InternalError' | 'InvalidAuthenticationInfo' | 'InvalidHeaderValue' | 'InvalidHttpVerb' | 'InvalidInput' | 'InvalidMd5' | 'InvalidMetadata' | 'InvalidQueryParameterValue' | 'InvalidRange' | 'InvalidResourceName' | 'InvalidUri' | 'InvalidXmlDocument' | 'InvalidXmlNodeValue' | 'Md5Mismatch' | 'MetadataTooLarge' | 'MissingContentLengthHeader' | 'MissingRequiredQueryParameter' | 'MissingRequiredHeader' | 'MissingRequiredXmlNode' | 'MultipleConditionHeadersNotSupported' | 'OperationTimedOut' | 'OutOfRangeInput' | 'OutOfRangeQueryParameterValue' | 'RequestBodyTooLarge' | 'ResourceTypeMismatch' | 'RequestUrlFailedToParse' | 'ResourceAlreadyExists' | 'ResourceNotFound' | 'ServerBusy' | 'UnsupportedHeader' | 'UnsupportedXmlNode' | 'UnsupportedQueryParameter' | 'UnsupportedHttpVerb' | 'InvalidMarker' | 'MessageNotFound' | 'MessageTooLarge' | 'PopReceiptMismatch' | 'QueueAlreadyExists' | 'QueueBeingDeleted' | 'QueueDisabled' | 'QueueNotEmpty' | 'QueueNotFound';

/**
 * Defines values for GeoReplicationStatusType.
 * Possible values include: 'live', 'bootstrap', 'unavailable'
 * @readonly
 * @enum {string}
 */
export type GeoReplicationStatusType = 'live' | 'bootstrap' | 'unavailable';

/**
 * Defines values for ListQueuesIncludeType.
 * Possible values include: 'metadata'
 * @readonly
 * @enum {string}
 */
export type ListQueuesIncludeType = 'metadata';

/**
 * Contains response data for the setProperties operation.
 */
export type ServiceSetPropertiesResponse = ServiceSetPropertiesHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ServiceSetPropertiesHeaders;
    };
};

/**
 * Contains response data for the getProperties operation.
 */
export type ServiceGetPropertiesResponse = StorageServiceProperties & ServiceGetPropertiesHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ServiceGetPropertiesHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StorageServiceProperties;
    };
};

/**
 * Contains response data for the getStatistics operation.
 */
export type ServiceGetStatisticsResponse = StorageServiceStats & ServiceGetStatisticsHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ServiceGetStatisticsHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StorageServiceStats;
    };
};

/**
 * Contains response data for the listQueuesSegment operation.
 */
export type ServiceListQueuesSegmentResponse = ListQueuesSegmentResponse & ServiceListQueuesSegmentHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ServiceListQueuesSegmentHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ListQueuesSegmentResponse;
    };
};

/**
 * Contains response data for the create operation.
 */
export type QueueCreateResponse = QueueCreateHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: QueueCreateHeaders;
    };
};

/**
 * Contains response data for the deleteMethod operation.
 */
export type QueueDeleteResponse = QueueDeleteHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: QueueDeleteHeaders;
    };
};

/**
 * Contains response data for the getProperties operation.
 */
export type QueueGetPropertiesResponse = QueueGetPropertiesHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: QueueGetPropertiesHeaders;
    };
};

/**
 * Contains response data for the setMetadata operation.
 */
export type QueueSetMetadataResponse = QueueSetMetadataHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: QueueSetMetadataHeaders;
    };
};

/**
 * Contains response data for the getAccessPolicy operation.
 */
export type QueueGetAccessPolicyResponse = Array<SignedIdentifier> & QueueGetAccessPolicyHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: QueueGetAccessPolicyHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SignedIdentifier[];
    };
};

/**
 * Contains response data for the setAccessPolicy operation.
 */
export type QueueSetAccessPolicyResponse = QueueSetAccessPolicyHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: QueueSetAccessPolicyHeaders;
    };
};

/**
 * Contains response data for the dequeue operation.
 */
export type MessagesDequeueResponse = Array<DequeuedMessageItem> & MessagesDequeueHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: MessagesDequeueHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DequeuedMessageItem[];
    };
};

/**
 * Contains response data for the clear operation.
 */
export type MessagesClearResponse = MessagesClearHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: MessagesClearHeaders;
    };
};

/**
 * Contains response data for the enqueue operation.
 */
export type MessagesEnqueueResponse = Array<EnqueuedMessage> & MessagesEnqueueHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: MessagesEnqueueHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EnqueuedMessage[];
    };
};

/**
 * Contains response data for the peek operation.
 */
export type MessagesPeekResponse = Array<PeekedMessageItem> & MessagesPeekHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: MessagesPeekHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PeekedMessageItem[];
    };
};

/**
 * Contains response data for the update operation.
 */
export type MessageIdUpdateResponse = MessageIdUpdateHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: MessageIdUpdateHeaders;
    };
};

/**
 * Contains response data for the deleteMethod operation.
 */
export type MessageIdDeleteResponse = MessageIdDeleteHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: MessageIdDeleteHeaders;
    };
};
