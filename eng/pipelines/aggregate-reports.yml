trigger: none

pr:
  branches:
    include:
      - main
  paths:
    include:
      - eng/pipelines/aggregate-reports.yml

pool:
  vmImage: 'windows-2019'

stages:
  - stage: AggregateReports
    displayName: Aggregate Reports

    jobs:
      - job: GenerateReports
        timeoutInMinutes: 120
        steps:
          - task: NodeTool@0
            displayName: 'Use Node 10.x'
            inputs:
              versionSpec: 10.x

          - task: PowerShell@2
            inputs:
              targetType: filePath
              filePath: eng/scripts/spell-check-public-api.ps1
              pwsh: true
            displayName: Check spelling of public API surface
            # Spelling errors in public api surface are not blockers yet but will
            # become blockers when this is rolled out to all services. For now, turn
            # the pipeline yellow if spelling errors are detected but do not block.
            continueOnError: true

          - template: ../common/pipelines/templates/steps/verify-links.yml
            parameters:
              Directory: ""
              CheckLinkGuidance: $true
              Condition: succeededOrFailed()

          - script: 'npm ci'
            workingDirectory: '$(Build.SourcesDirectory)/eng/tools/analyze-deps'
            displayName: 'Install tool dependencies'

          - script: |
              node index.js --verbose --out "$(Build.ArtifactStagingDirectory)/dependencies.html" --dump "$(Build.ArtifactStagingDirectory)/data.js"
            workingDirectory: '$(Build.SourcesDirectory)/eng/tools/analyze-deps'
            displayName: 'Validate dependencies'

          - pwsh: |
              copy eng/common/InterdependencyGraph.html $(Build.ArtifactStagingDirectory)
            displayName: 'Copy static file'

          - task: AzureFileCopy@3
            displayName: 'Upload dependency report'
            inputs:
              sourcePath: '$(Build.ArtifactStagingDirectory)'
              azureSubscription: 'Azure SDK Artifacts'
              destination: AzureBlob
              storage: azuresdkartifacts
              containerName: 'azure-sdk-for-js'
              blobPrefix: dependencies

          - task: PowerShell@2
            displayName: "Verify Repository Resource Refs"
            inputs:
              pwsh: true
              workingDirectory: $(Build.SourcesDirectory)
              filePath: eng/common/scripts/Verify-Resource-Ref.ps1

  - stage: ComplianceTools
    displayName: Compliance Tools
    dependsOn: []

    jobs:
      - job: ComplianceTools
        timeoutInMinutes: 120
        steps:
          - template: /eng/common/pipelines/templates/steps/policheck.yml
            parameters:
              ExclusionDataBaseFileName: "JavaScriptPoliCheckExclusion"
              PublishAnalysisLogs: false

          - task: securedevelopmentteam.vss-secure-development-tools.build-task-credscan.CredScan@3
            displayName: 'Run CredScan'
            condition: succeededOrFailed()
            inputs:
              suppressionsFile: 'eng\CredScanSuppression.json'

          - task: securedevelopmentteam.vss-secure-development-tools.build-task-postanalysis.PostAnalysis@2
            displayName: 'Post Analysis (CredScan)'
            inputs:
              GdnBreakAllTools: false
              GdnBreakGdnToolCredScan: true
              GdnBreakGdnToolCredScanSeverity: Error
              # Specify baseline file input to scan tool
              # GdnBreakBaselineFiles: $(Build.SourcesDirectory)\eng\js.gdnbaselines
              GdnBreakBaselines: baseline  
              # Used for generating baseline file.
              # GdnBreakOutputBaselineFile: js
              # GdnBreakOutputBaseline: baseline
            continueOnError: true

          - task: securedevelopmentteam.vss-secure-development-tools.build-task-publishsecurityanalysislogs.PublishSecurityAnalysisLogs@3
            displayName: 'Publish Security Analysis Logs'
            condition: succeededOrFailed()
