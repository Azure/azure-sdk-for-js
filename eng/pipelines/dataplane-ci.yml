trigger:
  branches:
    include:
      - main
  paths:
    include:
    - eng/pipelines/mgmt-pr.yml    
    - sdk/applicationinsights/applicationinsights-query
    - sdk/batch/batch
    - sdk/cognitiveservices/cognitiveservices-anomalydetector
    - sdk/cognitiveservices/cognitiveservices-autosuggest
    - sdk/cognitiveservices/cognitiveservices-computervision
    - sdk/cognitiveservices/cognitiveservices-contentmoderator
    - sdk/cognitiveservices/cognitiveservices-customimagesearch
    - sdk/cognitiveservices/cognitiveservices-customsearch
    - sdk/cognitiveservices/cognitiveservices-customvision-prediction
    - sdk/cognitiveservices/cognitiveservices-customvision-training
    - sdk/cognitiveservices/cognitiveservices-entitysearch
    - sdk/cognitiveservices/cognitiveservices-face
    - sdk/cognitiveservices/cognitiveservices-formrecognizer
    - sdk/cognitiveservices/cognitiveservices-imagesearch
    - sdk/cognitiveservices/cognitiveservices-localsearch
    - sdk/cognitiveservices/cognitiveservices-luis-authoring
    - sdk/cognitiveservices/cognitiveservices-luis-runtime
    - sdk/cognitiveservices/cognitiveservices-newssearch
    - sdk/cognitiveservices/cognitiveservices-personalizer
    - sdk/cognitiveservices/cognitiveservices-qnamaker
    - sdk/cognitiveservices/cognitiveservices-qnamaker-runtime
    - sdk/cognitiveservices/cognitiveservices-spellcheck
    - sdk/cognitiveservices/cognitiveservices-textanalytics
    - sdk/cognitiveservices/cognitiveservices-translatortext
    - sdk/cognitiveservices/cognitiveservices-videosearch
    - sdk/cognitiveservices/cognitiveservices-visualsearch
    - sdk/cognitiveservices/cognitiveservices-websearch
    - sdk/graphrbac/graph
    - sdk/operationalinsights/loganalytics
    - sdk/servicefabric/servicefabric
    - sdk/storage/storage-datalake

pr: none

variables:
  NodeVersion: '10.x'

jobs:
  - job: 'Build'

    pool:
      vmImage: 'Ubuntu 20.04'

    steps:
      - task: NodeTool@0
        inputs:
          versionSpec: '$(NodeVersion)'
        displayName: 'Install Node.js $(NodeVersion)'

      - task: Npm@1
        displayName: 'npm install'
        inputs:
          verbose: false

      - script: 'gulp pack --base-reference=main --head-reference=main'
        displayName: 'gulp pack'

      - task: CopyFiles@2
        displayName: 'Copy Files to: drop'
        inputs:
          Contents: '*.tgz'
          TargetFolder: drop

      - task: PublishBuildArtifacts@1
        inputs:
          pathtoPublish: $(Build.SourcesDirectory)/drop

  - job: 'Analyze'

    pool:
      vmImage: 'Ubuntu 20.04'

    steps:
      - task: NodeTool@0
        inputs:
          versionSpec: '$(NodeVersion)'
        displayName: 'Install Node.js $(NodeVersion)'

      - task: Npm@1
        displayName: 'npm install'
        inputs:
          command: install

      - task: Npm@1
        displayName: 'npm audit'
        condition: and(succeeded(), eq(variables['RunNpmAudit'], 'true'))
        inputs:
          command: custom
          customCommand: 'audit'
