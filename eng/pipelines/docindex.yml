steps:
  - pwsh: |
      Invoke-WebRequest -Uri "https://github.com/dotnet/docfx/releases/download/v2.43.2/docfx.zip" `
      -OutFile "docfx.zip" | Wait-Process; Expand-Archive -Path "docfx.zip" -DestinationPath "./docfx/"
    workingDirectory: $(Build.BinariesDirectory)
    displayName: Download and Extract DocFX
  - task: PowerShell@2
    displayName: Provision DocFX Directory
    inputs:
      script: $(Build.BinariesDirectory)/docfx/docfx.exe init -q
      workingDirectory: $(Build.SourcesDirectory)
      failOnStderr: true
  - pwsh: New-Item -Path . -Name "templates" -ItemType "directory"
    displayName: Create Template Directory
    workingDirectory: $(Build.SourcesDirectory)/docfx_project/
  - task: CopyFiles@2
    displayName: Copy Template to templates folder
    inputs:
      sourceFolder: $(Build.SourcesDirectory)/tools/generate-static-index/static-files/templates
      content: '**\*'
      targetFolder: $(Build.SourcesDirectory)/docfx_project/templates
      overWrite: true
  - pwsh: ls
    workingDirectory: $(Build.SourcesDirectory)/docfx_project/
  - pwsh: ls
    workingDirectory: $(Build.SourcesDirectory)/docfx_project/templates
  - pwsh: |
      Copy-Item "$(Build.SourcesDirectory)/tools/generate-static-index/static-files/docfx.json" -Destination "$(Build.SourcesDirectory)/docfx_project/" -Force
    displayName: Copy over docfx.json

  - script: |
      npm install
    workingDirectory: $(System.DefaultWorkingDirectory)/eng/tools/generate-static-index
    displayName: "Install tool dependencies"

  - pwsh: |
      node $(Build.SourcesDirectory)/eng/tools/generate-static-index/index.js
    displayName: "Generate Index Toc"

  - pwsh: ls
    workingDirectory: $(Build.SourcesDirectory)/docfx_project/api
  - task: CmdLine@2
    displayName: Build Doc Content
    inputs:
      script: $(Build.BinariesDirectory)/docfx/docfx.exe build
      workingDirectory: $(Build.SourcesDirectory)/docfx_project/
      failOnStderr: true
  - pwsh: |
      Copy-Item "$(Build.SourcesDirectory)/tools/generate-static-index/static-files/assets/*" -Destination "$(Build.SourcesDirectory)/docfx_project/_site/" -Force
    displayName: Replace site assets
  - task: CopyFiles@2
    displayName: Copy HTML to Artifacts Directory
    inputs:
      sourceFolder: $(Build.SourcesDirectory)/docfx_project/
      content: '**\*'
      targetFolder: $(Build.ArtifactStagingDirectory)/docfx_project
      overWrite: true
  - task: PublishPipelineArtifact@0
    condition: succeeded()
    inputs:
      artifactName: "Doc.Index"
      targetPath: $(Build.ArtifactStagingDirectory)/docfx_project/_site