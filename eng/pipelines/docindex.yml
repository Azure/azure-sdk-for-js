trigger: none

jobs:
  - template: /eng/common/pipelines/templates/jobs/docindex.yml

  - job: UpdateDocsMsBuildConfig
    pool:
      vmImage: ubuntu-20.04
    variables:
      DocRepoLocation: $(Pipeline.Workspace)/docs
      DocRepoOwner: MicrosoftDocs
      DocRepoName: azure-docs-sdk-node
    steps:
      # Sync docs repo (this can be sparse)
      - template: /eng/common/pipelines/templates/steps/sparse-checkout.yml
        parameters:
          SkipDefaultCheckout: true
          Paths:
            - ci-configs/packages-latest.json
            - ci-configs/packages-preview.json
            - metadata/
          Repositories:
            - Name: $(DocRepoOwner)/$(DocRepoName)
              WorkingDirectory: $(DocRepoLocation)

      # Call update docs ci script to onboard packages
      # - task: Powershell@2
      #   inputs:
      #     pwsh: true
      #     filePath: eng/common/scripts/Update-DocsMsPackages.ps1
      #     arguments: -DocRepoLocation $(DocRepoLocation)
      #   displayName: Update Docs Onboarding

      # Push changes to docs repo
      - template: /eng/common/pipelines/templates/steps/set-default-branch.yml
        parameters:
          WorkingDirectory: $(DocRepoLocation)

      - template: /eng/common/pipelines/templates/steps/git-push-changes.yml
        parameters:
          BaseRepoBranch: $(DefaultBranch)
          BaseRepoOwner: $(DocRepoOwner)
          CommitMsg: "Update docs CI configuration"
          TargetRepoName: $(DocRepoName)
          TargetRepoOwner: $(DocRepoOwner)
          WorkingDirectory: $(DocRepoLocation)

      # Prepare daily docs CI
      - template: /eng/common/pipelines/templates/steps/set-daily-docs-branch-name.yml
        parameters:
          DailyBranchVariableName: DailyDocsBranchName
      - pwsh: |
          $ErrorActionPreference = "Continue"
          git checkout "origin/$(DailyDocsBranchName)" 2>&1 | Out-Null
          $LASTEXITCODE = 0 # This ignores any error from git checkout
          git status
        displayName: Checkout daily branch if it exists
        workingDirectory: $(DocRepoLocation)
      # - task: Powershell@2
      #   inputs:
      #     pwsh: true
      #     filePath: eng/common/scripts/Update-DocsMsPackages.ps1
      #     arguments: -DocRepoLocation $(DocRepoLocation)
      #   displayName: Update Docs Onboarding for Daily branch
      - template: /eng/common/pipelines/templates/steps/git-push-changes.yml
        parameters:
          BaseRepoBranch: $(DailyDocsBranchName)
          BaseRepoOwner: $(DocRepoOwner)
          CommitMsg: "Update targeting packages based on release metadata. (Daily docs)"
          TargetRepoName: $(DocRepoName)
          TargetRepoOwner: $(DocRepoOwner)
          WorkingDirectory: $(DocRepoLocation)
          ScriptDirectory: $(Build.SourcesDirectory)/eng/common/scripts

      # Enable overriding the branch used by reference automation. The reference
      # automation repo is used by the Docs CI process to generate
      # documentation from published packages.
      # In some cases the reference automation repository might have bugs
      # that prevent a successful build of JS docs. In these cases that can be
      # manually overridden to use a branch without those breaking bugs.
      # - pwsh: |
      #     $branchName = $env:DAILYDOCSCIBRANCHNAMEOVERRIDE
      #     if (!$branchName) {
      #       # DocsBuildSourceBranch must default to "master" as this repo is
      #       # managed by the docs team and will be updated according to
      #       # their timeline.

      #       # Pin version to working branch. This should be "master" when the 
      #       # docs CI is fixed.
      #       $branchName = "master"
      #     }
      #     Write-Host "Docs CI Branch Name: $branchName"
      #     Write-Host "##vso[task.setvariable variable=DocsBuildSourceBranch;]$branchName"
      #   displayName: Set branch used for Docs CI reference automation build

      # What happens in the case of an empty branch?
      - task: PowerShell@2
        displayName: Queue Docs CI build
        inputs:
          pwsh: true
          filePath: eng/common/scripts/Queue-Pipeline.ps1
          arguments: >
            -Organization "apidrop"
            -Project "Content%20CI"
            -DefinitionId 3452
            -Base64EncodedAuthToken "$(azuresdk-apidrop-devops-queue-build-pat)"
            -BuildParametersJson '{"params":"{ \"target_repo\": { \"url\": \"https://github.com/MicrosoftDocs/azure-docs-sdk-node\", \"branch\": \"$(DailyDocsBranchName)\", \"folder\": \"./\" }, \"source_repos\": [] }"}'
