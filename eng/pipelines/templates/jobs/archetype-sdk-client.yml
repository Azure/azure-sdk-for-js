parameters:
  Artifacts: []
  ServiceDirectory: not-specified
  Matrix:
    Linux_Node8:
      OSVmImage: "ubuntu-18.04"
      NodeTestVersion: "8.x"
      TestType: "node"
    Windows_Node10:
      OSVmImage: "windows-2019"
      NodeTestVersion: "10.x"
      TestType: "node"
    macOS_Node12:
      OSVmImage: "macOS-10.15"
      NodeTestVersion: "12.x"
      TestType: "node"
    Browser_Linux_Node12:
      OSVmImage: "ubuntu-18.04"
      NodeTestVersion: "12.x"
      TestType: "browser"

jobs:
  - job: "Build"
    variables:
      - template: ../variables/globals.yml

    pool:
      vmImage: "$(OSVmImage)"

    steps:
      - script: |
          echo "##vso[build.addbuildtag]Scheduled"
        displayName: "Tag scheduled builds"
        condition: and(always(),and(eq(variables['Build.SourceBranchName'],'master'),eq(variables['Build.Reason'],'Schedule')))

      - template: ../steps/common.yml

      - template: ../steps/build.yml
        parameters:
          Artifacts: ${{parameters.Artifacts}}
          ServiceDirectory: ${{parameters.ServiceDirectory}}

  - job: "Analyze"
    dependsOn: "Build"
    variables:
      - template: ../variables/globals.yml

    pool:
      vmImage: "$(OSVmImage)"

    steps:
      - template: ../steps/common.yml

      - template: ../steps/analyze.yml
        parameters:
          ServiceDirectory: ${{parameters.ServiceDirectory}}

  # Only run tests if the matrix has entries
  - ${{ if ne(parameters.RunUnitTests, false) }}:
    - job: "UnitTest"

      strategy:
        matrix: ${{parameters.Matrix}}

      pool:
        vmImage: "$(OSVmImage)"

      variables:
        - template: ../variables/globals.yml

      steps:
        - template: ../steps/common.yml

        - script: |
            node common/scripts/install-run-rush.js install
          displayName: "Install dependencies"

        # Option "-p max" ensures parallelism is set to the number of cores on all platforms, which improves build times.
        # The default on Windows is "cores - 1" (microsoft/rushstack#436).
        - script: |
            node eng/tools/rush-runner.js build --verbose -p max
          displayName: "Build libraries"

        # Option "-p max" ensures parallelism is set to the number of cores on all platforms, which improves build times.
        # The default on Windows is "cores - 1" (microsoft/rushstack#436).
        - script: |
            node eng/tools/rush-runner.js build:test --verbose -p max
          displayName: "Build test assets"

        - template: ../steps/use-node-test-version.yml

        # Option "-p max" ensures parallelism is set to the number of cores on all platforms, which improves build times.
        # The default on Windows is "cores - 1" (microsoft/rushstack#436).
        - script: |
            node eng/tools/rush-runner.js unit-test:node "${{parameters.ServiceDirectory}}" --verbose -p max
          displayName: "Test libraries"
          condition: and(succeeded(),eq(variables['TestType'], 'node'))
        
        # Option "-p max" ensures parallelism is set to the number of cores on all platforms, which improves build times.
        # The default on Windows is "cores - 1" (microsoft/rushstack#436).
        - script: |
            node eng/tools/rush-runner.js unit-test:browser "${{parameters.ServiceDirectory}}" --verbose -p max
          displayName: "Test libraries"
          condition: and(succeeded(),eq(variables['TestType'], 'browser'))

        # Unlink node_modules folders to significantly improve performance of subsequent tasks
        # which need to walk the directory tree (and are hardcoded to follow symlinks).
        # Retry for 30 seconds, since this command may fail with error "Another rush command is already
        # running in this repository" if the previous rush command was killed.
        - pwsh: |
            for ($i=0; $i -lt 30; $i++) {
              node eng/tools/rush-runner.js unlink
              if ($lastexitcode -eq 0) {
                break
              }
              else {
                start-sleep 1
              }
            }
          condition: always()
          displayName: "Unlink dependencies"

        # It's important for performance to pass "sdk" as "searchFolder" to avoid looking under root "node_modules".
        # PublishTestResults.searchFolder only supports absolute paths, not relative.
        - task: PublishTestResults@2
          inputs:
            searchFolder: '$(System.DefaultWorkingDirectory)/sdk'
            testResultsFiles: "**/test-results.xml"
            testRunTitle: "$(OSName) - NodeJS - Unit Tests - [Node $(NodeTestVersion)]"
          condition: and(always(),eq(variables['TestType'], 'node'))
          displayName: "Publish NodeJS unit test results"

        # It's important for performance to pass "sdk" as "searchFolder" to avoid looking under root "node_modules".
        # PublishTestResults.searchFolder only supports absolute paths, not relative.
        - task: PublishTestResults@2
          inputs:
            searchFolder: '$(System.DefaultWorkingDirectory)/sdk'
            testResultsFiles: "**/test-results.browser.xml"
            testRunTitle: "$(OSName) - Browser - Unit Tests - [Node $(NodeTestVersion)]"
          condition: and(always(),eq(variables['TestType'], 'browser'))
          displayName: "Publish browser unit test results"
