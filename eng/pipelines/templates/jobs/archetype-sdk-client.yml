parameters:
  - name: Artifacts
    type: object
    default: []
  - name: TestPipeline
    type: boolean
    default: false
  - name: ServiceDirectory
    type: string
    default: not-specified
  - name: RunUnitTests
    type: boolean
    default: true
  - name: Matrix
    type: object
    default:
      Linux_Node8:
        Pool: azsdk-pool-mms-ubuntu-1804-general
        OSVmImage: MMSUbuntu18.04
        NodeTestVersion: "8.x"
        TestType: "node"
      Windows_Node10:
        Pool: azsdk-pool-mms-win-2019-general
        OSVmImage: MMS2019
        NodeTestVersion: "10.x"
        TestType: "node"
      macOS_Node12:
        Pool: Azure Pipelines
        OSVmImage: "macOS-10.15"
        NodeTestVersion: "12.x"
        TestType: "node"
      Browser_Linux_Node12:
        Pool: azsdk-pool-mms-ubuntu-1804-general
        OSVmImage: MMSUbuntu18.04
        NodeTestVersion: "$(NodeVersion)"
        TestType: "browser"
      Linux_Node14:
        Pool: azsdk-pool-mms-ubuntu-1804-general
        OSVmImage: MMSUbuntu18.04
        NodeTestVersion: "14.x"
        TestType: "node"

jobs:
  - job: "Build"
    variables:
      - template: ../variables/globals.yml

    pool:
      name: azsdk-pool-mms-ubuntu-1804-general
      vmImage: MMSUbuntu18.04

    steps:
      - script: |
          echo "##vso[build.addbuildtag]Scheduled"
        displayName: "Tag scheduled builds"
        condition: and(always(),and(eq(variables['Build.SourceBranchName'],'master'),eq(variables['Build.Reason'],'Schedule')))

      - template: ../steps/common.yml

      - template: ../steps/build.yml
        parameters:
          Artifacts: ${{ parameters.Artifacts }}
          ServiceDirectory: ${{ parameters.ServiceDirectory }}
          TestPipeline: ${{ parameters.TestPipeline }}

      - template: /eng/common/pipelines/templates/steps/create-apireview.yml
        parameters:
          Artifacts: ${{ parameters.Artifacts }}
          ArtifactPath: $(Build.SourcesDirectory)/sdk/${{ parameters.ServiceDirectory }}

  - job: "Analyze"
    dependsOn: "Build"
    variables:
      - template: ../variables/globals.yml

    pool:
      name: azsdk-pool-mms-ubuntu-1804-general
      vmImage: MMSUbuntu18.04

    steps:
      - template: ../steps/common.yml

      - template: ../steps/analyze.yml
        parameters:
          Artifacts: ${{ parameters.Artifacts }}
          ServiceDirectory: ${{ parameters.ServiceDirectory }}

  # Only run tests if the matrix has entries
  - ${{ if ne(parameters.RunUnitTests, false) }}:
      - job: "UnitTest"

        strategy:
          matrix: ${{parameters.Matrix}}

        pool:
          name: $(Pool)
          vmImage: $(OSVmImage)

        variables:
          - template: ../variables/globals.yml

        steps:
          - template: ../steps/common.yml

          - template: ../steps/test.yml
            parameters:
              Artifacts: ${{parameters.Artifacts}}
              ServiceDirectory: ${{parameters.ServiceDirectory}}
