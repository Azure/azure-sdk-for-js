parameters:
  Artifacts: []
  ServiceDirectory: not-specified
  Matrix:
    Linux_Node8:
      OSVmImage: "ubuntu-18.04"
      NodeTestVersion: "8.x"
      TestType: "node"
    Windows_Node10:
      OSVmImage: "windows-2019"
      NodeTestVersion: "10.x"
      TestType: "node"
    macOS_Node12:
      OSVmImage: "macOS-10.15"
      NodeTestVersion: "12.x"
      TestType: "node"
    Browser_Linux_Node12:
      OSVmImage: "ubuntu-18.04"
      NodeTestVersion: "12.x"
      TestType: "browser"

jobs:
  - job: "Build"
    variables:
      - template: ../variables/globals.yml

    pool:
      vmImage: "$(OSVmImage)"

    steps:
      - script: |
          echo "##vso[build.addbuildtag]Scheduled"
        displayName: "Tag scheduled builds"
        condition: and(always(),and(eq(variables['Build.SourceBranchName'],'master'),eq(variables['Build.Reason'],'Schedule')))

      - template: ../steps/common.yml

      - template: ../steps/build.yml
        parameters:
          Artifacts: ${{parameters.Artifacts}}
          ServiceDirectory: ${{parameters.ServiceDirectory}}

  - job: "Analyze"
    dependsOn: "Build"
    variables:
      - template: ../variables/globals.yml

    pool:
      vmImage: "$(OSVmImage)"

    steps:
      - template: ../steps/common.yml

      - template: ../steps/analyze.yml
        parameters:
          Artifacts: ${{parameters.Artifacts}}
          ServiceDirectory: ${{parameters.ServiceDirectory}}

  # Only run tests if the matrix has entries
  - ${{ if ne(parameters.RunUnitTests, false) }}:
    - job: "UnitTest"

      strategy:
        matrix: ${{parameters.Matrix}}

      pool:
        vmImage: "$(OSVmImage)"

      variables:
        - template: ../variables/globals.yml

      steps:
        - template: ../steps/common.yml

        - template: ../steps/test.yml
          parameters:
            Artifacts: ${{parameters.Artifacts}}
            ServiceDirectory: ${{parameters.ServiceDirectory}}
