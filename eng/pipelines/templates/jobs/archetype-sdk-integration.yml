parameters:
  Toolchain: "rush"
  PackagePath: "" # For NPM toolchain only
  PreIntegrationSteps: ""
  EnvVars: []
  MaxParallel: 0
  Matrix:
    Linux_Node10X:
      OSVmImage: "ubuntu-16.04"
      TestType: "node"
    Windows_Node10X:
      OSVmImage: "vs2017-win2016"
      TestType: "node"
    Mac_Node10X:
      OSVmImage: "macOS-10.13"
      TestType: "node"
    Browser_Linux_Node10X:
      OSVmImage: "ubuntu-16.04"
      TestType: "browser"
    Browser_Windows_Node10X:
      OSVmImage: "vs2017-win2016"
      TestType: "browser"
    Browser_Mac_Node10X:
      OSVmImage: "macOS-10.13"
      TestType: "browser"

jobs:
  - job: "Integration"

    dependsOn:
      - Prepare

    variables:
      - template: ../variables/globals.yml
      - name: GeneratedPackageTargets
        value: $[dependencies.Prepare.outputs['SelectPackages.GeneratedPackageTargets']]

    strategy:
      maxParallel: ${{ parameters.MaxParallel }}
      matrix:
        ${{ each matrixEntry in parameters.Matrix }}:
          ${{ matrixEntry.key }}:
            # OSName:
            ${{ if startsWith(matrixEntry.value.OSVmImage, 'ubuntu') }}:
              OSName: "Linux"
            ${{ if or(startsWith(matrixEntry.value.OSVmImage, 'vs'), startsWith(matrixEntry.value.OSVmImage, 'windows')) }}:
              OSName: "Windows"
            ${{ if startsWith(matrixEntry.value.OSVmImage, 'macOS') }}:
              OSName: "MacOS"

            # Remaining entries from the matrix object
            ${{ insert }}: ${{ matrixEntry.value }}

    pool:
      vmImage: "$(OSVmImage)"

    timeoutInMinutes: 240

    steps:
      - template: ../steps/common.yml

      - template: ../steps/integration-${{parameters.Toolchain}}.yml
        parameters:
          PackagePath: ${{parameters.PackagePath}}
          PreIntegrationSteps: ${{parameters.PreIntegrationSteps}}
          EnvVars: ${{parameters.EnvVars}}

      - task: PublishTestResults@2
        inputs:
          testResultsFiles: "**/test-results.xml"
          testRunTitle: "$(OSName) Integration Node $(NodeVersion)"
        condition: succeededOrFailed()
        displayName: "Publish test results"
