parameters:
  NodeTestVersion: $(NodeTestVersion)

steps:
  - template: use-node-version.yml
    parameters:
      NodeVersion: $(NodeTestVersion)

  # Packages with native dependencies must be reinstalled after changing Node versions
  - pwsh: |
      $nativeDependencySymlinkPaths = "common/temp/node_modules/.pnpm/node_modules/keytar,common/temp/node_modules/.pnpm/node_modules/@azure/msal-node-extensions"
      $currentLocation = Get-Location
      $dependencySymlinks = $nativeDependencySymlinkPaths.Split(",")

      foreach ($symlink in $dependencySymlinks)
      {
        Write-Host "Reinstalling native dependency $($symlink)"

        if(-not (Test-Path $symlink))
        {
          Write-Host "Path $($symlink) doesn't exist. Skipping reinstall of this dependency."
          continue
        }
        # Map from the symlink path to the target path (npm has issues installing into symlink dirs)
        # Example: common/temp/node_modules/.pnpm/keytar@5.6.0/node_modules/keytar
        $symlinkInfo = Get-Item $symlink
        $targetPath = [IO.Path]::Combine($symlinkInfo.Parent, $symlinkInfo.Target)
        Write-Host "Target of symlink : $($targetPath)"

        # Need to run "npm install" at path containing "node_modules" folder
        # Example: common/temp/node_modules/.pnpm/keytar@5.6.0
        $packageInstallPath = Join-Path $targetPath "../.."

        # <pkg>@<version> is the leaf node of the path
        # Example: keytar@5.6.0
        # Move one more level up if package has org name
        # for e.g. node_modules\.pnpm\@azure+msal-node-extensions@1.0.0-alpha.6\node_modules\@azure\msal-node-extensions
        if ((Split-Path -Leaf $packageInstallPath) -eq "node_modules") {
          $packageInstallPath = Join-Path $packageInstallPath ".."
        }

        $packageAtVersion = Split-Path -Leaf $packageInstallPath

        # pnpm v6 replaces '/' in package names with '+' to reduce nesting directory in virtual store so we need to
        # change it back
        $packageAtVersion = $packageAtVersion.Replace("+", "/")
        # Check if package has org name. for e.g @azure/msal-node-enxtensions
        # This returns either @azure or .pnpm( if no org is present)
        $packageParentName = Split-path -Leaf (Split-Path -Parent -Resolve $packageInstallPath)
        if ($packageParentName.StartsWith("@"))
        {
          # Include org name in package name to install
          $packageAtVersion = $packageParentName + "/" + $packageAtVersion
        }

        Set-Location $packageInstallPath

        Write-Host "Installing $($packageAtVersion)"
        # Install matching version of package
        npm install --no-package-lock $packageAtVersion

        Set-Location $currentLocation
      }

    displayName: Reinstall native dependencies
