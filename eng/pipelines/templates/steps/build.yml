parameters:
  Artifacts: []
  TestPipeline: false
  ServiceDirectory: not-specified
  IncludeRelease: true

steps:
  - template: /eng/common/pipelines/templates/steps/set-test-pipeline-version.yml
    parameters:
      PackageName: "@azure/template"
      ServiceDirectory: "template"
      TestPipeline: ${{ parameters.TestPipeline }}

  - pwsh: |
      $folder = "${{parameters.ServiceDirectory}}"
      if ($folder -eq "*") { $folder = "" }
      echo "##vso[task.setvariable variable=folder]$folder"
    displayName: "Set folder variable for readme links"

  - template: /eng/common/pipelines/templates/steps/daily-dev-build-variable.yml
    parameters:
      ServiceDirectory: ${{ parameters.ServiceDirectory }}

  - script: |
      npm install ./eng/tools/versioning
      node eng/tools/versioning/set-dev.js --build-id "$(Build.BuildNumber)" --repo-root "$(Build.SourcesDirectory)" --service "$(folder)"
      node common/scripts/install-run-rush.js update
    condition: and(succeeded(),eq(variables['SetDevVersion'],'true'))
    displayName: "Update package versions for dev build"

  - task: Powershell@2
    inputs:
      filePath: $(Build.SourcesDirectory)/eng/common/scripts/Save-Package-Properties.ps1
      arguments: >
        -ServiceDirectory ${{parameters.ServiceDirectory}}
        -OutDirectory $(Build.ArtifactStagingDirectory)/PackageInfo
        -AddDevVersion
      pwsh: true
      workingDirectory: $(Pipeline.Workspace)
    displayName: Update package properties with dev version
    condition: and(succeeded(),eq(variables['SetDevVersion'],'true'))

  - script: |
      node common/scripts/install-run-rush.js install
    condition: and(succeeded(),ne(variables['SetDevVersion'],'true'))
    displayName: "Install dependencies"

  - template: /eng/pipelines/templates/steps/set-artifact-packages.yml
    parameters:
      Artifacts: ${{ parameters.Artifacts }}

  # Option "-p max" ensures parallelism is set to the number of cores on all platforms, which improves build times.
  # The default on Windows is "cores - 1" (microsoft/rushstack#436).
  - script: |
      node eng/tools/rush-runner.js build "${{parameters.ServiceDirectory}}" -packages "$(ArtifactPackageNames)" --verbose -p max
    displayName: "Build libraries"
  - script: |
      node eng/tools/rush-runner.js build:samples "${{parameters.ServiceDirectory}}" -packages "$(ArtifactPackageNames)" --verbose
    displayName: "Build samples"

  - pwsh: |
      eng/tools/check-api-warning.ps1
    displayName: "Check api extractor output changes"

  - script: |
      node eng/tools/rush-runner.js pack "${{parameters.ServiceDirectory}}" -packages "$(ArtifactPackageNames)" --verbose
    displayName: "Pack libraries"

  # Unlink node_modules folders to significantly improve performance of subsequent tasks
  # which need to walk the directory tree (and are hardcoded to follow symlinks).
  - script: |
      node eng/tools/rush-runner.js unlink
    displayName: "Unlink dependencies"

  - template: ../steps/generate-doc.yml
    parameters:
      ServiceDirectory: ${{parameters.ServiceDirectory}}

  - pwsh: |
      $artifacts = '${{ convertToJson(parameters.Artifacts) }}' | ConvertFrom-Json
      foreach ($artifact in $artifacts)
      {
        $artifactName = $artifact.name
        Write-Host "Copying $artifactName artifacts to $(Build.ArtifactStagingDirectory)/$artifactName"
        New-Item -Type Directory -Name $artifactName -Path $(Build.ArtifactStagingDirectory) > $null
        Copy-Item sdk/${{parameters.ServiceDirectory}}/**/$artifactName-[0-9]*.[0-9]*.[0-9]*.tgz $(Build.ArtifactStagingDirectory)/$artifactName
        Copy-Item sdk/${{parameters.ServiceDirectory}}/**/browser/$artifactName-[0-9]*.[0-9]*.[0-9]*.zip $(Build.ArtifactStagingDirectory)/$artifactName
        if ($${{ parameters.IncludeRelease }} -eq $true -and $artifact.skipPublishDocMs -ne $true)
        {
          New-Item -Type Directory -Name documentation -Path $(Build.ArtifactStagingDirectory)/$artifactName > $null
          Copy-Item $(Build.SourcesDirectory)/docGen/$artifactName.zip $(Build.ArtifactStagingDirectory)/$artifactName/documentation
        }
      }
    displayName: 'Copy Packages'

  - pwsh: |
      eng/scripts/stage-api-review-file.ps1 -PackageInfoPath $(Build.ArtifactStagingDirectory)/PackageInfo -StagingDirectory $(Build.ArtifactStagingDirectory)
    displayName: 'Copy API extracted files'

  - task: Powershell@2
    inputs:
      filePath: $(Build.SourcesDirectory)/eng/scripts/Generate-APIView-CodeFile.ps1
      arguments: >
        -ArtifactPath $(Build.ArtifactStagingDirectory)
      pwsh: true
      workingDirectory: $(Pipeline.Workspace)
    displayName: Create APIView code file

  - template: /eng/common/pipelines/templates/steps/publish-artifact.yml
    parameters:
      ArtifactPath: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'packages'

  - ${{if eq(variables['System.TeamProject'], 'internal') }}:
    - task: AzureArtifacts.manifest-generator-task.manifest-generator-task.ManifestGeneratorTask@0
      displayName: 'Upload Package SBOM'
      inputs:
        BuildDropPath: $(Build.ArtifactStagingDirectory)

    - template: /eng/common/pipelines/templates/steps/publish-artifact.yml
      parameters:
        ArtifactPath: '$(Build.ArtifactStagingDirectory)/_manifest'
        ArtifactName: 'manifest'

  - template: /eng/pipelines/templates/steps/create-apireview.yml
    parameters:
      Artifacts: ${{ parameters.Artifacts }}

  - template: /eng/common/pipelines/templates/steps/detect-api-changes.yml
    parameters:
      Artifacts: ${{ parameters.Artifacts }}
