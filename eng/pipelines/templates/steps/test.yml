parameters:
  Artifacts: []
  ServiceDirectory: not-specified
  TestProxy: true
  OSName: ''

steps:
  - template: /eng/common/pipelines/templates/steps/verify-agent-os.yml
    parameters:
      AgentImage: ${{ parameters.OSName}}

  - template: /eng/common/pipelines/templates/steps/save-package-properties.yml
    parameters:
      ServiceDirectory: ${{parameters.ServiceDirectory}}

  - script: |
      npm install -g pnpm
    displayName: "Install Pnpm"

  - script: |
      pnpm install
    displayName: "Install library dependencies"

  - template: /eng/pipelines/templates/steps/set-artifact-packages.yml
    parameters:
      PackageInfo: $(Build.ArtifactStagingDirectory)/PackageInfo
      Artifacts: ${{ parameters.Artifacts }}

  - script: |
      node eng/tools/ci-runner/index.js build $(ChangedServices) -packages "$(ArtifactPackageNames)" -packageInfo "$(Build.ArtifactStagingDirectory)/PackageInfo" -changeInfo "$(Build.ArtifactStagingDirectory)/diff/diff.json"
    env:
      TURBO_TEAM: azsdkjs
      TURBO_TEAMID: azsdkjs
      TURBO_CACHE: local:rw,remote:r
      TURBO_TOKEN: faketoken
    displayName: "Build libraries"

  - template: ../steps/use-node-test-version.yml

  - ${{ if eq(parameters.TestProxy, true) }}:
    - template: /eng/common/testproxy/test-proxy-standalone-tool.yml

  - script: |
      node eng/tools/ci-runner/index.js test:node $(ChangedServices) -packages "$(ArtifactPackageNames)" -packageInfo "$(Build.ArtifactStagingDirectory)/PackageInfo" -changeInfo "$(Build.ArtifactStagingDirectory)/diff/diff.json" --ci
    displayName: "Test libraries node NodeJS $(NodeTestVersion)"
    condition: and(succeeded(),eq(variables['TestType'], 'node'))

  - script: |
      node eng/tools/ci-runner/index.js test:browser $(ChangedServices) -packages "$(ArtifactPackageNames)" -packageInfo "$(Build.ArtifactStagingDirectory)/PackageInfo" -changeInfo "$(Build.ArtifactStagingDirectory)/diff/diff.json" --ci
    displayName: "Test libraries browser NodeJS $(NodeTestVersion)"
    condition: and(succeeded(),eq(variables['TestType'], 'browser'))

  - ${{ if eq(parameters.TestProxy, true) }}:
    - pwsh: |
        copy $(Build.SourcesDirectory)/test-proxy.log $(Build.ArtifactStagingDirectory)
      displayName: 'Dump Test Proxy logs'
      condition: succeededOrFailed()

  # Unlink node_modules folders to significantly improve performance of subsequent tasks
  # which need to walk the directory tree (and are hardcoded to follow symlinks).
  # Retry for 30 seconds.
  - pwsh: |
      for ($i=0; $i -lt 30; $i++) {
        pnpm purge
        if ($lastexitcode -eq 0) {
          break
        }
        else {
          start-sleep 1
        }
      }
    condition: always()
    displayName: "Purge dependencies"

  # It's important for performance to pass "sdk" as "searchFolder" to avoid looking under root "node_modules".
  # PublishTestResults.searchFolder only supports absolute paths, not relative.
  - task: PublishTestResults@2
    inputs:
      searchFolder: "$(System.DefaultWorkingDirectory)/sdk"
      testResultsFiles: "**/test-results.xml"
      testRunTitle: "$(OSName) - NodeJS - Unit Tests - [Node $(NodeTestVersion)]"
    condition: and(always(),eq(variables['TestType'], 'node'))
    displayName: "Publish NodeJS unit test results"

  # It's important for performance to pass "sdk" as "searchFolder" to avoid looking under root "node_modules".
  # PublishTestResults.searchFolder only supports absolute paths, not relative.
  - task: PublishTestResults@2
    inputs:
      searchFolder: "$(System.DefaultWorkingDirectory)/sdk"
      testResultsFiles: "**/test-results.browser.xml"
      testRunTitle: "$(OSName) - Browser - Unit Tests - [Node $(NodeTestVersion)]"
    condition: and(always(),eq(variables['TestType'], 'browser'))
    displayName: "Publish browser unit test results"

  - ${{ if eq(parameters.TestProxy, true) }}:
    - template: /eng/common/pipelines/templates/steps/publish-1es-artifact.yml
      parameters:
        ArtifactPath: '$(Build.ArtifactStagingDirectory)/test-proxy.log'
        ArtifactName: 'test proxy logs $(Agent.JobName)'
        SbomEnabled: false
