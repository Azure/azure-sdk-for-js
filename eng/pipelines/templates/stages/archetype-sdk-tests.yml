parameters:
  - name: PackageName
    type: string
    default: ""
  - name: ServiceDirectory
    type: string
    default: ""
  - name: EnvVars
    type: object
    default: {}
  - name: MaxParallel
    type: number
    default: 0
  - name: TimeoutInMinutes
    type: number
    default: 0
  - name: PublishCodeCoverage
    type: boolean
    default: false
  - name: Location
    type: string
    default: ""
  - name: Clouds
    type: string
    default: 'Public'
  - name: SupportedClouds
    type: string
    default: 'Public,Canary'
  - name: UnsupportedClouds
    type: string
    default: ''
  - name: PreSteps
    type: object
    default: []
  - name: PostSteps
    type: object
    default: []
  - name: CloudConfig
    type: object
    default:
      Public:
        SubscriptionConfiguration: $(sub-config-azure-cloud-test-resources)
      Preview:
        SubscriptionConfiguration: $(sub-config-azure-cloud-test-resources-preview)
      Canary:
        SubscriptionConfiguration: $(sub-config-azure-cloud-test-resources)
        Location: 'centraluseuap'
        MatrixFilters:
          - OSVmImage=.*Ubuntu.*
          - NodeTestVersion=10.x
          - DependencyVersion=^$
      UsGov:
        SubscriptionConfiguration: $(sub-config-gov-test-resources)
      China:
        SubscriptionConfiguration: $(sub-config-cn-test-resources)
  - name: MatrixConfigs
    type: object
    default:
      - Name: Js_live_test_base
        Path: eng/pipelines/templates/stages/platform-matrix.json
        Selection: sparse
        GenerateVMJobs: true
  - name: AdditionalMatrixConfigs
    type: object
    default: []
  - name: MatrixFilters
    type: object
    default: []
  - name: MatrixReplace
    type: object
    default: []

stages:
- ${{ each cloud in parameters.CloudConfig }}:
  # TODO: re-enable tests-weekly allow filter once sovereign cloud live tests are stable: https://github.com/Azure/azure-sdk/issues/2074
  # Run all clouds by default for weekly test pipeline, except for clouds specifically unsupported by the calling pipeline
  # - ${{ if or(contains(parameters.Clouds, cloud.key), contains(variables['Build.DefinitionName'], 'tests-weekly')) }}:
  - ${{ if or(contains(parameters.Clouds, cloud.key), and(contains(variables['Build.DefinitionName'], 'tests-weekly'), contains(parameters.SupportedClouds, cloud.key))) }}:
    - ${{ if not(contains(parameters.UnsupportedClouds, cloud.key)) }}:
      - stage: ${{ cloud.key }}
        dependsOn: []
        jobs:
        - template: /eng/common/pipelines/templates/jobs/archetype-sdk-tests-generate.yml
          parameters:
            JobTemplatePath: /eng/pipelines/templates/jobs/live.tests.yml
            AdditionalParameters:
              PackageName: ${{ parameters.PackageName }}
              ServiceDirectory: ${{ parameters.ServiceDirectory }}
              EnvVars: ${{ parameters.EnvVars }}
              MaxParallel: ${{ parameters.MaxParallel }}
              TimeoutInMinutes: ${{ parameters.TimeoutInMinutes }}
              PublishCodeCoverage: ${{ parameters.PublishCodeCoverage }}
              PreSteps:
                - ${{ parameters.PreSteps }}
              PostSteps:
                - ${{ parameters.PostSteps }}
            MatrixConfigs:
              # Enumerate platforms and additional platforms based on supported clouds (sparse platform<-->cloud matrix).
              - ${{ each config in parameters.MatrixConfigs }}:
                -  ${{ config }}
              - ${{ each config in parameters.AdditionalMatrixConfigs }}:
                -  ${{ config }}
            MatrixFilters:
              - ${{ each cloudFilter in cloud.value.MatrixFilters }}:
                - ${{ cloudFilter }}
              - ${{ parameters.MatrixFilters }}
            MatrixReplace:
              - ${{ each cloudReplace in cloud.value.MatrixReplace }}:
                - ${{ cloudReplace }}
              - ${{ parameters.MatrixReplace }}
            CloudConfig:
              SubscriptionConfiguration: ${{ cloud.value.SubscriptionConfiguration }}
              SubscriptionConfigurations: ${{ cloud.value.SubscriptionConfigurations }}
              Location: ${{ coalesce(parameters.Location, cloud.value.Location) }}
              Cloud: ${{ cloud.key }}
