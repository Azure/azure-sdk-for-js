parameters:
  - name: PackageName
    type: string
    default: ""
  - name: ServiceDirectory
    type: string
    default: ""
  - name: TestResourceDirectories
    type: object
    default:
  - name: EnvVars
    type: object
    default: {}
  - name: MaxParallel
    type: number
    default: 0
  - name: TimeoutInMinutes
    type: number
    default: 60
  - name: PublishCodeCoverage
    type: boolean
    default: false
  - name: Location
    type: string
    default: ""
  - name: Clouds
    type: string
    default: 'Public'
  - name: SupportedClouds
    type: string
    default: 'Public'
  - name: UnsupportedClouds
    type: string
    default: ''
  - name: PreSteps
    type: object
    default: []
  - name: PostSteps
    type: object
    default: []
  - name: CloudConfig
    type: object
    default:
      Public:
      # Canary regions are currently not supported in TME so disabling for now
      # Canary:
      #   Location: 'centraluseuap'
      #   MatrixFilters:
      #     - OSVmImage=.*Ubuntu.*
      #     - DependencyVersion=^$
      UsGov:
      China:
  - name: MatrixConfigs
    type: object
    default:
      - Name: Js_live_test_base
        Path: eng/pipelines/templates/stages/platform-matrix.json
        Selection: sparse
        GenerateVMJobs: true
  - name: AdditionalMatrixConfigs
    type: object
    default: []
  - name: MatrixFilters
    type: object
    default: []
  - name: MatrixReplace
    type: object
    default: []
  - name: UseFederatedAuth
    type: boolean
    default: true

stages:
  - ${{ each cloud in parameters.CloudConfig }}:
    - ${{ if or(contains(parameters.Clouds, cloud.key), and(contains(variables['Build.DefinitionName'], 'tests-weekly'), contains(parameters.SupportedClouds, cloud.key))) }}:
      - ${{ if not(contains(parameters.UnsupportedClouds, cloud.key)) }}:
        - stage: ${{ cloud.key }}
          dependsOn: []
          variables:
            - template: /eng/pipelines/templates/variables/globals.yml
            - template: /eng/pipelines/templates/variables/image.yml
          jobs:
          - template: /eng/common/pipelines/templates/jobs/generate-job-matrix.yml
            parameters:
              SparseCheckoutPaths:
                # JS recording files are implicit excluded here since they are using '.js' file extension.
                - "sdk/${{ parameters.ServiceDirectory }}/**/*.json"
              JobTemplatePath: /eng/pipelines/templates/jobs/live.tests.yml
              OsVmImage: $(LINUXVMIMAGE)
              Pool: $(LINUXPOOL)
              AdditionalParameters:
                PackageName: ${{ parameters.PackageName }}
                ServiceDirectory: ${{ parameters.ServiceDirectory }}
                EnvVars: ${{ parameters.EnvVars }}
                MaxParallel: ${{ parameters.MaxParallel }}
                TimeoutInMinutes: ${{ parameters.TimeoutInMinutes }}
                TestResourceDirectories: ${{ parameters.TestResourceDirectories }}
                PublishCodeCoverage: ${{ parameters.PublishCodeCoverage }}
                UseFederatedAuth: ${{ parameters.UseFederatedAuth }}
                PreSteps:
                  - ${{ parameters.PreSteps }}
                PostSteps:
                  - ${{ parameters.PostSteps }}
              MatrixConfigs:
                # Enumerate platforms and additional platforms based on supported clouds (sparse platform<-->cloud matrix).
                - ${{ each config in parameters.MatrixConfigs }}:
                  -  ${{ config }}
                - ${{ each config in parameters.AdditionalMatrixConfigs }}:
                  -  ${{ config }}
              MatrixFilters:
                - ${{ each cloudFilter in cloud.value.MatrixFilters }}:
                  - ${{ cloudFilter }}
                - ${{ parameters.MatrixFilters }}
              MatrixReplace:
                - ${{ each cloudReplace in cloud.value.MatrixReplace }}:
                  - ${{ cloudReplace }}
                - ${{ parameters.MatrixReplace }}
              CloudConfig:
                Cloud: ${{ cloud.key }}
                Location: ${{ coalesce(cloud.value.Location, parameters.Location) }}
                ServiceConnection: ${{ coalesce(cloud.value.ServiceConnection, lower(format('azure-sdk-tests-{0}', cloud.key))) }}
                SubscriptionConfiguration: ${{ cloud.value.SubscriptionConfiguration }}
                SubscriptionConfigurations: ${{ cloud.value.SubscriptionConfigurations }}
                SubscriptionConfigurationFilePaths: ${{ cloud.value.SubscriptionConfigurationFilePaths }}
