parameters:
  Artifacts: []
  TestPipeline: false
  ArtifactName: 'not-specified'
  DependsOn: Build
  Registry: 'https://registry.npmjs.org/'
  PrivateRegistry: 'https://pkgs.dev.azure.com/azure-sdk/internal/_packaging/azure-sdk-for-js-pr/npm/registry/'
  DocArtifact: 'documentation'
  TargetDocRepoOwner: ''
  TargetDocRepoName: ''
  
stages:
  - ${{if and(eq(variables['Build.Reason'], 'Manual'), eq(variables['System.TeamProject'], 'internal'))}}:
    - ${{ each artifact in parameters.Artifacts }}:
      - stage: Release_${{artifact.safeName}}
        displayName: 'Release: ${{artifact.name}}'
        dependsOn: ${{parameters.DependsOn}}
        condition: and(succeeded(), ne(variables['SetDevVersion'], 'true'), ne(variables['Skip.Release'], 'true'), ne(variables['Build.Repository.Name'], 'Azure/azure-sdk-for-js-pr'))
        jobs:
          - deployment: TagRepository
            displayName: "Create release tag"
            condition: ne(variables['Skip.TagRepository'], 'true')
            environment: github

            pool:
              vmImage: ubuntu-18.04

            strategy:
              runOnce:
                deploy:
                  steps:
                    - checkout: self
                    - ${{if eq(parameters.TestPipeline, 'true')}}:
                      - task: PowerShell@2
                        displayName: Prep template pipeline for release
                        condition: succeeded()
                        inputs:
                          pwsh: true
                          workingDirectory: $(Build.SourcesDirectory)
                          filePath: eng/scripts/SetTestPipelineVersion.ps1
                          arguments: '-BuildID $(Build.BuildId)'
                    - template: /eng/common/pipelines/templates/steps/verify-changelog.yml
                      parameters:
                        PackageName: ${{artifact.name}}
                        ServiceName: ${{parameters.ServiceDirectory}}
                        ForRelease: true
                    - template: /eng/pipelines/templates/steps/stage-artifacts.yml
                      parameters:
                        SourceFolder: ${{parameters.ArtifactName}}
                        TargetFolder: ${{artifact.safeName}}
                        PackageName: ${{artifact.name}}-[0-9]*.[0-9]*.[0-9]*.tgz
                    - pwsh: |
                        Get-ChildItem -Recurse $(Pipeline.Workspace)/${{artifact.safeName}}
                      workingDirectory: $(Pipeline.Workspace)
                      displayName: Output Visible Artifacts
                    - template: /eng/common/pipelines/templates/steps/create-tags-and-git-release.yml
                      parameters:
                        ArtifactLocation: $(Pipeline.Workspace)/${{artifact.safeName}}
                        PackageRepository: Npm
                        ReleaseSha: $(Build.SourceVersion)
                        RepoId: Azure/azure-sdk-for-js
                        WorkingDirectory: $(System.DefaultWorkingDirectory)

          - ${{if ne(artifact.skipPublishPackage, 'true')}}:
            - deployment: PublishPackage
              displayName: "Publish to npmjs"
              condition: and(succeeded(), ne(variables['Skip.PublishPackage'], 'true'))
              environment: npm
              dependsOn: TagRepository

              pool:
                vmImage: ubuntu-18.04

              strategy:
                runOnce:
                  deploy:
                    steps:
                      - checkout: self
                      - script: |
                          export DETECTED_PACKAGE_NAME=`ls $(Pipeline.Workspace)/${{parameters.ArtifactName}}/${{artifact.name}}-[0-9]*[0-9]*.[0-9]*.tgz`
                          echo "##vso[task.setvariable variable=Package.Archive]$DETECTED_PACKAGE_NAME"
                        displayName: Detecting package archive

                      - task: PowerShell@2
                        displayName: 'Publish to npmjs.org'
                        inputs:
                          targetType: filePath
                          filePath: "eng/tools/publish-to-npm.ps1"
                          arguments: '-pathToArtifacts $(Package.Archive) -accessLevel "public" -tag $(Tag) -additionalTag "$(AdditionalTag)" -registry ${{parameters.Registry}} -npmToken $(azure-sdk-npm-token)'
                          pwsh: true

          - ${{if ne(artifact.skipPublishDocMs, 'true')}}:
            - deployment: PublishDocs
              displayName: Docs.MS Release
              condition: and(succeeded(), ne(variables['Skip.PublishDocs'], 'true'))
              environment: githubio
              dependsOn: PublishPackage

              pool:
                vmImage: windows-2019
              variables:
                CIConfigs: "{'targets':[{'path_to_config':'ci-configs/packages-preview.json','Mode':'Preview','content_folder':'docs-ref-services/preview'},{'path_to_config':'ci-configs/packages-latest.json','mode':'Latest','content_folder':'docs-ref-services/latest'}]}"

              strategy:
                runOnce:
                  deploy:
                    steps:
                      - checkout: self
                      - template: /eng/pipelines/templates/steps/stage-artifacts.yml
                        parameters:
                          SourceFolder: ${{parameters.ArtifactName}}
                          TargetFolder: ${{artifact.safeName}}
                          PackageName: ${{artifact.name}}-[0-9]*.[0-9]*.[0-9]*.tgz
                      - pwsh: |
                          Get-ChildItem -Recurse $(Pipeline.Workspace)/${{artifact.safeName}}
                        workingDirectory: $(Pipeline.Workspace)
                        displayName: Output Visible Artifacts
                      - template: /eng/common/pipelines/templates/steps/get-pr-owners.yml
                        parameters:
                          TargetVariable: "OwningGHUser"
                          ServiceDirectory: ${{parameters.ServiceDirectory}}
                      - template: /eng/common/pipelines/templates/steps/docs-metadata-release.yml
                        parameters:
                          ArtifactLocation: $(Pipeline.Workspace)/${{artifact.safeName}}
                          PackageRepository: NPM
                          ReleaseSha: $(Build.SourceVersion)
                          RepoId: Azure/azure-sdk-for-js
                          WorkingDirectory: $(System.DefaultWorkingDirectory)
                          TargetDocRepoOwner: ${{parameters.TargetDocRepoOwner}}
                          TargetDocRepoName: ${{parameters.TargetDocRepoName}}
                          PRBranchName: onboarding-${{artifact.name}}-$(Build.BuildId)
                          ArtifactName: ${{artifact.name}}
                          Language: 'javascript'
                          DocRepoDestinationPath: 'docs-ref-services/' 
                          GHReviewersVariable: 'OwningGHUser'
                          CIConfigs: $(CIConfigs)
                          CloseAfterOpenForTesting: '${{ parameters.TestPipeline }}'

          - ${{if ne(artifact.skipPublishDocGithubIo, 'true')}}:
            - deployment: PublishDocsGitHubIO
              displayName: Publish Docs to GitHubIO Blob Storage
              condition: and(succeeded(), ne(variables['Skip.PublishDocs'], 'true'))
              environment: githubio
              dependsOn: PublishPackage

              pool:
                vmImage: windows-2019

              strategy:
                runOnce:
                  deploy:
                    steps:
                      - checkout: self
                      - pwsh: |
                          $adjustedName = "${{artifact.name}}" -replace "^azure-", ""
                          Write-Host "##vso[task.setvariable variable=Documentation.Zip]$adjustedName"
                        displayName: Set Documentation File Name
                      - template: /eng/pipelines/templates/steps/stage-artifacts.yml
                        parameters:
                          SourceFolder: ${{parameters.ArtifactName}}
                          TargetFolder: ${{artifact.safeName}}
                          PackageName: ${{artifact.name}}-[0-9]*.[0-9]*.[0-9]*.tgz
                      - template: /eng/pipelines/templates/steps/stage-artifacts.yml
                        parameters:
                          SourceFolder: ${{parameters.DocArtifact}}
                          TargetFolder: ${{artifact.safeName}}/${{parameters.DocArtifact}}
                          PackageName: $(Documentation.Zip).zip
                      - pwsh: |
                          Get-ChildItem -Recurse $(Pipeline.Workspace)/${{artifact.safeName}}
                        workingDirectory: $(Pipeline.Workspace)
                        displayName: Output Visible Artifacts
                      - template: /eng/common/pipelines/templates/steps/publish-blobs.yml
                        parameters:
                          FolderForUpload: '$(Pipeline.Workspace)/${{artifact.safeName}}'
                          BlobSASKey: '$(azure-sdk-docs-prod-sas)'
                          BlobName: '$(azure-sdk-docs-prod-blob-name)'
                          TargetLanguage: 'javascript'
                          ArtifactLocation: '$(Pipeline.Workspace)/${{artifact.safeName}}'
                          # we override the regular script path because we have cloned the build tools repo as a separate artifact.
                          ScriptPath: 'eng/common/scripts/copy-docs-to-blobstorage.ps1'

          - ${{if ne(artifact.skipUpdatePackageVersion, 'true')}}:
            - deployment: UpdatePackageVersion
              displayName: "Update Package Version"
              condition: and(succeeded(), ne(variables['Skip.UpdatePackageVersion'], 'true'))
              environment: github
              dependsOn: PublishPackage

              pool:
                vmImage: ubuntu-18.04

              strategy:
                runOnce:
                  deploy:
                    steps:
                      - checkout: self
                      - bash: |
                          npm install
                        workingDirectory: ./eng/tools/versioning
                        displayName: Install versioning tool dependencies
                        
                      - bash: |
                          node ./eng/tools/versioning/increment.js --artifact-name ${{ artifact.name }} --repo-root .
                        displayName: Increment package version

                      - template: /eng/common/pipelines/templates/steps/create-pull-request.yml
                        parameters:
                          RepoName: azure-sdk-for-js
                          PRBranchName: increment-package-version-${{ parameters.ServiceDirectory }}-$(Build.BuildId)
                          CommitMsg: "Increment package version after release of ${{ artifact.name }}"
                          PRTitle: "Increment version for ${{ parameters.ServiceDirectory }} releases"
                          CloseAfterOpenForTesting: '${{ parameters.TestPipeline }}'

  - stage: Integration
    dependsOn: ${{parameters.DependsOn}}
    jobs:
    - job: PublishPackages
      # Run Integration job only if SetDevVersion is set to true or ( SetDevVersion is empty and job is a scheduled CI run)
      # If SetDevVersion is set to false then we should skip integration job even for scheduled runs.
      condition: or(eq(variables['SetDevVersion'], 'true'), and(eq(variables['SetDevVersion'], ''), eq(variables['Build.Reason'],'Schedule'), eq(variables['System.TeamProject'], 'internal')))
      displayName: Publish package to daily feed
      pool:
        vmImage: ubuntu-18.04
      steps:
        - checkout: self
        - download: current
          artifact: ${{parameters.ArtifactName}}
          timeoutInMinutes: 5
        - ${{ each artifact in parameters.Artifacts }}:
          - ${{if ne(artifact.skipPublishDevFeed, 'true')}}:
            - pwsh: |
                $detectedPackageName=Get-ChildItem $(Pipeline.Workspace)/${{parameters.ArtifactName}}/${{artifact.name}}-[0-9]*.[0-9]*.[0-9]*-alpha*.tgz
                echo "##vso[task.setvariable variable=Package.Archive]$detectedPackageName"
                if ('$(Build.Repository.Name)' -eq 'Azure/azure-sdk-for-js') {
                  $npmToken="$(azure-sdk-npm-token)"
                  $registry="${{parameters.Registry}}"
                }         
                else {
                  $npmToken="$(azure-sdk-devops-npm-token)"
                  $registry="${{parameters.PrivateRegistry}}"
                }
                echo "##vso[task.setvariable variable=NpmToken]$npmToken"
                echo "##vso[task.setvariable variable=Registry]$registry"
              displayName: Detecting package archive_${{artifact.safeName}}

            - task: PowerShell@2
              displayName: "Publish_${{artifact.safeName}} to dev feed"
              inputs:
                targetType: filePath
                filePath: "eng/tools/publish-to-npm.ps1"
                arguments: '-pathToArtifacts $(Package.Archive) -accessLevel "public" -tag "dev" -registry "$(Registry)" -npmToken "$(NpmToken)"'
