parameters:
  Artifacts: []
  TestPipeline: false
  ArtifactName: packages
  DependsOn: Build
  Registry: https://registry.npmjs.org/
  PrivateRegistry: https://pkgs.dev.azure.com/azure-sdk/internal/_packaging/azure-sdk-for-js-pr/npm/registry/
  TargetDocRepoOwner: ''
  TargetDocRepoName: ''
  ServiceDirectory: ''


stages:
  - ${{if and(in(variables['Build.Reason'], 'Manual', ''), eq(variables['System.TeamProject'], 'internal'))}}:
      - ${{ each artifact in parameters.Artifacts }}:
          - stage:
            variables:
              - template: /eng/pipelines/templates/variables/globals.yml
              - template: /eng/pipelines/templates/variables/image.yml
            displayName: 'Release: ${{artifact.name}}'
            dependsOn: ${{parameters.DependsOn}}
            condition: and(succeeded(), ne(variables['SetDevVersion'], 'true'), ne(variables['Skip.Release'], 'true'), ne(variables['Build.Repository.Name'], 'Azure/azure-sdk-for-js-pr'))
            jobs:
              - job: TagRepository
                displayName: Create release tag
                condition: ne(variables['Skip.TagRepository'], 'true')
                pool:
                  name: $(LINUXPOOL)
                  image: $(LINUXVMIMAGE)
                  os: linux
                steps:
                  - checkout: self
                  - download: current
                  - template: /eng/common/pipelines/templates/steps/retain-run.yml
                  - template: /eng/common/pipelines/templates/steps/set-test-pipeline-version.yml
                    parameters:
                      PackageName: '@azure/template'
                      ServiceDirectory: template
                      TestPipeline: ${{ parameters.TestPipeline }}
                  - template: /eng/common/pipelines/templates/steps/verify-changelog.yml
                    parameters:
                      PackageName: ${{artifact.name}}
                      ServiceName: ${{parameters.ServiceDirectory}}
                      ForRelease: true
                  - template: /eng/common/pipelines/templates/steps/verify-restapi-spec-location.yml
                    parameters:
                      PackageName: ${{artifact.name}}
                      ServiceDirectory: ${{parameters.ServiceDirectory}}
                      ArtifactLocation: $(Pipeline.Workspace)/${{parameters.ArtifactName}}
                  - pwsh: >
                      Get-ChildItem -Recurse ${{parameters.ArtifactName}}/${{artifact.name}}
                    workingDirectory: $(Pipeline.Workspace)
                    displayName: Output Visible Artifacts
                  - template: /eng/common/pipelines/templates/steps/create-tags-and-git-release.yml
                    parameters:
                      ArtifactLocation: $(Pipeline.Workspace)/${{parameters.ArtifactName}}/${{artifact.name}}
                      PackageRepository: Npm
                      ReleaseSha: $(Build.SourceVersion)
                      RepoId: Azure/azure-sdk-for-js
                      WorkingDirectory: $(System.DefaultWorkingDirectory)

              - ${{ if ne(artifact.skipPublishPackage, 'true') }}:
                  - template: /eng/common/pipelines/templates/jobs/npm-publish.yml
                    parameters:
                      DependsOn: TagRepository
                      DeploymentName: PublishPackage_${{ replace(artifact.name, '-', '_') }}
                      ArtifactName: ${{ parameters.ArtifactName }}
                      ArtifactSubPath: '${{ artifact.name }}'
                      Registry: 'https://registry.npmjs.org/'

              - ${{ if ne(artifact.skipPublishDocMs, 'true') }}:
                  - job: PublishDocs
                    displayName: Docs.MS Release
                    condition: and(succeeded(), ne(variables['Skip.PublishDocs'], 'true'))
                    dependsOn: PublishPackage_${{ replace(artifact.name, '-', '_') }}
                    pool:
                      name: $(LINUXPOOL)
                      image: $(LINUXVMIMAGE)
                      os: linux
                    steps:
                      - template: /eng/common/pipelines/templates/steps/sparse-checkout.yml
                        parameters:
                          Paths:
                            - sdk/**/*.md
                            - .github/CODEOWNERS
                      - download: current
                      - template: /eng/pipelines/templates/steps/install-rex-validation-tool.yml
                      - template: /eng/common/pipelines/templates/steps/update-docsms-metadata.yml
                        parameters:
                          PackageInfoLocations:
                            - $(Pipeline.Workspace)/${{parameters.ArtifactName}}/PackageInfo/${{artifact.name}}.json
                          RepoId: Azure/azure-sdk-for-js
                          WorkingDirectory: $(System.DefaultWorkingDirectory)
                          TargetDocRepoOwner: ${{parameters.TargetDocRepoOwner}}
                          TargetDocRepoName: ${{parameters.TargetDocRepoName}}
                          Language: javascript
                          SparseCheckoutPaths:
                            - docs-ref-services/
                            - metadata/
                            - ci-configs/packages-latest.json
                            - ci-configs/packages-preview.json

              - ${{ if ne(artifact.skipPublishDocGithubIo, 'true') }}:
                  - job: PublishDocsGitHubIO
                    displayName: Publish Docs to GitHubIO Blob Storage
                    condition: and(succeeded(), ne(variables['Skip.PublishDocs'], 'true'))
                    dependsOn: PublishPackage_${{ replace(artifact.name, '-', '_') }}
                    pool:
                      name: $(LINUXPOOL)
                      image: $(LINUXVMIMAGE)
                      os: linux
                    steps:
                      - checkout: self
                      - download: current
                      - pwsh: |
                          Get-ChildItem -Recurse ${{parameters.ArtifactName}}/${{artifact.name}}
                        workingDirectory: $(Pipeline.Workspace)
                        displayName: Output Visible Artifacts
                      - template: /eng/common/pipelines/templates/steps/publish-blobs.yml
                        parameters:
                          FolderForUpload: $(Pipeline.Workspace)/${{parameters.ArtifactName}}/${{artifact.name}}
                          TargetLanguage: javascript
                          ArtifactLocation: $(Pipeline.Workspace)/${{parameters.ArtifactName}}/${{artifact.name}}

              - ${{ if ne(artifact.skipUpdatePackageVersion, 'true') }}:
                  - job: UpdatePackageVersion
                    displayName: Update Package Version
                    condition: and(succeeded(), ne(variables['Skip.UpdatePackageVersion'], 'true'))
                    dependsOn: PublishPackage_${{ replace(artifact.name, '-', '_') }}
                    pool:
                      name: $(LINUXPOOL)
                      image: $(LINUXVMIMAGE)
                      os: linux
                    steps:
                      - checkout: self
                      - download: current
                      - template: /eng/pipelines/templates/steps/common.yml

                      # Mark package as shipped in APIView
                      - template: /eng/common/pipelines/templates/steps/create-apireview.yml
                        parameters:
                          ArtifactPath: $(Pipeline.Workspace)/packages
                          Artifacts: ${{ parameters.Artifacts }}
                          ConfigFileDir: $(Pipeline.Workspace)/packages/PackageInfo
                          MarkPackageAsShipped: true
                          ArtifactName: ${{ parameters.ArtifactName }}
                          PackageName: ${{ artifact.name }}

                      - bash: |
                          npm ci
                        workingDirectory: $(System.DefaultWorkingDirectory)/eng/tools/eng-package-utils
                        displayName: Install eng-package-utils tool dependencies

                      - bash: |
                          npm ci
                        workingDirectory: ./eng/tools/versioning
                        displayName: Install versioning tool dependencies

                      - bash: |
                          node ./eng/tools/versioning/increment.js --artifact-name ${{ artifact.name }} --repo-root .
                        displayName: Increment package version

                      - bash: |
                          npm install -g pnpm
                        displayName: Install Pnpm

                      - bash: |
                          pnpm install --no-frozen-lockfile
                        displayName: "Install dependencies"

                      # Disabled until packages can be updated to support ES2019 syntax.
                      # - bash: |
                      #     npm install -g ./common/tools/dev-tool
                      #     npm install ./eng/tools/eng-package-utils
                      #     node ./eng/tools/eng-package-utils/update-samples.js ${{ artifact.name }}
                      #   displayName: Update samples

                      - template: /eng/common/pipelines/templates/steps/create-pull-request.yml
                        parameters:
                          RepoName: azure-sdk-for-js
                          PRBranchName: post-release-automation-${{ parameters.ServiceDirectory }}-$(Build.BuildId)
                          CommitMsg: Post release automated changes for ${{ artifact.name }}
                          PRTitle: Post release automated changes for ${{ parameters.ServiceDirectory }} releases
                          CloseAfterOpenForTesting: ${{ parameters.TestPipeline }}
  - stage: Integration
    dependsOn: ${{ parameters.DependsOn }}
    condition: and(succeeded(), or(eq(variables['SetDevVersion'], 'true'), and(eq(variables['Build.Reason'],'Schedule'), eq(variables['System.TeamProject'], 'internal'))))
    variables:
      - template: /eng/pipelines/templates/variables/globals.yml
      - template: /eng/pipelines/templates/variables/image.yml
    jobs:
      - template: /eng/common/pipelines/templates/jobs/npm-publish.yml
        parameters:
          Tag: 'dev'
          ArtifactName: ${{ parameters.ArtifactName }}-dev-publish
          ${{ if eq(variables['Build.Repository.Name'], 'Azure/azure-sdk-for-js')}}:
            Registry: 'https://registry.npmjs.org/'
          ${{ else }}:
            Registry: 'https://pkgs.dev.azure.com/azure-sdk/internal/_packaging/azure-sdk-for-js-pr/npm/registry/'
          FailOnMissingPackages: false
          Environment: 'none'

      - job: PublishDocsToNightlyBranch
        condition: and(succeeded(), ne(variables['Skip.PublishDocs'], 'true'))
        pool:
          name: $(LINUXPOOL)
          image: $(LINUXVMIMAGE)
          os: linux
        steps:
          - template: /eng/common/pipelines/templates/steps/sparse-checkout.yml
            parameters:
              Paths:
                - sdk/**/*.md
                - .github/CODEOWNERS
          - download: current
          - pwsh: |
              Get-ChildItem -Recurse $(Pipeline.Workspace)/${{parameters.ArtifactName}}/
            displayName: Show visible artifacts
          - template: /eng/pipelines/templates/steps/install-rex-validation-tool.yml
          - template: /eng/common/pipelines/templates/steps/update-docsms-metadata.yml
            parameters:
              PackageInfoLocations:
                - ${{ each artifact in parameters.Artifacts }}:
                    - ${{if ne(artifact.skipPublishDocMs, 'true')}}:
                        - $(Pipeline.Workspace)/${{parameters.ArtifactName}}/PackageInfo/${{artifact.name}}.json
              RepoId: Azure/azure-sdk-for-js
              WorkingDirectory: $(System.DefaultWorkingDirectory)
              TargetDocRepoOwner: ${{parameters.TargetDocRepoOwner}}
              TargetDocRepoName: ${{parameters.TargetDocRepoName}}
              Language: javascript
              DailyDocsBuild: true
              SparseCheckoutPaths:
                - docs-ref-services/
                - metadata/
                - ci-configs/packages-latest.json
                - ci-configs/packages-preview.json
          - template: /eng/common/pipelines/templates/steps/docsms-ensure-validation.yml
