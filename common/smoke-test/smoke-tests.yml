jobs:
  - job: SmokeTest
    strategy:
      matrix:
        Linux (AzureCloud):
          OSVmImage: "ubuntu-18.04"
          CloudType: AzureCloud
          ArmTemplateParameters: $(azureCloudArmParameters)
        Windows (AzureCloud):
          OSVmImage: "windows-2019"
          CloudType: AzureCloud
          ArmTemplateParameters: $(azureCloudArmParameters)
        Mac (AzureCloud):
          OSVmImage: "macOS-10.14"
          CloudType: AzureCloud
          ArmTemplateParameters: $(azureCloudArmParameters)
        Linux (AzureUSGovernment):
          OSVmImage: "ubuntu-18.04"
          CloudType: AzureUSGovernment
          ArmTemplateParameters: $(azureUSGovernmentArmParameters)
        Windows (AzureUSGovernment):
          OSVmImage: "windows-2019"
          CloudType: AzureUSGovernment
          ArmTemplateParameters: $(azureUSGovernmentArmParameters)
        Linux (AzureChinaCloud):
          OSVmImage: "ubuntu-18.04"
          CloudType: AzureChinaCloud
          ArmTemplateParameters: $(azureChinaCloudArmParameters)
        Windows (AzureChinaCloud):
          OSVmImage: "windows-2019"
          CloudType: AzureChinaCloud
          ArmTemplateParameters: $(azureChinaCloudArmParameters)

    pool:
      vmImage: $(OSVmImage)

    variables:
      - template: ../../eng/pipelines/templates/variables/globals.yml
      - name: Location
        value: ""
      - name: azureCloudArmParameters
        value: "@{ storageEndpointSuffix = 'core.windows.net'; azureCloud = 'AzureCloud'; }"
      - name: azureUSGovernmentArmParameters
        value: "@{ storageEndpointSuffix = 'core.usgovcloudapi.net'; azureCloud = 'AzureUSGovernment'; }"
      - name: azureChinaCloudArmParameters
        value: "@{ storageEndpointSuffix = 'core.chinacloudapi.cn'; azureCloud = 'AzureChinaCloud'; }"

    steps:
      - task: NodeTool@0
        displayName: Use Node $(NodeVersion)
        inputs:
          versionSpec: $(NodeVersion)

      - task: Npm@1
        inputs:
          command: install
          workingDir: common/smoke-test/
        displayName: Install packages

      - task: Npm@1
        inputs:
          command: custom
          customCommand: "list --depth=0"
          workingDir: common/smoke-test/
        displayName: List packages installed from the feed

      # The MacOS image does not have TypeScript installed by default
      - task: Npm@1
        inputs:
          command: custom
          customCommand: "install -g typescript"
        displayName: Install TypeScript
        condition: and(succeeded(), contains(variables['OSVmImage'], 'macos'))

      - script: tsc -p ./common/smoke-test/
        displayName: "Compile TS"

      - template: ../../eng/common/TestResources/deploy-test-resources.yml
        parameters:
          ServiceDirectory: "$(Build.SourcesDirectory)/common/smoke-test/"
          CloudType: $(CloudType)
          Location: $(Location)
          ArmTemplateParameters: $(ArmTemplateParameters)

      - script: node ./common/smoke-test/app.js
        displayName: Run Smoke Test

      - template: ../../eng/common/TestResources/remove-test-resources.yml
        parameters:
          ServiceDirectory: "$(Build.SourcesDirectory)/common/smoke-test/"
