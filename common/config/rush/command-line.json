/**
 * This configuration file defines custom commands for the "rush" command-line.
 * For full documentation, please see https://rushjs.io
 */
{
  "$schema": "https://developer.microsoft.com/json-schemas/rush/v5/command-line.schema.json",

  /**
   * Custom "commands" introduce new verbs for the command-line.  To see the help for these
   * example commands, try "rush --help", "rush my-bulk-command --help", or
   * "rush my-global-command --help".
   */
  "commands": [
    // Required Scripts
    {
      "commandKind": "bulk",
      "name": "audit",
      "summary": "Audit projects",
      "enableParallelism": true
    },
    {
      "commandKind": "bulk",
      "name": "build",
      "summary": "Build all projects that haven't been built, or have changed since they were last built",
      "description": "This command is similar to \"rush rebuild\", except that \"rush build\" performs...",
      "safeForSimultaneousRushProcesses": false,
      "enableParallelism": true,
      "ignoreDependencyOrder": false,
      "ignoreMissingScript": false,
      "allowWarningsInSuccessfulBuild": true
    },
    {
      "commandKind": "bulk",
      "name": "build:samples",
      "summary": "Build the samples only in projects",
      "enableParallelism": true,
      "allowWarningsInSuccessfulBuild": true
    },
    {
      "commandKind": "bulk",
      "name": "build:test",
      "summary": "Build the test targets only in projects",
      "enableParallelism": true,
      "allowWarningsInSuccessfulBuild": true
    },
    {
      "commandKind": "bulk",
      "name": "check-format",
      "summary": "Show formatting issues within projects",
      "enableParallelism": true
    },
    {
      "commandKind": "bulk",
      "name": "clean",
      "summary": "Clean projects",
      "enableParallelism": true
    },
    {
      "commandKind": "bulk",
      "name": "format",
      "summary": "Reformat projects",
      "enableParallelism": true
    },
    {
      "commandKind": "bulk",
      "name": "integration-test:browser",
      "summary": "Execute browser integration tests defined in projects",
      "enableParallelism": true,
      "allowWarningsInSuccessfulBuild": true
    },
    {
      "commandKind": "bulk",
      "name": "integration-test:node",
      "summary": "Execute Node integration tests defined in projects",
      "enableParallelism": true,
      "allowWarningsInSuccessfulBuild": true
    },
    {
      "commandKind": "bulk",
      "name": "integration-test",
      "summary": "Execute integration tests defined in projects",
      "description": "Execute tests which require an actual service instance (live Azure, emulator, etc). Integration tests typically require service endpoints to be specified via environment variables in order to run.",
      "enableParallelism": true,
      "allowWarningsInSuccessfulBuild": true
    },
    {
      "commandKind": "bulk",
      "name": "lint:fix",
      "summary": "Fix linting errors for projects",
      "enableParallelism": true
    },
    {
      "commandKind": "bulk",
      "name": "lint",
      "summary": "Lint projects",
      "enableParallelism": true
    },
    {
      "commandKind": "bulk",
      "name": "pack",
      "summary": "Pack projects",
      "enableParallelism": true
    },
    {
      "commandKind": "bulk",
      "name": "test:browser",
      "summary": "Execute browser dev tests defined in projects",
      "enableParallelism": true
    },
    {
      "commandKind": "bulk",
      "name": "test-consumer",
      "summary": "Execute consumer tests defined in projects",
      "enableParallelism": true
    },
    {
      "commandKind": "bulk",
      "name": "test:node",
      "summary": "Execute Node dev tests defined in projects",
      "enableParallelism": true
    },
    {
      "commandKind": "bulk",
      "name": "test",
      "summary": "Execute dev tests defined in projects",
      "description": "Execute any tests which a developer typically runs in their inner dev loop. Dev tests *should* just refer to other test scripts, but they don't have to. This command is never run by the build server.",
      "enableParallelism": true
    },
    {
      "commandKind": "bulk",
      "name": "unit-test:browser",
      "summary": "Execute browser unit tests defined in projects",
      "enableParallelism": true,
      "allowWarningsInSuccessfulBuild": true
    },
    {
      "commandKind": "bulk",
      "name": "unit-test:node",
      "summary": "Execute Node unit tests defined in projects",
      "enableParallelism": true,
      "allowWarningsInSuccessfulBuild": true
    },
    {
      "commandKind": "bulk",
      "name": "unit-test",
      "summary": "Execute unit tests defined in projects",
      "description": "Execute tests which don't need to connect to any external service.",
      "enableParallelism": true,
      "allowWarningsInSuccessfulBuild": true
    },
    {
      "commandKind": "bulk",
      "name": "execute:samples",
      "summary": "Execute samples defined in projects",
      "description": "Execute samples against external service.",
      "enableParallelism": true,
      "allowWarningsInSuccessfulBuild": true
    },
    // Optional Scripts
    {
      "commandKind": "bulk",
      "name": "extract-api",
      "summary": "Run API Extractor on projects",
      "enableParallelism": true,
      "ignoreMissingScript": true
    },

    {
      "commandKind": "bulk",
      "name": "generate-doc",
      "summary": "Run typedoc on projects and generate documentation",
      "enableParallelism": true,
      "ignoreMissingScript": true
    },

    // Global Commands
    {
      "commandKind": "global",
      "name": "list-files",
      "summary": "List files within Rush project directories",
      "shellCommand": "node common/scripts/list-files.js"
    },
    {
      "commandKind": "global",
      "name": "reset-workspace",
      "summary": "Reset your workspace - !!DANGER!! unlink dependencies, purge downloaded node_modules, and remove all untracked files and directories",
      "safeForSimultaneousRushProcesses": true,
      "shellCommand": "rush unlink && echo \"\nStarting \\\"git clean\\\"\" && git clean -dfx && rush purge"
    },
    {
      "commandKind": "global",
      "name": "sync-versions",
      "summary": "Sync versions among projects",
      "shellCommand": "node common/scripts/sync-versions.js"
    },
    {
      "commandKind": "global",
      "name": "uninstall",
      "summary": "Unlink dependencies and purge downloaded node_modules",
      "safeForSimultaneousRushProcesses": true,
      "shellCommand": "rush unlink && rush purge"
    },
    {
      "name": "prettier",
      "commandKind": "global",
      "summary": "Used by the pre-commit Git hook. This command invokes Prettier to reformat staged changes.",

      "autoinstallerName": "rush-prettier",

      // This will invoke common/autoinstallers/rush-prettier/node_modules/.bin/pretty-quick
      "shellCommand": "pretty-quick --staged --no-restage"
    }
  ],

  /**
   * Custom "parameters" introduce new parameters for specified Rush command-line commands.
   * For example, you might define a "--production" parameter for the "rush build" command.
   */
  "parameters": [
    {
      "parameterKind": "flag",
      "longName": "--sync-peers",
      "description": "Also sync peer dependency versions with those in the working directory.",
      "associatedCommands": ["sync-versions"]
    }
  ]
}
