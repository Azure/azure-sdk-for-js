{"version":3,"sources":["webpack://dnsManagementClient/webpack/bootstrap","webpack://dnsManagementClient/external \"msRest\"","webpack://dnsManagementClient/external \"msRestAzure\"","webpack://dnsManagementClient/./esm/models/index.js","webpack://dnsManagementClient/./esm/models/mappers.js","webpack://dnsManagementClient/./esm/models/parameters.js","webpack://dnsManagementClient/./esm/operations/recordSets.js","webpack://dnsManagementClient/./esm/operations/zones.js","webpack://dnsManagementClient/./esm/operations/dnsResourceReferenceOperations.js","webpack://dnsManagementClient/./esm/dnsManagementClientContext.js","webpack://dnsManagementClient/./esm/dnsManagementClient.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","msRest","msRestAzure","ZoneType","RecordType","__assign","assign","arguments","length","apply","this","CloudError","external_msRestAzure_","BaseResource","ARecord","serializedName","type","className","modelProperties","ipv4Address","AaaaRecord","ipv6Address","MxRecord","preference","exchange","NsRecord","nsdname","PtrRecord","ptrdname","SrvRecord","priority","weight","port","target","TxtRecord","element","CnameRecord","cname","SoaRecord","host","email","serialNumber","refreshTime","retryTime","expireTime","minimumTtl","CaaRecord","flags","tag","SubResource","id","RecordSet","readOnly","etag","metadata","tTL","fqdn","provisioningState","targetResource","aRecords","aaaaRecords","mxRecords","nsRecords","ptrRecords","srvRecords","txtRecords","cnameRecord","soaRecord","caaRecords","RecordSetUpdateParameters","recordSet","Resource","location","required","tags","Zone","maxNumberOfRecordSets","numberOfRecordSets","nameServers","zoneType","defaultValue","allowedValues","registrationVirtualNetworks","resolutionVirtualNetworks","ZoneUpdate","DnsResourceReferenceRequest","targetResources","DnsResourceReference","dnsResources","DnsResourceReferenceResult","dnsResourceReferences","RecordSetListResult","nextLink","ZoneListResult","acceptLanguage","parameterPath","mapper","apiVersion","ifMatch","ifNoneMatch","nextPageLink","skipEncoding","recordsetnamesuffix","recordType","relativeRecordSetName","resourceGroupName","parameters_subscriptionId","parameters_top","zoneName","recordSets_assign","RecordSets","client","update","parameters","options","callback","sendOperationRequest","updateOperationSpec","createOrUpdate","createOrUpdateOperationSpec","deleteMethod","deleteMethodOperationSpec","getOperationSpec","listByType","listByTypeOperationSpec","listByDnsZone","listByDnsZoneOperationSpec","listAllByDnsZone","listAllByDnsZoneOperationSpec","listByTypeNext","listByTypeNextOperationSpec","listByDnsZoneNext","listByDnsZoneNextOperationSpec","listAllByDnsZoneNext","listAllByDnsZoneNextOperationSpec","serializer","external_msRest_","recordSetsMappers_namespaceObject","httpMethod","path","urlParameters","queryParameters","headerParameters","requestBody","responses","200","bodyMapper","default","201","204","baseUrl","zones_assign","Zones","zones_createOrUpdateOperationSpec","beginDeleteMethod","then","lroPoller","pollUntilFinished","zones_getOperationSpec","zones_updateOperationSpec","listByResourceGroup","listByResourceGroupOperationSpec","list","listOperationSpec","sendLRORequest","beginDeleteMethodOperationSpec","listByResourceGroupNext","listByResourceGroupNextOperationSpec","listNext","listNextOperationSpec","zones_serializer","zonesMappers_namespaceObject","202","dnsResourceReferenceOperations_assign","DnsResourceReferenceOperations","getByTargetResources","getByTargetResourcesOperationSpec","dnsResourceReferenceOperations_serializer","dnsResourceReferenceOperationsMappers_namespaceObject","__extends","extendStatics","b","setPrototypeOf","__proto__","Array","__","constructor","packageName","packageVersion","DnsManagementClientContext","_super","credentials","subscriptionId","baseUri","_this","undefined","Error","longRunningOperationRetryTimeout","requestContentType","addUserAgentInfo","__webpack_exports__","dnsManagementClient_DnsManagementClient","models_namespaceObject","mappers_namespaceObject","dnsManagementClient_extends","DnsManagementClient","recordSets","zones","dnsResourceReference"],"mappings":"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O4D,GACPrB,eAAA,cACAC,MACAxC,KAAA,YACAyC,UAAA,cACAC,iBACAmB,OACAtB,eAAA,QACAC,MACAxC,KAAA,cAMO8D,GACPvB,eAAA,YACAC,MACAxC,KAAA,YACAyC,UAAA,YACAC,iBACAqB,MACAxB,eAAA,OACAC,MACAxC,KAAA,WAGAgE,OACAzB,eAAA,QACAC,MACAxC,KAAA,WAGAiE,cACA1B,eAAA,eACAC,MACAxC,KAAA,WAGAkE,aACA3B,eAAA,cACAC,MACAxC,KAAA,WAGAmE,WACA5B,eAAA,YACAC,MACAxC,KAAA,WAGAoE,YACA7B,eAAA,aACAC,MACAxC,KAAA,WAGAqE,YACA9B,eAAA,aACAC,MACAxC,KAAA,cAMOsE,GACP/B,eAAA,YACAC,MACAxC,KAAA,YACAyC,UAAA,YACAC,iBACA6B,OACAhC,eAAA,QACAC,MACAxC,KAAA,WAGAwE,KACAjC,eAAA,MACAC,MACAxC,KAAA,WAGAU,OACA6B,eAAA,QACAC,MACAxC,KAAA,cAMOyE,GACPlC,eAAA,cACAC,MACAxC,KAAA,YACAyC,UAAA,cACAC,iBACAgC,IACAnC,eAAA,KACAC,MACAxC,KAAA,cAMO2E,GACPpC,eAAA,YACAC,MACAxC,KAAA,YACAyC,UAAA,YACAC,iBACAgC,IACAE,UAAA,EACArC,eAAA,KACAC,MACAxC,KAAA,WAGAA,MACA4E,UAAA,EACArC,eAAA,OACAC,MACAxC,KAAA,WAGAwC,MACAoC,UAAA,EACArC,eAAA,OACAC,MACAxC,KAAA,WAGA6E,MACAtC,eAAA,OACAC,MACAxC,KAAA,WAGA8E,UACAvC,eAAA,sBACAC,MACAxC,KAAA,aACAU,OACA8B,MACAxC,KAAA,aAKA+E,KACAxC,eAAA,iBACAC,MACAxC,KAAA,WAGAgF,MACAJ,UAAA,EACArC,eAAA,kBACAC,MACAxC,KAAA,WAGAiF,mBACAL,UAAA,EACArC,eAAA,+BACAC,MACAxC,KAAA,WAGAkF,gBACA3C,eAAA,4BACAC,MACAxC,KAAA,YACAyC,UAAA,gBAGA0C,UACA5C,eAAA,sBACAC,MACAxC,KAAA,WACA2D,SACAnB,MACAxC,KAAA,YACAyC,UAAA,cAKA2C,aACA7C,eAAA,yBACAC,MACAxC,KAAA,WACA2D,SACAnB,MACAxC,KAAA,YACAyC,UAAA,iBAKA4C,WACA9C,eAAA,uBACAC,MACAxC,KAAA,WACA2D,SACAnB,MACAxC,KAAA,YACAyC,UAAA,eAKA6C,WACA/C,eAAA,uBACAC,MACAxC,KAAA,WACA2D,SACAnB,MACAxC,KAAA,YACAyC,UAAA,eAKA8C,YACAhD,eAAA,wBACAC,MACAxC,KAAA,WACA2D,SACAnB,MACAxC,KAAA,YACAyC,UAAA,gBAKA+C,YACAjD,eAAA,wBACAC,MACAxC,KAAA,WACA2D,SACAnB,MACAxC,KAAA,YACAyC,UAAA,gBAKAgD,YACAlD,eAAA,wBACAC,MACAxC,KAAA,WACA2D,SACAnB,MACAxC,KAAA,YACAyC,UAAA,gBAKAiD,aACAnD,eAAA,yBACAC,MACAxC,KAAA,YACAyC,UAAA,gBAGAkD,WACApD,eAAA,uBACAC,MACAxC,KAAA,YACAyC,UAAA,cAGAmD,YACArD,eAAA,wBACAC,MACAxC,KAAA,WACA2D,SACAnB,MACAxC,KAAA,YACAyC,UAAA,mBAQOoD,GACPtD,eAAA,4BACAC,MACAxC,KAAA,YACAyC,UAAA,4BACAC,iBACAoD,WACAvD,eAAA,YACAC,MACAxC,KAAA,YACAyC,UAAA,iBAMOsD,GACPxD,eAAA,WACAC,MACAxC,KAAA,YACAyC,UAAA,WACAC,iBACAgC,IACAE,UAAA,EACArC,eAAA,KACAC,MACAxC,KAAA,WAGAA,MACA4E,UAAA,EACArC,eAAA,OACAC,MACAxC,KAAA,WAGAwC,MACAoC,UAAA,EACArC,eAAA,OACAC,MACAxC,KAAA,WAGAgG,UACAC,UAAA,EACA1D,eAAA,WACAC,MACAxC,KAAA,WAGAkG,MACA3D,eAAA,OACAC,MACAxC,KAAA,aACAU,OACA8B,MACAxC,KAAA,gBAQOmG,GACP5D,eAAA,OACAC,MACAxC,KAAA,YACAyC,UAAA,OACAC,gBAAAb,KAAoCkE,EAAAvD,KAAAE,iBAAkCmC,MACtEtC,eAAA,OACAC,MACAxC,KAAA,WAEaoG,uBACbxB,UAAA,EACArC,eAAA,mCACAC,MACAxC,KAAA,WAEaqG,oBACbzB,UAAA,EACArC,eAAA,gCACAC,MACAxC,KAAA,WAEasG,aACb1B,UAAA,EACArC,eAAA,yBACAC,MACAxC,KAAA,WACA2D,SACAnB,MACAxC,KAAA,aAIauG,UACbhE,eAAA,sBACAiE,aAAA,SACAhE,MACAxC,KAAA,OACAyG,eACA,SACA,aAGaC,6BACbnE,eAAA,yCACAC,MACAxC,KAAA,WACA2D,SACAnB,MACAxC,KAAA,YACAyC,UAAA,kBAIakE,2BACbpE,eAAA,uCACAC,MACAxC,KAAA,WACA2D,SACAnB,MACAxC,KAAA,YACAyC,UAAA,sBAOOmE,GACPrE,eAAA,aACAC,MACAxC,KAAA,YACAyC,UAAA,aACAC,iBACAwD,MACA3D,eAAA,OACAC,MACAxC,KAAA,aACAU,OACA8B,MACAxC,KAAA,gBAQO6G,GACPtE,eAAA,8BACAC,MACAxC,KAAA,YACAyC,UAAA,8BACAC,iBACAoE,iBACAvE,eAAA,6BACAC,MACAxC,KAAA,WACA2D,SACAnB,MACAxC,KAAA,YACAyC,UAAA,qBAQOsE,GACPxE,eAAA,uBACAC,MACAxC,KAAA,YACAyC,UAAA,uBACAC,iBACAsE,cACAzE,eAAA,eACAC,MACAxC,KAAA,WACA2D,SACAnB,MACAxC,KAAA,YACAyC,UAAA,kBAKAyC,gBACA3C,eAAA,iBACAC,MACAxC,KAAA,YACAyC,UAAA,mBAMOwE,GACP1E,eAAA,6BACAC,MACAxC,KAAA,YACAyC,UAAA,6BACAC,iBACAwE,uBACA3E,eAAA,mCACAC,MACAxC,KAAA,WACA2D,SACAnB,MACAxC,KAAA,YACAyC,UAAA,8BAQO0E,GACP5E,eAAA,sBACAC,MACAxC,KAAA,YACAyC,UAAA,sBACAC,iBACAhC,OACA6B,eAAA,GACAC,MACAxC,KAAA,WACA2D,SACAnB,MACAxC,KAAA,YACAyC,UAAA,gBAKA2E,UACAxC,UAAA,EACArC,eAAA,WACAC,MACAxC,KAAA,cAMOqH,GACP9E,eAAA,iBACAC,MA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","file":"dnsManagementClientBundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","module.exports = msRest;","module.exports = msRestAzure;","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for\r\n * license information.\r\n *\r\n * Code generated by Microsoft (R) AutoRest Code Generator.\r\n * Changes may cause incorrect behavior and will be lost if the code is\r\n * regenerated.\r\n */\r\n/**\r\n * Defines values for ZoneType.\r\n * Possible values include: 'Public', 'Private'\r\n * @readonly\r\n * @enum {string}\r\n */\r\nexport var ZoneType;\r\n(function (ZoneType) {\r\n    ZoneType[\"Public\"] = \"Public\";\r\n    ZoneType[\"Private\"] = \"Private\";\r\n})(ZoneType || (ZoneType = {}));\r\n/**\r\n * Defines values for RecordType.\r\n * Possible values include: 'A', 'AAAA', 'CAA', 'CNAME', 'MX', 'NS', 'PTR',\r\n * 'SOA', 'SRV', 'TXT'\r\n * @readonly\r\n * @enum {string}\r\n */\r\nexport var RecordType;\r\n(function (RecordType) {\r\n    RecordType[\"A\"] = \"A\";\r\n    RecordType[\"AAAA\"] = \"AAAA\";\r\n    RecordType[\"CAA\"] = \"CAA\";\r\n    RecordType[\"CNAME\"] = \"CNAME\";\r\n    RecordType[\"MX\"] = \"MX\";\r\n    RecordType[\"NS\"] = \"NS\";\r\n    RecordType[\"PTR\"] = \"PTR\";\r\n    RecordType[\"SOA\"] = \"SOA\";\r\n    RecordType[\"SRV\"] = \"SRV\";\r\n    RecordType[\"TXT\"] = \"TXT\";\r\n})(RecordType || (RecordType = {}));\r\n//# sourceMappingURL=index.js.map","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for\r\n * license information.\r\n *\r\n * Code generated by Microsoft (R) AutoRest Code Generator.\r\n * Changes may cause incorrect behavior and will be lost if the code is\r\n * regenerated.\r\n */\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nimport { CloudErrorMapper, BaseResourceMapper } from \"ms-rest-azure-js\";\r\nexport var CloudError = CloudErrorMapper;\r\nexport var BaseResource = BaseResourceMapper;\r\nexport var ARecord = {\r\n    serializedName: \"ARecord\",\r\n    type: {\r\n        name: \"Composite\",\r\n        className: \"ARecord\",\r\n        modelProperties: {\r\n            ipv4Address: {\r\n                serializedName: \"ipv4Address\",\r\n                type: {\r\n                    name: \"String\"\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\nexport var AaaaRecord = {\r\n    serializedName: \"AaaaRecord\",\r\n    type: {\r\n        name: \"Composite\",\r\n        className: \"AaaaRecord\",\r\n        modelProperties: {\r\n            ipv6Address: {\r\n                serializedName: \"ipv6Address\",\r\n                type: {\r\n                    name: \"String\"\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\nexport var MxRecord = {\r\n    serializedName: \"MxRecord\",\r\n    type: {\r\n        name: \"Composite\",\r\n        className: \"MxRecord\",\r\n        modelProperties: {\r\n            preference: {\r\n                serializedName: \"preference\",\r\n                type: {\r\n                    name: \"Number\"\r\n                }\r\n            },\r\n            exchange: {\r\n                serializedName: \"exchange\",\r\n                type: {\r\n                    name: \"String\"\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\nexport var NsRecord = {\r\n    serializedName: \"NsRecord\",\r\n    type: {\r\n        name: \"Composite\",\r\n        className: \"NsRecord\",\r\n        modelProperties: {\r\n            nsdname: {\r\n                serializedName: \"nsdname\",\r\n                type: {\r\n                    name: \"String\"\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\nexport var PtrRecord = {\r\n    serializedName: \"PtrRecord\",\r\n    type: {\r\n        name: \"Composite\",\r\n        className: \"PtrRecord\",\r\n        modelProperties: {\r\n            ptrdname: {\r\n                serializedName: \"ptrdname\",\r\n                type: {\r\n                    name: \"String\"\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\nexport var SrvRecord = {\r\n    serializedName: \"SrvRecord\",\r\n    type: {\r\n        name: \"Composite\",\r\n        className: \"SrvRecord\",\r\n        modelProperties: {\r\n            priority: {\r\n                serializedName: \"priority\",\r\n                type: {\r\n                    name: \"Number\"\r\n                }\r\n            },\r\n            weight: {\r\n                serializedName: \"weight\",\r\n                type: {\r\n                    name: \"Number\"\r\n                }\r\n            },\r\n            port: {\r\n                serializedName: \"port\",\r\n                type: {\r\n                    name: \"Number\"\r\n                }\r\n            },\r\n            target: {\r\n                serializedName: \"target\",\r\n                type: {\r\n                    name: \"String\"\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\nexport var TxtRecord = {\r\n    serializedName: \"TxtRecord\",\r\n    type: {\r\n        name: \"Composite\",\r\n        className: \"TxtRecord\",\r\n        modelProperties: {\r\n            value: {\r\n                serializedName: \"value\",\r\n                type: {\r\n                    name: \"Sequence\",\r\n                    element: {\r\n                        type: {\r\n                            name: \"String\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\nexport var CnameRecord = {\r\n    serializedName: \"CnameRecord\",\r\n    type: {\r\n        name: \"Composite\",\r\n        className: \"CnameRecord\",\r\n        modelProperties: {\r\n            cname: {\r\n                serializedName: \"cname\",\r\n                type: {\r\n                    name: \"String\"\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\nexport var SoaRecord = {\r\n    serializedName: \"SoaRecord\",\r\n    type: {\r\n        name: \"Composite\",\r\n        className: \"SoaRecord\",\r\n        modelProperties: {\r\n            host: {\r\n                serializedName: \"host\",\r\n                type: {\r\n                    name: \"String\"\r\n                }\r\n            },\r\n            email: {\r\n                serializedName: \"email\",\r\n                type: {\r\n                    name: \"String\"\r\n                }\r\n            },\r\n            serialNumber: {\r\n                serializedName: \"serialNumber\",\r\n                type: {\r\n                    name: \"Number\"\r\n                }\r\n            },\r\n            refreshTime: {\r\n                serializedName: \"refreshTime\",\r\n                type: {\r\n                    name: \"Number\"\r\n                }\r\n            },\r\n            retryTime: {\r\n                serializedName: \"retryTime\",\r\n                type: {\r\n                    name: \"Number\"\r\n                }\r\n            },\r\n            expireTime: {\r\n                serializedName: \"expireTime\",\r\n                type: {\r\n                    name: \"Number\"\r\n                }\r\n            },\r\n            minimumTtl: {\r\n                serializedName: \"minimumTTL\",\r\n                type: {\r\n                    name: \"Number\"\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\nexport var CaaRecord = {\r\n    serializedName: \"CaaRecord\",\r\n    type: {\r\n        name: \"Composite\",\r\n        className: \"CaaRecord\",\r\n        modelProperties: {\r\n            flags: {\r\n                serializedName: \"flags\",\r\n                type: {\r\n                    name: \"Number\"\r\n                }\r\n            },\r\n            tag: {\r\n                serializedName: \"tag\",\r\n                type: {\r\n                    name: \"String\"\r\n                }\r\n            },\r\n            value: {\r\n                serializedName: \"value\",\r\n                type: {\r\n                    name: \"String\"\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\nexport var SubResource = {\r\n    serializedName: \"SubResource\",\r\n    type: {\r\n        name: \"Composite\",\r\n        className: \"SubResource\",\r\n        modelProperties: {\r\n            id: {\r\n                serializedName: \"id\",\r\n                type: {\r\n                    name: \"String\"\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\nexport var RecordSet = {\r\n    serializedName: \"RecordSet\",\r\n    type: {\r\n        name: \"Composite\",\r\n        className: \"RecordSet\",\r\n        modelProperties: {\r\n            id: {\r\n                readOnly: true,\r\n                serializedName: \"id\",\r\n                type: {\r\n                    name: \"String\"\r\n                }\r\n            },\r\n            name: {\r\n                readOnly: true,\r\n                serializedName: \"name\",\r\n                type: {\r\n                    name: \"String\"\r\n                }\r\n            },\r\n            type: {\r\n                readOnly: true,\r\n                serializedName: \"type\",\r\n                type: {\r\n                    name: \"String\"\r\n                }\r\n            },\r\n            etag: {\r\n                serializedName: \"etag\",\r\n                type: {\r\n                    name: \"String\"\r\n                }\r\n            },\r\n            metadata: {\r\n                serializedName: \"properties.metadata\",\r\n                type: {\r\n                    name: \"Dictionary\",\r\n                    value: {\r\n                        type: {\r\n                            name: \"String\"\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            tTL: {\r\n                serializedName: \"properties.TTL\",\r\n                type: {\r\n                    name: \"Number\"\r\n                }\r\n            },\r\n            fqdn: {\r\n                readOnly: true,\r\n                serializedName: \"properties.fqdn\",\r\n                type: {\r\n                    name: \"String\"\r\n                }\r\n            },\r\n            provisioningState: {\r\n                readOnly: true,\r\n                serializedName: \"properties.provisioningState\",\r\n                type: {\r\n                    name: \"String\"\r\n                }\r\n            },\r\n            targetResource: {\r\n                serializedName: \"properties.targetResource\",\r\n                type: {\r\n                    name: \"Composite\",\r\n                    className: \"SubResource\"\r\n                }\r\n            },\r\n            aRecords: {\r\n                serializedName: \"properties.ARecords\",\r\n                type: {\r\n                    name: \"Sequence\",\r\n                    element: {\r\n                        type: {\r\n                            name: \"Composite\",\r\n                            className: \"ARecord\"\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            aaaaRecords: {\r\n                serializedName: \"properties.AAAARecords\",\r\n                type: {\r\n                    name: \"Sequence\",\r\n                    element: {\r\n                        type: {\r\n                            name: \"Composite\",\r\n                            className: \"AaaaRecord\"\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            mxRecords: {\r\n                serializedName: \"properties.MXRecords\",\r\n                type: {\r\n                    name: \"Sequence\",\r\n                    element: {\r\n                        type: {\r\n                            name: \"Composite\",\r\n                            className: \"MxRecord\"\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            nsRecords: {\r\n                serializedName: \"properties.NSRecords\",\r\n                type: {\r\n                    name: \"Sequence\",\r\n                    element: {\r\n                        type: {\r\n                            name: \"Composite\",\r\n                            className: \"NsRecord\"\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            ptrRecords: {\r\n                serializedName: \"properties.PTRRecords\",\r\n                type: {\r\n                    name: \"Sequence\",\r\n                    element: {\r\n                        type: {\r\n                            name: \"Composite\",\r\n                            className: \"PtrRecord\"\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            srvRecords: {\r\n                serializedName: \"properties.SRVRecords\",\r\n                type: {\r\n                    name: \"Sequence\",\r\n                    element: {\r\n                        type: {\r\n                            name: \"Composite\",\r\n                            className: \"SrvRecord\"\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            txtRecords: {\r\n                serializedName: \"properties.TXTRecords\",\r\n                type: {\r\n                    name: \"Sequence\",\r\n                    element: {\r\n                        type: {\r\n                            name: \"Composite\",\r\n                            className: \"TxtRecord\"\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            cnameRecord: {\r\n                serializedName: \"properties.CNAMERecord\",\r\n                type: {\r\n                    name: \"Composite\",\r\n                    className: \"CnameRecord\"\r\n                }\r\n            },\r\n            soaRecord: {\r\n                serializedName: \"properties.SOARecord\",\r\n                type: {\r\n                    name: \"Composite\",\r\n                    className: \"SoaRecord\"\r\n                }\r\n            },\r\n            caaRecords: {\r\n                serializedName: \"properties.caaRecords\",\r\n                type: {\r\n                    name: \"Sequence\",\r\n                    element: {\r\n                        type: {\r\n                            name: \"Composite\",\r\n                            className: \"CaaRecord\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\nexport var RecordSetUpdateParameters = {\r\n    serializedName: \"RecordSetUpdateParameters\",\r\n    type: {\r\n        name: \"Composite\",\r\n        className: \"RecordSetUpdateParameters\",\r\n        modelProperties: {\r\n            recordSet: {\r\n                serializedName: \"RecordSet\",\r\n                type: {\r\n                    name: \"Composite\",\r\n                    className: \"RecordSet\"\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\nexport var Resource = {\r\n    serializedName: \"Resource\",\r\n    type: {\r\n        name: \"Composite\",\r\n        className: \"Resource\",\r\n        modelProperties: {\r\n            id: {\r\n                readOnly: true,\r\n                serializedName: \"id\",\r\n                type: {\r\n                    name: \"String\"\r\n                }\r\n            },\r\n            name: {\r\n                readOnly: true,\r\n                serializedName: \"name\",\r\n                type: {\r\n                    name: \"String\"\r\n                }\r\n            },\r\n            type: {\r\n                readOnly: true,\r\n                serializedName: \"type\",\r\n                type: {\r\n                    name: \"String\"\r\n                }\r\n            },\r\n            location: {\r\n                required: true,\r\n                serializedName: \"location\",\r\n                type: {\r\n                    name: \"String\"\r\n                }\r\n            },\r\n            tags: {\r\n                serializedName: \"tags\",\r\n                type: {\r\n                    name: \"Dictionary\",\r\n                    value: {\r\n                        type: {\r\n                            name: \"String\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\nexport var Zone = {\r\n    serializedName: \"Zone\",\r\n    type: {\r\n        name: \"Composite\",\r\n        className: \"Zone\",\r\n        modelProperties: __assign({}, Resource.type.modelProperties, { etag: {\r\n                serializedName: \"etag\",\r\n                type: {\r\n                    name: \"String\"\r\n                }\r\n            }, maxNumberOfRecordSets: {\r\n                readOnly: true,\r\n                serializedName: \"properties.maxNumberOfRecordSets\",\r\n                type: {\r\n                    name: \"Number\"\r\n                }\r\n            }, numberOfRecordSets: {\r\n                readOnly: true,\r\n                serializedName: \"properties.numberOfRecordSets\",\r\n                type: {\r\n                    name: \"Number\"\r\n                }\r\n            }, nameServers: {\r\n                readOnly: true,\r\n                serializedName: \"properties.nameServers\",\r\n                type: {\r\n                    name: \"Sequence\",\r\n                    element: {\r\n                        type: {\r\n                            name: \"String\"\r\n                        }\r\n                    }\r\n                }\r\n            }, zoneType: {\r\n                serializedName: \"properties.zoneType\",\r\n                defaultValue: 'Public',\r\n                type: {\r\n                    name: \"Enum\",\r\n                    allowedValues: [\r\n                        \"Public\",\r\n                        \"Private\"\r\n                    ]\r\n                }\r\n            }, registrationVirtualNetworks: {\r\n                serializedName: \"properties.registrationVirtualNetworks\",\r\n                type: {\r\n                    name: \"Sequence\",\r\n                    element: {\r\n                        type: {\r\n                            name: \"Composite\",\r\n                            className: \"SubResource\"\r\n                        }\r\n                    }\r\n                }\r\n            }, resolutionVirtualNetworks: {\r\n                serializedName: \"properties.resolutionVirtualNetworks\",\r\n                type: {\r\n                    name: \"Sequence\",\r\n                    element: {\r\n                        type: {\r\n                            name: \"Composite\",\r\n                            className: \"SubResource\"\r\n                        }\r\n                    }\r\n                }\r\n            } })\r\n    }\r\n};\r\nexport var ZoneUpdate = {\r\n    serializedName: \"ZoneUpdate\",\r\n    type: {\r\n        name: \"Composite\",\r\n        className: \"ZoneUpdate\",\r\n        modelProperties: {\r\n            tags: {\r\n                serializedName: \"tags\",\r\n                type: {\r\n                    name: \"Dictionary\",\r\n                    value: {\r\n                        type: {\r\n                            name: \"String\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\nexport var DnsResourceReferenceRequest = {\r\n    serializedName: \"DnsResourceReferenceRequest\",\r\n    type: {\r\n        name: \"Composite\",\r\n        className: \"DnsResourceReferenceRequest\",\r\n        modelProperties: {\r\n            targetResources: {\r\n                serializedName: \"properties.targetResources\",\r\n                type: {\r\n                    name: \"Sequence\",\r\n                    element: {\r\n                        type: {\r\n                            name: \"Composite\",\r\n                            className: \"SubResource\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\nexport var DnsResourceReference = {\r\n    serializedName: \"DnsResourceReference\",\r\n    type: {\r\n        name: \"Composite\",\r\n        className: \"DnsResourceReference\",\r\n        modelProperties: {\r\n            dnsResources: {\r\n                serializedName: \"dnsResources\",\r\n                type: {\r\n                    name: \"Sequence\",\r\n                    element: {\r\n                        type: {\r\n                            name: \"Composite\",\r\n                            className: \"SubResource\"\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            targetResource: {\r\n                serializedName: \"targetResource\",\r\n                type: {\r\n                    name: \"Composite\",\r\n                    className: \"SubResource\"\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\nexport var DnsResourceReferenceResult = {\r\n    serializedName: \"DnsResourceReferenceResult\",\r\n    type: {\r\n        name: \"Composite\",\r\n        className: \"DnsResourceReferenceResult\",\r\n        modelProperties: {\r\n            dnsResourceReferences: {\r\n                serializedName: \"properties.dnsResourceReferences\",\r\n                type: {\r\n                    name: \"Sequence\",\r\n                    element: {\r\n                        type: {\r\n                            name: \"Composite\",\r\n                            className: \"DnsResourceReference\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\nexport var RecordSetListResult = {\r\n    serializedName: \"RecordSetListResult\",\r\n    type: {\r\n        name: \"Composite\",\r\n        className: \"RecordSetListResult\",\r\n        modelProperties: {\r\n            value: {\r\n                serializedName: \"\",\r\n                type: {\r\n                    name: \"Sequence\",\r\n                    element: {\r\n                        type: {\r\n                            name: \"Composite\",\r\n                            className: \"RecordSet\"\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            nextLink: {\r\n                readOnly: true,\r\n                serializedName: \"nextLink\",\r\n                type: {\r\n                    name: \"String\"\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\nexport var ZoneListResult = {\r\n    serializedName: \"ZoneListResult\",\r\n    type: {\r\n        name: \"Composite\",\r\n        className: \"ZoneListResult\",\r\n        modelProperties: {\r\n            value: {\r\n                serializedName: \"\",\r\n                type: {\r\n                    name: \"Sequence\",\r\n                    element: {\r\n                        type: {\r\n                            name: \"Composite\",\r\n                            className: \"Zone\"\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            nextLink: {\r\n                readOnly: true,\r\n                serializedName: \"nextLink\",\r\n                type: {\r\n                    name: \"String\"\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n//# sourceMappingURL=mappers.js.map","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for\r\n * license information.\r\n *\r\n * Code generated by Microsoft (R) AutoRest Code Generator.\r\n * Changes may cause incorrect behavior and will be lost if the code is\r\n * regenerated.\r\n */\r\nexport var acceptLanguage = {\r\n    parameterPath: \"acceptLanguage\",\r\n    mapper: {\r\n        serializedName: \"accept-language\",\r\n        defaultValue: 'en-US',\r\n        type: {\r\n            name: \"String\"\r\n        }\r\n    }\r\n};\r\nexport var apiVersion = {\r\n    parameterPath: \"apiVersion\",\r\n    mapper: {\r\n        required: true,\r\n        serializedName: \"api-version\",\r\n        type: {\r\n            name: \"String\"\r\n        }\r\n    }\r\n};\r\nexport var ifMatch = {\r\n    parameterPath: [\r\n        \"options\",\r\n        \"ifMatch\"\r\n    ],\r\n    mapper: {\r\n        serializedName: \"If-Match\",\r\n        type: {\r\n            name: \"String\"\r\n        }\r\n    }\r\n};\r\nexport var ifNoneMatch = {\r\n    parameterPath: [\r\n        \"options\",\r\n        \"ifNoneMatch\"\r\n    ],\r\n    mapper: {\r\n        serializedName: \"If-None-Match\",\r\n        type: {\r\n            name: \"String\"\r\n        }\r\n    }\r\n};\r\nexport var nextPageLink = {\r\n    parameterPath: \"nextPageLink\",\r\n    mapper: {\r\n        required: true,\r\n        serializedName: \"nextLink\",\r\n        type: {\r\n            name: \"String\"\r\n        }\r\n    },\r\n    skipEncoding: true\r\n};\r\nexport var recordsetnamesuffix = {\r\n    parameterPath: [\r\n        \"options\",\r\n        \"recordsetnamesuffix\"\r\n    ],\r\n    mapper: {\r\n        serializedName: \"$recordsetnamesuffix\",\r\n        type: {\r\n            name: \"String\"\r\n        }\r\n    }\r\n};\r\nexport var recordSetNameSuffix = {\r\n    parameterPath: [\r\n        \"options\",\r\n        \"recordSetNameSuffix\"\r\n    ],\r\n    mapper: {\r\n        serializedName: \"$recordsetnamesuffix\",\r\n        type: {\r\n            name: \"String\"\r\n        }\r\n    }\r\n};\r\nexport var recordType = {\r\n    parameterPath: \"recordType\",\r\n    mapper: {\r\n        required: true,\r\n        serializedName: \"recordType\",\r\n        type: {\r\n            name: \"Enum\",\r\n            allowedValues: [\r\n                \"A\",\r\n                \"AAAA\",\r\n                \"CAA\",\r\n                \"CNAME\",\r\n                \"MX\",\r\n                \"NS\",\r\n                \"PTR\",\r\n                \"SOA\",\r\n                \"SRV\",\r\n                \"TXT\"\r\n            ]\r\n        }\r\n    }\r\n};\r\nexport var relativeRecordSetName = {\r\n    parameterPath: \"relativeRecordSetName\",\r\n    mapper: {\r\n        required: true,\r\n        serializedName: \"relativeRecordSetName\",\r\n        type: {\r\n            name: \"String\"\r\n        }\r\n    },\r\n    skipEncoding: true\r\n};\r\nexport var resourceGroupName = {\r\n    parameterPath: \"resourceGroupName\",\r\n    mapper: {\r\n        required: true,\r\n        serializedName: \"resourceGroupName\",\r\n        type: {\r\n            name: \"String\"\r\n        }\r\n    }\r\n};\r\nexport var subscriptionId = {\r\n    parameterPath: \"subscriptionId\",\r\n    mapper: {\r\n        required: true,\r\n        serializedName: \"subscriptionId\",\r\n        type: {\r\n            name: \"String\"\r\n        }\r\n    }\r\n};\r\nexport var top = {\r\n    parameterPath: [\r\n        \"options\",\r\n        \"top\"\r\n    ],\r\n    mapper: {\r\n        serializedName: \"$top\",\r\n        type: {\r\n            name: \"Number\"\r\n        }\r\n    }\r\n};\r\nexport var zoneName = {\r\n    parameterPath: \"zoneName\",\r\n    mapper: {\r\n        required: true,\r\n        serializedName: \"zoneName\",\r\n        type: {\r\n            name: \"String\"\r\n        }\r\n    }\r\n};\r\n//# sourceMappingURL=parameters.js.map","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for\r\n * license information.\r\n *\r\n * Code generated by Microsoft (R) AutoRest Code Generator.\r\n * Changes may cause incorrect behavior and will be lost if the code is\r\n * regenerated.\r\n */\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nimport * as msRest from \"ms-rest-js\";\r\nimport * as Mappers from \"../models/recordSetsMappers\";\r\nimport * as Parameters from \"../models/parameters\";\r\n/** Class representing a RecordSets. */\r\nvar RecordSets = /** @class */ (function () {\r\n    /**\r\n     * Create a RecordSets.\r\n     * @param {DnsManagementClientContext} client Reference to the service client.\r\n     */\r\n    function RecordSets(client) {\r\n        this.client = client;\r\n    }\r\n    RecordSets.prototype.update = function (resourceGroupName, zoneName, relativeRecordSetName, recordType, parameters, options, callback) {\r\n        return this.client.sendOperationRequest({\r\n            resourceGroupName: resourceGroupName,\r\n            zoneName: zoneName,\r\n            relativeRecordSetName: relativeRecordSetName,\r\n            recordType: recordType,\r\n            parameters: parameters,\r\n            options: options\r\n        }, updateOperationSpec, callback);\r\n    };\r\n    RecordSets.prototype.createOrUpdate = function (resourceGroupName, zoneName, relativeRecordSetName, recordType, parameters, options, callback) {\r\n        return this.client.sendOperationRequest({\r\n            resourceGroupName: resourceGroupName,\r\n            zoneName: zoneName,\r\n            relativeRecordSetName: relativeRecordSetName,\r\n            recordType: recordType,\r\n            parameters: parameters,\r\n            options: options\r\n        }, createOrUpdateOperationSpec, callback);\r\n    };\r\n    RecordSets.prototype.deleteMethod = function (resourceGroupName, zoneName, relativeRecordSetName, recordType, options, callback) {\r\n        return this.client.sendOperationRequest({\r\n            resourceGroupName: resourceGroupName,\r\n            zoneName: zoneName,\r\n            relativeRecordSetName: relativeRecordSetName,\r\n            recordType: recordType,\r\n            options: options\r\n        }, deleteMethodOperationSpec, callback);\r\n    };\r\n    RecordSets.prototype.get = function (resourceGroupName, zoneName, relativeRecordSetName, recordType, options, callback) {\r\n        return this.client.sendOperationRequest({\r\n            resourceGroupName: resourceGroupName,\r\n            zoneName: zoneName,\r\n            relativeRecordSetName: relativeRecordSetName,\r\n            recordType: recordType,\r\n            options: options\r\n        }, getOperationSpec, callback);\r\n    };\r\n    RecordSets.prototype.listByType = function (resourceGroupName, zoneName, recordType, options, callback) {\r\n        return this.client.sendOperationRequest({\r\n            resourceGroupName: resourceGroupName,\r\n            zoneName: zoneName,\r\n            recordType: recordType,\r\n            options: options\r\n        }, listByTypeOperationSpec, callback);\r\n    };\r\n    RecordSets.prototype.listByDnsZone = function (resourceGroupName, zoneName, options, callback) {\r\n        return this.client.sendOperationRequest({\r\n            resourceGroupName: resourceGroupName,\r\n            zoneName: zoneName,\r\n            options: options\r\n        }, listByDnsZoneOperationSpec, callback);\r\n    };\r\n    RecordSets.prototype.listAllByDnsZone = function (resourceGroupName, zoneName, options, callback) {\r\n        return this.client.sendOperationRequest({\r\n            resourceGroupName: resourceGroupName,\r\n            zoneName: zoneName,\r\n            options: options\r\n        }, listAllByDnsZoneOperationSpec, callback);\r\n    };\r\n    RecordSets.prototype.listByTypeNext = function (nextPageLink, options, callback) {\r\n        return this.client.sendOperationRequest({\r\n            nextPageLink: nextPageLink,\r\n            options: options\r\n        }, listByTypeNextOperationSpec, callback);\r\n    };\r\n    RecordSets.prototype.listByDnsZoneNext = function (nextPageLink, options, callback) {\r\n        return this.client.sendOperationRequest({\r\n            nextPageLink: nextPageLink,\r\n            options: options\r\n        }, listByDnsZoneNextOperationSpec, callback);\r\n    };\r\n    RecordSets.prototype.listAllByDnsZoneNext = function (nextPageLink, options, callback) {\r\n        return this.client.sendOperationRequest({\r\n            nextPageLink: nextPageLink,\r\n            options: options\r\n        }, listAllByDnsZoneNextOperationSpec, callback);\r\n    };\r\n    return RecordSets;\r\n}());\r\nexport { RecordSets };\r\n// Operation Specifications\r\nvar serializer = new msRest.Serializer(Mappers);\r\nvar updateOperationSpec = {\r\n    httpMethod: \"PATCH\",\r\n    path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/{recordType}/{relativeRecordSetName}\",\r\n    urlParameters: [\r\n        Parameters.resourceGroupName,\r\n        Parameters.zoneName,\r\n        Parameters.relativeRecordSetName,\r\n        Parameters.recordType,\r\n        Parameters.subscriptionId\r\n    ],\r\n    queryParameters: [\r\n        Parameters.apiVersion\r\n    ],\r\n    headerParameters: [\r\n        Parameters.ifMatch,\r\n        Parameters.acceptLanguage\r\n    ],\r\n    requestBody: {\r\n        parameterPath: \"parameters\",\r\n        mapper: __assign({}, Mappers.RecordSet, { required: true })\r\n    },\r\n    responses: {\r\n        200: {\r\n            bodyMapper: Mappers.RecordSet\r\n        },\r\n        default: {\r\n            bodyMapper: Mappers.CloudError\r\n        }\r\n    },\r\n    serializer: serializer\r\n};\r\nvar createOrUpdateOperationSpec = {\r\n    httpMethod: \"PUT\",\r\n    path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/{recordType}/{relativeRecordSetName}\",\r\n    urlParameters: [\r\n        Parameters.resourceGroupName,\r\n        Parameters.zoneName,\r\n        Parameters.relativeRecordSetName,\r\n        Parameters.recordType,\r\n        Parameters.subscriptionId\r\n    ],\r\n    queryParameters: [\r\n        Parameters.apiVersion\r\n    ],\r\n    headerParameters: [\r\n        Parameters.ifMatch,\r\n        Parameters.ifNoneMatch,\r\n        Parameters.acceptLanguage\r\n    ],\r\n    requestBody: {\r\n        parameterPath: \"parameters\",\r\n        mapper: __assign({}, Mappers.RecordSet, { required: true })\r\n    },\r\n    responses: {\r\n        200: {\r\n            bodyMapper: Mappers.RecordSet\r\n        },\r\n        201: {\r\n            bodyMapper: Mappers.RecordSet\r\n        },\r\n        default: {\r\n            bodyMapper: Mappers.CloudError\r\n        }\r\n    },\r\n    serializer: serializer\r\n};\r\nvar deleteMethodOperationSpec = {\r\n    httpMethod: \"DELETE\",\r\n    path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/{recordType}/{relativeRecordSetName}\",\r\n    urlParameters: [\r\n        Parameters.resourceGroupName,\r\n        Parameters.zoneName,\r\n        Parameters.relativeRecordSetName,\r\n        Parameters.recordType,\r\n        Parameters.subscriptionId\r\n    ],\r\n    queryParameters: [\r\n        Parameters.apiVersion\r\n    ],\r\n    headerParameters: [\r\n        Parameters.ifMatch,\r\n        Parameters.acceptLanguage\r\n    ],\r\n    responses: {\r\n        200: {},\r\n        204: {},\r\n        default: {\r\n            bodyMapper: Mappers.CloudError\r\n        }\r\n    },\r\n    serializer: serializer\r\n};\r\nvar getOperationSpec = {\r\n    httpMethod: \"GET\",\r\n    path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/{recordType}/{relativeRecordSetName}\",\r\n    urlParameters: [\r\n        Parameters.resourceGroupName,\r\n        Parameters.zoneName,\r\n        Parameters.relativeRecordSetName,\r\n        Parameters.recordType,\r\n        Parameters.subscriptionId\r\n    ],\r\n    queryParameters: [\r\n        Parameters.apiVersion\r\n    ],\r\n    headerParameters: [\r\n        Parameters.acceptLanguage\r\n    ],\r\n    responses: {\r\n        200: {\r\n            bodyMapper: Mappers.RecordSet\r\n        },\r\n        default: {\r\n            bodyMapper: Mappers.CloudError\r\n        }\r\n    },\r\n    serializer: serializer\r\n};\r\nvar listByTypeOperationSpec = {\r\n    httpMethod: \"GET\",\r\n    path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/{recordType}\",\r\n    urlParameters: [\r\n        Parameters.resourceGroupName,\r\n        Parameters.zoneName,\r\n        Parameters.recordType,\r\n        Parameters.subscriptionId\r\n    ],\r\n    queryParameters: [\r\n        Parameters.top,\r\n        Parameters.recordsetnamesuffix,\r\n        Parameters.apiVersion\r\n    ],\r\n    headerParameters: [\r\n        Parameters.acceptLanguage\r\n    ],\r\n    responses: {\r\n        200: {\r\n            bodyMapper: Mappers.RecordSetListResult\r\n        },\r\n        default: {\r\n            bodyMapper: Mappers.CloudError\r\n        }\r\n    },\r\n    serializer: serializer\r\n};\r\nvar listByDnsZoneOperationSpec = {\r\n    httpMethod: \"GET\",\r\n    path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/recordsets\",\r\n    urlParameters: [\r\n        Parameters.resourceGroupName,\r\n        Parameters.zoneName,\r\n        Parameters.subscriptionId\r\n    ],\r\n    queryParameters: [\r\n        Parameters.top,\r\n        Parameters.recordsetnamesuffix,\r\n        Parameters.apiVersion\r\n    ],\r\n    headerParameters: [\r\n        Parameters.acceptLanguage\r\n    ],\r\n    responses: {\r\n        200: {\r\n            bodyMapper: Mappers.RecordSetListResult\r\n        },\r\n        default: {\r\n            bodyMapper: Mappers.CloudError\r\n        }\r\n    },\r\n    serializer: serializer\r\n};\r\nvar listAllByDnsZoneOperationSpec = {\r\n    httpMethod: \"GET\",\r\n    path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/all\",\r\n    urlParameters: [\r\n        Parameters.resourceGroupName,\r\n        Parameters.zoneName,\r\n        Parameters.subscriptionId\r\n    ],\r\n    queryParameters: [\r\n        Parameters.top,\r\n        Parameters.recordSetNameSuffix,\r\n        Parameters.apiVersion\r\n    ],\r\n    headerParameters: [\r\n        Parameters.acceptLanguage\r\n    ],\r\n    responses: {\r\n        200: {\r\n            bodyMapper: Mappers.RecordSetListResult\r\n        },\r\n        default: {\r\n            bodyMapper: Mappers.CloudError\r\n        }\r\n    },\r\n    serializer: serializer\r\n};\r\nvar listByTypeNextOperationSpec = {\r\n    httpMethod: \"GET\",\r\n    baseUrl: \"https://management.azure.com\",\r\n    path: \"{nextLink}\",\r\n    urlParameters: [\r\n        Parameters.nextPageLink\r\n    ],\r\n    headerParameters: [\r\n        Parameters.acceptLanguage\r\n    ],\r\n    responses: {\r\n        200: {\r\n            bodyMapper: Mappers.RecordSetListResult\r\n        },\r\n        default: {\r\n            bodyMapper: Mappers.CloudError\r\n        }\r\n    },\r\n    serializer: serializer\r\n};\r\nvar listByDnsZoneNextOperationSpec = {\r\n    httpMethod: \"GET\",\r\n    baseUrl: \"https://management.azure.com\",\r\n    path: \"{nextLink}\",\r\n    urlParameters: [\r\n        Parameters.nextPageLink\r\n    ],\r\n    headerParameters: [\r\n        Parameters.acceptLanguage\r\n    ],\r\n    responses: {\r\n        200: {\r\n            bodyMapper: Mappers.RecordSetListResult\r\n        },\r\n        default: {\r\n            bodyMapper: Mappers.CloudError\r\n        }\r\n    },\r\n    serializer: serializer\r\n};\r\nvar listAllByDnsZoneNextOperationSpec = {\r\n    httpMethod: \"GET\",\r\n    baseUrl: \"https://management.azure.com\",\r\n    path: \"{nextLink}\",\r\n    urlParameters: [\r\n        Parameters.nextPageLink\r\n    ],\r\n    headerParameters: [\r\n        Parameters.acceptLanguage\r\n    ],\r\n    responses: {\r\n        200: {\r\n            bodyMapper: Mappers.RecordSetListResult\r\n        },\r\n        default: {\r\n            bodyMapper: Mappers.CloudError\r\n        }\r\n    },\r\n    serializer: serializer\r\n};\r\n//# sourceMappingURL=recordSets.js.map","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for\r\n * license information.\r\n *\r\n * Code generated by Microsoft (R) AutoRest Code Generator.\r\n * Changes may cause incorrect behavior and will be lost if the code is\r\n * regenerated.\r\n */\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nimport * as msRest from \"ms-rest-js\";\r\nimport * as Mappers from \"../models/zonesMappers\";\r\nimport * as Parameters from \"../models/parameters\";\r\n/** Class representing a Zones. */\r\nvar Zones = /** @class */ (function () {\r\n    /**\r\n     * Create a Zones.\r\n     * @param {DnsManagementClientContext} client Reference to the service client.\r\n     */\r\n    function Zones(client) {\r\n        this.client = client;\r\n    }\r\n    Zones.prototype.createOrUpdate = function (resourceGroupName, zoneName, parameters, options, callback) {\r\n        return this.client.sendOperationRequest({\r\n            resourceGroupName: resourceGroupName,\r\n            zoneName: zoneName,\r\n            parameters: parameters,\r\n            options: options\r\n        }, createOrUpdateOperationSpec, callback);\r\n    };\r\n    /**\r\n     * Deletes a DNS zone. WARNING: All DNS records in the zone will also be deleted. This operation\r\n     * cannot be undone.\r\n     *\r\n     * @param {string} resourceGroupName The name of the resource group.\r\n     *\r\n     * @param {string} zoneName The name of the DNS zone (without a terminating dot).\r\n     *\r\n     * @param {ZonesDeleteMethodOptionalParams} [options] Optional Parameters.\r\n     *\r\n     * @returns {Promise} A promise is returned\r\n     *\r\n     * @resolve {HttpOperationResponse} The deserialized result object.\r\n     *\r\n     * @reject {Error|ServiceError} The error object.\r\n     */\r\n    Zones.prototype.deleteMethod = function (resourceGroupName, zoneName, options) {\r\n        return this.beginDeleteMethod(resourceGroupName, zoneName, options)\r\n            .then(function (lroPoller) { return lroPoller.pollUntilFinished(); });\r\n    };\r\n    Zones.prototype.get = function (resourceGroupName, zoneName, options, callback) {\r\n        return this.client.sendOperationRequest({\r\n            resourceGroupName: resourceGroupName,\r\n            zoneName: zoneName,\r\n            options: options\r\n        }, getOperationSpec, callback);\r\n    };\r\n    Zones.prototype.update = function (resourceGroupName, zoneName, parameters, options, callback) {\r\n        return this.client.sendOperationRequest({\r\n            resourceGroupName: resourceGroupName,\r\n            zoneName: zoneName,\r\n            parameters: parameters,\r\n            options: options\r\n        }, updateOperationSpec, callback);\r\n    };\r\n    Zones.prototype.listByResourceGroup = function (resourceGroupName, options, callback) {\r\n        return this.client.sendOperationRequest({\r\n            resourceGroupName: resourceGroupName,\r\n            options: options\r\n        }, listByResourceGroupOperationSpec, callback);\r\n    };\r\n    Zones.prototype.list = function (options, callback) {\r\n        return this.client.sendOperationRequest({\r\n            options: options\r\n        }, listOperationSpec, callback);\r\n    };\r\n    /**\r\n     * Deletes a DNS zone. WARNING: All DNS records in the zone will also be deleted. This operation\r\n     * cannot be undone.\r\n     *\r\n     * @param {string} resourceGroupName The name of the resource group.\r\n     *\r\n     * @param {string} zoneName The name of the DNS zone (without a terminating dot).\r\n     *\r\n     * @param {ZonesBeginDeleteMethodOptionalParams} [options] Optional Parameters.\r\n     *\r\n     * @returns {Promise} A promise is returned\r\n     *\r\n     * @resolve {HttpOperationResponse} The deserialized result object.\r\n     *\r\n     * @reject {Error|ServiceError} The error object.\r\n     */\r\n    Zones.prototype.beginDeleteMethod = function (resourceGroupName, zoneName, options) {\r\n        return this.client.sendLRORequest({\r\n            resourceGroupName: resourceGroupName,\r\n            zoneName: zoneName,\r\n            options: options\r\n        }, beginDeleteMethodOperationSpec, options);\r\n    };\r\n    Zones.prototype.listByResourceGroupNext = function (nextPageLink, options, callback) {\r\n        return this.client.sendOperationRequest({\r\n            nextPageLink: nextPageLink,\r\n            options: options\r\n        }, listByResourceGroupNextOperationSpec, callback);\r\n    };\r\n    Zones.prototype.listNext = function (nextPageLink, options, callback) {\r\n        return this.client.sendOperationRequest({\r\n            nextPageLink: nextPageLink,\r\n            options: options\r\n        }, listNextOperationSpec, callback);\r\n    };\r\n    return Zones;\r\n}());\r\nexport { Zones };\r\n// Operation Specifications\r\nvar serializer = new msRest.Serializer(Mappers);\r\nvar createOrUpdateOperationSpec = {\r\n    httpMethod: \"PUT\",\r\n    path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}\",\r\n    urlParameters: [\r\n        Parameters.resourceGroupName,\r\n        Parameters.zoneName,\r\n        Parameters.subscriptionId\r\n    ],\r\n    queryParameters: [\r\n        Parameters.apiVersion\r\n    ],\r\n    headerParameters: [\r\n        Parameters.ifMatch,\r\n        Parameters.ifNoneMatch,\r\n        Parameters.acceptLanguage\r\n    ],\r\n    requestBody: {\r\n        parameterPath: \"parameters\",\r\n        mapper: __assign({}, Mappers.Zone, { required: true })\r\n    },\r\n    responses: {\r\n        200: {\r\n            bodyMapper: Mappers.Zone\r\n        },\r\n        201: {\r\n            bodyMapper: Mappers.Zone\r\n        },\r\n        default: {\r\n            bodyMapper: Mappers.CloudError\r\n        }\r\n    },\r\n    serializer: serializer\r\n};\r\nvar getOperationSpec = {\r\n    httpMethod: \"GET\",\r\n    path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}\",\r\n    urlParameters: [\r\n        Parameters.resourceGroupName,\r\n        Parameters.zoneName,\r\n        Parameters.subscriptionId\r\n    ],\r\n    queryParameters: [\r\n        Parameters.apiVersion\r\n    ],\r\n    headerParameters: [\r\n        Parameters.acceptLanguage\r\n    ],\r\n    responses: {\r\n        200: {\r\n            bodyMapper: Mappers.Zone\r\n        },\r\n        default: {\r\n            bodyMapper: Mappers.CloudError\r\n        }\r\n    },\r\n    serializer: serializer\r\n};\r\nvar updateOperationSpec = {\r\n    httpMethod: \"PATCH\",\r\n    path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}\",\r\n    urlParameters: [\r\n        Parameters.resourceGroupName,\r\n        Parameters.zoneName,\r\n        Parameters.subscriptionId\r\n    ],\r\n    queryParameters: [\r\n        Parameters.apiVersion\r\n    ],\r\n    headerParameters: [\r\n        Parameters.ifMatch,\r\n        Parameters.acceptLanguage\r\n    ],\r\n    requestBody: {\r\n        parameterPath: \"parameters\",\r\n        mapper: __assign({}, Mappers.ZoneUpdate, { required: true })\r\n    },\r\n    responses: {\r\n        200: {\r\n            bodyMapper: Mappers.Zone\r\n        },\r\n        default: {\r\n            bodyMapper: Mappers.CloudError\r\n        }\r\n    },\r\n    serializer: serializer\r\n};\r\nvar listByResourceGroupOperationSpec = {\r\n    httpMethod: \"GET\",\r\n    path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones\",\r\n    urlParameters: [\r\n        Parameters.resourceGroupName,\r\n        Parameters.subscriptionId\r\n    ],\r\n    queryParameters: [\r\n        Parameters.top,\r\n        Parameters.apiVersion\r\n    ],\r\n    headerParameters: [\r\n        Parameters.acceptLanguage\r\n    ],\r\n    responses: {\r\n        200: {\r\n            bodyMapper: Mappers.ZoneListResult\r\n        },\r\n        default: {\r\n            bodyMapper: Mappers.CloudError\r\n        }\r\n    },\r\n    serializer: serializer\r\n};\r\nvar listOperationSpec = {\r\n    httpMethod: \"GET\",\r\n    path: \"subscriptions/{subscriptionId}/providers/Microsoft.Network/dnszones\",\r\n    urlParameters: [\r\n        Parameters.subscriptionId\r\n    ],\r\n    queryParameters: [\r\n        Parameters.top,\r\n        Parameters.apiVersion\r\n    ],\r\n    headerParameters: [\r\n        Parameters.acceptLanguage\r\n    ],\r\n    responses: {\r\n        200: {\r\n            bodyMapper: Mappers.ZoneListResult\r\n        },\r\n        default: {\r\n            bodyMapper: Mappers.CloudError\r\n        }\r\n    },\r\n    serializer: serializer\r\n};\r\nvar beginDeleteMethodOperationSpec = {\r\n    httpMethod: \"DELETE\",\r\n    path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}\",\r\n    urlParameters: [\r\n        Parameters.resourceGroupName,\r\n        Parameters.zoneName,\r\n        Parameters.subscriptionId\r\n    ],\r\n    queryParameters: [\r\n        Parameters.apiVersion\r\n    ],\r\n    headerParameters: [\r\n        Parameters.ifMatch,\r\n        Parameters.acceptLanguage\r\n    ],\r\n    responses: {\r\n        200: {},\r\n        202: {},\r\n        204: {},\r\n        default: {\r\n            bodyMapper: Mappers.CloudError\r\n        }\r\n    },\r\n    serializer: serializer\r\n};\r\nvar listByResourceGroupNextOperationSpec = {\r\n    httpMethod: \"GET\",\r\n    baseUrl: \"https://management.azure.com\",\r\n    path: \"{nextLink}\",\r\n    urlParameters: [\r\n        Parameters.nextPageLink\r\n    ],\r\n    headerParameters: [\r\n        Parameters.acceptLanguage\r\n    ],\r\n    responses: {\r\n        200: {\r\n            bodyMapper: Mappers.ZoneListResult\r\n        },\r\n        default: {\r\n            bodyMapper: Mappers.CloudError\r\n        }\r\n    },\r\n    serializer: serializer\r\n};\r\nvar listNextOperationSpec = {\r\n    httpMethod: \"GET\",\r\n    baseUrl: \"https://management.azure.com\",\r\n    path: \"{nextLink}\",\r\n    urlParameters: [\r\n        Parameters.nextPageLink\r\n    ],\r\n    headerParameters: [\r\n        Parameters.acceptLanguage\r\n    ],\r\n    responses: {\r\n        200: {\r\n            bodyMapper: Mappers.ZoneListResult\r\n        },\r\n        default: {\r\n            bodyMapper: Mappers.CloudError\r\n        }\r\n    },\r\n    serializer: serializer\r\n};\r\n//# sourceMappingURL=zones.js.map","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for\r\n * license information.\r\n *\r\n * Code generated by Microsoft (R) AutoRest Code Generator.\r\n * Changes may cause incorrect behavior and will be lost if the code is\r\n * regenerated.\r\n */\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nimport * as msRest from \"ms-rest-js\";\r\nimport * as Mappers from \"../models/dnsResourceReferenceOperationsMappers\";\r\nimport * as Parameters from \"../models/parameters\";\r\n/** Class representing a DnsResourceReferenceOperations. */\r\nvar DnsResourceReferenceOperations = /** @class */ (function () {\r\n    /**\r\n     * Create a DnsResourceReferenceOperations.\r\n     * @param {DnsManagementClientContext} client Reference to the service client.\r\n     */\r\n    function DnsResourceReferenceOperations(client) {\r\n        this.client = client;\r\n    }\r\n    DnsResourceReferenceOperations.prototype.getByTargetResources = function (parameters, options, callback) {\r\n        return this.client.sendOperationRequest({\r\n            parameters: parameters,\r\n            options: options\r\n        }, getByTargetResourcesOperationSpec, callback);\r\n    };\r\n    return DnsResourceReferenceOperations;\r\n}());\r\nexport { DnsResourceReferenceOperations };\r\n// Operation Specifications\r\nvar serializer = new msRest.Serializer(Mappers);\r\nvar getByTargetResourcesOperationSpec = {\r\n    httpMethod: \"POST\",\r\n    path: \"subscriptions/{subscriptionId}/providers/Microsoft.Network/getDnsResourceReference\",\r\n    urlParameters: [\r\n        Parameters.subscriptionId\r\n    ],\r\n    queryParameters: [\r\n        Parameters.apiVersion\r\n    ],\r\n    headerParameters: [\r\n        Parameters.acceptLanguage\r\n    ],\r\n    requestBody: {\r\n        parameterPath: \"parameters\",\r\n        mapper: __assign({}, Mappers.DnsResourceReferenceRequest, { required: true })\r\n    },\r\n    responses: {\r\n        200: {\r\n            bodyMapper: Mappers.DnsResourceReferenceResult\r\n        },\r\n        default: {\r\n            bodyMapper: Mappers.CloudError\r\n        }\r\n    },\r\n    serializer: serializer\r\n};\r\n//# sourceMappingURL=dnsResourceReferenceOperations.js.map","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for\r\n * license information.\r\n *\r\n * Code generated by Microsoft (R) AutoRest Code Generator.\r\n * Changes may cause incorrect behavior and will be lost if the code is\r\n * regenerated.\r\n */\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    }\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport * as msRestAzure from \"ms-rest-azure-js\";\r\nvar packageName = \"arm-dns\";\r\nvar packageVersion = \"1.0.0\";\r\nvar DnsManagementClientContext = /** @class */ (function (_super) {\r\n    __extends(DnsManagementClientContext, _super);\r\n    /**\r\n     * @class\r\n     * Initializes a new instance of the DnsManagementClient class.\r\n     * @constructor\r\n     *\r\n     * @param {msRest.ServiceClientCredentials} credentials - Credentials needed for the client to connect to Azure.\r\n     *\r\n     * @param {string} subscriptionId - Specifies the Azure subscription ID, which uniquely identifies the Microsoft Azure subscription.\r\n     *\r\n     * @param {string} [baseUri] - The base URI of the service.\r\n     *\r\n     * @param {object} [options] - The parameter options\r\n     *\r\n     * @param {Array} [options.filters] - Filters to be added to the request pipeline\r\n     *\r\n     * @param {object} [options.requestOptions] - The request options. Detailed info can be found at\r\n     * {@link https://github.github.io/fetch/#Request Options doc}\r\n     *\r\n     * @param {boolean} [options.noRetryPolicy] - If set to true, turn off default retry policy\r\n     *\r\n     * @param {string} [options.acceptLanguage] - The preferred language for the response.\r\n     *\r\n     * @param {number} [options.longRunningOperationRetryTimeout] - The retry timeout in seconds for Long Running Operations. Default value is 30.\r\n     *\r\n     * @param {boolean} [options.generateClientRequestId] - Whether a unique x-ms-client-request-id should be generated. When set to true a unique x-ms-client-request-id value is generated and included in each request. Default is true.\r\n     *\r\n     */\r\n    function DnsManagementClientContext(credentials, subscriptionId, baseUri, options) {\r\n        var _this = this;\r\n        if (credentials == undefined) {\r\n            throw new Error('\\'credentials\\' cannot be null.');\r\n        }\r\n        if (subscriptionId == undefined) {\r\n            throw new Error('\\'subscriptionId\\' cannot be null.');\r\n        }\r\n        if (!options) {\r\n            options = {};\r\n        }\r\n        _this = _super.call(this, credentials, options) || this;\r\n        _this.apiVersion = '2018-05-01';\r\n        _this.acceptLanguage = 'en-US';\r\n        _this.longRunningOperationRetryTimeout = 30;\r\n        _this.baseUri = baseUri;\r\n        if (!_this.baseUri) {\r\n            _this.baseUri = 'https://management.azure.com';\r\n        }\r\n        _this.requestContentType = \"application/json; charset=utf-8\";\r\n        _this.credentials = credentials;\r\n        _this.subscriptionId = subscriptionId;\r\n        _this.addUserAgentInfo(packageName + \"/\" + packageVersion);\r\n        if (options.acceptLanguage !== null && options.acceptLanguage !== undefined) {\r\n            _this.acceptLanguage = options.acceptLanguage;\r\n        }\r\n        if (options.longRunningOperationRetryTimeout !== null && options.longRunningOperationRetryTimeout !== undefined) {\r\n            _this.longRunningOperationRetryTimeout = options.longRunningOperationRetryTimeout;\r\n        }\r\n        return _this;\r\n    }\r\n    return DnsManagementClientContext;\r\n}(msRestAzure.AzureServiceClient));\r\nexport { DnsManagementClientContext };\r\n//# sourceMappingURL=dnsManagementClientContext.js.map","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for\r\n * license information.\r\n *\r\n * Code generated by Microsoft (R) AutoRest Code Generator.\r\n * Changes may cause incorrect behavior and will be lost if the code is\r\n * regenerated.\r\n */\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    }\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport * as Models from \"./models\";\r\nimport * as Mappers from \"./models/mappers\";\r\nimport * as operations from \"./operations\";\r\nimport { DnsManagementClientContext } from \"./dnsManagementClientContext\";\r\nvar DnsManagementClient = /** @class */ (function (_super) {\r\n    __extends(DnsManagementClient, _super);\r\n    /**\r\n     * @class\r\n     * Initializes a new instance of the DnsManagementClient class.\r\n     * @constructor\r\n     *\r\n     * @param {msRest.ServiceClientCredentials} credentials - Credentials needed for the client to connect to Azure.\r\n     *\r\n     * @param {string} subscriptionId - Specifies the Azure subscription ID, which uniquely identifies the Microsoft Azure subscription.\r\n     *\r\n     * @param {string} [baseUri] - The base URI of the service.\r\n     *\r\n     * @param {object} [options] - The parameter options\r\n     *\r\n     * @param {Array} [options.filters] - Filters to be added to the request pipeline\r\n     *\r\n     * @param {object} [options.requestOptions] - The request options. Detailed info can be found at\r\n     * {@link https://github.github.io/fetch/#Request Options doc}\r\n     *\r\n     * @param {boolean} [options.noRetryPolicy] - If set to true, turn off default retry policy\r\n     *\r\n     * @param {string} [options.acceptLanguage] - The preferred language for the response.\r\n     *\r\n     * @param {number} [options.longRunningOperationRetryTimeout] - The retry timeout in seconds for Long Running Operations. Default value is 30.\r\n     *\r\n     * @param {boolean} [options.generateClientRequestId] - Whether a unique x-ms-client-request-id should be generated. When set to true a unique x-ms-client-request-id value is generated and included in each request. Default is true.\r\n     *\r\n     */\r\n    function DnsManagementClient(credentials, subscriptionId, baseUri, options) {\r\n        var _this = _super.call(this, credentials, subscriptionId, baseUri, options) || this;\r\n        _this.recordSets = new operations.RecordSets(_this);\r\n        _this.zones = new operations.Zones(_this);\r\n        _this.dnsResourceReference = new operations.DnsResourceReferenceOperations(_this);\r\n        return _this;\r\n    }\r\n    return DnsManagementClient;\r\n}(DnsManagementClientContext));\r\n// Operation Specifications\r\nexport { DnsManagementClient, DnsManagementClientContext, Models as DnsManagementModels, Mappers as DnsManagementMappers };\r\nexport * from \"./operations\";\r\n//# sourceMappingURL=dnsManagementClient.js.map"],"sourceRoot":""}