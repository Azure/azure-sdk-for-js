"use strict";
/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const ms_rest_azure_js_1 = require("ms-rest-azure-js");
exports.CloudError = ms_rest_azure_js_1.CloudErrorMapper;
exports.BaseResource = ms_rest_azure_js_1.BaseResourceMapper;
exports.ARecord = {
    serializedName: "ARecord",
    type: {
        name: "Composite",
        className: "ARecord",
        modelProperties: {
            ipv4Address: {
                serializedName: "ipv4Address",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.AaaaRecord = {
    serializedName: "AaaaRecord",
    type: {
        name: "Composite",
        className: "AaaaRecord",
        modelProperties: {
            ipv6Address: {
                serializedName: "ipv6Address",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.MxRecord = {
    serializedName: "MxRecord",
    type: {
        name: "Composite",
        className: "MxRecord",
        modelProperties: {
            preference: {
                serializedName: "preference",
                type: {
                    name: "Number"
                }
            },
            exchange: {
                serializedName: "exchange",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.NsRecord = {
    serializedName: "NsRecord",
    type: {
        name: "Composite",
        className: "NsRecord",
        modelProperties: {
            nsdname: {
                serializedName: "nsdname",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.PtrRecord = {
    serializedName: "PtrRecord",
    type: {
        name: "Composite",
        className: "PtrRecord",
        modelProperties: {
            ptrdname: {
                serializedName: "ptrdname",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.SrvRecord = {
    serializedName: "SrvRecord",
    type: {
        name: "Composite",
        className: "SrvRecord",
        modelProperties: {
            priority: {
                serializedName: "priority",
                type: {
                    name: "Number"
                }
            },
            weight: {
                serializedName: "weight",
                type: {
                    name: "Number"
                }
            },
            port: {
                serializedName: "port",
                type: {
                    name: "Number"
                }
            },
            target: {
                serializedName: "target",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.TxtRecord = {
    serializedName: "TxtRecord",
    type: {
        name: "Composite",
        className: "TxtRecord",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
exports.CnameRecord = {
    serializedName: "CnameRecord",
    type: {
        name: "Composite",
        className: "CnameRecord",
        modelProperties: {
            cname: {
                serializedName: "cname",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.SoaRecord = {
    serializedName: "SoaRecord",
    type: {
        name: "Composite",
        className: "SoaRecord",
        modelProperties: {
            host: {
                serializedName: "host",
                type: {
                    name: "String"
                }
            },
            email: {
                serializedName: "email",
                type: {
                    name: "String"
                }
            },
            serialNumber: {
                serializedName: "serialNumber",
                type: {
                    name: "Number"
                }
            },
            refreshTime: {
                serializedName: "refreshTime",
                type: {
                    name: "Number"
                }
            },
            retryTime: {
                serializedName: "retryTime",
                type: {
                    name: "Number"
                }
            },
            expireTime: {
                serializedName: "expireTime",
                type: {
                    name: "Number"
                }
            },
            minimumTtl: {
                serializedName: "minimumTTL",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
exports.CaaRecord = {
    serializedName: "CaaRecord",
    type: {
        name: "Composite",
        className: "CaaRecord",
        modelProperties: {
            flags: {
                serializedName: "flags",
                type: {
                    name: "Number"
                }
            },
            tag: {
                serializedName: "tag",
                type: {
                    name: "String"
                }
            },
            value: {
                serializedName: "value",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.SubResource = {
    serializedName: "SubResource",
    type: {
        name: "Composite",
        className: "SubResource",
        modelProperties: {
            id: {
                serializedName: "id",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.RecordSet = {
    serializedName: "RecordSet",
    type: {
        name: "Composite",
        className: "RecordSet",
        modelProperties: {
            id: {
                readOnly: true,
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            name: {
                readOnly: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            type: {
                readOnly: true,
                serializedName: "type",
                type: {
                    name: "String"
                }
            },
            etag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            },
            metadata: {
                serializedName: "properties.metadata",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            tTL: {
                serializedName: "properties.TTL",
                type: {
                    name: "Number"
                }
            },
            fqdn: {
                readOnly: true,
                serializedName: "properties.fqdn",
                type: {
                    name: "String"
                }
            },
            provisioningState: {
                readOnly: true,
                serializedName: "properties.provisioningState",
                type: {
                    name: "String"
                }
            },
            targetResource: {
                serializedName: "properties.targetResource",
                type: {
                    name: "Composite",
                    className: "SubResource"
                }
            },
            aRecords: {
                serializedName: "properties.ARecords",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ARecord"
                        }
                    }
                }
            },
            aaaaRecords: {
                serializedName: "properties.AAAARecords",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "AaaaRecord"
                        }
                    }
                }
            },
            mxRecords: {
                serializedName: "properties.MXRecords",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "MxRecord"
                        }
                    }
                }
            },
            nsRecords: {
                serializedName: "properties.NSRecords",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "NsRecord"
                        }
                    }
                }
            },
            ptrRecords: {
                serializedName: "properties.PTRRecords",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "PtrRecord"
                        }
                    }
                }
            },
            srvRecords: {
                serializedName: "properties.SRVRecords",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SrvRecord"
                        }
                    }
                }
            },
            txtRecords: {
                serializedName: "properties.TXTRecords",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "TxtRecord"
                        }
                    }
                }
            },
            cnameRecord: {
                serializedName: "properties.CNAMERecord",
                type: {
                    name: "Composite",
                    className: "CnameRecord"
                }
            },
            soaRecord: {
                serializedName: "properties.SOARecord",
                type: {
                    name: "Composite",
                    className: "SoaRecord"
                }
            },
            caaRecords: {
                serializedName: "properties.caaRecords",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "CaaRecord"
                        }
                    }
                }
            }
        }
    }
};
exports.RecordSetUpdateParameters = {
    serializedName: "RecordSetUpdateParameters",
    type: {
        name: "Composite",
        className: "RecordSetUpdateParameters",
        modelProperties: {
            recordSet: {
                serializedName: "RecordSet",
                type: {
                    name: "Composite",
                    className: "RecordSet"
                }
            }
        }
    }
};
exports.Resource = {
    serializedName: "Resource",
    type: {
        name: "Composite",
        className: "Resource",
        modelProperties: {
            id: {
                readOnly: true,
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            name: {
                readOnly: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            type: {
                readOnly: true,
                serializedName: "type",
                type: {
                    name: "String"
                }
            },
            location: {
                required: true,
                serializedName: "location",
                type: {
                    name: "String"
                }
            },
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
exports.Zone = {
    serializedName: "Zone",
    type: {
        name: "Composite",
        className: "Zone",
        modelProperties: Object.assign({}, exports.Resource.type.modelProperties, { etag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            }, maxNumberOfRecordSets: {
                readOnly: true,
                serializedName: "properties.maxNumberOfRecordSets",
                type: {
                    name: "Number"
                }
            }, numberOfRecordSets: {
                readOnly: true,
                serializedName: "properties.numberOfRecordSets",
                type: {
                    name: "Number"
                }
            }, nameServers: {
                readOnly: true,
                serializedName: "properties.nameServers",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, zoneType: {
                serializedName: "properties.zoneType",
                defaultValue: 'Public',
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Public",
                        "Private"
                    ]
                }
            }, registrationVirtualNetworks: {
                serializedName: "properties.registrationVirtualNetworks",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SubResource"
                        }
                    }
                }
            }, resolutionVirtualNetworks: {
                serializedName: "properties.resolutionVirtualNetworks",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SubResource"
                        }
                    }
                }
            } })
    }
};
exports.ZoneUpdate = {
    serializedName: "ZoneUpdate",
    type: {
        name: "Composite",
        className: "ZoneUpdate",
        modelProperties: {
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
exports.DnsResourceReferenceRequest = {
    serializedName: "DnsResourceReferenceRequest",
    type: {
        name: "Composite",
        className: "DnsResourceReferenceRequest",
        modelProperties: {
            targetResources: {
                serializedName: "properties.targetResources",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SubResource"
                        }
                    }
                }
            }
        }
    }
};
exports.DnsResourceReference = {
    serializedName: "DnsResourceReference",
    type: {
        name: "Composite",
        className: "DnsResourceReference",
        modelProperties: {
            dnsResources: {
                serializedName: "dnsResources",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SubResource"
                        }
                    }
                }
            },
            targetResource: {
                serializedName: "targetResource",
                type: {
                    name: "Composite",
                    className: "SubResource"
                }
            }
        }
    }
};
exports.DnsResourceReferenceResult = {
    serializedName: "DnsResourceReferenceResult",
    type: {
        name: "Composite",
        className: "DnsResourceReferenceResult",
        modelProperties: {
            dnsResourceReferences: {
                serializedName: "properties.dnsResourceReferences",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DnsResourceReference"
                        }
                    }
                }
            }
        }
    }
};
exports.RecordSetListResult = {
    serializedName: "RecordSetListResult",
    type: {
        name: "Composite",
        className: "RecordSetListResult",
        modelProperties: {
            value: {
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "RecordSet"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.ZoneListResult = {
    serializedName: "ZoneListResult",
    type: {
        name: "Composite",
        className: "ZoneListResult",
        modelProperties: {
            value: {
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Zone"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
//# sourceMappingURL=mappers.js.map