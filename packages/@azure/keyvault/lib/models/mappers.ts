/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { CloudErrorMapper, BaseResourceMapper } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export const CloudError = CloudErrorMapper;
export const BaseResource = BaseResourceMapper;

export const Attributes: msRest.CompositeMapper = {
  serializedName: "Attributes",
  type: {
    name: "Composite",
    className: "Attributes",
    modelProperties: {
      enabled: {
        serializedName: "enabled",
        type: {
          name: "Boolean"
        }
      },
      notBefore: {
        serializedName: "nbf",
        type: {
          name: "UnixTime"
        }
      },
      expires: {
        serializedName: "exp",
        type: {
          name: "UnixTime"
        }
      },
      created: {
        readOnly: true,
        serializedName: "created",
        type: {
          name: "UnixTime"
        }
      },
      updated: {
        readOnly: true,
        serializedName: "updated",
        type: {
          name: "UnixTime"
        }
      }
    }
  }
};

export const JsonWebKey: msRest.CompositeMapper = {
  serializedName: "JsonWebKey",
  type: {
    name: "Composite",
    className: "JsonWebKey",
    modelProperties: {
      kid: {
        serializedName: "kid",
        type: {
          name: "String"
        }
      },
      kty: {
        serializedName: "kty",
        type: {
          name: "String"
        }
      },
      keyOps: {
        serializedName: "key_ops",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      n: {
        serializedName: "n",
        type: {
          name: "Base64Url"
        }
      },
      e: {
        serializedName: "e",
        type: {
          name: "Base64Url"
        }
      },
      d: {
        serializedName: "d",
        type: {
          name: "Base64Url"
        }
      },
      dp: {
        serializedName: "dp",
        type: {
          name: "Base64Url"
        }
      },
      dq: {
        serializedName: "dq",
        type: {
          name: "Base64Url"
        }
      },
      qi: {
        serializedName: "qi",
        type: {
          name: "Base64Url"
        }
      },
      p: {
        serializedName: "p",
        type: {
          name: "Base64Url"
        }
      },
      q: {
        serializedName: "q",
        type: {
          name: "Base64Url"
        }
      },
      k: {
        serializedName: "k",
        type: {
          name: "Base64Url"
        }
      },
      t: {
        serializedName: "key_hsm",
        type: {
          name: "Base64Url"
        }
      },
      crv: {
        serializedName: "crv",
        type: {
          name: "String"
        }
      },
      x: {
        serializedName: "x",
        type: {
          name: "Base64Url"
        }
      },
      y: {
        serializedName: "y",
        type: {
          name: "Base64Url"
        }
      }
    }
  }
};

export const KeyAttributes: msRest.CompositeMapper = {
  serializedName: "KeyAttributes",
  type: {
    name: "Composite",
    className: "KeyAttributes",
    modelProperties: {
      ...Attributes.type.modelProperties,
      recoveryLevel: {
        nullable: false,
        readOnly: true,
        serializedName: "recoveryLevel",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const KeyBundle: msRest.CompositeMapper = {
  serializedName: "KeyBundle",
  type: {
    name: "Composite",
    className: "KeyBundle",
    modelProperties: {
      key: {
        serializedName: "key",
        type: {
          name: "Composite",
          className: "JsonWebKey"
        }
      },
      attributes: {
        serializedName: "attributes",
        type: {
          name: "Composite",
          className: "KeyAttributes"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      managed: {
        readOnly: true,
        serializedName: "managed",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const KeyItem: msRest.CompositeMapper = {
  serializedName: "KeyItem",
  type: {
    name: "Composite",
    className: "KeyItem",
    modelProperties: {
      kid: {
        serializedName: "kid",
        type: {
          name: "String"
        }
      },
      attributes: {
        serializedName: "attributes",
        type: {
          name: "Composite",
          className: "KeyAttributes"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      managed: {
        readOnly: true,
        serializedName: "managed",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const DeletedKeyBundle: msRest.CompositeMapper = {
  serializedName: "DeletedKeyBundle",
  type: {
    name: "Composite",
    className: "DeletedKeyBundle",
    modelProperties: {
      ...KeyBundle.type.modelProperties,
      recoveryId: {
        serializedName: "recoveryId",
        type: {
          name: "String"
        }
      },
      scheduledPurgeDate: {
        readOnly: true,
        serializedName: "scheduledPurgeDate",
        type: {
          name: "UnixTime"
        }
      },
      deletedDate: {
        readOnly: true,
        serializedName: "deletedDate",
        type: {
          name: "UnixTime"
        }
      }
    }
  }
};

export const DeletedKeyItem: msRest.CompositeMapper = {
  serializedName: "DeletedKeyItem",
  type: {
    name: "Composite",
    className: "DeletedKeyItem",
    modelProperties: {
      ...KeyItem.type.modelProperties,
      recoveryId: {
        serializedName: "recoveryId",
        type: {
          name: "String"
        }
      },
      scheduledPurgeDate: {
        readOnly: true,
        serializedName: "scheduledPurgeDate",
        type: {
          name: "UnixTime"
        }
      },
      deletedDate: {
        readOnly: true,
        serializedName: "deletedDate",
        type: {
          name: "UnixTime"
        }
      }
    }
  }
};

export const SecretAttributes: msRest.CompositeMapper = {
  serializedName: "SecretAttributes",
  type: {
    name: "Composite",
    className: "SecretAttributes",
    modelProperties: {
      ...Attributes.type.modelProperties,
      recoveryLevel: {
        nullable: false,
        readOnly: true,
        serializedName: "recoveryLevel",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SecretBundle: msRest.CompositeMapper = {
  serializedName: "SecretBundle",
  type: {
    name: "Composite",
    className: "SecretBundle",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      contentType: {
        serializedName: "contentType",
        type: {
          name: "String"
        }
      },
      attributes: {
        serializedName: "attributes",
        type: {
          name: "Composite",
          className: "SecretAttributes"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      kid: {
        readOnly: true,
        serializedName: "kid",
        type: {
          name: "String"
        }
      },
      managed: {
        readOnly: true,
        serializedName: "managed",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const SecretItem: msRest.CompositeMapper = {
  serializedName: "SecretItem",
  type: {
    name: "Composite",
    className: "SecretItem",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      attributes: {
        serializedName: "attributes",
        type: {
          name: "Composite",
          className: "SecretAttributes"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      contentType: {
        serializedName: "contentType",
        type: {
          name: "String"
        }
      },
      managed: {
        readOnly: true,
        serializedName: "managed",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const DeletedSecretBundle: msRest.CompositeMapper = {
  serializedName: "DeletedSecretBundle",
  type: {
    name: "Composite",
    className: "DeletedSecretBundle",
    modelProperties: {
      ...SecretBundle.type.modelProperties,
      recoveryId: {
        serializedName: "recoveryId",
        type: {
          name: "String"
        }
      },
      scheduledPurgeDate: {
        readOnly: true,
        serializedName: "scheduledPurgeDate",
        type: {
          name: "UnixTime"
        }
      },
      deletedDate: {
        readOnly: true,
        serializedName: "deletedDate",
        type: {
          name: "UnixTime"
        }
      }
    }
  }
};

export const DeletedSecretItem: msRest.CompositeMapper = {
  serializedName: "DeletedSecretItem",
  type: {
    name: "Composite",
    className: "DeletedSecretItem",
    modelProperties: {
      ...SecretItem.type.modelProperties,
      recoveryId: {
        serializedName: "recoveryId",
        type: {
          name: "String"
        }
      },
      scheduledPurgeDate: {
        readOnly: true,
        serializedName: "scheduledPurgeDate",
        type: {
          name: "UnixTime"
        }
      },
      deletedDate: {
        readOnly: true,
        serializedName: "deletedDate",
        type: {
          name: "UnixTime"
        }
      }
    }
  }
};

export const SecretRestoreParameters: msRest.CompositeMapper = {
  serializedName: "SecretRestoreParameters",
  type: {
    name: "Composite",
    className: "SecretRestoreParameters",
    modelProperties: {
      secretBundleBackup: {
        required: true,
        serializedName: "value",
        type: {
          name: "Base64Url"
        }
      }
    }
  }
};

export const StorageRestoreParameters: msRest.CompositeMapper = {
  serializedName: "StorageRestoreParameters",
  type: {
    name: "Composite",
    className: "StorageRestoreParameters",
    modelProperties: {
      storageBundleBackup: {
        required: true,
        serializedName: "value",
        type: {
          name: "Base64Url"
        }
      }
    }
  }
};

export const CertificateAttributes: msRest.CompositeMapper = {
  serializedName: "CertificateAttributes",
  type: {
    name: "Composite",
    className: "CertificateAttributes",
    modelProperties: {
      ...Attributes.type.modelProperties,
      recoveryLevel: {
        nullable: false,
        readOnly: true,
        serializedName: "recoveryLevel",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CertificateItem: msRest.CompositeMapper = {
  serializedName: "CertificateItem",
  type: {
    name: "Composite",
    className: "CertificateItem",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      attributes: {
        serializedName: "attributes",
        type: {
          name: "Composite",
          className: "CertificateAttributes"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      x509Thumbprint: {
        serializedName: "x5t",
        type: {
          name: "Base64Url"
        }
      }
    }
  }
};

export const CertificateIssuerItem: msRest.CompositeMapper = {
  serializedName: "CertificateIssuerItem",
  type: {
    name: "Composite",
    className: "CertificateIssuerItem",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      provider: {
        serializedName: "provider",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const KeyProperties: msRest.CompositeMapper = {
  serializedName: "KeyProperties",
  type: {
    name: "Composite",
    className: "KeyProperties",
    modelProperties: {
      exportable: {
        serializedName: "exportable",
        type: {
          name: "Boolean"
        }
      },
      keyType: {
        serializedName: "kty",
        type: {
          name: "String"
        }
      },
      keySize: {
        serializedName: "key_size",
        type: {
          name: "Number"
        }
      },
      reuseKey: {
        serializedName: "reuse_key",
        type: {
          name: "Boolean"
        }
      },
      curve: {
        serializedName: "crv",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SecretProperties: msRest.CompositeMapper = {
  serializedName: "SecretProperties",
  type: {
    name: "Composite",
    className: "SecretProperties",
    modelProperties: {
      contentType: {
        serializedName: "contentType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SubjectAlternativeNames: msRest.CompositeMapper = {
  serializedName: "SubjectAlternativeNames",
  type: {
    name: "Composite",
    className: "SubjectAlternativeNames",
    modelProperties: {
      emails: {
        serializedName: "emails",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      dnsNames: {
        serializedName: "dns_names",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      upns: {
        serializedName: "upns",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const X509CertificateProperties: msRest.CompositeMapper = {
  serializedName: "X509CertificateProperties",
  type: {
    name: "Composite",
    className: "X509CertificateProperties",
    modelProperties: {
      subject: {
        serializedName: "subject",
        type: {
          name: "String"
        }
      },
      ekus: {
        serializedName: "ekus",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      subjectAlternativeNames: {
        serializedName: "sans",
        type: {
          name: "Composite",
          className: "SubjectAlternativeNames"
        }
      },
      keyUsage: {
        serializedName: "key_usage",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      validityInMonths: {
        serializedName: "validity_months",
        constraints: {
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Trigger: msRest.CompositeMapper = {
  serializedName: "Trigger",
  type: {
    name: "Composite",
    className: "Trigger",
    modelProperties: {
      lifetimePercentage: {
        serializedName: "lifetime_percentage",
        constraints: {
          InclusiveMaximum: 99,
          InclusiveMinimum: 1
        },
        type: {
          name: "Number"
        }
      },
      daysBeforeExpiry: {
        serializedName: "days_before_expiry",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Action: msRest.CompositeMapper = {
  serializedName: "Action",
  type: {
    name: "Composite",
    className: "Action",
    modelProperties: {
      actionType: {
        serializedName: "action_type",
        type: {
          name: "Enum",
          allowedValues: [
            "EmailContacts",
            "AutoRenew"
          ]
        }
      }
    }
  }
};

export const LifetimeAction: msRest.CompositeMapper = {
  serializedName: "LifetimeAction",
  type: {
    name: "Composite",
    className: "LifetimeAction",
    modelProperties: {
      trigger: {
        serializedName: "trigger",
        type: {
          name: "Composite",
          className: "Trigger"
        }
      },
      action: {
        serializedName: "action",
        type: {
          name: "Composite",
          className: "Action"
        }
      }
    }
  }
};

export const IssuerParameters: msRest.CompositeMapper = {
  serializedName: "IssuerParameters",
  type: {
    name: "Composite",
    className: "IssuerParameters",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      certificateType: {
        serializedName: "cty",
        type: {
          name: "String"
        }
      },
      certificateTransparency: {
        serializedName: "cert_transparency",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const CertificatePolicy: msRest.CompositeMapper = {
  serializedName: "CertificatePolicy",
  type: {
    name: "Composite",
    className: "CertificatePolicy",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      keyProperties: {
        serializedName: "key_props",
        type: {
          name: "Composite",
          className: "KeyProperties"
        }
      },
      secretProperties: {
        serializedName: "secret_props",
        type: {
          name: "Composite",
          className: "SecretProperties"
        }
      },
      x509CertificateProperties: {
        serializedName: "x509_props",
        type: {
          name: "Composite",
          className: "X509CertificateProperties"
        }
      },
      lifetimeActions: {
        serializedName: "lifetime_actions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "LifetimeAction"
            }
          }
        }
      },
      issuerParameters: {
        serializedName: "issuer",
        type: {
          name: "Composite",
          className: "IssuerParameters"
        }
      },
      attributes: {
        serializedName: "attributes",
        type: {
          name: "Composite",
          className: "CertificateAttributes"
        }
      }
    }
  }
};

export const CertificateBundle: msRest.CompositeMapper = {
  serializedName: "CertificateBundle",
  type: {
    name: "Composite",
    className: "CertificateBundle",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      kid: {
        readOnly: true,
        serializedName: "kid",
        type: {
          name: "String"
        }
      },
      sid: {
        readOnly: true,
        serializedName: "sid",
        type: {
          name: "String"
        }
      },
      x509Thumbprint: {
        readOnly: true,
        serializedName: "x5t",
        type: {
          name: "Base64Url"
        }
      },
      policy: {
        readOnly: true,
        serializedName: "policy",
        type: {
          name: "Composite",
          className: "CertificatePolicy"
        }
      },
      cer: {
        serializedName: "cer",
        type: {
          name: "ByteArray"
        }
      },
      contentType: {
        serializedName: "contentType",
        type: {
          name: "String"
        }
      },
      attributes: {
        serializedName: "attributes",
        type: {
          name: "Composite",
          className: "CertificateAttributes"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const DeletedCertificateBundle: msRest.CompositeMapper = {
  serializedName: "DeletedCertificateBundle",
  type: {
    name: "Composite",
    className: "DeletedCertificateBundle",
    modelProperties: {
      ...CertificateBundle.type.modelProperties,
      recoveryId: {
        serializedName: "recoveryId",
        type: {
          name: "String"
        }
      },
      scheduledPurgeDate: {
        readOnly: true,
        serializedName: "scheduledPurgeDate",
        type: {
          name: "UnixTime"
        }
      },
      deletedDate: {
        readOnly: true,
        serializedName: "deletedDate",
        type: {
          name: "UnixTime"
        }
      }
    }
  }
};

export const DeletedCertificateItem: msRest.CompositeMapper = {
  serializedName: "DeletedCertificateItem",
  type: {
    name: "Composite",
    className: "DeletedCertificateItem",
    modelProperties: {
      ...CertificateItem.type.modelProperties,
      recoveryId: {
        serializedName: "recoveryId",
        type: {
          name: "String"
        }
      },
      scheduledPurgeDate: {
        readOnly: true,
        serializedName: "scheduledPurgeDate",
        type: {
          name: "UnixTime"
        }
      },
      deletedDate: {
        readOnly: true,
        serializedName: "deletedDate",
        type: {
          name: "UnixTime"
        }
      }
    }
  }
};

export const ErrorModel: msRest.CompositeMapper = {
  serializedName: "Error",
  type: {
    name: "Composite",
    className: "ErrorModel",
    modelProperties: {
      code: {
        readOnly: true,
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        readOnly: true,
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      innerError: {
        readOnly: true,
        serializedName: "innererror",
        type: {
          name: "Composite",
          className: "ErrorModel"
        }
      }
    }
  }
};

export const CertificateOperation: msRest.CompositeMapper = {
  serializedName: "CertificateOperation",
  type: {
    name: "Composite",
    className: "CertificateOperation",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      issuerParameters: {
        serializedName: "issuer",
        type: {
          name: "Composite",
          className: "IssuerParameters"
        }
      },
      csr: {
        serializedName: "csr",
        type: {
          name: "ByteArray"
        }
      },
      cancellationRequested: {
        serializedName: "cancellation_requested",
        type: {
          name: "Boolean"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      statusDetails: {
        serializedName: "status_details",
        type: {
          name: "String"
        }
      },
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorModel"
        }
      },
      target: {
        serializedName: "target",
        type: {
          name: "String"
        }
      },
      requestId: {
        serializedName: "request_id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IssuerCredentials: msRest.CompositeMapper = {
  serializedName: "IssuerCredentials",
  type: {
    name: "Composite",
    className: "IssuerCredentials",
    modelProperties: {
      accountId: {
        serializedName: "account_id",
        type: {
          name: "String"
        }
      },
      password: {
        serializedName: "pwd",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AdministratorDetails: msRest.CompositeMapper = {
  serializedName: "AdministratorDetails",
  type: {
    name: "Composite",
    className: "AdministratorDetails",
    modelProperties: {
      firstName: {
        serializedName: "first_name",
        type: {
          name: "String"
        }
      },
      lastName: {
        serializedName: "last_name",
        type: {
          name: "String"
        }
      },
      emailAddress: {
        serializedName: "email",
        type: {
          name: "String"
        }
      },
      phone: {
        serializedName: "phone",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OrganizationDetails: msRest.CompositeMapper = {
  serializedName: "OrganizationDetails",
  type: {
    name: "Composite",
    className: "OrganizationDetails",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      adminDetails: {
        serializedName: "admin_details",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AdministratorDetails"
            }
          }
        }
      }
    }
  }
};

export const IssuerAttributes: msRest.CompositeMapper = {
  serializedName: "IssuerAttributes",
  type: {
    name: "Composite",
    className: "IssuerAttributes",
    modelProperties: {
      enabled: {
        serializedName: "enabled",
        type: {
          name: "Boolean"
        }
      },
      created: {
        readOnly: true,
        serializedName: "created",
        type: {
          name: "UnixTime"
        }
      },
      updated: {
        readOnly: true,
        serializedName: "updated",
        type: {
          name: "UnixTime"
        }
      }
    }
  }
};

export const IssuerBundle: msRest.CompositeMapper = {
  serializedName: "IssuerBundle",
  type: {
    name: "Composite",
    className: "IssuerBundle",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      provider: {
        serializedName: "provider",
        type: {
          name: "String"
        }
      },
      credentials: {
        serializedName: "credentials",
        type: {
          name: "Composite",
          className: "IssuerCredentials"
        }
      },
      organizationDetails: {
        serializedName: "org_details",
        type: {
          name: "Composite",
          className: "OrganizationDetails"
        }
      },
      attributes: {
        serializedName: "attributes",
        type: {
          name: "Composite",
          className: "IssuerAttributes"
        }
      }
    }
  }
};

export const Contact: msRest.CompositeMapper = {
  serializedName: "Contact",
  type: {
    name: "Composite",
    className: "Contact",
    modelProperties: {
      emailAddress: {
        serializedName: "email",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      phone: {
        serializedName: "phone",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Contacts: msRest.CompositeMapper = {
  serializedName: "Contacts",
  type: {
    name: "Composite",
    className: "Contacts",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      contactList: {
        serializedName: "contacts",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Contact"
            }
          }
        }
      }
    }
  }
};

export const KeyCreateParameters: msRest.CompositeMapper = {
  serializedName: "KeyCreateParameters",
  type: {
    name: "Composite",
    className: "KeyCreateParameters",
    modelProperties: {
      kty: {
        required: true,
        serializedName: "kty",
        constraints: {
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      keySize: {
        serializedName: "key_size",
        type: {
          name: "Number"
        }
      },
      keyOps: {
        serializedName: "key_ops",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      keyAttributes: {
        serializedName: "attributes",
        type: {
          name: "Composite",
          className: "KeyAttributes"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      curve: {
        serializedName: "crv",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const KeyImportParameters: msRest.CompositeMapper = {
  serializedName: "KeyImportParameters",
  type: {
    name: "Composite",
    className: "KeyImportParameters",
    modelProperties: {
      hsm: {
        serializedName: "Hsm",
        type: {
          name: "Boolean"
        }
      },
      key: {
        required: true,
        serializedName: "key",
        type: {
          name: "Composite",
          className: "JsonWebKey"
        }
      },
      keyAttributes: {
        serializedName: "attributes",
        type: {
          name: "Composite",
          className: "KeyAttributes"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const KeyOperationsParameters: msRest.CompositeMapper = {
  serializedName: "KeyOperationsParameters",
  type: {
    name: "Composite",
    className: "KeyOperationsParameters",
    modelProperties: {
      algorithm: {
        required: true,
        serializedName: "alg",
        constraints: {
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      value: {
        required: true,
        serializedName: "value",
        type: {
          name: "Base64Url"
        }
      }
    }
  }
};

export const KeySignParameters: msRest.CompositeMapper = {
  serializedName: "KeySignParameters",
  type: {
    name: "Composite",
    className: "KeySignParameters",
    modelProperties: {
      algorithm: {
        required: true,
        serializedName: "alg",
        constraints: {
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      value: {
        required: true,
        serializedName: "value",
        type: {
          name: "Base64Url"
        }
      }
    }
  }
};

export const KeyVerifyParameters: msRest.CompositeMapper = {
  serializedName: "KeyVerifyParameters",
  type: {
    name: "Composite",
    className: "KeyVerifyParameters",
    modelProperties: {
      algorithm: {
        required: true,
        serializedName: "alg",
        constraints: {
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      digest: {
        required: true,
        serializedName: "digest",
        type: {
          name: "Base64Url"
        }
      },
      signature: {
        required: true,
        serializedName: "value",
        type: {
          name: "Base64Url"
        }
      }
    }
  }
};

export const KeyUpdateParameters: msRest.CompositeMapper = {
  serializedName: "KeyUpdateParameters",
  type: {
    name: "Composite",
    className: "KeyUpdateParameters",
    modelProperties: {
      keyOps: {
        serializedName: "key_ops",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      keyAttributes: {
        serializedName: "attributes",
        type: {
          name: "Composite",
          className: "KeyAttributes"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const KeyRestoreParameters: msRest.CompositeMapper = {
  serializedName: "KeyRestoreParameters",
  type: {
    name: "Composite",
    className: "KeyRestoreParameters",
    modelProperties: {
      keyBundleBackup: {
        required: true,
        serializedName: "value",
        type: {
          name: "Base64Url"
        }
      }
    }
  }
};

export const SecretSetParameters: msRest.CompositeMapper = {
  serializedName: "SecretSetParameters",
  type: {
    name: "Composite",
    className: "SecretSetParameters",
    modelProperties: {
      value: {
        required: true,
        serializedName: "value",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      contentType: {
        serializedName: "contentType",
        type: {
          name: "String"
        }
      },
      secretAttributes: {
        serializedName: "attributes",
        type: {
          name: "Composite",
          className: "SecretAttributes"
        }
      }
    }
  }
};

export const SecretUpdateParameters: msRest.CompositeMapper = {
  serializedName: "SecretUpdateParameters",
  type: {
    name: "Composite",
    className: "SecretUpdateParameters",
    modelProperties: {
      contentType: {
        serializedName: "contentType",
        type: {
          name: "String"
        }
      },
      secretAttributes: {
        serializedName: "attributes",
        type: {
          name: "Composite",
          className: "SecretAttributes"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const CertificateCreateParameters: msRest.CompositeMapper = {
  serializedName: "CertificateCreateParameters",
  type: {
    name: "Composite",
    className: "CertificateCreateParameters",
    modelProperties: {
      certificatePolicy: {
        serializedName: "policy",
        type: {
          name: "Composite",
          className: "CertificatePolicy"
        }
      },
      certificateAttributes: {
        serializedName: "attributes",
        type: {
          name: "Composite",
          className: "CertificateAttributes"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const CertificateImportParameters: msRest.CompositeMapper = {
  serializedName: "CertificateImportParameters",
  type: {
    name: "Composite",
    className: "CertificateImportParameters",
    modelProperties: {
      base64EncodedCertificate: {
        required: true,
        serializedName: "value",
        type: {
          name: "String"
        }
      },
      password: {
        serializedName: "pwd",
        type: {
          name: "String"
        }
      },
      certificatePolicy: {
        serializedName: "policy",
        type: {
          name: "Composite",
          className: "CertificatePolicy"
        }
      },
      certificateAttributes: {
        serializedName: "attributes",
        type: {
          name: "Composite",
          className: "CertificateAttributes"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const CertificateUpdateParameters: msRest.CompositeMapper = {
  serializedName: "CertificateUpdateParameters",
  type: {
    name: "Composite",
    className: "CertificateUpdateParameters",
    modelProperties: {
      certificatePolicy: {
        serializedName: "policy",
        type: {
          name: "Composite",
          className: "CertificatePolicy"
        }
      },
      certificateAttributes: {
        serializedName: "attributes",
        type: {
          name: "Composite",
          className: "CertificateAttributes"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const CertificateMergeParameters: msRest.CompositeMapper = {
  serializedName: "CertificateMergeParameters",
  type: {
    name: "Composite",
    className: "CertificateMergeParameters",
    modelProperties: {
      x509Certificates: {
        required: true,
        serializedName: "x5c",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "ByteArray"
            }
          }
        }
      },
      certificateAttributes: {
        serializedName: "attributes",
        type: {
          name: "Composite",
          className: "CertificateAttributes"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const CertificateIssuerSetParameters: msRest.CompositeMapper = {
  serializedName: "CertificateIssuerSetParameters",
  type: {
    name: "Composite",
    className: "CertificateIssuerSetParameters",
    modelProperties: {
      provider: {
        required: true,
        serializedName: "provider",
        type: {
          name: "String"
        }
      },
      credentials: {
        serializedName: "credentials",
        type: {
          name: "Composite",
          className: "IssuerCredentials"
        }
      },
      organizationDetails: {
        serializedName: "org_details",
        type: {
          name: "Composite",
          className: "OrganizationDetails"
        }
      },
      attributes: {
        serializedName: "attributes",
        type: {
          name: "Composite",
          className: "IssuerAttributes"
        }
      }
    }
  }
};

export const CertificateIssuerUpdateParameters: msRest.CompositeMapper = {
  serializedName: "CertificateIssuerUpdateParameters",
  type: {
    name: "Composite",
    className: "CertificateIssuerUpdateParameters",
    modelProperties: {
      provider: {
        serializedName: "provider",
        type: {
          name: "String"
        }
      },
      credentials: {
        serializedName: "credentials",
        type: {
          name: "Composite",
          className: "IssuerCredentials"
        }
      },
      organizationDetails: {
        serializedName: "org_details",
        type: {
          name: "Composite",
          className: "OrganizationDetails"
        }
      },
      attributes: {
        serializedName: "attributes",
        type: {
          name: "Composite",
          className: "IssuerAttributes"
        }
      }
    }
  }
};

export const CertificateOperationUpdateParameter: msRest.CompositeMapper = {
  serializedName: "CertificateOperationUpdateParameter",
  type: {
    name: "Composite",
    className: "CertificateOperationUpdateParameter",
    modelProperties: {
      cancellationRequested: {
        required: true,
        serializedName: "cancellation_requested",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const KeyOperationResult: msRest.CompositeMapper = {
  serializedName: "KeyOperationResult",
  type: {
    name: "Composite",
    className: "KeyOperationResult",
    modelProperties: {
      kid: {
        readOnly: true,
        serializedName: "kid",
        type: {
          name: "String"
        }
      },
      result: {
        readOnly: true,
        serializedName: "value",
        type: {
          name: "Base64Url"
        }
      }
    }
  }
};

export const KeyVerifyResult: msRest.CompositeMapper = {
  serializedName: "KeyVerifyResult",
  type: {
    name: "Composite",
    className: "KeyVerifyResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "value",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const BackupKeyResult: msRest.CompositeMapper = {
  serializedName: "BackupKeyResult",
  type: {
    name: "Composite",
    className: "BackupKeyResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "value",
        type: {
          name: "Base64Url"
        }
      }
    }
  }
};

export const BackupSecretResult: msRest.CompositeMapper = {
  serializedName: "BackupSecretResult",
  type: {
    name: "Composite",
    className: "BackupSecretResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "value",
        type: {
          name: "Base64Url"
        }
      }
    }
  }
};

export const BackupStorageResult: msRest.CompositeMapper = {
  serializedName: "BackupStorageResult",
  type: {
    name: "Composite",
    className: "BackupStorageResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "value",
        type: {
          name: "Base64Url"
        }
      }
    }
  }
};

export const PendingCertificateSigningRequestResult: msRest.CompositeMapper = {
  serializedName: "PendingCertificateSigningRequestResult",
  type: {
    name: "Composite",
    className: "PendingCertificateSigningRequestResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const StorageAccountAttributes: msRest.CompositeMapper = {
  serializedName: "StorageAccountAttributes",
  type: {
    name: "Composite",
    className: "StorageAccountAttributes",
    modelProperties: {
      enabled: {
        serializedName: "enabled",
        type: {
          name: "Boolean"
        }
      },
      created: {
        readOnly: true,
        serializedName: "created",
        type: {
          name: "UnixTime"
        }
      },
      updated: {
        readOnly: true,
        serializedName: "updated",
        type: {
          name: "UnixTime"
        }
      },
      recoveryLevel: {
        nullable: false,
        readOnly: true,
        serializedName: "recoveryLevel",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const StorageBundle: msRest.CompositeMapper = {
  serializedName: "StorageBundle",
  type: {
    name: "Composite",
    className: "StorageBundle",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      resourceId: {
        readOnly: true,
        serializedName: "resourceId",
        type: {
          name: "String"
        }
      },
      activeKeyName: {
        readOnly: true,
        serializedName: "activeKeyName",
        type: {
          name: "String"
        }
      },
      autoRegenerateKey: {
        readOnly: true,
        serializedName: "autoRegenerateKey",
        type: {
          name: "Boolean"
        }
      },
      regenerationPeriod: {
        readOnly: true,
        serializedName: "regenerationPeriod",
        type: {
          name: "String"
        }
      },
      attributes: {
        readOnly: true,
        serializedName: "attributes",
        type: {
          name: "Composite",
          className: "StorageAccountAttributes"
        }
      },
      tags: {
        readOnly: true,
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const DeletedStorageBundle: msRest.CompositeMapper = {
  serializedName: "DeletedStorageBundle",
  type: {
    name: "Composite",
    className: "DeletedStorageBundle",
    modelProperties: {
      ...StorageBundle.type.modelProperties,
      recoveryId: {
        serializedName: "recoveryId",
        type: {
          name: "String"
        }
      },
      scheduledPurgeDate: {
        readOnly: true,
        serializedName: "scheduledPurgeDate",
        type: {
          name: "UnixTime"
        }
      },
      deletedDate: {
        readOnly: true,
        serializedName: "deletedDate",
        type: {
          name: "UnixTime"
        }
      }
    }
  }
};

export const StorageAccountCreateParameters: msRest.CompositeMapper = {
  serializedName: "StorageAccountCreateParameters",
  type: {
    name: "Composite",
    className: "StorageAccountCreateParameters",
    modelProperties: {
      resourceId: {
        required: true,
        serializedName: "resourceId",
        type: {
          name: "String"
        }
      },
      activeKeyName: {
        required: true,
        serializedName: "activeKeyName",
        type: {
          name: "String"
        }
      },
      autoRegenerateKey: {
        required: true,
        serializedName: "autoRegenerateKey",
        type: {
          name: "Boolean"
        }
      },
      regenerationPeriod: {
        serializedName: "regenerationPeriod",
        type: {
          name: "String"
        }
      },
      storageAccountAttributes: {
        serializedName: "attributes",
        type: {
          name: "Composite",
          className: "StorageAccountAttributes"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const StorageAccountUpdateParameters: msRest.CompositeMapper = {
  serializedName: "StorageAccountUpdateParameters",
  type: {
    name: "Composite",
    className: "StorageAccountUpdateParameters",
    modelProperties: {
      activeKeyName: {
        serializedName: "activeKeyName",
        type: {
          name: "String"
        }
      },
      autoRegenerateKey: {
        serializedName: "autoRegenerateKey",
        type: {
          name: "Boolean"
        }
      },
      regenerationPeriod: {
        serializedName: "regenerationPeriod",
        type: {
          name: "String"
        }
      },
      storageAccountAttributes: {
        serializedName: "attributes",
        type: {
          name: "Composite",
          className: "StorageAccountAttributes"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const StorageAccountRegenerteKeyParameters: msRest.CompositeMapper = {
  serializedName: "StorageAccountRegenerteKeyParameters",
  type: {
    name: "Composite",
    className: "StorageAccountRegenerteKeyParameters",
    modelProperties: {
      keyName: {
        required: true,
        serializedName: "keyName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const StorageAccountItem: msRest.CompositeMapper = {
  serializedName: "StorageAccountItem",
  type: {
    name: "Composite",
    className: "StorageAccountItem",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      resourceId: {
        readOnly: true,
        serializedName: "resourceId",
        type: {
          name: "String"
        }
      },
      attributes: {
        readOnly: true,
        serializedName: "attributes",
        type: {
          name: "Composite",
          className: "StorageAccountAttributes"
        }
      },
      tags: {
        readOnly: true,
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const DeletedStorageAccountItem: msRest.CompositeMapper = {
  serializedName: "DeletedStorageAccountItem",
  type: {
    name: "Composite",
    className: "DeletedStorageAccountItem",
    modelProperties: {
      ...StorageAccountItem.type.modelProperties,
      recoveryId: {
        serializedName: "recoveryId",
        type: {
          name: "String"
        }
      },
      scheduledPurgeDate: {
        readOnly: true,
        serializedName: "scheduledPurgeDate",
        type: {
          name: "UnixTime"
        }
      },
      deletedDate: {
        readOnly: true,
        serializedName: "deletedDate",
        type: {
          name: "UnixTime"
        }
      }
    }
  }
};

export const SasDefinitionAttributes: msRest.CompositeMapper = {
  serializedName: "SasDefinitionAttributes",
  type: {
    name: "Composite",
    className: "SasDefinitionAttributes",
    modelProperties: {
      enabled: {
        serializedName: "enabled",
        type: {
          name: "Boolean"
        }
      },
      created: {
        readOnly: true,
        serializedName: "created",
        type: {
          name: "UnixTime"
        }
      },
      updated: {
        readOnly: true,
        serializedName: "updated",
        type: {
          name: "UnixTime"
        }
      },
      recoveryLevel: {
        nullable: false,
        readOnly: true,
        serializedName: "recoveryLevel",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SasDefinitionBundle: msRest.CompositeMapper = {
  serializedName: "SasDefinitionBundle",
  type: {
    name: "Composite",
    className: "SasDefinitionBundle",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      secretId: {
        readOnly: true,
        serializedName: "sid",
        type: {
          name: "String"
        }
      },
      templateUri: {
        readOnly: true,
        serializedName: "templateUri",
        type: {
          name: "String"
        }
      },
      sasType: {
        readOnly: true,
        serializedName: "sasType",
        type: {
          name: "String"
        }
      },
      validityPeriod: {
        readOnly: true,
        serializedName: "validityPeriod",
        type: {
          name: "String"
        }
      },
      attributes: {
        readOnly: true,
        serializedName: "attributes",
        type: {
          name: "Composite",
          className: "SasDefinitionAttributes"
        }
      },
      tags: {
        readOnly: true,
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const DeletedSasDefinitionBundle: msRest.CompositeMapper = {
  serializedName: "DeletedSasDefinitionBundle",
  type: {
    name: "Composite",
    className: "DeletedSasDefinitionBundle",
    modelProperties: {
      ...SasDefinitionBundle.type.modelProperties,
      recoveryId: {
        serializedName: "recoveryId",
        type: {
          name: "String"
        }
      },
      scheduledPurgeDate: {
        readOnly: true,
        serializedName: "scheduledPurgeDate",
        type: {
          name: "UnixTime"
        }
      },
      deletedDate: {
        readOnly: true,
        serializedName: "deletedDate",
        type: {
          name: "UnixTime"
        }
      }
    }
  }
};

export const SasDefinitionItem: msRest.CompositeMapper = {
  serializedName: "SasDefinitionItem",
  type: {
    name: "Composite",
    className: "SasDefinitionItem",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      secretId: {
        readOnly: true,
        serializedName: "sid",
        type: {
          name: "String"
        }
      },
      attributes: {
        readOnly: true,
        serializedName: "attributes",
        type: {
          name: "Composite",
          className: "SasDefinitionAttributes"
        }
      },
      tags: {
        readOnly: true,
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const DeletedSasDefinitionItem: msRest.CompositeMapper = {
  serializedName: "DeletedSasDefinitionItem",
  type: {
    name: "Composite",
    className: "DeletedSasDefinitionItem",
    modelProperties: {
      ...SasDefinitionItem.type.modelProperties,
      recoveryId: {
        serializedName: "recoveryId",
        type: {
          name: "String"
        }
      },
      scheduledPurgeDate: {
        readOnly: true,
        serializedName: "scheduledPurgeDate",
        type: {
          name: "UnixTime"
        }
      },
      deletedDate: {
        readOnly: true,
        serializedName: "deletedDate",
        type: {
          name: "UnixTime"
        }
      }
    }
  }
};

export const SasDefinitionCreateParameters: msRest.CompositeMapper = {
  serializedName: "SasDefinitionCreateParameters",
  type: {
    name: "Composite",
    className: "SasDefinitionCreateParameters",
    modelProperties: {
      templateUri: {
        required: true,
        serializedName: "templateUri",
        type: {
          name: "String"
        }
      },
      sasType: {
        required: true,
        serializedName: "sasType",
        type: {
          name: "String"
        }
      },
      validityPeriod: {
        required: true,
        serializedName: "validityPeriod",
        type: {
          name: "String"
        }
      },
      sasDefinitionAttributes: {
        serializedName: "attributes",
        type: {
          name: "Composite",
          className: "SasDefinitionAttributes"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const SasDefinitionUpdateParameters: msRest.CompositeMapper = {
  serializedName: "SasDefinitionUpdateParameters",
  type: {
    name: "Composite",
    className: "SasDefinitionUpdateParameters",
    modelProperties: {
      templateUri: {
        serializedName: "templateUri",
        type: {
          name: "String"
        }
      },
      sasType: {
        serializedName: "sasType",
        type: {
          name: "String"
        }
      },
      validityPeriod: {
        serializedName: "validityPeriod",
        type: {
          name: "String"
        }
      },
      sasDefinitionAttributes: {
        serializedName: "attributes",
        type: {
          name: "Composite",
          className: "SasDefinitionAttributes"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const KeyVaultError: msRest.CompositeMapper = {
  serializedName: "KeyVaultError",
  type: {
    name: "Composite",
    className: "KeyVaultError",
    modelProperties: {
      error: {
        readOnly: true,
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorModel"
        }
      }
    }
  }
};

export const CertificateRestoreParameters: msRest.CompositeMapper = {
  serializedName: "CertificateRestoreParameters",
  type: {
    name: "Composite",
    className: "CertificateRestoreParameters",
    modelProperties: {
      certificateBundleBackup: {
        required: true,
        serializedName: "value",
        type: {
          name: "Base64Url"
        }
      }
    }
  }
};

export const BackupCertificateResult: msRest.CompositeMapper = {
  serializedName: "BackupCertificateResult",
  type: {
    name: "Composite",
    className: "BackupCertificateResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "value",
        type: {
          name: "Base64Url"
        }
      }
    }
  }
};

export const KeyListResult: msRest.CompositeMapper = {
  serializedName: "KeyListResult",
  type: {
    name: "Composite",
    className: "KeyListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "KeyItem"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DeletedKeyListResult: msRest.CompositeMapper = {
  serializedName: "DeletedKeyListResult",
  type: {
    name: "Composite",
    className: "DeletedKeyListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DeletedKeyItem"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SecretListResult: msRest.CompositeMapper = {
  serializedName: "SecretListResult",
  type: {
    name: "Composite",
    className: "SecretListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SecretItem"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DeletedSecretListResult: msRest.CompositeMapper = {
  serializedName: "DeletedSecretListResult",
  type: {
    name: "Composite",
    className: "DeletedSecretListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DeletedSecretItem"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CertificateListResult: msRest.CompositeMapper = {
  serializedName: "CertificateListResult",
  type: {
    name: "Composite",
    className: "CertificateListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CertificateItem"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CertificateIssuerListResult: msRest.CompositeMapper = {
  serializedName: "CertificateIssuerListResult",
  type: {
    name: "Composite",
    className: "CertificateIssuerListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CertificateIssuerItem"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DeletedCertificateListResult: msRest.CompositeMapper = {
  serializedName: "DeletedCertificateListResult",
  type: {
    name: "Composite",
    className: "DeletedCertificateListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DeletedCertificateItem"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const StorageListResult: msRest.CompositeMapper = {
  serializedName: "StorageListResult",
  type: {
    name: "Composite",
    className: "StorageListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "StorageAccountItem"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DeletedStorageListResult: msRest.CompositeMapper = {
  serializedName: "DeletedStorageListResult",
  type: {
    name: "Composite",
    className: "DeletedStorageListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DeletedStorageAccountItem"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SasDefinitionListResult: msRest.CompositeMapper = {
  serializedName: "SasDefinitionListResult",
  type: {
    name: "Composite",
    className: "SasDefinitionListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SasDefinitionItem"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DeletedSasDefinitionListResult: msRest.CompositeMapper = {
  serializedName: "DeletedSasDefinitionListResult",
  type: {
    name: "Composite",
    className: "DeletedSasDefinitionListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DeletedSasDefinitionItem"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};
