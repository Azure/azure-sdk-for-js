/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/advancedThreatProtectionMappers";
import * as Parameters from "../models/parameters";
import { SecurityCenterContext } from "../securityCenterContext";

/** Class representing a AdvancedThreatProtection. */
export class AdvancedThreatProtection {
  private readonly client: SecurityCenterContext;

  /**
   * Create a AdvancedThreatProtection.
   * @param {SecurityCenterContext} client Reference to the service client.
   */
  constructor(client: SecurityCenterContext) {
    this.client = client;
  }

  /**
   * Gets the Advanced Threat Protection settings for the specified resource.
   * @param resourceId The identifier of the resource.
   * @param [options] The optional parameters
   * @returns Promise<Models.AdvancedThreatProtectionGetResponse>
   */
  get(resourceId: string, options?: msRest.RequestOptionsBase): Promise<Models.AdvancedThreatProtectionGetResponse>;
  /**
   * @param resourceId The identifier of the resource.
   * @param callback The callback
   */
  get(resourceId: string, callback: msRest.ServiceCallback<Models.AdvancedThreatProtectionSetting>): void;
  /**
   * @param resourceId The identifier of the resource.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(resourceId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.AdvancedThreatProtectionSetting>): void;
  get(resourceId: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.AdvancedThreatProtectionSetting>, callback?: msRest.ServiceCallback<Models.AdvancedThreatProtectionSetting>): Promise<Models.AdvancedThreatProtectionGetResponse> {
    return this.client.sendOperationRequest(
      {
        resourceId,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.AdvancedThreatProtectionGetResponse>;
  }

  /**
   * Creates or updates the Advanced Threat Protection settings on a specified resource.
   * @param resourceId The identifier of the resource.
   * @param advancedThreatProtectionSetting Advanced Threat Protection Settings
   * @param [options] The optional parameters
   * @returns Promise<Models.AdvancedThreatProtectionCreateResponse>
   */
  create(resourceId: string, advancedThreatProtectionSetting: Models.AdvancedThreatProtectionSetting, options?: msRest.RequestOptionsBase): Promise<Models.AdvancedThreatProtectionCreateResponse>;
  /**
   * @param resourceId The identifier of the resource.
   * @param advancedThreatProtectionSetting Advanced Threat Protection Settings
   * @param callback The callback
   */
  create(resourceId: string, advancedThreatProtectionSetting: Models.AdvancedThreatProtectionSetting, callback: msRest.ServiceCallback<Models.AdvancedThreatProtectionSetting>): void;
  /**
   * @param resourceId The identifier of the resource.
   * @param advancedThreatProtectionSetting Advanced Threat Protection Settings
   * @param options The optional parameters
   * @param callback The callback
   */
  create(resourceId: string, advancedThreatProtectionSetting: Models.AdvancedThreatProtectionSetting, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.AdvancedThreatProtectionSetting>): void;
  create(resourceId: string, advancedThreatProtectionSetting: Models.AdvancedThreatProtectionSetting, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.AdvancedThreatProtectionSetting>, callback?: msRest.ServiceCallback<Models.AdvancedThreatProtectionSetting>): Promise<Models.AdvancedThreatProtectionCreateResponse> {
    return this.client.sendOperationRequest(
      {
        resourceId,
        advancedThreatProtectionSetting,
        options
      },
      createOperationSpec,
      callback) as Promise<Models.AdvancedThreatProtectionCreateResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "{resourceId}/providers/Microsoft.Security/advancedThreatProtectionSettings/{settingName}",
  urlParameters: [
    Parameters.resourceId,
    Parameters.settingName1
  ],
  queryParameters: [
    Parameters.apiVersion2
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.AdvancedThreatProtectionSetting
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const createOperationSpec: msRest.OperationSpec = {
  httpMethod: "PUT",
  path: "{resourceId}/providers/Microsoft.Security/advancedThreatProtectionSettings/{settingName}",
  urlParameters: [
    Parameters.resourceId,
    Parameters.settingName1
  ],
  queryParameters: [
    Parameters.apiVersion2
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "advancedThreatProtectionSetting",
    mapper: {
      ...Mappers.AdvancedThreatProtectionSetting,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.AdvancedThreatProtectionSetting
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};
