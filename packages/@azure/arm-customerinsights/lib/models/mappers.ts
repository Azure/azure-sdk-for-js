/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { CloudErrorMapper, BaseResourceMapper } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export const CloudError = CloudErrorMapper;
export const BaseResource = BaseResourceMapper;

export const HubBillingInfoFormat: msRest.CompositeMapper = {
  serializedName: "HubBillingInfoFormat",
  type: {
    name: "Composite",
    className: "HubBillingInfoFormat",
    modelProperties: {
      skuName: {
        serializedName: "skuName",
        type: {
          name: "String"
        }
      },
      minUnits: {
        serializedName: "minUnits",
        constraints: {
          InclusiveMaximum: 10,
          InclusiveMinimum: 1
        },
        type: {
          name: "Number"
        }
      },
      maxUnits: {
        serializedName: "maxUnits",
        constraints: {
          InclusiveMaximum: 10,
          InclusiveMinimum: 1
        },
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Resource: msRest.CompositeMapper = {
  serializedName: "Resource",
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Hub: msRest.CompositeMapper = {
  serializedName: "Hub",
  type: {
    name: "Composite",
    className: "Hub",
    modelProperties: {
      ...Resource.type.modelProperties,
      apiEndpoint: {
        readOnly: true,
        serializedName: "properties.apiEndpoint",
        type: {
          name: "String"
        }
      },
      webEndpoint: {
        readOnly: true,
        serializedName: "properties.webEndpoint",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      tenantFeatures: {
        serializedName: "properties.tenantFeatures",
        type: {
          name: "Number"
        }
      },
      hubBillingInfo: {
        serializedName: "properties.hubBillingInfo",
        type: {
          name: "Composite",
          className: "HubBillingInfoFormat"
        }
      }
    }
  }
};

export const MetadataDefinitionBase: msRest.CompositeMapper = {
  serializedName: "MetadataDefinitionBase",
  type: {
    name: "Composite",
    className: "MetadataDefinitionBase",
    modelProperties: {
      attributes: {
        serializedName: "attributes",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Sequence",
              element: {
                type: {
                  name: "String"
                }
              }
            }
          }
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      localizedAttributes: {
        serializedName: "localizedAttributes",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Dictionary",
              value: {
                type: {
                  name: "String"
                }
              }
            }
          }
        }
      },
      smallImage: {
        serializedName: "smallImage",
        type: {
          name: "String"
        }
      },
      mediumImage: {
        serializedName: "mediumImage",
        type: {
          name: "String"
        }
      },
      largeImage: {
        serializedName: "largeImage",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProfileEnumValidValuesFormat: msRest.CompositeMapper = {
  serializedName: "ProfileEnumValidValuesFormat",
  type: {
    name: "Composite",
    className: "ProfileEnumValidValuesFormat",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Number"
        }
      },
      localizedValueNames: {
        serializedName: "localizedValueNames",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const DataSourcePrecedence: msRest.CompositeMapper = {
  serializedName: "DataSourcePrecedence",
  type: {
    name: "Composite",
    className: "DataSourcePrecedence",
    modelProperties: {
      name: {
        readOnly: true,
        serializedName: "dataSource.name",
        type: {
          name: "String"
        }
      },
      dataSourceType: {
        readOnly: true,
        serializedName: "dataSource.dataSourceType",
        type: {
          name: "String"
        }
      },
      status: {
        readOnly: true,
        serializedName: "dataSource.status",
        type: {
          name: "String"
        }
      },
      id: {
        readOnly: true,
        serializedName: "dataSource.id",
        type: {
          name: "Number"
        }
      },
      dataSourceReferenceId: {
        readOnly: true,
        serializedName: "dataSource.dataSourceReferenceId",
        type: {
          name: "String"
        }
      },
      precedence: {
        serializedName: "precedence",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const PropertyDefinition: msRest.CompositeMapper = {
  serializedName: "PropertyDefinition",
  type: {
    name: "Composite",
    className: "PropertyDefinition",
    modelProperties: {
      arrayValueSeparator: {
        serializedName: "arrayValueSeparator",
        type: {
          name: "String"
        }
      },
      enumValidValues: {
        serializedName: "enumValidValues",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ProfileEnumValidValuesFormat"
            }
          }
        }
      },
      fieldName: {
        required: true,
        serializedName: "fieldName",
        type: {
          name: "String"
        }
      },
      fieldType: {
        required: true,
        serializedName: "fieldType",
        type: {
          name: "String"
        }
      },
      isArray: {
        serializedName: "isArray",
        type: {
          name: "Boolean"
        }
      },
      isEnum: {
        serializedName: "isEnum",
        type: {
          name: "Boolean"
        }
      },
      isFlagEnum: {
        serializedName: "isFlagEnum",
        type: {
          name: "Boolean"
        }
      },
      isImage: {
        serializedName: "isImage",
        type: {
          name: "Boolean"
        }
      },
      isLocalizedString: {
        serializedName: "isLocalizedString",
        type: {
          name: "Boolean"
        }
      },
      isName: {
        serializedName: "isName",
        type: {
          name: "Boolean"
        }
      },
      isRequired: {
        serializedName: "isRequired",
        type: {
          name: "Boolean"
        }
      },
      propertyId: {
        serializedName: "propertyId",
        type: {
          name: "String"
        }
      },
      schemaItemPropLink: {
        serializedName: "schemaItemPropLink",
        type: {
          name: "String"
        }
      },
      maxLength: {
        serializedName: "maxLength",
        type: {
          name: "Number"
        }
      },
      isAvailableInGraph: {
        serializedName: "isAvailableInGraph",
        type: {
          name: "Boolean"
        }
      },
      dataSourcePrecedenceRules: {
        readOnly: true,
        serializedName: "dataSourcePrecedenceRules",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DataSourcePrecedence"
            }
          }
        }
      }
    }
  }
};

export const EntityTypeDefinition: msRest.CompositeMapper = {
  serializedName: "EntityTypeDefinition",
  type: {
    name: "Composite",
    className: "EntityTypeDefinition",
    modelProperties: {
      ...MetadataDefinitionBase.type.modelProperties,
      apiEntitySetName: {
        serializedName: "apiEntitySetName",
        type: {
          name: "String"
        }
      },
      entityType: {
        serializedName: "entityType",
        type: {
          name: "Enum",
          allowedValues: [
            "None",
            "Profile",
            "Interaction",
            "Relationship"
          ]
        }
      },
      fields: {
        serializedName: "fields",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PropertyDefinition"
            }
          }
        }
      },
      instancesCount: {
        serializedName: "instancesCount",
        type: {
          name: "Number"
        }
      },
      lastChangedUtc: {
        readOnly: true,
        serializedName: "lastChangedUtc",
        type: {
          name: "DateTime"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "provisioningState",
        type: {
          name: "String"
        }
      },
      schemaItemTypeLink: {
        serializedName: "schemaItemTypeLink",
        type: {
          name: "String"
        }
      },
      tenantId: {
        readOnly: true,
        serializedName: "tenantId",
        type: {
          name: "String"
        }
      },
      timestampFieldName: {
        serializedName: "timestampFieldName",
        type: {
          name: "String"
        }
      },
      typeName: {
        serializedName: "typeName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AuthorizationPolicy: msRest.CompositeMapper = {
  serializedName: "AuthorizationPolicy",
  type: {
    name: "Composite",
    className: "AuthorizationPolicy",
    modelProperties: {
      policyName: {
        readOnly: true,
        serializedName: "policyName",
        type: {
          name: "String"
        }
      },
      permissions: {
        required: true,
        serializedName: "permissions",
        constraints: {
          UniqueItems: true
        },
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Enum",
              allowedValues: [
                "Read",
                "Write",
                "Manage"
              ]
            }
          }
        }
      },
      primaryKey: {
        serializedName: "primaryKey",
        type: {
          name: "String"
        }
      },
      secondaryKey: {
        serializedName: "secondaryKey",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SalesforceDiscoverSetting: msRest.CompositeMapper = {
  serializedName: "SalesforceDiscoverSetting",
  type: {
    name: "Composite",
    className: "SalesforceDiscoverSetting",
    modelProperties: {
      salesforceConnectionStringSecretUrl: {
        required: true,
        serializedName: "salesforceConnectionStringSecretUrl",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SalesforceTable: msRest.CompositeMapper = {
  serializedName: "SalesforceTable",
  type: {
    name: "Composite",
    className: "SalesforceTable",
    modelProperties: {
      isProfile: {
        serializedName: "isProfile",
        type: {
          name: "String"
        }
      },
      tableCategory: {
        required: true,
        serializedName: "tableCategory",
        type: {
          name: "String"
        }
      },
      tableName: {
        required: true,
        serializedName: "tableName",
        type: {
          name: "String"
        }
      },
      tableRemarks: {
        serializedName: "tableRemarks",
        type: {
          name: "String"
        }
      },
      tableSchema: {
        required: true,
        serializedName: "tableSchema",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SalesforceConnectorProperties: msRest.CompositeMapper = {
  serializedName: "SalesforceConnectorProperties",
  type: {
    name: "Composite",
    className: "SalesforceConnectorProperties",
    modelProperties: {
      usersetting: {
        required: true,
        serializedName: "usersetting",
        type: {
          name: "Composite",
          className: "SalesforceDiscoverSetting"
        }
      },
      salesforcetables: {
        required: true,
        serializedName: "salesforcetables",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SalesforceTable"
            }
          }
        }
      }
    }
  }
};

export const AzureBlobConnectorProperties: msRest.CompositeMapper = {
  serializedName: "AzureBlobConnectorProperties",
  type: {
    name: "Composite",
    className: "AzureBlobConnectorProperties",
    modelProperties: {
      connectionKeyVaultUrl: {
        required: true,
        serializedName: "connectionKeyVaultUrl",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CrmConnectorEntities: msRest.CompositeMapper = {
  serializedName: "CrmConnectorEntities",
  type: {
    name: "Composite",
    className: "CrmConnectorEntities",
    modelProperties: {
      logicalName: {
        required: true,
        serializedName: "logicalName",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      isProfile: {
        serializedName: "isProfile",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const CrmConnectorProperties: msRest.CompositeMapper = {
  serializedName: "CrmConnectorProperties",
  type: {
    name: "Composite",
    className: "CrmConnectorProperties",
    modelProperties: {
      connectionString: {
        serializedName: "connectionString",
        type: {
          name: "String"
        }
      },
      organizationId: {
        required: true,
        serializedName: "organizationId",
        type: {
          name: "String"
        }
      },
      organizationUrl: {
        required: true,
        serializedName: "organizationUrl",
        type: {
          name: "String"
        }
      },
      entities: {
        required: true,
        serializedName: "entities",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CrmConnectorEntities"
            }
          }
        }
      },
      accessToken: {
        serializedName: "accessToken",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ConnectorMappingErrorManagement: msRest.CompositeMapper = {
  serializedName: "ConnectorMappingErrorManagement",
  type: {
    name: "Composite",
    className: "ConnectorMappingErrorManagement",
    modelProperties: {
      errorManagementType: {
        required: true,
        serializedName: "errorManagementType",
        type: {
          name: "Enum",
          allowedValues: [
            "RejectAndContinue",
            "StopImport",
            "RejectUntilLimit"
          ]
        }
      },
      errorLimit: {
        serializedName: "errorLimit",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ConnectorMappingFormat: msRest.CompositeMapper = {
  serializedName: "ConnectorMappingFormat",
  type: {
    name: "Composite",
    className: "ConnectorMappingFormat",
    modelProperties: {
      formatType: {
        required: true,
        isConstant: true,
        serializedName: "formatType",
        defaultValue: 'TextFormat',
        type: {
          name: "String"
        }
      },
      columnDelimiter: {
        serializedName: "columnDelimiter",
        type: {
          name: "String"
        }
      },
      acceptLanguage: {
        serializedName: "acceptLanguage",
        type: {
          name: "String"
        }
      },
      quoteCharacter: {
        serializedName: "quoteCharacter",
        type: {
          name: "String"
        }
      },
      quoteEscapeCharacter: {
        serializedName: "quoteEscapeCharacter",
        type: {
          name: "String"
        }
      },
      arraySeparator: {
        serializedName: "arraySeparator",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ConnectorMappingAvailability: msRest.CompositeMapper = {
  serializedName: "ConnectorMappingAvailability",
  type: {
    name: "Composite",
    className: "ConnectorMappingAvailability",
    modelProperties: {
      frequency: {
        serializedName: "frequency",
        type: {
          name: "Enum",
          allowedValues: [
            "Minute",
            "Hour",
            "Day",
            "Week",
            "Month"
          ]
        }
      },
      interval: {
        required: true,
        serializedName: "interval",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ConnectorMappingStructure: msRest.CompositeMapper = {
  serializedName: "ConnectorMappingStructure",
  type: {
    name: "Composite",
    className: "ConnectorMappingStructure",
    modelProperties: {
      propertyName: {
        required: true,
        serializedName: "propertyName",
        type: {
          name: "String"
        }
      },
      columnName: {
        required: true,
        serializedName: "columnName",
        type: {
          name: "String"
        }
      },
      customFormatSpecifier: {
        serializedName: "customFormatSpecifier",
        type: {
          name: "String"
        }
      },
      isEncrypted: {
        serializedName: "isEncrypted",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const ConnectorMappingCompleteOperation: msRest.CompositeMapper = {
  serializedName: "ConnectorMappingCompleteOperation",
  type: {
    name: "Composite",
    className: "ConnectorMappingCompleteOperation",
    modelProperties: {
      completionOperationType: {
        serializedName: "completionOperationType",
        type: {
          name: "Enum",
          allowedValues: [
            "DoNothing",
            "DeleteFile",
            "MoveFile"
          ]
        }
      },
      destinationFolder: {
        serializedName: "destinationFolder",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ConnectorMappingProperties: msRest.CompositeMapper = {
  serializedName: "ConnectorMappingProperties",
  type: {
    name: "Composite",
    className: "ConnectorMappingProperties",
    modelProperties: {
      folderPath: {
        serializedName: "folderPath",
        type: {
          name: "String"
        }
      },
      fileFilter: {
        serializedName: "fileFilter",
        type: {
          name: "String"
        }
      },
      hasHeader: {
        serializedName: "hasHeader",
        type: {
          name: "Boolean"
        }
      },
      errorManagement: {
        required: true,
        serializedName: "errorManagement",
        type: {
          name: "Composite",
          className: "ConnectorMappingErrorManagement"
        }
      },
      format: {
        required: true,
        serializedName: "format",
        defaultValue: {},
        type: {
          name: "Composite",
          className: "ConnectorMappingFormat"
        }
      },
      availability: {
        required: true,
        serializedName: "availability",
        type: {
          name: "Composite",
          className: "ConnectorMappingAvailability"
        }
      },
      structure: {
        required: true,
        serializedName: "structure",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ConnectorMappingStructure"
            }
          }
        }
      },
      completeOperation: {
        required: true,
        serializedName: "completeOperation",
        type: {
          name: "Composite",
          className: "ConnectorMappingCompleteOperation"
        }
      }
    }
  }
};

export const KpiThresholds: msRest.CompositeMapper = {
  serializedName: "KpiThresholds",
  type: {
    name: "Composite",
    className: "KpiThresholds",
    modelProperties: {
      lowerLimit: {
        required: true,
        serializedName: "lowerLimit",
        type: {
          name: "Number"
        }
      },
      upperLimit: {
        required: true,
        serializedName: "upperLimit",
        type: {
          name: "Number"
        }
      },
      increasingKpi: {
        required: true,
        serializedName: "increasingKpi",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const KpiGroupByMetadata: msRest.CompositeMapper = {
  serializedName: "KpiGroupByMetadata",
  type: {
    name: "Composite",
    className: "KpiGroupByMetadata",
    modelProperties: {
      displayName: {
        serializedName: "displayName",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      fieldName: {
        serializedName: "fieldName",
        type: {
          name: "String"
        }
      },
      fieldType: {
        serializedName: "fieldType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const KpiParticipantProfilesMetadata: msRest.CompositeMapper = {
  serializedName: "KpiParticipantProfilesMetadata",
  type: {
    name: "Composite",
    className: "KpiParticipantProfilesMetadata",
    modelProperties: {
      typeName: {
        required: true,
        serializedName: "typeName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const KpiAlias: msRest.CompositeMapper = {
  serializedName: "KpiAlias",
  type: {
    name: "Composite",
    className: "KpiAlias",
    modelProperties: {
      aliasName: {
        required: true,
        serializedName: "aliasName",
        type: {
          name: "String"
        }
      },
      expression: {
        required: true,
        serializedName: "expression",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const KpiExtract: msRest.CompositeMapper = {
  serializedName: "KpiExtract",
  type: {
    name: "Composite",
    className: "KpiExtract",
    modelProperties: {
      extractName: {
        required: true,
        serializedName: "extractName",
        type: {
          name: "String"
        }
      },
      expression: {
        required: true,
        serializedName: "expression",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const KpiDefinition: msRest.CompositeMapper = {
  serializedName: "KpiDefinition",
  type: {
    name: "Composite",
    className: "KpiDefinition",
    modelProperties: {
      entityType: {
        required: true,
        serializedName: "entityType",
        type: {
          name: "Enum",
          allowedValues: [
            "None",
            "Profile",
            "Interaction",
            "Relationship"
          ]
        }
      },
      entityTypeName: {
        required: true,
        serializedName: "entityTypeName",
        type: {
          name: "String"
        }
      },
      tenantId: {
        readOnly: true,
        serializedName: "tenantId",
        type: {
          name: "String"
        }
      },
      kpiName: {
        readOnly: true,
        serializedName: "kpiName",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      calculationWindow: {
        required: true,
        serializedName: "calculationWindow",
        type: {
          name: "Enum",
          allowedValues: [
            "Lifetime",
            "Hour",
            "Day",
            "Week",
            "Month"
          ]
        }
      },
      calculationWindowFieldName: {
        serializedName: "calculationWindowFieldName",
        type: {
          name: "String"
        }
      },
      functionProperty: {
        required: true,
        serializedName: "function",
        type: {
          name: "Enum",
          allowedValues: [
            "Sum",
            "Avg",
            "Min",
            "Max",
            "Last",
            "Count",
            "None",
            "CountDistinct"
          ]
        }
      },
      expression: {
        required: true,
        serializedName: "expression",
        type: {
          name: "String"
        }
      },
      unit: {
        serializedName: "unit",
        type: {
          name: "String"
        }
      },
      filter: {
        serializedName: "filter",
        type: {
          name: "String"
        }
      },
      groupBy: {
        serializedName: "groupBy",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      groupByMetadata: {
        readOnly: true,
        serializedName: "groupByMetadata",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "KpiGroupByMetadata"
            }
          }
        }
      },
      participantProfilesMetadata: {
        readOnly: true,
        serializedName: "participantProfilesMetadata",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "KpiParticipantProfilesMetadata"
            }
          }
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "provisioningState",
        type: {
          name: "String"
        }
      },
      thresHolds: {
        serializedName: "thresHolds",
        type: {
          name: "Composite",
          className: "KpiThresholds"
        }
      },
      aliases: {
        serializedName: "aliases",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "KpiAlias"
            }
          }
        }
      },
      extracts: {
        serializedName: "extracts",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "KpiExtract"
            }
          }
        }
      }
    }
  }
};

export const ProxyResource: msRest.CompositeMapper = {
  serializedName: "ProxyResource",
  type: {
    name: "Composite",
    className: "ProxyResource",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TypePropertiesMapping: msRest.CompositeMapper = {
  serializedName: "TypePropertiesMapping",
  type: {
    name: "Composite",
    className: "TypePropertiesMapping",
    modelProperties: {
      sourcePropertyName: {
        required: true,
        serializedName: "sourcePropertyName",
        type: {
          name: "String"
        }
      },
      targetPropertyName: {
        required: true,
        serializedName: "targetPropertyName",
        type: {
          name: "String"
        }
      },
      linkType: {
        serializedName: "linkType",
        type: {
          name: "Enum",
          allowedValues: [
            "UpdateAlways",
            "CopyIfNull"
          ]
        }
      }
    }
  }
};

export const ParticipantPropertyReference: msRest.CompositeMapper = {
  serializedName: "ParticipantPropertyReference",
  type: {
    name: "Composite",
    className: "ParticipantPropertyReference",
    modelProperties: {
      sourcePropertyName: {
        required: true,
        serializedName: "sourcePropertyName",
        type: {
          name: "String"
        }
      },
      targetPropertyName: {
        required: true,
        serializedName: "targetPropertyName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RelationshipTypeFieldMapping: msRest.CompositeMapper = {
  serializedName: "RelationshipTypeFieldMapping",
  type: {
    name: "Composite",
    className: "RelationshipTypeFieldMapping",
    modelProperties: {
      profileFieldName: {
        required: true,
        serializedName: "profileFieldName",
        type: {
          name: "String"
        }
      },
      relatedProfileKeyProperty: {
        required: true,
        serializedName: "relatedProfileKeyProperty",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RelationshipTypeMapping: msRest.CompositeMapper = {
  serializedName: "RelationshipTypeMapping",
  type: {
    name: "Composite",
    className: "RelationshipTypeMapping",
    modelProperties: {
      fieldMappings: {
        required: true,
        serializedName: "fieldMappings",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "RelationshipTypeFieldMapping"
            }
          }
        }
      }
    }
  }
};

export const RelationshipLinkFieldMapping: msRest.CompositeMapper = {
  serializedName: "RelationshipLinkFieldMapping",
  type: {
    name: "Composite",
    className: "RelationshipLinkFieldMapping",
    modelProperties: {
      interactionFieldName: {
        required: true,
        serializedName: "interactionFieldName",
        type: {
          name: "String"
        }
      },
      linkType: {
        serializedName: "linkType",
        type: {
          name: "Enum",
          allowedValues: [
            "UpdateAlways",
            "CopyIfNull"
          ]
        }
      },
      relationshipFieldName: {
        required: true,
        serializedName: "relationshipFieldName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ParticipantProfilePropertyReference: msRest.CompositeMapper = {
  serializedName: "ParticipantProfilePropertyReference",
  type: {
    name: "Composite",
    className: "ParticipantProfilePropertyReference",
    modelProperties: {
      interactionPropertyName: {
        required: true,
        serializedName: "interactionPropertyName",
        type: {
          name: "String"
        }
      },
      profilePropertyName: {
        required: true,
        serializedName: "profilePropertyName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Participant: msRest.CompositeMapper = {
  serializedName: "Participant",
  type: {
    name: "Composite",
    className: "Participant",
    modelProperties: {
      profileTypeName: {
        required: true,
        serializedName: "profileTypeName",
        type: {
          name: "String"
        }
      },
      participantPropertyReferences: {
        required: true,
        serializedName: "participantPropertyReferences",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ParticipantPropertyReference"
            }
          }
        }
      },
      participantName: {
        required: true,
        serializedName: "participantName",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      role: {
        serializedName: "role",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const StrongId: msRest.CompositeMapper = {
  serializedName: "StrongId",
  type: {
    name: "Composite",
    className: "StrongId",
    modelProperties: {
      keyPropertyNames: {
        required: true,
        serializedName: "keyPropertyNames",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      strongIdName: {
        required: true,
        serializedName: "strongIdName",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ProfileResourceFormat: msRest.CompositeMapper = {
  serializedName: "ProfileResourceFormat",
  type: {
    name: "Composite",
    className: "ProfileResourceFormat",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      attributes: {
        serializedName: "properties.attributes",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Sequence",
              element: {
                type: {
                  name: "String"
                }
              }
            }
          }
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      localizedAttributes: {
        serializedName: "properties.localizedAttributes",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Dictionary",
              value: {
                type: {
                  name: "String"
                }
              }
            }
          }
        }
      },
      smallImage: {
        serializedName: "properties.smallImage",
        type: {
          name: "String"
        }
      },
      mediumImage: {
        serializedName: "properties.mediumImage",
        type: {
          name: "String"
        }
      },
      largeImage: {
        serializedName: "properties.largeImage",
        type: {
          name: "String"
        }
      },
      apiEntitySetName: {
        serializedName: "properties.apiEntitySetName",
        type: {
          name: "String"
        }
      },
      entityType: {
        serializedName: "properties.entityType",
        type: {
          name: "Enum",
          allowedValues: [
            "None",
            "Profile",
            "Interaction",
            "Relationship"
          ]
        }
      },
      fields: {
        serializedName: "properties.fields",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PropertyDefinition"
            }
          }
        }
      },
      instancesCount: {
        serializedName: "properties.instancesCount",
        type: {
          name: "Number"
        }
      },
      lastChangedUtc: {
        readOnly: true,
        serializedName: "properties.lastChangedUtc",
        type: {
          name: "DateTime"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      schemaItemTypeLink: {
        serializedName: "properties.schemaItemTypeLink",
        type: {
          name: "String"
        }
      },
      tenantId: {
        readOnly: true,
        serializedName: "properties.tenantId",
        type: {
          name: "String"
        }
      },
      timestampFieldName: {
        serializedName: "properties.timestampFieldName",
        type: {
          name: "String"
        }
      },
      typeName: {
        serializedName: "properties.typeName",
        type: {
          name: "String"
        }
      },
      strongIds: {
        serializedName: "properties.strongIds",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "StrongId"
            }
          }
        }
      }
    }
  }
};

export const InteractionResourceFormat: msRest.CompositeMapper = {
  serializedName: "InteractionResourceFormat",
  type: {
    name: "Composite",
    className: "InteractionResourceFormat",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      attributes: {
        serializedName: "properties.attributes",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Sequence",
              element: {
                type: {
                  name: "String"
                }
              }
            }
          }
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      localizedAttributes: {
        serializedName: "properties.localizedAttributes",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Dictionary",
              value: {
                type: {
                  name: "String"
                }
              }
            }
          }
        }
      },
      smallImage: {
        serializedName: "properties.smallImage",
        type: {
          name: "String"
        }
      },
      mediumImage: {
        serializedName: "properties.mediumImage",
        type: {
          name: "String"
        }
      },
      largeImage: {
        serializedName: "properties.largeImage",
        type: {
          name: "String"
        }
      },
      apiEntitySetName: {
        serializedName: "properties.apiEntitySetName",
        type: {
          name: "String"
        }
      },
      entityType: {
        serializedName: "properties.entityType",
        type: {
          name: "Enum",
          allowedValues: [
            "None",
            "Profile",
            "Interaction",
            "Relationship"
          ]
        }
      },
      fields: {
        serializedName: "properties.fields",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PropertyDefinition"
            }
          }
        }
      },
      instancesCount: {
        serializedName: "properties.instancesCount",
        type: {
          name: "Number"
        }
      },
      lastChangedUtc: {
        readOnly: true,
        serializedName: "properties.lastChangedUtc",
        type: {
          name: "DateTime"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      schemaItemTypeLink: {
        serializedName: "properties.schemaItemTypeLink",
        type: {
          name: "String"
        }
      },
      tenantId: {
        readOnly: true,
        serializedName: "properties.tenantId",
        type: {
          name: "String"
        }
      },
      timestampFieldName: {
        serializedName: "properties.timestampFieldName",
        type: {
          name: "String"
        }
      },
      typeName: {
        serializedName: "properties.typeName",
        type: {
          name: "String"
        }
      },
      idPropertyNames: {
        serializedName: "properties.idPropertyNames",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      participantProfiles: {
        serializedName: "properties.participantProfiles",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Participant"
            }
          }
        }
      },
      primaryParticipantProfilePropertyName: {
        serializedName: "properties.primaryParticipantProfilePropertyName",
        type: {
          name: "String"
        }
      },
      dataSourcePrecedenceRules: {
        readOnly: true,
        serializedName: "properties.dataSourcePrecedenceRules",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DataSourcePrecedence"
            }
          }
        }
      },
      interactionResourceFormatName: {
        readOnly: true,
        serializedName: "properties.defaultDataSource.name",
        type: {
          name: "String"
        }
      },
      dataSourceType: {
        readOnly: true,
        serializedName: "properties.defaultDataSource.dataSourceType",
        type: {
          name: "String"
        }
      },
      status: {
        readOnly: true,
        serializedName: "properties.defaultDataSource.status",
        type: {
          name: "String"
        }
      },
      interactionResourceFormatId: {
        readOnly: true,
        serializedName: "properties.defaultDataSource.id",
        type: {
          name: "Number"
        }
      },
      dataSourceReferenceId: {
        readOnly: true,
        serializedName: "properties.defaultDataSource.dataSourceReferenceId",
        type: {
          name: "String"
        }
      },
      isActivity: {
        serializedName: "properties.isActivity",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const KpiResourceFormat: msRest.CompositeMapper = {
  serializedName: "KpiResourceFormat",
  type: {
    name: "Composite",
    className: "KpiResourceFormat",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      entityType: {
        required: true,
        serializedName: "properties.entityType",
        type: {
          name: "Enum",
          allowedValues: [
            "None",
            "Profile",
            "Interaction",
            "Relationship"
          ]
        }
      },
      entityTypeName: {
        required: true,
        serializedName: "properties.entityTypeName",
        type: {
          name: "String"
        }
      },
      tenantId: {
        readOnly: true,
        serializedName: "properties.tenantId",
        type: {
          name: "String"
        }
      },
      kpiName: {
        readOnly: true,
        serializedName: "properties.kpiName",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      calculationWindow: {
        required: true,
        serializedName: "properties.calculationWindow",
        type: {
          name: "Enum",
          allowedValues: [
            "Lifetime",
            "Hour",
            "Day",
            "Week",
            "Month"
          ]
        }
      },
      calculationWindowFieldName: {
        serializedName: "properties.calculationWindowFieldName",
        type: {
          name: "String"
        }
      },
      functionProperty: {
        required: true,
        serializedName: "properties.function",
        type: {
          name: "Enum",
          allowedValues: [
            "Sum",
            "Avg",
            "Min",
            "Max",
            "Last",
            "Count",
            "None",
            "CountDistinct"
          ]
        }
      },
      expression: {
        required: true,
        serializedName: "properties.expression",
        type: {
          name: "String"
        }
      },
      unit: {
        serializedName: "properties.unit",
        type: {
          name: "String"
        }
      },
      filter: {
        serializedName: "properties.filter",
        type: {
          name: "String"
        }
      },
      groupBy: {
        serializedName: "properties.groupBy",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      groupByMetadata: {
        readOnly: true,
        serializedName: "properties.groupByMetadata",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "KpiGroupByMetadata"
            }
          }
        }
      },
      participantProfilesMetadata: {
        readOnly: true,
        serializedName: "properties.participantProfilesMetadata",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "KpiParticipantProfilesMetadata"
            }
          }
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      thresHolds: {
        serializedName: "properties.thresHolds",
        type: {
          name: "Composite",
          className: "KpiThresholds"
        }
      },
      aliases: {
        serializedName: "properties.aliases",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "KpiAlias"
            }
          }
        }
      },
      extracts: {
        serializedName: "properties.extracts",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "KpiExtract"
            }
          }
        }
      }
    }
  }
};

export const EnrichingKpi: msRest.CompositeMapper = {
  serializedName: "EnrichingKpi",
  type: {
    name: "Composite",
    className: "EnrichingKpi",
    modelProperties: {
      ...KpiDefinition.type.modelProperties
    }
  }
};

export const ConnectorResourceFormat: msRest.CompositeMapper = {
  serializedName: "ConnectorResourceFormat",
  type: {
    name: "Composite",
    className: "ConnectorResourceFormat",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      connectorId: {
        readOnly: true,
        serializedName: "properties.connectorId",
        type: {
          name: "Number"
        }
      },
      connectorName: {
        serializedName: "properties.connectorName",
        type: {
          name: "String"
        }
      },
      connectorType: {
        required: true,
        serializedName: "properties.connectorType",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      connectorProperties: {
        required: true,
        serializedName: "properties.connectorProperties",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Object"
            }
          }
        }
      },
      created: {
        readOnly: true,
        serializedName: "properties.created",
        type: {
          name: "DateTime"
        }
      },
      lastModified: {
        readOnly: true,
        serializedName: "properties.lastModified",
        type: {
          name: "DateTime"
        }
      },
      state: {
        readOnly: true,
        serializedName: "properties.state",
        type: {
          name: "Enum",
          allowedValues: [
            "Creating",
            "Created",
            "Ready",
            "Expiring",
            "Deleting",
            "Failed"
          ]
        }
      },
      tenantId: {
        readOnly: true,
        serializedName: "properties.tenantId",
        type: {
          name: "String"
        }
      },
      isInternal: {
        serializedName: "properties.isInternal",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const ConnectorMappingResourceFormat: msRest.CompositeMapper = {
  serializedName: "ConnectorMappingResourceFormat",
  type: {
    name: "Composite",
    className: "ConnectorMappingResourceFormat",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      connectorName: {
        readOnly: true,
        serializedName: "properties.connectorName",
        type: {
          name: "String"
        }
      },
      connectorType: {
        serializedName: "properties.connectorType",
        type: {
          name: "String"
        }
      },
      created: {
        readOnly: true,
        serializedName: "properties.created",
        type: {
          name: "DateTime"
        }
      },
      lastModified: {
        readOnly: true,
        serializedName: "properties.lastModified",
        type: {
          name: "DateTime"
        }
      },
      entityType: {
        required: true,
        serializedName: "properties.entityType",
        type: {
          name: "Enum",
          allowedValues: [
            "None",
            "Profile",
            "Interaction",
            "Relationship"
          ]
        }
      },
      entityTypeName: {
        required: true,
        serializedName: "properties.entityTypeName",
        type: {
          name: "String"
        }
      },
      connectorMappingName: {
        readOnly: true,
        serializedName: "properties.connectorMappingName",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      dataFormatId: {
        readOnly: true,
        serializedName: "properties.dataFormatId",
        type: {
          name: "String"
        }
      },
      mappingProperties: {
        required: true,
        serializedName: "properties.mappingProperties",
        defaultValue: {},
        type: {
          name: "Composite",
          className: "ConnectorMappingProperties"
        }
      },
      nextRunTime: {
        readOnly: true,
        serializedName: "properties.nextRunTime",
        type: {
          name: "DateTime"
        }
      },
      runId: {
        readOnly: true,
        serializedName: "properties.runId",
        type: {
          name: "String"
        }
      },
      state: {
        readOnly: true,
        serializedName: "properties.state",
        type: {
          name: "Enum",
          allowedValues: [
            "Creating",
            "Created",
            "Failed",
            "Ready",
            "Running",
            "Stopped",
            "Expiring"
          ]
        }
      },
      tenantId: {
        readOnly: true,
        serializedName: "properties.tenantId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AuthorizationPolicyResourceFormat: msRest.CompositeMapper = {
  serializedName: "AuthorizationPolicyResourceFormat",
  type: {
    name: "Composite",
    className: "AuthorizationPolicyResourceFormat",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      policyName: {
        readOnly: true,
        serializedName: "properties.policyName",
        type: {
          name: "String"
        }
      },
      permissions: {
        required: true,
        serializedName: "properties.permissions",
        constraints: {
          UniqueItems: true
        },
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Enum",
              allowedValues: [
                "Read",
                "Write",
                "Manage"
              ]
            }
          }
        }
      },
      primaryKey: {
        serializedName: "properties.primaryKey",
        type: {
          name: "String"
        }
      },
      secondaryKey: {
        serializedName: "properties.secondaryKey",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LinkResourceFormat: msRest.CompositeMapper = {
  serializedName: "LinkResourceFormat",
  type: {
    name: "Composite",
    className: "LinkResourceFormat",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      tenantId: {
        readOnly: true,
        serializedName: "properties.tenantId",
        type: {
          name: "String"
        }
      },
      linkName: {
        readOnly: true,
        serializedName: "properties.linkName",
        type: {
          name: "String"
        }
      },
      sourceEntityType: {
        required: true,
        serializedName: "properties.sourceEntityType",
        type: {
          name: "Enum",
          allowedValues: [
            "None",
            "Profile",
            "Interaction",
            "Relationship"
          ]
        }
      },
      targetEntityType: {
        required: true,
        serializedName: "properties.targetEntityType",
        type: {
          name: "Enum",
          allowedValues: [
            "None",
            "Profile",
            "Interaction",
            "Relationship"
          ]
        }
      },
      sourceEntityTypeName: {
        required: true,
        serializedName: "properties.sourceEntityTypeName",
        type: {
          name: "String"
        }
      },
      targetEntityTypeName: {
        required: true,
        serializedName: "properties.targetEntityTypeName",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      mappings: {
        serializedName: "properties.mappings",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TypePropertiesMapping"
            }
          }
        }
      },
      participantPropertyReferences: {
        required: true,
        serializedName: "properties.participantPropertyReferences",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ParticipantPropertyReference"
            }
          }
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      referenceOnly: {
        serializedName: "properties.referenceOnly",
        type: {
          name: "Boolean"
        }
      },
      operationType: {
        serializedName: "properties.operationType",
        type: {
          name: "Enum",
          allowedValues: [
            "Upsert",
            "Delete"
          ]
        }
      }
    }
  }
};

export const RelationshipResourceFormat: msRest.CompositeMapper = {
  serializedName: "RelationshipResourceFormat",
  type: {
    name: "Composite",
    className: "RelationshipResourceFormat",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      cardinality: {
        serializedName: "properties.cardinality",
        type: {
          name: "Enum",
          allowedValues: [
            "OneToOne",
            "OneToMany",
            "ManyToMany"
          ]
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      expiryDateTimeUtc: {
        serializedName: "properties.expiryDateTimeUtc",
        type: {
          name: "DateTime"
        }
      },
      fields: {
        serializedName: "properties.fields",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PropertyDefinition"
            }
          }
        }
      },
      lookupMappings: {
        serializedName: "properties.lookupMappings",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "RelationshipTypeMapping"
            }
          }
        }
      },
      profileType: {
        required: true,
        serializedName: "properties.profileType",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      relationshipName: {
        readOnly: true,
        serializedName: "properties.relationshipName",
        type: {
          name: "String"
        }
      },
      relatedProfileType: {
        required: true,
        serializedName: "properties.relatedProfileType",
        type: {
          name: "String"
        }
      },
      relationshipGuidId: {
        readOnly: true,
        serializedName: "properties.relationshipGuidId",
        type: {
          name: "String"
        }
      },
      tenantId: {
        readOnly: true,
        serializedName: "properties.tenantId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RelationshipLinkResourceFormat: msRest.CompositeMapper = {
  serializedName: "RelationshipLinkResourceFormat",
  type: {
    name: "Composite",
    className: "RelationshipLinkResourceFormat",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      interactionType: {
        required: true,
        serializedName: "properties.interactionType",
        type: {
          name: "String"
        }
      },
      linkName: {
        readOnly: true,
        serializedName: "properties.linkName",
        type: {
          name: "String"
        }
      },
      mappings: {
        serializedName: "properties.mappings",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "RelationshipLinkFieldMapping"
            }
          }
        }
      },
      profilePropertyReferences: {
        required: true,
        serializedName: "properties.profilePropertyReferences",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ParticipantProfilePropertyReference"
            }
          }
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      relatedProfilePropertyReferences: {
        required: true,
        serializedName: "properties.relatedProfilePropertyReferences",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ParticipantProfilePropertyReference"
            }
          }
        }
      },
      relationshipName: {
        required: true,
        serializedName: "properties.relationshipName",
        type: {
          name: "String"
        }
      },
      relationshipGuidId: {
        readOnly: true,
        serializedName: "properties.relationshipGuidId",
        type: {
          name: "String"
        }
      },
      tenantId: {
        readOnly: true,
        serializedName: "properties.tenantId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ViewResourceFormat: msRest.CompositeMapper = {
  serializedName: "ViewResourceFormat",
  type: {
    name: "Composite",
    className: "ViewResourceFormat",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      viewName: {
        readOnly: true,
        serializedName: "properties.viewName",
        type: {
          name: "String"
        }
      },
      userId: {
        serializedName: "properties.userId",
        type: {
          name: "String"
        }
      },
      tenantId: {
        readOnly: true,
        serializedName: "properties.tenantId",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      definition: {
        required: true,
        serializedName: "properties.definition",
        type: {
          name: "String"
        }
      },
      changed: {
        readOnly: true,
        serializedName: "properties.changed",
        type: {
          name: "DateTime"
        }
      },
      created: {
        readOnly: true,
        serializedName: "properties.created",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const WidgetTypeResourceFormat: msRest.CompositeMapper = {
  serializedName: "WidgetTypeResourceFormat",
  type: {
    name: "Composite",
    className: "WidgetTypeResourceFormat",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      widgetTypeName: {
        readOnly: true,
        serializedName: "properties.widgetTypeName",
        type: {
          name: "String"
        }
      },
      definition: {
        required: true,
        serializedName: "properties.definition",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      imageUrl: {
        serializedName: "properties.imageUrl",
        type: {
          name: "String"
        }
      },
      tenantId: {
        readOnly: true,
        serializedName: "properties.tenantId",
        type: {
          name: "String"
        }
      },
      widgetVersion: {
        serializedName: "properties.widgetVersion",
        type: {
          name: "String"
        }
      },
      changed: {
        readOnly: true,
        serializedName: "properties.changed",
        type: {
          name: "DateTime"
        }
      },
      created: {
        readOnly: true,
        serializedName: "properties.created",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const AssignmentPrincipal: msRest.CompositeMapper = {
  serializedName: "AssignmentPrincipal",
  type: {
    name: "Composite",
    className: "AssignmentPrincipal",
    modelProperties: {
      principalId: {
        required: true,
        serializedName: "principalId",
        type: {
          name: "String"
        }
      },
      principalType: {
        required: true,
        serializedName: "principalType",
        type: {
          name: "String"
        }
      },
      principalMetadata: {
        serializedName: "principalMetadata",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ResourceSetDescription: msRest.CompositeMapper = {
  serializedName: "ResourceSetDescription",
  type: {
    name: "Composite",
    className: "ResourceSetDescription",
    modelProperties: {
      elements: {
        serializedName: "elements",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      exceptions: {
        serializedName: "exceptions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const RoleAssignmentResourceFormat: msRest.CompositeMapper = {
  serializedName: "RoleAssignmentResourceFormat",
  type: {
    name: "Composite",
    className: "RoleAssignmentResourceFormat",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      tenantId: {
        readOnly: true,
        serializedName: "properties.tenantId",
        type: {
          name: "String"
        }
      },
      assignmentName: {
        readOnly: true,
        serializedName: "properties.assignmentName",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      role: {
        required: true,
        serializedName: "properties.role",
        type: {
          name: "Enum",
          allowedValues: [
            "Admin",
            "Reader",
            "ManageAdmin",
            "ManageReader",
            "DataAdmin",
            "DataReader"
          ]
        }
      },
      principals: {
        required: true,
        serializedName: "properties.principals",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AssignmentPrincipal"
            }
          }
        }
      },
      profiles: {
        serializedName: "properties.profiles",
        type: {
          name: "Composite",
          className: "ResourceSetDescription"
        }
      },
      interactions: {
        serializedName: "properties.interactions",
        type: {
          name: "Composite",
          className: "ResourceSetDescription"
        }
      },
      links: {
        serializedName: "properties.links",
        type: {
          name: "Composite",
          className: "ResourceSetDescription"
        }
      },
      kpis: {
        serializedName: "properties.kpis",
        type: {
          name: "Composite",
          className: "ResourceSetDescription"
        }
      },
      sasPolicies: {
        serializedName: "properties.sasPolicies",
        type: {
          name: "Composite",
          className: "ResourceSetDescription"
        }
      },
      connectors: {
        serializedName: "properties.connectors",
        type: {
          name: "Composite",
          className: "ResourceSetDescription"
        }
      },
      views: {
        serializedName: "properties.views",
        type: {
          name: "Composite",
          className: "ResourceSetDescription"
        }
      },
      relationshipLinks: {
        serializedName: "properties.relationshipLinks",
        type: {
          name: "Composite",
          className: "ResourceSetDescription"
        }
      },
      relationships: {
        serializedName: "properties.relationships",
        type: {
          name: "Composite",
          className: "ResourceSetDescription"
        }
      },
      widgetTypes: {
        serializedName: "properties.widgetTypes",
        type: {
          name: "Composite",
          className: "ResourceSetDescription"
        }
      },
      roleAssignments: {
        serializedName: "properties.roleAssignments",
        type: {
          name: "Composite",
          className: "ResourceSetDescription"
        }
      },
      conflationPolicies: {
        serializedName: "properties.conflationPolicies",
        type: {
          name: "Composite",
          className: "ResourceSetDescription"
        }
      },
      segments: {
        serializedName: "properties.segments",
        type: {
          name: "Composite",
          className: "ResourceSetDescription"
        }
      }
    }
  }
};

export const RoleResourceFormat: msRest.CompositeMapper = {
  serializedName: "RoleResourceFormat",
  type: {
    name: "Composite",
    className: "RoleResourceFormat",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      roleName: {
        serializedName: "properties.roleName",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GetImageUploadUrlInput: msRest.CompositeMapper = {
  serializedName: "GetImageUploadUrlInput",
  type: {
    name: "Composite",
    className: "GetImageUploadUrlInput",
    modelProperties: {
      entityType: {
        serializedName: "entityType",
        type: {
          name: "String"
        }
      },
      entityTypeName: {
        serializedName: "entityTypeName",
        type: {
          name: "String"
        }
      },
      relativePath: {
        serializedName: "relativePath",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ImageDefinition: msRest.CompositeMapper = {
  serializedName: "ImageDefinition",
  type: {
    name: "Composite",
    className: "ImageDefinition",
    modelProperties: {
      imageExists: {
        serializedName: "imageExists",
        type: {
          name: "Boolean"
        }
      },
      contentUrl: {
        serializedName: "contentUrl",
        type: {
          name: "String"
        }
      },
      relativePath: {
        serializedName: "relativePath",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RelationshipsLookup: msRest.CompositeMapper = {
  serializedName: "RelationshipsLookup",
  type: {
    name: "Composite",
    className: "RelationshipsLookup",
    modelProperties: {
      profileName: {
        readOnly: true,
        serializedName: "profileName",
        type: {
          name: "String"
        }
      },
      profilePropertyReferences: {
        readOnly: true,
        serializedName: "profilePropertyReferences",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ParticipantProfilePropertyReference"
            }
          }
        }
      },
      relatedProfileName: {
        readOnly: true,
        serializedName: "relatedProfileName",
        type: {
          name: "String"
        }
      },
      relatedProfilePropertyReferences: {
        readOnly: true,
        serializedName: "relatedProfilePropertyReferences",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ParticipantProfilePropertyReference"
            }
          }
        }
      },
      existingRelationshipName: {
        readOnly: true,
        serializedName: "existingRelationshipName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SuggestRelationshipLinksResponse: msRest.CompositeMapper = {
  serializedName: "SuggestRelationshipLinksResponse",
  type: {
    name: "Composite",
    className: "SuggestRelationshipLinksResponse",
    modelProperties: {
      interactionName: {
        readOnly: true,
        serializedName: "interactionName",
        type: {
          name: "String"
        }
      },
      suggestedRelationships: {
        readOnly: true,
        serializedName: "suggestedRelationships",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "RelationshipsLookup"
            }
          }
        }
      }
    }
  }
};

export const PredictionMappings: msRest.CompositeMapper = {
  serializedName: "Prediction_mappings",
  type: {
    name: "Composite",
    className: "PredictionMappings",
    modelProperties: {
      score: {
        required: true,
        serializedName: "score",
        type: {
          name: "String"
        }
      },
      grade: {
        required: true,
        serializedName: "grade",
        type: {
          name: "String"
        }
      },
      reason: {
        required: true,
        serializedName: "reason",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PredictionGradesItem: msRest.CompositeMapper = {
  serializedName: "Prediction_gradesItem",
  type: {
    name: "Composite",
    className: "PredictionGradesItem",
    modelProperties: {
      gradeName: {
        serializedName: "gradeName",
        type: {
          name: "String"
        }
      },
      minScoreThreshold: {
        serializedName: "minScoreThreshold",
        type: {
          name: "Number"
        }
      },
      maxScoreThreshold: {
        serializedName: "maxScoreThreshold",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const PredictionSystemGeneratedEntities: msRest.CompositeMapper = {
  serializedName: "Prediction_systemGeneratedEntities",
  type: {
    name: "Composite",
    className: "PredictionSystemGeneratedEntities",
    modelProperties: {
      generatedInteractionTypes: {
        serializedName: "generatedInteractionTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      generatedLinks: {
        serializedName: "generatedLinks",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      generatedKpis: {
        serializedName: "generatedKpis",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const PredictionDistributionDefinitionDistributionsItem: msRest.CompositeMapper = {
  serializedName: "PredictionDistributionDefinition_distributionsItem",
  type: {
    name: "Composite",
    className: "PredictionDistributionDefinitionDistributionsItem",
    modelProperties: {
      scoreThreshold: {
        serializedName: "scoreThreshold",
        type: {
          name: "Number"
        }
      },
      positives: {
        serializedName: "positives",
        type: {
          name: "Number"
        }
      },
      negatives: {
        serializedName: "negatives",
        type: {
          name: "Number"
        }
      },
      positivesAboveThreshold: {
        serializedName: "positivesAboveThreshold",
        type: {
          name: "Number"
        }
      },
      negativesAboveThreshold: {
        serializedName: "negativesAboveThreshold",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const PredictionDistributionDefinition: msRest.CompositeMapper = {
  serializedName: "PredictionDistributionDefinition",
  type: {
    name: "Composite",
    className: "PredictionDistributionDefinition",
    modelProperties: {
      totalPositives: {
        serializedName: "totalPositives",
        type: {
          name: "Number"
        }
      },
      totalNegatives: {
        serializedName: "totalNegatives",
        type: {
          name: "Number"
        }
      },
      distributions: {
        serializedName: "distributions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PredictionDistributionDefinitionDistributionsItem"
            }
          }
        }
      }
    }
  }
};

export const CanonicalProfileDefinitionPropertiesItem: msRest.CompositeMapper = {
  serializedName: "CanonicalProfileDefinition_propertiesItem",
  type: {
    name: "Composite",
    className: "CanonicalProfileDefinitionPropertiesItem",
    modelProperties: {
      profileName: {
        serializedName: "profileName",
        type: {
          name: "String"
        }
      },
      profilePropertyName: {
        serializedName: "profilePropertyName",
        type: {
          name: "String"
        }
      },
      rank: {
        serializedName: "rank",
        type: {
          name: "Number"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CanonicalProfileDefinition: msRest.CompositeMapper = {
  serializedName: "CanonicalProfileDefinition",
  type: {
    name: "Composite",
    className: "CanonicalProfileDefinition",
    modelProperties: {
      canonicalProfileId: {
        serializedName: "canonicalProfileId",
        type: {
          name: "Number"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CanonicalProfileDefinitionPropertiesItem"
            }
          }
        }
      }
    }
  }
};

export const PredictionTrainingResults: msRest.CompositeMapper = {
  serializedName: "PredictionTrainingResults",
  type: {
    name: "Composite",
    className: "PredictionTrainingResults",
    modelProperties: {
      tenantId: {
        readOnly: true,
        serializedName: "tenantId",
        type: {
          name: "String"
        }
      },
      scoreName: {
        readOnly: true,
        serializedName: "scoreName",
        type: {
          name: "String"
        }
      },
      predictionDistribution: {
        readOnly: true,
        serializedName: "predictionDistribution",
        type: {
          name: "Composite",
          className: "PredictionDistributionDefinition"
        }
      },
      canonicalProfiles: {
        readOnly: true,
        serializedName: "canonicalProfiles",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CanonicalProfileDefinition"
            }
          }
        }
      },
      primaryProfileInstanceCount: {
        readOnly: true,
        serializedName: "primaryProfileInstanceCount",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const PredictionModelStatus: msRest.CompositeMapper = {
  serializedName: "PredictionModelStatus",
  type: {
    name: "Composite",
    className: "PredictionModelStatus",
    modelProperties: {
      tenantId: {
        readOnly: true,
        serializedName: "tenantId",
        type: {
          name: "String"
        }
      },
      predictionName: {
        readOnly: true,
        serializedName: "predictionName",
        type: {
          name: "String"
        }
      },
      predictionGuidId: {
        readOnly: true,
        serializedName: "predictionGuidId",
        type: {
          name: "String"
        }
      },
      status: {
        required: true,
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      message: {
        readOnly: true,
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      trainingSetCount: {
        readOnly: true,
        serializedName: "trainingSetCount",
        type: {
          name: "Number"
        }
      },
      testSetCount: {
        readOnly: true,
        serializedName: "testSetCount",
        type: {
          name: "Number"
        }
      },
      validationSetCount: {
        readOnly: true,
        serializedName: "validationSetCount",
        type: {
          name: "Number"
        }
      },
      trainingAccuracy: {
        readOnly: true,
        serializedName: "trainingAccuracy",
        type: {
          name: "Number"
        }
      },
      signalsUsed: {
        readOnly: true,
        serializedName: "signalsUsed",
        type: {
          name: "Number"
        }
      },
      modelVersion: {
        readOnly: true,
        serializedName: "modelVersion",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PredictionResourceFormat: msRest.CompositeMapper = {
  serializedName: "PredictionResourceFormat",
  type: {
    name: "Composite",
    className: "PredictionResourceFormat",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      description: {
        serializedName: "properties.description",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      involvedInteractionTypes: {
        serializedName: "properties.involvedInteractionTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      involvedKpiTypes: {
        serializedName: "properties.involvedKpiTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      involvedRelationships: {
        serializedName: "properties.involvedRelationships",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      negativeOutcomeExpression: {
        required: true,
        serializedName: "properties.negativeOutcomeExpression",
        type: {
          name: "String"
        }
      },
      positiveOutcomeExpression: {
        required: true,
        serializedName: "properties.positiveOutcomeExpression",
        type: {
          name: "String"
        }
      },
      primaryProfileType: {
        required: true,
        serializedName: "properties.primaryProfileType",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      predictionName: {
        serializedName: "properties.predictionName",
        type: {
          name: "String"
        }
      },
      scopeExpression: {
        required: true,
        serializedName: "properties.scopeExpression",
        type: {
          name: "String"
        }
      },
      tenantId: {
        readOnly: true,
        serializedName: "properties.tenantId",
        type: {
          name: "String"
        }
      },
      autoAnalyze: {
        required: true,
        serializedName: "properties.autoAnalyze",
        type: {
          name: "Boolean"
        }
      },
      mappings: {
        required: true,
        serializedName: "properties.mappings",
        type: {
          name: "Composite",
          className: "PredictionMappings"
        }
      },
      scoreLabel: {
        required: true,
        serializedName: "properties.scoreLabel",
        type: {
          name: "String"
        }
      },
      grades: {
        serializedName: "properties.grades",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PredictionGradesItem"
            }
          }
        }
      },
      systemGeneratedEntities: {
        readOnly: true,
        serializedName: "properties.systemGeneratedEntities",
        type: {
          name: "Composite",
          className: "PredictionSystemGeneratedEntities"
        }
      }
    }
  }
};

export const OperationDisplay: msRest.CompositeMapper = {
  serializedName: "Operation_display",
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        readOnly: true,
        serializedName: "provider",
        type: {
          name: "String"
        }
      },
      resource: {
        readOnly: true,
        serializedName: "resource",
        type: {
          name: "String"
        }
      },
      operation: {
        readOnly: true,
        serializedName: "operation",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Operation: msRest.CompositeMapper = {
  serializedName: "Operation",
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay"
        }
      }
    }
  }
};

export const OperationListResult: msRest.CompositeMapper = {
  serializedName: "OperationListResult",
  type: {
    name: "Composite",
    className: "OperationListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const HubListResult: msRest.CompositeMapper = {
  serializedName: "HubListResult",
  type: {
    name: "Composite",
    className: "HubListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Hub"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProfileListResult: msRest.CompositeMapper = {
  serializedName: "ProfileListResult",
  type: {
    name: "Composite",
    className: "ProfileListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ProfileResourceFormat"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const InteractionListResult: msRest.CompositeMapper = {
  serializedName: "InteractionListResult",
  type: {
    name: "Composite",
    className: "InteractionListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "InteractionResourceFormat"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RelationshipListResult: msRest.CompositeMapper = {
  serializedName: "RelationshipListResult",
  type: {
    name: "Composite",
    className: "RelationshipListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "RelationshipResourceFormat"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RelationshipLinkListResult: msRest.CompositeMapper = {
  serializedName: "RelationshipLinkListResult",
  type: {
    name: "Composite",
    className: "RelationshipLinkListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "RelationshipLinkResourceFormat"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AuthorizationPolicyListResult: msRest.CompositeMapper = {
  serializedName: "AuthorizationPolicyListResult",
  type: {
    name: "Composite",
    className: "AuthorizationPolicyListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AuthorizationPolicyResourceFormat"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ConnectorListResult: msRest.CompositeMapper = {
  serializedName: "ConnectorListResult",
  type: {
    name: "Composite",
    className: "ConnectorListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ConnectorResourceFormat"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ConnectorMappingListResult: msRest.CompositeMapper = {
  serializedName: "ConnectorMappingListResult",
  type: {
    name: "Composite",
    className: "ConnectorMappingListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ConnectorMappingResourceFormat"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const KpiListResult: msRest.CompositeMapper = {
  serializedName: "KpiListResult",
  type: {
    name: "Composite",
    className: "KpiListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "KpiResourceFormat"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WidgetTypeListResult: msRest.CompositeMapper = {
  serializedName: "WidgetTypeListResult",
  type: {
    name: "Composite",
    className: "WidgetTypeListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "WidgetTypeResourceFormat"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ViewListResult: msRest.CompositeMapper = {
  serializedName: "ViewListResult",
  type: {
    name: "Composite",
    className: "ViewListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ViewResourceFormat"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LinkListResult: msRest.CompositeMapper = {
  serializedName: "LinkListResult",
  type: {
    name: "Composite",
    className: "LinkListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "LinkResourceFormat"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RoleListResult: msRest.CompositeMapper = {
  serializedName: "RoleListResult",
  type: {
    name: "Composite",
    className: "RoleListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "RoleResourceFormat"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RoleAssignmentListResult: msRest.CompositeMapper = {
  serializedName: "RoleAssignmentListResult",
  type: {
    name: "Composite",
    className: "RoleAssignmentListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "RoleAssignmentResourceFormat"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PredictionListResult: msRest.CompositeMapper = {
  serializedName: "PredictionListResult",
  type: {
    name: "Composite",
    className: "PredictionListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PredictionResourceFormat"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};
