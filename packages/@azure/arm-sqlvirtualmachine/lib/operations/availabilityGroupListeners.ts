/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as msRestAzure from "@azure/ms-rest-azure-js";
import * as Models from "../models";
import * as Mappers from "../models/availabilityGroupListenersMappers";
import * as Parameters from "../models/parameters";
import { SqlVirtualMachineManagementClientContext } from "../sqlVirtualMachineManagementClientContext";

/** Class representing a AvailabilityGroupListeners. */
export class AvailabilityGroupListeners {
  private readonly client: SqlVirtualMachineManagementClientContext;

  /**
   * Create a AvailabilityGroupListeners.
   * @param {SqlVirtualMachineManagementClientContext} client Reference to the service client.
   */
  constructor(client: SqlVirtualMachineManagementClientContext) {
    this.client = client;
  }

  /**
   * Gets an availability group listener.
   * @param resourceGroupName Name of the resource group that contains the resource. You can obtain
   * this value from the Azure Resource Manager API or the portal.
   * @param sqlVirtualMachineGroupName Name of the SQL virtual machine group.
   * @param availabilityGroupListenerName Name of the availability group listener.
   * @param [options] The optional parameters
   * @returns Promise<Models.AvailabilityGroupListenersGetResponse>
   */
  get(resourceGroupName: string, sqlVirtualMachineGroupName: string, availabilityGroupListenerName: string, options?: msRest.RequestOptionsBase): Promise<Models.AvailabilityGroupListenersGetResponse>;
  /**
   * @param resourceGroupName Name of the resource group that contains the resource. You can obtain
   * this value from the Azure Resource Manager API or the portal.
   * @param sqlVirtualMachineGroupName Name of the SQL virtual machine group.
   * @param availabilityGroupListenerName Name of the availability group listener.
   * @param callback The callback
   */
  get(resourceGroupName: string, sqlVirtualMachineGroupName: string, availabilityGroupListenerName: string, callback: msRest.ServiceCallback<Models.AvailabilityGroupListener>): void;
  /**
   * @param resourceGroupName Name of the resource group that contains the resource. You can obtain
   * this value from the Azure Resource Manager API or the portal.
   * @param sqlVirtualMachineGroupName Name of the SQL virtual machine group.
   * @param availabilityGroupListenerName Name of the availability group listener.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(resourceGroupName: string, sqlVirtualMachineGroupName: string, availabilityGroupListenerName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.AvailabilityGroupListener>): void;
  get(resourceGroupName: string, sqlVirtualMachineGroupName: string, availabilityGroupListenerName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.AvailabilityGroupListener>, callback?: msRest.ServiceCallback<Models.AvailabilityGroupListener>): Promise<Models.AvailabilityGroupListenersGetResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        sqlVirtualMachineGroupName,
        availabilityGroupListenerName,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.AvailabilityGroupListenersGetResponse>;
  }

  /**
   * Creates or updates an availability group listener.
   * @param resourceGroupName Name of the resource group that contains the resource. You can obtain
   * this value from the Azure Resource Manager API or the portal.
   * @param sqlVirtualMachineGroupName Name of the SQL virtual machine group.
   * @param availabilityGroupListenerName Name of the availability group listener.
   * @param parameters The availability group listener.
   * @param [options] The optional parameters
   * @returns Promise<Models.AvailabilityGroupListenersCreateOrUpdateResponse>
   */
  createOrUpdate(resourceGroupName: string, sqlVirtualMachineGroupName: string, availabilityGroupListenerName: string, parameters: Models.AvailabilityGroupListener, options?: msRest.RequestOptionsBase): Promise<Models.AvailabilityGroupListenersCreateOrUpdateResponse> {
    return this.beginCreateOrUpdate(resourceGroupName,sqlVirtualMachineGroupName,availabilityGroupListenerName,parameters,options)
      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.AvailabilityGroupListenersCreateOrUpdateResponse>;
  }

  /**
   * Deletes an availability group listener.
   * @param resourceGroupName Name of the resource group that contains the resource. You can obtain
   * this value from the Azure Resource Manager API or the portal.
   * @param sqlVirtualMachineGroupName Name of the SQL virtual machine group.
   * @param availabilityGroupListenerName Name of the availability group listener.
   * @param [options] The optional parameters
   * @returns Promise<msRest.RestResponse>
   */
  deleteMethod(resourceGroupName: string, sqlVirtualMachineGroupName: string, availabilityGroupListenerName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse> {
    return this.beginDeleteMethod(resourceGroupName,sqlVirtualMachineGroupName,availabilityGroupListenerName,options)
      .then(lroPoller => lroPoller.pollUntilFinished());
  }

  /**
   * Lists all availability group listeners in a SQL virtual machine group.
   * @param resourceGroupName Name of the resource group that contains the resource. You can obtain
   * this value from the Azure Resource Manager API or the portal.
   * @param sqlVirtualMachineGroupName Name of the SQL virtual machine group.
   * @param [options] The optional parameters
   * @returns Promise<Models.AvailabilityGroupListenersListByGroupResponse>
   */
  listByGroup(resourceGroupName: string, sqlVirtualMachineGroupName: string, options?: msRest.RequestOptionsBase): Promise<Models.AvailabilityGroupListenersListByGroupResponse>;
  /**
   * @param resourceGroupName Name of the resource group that contains the resource. You can obtain
   * this value from the Azure Resource Manager API or the portal.
   * @param sqlVirtualMachineGroupName Name of the SQL virtual machine group.
   * @param callback The callback
   */
  listByGroup(resourceGroupName: string, sqlVirtualMachineGroupName: string, callback: msRest.ServiceCallback<Models.AvailabilityGroupListenerListResult>): void;
  /**
   * @param resourceGroupName Name of the resource group that contains the resource. You can obtain
   * this value from the Azure Resource Manager API or the portal.
   * @param sqlVirtualMachineGroupName Name of the SQL virtual machine group.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByGroup(resourceGroupName: string, sqlVirtualMachineGroupName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.AvailabilityGroupListenerListResult>): void;
  listByGroup(resourceGroupName: string, sqlVirtualMachineGroupName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.AvailabilityGroupListenerListResult>, callback?: msRest.ServiceCallback<Models.AvailabilityGroupListenerListResult>): Promise<Models.AvailabilityGroupListenersListByGroupResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        sqlVirtualMachineGroupName,
        options
      },
      listByGroupOperationSpec,
      callback) as Promise<Models.AvailabilityGroupListenersListByGroupResponse>;
  }

  /**
   * Creates or updates an availability group listener.
   * @param resourceGroupName Name of the resource group that contains the resource. You can obtain
   * this value from the Azure Resource Manager API or the portal.
   * @param sqlVirtualMachineGroupName Name of the SQL virtual machine group.
   * @param availabilityGroupListenerName Name of the availability group listener.
   * @param parameters The availability group listener.
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginCreateOrUpdate(resourceGroupName: string, sqlVirtualMachineGroupName: string, availabilityGroupListenerName: string, parameters: Models.AvailabilityGroupListener, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        resourceGroupName,
        sqlVirtualMachineGroupName,
        availabilityGroupListenerName,
        parameters,
        options
      },
      beginCreateOrUpdateOperationSpec,
      options);
  }

  /**
   * Deletes an availability group listener.
   * @param resourceGroupName Name of the resource group that contains the resource. You can obtain
   * this value from the Azure Resource Manager API or the portal.
   * @param sqlVirtualMachineGroupName Name of the SQL virtual machine group.
   * @param availabilityGroupListenerName Name of the availability group listener.
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginDeleteMethod(resourceGroupName: string, sqlVirtualMachineGroupName: string, availabilityGroupListenerName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        resourceGroupName,
        sqlVirtualMachineGroupName,
        availabilityGroupListenerName,
        options
      },
      beginDeleteMethodOperationSpec,
      options);
  }

  /**
   * Lists all availability group listeners in a SQL virtual machine group.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.AvailabilityGroupListenersListByGroupNextResponse>
   */
  listByGroupNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.AvailabilityGroupListenersListByGroupNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listByGroupNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.AvailabilityGroupListenerListResult>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByGroupNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.AvailabilityGroupListenerListResult>): void;
  listByGroupNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.AvailabilityGroupListenerListResult>, callback?: msRest.ServiceCallback<Models.AvailabilityGroupListenerListResult>): Promise<Models.AvailabilityGroupListenersListByGroupNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listByGroupNextOperationSpec,
      callback) as Promise<Models.AvailabilityGroupListenersListByGroupNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SqlVirtualMachine/sqlVirtualMachineGroups/{sqlVirtualMachineGroupName}/availabilityGroupListeners/{availabilityGroupListenerName}",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.sqlVirtualMachineGroupName,
    Parameters.availabilityGroupListenerName,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.AvailabilityGroupListener
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listByGroupOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SqlVirtualMachine/sqlVirtualMachineGroups/{sqlVirtualMachineGroupName}/availabilityGroupListeners",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.sqlVirtualMachineGroupName,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.AvailabilityGroupListenerListResult
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const beginCreateOrUpdateOperationSpec: msRest.OperationSpec = {
  httpMethod: "PUT",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SqlVirtualMachine/sqlVirtualMachineGroups/{sqlVirtualMachineGroupName}/availabilityGroupListeners/{availabilityGroupListenerName}",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.sqlVirtualMachineGroupName,
    Parameters.availabilityGroupListenerName,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "parameters",
    mapper: {
      ...Mappers.AvailabilityGroupListener,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.AvailabilityGroupListener
    },
    201: {
      bodyMapper: Mappers.AvailabilityGroupListener
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const beginDeleteMethodOperationSpec: msRest.OperationSpec = {
  httpMethod: "DELETE",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SqlVirtualMachine/sqlVirtualMachineGroups/{sqlVirtualMachineGroupName}/availabilityGroupListeners/{availabilityGroupListenerName}",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.sqlVirtualMachineGroupName,
    Parameters.availabilityGroupListenerName,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {},
    202: {},
    204: {},
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listByGroupNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.AvailabilityGroupListenerListResult
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};
