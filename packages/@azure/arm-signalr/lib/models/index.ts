/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "ms-rest-azure-js";
import * as msRest from "ms-rest-js";

export { BaseResource, CloudError };


/**
 * @interface
 * An interface representing OperationDisplay.
 * The object that describes a operation.
 *
 */
export interface OperationDisplay {
  /**
   * @member {string} [provider] Friendly name of the resource provider
   */
  provider?: string;
  /**
   * @member {string} [resource] Resource type on which the operation is
   * performed.
   */
  resource?: string;
  /**
   * @member {string} [operation] The localized friendly name for the
   * operation.
   */
  operation?: string;
  /**
   * @member {string} [description] The localized friendly description for the
   * operation
   */
  description?: string;
}

/**
 * @interface
 * An interface representing Dimension.
 * Specifications of the Dimension of metrics.
 *
 */
export interface Dimension {
  /**
   * @member {string} [name] The public facing name of the dimension.
   */
  name?: string;
  /**
   * @member {string} [displayName] Localized friendly display name of the
   * dimension.
   */
  displayName?: string;
  /**
   * @member {string} [internalName] Name of the dimension as it appears in
   * MDM.
   */
  internalName?: string;
  /**
   * @member {boolean} [toBeExportedForShoebox] A Boolean flag indicating
   * whether this dimension should be included for the shoebox export scenario.
   */
  toBeExportedForShoebox?: boolean;
}

/**
 * @interface
 * An interface representing MetricSpecification.
 * Specifications of the Metrics for Azure Monitoring.
 *
 */
export interface MetricSpecification {
  /**
   * @member {string} [name] Name of the metric.
   */
  name?: string;
  /**
   * @member {string} [displayName] Localized friendly display name of the
   * metric.
   */
  displayName?: string;
  /**
   * @member {string} [displayDescription] Localized friendly description of
   * the metric.
   */
  displayDescription?: string;
  /**
   * @member {string} [unit] The unit that makes sense for the metric.
   */
  unit?: string;
  /**
   * @member {string} [aggregationType] Only provide one value for this field.
   * Valid values: Average, Minimum, Maximum, Total, Count.
   */
  aggregationType?: string;
  /**
   * @member {string} [fillGapWithZero] Optional. If set to true, then zero
   * will be returned for time duration where no metric is emitted/published.
   * Ex. a metric that returns the number of times a particular error code was
   * emitted. The error code may not appear
   * often, instead of the RP publishing 0, Shoebox can auto fill in 0s for
   * time periods where nothing was emitted.
   */
  fillGapWithZero?: string;
  /**
   * @member {string} [category] The name of the metric category that the
   * metric belongs to. A metric can only belong to a single category.
   */
  category?: string;
  /**
   * @member {Dimension[]} [dimensions] The dimensions of the metrics.
   */
  dimensions?: Dimension[];
}

/**
 * @interface
 * An interface representing ServiceSpecification.
 * An object that describes a specification.
 *
 */
export interface ServiceSpecification {
  /**
   * @member {MetricSpecification[]} [metricSpecifications] Specifications of
   * the Metrics for Azure Monitoring.
   */
  metricSpecifications?: MetricSpecification[];
}

/**
 * @interface
 * An interface representing OperationProperties.
 * Extra Operation properties.
 *
 */
export interface OperationProperties {
  /**
   * @member {ServiceSpecification} [serviceSpecification] The service
   * specifications.
   */
  serviceSpecification?: ServiceSpecification;
}

/**
 * @interface
 * An interface representing Operation.
 * REST API operation supported by SignalR resource provider.
 *
 */
export interface Operation {
  /**
   * @member {string} [name] Name of the operation with format:
   * {provider}/{resource}/{operation}
   */
  name?: string;
  /**
   * @member {OperationDisplay} [display] The object that describes the
   * operation.
   */
  display?: OperationDisplay;
  /**
   * @member {string} [origin] Optional. The intended executor of the
   * operation; governs the display of the operation in the RBAC UX and the
   * audit logs UX.
   */
  origin?: string;
  /**
   * @member {OperationProperties} [properties] Extra properties for the
   * operation.
   */
  properties?: OperationProperties;
}

/**
 * @interface
 * An interface representing NameAvailabilityParameters.
 * Data POST-ed to the nameAvailability action
 *
 */
export interface NameAvailabilityParameters {
  /**
   * @member {string} type The resource type. Should be always
   * "Microsoft.SignalRService/SignalR".
   */
  type: string;
  /**
   * @member {string} name The SignalR service name to validate.
   * e.g."my-signalR-name-here"
   */
  name: string;
}

/**
 * @interface
 * An interface representing NameAvailability.
 * Result of the request to check name availability. It contains a flag and
 * possible reason of failure.
 *
 */
export interface NameAvailability {
  /**
   * @member {boolean} [nameAvailable] Indicates whether the name is available
   * or not.
   */
  nameAvailable?: boolean;
  /**
   * @member {string} [reason] The reason of the availability. Required if name
   * is not available.
   */
  reason?: string;
  /**
   * @member {string} [message] The message of the operation.
   */
  message?: string;
}

/**
 * @interface
 * An interface representing ResourceSku.
 * The billing information of the resource.(e.g. basic vs. standard)
 *
 */
export interface ResourceSku {
  /**
   * @member {string} name The name of the SKU. This is typically a letter +
   * number code, such as A0 or P3.  Required (if sku is specified)
   */
  name: string;
  /**
   * @member {SignalRSkuTier} [tier] Optional tier of this particular SKU.
   * `Basic` is deprecated, use `Standard` instead for Basic tier. Possible
   * values include: 'Free', 'Basic', 'Standard', 'Premium'
   */
  tier?: SignalRSkuTier;
  /**
   * @member {string} [size] Optional, string. When the name field is the
   * combination of tier and some other value, this would be the standalone
   * code.
   */
  size?: string;
  /**
   * @member {string} [family] Optional, string. If the service has different
   * generations of hardware, for the same SKU, then that can be captured here.
   */
  family?: string;
  /**
   * @member {number} [capacity] Optional, integer. If the SKU supports scale
   * out/in then the capacity integer should be included. If scale out/in is
   * not
   * possible for the resource this may be omitted.
   */
  capacity?: number;
}

/**
 * @interface
 * An interface representing Resource.
 * The core properties of ARM resources.
 *
 * @extends BaseResource
 */
export interface Resource extends BaseResource {
  /**
   * @member {string} [id] Fully qualified resource Id for the resource.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [name] The name of the resouce.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [type] The type of the service - e.g.
   * "Microsoft.SignalRService/SignalR"
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: string;
}

/**
 * @interface
 * An interface representing TrackedResource.
 * The resource model definition for a ARM tracked top level resource.
 *
 * @extends Resource
 */
export interface TrackedResource extends Resource {
  /**
   * @member {string} [location] The GEO location of the SignalR service. e.g.
   * West US | East US | North Central US | South Central US.
   */
  location?: string;
  /**
   * @member {{ [propertyName: string]: string }} [tags] Tags of the service
   * which is a list of key value pairs that describe the resource.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * @interface
 * An interface representing SignalRResource.
 * A class represent a SignalR service resource.
 *
 * @extends TrackedResource
 */
export interface SignalRResource extends TrackedResource {
  /**
   * @member {ResourceSku} [sku] SKU of the service.
   */
  sku?: ResourceSku;
  /**
   * @member {string} [hostNamePrefix] Prefix for the hostName of the SignalR
   * service. Retained for future use.
   * The hostname will be of format:
   * &lt;hostNamePrefix&gt;.service.signalr.net.
   */
  hostNamePrefix?: string;
  /**
   * @member {ProvisioningState} [provisioningState] Provisioning state of the
   * resource. Possible values include: 'Unknown', 'Succeeded', 'Failed',
   * 'Canceled', 'Running', 'Creating', 'Updating', 'Deleting', 'Moving'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * @member {string} [externalIP] The publicly accessible IP of the SignalR
   * service.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly externalIP?: string;
  /**
   * @member {string} [hostName] FQDN of the SignalR service instance. Format:
   * xxx.service.signalr.net
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly hostName?: string;
  /**
   * @member {number} [publicPort] The publicly accessibly port of the SignalR
   * service which is designed for browser/client side usage.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly publicPort?: number;
  /**
   * @member {number} [serverPort] The publicly accessibly port of the SignalR
   * service which is designed for customer server side usage.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly serverPort?: number;
  /**
   * @member {string} [version] Version of the SignalR resource. Probably you
   * need the same or higher version of client SDKs.
   */
  version?: string;
}

/**
 * @interface
 * An interface representing SignalRCreateOrUpdateProperties.
 * Settings used to provision or configure the resource.
 *
 */
export interface SignalRCreateOrUpdateProperties {
  /**
   * @member {string} [hostNamePrefix] Prefix for the hostName of the SignalR
   * service. Retained for future use.
   * The hostname will be of format:
   * &lt;hostNamePrefix&gt;.service.signalr.net.
   */
  hostNamePrefix?: string;
}

/**
 * @interface
 * An interface representing SignalRKeys.
 * A class represents the access keys of SignalR service.
 *
 */
export interface SignalRKeys {
  /**
   * @member {string} [primaryKey] The primary access key.
   */
  primaryKey?: string;
  /**
   * @member {string} [secondaryKey] The secondary access key.
   */
  secondaryKey?: string;
  /**
   * @member {string} [primaryConnectionString] SignalR connection string
   * constructed via the primaryKey
   */
  primaryConnectionString?: string;
  /**
   * @member {string} [secondaryConnectionString] SignalR connection string
   * constructed via the secondaryKey
   */
  secondaryConnectionString?: string;
}

/**
 * @interface
 * An interface representing RegenerateKeyParameters.
 * Parameters describes the request to regenerate access keys
 *
 */
export interface RegenerateKeyParameters {
  /**
   * @member {KeyType} [keyType] The keyType to regenerate. Must be either
   * 'primary' or 'secondary'(case-insensitive). Possible values include:
   * 'Primary', 'Secondary'
   */
  keyType?: KeyType;
}

/**
 * @interface
 * An interface representing SignalRUpdateParameters.
 * Parameters for SignalR service update operation
 *
 */
export interface SignalRUpdateParameters {
  /**
   * @member {{ [propertyName: string]: string }} [tags] A list of key value
   * pairs that describe the resource.
   */
  tags?: { [propertyName: string]: string };
  /**
   * @member {ResourceSku} [sku] The billing information of the resource.(e.g.
   * basic vs. standard)
   */
  sku?: ResourceSku;
  /**
   * @member {SignalRCreateOrUpdateProperties} [properties] Settings used to
   * provision or configure the resource
   */
  properties?: SignalRCreateOrUpdateProperties;
}

/**
 * @interface
 * An interface representing SignalRCreateParameters.
 * Parameters for SignalR service create/update operation.
 *
 * Keep the same schema as AzSignalR.Models.SignalRResource
 *
 * @extends SignalRUpdateParameters
 */
export interface SignalRCreateParameters extends SignalRUpdateParameters {
  /**
   * @member {string} location Azure GEO region: e.g. West US | East US | North
   * Central US | South Central US | West Europe | North Europe | East Asia |
   * Southeast Asia | etc.
   * The geo region of a resource never changes after it is created.
   */
  location: string;
}

/**
 * @interface
 * An interface representing SignalRUsageName.
 * Localizable String object containing the name and a localized value.
 *
 */
export interface SignalRUsageName {
  /**
   * @member {string} [value] The indentifier of the usage.
   */
  value?: string;
  /**
   * @member {string} [localizedValue] Localized name of the usage.
   */
  localizedValue?: string;
}

/**
 * @interface
 * An interface representing SignalRUsage.
 * Object that describes a specific usage of SignalR resources.
 *
 */
export interface SignalRUsage {
  /**
   * @member {string} [id] Fully qualified ARM resource id
   */
  id?: string;
  /**
   * @member {number} [currentValue] Current value for the usage quota.
   */
  currentValue?: number;
  /**
   * @member {number} [limit] The maximum permitted value for the usage quota.
   * If there is no limit, this value will be -1.
   */
  limit?: number;
  /**
   * @member {SignalRUsageName} [name] Localizable String object containing the
   * name and a localized value.
   */
  name?: SignalRUsageName;
  /**
   * @member {string} [unit] Representing the units of the usage quota.
   * Possible values are: Count, Bytes, Seconds, Percent, CountPerSecond,
   * BytesPerSecond.
   */
  unit?: string;
}

/**
 * @interface
 * An interface representing SignalRCheckNameAvailabilityOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface SignalRCheckNameAvailabilityOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {NameAvailabilityParameters} [parameters] Parameters supplied to
   * the operation.
   */
  parameters?: NameAvailabilityParameters;
}

/**
 * @interface
 * An interface representing SignalRRegenerateKeyOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface SignalRRegenerateKeyOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {RegenerateKeyParameters} [parameters] Parameter that describes
   * the Regenerate Key Operation.
   */
  parameters?: RegenerateKeyParameters;
}

/**
 * @interface
 * An interface representing SignalRCreateOrUpdateOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface SignalRCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {SignalRCreateParameters} [parameters] Parameters for the create
   * or update operation
   */
  parameters?: SignalRCreateParameters;
}

/**
 * @interface
 * An interface representing SignalRUpdateOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface SignalRUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {SignalRUpdateParameters} [parameters] Parameters for the update
   * operation
   */
  parameters?: SignalRUpdateParameters;
}

/**
 * @interface
 * An interface representing SignalRBeginRegenerateKeyOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface SignalRBeginRegenerateKeyOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {RegenerateKeyParameters} [parameters] Parameter that describes
   * the Regenerate Key Operation.
   */
  parameters?: RegenerateKeyParameters;
}

/**
 * @interface
 * An interface representing SignalRBeginCreateOrUpdateOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface SignalRBeginCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {SignalRCreateParameters} [parameters] Parameters for the create
   * or update operation
   */
  parameters?: SignalRCreateParameters;
}

/**
 * @interface
 * An interface representing SignalRBeginUpdateOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface SignalRBeginUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {SignalRUpdateParameters} [parameters] Parameters for the update
   * operation
   */
  parameters?: SignalRUpdateParameters;
}

/**
 * @interface
 * An interface representing SignalRManagementClientOptions.
 * @extends AzureServiceClientOptions
 */
export interface SignalRManagementClientOptions extends AzureServiceClientOptions {
  /**
   * @member {string} [baseUri]
   */
  baseUri?: string;
}


/**
 * @interface
 * An interface representing the OperationList.
 * Result of the request to list REST API operations. It contains a list of
 * operations.
 *
 * @extends Array<Operation>
 */
export interface OperationList extends Array<Operation> {
  /**
   * @member {string} [nextLink] The URL the client should use to fetch the
   * next page (per server side paging).
   * It's null for now, added for future use.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the SignalRResourceList.
 * Object that includes an array of SignalR services and a possible link for
 * next set.
 *
 * @extends Array<SignalRResource>
 */
export interface SignalRResourceList extends Array<SignalRResource> {
  /**
   * @member {string} [nextLink] The URL the client should use to fetch the
   * next page (per server side paging).
   * It's null for now, added for future use.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the SignalRUsageList.
 * Object that includes an array of SignalR resource usages and a possible link
 * for next set.
 *
 * @extends Array<SignalRUsage>
 */
export interface SignalRUsageList extends Array<SignalRUsage> {
  /**
   * @member {string} [nextLink] The URL the client should use to fetch the
   * next page (per server side paging).
   * It's null for now, added for future use.
   */
  nextLink?: string;
}

/**
 * Defines values for SignalRSkuTier.
 * Possible values include: 'Free', 'Basic', 'Standard', 'Premium'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: SignalRSkuTier =
 * <SignalRSkuTier>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum SignalRSkuTier {
  Free = 'Free',
  Basic = 'Basic',
  Standard = 'Standard',
  Premium = 'Premium',
}

/**
 * Defines values for ProvisioningState.
 * Possible values include: 'Unknown', 'Succeeded', 'Failed', 'Canceled',
 * 'Running', 'Creating', 'Updating', 'Deleting', 'Moving'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: ProvisioningState =
 * <ProvisioningState>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum ProvisioningState {
  Unknown = 'Unknown',
  Succeeded = 'Succeeded',
  Failed = 'Failed',
  Canceled = 'Canceled',
  Running = 'Running',
  Creating = 'Creating',
  Updating = 'Updating',
  Deleting = 'Deleting',
  Moving = 'Moving',
}

/**
 * Defines values for KeyType.
 * Possible values include: 'Primary', 'Secondary'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: KeyType = <KeyType>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum KeyType {
  Primary = 'Primary',
  Secondary = 'Secondary',
}

/**
 * Defines values for ApiVersion.
 * Possible values include: '2018-03-01-preview', '2018-10-01'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: ApiVersion = <ApiVersion>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum ApiVersion {
  TwoZeroOneEightHyphenMinusZeroThreeHyphenMinusZeroOneHyphenMinuspreview = '2018-03-01-preview',
  TwoZeroOneEightHyphenMinusOneZeroHyphenMinusZeroOne = '2018-10-01',
}

/**
 * Defines values for ApiVersion1.
 * Possible values include: '2018-03-01-preview', '2018-10-01'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: ApiVersion1 =
 * <ApiVersion1>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum ApiVersion1 {
  TwoZeroOneEightHyphenMinusZeroThreeHyphenMinusZeroOneHyphenMinuspreview = '2018-03-01-preview',
  TwoZeroOneEightHyphenMinusOneZeroHyphenMinusZeroOne = '2018-10-01',
}

/**
 * Defines values for ApiVersion2.
 * Possible values include: '2018-03-01-preview', '2018-10-01'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: ApiVersion2 =
 * <ApiVersion2>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum ApiVersion2 {
  TwoZeroOneEightHyphenMinusZeroThreeHyphenMinusZeroOneHyphenMinuspreview = '2018-03-01-preview',
  TwoZeroOneEightHyphenMinusOneZeroHyphenMinusZeroOne = '2018-10-01',
}

/**
 * Defines values for ApiVersion3.
 * Possible values include: '2018-03-01-preview', '2018-10-01'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: ApiVersion3 =
 * <ApiVersion3>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum ApiVersion3 {
  TwoZeroOneEightHyphenMinusZeroThreeHyphenMinusZeroOneHyphenMinuspreview = '2018-03-01-preview',
  TwoZeroOneEightHyphenMinusOneZeroHyphenMinusZeroOne = '2018-10-01',
}

/**
 * Defines values for ApiVersion4.
 * Possible values include: '2018-03-01-preview', '2018-10-01'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: ApiVersion4 =
 * <ApiVersion4>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum ApiVersion4 {
  TwoZeroOneEightHyphenMinusZeroThreeHyphenMinusZeroOneHyphenMinuspreview = '2018-03-01-preview',
  TwoZeroOneEightHyphenMinusOneZeroHyphenMinusZeroOne = '2018-10-01',
}

/**
 * Defines values for ApiVersion5.
 * Possible values include: '2018-03-01-preview', '2018-10-01'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: ApiVersion5 =
 * <ApiVersion5>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum ApiVersion5 {
  TwoZeroOneEightHyphenMinusZeroThreeHyphenMinusZeroOneHyphenMinuspreview = '2018-03-01-preview',
  TwoZeroOneEightHyphenMinusOneZeroHyphenMinusZeroOne = '2018-10-01',
}

/**
 * Defines values for ApiVersion6.
 * Possible values include: '2018-03-01-preview', '2018-10-01'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: ApiVersion6 =
 * <ApiVersion6>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum ApiVersion6 {
  TwoZeroOneEightHyphenMinusZeroThreeHyphenMinusZeroOneHyphenMinuspreview = '2018-03-01-preview',
  TwoZeroOneEightHyphenMinusOneZeroHyphenMinusZeroOne = '2018-10-01',
}

/**
 * Defines values for ApiVersion7.
 * Possible values include: '2018-03-01-preview', '2018-10-01'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: ApiVersion7 =
 * <ApiVersion7>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum ApiVersion7 {
  TwoZeroOneEightHyphenMinusZeroThreeHyphenMinusZeroOneHyphenMinuspreview = '2018-03-01-preview',
  TwoZeroOneEightHyphenMinusOneZeroHyphenMinusZeroOne = '2018-10-01',
}

/**
 * Defines values for ApiVersion8.
 * Possible values include: '2018-03-01-preview', '2018-10-01'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: ApiVersion8 =
 * <ApiVersion8>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum ApiVersion8 {
  TwoZeroOneEightHyphenMinusZeroThreeHyphenMinusZeroOneHyphenMinuspreview = '2018-03-01-preview',
  TwoZeroOneEightHyphenMinusOneZeroHyphenMinusZeroOne = '2018-10-01',
}

/**
 * Defines values for ApiVersion9.
 * Possible values include: '2018-03-01-preview', '2018-10-01'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: ApiVersion9 =
 * <ApiVersion9>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum ApiVersion9 {
  TwoZeroOneEightHyphenMinusZeroThreeHyphenMinusZeroOneHyphenMinuspreview = '2018-03-01-preview',
  TwoZeroOneEightHyphenMinusOneZeroHyphenMinusZeroOne = '2018-10-01',
}

/**
 * Defines values for ApiVersion10.
 * Possible values include: '2018-03-01-preview', '2018-10-01'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: ApiVersion10 =
 * <ApiVersion10>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum ApiVersion10 {
  TwoZeroOneEightHyphenMinusZeroThreeHyphenMinusZeroOneHyphenMinuspreview = '2018-03-01-preview',
  TwoZeroOneEightHyphenMinusOneZeroHyphenMinusZeroOne = '2018-10-01',
}

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationList;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type OperationsListNextResponse = OperationList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationList;
    };
};

/**
 * Contains response data for the checkNameAvailability operation.
 */
export type SignalRCheckNameAvailabilityResponse = NameAvailability & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NameAvailability;
    };
};

/**
 * Contains response data for the listBySubscription operation.
 */
export type SignalRListBySubscriptionResponse = SignalRResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SignalRResourceList;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type SignalRListByResourceGroupResponse = SignalRResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SignalRResourceList;
    };
};

/**
 * Contains response data for the listKeys operation.
 */
export type SignalRListKeysResponse = SignalRKeys & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SignalRKeys;
    };
};

/**
 * Contains response data for the regenerateKey operation.
 */
export type SignalRRegenerateKeyResponse = SignalRKeys & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SignalRKeys;
    };
};

/**
 * Contains response data for the get operation.
 */
export type SignalRGetResponse = SignalRResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SignalRResource;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type SignalRCreateOrUpdateResponse = SignalRResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SignalRResource;
    };
};

/**
 * Contains response data for the update operation.
 */
export type SignalRUpdateResponse = SignalRResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SignalRResource;
    };
};

/**
 * Contains response data for the beginRegenerateKey operation.
 */
export type SignalRBeginRegenerateKeyResponse = SignalRKeys & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SignalRKeys;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type SignalRBeginCreateOrUpdateResponse = SignalRResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SignalRResource;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type SignalRBeginUpdateResponse = SignalRResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SignalRResource;
    };
};

/**
 * Contains response data for the listBySubscriptionNext operation.
 */
export type SignalRListBySubscriptionNextResponse = SignalRResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SignalRResourceList;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type SignalRListByResourceGroupNextResponse = SignalRResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SignalRResourceList;
    };
};

/**
 * Contains response data for the list operation.
 */
export type UsagesListResponse = SignalRUsageList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SignalRUsageList;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type UsagesListNextResponse = SignalRUsageList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SignalRUsageList;
    };
};
