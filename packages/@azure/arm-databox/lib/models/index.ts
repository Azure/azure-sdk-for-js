/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "ms-rest-azure-js";
import * as msRest from "ms-rest-js";

export { BaseResource, CloudError };


/**
 * @interface
 * An interface representing ShareCredentialDetails.
 * Credential details of the shares in account.
 *
 */
export interface ShareCredentialDetails {
  /**
   * @member {string} [shareName] Name of the share.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly shareName?: string;
  /**
   * @member {ShareDestinationFormatType} [shareType] Type of the share.
   * Possible values include: 'UnknownType', 'HCS', 'BlockBlob', 'PageBlob',
   * 'AzureFile'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly shareType?: ShareDestinationFormatType;
  /**
   * @member {string} [userName] User name for the share.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly userName?: string;
  /**
   * @member {string} [password] Password for the share.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly password?: string;
  /**
   * @member {AccessProtocol[]} [supportedAccessProtocols] Access protocols
   * supported on the device.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly supportedAccessProtocols?: AccessProtocol[];
}

/**
 * @interface
 * An interface representing AccountCredentialDetails.
 * Credential details of the account.
 *
 */
export interface AccountCredentialDetails {
  /**
   * @member {string} [accountName] Name of the account.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly accountName?: string;
  /**
   * @member {string} [accountConnectionString] Connection string of the
   * account endpoint to use the account as a storage endpoint on the device.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly accountConnectionString?: string;
  /**
   * @member {ShareCredentialDetails[]} [shareCredentialDetails] Per share
   * level unencrypted access credentials.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly shareCredentialDetails?: ShareCredentialDetails[];
}

/**
 * @interface
 * An interface representing ShippingAddress.
 * Shipping address where customer wishes to receive the device.
 *
 */
export interface ShippingAddress {
  /**
   * @member {string} streetAddress1 Street Address line 1.
   */
  streetAddress1: string;
  /**
   * @member {string} [streetAddress2] Street Address line 2.
   */
  streetAddress2?: string;
  /**
   * @member {string} [streetAddress3] Street Address line 3.
   */
  streetAddress3?: string;
  /**
   * @member {string} [city] Name of the City.
   */
  city?: string;
  /**
   * @member {string} [stateOrProvince] Name of the State or Province.
   */
  stateOrProvince?: string;
  /**
   * @member {string} country Name of the Country.
   */
  country: string;
  /**
   * @member {string} postalCode Postal code.
   */
  postalCode: string;
  /**
   * @member {string} [zipExtendedCode] Extended Zip Code.
   */
  zipExtendedCode?: string;
  /**
   * @member {string} [companyName] Name of the company.
   */
  companyName?: string;
  /**
   * @member {AddressType} [addressType] Type of address. Possible values
   * include: 'None', 'Residential', 'Commercial'
   */
  addressType?: AddressType;
}

/**
 * @interface
 * An interface representing AddressValidationOutput.
 * Output of the address validation api.
 *
 */
export interface AddressValidationOutput {
  /**
   * @member {AddressValidationStatus} [validationStatus] The address
   * validation status. Possible values include: 'Valid', 'Invalid',
   * 'Ambiguous'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly validationStatus?: AddressValidationStatus;
  /**
   * @member {ShippingAddress[]} [alternateAddresses] List of alternate
   * addresses.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly alternateAddresses?: ShippingAddress[];
}

/**
 * @interface
 * An interface representing ApplianceNetworkConfiguration.
 * The Network Adapter configuration of a DataBox.
 *
 */
export interface ApplianceNetworkConfiguration {
  /**
   * @member {string} [name] Name of the network.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [macAddress] Mac Address.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly macAddress?: string;
}

/**
 * @interface
 * An interface representing ArmBaseObject.
 * Base class for all objects under resource.
 *
 */
export interface ArmBaseObject {
  /**
   * @member {string} [name] Name of the object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [id] Id of the object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [type] Type of the object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: string;
}

/**
 * @interface
 * An interface representing AvailableSkuRequest.
 * The filters for showing the available skus.
 *
 */
export interface AvailableSkuRequest {
  /**
   * @member {string} country ISO country code. Country for hardware shipment.
   * For codes check:
   * https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements
   */
  country: string;
  /**
   * @member {string} location Location for data transfer. For locations check:
   * https://management.azure.com/subscriptions/SUBSCRIPTIONID/locations?api-version=2018-01-01
   */
  location: string;
  /**
   * @member {SkuName[]} [skuNames] Sku Names to filter for available skus
   */
  skuNames?: SkuName[];
}

/**
 * @interface
 * An interface representing Sku.
 * The Sku.
 *
 */
export interface Sku {
  /**
   * @member {SkuName} name The sku name. Possible values include: 'DataBox',
   * 'DataBoxDisk', 'DataBoxHeavy'
   */
  name: SkuName;
  /**
   * @member {string} [displayName] The display name of the sku.
   */
  displayName?: string;
  /**
   * @member {string} [family] The sku family.
   */
  family?: string;
}

/**
 * @interface
 * An interface representing DestinationToServiceLocationMap.
 * Map of destination location to service location
 *
 */
export interface DestinationToServiceLocationMap {
  /**
   * @member {string} [destinationLocation] Location of the destination.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly destinationLocation?: string;
  /**
   * @member {string} [serviceLocation] Location of the service.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly serviceLocation?: string;
}

/**
 * @interface
 * An interface representing SkuCapacity.
 * Capacity of the sku.
 *
 */
export interface SkuCapacity {
  /**
   * @member {string} [usable] Usable capacity in TB.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly usable?: string;
  /**
   * @member {string} [maximum] Maximum capacity in TB.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly maximum?: string;
}

/**
 * @interface
 * An interface representing SkuCost.
 * Describes metadata for retrieving price info.
 *
 */
export interface SkuCost {
  /**
   * @member {string} [meterId] Meter id of the Sku.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly meterId?: string;
  /**
   * @member {string} [meterType] The type of the meter.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly meterType?: string;
}

/**
 * @interface
 * An interface representing SkuInformation.
 * Information of the sku.
 *
 */
export interface SkuInformation {
  /**
   * @member {Sku} [sku] The Sku.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly sku?: Sku;
  /**
   * @member {boolean} [enabled] The sku is enabled or not.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly enabled?: boolean;
  /**
   * @member {DestinationToServiceLocationMap[]}
   * [destinationToServiceLocationMap] The map of destination location to
   * service location.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly destinationToServiceLocationMap?: DestinationToServiceLocationMap[];
  /**
   * @member {SkuCapacity} [capacity] Capacity of the Sku.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly capacity?: SkuCapacity;
  /**
   * @member {SkuCost[]} [costs] Cost of the Sku.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly costs?: SkuCost[];
  /**
   * @member {string[]} [apiVersions] Api versions that support this Sku.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly apiVersions?: string[];
  /**
   * @member {SkuDisabledReason} [disabledReason] Reason why the Sku is
   * disabled. Possible values include: 'None', 'Country', 'Region', 'Feature',
   * 'OfferType'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly disabledReason?: SkuDisabledReason;
  /**
   * @member {string} [disabledReasonMessage] Message for why the Sku is
   * disabled.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly disabledReasonMessage?: string;
  /**
   * @member {string} [requiredFeature] Required feature to access the sku.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly requiredFeature?: string;
}

/**
 * @interface
 * An interface representing CancellationReason.
 * Reason for cancellation.
 *
 */
export interface CancellationReason {
  /**
   * @member {string} reason Reason for cancellation.
   */
  reason: string;
}

/**
 * @interface
 * An interface representing NotificationPreference.
 * Notification preference for a job stage.
 *
 */
export interface NotificationPreference {
  /**
   * @member {NotificationStageName} stageName Name of the stage. Possible
   * values include: 'DevicePrepared', 'Dispatched', 'Delivered', 'PickedUp',
   * 'AtAzureDC', 'DataCopy'
   */
  stageName: NotificationStageName;
  /**
   * @member {boolean} sendNotification Notification is required or not.
   */
  sendNotification: boolean;
}

/**
 * @interface
 * An interface representing ContactDetails.
 * Contact Details.
 *
 */
export interface ContactDetails {
  /**
   * @member {string} contactName Contact name of the person.
   */
  contactName: string;
  /**
   * @member {string} phone Phone number of the contact person.
   */
  phone: string;
  /**
   * @member {string} [phoneExtension] Phone extension number of the contact
   * person.
   */
  phoneExtension?: string;
  /**
   * @member {string} [mobile] Mobile number of the contact person.
   */
  mobile?: string;
  /**
   * @member {string[]} emailList List of Email-ids to be notified about job
   * progress.
   */
  emailList: string[];
  /**
   * @member {NotificationPreference[]} [notificationPreference] Notification
   * preference for a job stage.
   */
  notificationPreference?: NotificationPreference[];
}

/**
 * Contains the possible cases for CopyLogDetails.
 */
export type CopyLogDetailsUnion = CopyLogDetails | DataBoxAccountCopyLogDetails | DataBoxDiskCopyLogDetails | DataBoxHeavyAccountCopyLogDetails;

/**
 * @interface
 * An interface representing CopyLogDetails.
 * Details for log generated during copy.
 *
 */
export interface CopyLogDetails {
  /**
   * @member {string} copyLogDetailsType Polymorphic Discriminator
   */
  copyLogDetailsType: "CopyLogDetails";
}

/**
 * @interface
 * An interface representing CopyProgress.
 * Copy progress.
 *
 */
export interface CopyProgress {
  /**
   * @member {string} [storageAccountName] Name of the storage account where
   * the data needs to be uploaded.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly storageAccountName?: string;
  /**
   * @member {string} [accountId] Id of the account where the data needs to be
   * uploaded.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly accountId?: string;
  /**
   * @member {number} [bytesSentToCloud] Amount of data uploaded by the job as
   * of now.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly bytesSentToCloud?: number;
  /**
   * @member {number} [totalBytesToProcess] Total amount of data to be
   * processed by the job.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly totalBytesToProcess?: number;
}

/**
 * @interface
 * An interface representing DataBoxAccountCopyLogDetails.
 * Copy log details for a storage account of a DataBox job
 *
 */
export interface DataBoxAccountCopyLogDetails {
  /**
   * @member {string} copyLogDetailsType Polymorphic Discriminator
   */
  copyLogDetailsType: "DataBox";
  /**
   * @member {string} [accountName] Destination account name.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly accountName?: string;
  /**
   * @member {string} [copyLogLink] Link for copy logs.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly copyLogLink?: string;
}

/**
 * @interface
 * An interface representing DataBoxDiskCopyLogDetails.
 * Copy Log Details for a disk
 *
 */
export interface DataBoxDiskCopyLogDetails {
  /**
   * @member {string} copyLogDetailsType Polymorphic Discriminator
   */
  copyLogDetailsType: "DataBoxDisk";
  /**
   * @member {string} [diskSerialNumber] Disk Serial Number.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly diskSerialNumber?: string;
  /**
   * @member {string} [errorLogLink] Link for copy error logs.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly errorLogLink?: string;
  /**
   * @member {string} [verboseLogLink] Link for copy verbose logs.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly verboseLogLink?: string;
}

/**
 * @interface
 * An interface representing DataBoxDiskCopyProgress.
 * DataBox Disk Copy Progress
 *
 */
export interface DataBoxDiskCopyProgress {
  /**
   * @member {string} [serialNumber] The serial number of the disk
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly serialNumber?: string;
  /**
   * @member {number} [bytesCopied] Bytes copied during the copy of disk.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly bytesCopied?: number;
  /**
   * @member {number} [percentComplete] Indicates the percentage completed for
   * the copy of the disk.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly percentComplete?: number;
  /**
   * @member {CopyStatus} [status] The Status of the copy. Possible values
   * include: 'NotStarted', 'InProgress', 'Completed', 'CompletedWithErrors',
   * 'Failed', 'NotReturned'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly status?: CopyStatus;
}

/**
 * Contains the possible cases for JobDetails.
 */
export type JobDetailsUnion = JobDetails | DataBoxDiskJobDetails | DataBoxHeavyJobDetails | DataBoxJobDetails;

/**
 * @interface
 * An interface representing JobDetails.
 * Job details.
 *
 */
export interface JobDetails {
  /**
   * @member {string} jobDetailsType Polymorphic Discriminator
   */
  jobDetailsType: "JobDetails";
  /**
   * @member {number} [expectedDataSizeInTeraBytes] The expected size of the
   * data, which needs to be transfered in this job, in tera bytes.
   */
  expectedDataSizeInTeraBytes?: number;
  /**
   * @member {JobStages[]} [jobStages] List of stages that run in the job.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly jobStages?: JobStages[];
  /**
   * @member {ContactDetails} contactDetails Contact details for notification
   * and shipping.
   */
  contactDetails: ContactDetails;
  /**
   * @member {ShippingAddress} shippingAddress Shipping address of the
   * customer.
   */
  shippingAddress: ShippingAddress;
  /**
   * @member {PackageShippingDetails} [deliveryPackage] Delivery package
   * shipping details.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly deliveryPackage?: PackageShippingDetails;
  /**
   * @member {PackageShippingDetails} [returnPackage] Return package shipping
   * details.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly returnPackage?: PackageShippingDetails;
  /**
   * @member {DestinationAccountDetails[]} destinationAccountDetails
   * Destination account details.
   */
  destinationAccountDetails: DestinationAccountDetails[];
  /**
   * @member {JobErrorDetails[]} [errorDetails] Error details for failure. This
   * is optional.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly errorDetails?: JobErrorDetails[];
  /**
   * @member {Preferences} [preferences] Preferences for the order.
   */
  preferences?: Preferences;
  /**
   * @member {CopyLogDetailsUnion[]} [copyLogDetails] List of copy log details.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly copyLogDetails?: CopyLogDetailsUnion[];
  /**
   * @member {string} [reverseShipmentLabelSasKey] Shared access key to
   * download the return shipment label
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly reverseShipmentLabelSasKey?: string;
  /**
   * @member {string} [chainOfCustodySasKey] Shared access key to download the
   * chain of custody logs
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly chainOfCustodySasKey?: string;
}

/**
 * @interface
 * An interface representing DataBoxDiskJobDetails.
 * DataBox Disk Job Details.
 *
 */
export interface DataBoxDiskJobDetails {
  /**
   * @member {string} jobDetailsType Polymorphic Discriminator
   */
  jobDetailsType: "DataBoxDisk";
  /**
   * @member {number} [expectedDataSizeInTeraBytes] The expected size of the
   * data, which needs to be transfered in this job, in tera bytes.
   */
  expectedDataSizeInTeraBytes?: number;
  /**
   * @member {JobStages[]} [jobStages] List of stages that run in the job.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly jobStages?: JobStages[];
  /**
   * @member {ContactDetails} contactDetails Contact details for notification
   * and shipping.
   */
  contactDetails: ContactDetails;
  /**
   * @member {ShippingAddress} shippingAddress Shipping address of the
   * customer.
   */
  shippingAddress: ShippingAddress;
  /**
   * @member {PackageShippingDetails} [deliveryPackage] Delivery package
   * shipping details.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly deliveryPackage?: PackageShippingDetails;
  /**
   * @member {PackageShippingDetails} [returnPackage] Return package shipping
   * details.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly returnPackage?: PackageShippingDetails;
  /**
   * @member {DestinationAccountDetails[]} destinationAccountDetails
   * Destination account details.
   */
  destinationAccountDetails: DestinationAccountDetails[];
  /**
   * @member {JobErrorDetails[]} [errorDetails] Error details for failure. This
   * is optional.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly errorDetails?: JobErrorDetails[];
  /**
   * @member {Preferences} [preferences] Preferences for the order.
   */
  preferences?: Preferences;
  /**
   * @member {CopyLogDetailsUnion[]} [copyLogDetails] List of copy log details.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly copyLogDetails?: CopyLogDetailsUnion[];
  /**
   * @member {string} [reverseShipmentLabelSasKey] Shared access key to
   * download the return shipment label
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly reverseShipmentLabelSasKey?: string;
  /**
   * @member {string} [chainOfCustodySasKey] Shared access key to download the
   * chain of custody logs
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly chainOfCustodySasKey?: string;
  /**
   * @member {{ [propertyName: string]: number }} [preferredDisks] User
   * preference on what size disks are needed for the job. The map is from the
   * disk size in TB to the count. Eg. {2,5} means 5 disks of 2 TB size. Key is
   * string but will be checked against an int.
   */
  preferredDisks?: { [propertyName: string]: number };
  /**
   * @member {DataBoxDiskCopyProgress[]} [copyProgress] Copy progress per disk.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly copyProgress?: DataBoxDiskCopyProgress[];
  /**
   * @member {{ [propertyName: string]: number }} [disksAndSizeDetails]
   * Contains the map of disk serial number to the disk size being used for the
   * job. Is returned only after the disks are shipped to the customer.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly disksAndSizeDetails?: { [propertyName: string]: number };
  /**
   * @member {string} [passkey] User entered passkey for DataBox Disk job.
   */
  passkey?: string;
}

/**
 * @interface
 * An interface representing DiskSecret.
 * Contains all the secrets of a Disk.
 *
 */
export interface DiskSecret {
  /**
   * @member {string} [diskSerialNumber] Serial number of the assigned disk.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly diskSerialNumber?: string;
  /**
   * @member {string} [bitLockerKey] Bit Locker key of the disk which can be
   * used to unlock the disk to copy data.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly bitLockerKey?: string;
}

/**
 * Contains the possible cases for JobSecrets.
 */
export type JobSecretsUnion = JobSecrets | DataBoxDiskJobSecrets | DataBoxHeavyJobSecrets | DataboxJobSecrets;

/**
 * @interface
 * An interface representing JobSecrets.
 * The base class for the secrets
 *
 */
export interface JobSecrets {
  /**
   * @member {string} jobSecretsType Polymorphic Discriminator
   */
  jobSecretsType: "JobSecrets";
}

/**
 * @interface
 * An interface representing DataBoxDiskJobSecrets.
 * The secrets related to disk job.
 *
 */
export interface DataBoxDiskJobSecrets {
  /**
   * @member {string} jobSecretsType Polymorphic Discriminator
   */
  jobSecretsType: "DataBoxDisk";
  /**
   * @member {DiskSecret[]} [diskSecrets] Contains the list of secrets object
   * for that device.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly diskSecrets?: DiskSecret[];
  /**
   * @member {string} [passKey] PassKey for the disk Job.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly passKey?: string;
  /**
   * @member {boolean} [isPasskeyUserDefined] Whether passkey was provided by
   * user.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly isPasskeyUserDefined?: boolean;
}

/**
 * @interface
 * An interface representing DataBoxHeavyAccountCopyLogDetails.
 * Copy log details for a storage account for Databox heavy
 *
 */
export interface DataBoxHeavyAccountCopyLogDetails {
  /**
   * @member {string} copyLogDetailsType Polymorphic Discriminator
   */
  copyLogDetailsType: "DataBoxHeavy";
  /**
   * @member {string} [accountName] Destination account name.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly accountName?: string;
  /**
   * @member {string[]} [copyLogLink] Link for copy logs.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly copyLogLink?: string[];
}

/**
 * @interface
 * An interface representing DataBoxHeavyJobDetails.
 * Databox Heavy Device Job Details
 *
 */
export interface DataBoxHeavyJobDetails {
  /**
   * @member {string} jobDetailsType Polymorphic Discriminator
   */
  jobDetailsType: "DataBoxHeavy";
  /**
   * @member {number} [expectedDataSizeInTeraBytes] The expected size of the
   * data, which needs to be transfered in this job, in tera bytes.
   */
  expectedDataSizeInTeraBytes?: number;
  /**
   * @member {JobStages[]} [jobStages] List of stages that run in the job.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly jobStages?: JobStages[];
  /**
   * @member {ContactDetails} contactDetails Contact details for notification
   * and shipping.
   */
  contactDetails: ContactDetails;
  /**
   * @member {ShippingAddress} shippingAddress Shipping address of the
   * customer.
   */
  shippingAddress: ShippingAddress;
  /**
   * @member {PackageShippingDetails} [deliveryPackage] Delivery package
   * shipping details.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly deliveryPackage?: PackageShippingDetails;
  /**
   * @member {PackageShippingDetails} [returnPackage] Return package shipping
   * details.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly returnPackage?: PackageShippingDetails;
  /**
   * @member {DestinationAccountDetails[]} destinationAccountDetails
   * Destination account details.
   */
  destinationAccountDetails: DestinationAccountDetails[];
  /**
   * @member {JobErrorDetails[]} [errorDetails] Error details for failure. This
   * is optional.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly errorDetails?: JobErrorDetails[];
  /**
   * @member {Preferences} [preferences] Preferences for the order.
   */
  preferences?: Preferences;
  /**
   * @member {CopyLogDetailsUnion[]} [copyLogDetails] List of copy log details.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly copyLogDetails?: CopyLogDetailsUnion[];
  /**
   * @member {string} [reverseShipmentLabelSasKey] Shared access key to
   * download the return shipment label
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly reverseShipmentLabelSasKey?: string;
  /**
   * @member {string} [chainOfCustodySasKey] Shared access key to download the
   * chain of custody logs
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly chainOfCustodySasKey?: string;
  /**
   * @member {CopyProgress[]} [copyProgress] Copy progress per account.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly copyProgress?: CopyProgress[];
}

/**
 * @interface
 * An interface representing DataBoxHeavySecret.
 * The secrets related to a databox heavy.
 *
 */
export interface DataBoxHeavySecret {
  /**
   * @member {string} [deviceSerialNumber] Serial number of the assigned
   * device.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly deviceSerialNumber?: string;
  /**
   * @member {string} [devicePassword] Password for out of the box experience
   * on device.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly devicePassword?: string;
  /**
   * @member {ApplianceNetworkConfiguration[]} [networkConfigurations] Network
   * configuration of the appliance.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly networkConfigurations?: ApplianceNetworkConfiguration[];
  /**
   * @member {string} [encodedValidationCertPubKey] The base 64 encoded public
   * key to authenticate with the device
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly encodedValidationCertPubKey?: string;
  /**
   * @member {AccountCredentialDetails[]} [accountCredentialDetails] Per
   * account level access credentials.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly accountCredentialDetails?: AccountCredentialDetails[];
}

/**
 * @interface
 * An interface representing DataBoxHeavyJobSecrets.
 * The secrets related to a databox heavy job.
 *
 */
export interface DataBoxHeavyJobSecrets {
  /**
   * @member {string} jobSecretsType Polymorphic Discriminator
   */
  jobSecretsType: "DataBoxHeavy";
  /**
   * @member {DataBoxHeavySecret[]} [cabinetPodSecrets] Contains the list of
   * secret objects for a databox heavy job.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly cabinetPodSecrets?: DataBoxHeavySecret[];
}

/**
 * @interface
 * An interface representing DataBoxJobDetails.
 * Databox Job Details
 *
 */
export interface DataBoxJobDetails {
  /**
   * @member {string} jobDetailsType Polymorphic Discriminator
   */
  jobDetailsType: "DataBox";
  /**
   * @member {number} [expectedDataSizeInTeraBytes] The expected size of the
   * data, which needs to be transfered in this job, in tera bytes.
   */
  expectedDataSizeInTeraBytes?: number;
  /**
   * @member {JobStages[]} [jobStages] List of stages that run in the job.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly jobStages?: JobStages[];
  /**
   * @member {ContactDetails} contactDetails Contact details for notification
   * and shipping.
   */
  contactDetails: ContactDetails;
  /**
   * @member {ShippingAddress} shippingAddress Shipping address of the
   * customer.
   */
  shippingAddress: ShippingAddress;
  /**
   * @member {PackageShippingDetails} [deliveryPackage] Delivery package
   * shipping details.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly deliveryPackage?: PackageShippingDetails;
  /**
   * @member {PackageShippingDetails} [returnPackage] Return package shipping
   * details.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly returnPackage?: PackageShippingDetails;
  /**
   * @member {DestinationAccountDetails[]} destinationAccountDetails
   * Destination account details.
   */
  destinationAccountDetails: DestinationAccountDetails[];
  /**
   * @member {JobErrorDetails[]} [errorDetails] Error details for failure. This
   * is optional.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly errorDetails?: JobErrorDetails[];
  /**
   * @member {Preferences} [preferences] Preferences for the order.
   */
  preferences?: Preferences;
  /**
   * @member {CopyLogDetailsUnion[]} [copyLogDetails] List of copy log details.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly copyLogDetails?: CopyLogDetailsUnion[];
  /**
   * @member {string} [reverseShipmentLabelSasKey] Shared access key to
   * download the return shipment label
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly reverseShipmentLabelSasKey?: string;
  /**
   * @member {string} [chainOfCustodySasKey] Shared access key to download the
   * chain of custody logs
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly chainOfCustodySasKey?: string;
  /**
   * @member {CopyProgress[]} [copyProgress] Copy progress per storage account.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly copyProgress?: CopyProgress[];
}

/**
 * @interface
 * An interface representing DataBoxSecret.
 * The secrets related to a DataBox.
 *
 */
export interface DataBoxSecret {
  /**
   * @member {string} [deviceSerialNumber] Serial number of the assigned
   * device.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly deviceSerialNumber?: string;
  /**
   * @member {string} [devicePassword] Password for out of the box experience
   * on device.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly devicePassword?: string;
  /**
   * @member {ApplianceNetworkConfiguration[]} [networkConfigurations] Network
   * configuration of the appliance.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly networkConfigurations?: ApplianceNetworkConfiguration[];
  /**
   * @member {string} [encodedValidationCertPubKey] The base 64 encoded public
   * key to authenticate with the device
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly encodedValidationCertPubKey?: string;
  /**
   * @member {AccountCredentialDetails[]} [accountCredentialDetails] Per
   * account level access credentials.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly accountCredentialDetails?: AccountCredentialDetails[];
}

/**
 * @interface
 * An interface representing DataboxJobSecrets.
 * The secrets related to a databox job.
 *
 */
export interface DataboxJobSecrets {
  /**
   * @member {string} jobSecretsType Polymorphic Discriminator
   */
  jobSecretsType: "DataBox";
  /**
   * @member {DataBoxSecret[]} [podSecrets] Contains the list of secret objects
   * for a job.
   */
  podSecrets?: DataBoxSecret[];
}

/**
 * @interface
 * An interface representing DestinationAccountDetails.
 * Details for the destination account.
 *
 */
export interface DestinationAccountDetails {
  /**
   * @member {string} accountId Destination storage account id.
   */
  accountId: string;
}

/**
 * @interface
 * An interface representing ErrorModel.
 * Top level error for the job.
 *
 */
export interface ErrorModel {
  /**
   * @member {string} [code] Error code that can be used to programmatically
   * identify the error.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly code?: string;
  /**
   * @member {string} [message] Describes the error in detail and provides
   * debugging information.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly message?: string;
}

/**
 * @interface
 * An interface representing JobErrorDetails.
 * Job Error Details for providing the information and recommended action.
 *
 */
export interface JobErrorDetails {
  /**
   * @member {string} [errorMessage] Message for the error.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly errorMessage?: string;
  /**
   * @member {number} [errorCode] Code for the error.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly errorCode?: number;
  /**
   * @member {string} [recommendedAction] Recommended action for the error.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly recommendedAction?: string;
  /**
   * @member {string} [exceptionMessage] Contains the non localized exception
   * message
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly exceptionMessage?: string;
}

/**
 * @interface
 * An interface representing JobStages.
 * Job stages.
 *
 */
export interface JobStages {
  /**
   * @member {StageName} [stageName] Name of the job stage. Possible values
   * include: 'DeviceOrdered', 'DevicePrepared', 'Dispatched', 'Delivered',
   * 'PickedUp', 'AtAzureDC', 'DataCopy', 'Completed', 'CompletedWithErrors',
   * 'Cancelled', 'Failed_IssueReportedAtCustomer',
   * 'Failed_IssueDetectedAtAzureDC', 'Aborted'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly stageName?: StageName;
  /**
   * @member {string} [displayName] Display name of the job stage.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly displayName?: string;
  /**
   * @member {StageStatus} [stageStatus] Status of the job stage. Possible
   * values include: 'None', 'InProgress', 'Succeeded', 'Failed', 'Cancelled',
   * 'Cancelling', 'SucceededWithErrors'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly stageStatus?: StageStatus;
  /**
   * @member {Date} [stageTime] Time for the job stage in UTC ISO 8601 format.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly stageTime?: Date;
  /**
   * @member {any} [jobStageDetails] Job Stage Details
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly jobStageDetails?: any;
  /**
   * @member {JobErrorDetails[]} [errorDetails] Error details for the stage.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly errorDetails?: JobErrorDetails[];
}

/**
 * @interface
 * An interface representing PackageShippingDetails.
 * Shipping details.
 *
 */
export interface PackageShippingDetails {
  /**
   * @member {string} [carrierName] Name of the carrier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly carrierName?: string;
  /**
   * @member {string} [trackingId] Tracking Id of shipment.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly trackingId?: string;
  /**
   * @member {string} [trackingUrl] Url where shipment can be tracked.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly trackingUrl?: string;
}

/**
 * @interface
 * An interface representing Preferences.
 * Preferences related to the order
 *
 */
export interface Preferences {
  /**
   * @member {string[]} [preferredDataCenterRegion]
   */
  preferredDataCenterRegion?: string[];
}

/**
 * @interface
 * An interface representing Resource.
 * Model of the Resource.
 *
 * @extends BaseResource
 */
export interface Resource extends BaseResource {
  /**
   * @member {string} location The location of the resource. This will be one
   * of the supported and registered Azure Regions (e.g. West US, East US,
   * Southeast Asia, etc.). The region of a resource cannot be changed once it
   * is created, but if an identical region is specified on update the request
   * will succeed.
   */
  location: string;
  /**
   * @member {{ [propertyName: string]: string }} [tags] The list of key value
   * pairs that describe the resource. These tags can be used in viewing and
   * grouping this resource (across resource groups).
   */
  tags?: { [propertyName: string]: string };
  /**
   * @member {Sku} sku The sku type.
   */
  sku: Sku;
}

/**
 * @interface
 * An interface representing JobResource.
 * Job Resource.
 *
 * @extends Resource
 */
export interface JobResource extends Resource {
  /**
   * @member {boolean} [isCancellable] Describes whether the job is cancellable
   * or not.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly isCancellable?: boolean;
  /**
   * @member {boolean} [isDeletable] Describes whether the job is deletable or
   * not.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly isDeletable?: boolean;
  /**
   * @member {boolean} [isShippingAddressEditable] Describes whether the
   * shipping address is editable or not.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly isShippingAddressEditable?: boolean;
  /**
   * @member {StageName} [status] Name of the stage which is in progress.
   * Possible values include: 'DeviceOrdered', 'DevicePrepared', 'Dispatched',
   * 'Delivered', 'PickedUp', 'AtAzureDC', 'DataCopy', 'Completed',
   * 'CompletedWithErrors', 'Cancelled', 'Failed_IssueReportedAtCustomer',
   * 'Failed_IssueDetectedAtAzureDC', 'Aborted'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly status?: StageName;
  /**
   * @member {Date} [startTime] Time at which the job was started in UTC ISO
   * 8601 format.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly startTime?: Date;
  /**
   * @member {ErrorModel} [error] Top level error for the job.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly error?: ErrorModel;
  /**
   * @member {JobDetailsUnion} [details] Details of a job run. This field will
   * only be sent for expand details filter.
   */
  details?: JobDetailsUnion;
  /**
   * @member {string} [cancellationReason] Reason for cancellation.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly cancellationReason?: string;
  /**
   * @member {string} [name] Name of the object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [id] Id of the object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [type] Type of the object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: string;
}

/**
 * @interface
 * An interface representing UpdateJobDetails.
 * Job details for update.
 *
 */
export interface UpdateJobDetails {
  /**
   * @member {ContactDetails} [contactDetails] Contact details for notification
   * and shipping.
   */
  contactDetails?: ContactDetails;
  /**
   * @member {ShippingAddress} [shippingAddress] Shipping address of the
   * customer.
   */
  shippingAddress?: ShippingAddress;
}

/**
 * @interface
 * An interface representing JobResourceUpdateParameter.
 * The JobResourceUpdateParameter.
 *
 */
export interface JobResourceUpdateParameter {
  /**
   * @member {UpdateJobDetails} [details] Details of a job to be updated.
   */
  details?: UpdateJobDetails;
  /**
   * @member {DestinationAccountDetails[]} [destinationAccountDetails]
   * Destination account details.
   */
  destinationAccountDetails?: DestinationAccountDetails[];
  /**
   * @member {{ [propertyName: string]: string }} [tags] The list of key value
   * pairs that describe the resource. These tags can be used in viewing and
   * grouping this resource (across resource groups).
   */
  tags?: { [propertyName: string]: string };
}

/**
 * @interface
 * An interface representing OperationDisplay.
 * Operation display
 *
 */
export interface OperationDisplay {
  /**
   * @member {string} [provider] Provider name.
   */
  provider?: string;
  /**
   * @member {string} [resource] Resource name.
   */
  resource?: string;
  /**
   * @member {string} [operation] Localized name of the operation for display
   * purpose.
   */
  operation?: string;
  /**
   * @member {string} [description] Localized description of the operation for
   * display purpose.
   */
  description?: string;
}

/**
 * @interface
 * An interface representing Operation.
 * Operation entity.
 *
 */
export interface Operation {
  /**
   * @member {string} [name] Name of the operation. Format:
   * {resourceProviderNamespace}/{resourceType}/{read|write|delete|action}
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {OperationDisplay} [display] Operation display values.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly display?: OperationDisplay;
  /**
   * @member {any} [properties] Operation properties.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly properties?: any;
  /**
   * @member {string} [origin] Origin of the operation. Can be :
   * user|system|user,system
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly origin?: string;
}

/**
 * @interface
 * An interface representing ShipmentPickUpRequest.
 * Shipment pick up request details.
 *
 */
export interface ShipmentPickUpRequest {
  /**
   * @member {Date} startTime Minimum date after which the pick up should
   * commence, this must be in local time of pick up area.
   */
  startTime: Date;
  /**
   * @member {Date} endTime Maximum date before which the pick up should
   * commence, this must be in local time of pick up area.
   */
  endTime: Date;
  /**
   * @member {string} shipmentLocation Shipment Location in the pickup place.
   * Eg.front desk
   */
  shipmentLocation: string;
}

/**
 * @interface
 * An interface representing ShipmentPickUpResponse.
 * Shipment pick up response.
 *
 */
export interface ShipmentPickUpResponse {
  /**
   * @member {string} [confirmationNumber] Confirmation number for the pick up
   * request.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly confirmationNumber?: string;
  /**
   * @member {Date} [readyByTime] Time by which shipment should be ready for
   * pick up, this is in local time of pick up area.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly readyByTime?: Date;
}

/**
 * @interface
 * An interface representing UnencryptedCredentials.
 * Unencrypted credentials for accessing device.
 *
 */
export interface UnencryptedCredentials {
  /**
   * @member {string} [jobName] Name of the job.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly jobName?: string;
  /**
   * @member {JobSecretsUnion} [jobSecrets] Secrets related to this job.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly jobSecrets?: JobSecretsUnion;
}

/**
 * @interface
 * An interface representing ValidateAddress.
 * The requirements to validate customer address where the device needs to be
 * shipped.
 *
 */
export interface ValidateAddress {
  /**
   * @member {ShippingAddress} shippingAddress Shipping address of the
   * customer.
   */
  shippingAddress: ShippingAddress;
  /**
   * @member {SkuName} deviceType Device type to be used for the job. Possible
   * values include: 'DataBox', 'DataBoxDisk', 'DataBoxHeavy'
   */
  deviceType: SkuName;
}

/**
 * @interface
 * An interface representing JobsListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface JobsListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [skipToken] $skipToken is supported on Get list of jobs,
   * which provides the next page in the list of jobs.
   */
  skipToken?: string;
}

/**
 * @interface
 * An interface representing JobsListByResourceGroupOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface JobsListByResourceGroupOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [skipToken] $skipToken is supported on Get list of jobs,
   * which provides the next page in the list of jobs.
   */
  skipToken?: string;
}

/**
 * @interface
 * An interface representing JobsGetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface JobsGetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [expand] $expand is supported on details parameter for
   * job, which provides details on the job stages.
   */
  expand?: string;
}

/**
 * @interface
 * An interface representing JobsUpdateOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface JobsUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [ifMatch] Defines the If-Match condition. The patch will
   * be performed only if the ETag of the job on the server matches this value.
   */
  ifMatch?: string;
}

/**
 * @interface
 * An interface representing JobsBeginUpdateOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface JobsBeginUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [ifMatch] Defines the If-Match condition. The patch will
   * be performed only if the ETag of the job on the server matches this value.
   */
  ifMatch?: string;
}

/**
 * @interface
 * An interface representing DataBoxManagementClientOptions.
 * @extends AzureServiceClientOptions
 */
export interface DataBoxManagementClientOptions extends AzureServiceClientOptions {
  /**
   * @member {string} [baseUri]
   */
  baseUri?: string;
}


/**
 * @interface
 * An interface representing the OperationList.
 * Operation Collection.
 *
 * @extends Array<Operation>
 */
export interface OperationList extends Array<Operation> {
  /**
   * @member {string} [nextLink] Link for the next set of operations.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the JobResourceList.
 * Job Resource Collection
 *
 * @extends Array<JobResource>
 */
export interface JobResourceList extends Array<JobResource> {
  /**
   * @member {string} [nextLink] Link for the next set of job resources.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the UnencryptedCredentialsList.
 * List of unencrypted credentials for accessing device.
 *
 * @extends Array<UnencryptedCredentials>
 */
export interface UnencryptedCredentialsList extends Array<UnencryptedCredentials> {
  /**
   * @member {string} [nextLink] Link for the next set of unencrypted
   * credentials.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the AvailableSkusResult.
 * The available skus operation response.
 *
 * @extends Array<SkuInformation>
 */
export interface AvailableSkusResult extends Array<SkuInformation> {
  /**
   * @member {string} [nextLink] Link for the next set of skus.
   */
  nextLink?: string;
}

/**
 * Defines values for ShareDestinationFormatType.
 * Possible values include: 'UnknownType', 'HCS', 'BlockBlob', 'PageBlob',
 * 'AzureFile'
 * @readonly
 * @enum {string}
 */
export enum ShareDestinationFormatType {
  /**
   * Unknown format.
   */
  UnknownType = 'UnknownType',
  /**
   * Storsimple data format.
   */
  HCS = 'HCS',
  /**
   * Azure storage block blob format.
   */
  BlockBlob = 'BlockBlob',
  /**
   * Azure storage page blob format.
   */
  PageBlob = 'PageBlob',
  /**
   * Azure storage file format.
   */
  AzureFile = 'AzureFile',
}

/**
 * Defines values for AccessProtocol.
 * Possible values include: 'SMB', 'NFS'
 * @readonly
 * @enum {string}
 */
export enum AccessProtocol {
  /**
   * Server Message Block protocol(SMB).
   */
  SMB = 'SMB',
  /**
   * Network File System protocol(NFS).
   */
  NFS = 'NFS',
}

/**
 * Defines values for AddressValidationStatus.
 * Possible values include: 'Valid', 'Invalid', 'Ambiguous'
 * @readonly
 * @enum {string}
 */
export enum AddressValidationStatus {
  /**
   * Address provided is valid.
   */
  Valid = 'Valid',
  /**
   * Address provided is invalid or not supported.
   */
  Invalid = 'Invalid',
  /**
   * Address provided is ambiguous, please choose one of the alternate
   * addresses returned.
   */
  Ambiguous = 'Ambiguous',
}

/**
 * Defines values for AddressType.
 * Possible values include: 'None', 'Residential', 'Commercial'
 * @readonly
 * @enum {string}
 */
export enum AddressType {
  /**
   * Address type not known.
   */
  None = 'None',
  /**
   * Residential Address.
   */
  Residential = 'Residential',
  /**
   * Commercial Address.
   */
  Commercial = 'Commercial',
}

/**
 * Defines values for SkuName.
 * Possible values include: 'DataBox', 'DataBoxDisk', 'DataBoxHeavy'
 * @readonly
 * @enum {string}
 */
export enum SkuName {
  /**
   * Databox.
   */
  DataBox = 'DataBox',
  /**
   * DataboxDisk.
   */
  DataBoxDisk = 'DataBoxDisk',
  /**
   * DataboxHeavy.
   */
  DataBoxHeavy = 'DataBoxHeavy',
}

/**
 * Defines values for SkuDisabledReason.
 * Possible values include: 'None', 'Country', 'Region', 'Feature', 'OfferType'
 * @readonly
 * @enum {string}
 */
export enum SkuDisabledReason {
  /**
   * SKU is not disabled.
   */
  None = 'None',
  /**
   * SKU is not available in the requested country.
   */
  Country = 'Country',
  /**
   * SKU is not available to push data to the requested storage account region.
   */
  Region = 'Region',
  /**
   * Required features are not enabled for the SKU.
   */
  Feature = 'Feature',
  /**
   * Subscription does not have required offer types for the SKU.
   */
  OfferType = 'OfferType',
}

/**
 * Defines values for NotificationStageName.
 * Possible values include: 'DevicePrepared', 'Dispatched', 'Delivered',
 * 'PickedUp', 'AtAzureDC', 'DataCopy'
 * @readonly
 * @enum {string}
 */
export enum NotificationStageName {
  /**
   * Notification at device prepared stage.
   */
  DevicePrepared = 'DevicePrepared',
  /**
   * Notification at device dispatched stage.
   */
  Dispatched = 'Dispatched',
  /**
   * Notification at device delivered stage.
   */
  Delivered = 'Delivered',
  /**
   * Notification at device picked up from user stage.
   */
  PickedUp = 'PickedUp',
  /**
   * Notification at device received at azure datacenter stage.
   */
  AtAzureDC = 'AtAzureDC',
  /**
   * Notification at data copy started stage.
   */
  DataCopy = 'DataCopy',
}

/**
 * Defines values for CopyStatus.
 * Possible values include: 'NotStarted', 'InProgress', 'Completed',
 * 'CompletedWithErrors', 'Failed', 'NotReturned'
 * @readonly
 * @enum {string}
 */
export enum CopyStatus {
  /**
   * Data copy hasnt started yet.
   */
  NotStarted = 'NotStarted',
  /**
   * Data copy is in progress.
   */
  InProgress = 'InProgress',
  /**
   * Data copy completed.
   */
  Completed = 'Completed',
  /**
   * Data copy completed with errors.
   */
  CompletedWithErrors = 'CompletedWithErrors',
  /**
   * Data copy failed. No data was copied.
   */
  Failed = 'Failed',
  /**
   * No copy triggered as device was not returned.
   */
  NotReturned = 'NotReturned',
}

/**
 * Defines values for StageName.
 * Possible values include: 'DeviceOrdered', 'DevicePrepared', 'Dispatched',
 * 'Delivered', 'PickedUp', 'AtAzureDC', 'DataCopy', 'Completed',
 * 'CompletedWithErrors', 'Cancelled', 'Failed_IssueReportedAtCustomer',
 * 'Failed_IssueDetectedAtAzureDC', 'Aborted'
 * @readonly
 * @enum {string}
 */
export enum StageName {
  /**
   * An order has been created.
   */
  DeviceOrdered = 'DeviceOrdered',
  /**
   * A device has been prepared for the order.
   */
  DevicePrepared = 'DevicePrepared',
  /**
   * Device has been dispatched to the user of the order.
   */
  Dispatched = 'Dispatched',
  /**
   * Device has been delivered to the user of the order.
   */
  Delivered = 'Delivered',
  /**
   * Device has been picked up from user and in transit to azure datacenter.
   */
  PickedUp = 'PickedUp',
  /**
   * Device has been received at azure datacenter from the user.
   */
  AtAzureDC = 'AtAzureDC',
  /**
   * Data copy from the device at azure datacenter.
   */
  DataCopy = 'DataCopy',
  /**
   * Order has completed.
   */
  Completed = 'Completed',
  /**
   * Order has completed with errors.
   */
  CompletedWithErrors = 'CompletedWithErrors',
  /**
   * Order has been cancelled.
   */
  Cancelled = 'Cancelled',
  /**
   * Order has failed due to issue reported by user.
   */
  FailedIssueReportedAtCustomer = 'Failed_IssueReportedAtCustomer',
  /**
   * Order has failed due to issue detected at azure datacenter.
   */
  FailedIssueDetectedAtAzureDC = 'Failed_IssueDetectedAtAzureDC',
  /**
   * Order has been aborted.
   */
  Aborted = 'Aborted',
}

/**
 * Defines values for StageStatus.
 * Possible values include: 'None', 'InProgress', 'Succeeded', 'Failed',
 * 'Cancelled', 'Cancelling', 'SucceededWithErrors'
 * @readonly
 * @enum {string}
 */
export enum StageStatus {
  /**
   * No status available yet.
   */
  None = 'None',
  /**
   * Stage is in progress.
   */
  InProgress = 'InProgress',
  /**
   * Stage has succeeded.
   */
  Succeeded = 'Succeeded',
  /**
   * Stage has failed.
   */
  Failed = 'Failed',
  /**
   * Stage has been cancelled.
   */
  Cancelled = 'Cancelled',
  /**
   * Stage is cancelling.
   */
  Cancelling = 'Cancelling',
  /**
   * Stage has succeeded with errors.
   */
  SucceededWithErrors = 'SucceededWithErrors',
}

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationList;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type OperationsListNextResponse = OperationList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationList;
    };
};

/**
 * Contains response data for the list operation.
 */
export type JobsListResponse = JobResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobResourceList;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type JobsListByResourceGroupResponse = JobResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobResourceList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type JobsGetResponse = JobResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobResource;
    };
};

/**
 * Contains response data for the create operation.
 */
export type JobsCreateResponse = JobResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobResource;
    };
};

/**
 * Contains response data for the update operation.
 */
export type JobsUpdateResponse = JobResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobResource;
    };
};

/**
 * Contains response data for the bookShipmentPickUp operation.
 */
export type JobsBookShipmentPickUpResponse = ShipmentPickUpResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ShipmentPickUpResponse;
    };
};

/**
 * Contains response data for the listCredentials operation.
 */
export type JobsListCredentialsResponse = UnencryptedCredentialsList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: UnencryptedCredentialsList;
    };
};

/**
 * Contains response data for the beginCreate operation.
 */
export type JobsBeginCreateResponse = JobResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobResource;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type JobsBeginUpdateResponse = JobResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobResource;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type JobsListNextResponse = JobResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobResourceList;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type JobsListByResourceGroupNextResponse = JobResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobResourceList;
    };
};

/**
 * Contains response data for the listAvailableSkus operation.
 */
export type ServiceListAvailableSkusResponse = AvailableSkusResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AvailableSkusResult;
    };
};

/**
 * Contains response data for the validateAddressMethod operation.
 */
export type ServiceValidateAddressMethodResponse = AddressValidationOutput & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AddressValidationOutput;
    };
};

/**
 * Contains response data for the listAvailableSkusNext operation.
 */
export type ServiceListAvailableSkusNextResponse = AvailableSkusResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AvailableSkusResult;
    };
};
