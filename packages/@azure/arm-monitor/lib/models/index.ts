/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "ms-rest-azure-js";
import * as msRest from "ms-rest-js";

export { BaseResource, CloudError };


/**
 * @interface
 * An interface representing Resource.
 * An azure resource object
 *
 * @extends BaseResource
 */
export interface Resource extends BaseResource {
  /**
   * @member {string} [id] Azure resource Id
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [name] Azure resource name
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [type] Azure resource type
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: string;
  /**
   * @member {string} location Resource location
   */
  location: string;
  /**
   * @member {{ [propertyName: string]: string }} [tags] Resource tags
   */
  tags?: { [propertyName: string]: string };
}

/**
 * @interface
 * An interface representing ScaleCapacity.
 * The number of instances that can be used during this profile.
 *
 */
export interface ScaleCapacity {
  /**
   * @member {string} minimum the minimum number of instances for the resource.
   */
  minimum: string;
  /**
   * @member {string} maximum the maximum number of instances for the resource.
   * The actual maximum number of instances is limited by the cores that are
   * available in the subscription.
   */
  maximum: string;
  /**
   * @member {string} default the number of instances that will be set if
   * metrics are not available for evaluation. The default is only used if the
   * current instance count is lower than the default.
   */
  default: string;
}

/**
 * @interface
 * An interface representing MetricTrigger.
 * The trigger that results in a scaling action.
 *
 */
export interface MetricTrigger {
  /**
   * @member {string} metricName the name of the metric that defines what the
   * rule monitors.
   */
  metricName: string;
  /**
   * @member {string} metricResourceUri the resource identifier of the resource
   * the rule monitors.
   */
  metricResourceUri: string;
  /**
   * @member {string} timeGrain the granularity of metrics the rule monitors.
   * Must be one of the predefined values returned from metric definitions for
   * the metric. Must be between 12 hours and 1 minute.
   */
  timeGrain: string;
  /**
   * @member {MetricStatisticType} statistic the metric statistic type. How the
   * metrics from multiple instances are combined. Possible values include:
   * 'Average', 'Min', 'Max', 'Sum'
   */
  statistic: MetricStatisticType;
  /**
   * @member {string} timeWindow the range of time in which instance data is
   * collected. This value must be greater than the delay in metric collection,
   * which can vary from resource-to-resource. Must be between 12 hours and 5
   * minutes.
   */
  timeWindow: string;
  /**
   * @member {TimeAggregationType} timeAggregation time aggregation type. How
   * the data that is collected should be combined over time. The default value
   * is Average. Possible values include: 'Average', 'Minimum', 'Maximum',
   * 'Total', 'Count', 'Last'
   */
  timeAggregation: TimeAggregationType;
  /**
   * @member {ComparisonOperationType} operator the operator that is used to
   * compare the metric data and the threshold. Possible values include:
   * 'Equals', 'NotEquals', 'GreaterThan', 'GreaterThanOrEqual', 'LessThan',
   * 'LessThanOrEqual'
   */
  operator: ComparisonOperationType;
  /**
   * @member {number} threshold the threshold of the metric that triggers the
   * scale action.
   */
  threshold: number;
}

/**
 * @interface
 * An interface representing ScaleAction.
 * The parameters for the scaling action.
 *
 */
export interface ScaleAction {
  /**
   * @member {ScaleDirection} direction the scale direction. Whether the
   * scaling action increases or decreases the number of instances. Possible
   * values include: 'None', 'Increase', 'Decrease'
   */
  direction: ScaleDirection;
  /**
   * @member {ScaleType} type the type of action that should occur when the
   * scale rule fires. Possible values include: 'ChangeCount',
   * 'PercentChangeCount', 'ExactCount'
   */
  type: ScaleType;
  /**
   * @member {string} [value] the number of instances that are involved in the
   * scaling action. This value must be 1 or greater. The default value is 1.
   * Default value: '1' .
   */
  value?: string;
  /**
   * @member {string} cooldown the amount of time to wait since the last
   * scaling action before this action occurs. It must be between 1 week and 1
   * minute in ISO 8601 format.
   */
  cooldown: string;
}

/**
 * @interface
 * An interface representing ScaleRule.
 * A rule that provide the triggers and parameters for the scaling action.
 *
 */
export interface ScaleRule {
  /**
   * @member {MetricTrigger} metricTrigger the trigger that results in a
   * scaling action.
   */
  metricTrigger: MetricTrigger;
  /**
   * @member {ScaleAction} scaleAction the parameters for the scaling action.
   */
  scaleAction: ScaleAction;
}

/**
 * @interface
 * An interface representing TimeWindow.
 * A specific date-time for the profile.
 *
 */
export interface TimeWindow {
  /**
   * @member {string} [timeZone] the timezone of the start and end times for
   * the profile. Some examples of valid timezones are: Dateline Standard Time,
   * UTC-11, Hawaiian Standard Time, Alaskan Standard Time, Pacific Standard
   * Time (Mexico), Pacific Standard Time, US Mountain Standard Time, Mountain
   * Standard Time (Mexico), Mountain Standard Time, Central America Standard
   * Time, Central Standard Time, Central Standard Time (Mexico), Canada
   * Central Standard Time, SA Pacific Standard Time, Eastern Standard Time, US
   * Eastern Standard Time, Venezuela Standard Time, Paraguay Standard Time,
   * Atlantic Standard Time, Central Brazilian Standard Time, SA Western
   * Standard Time, Pacific SA Standard Time, Newfoundland Standard Time, E.
   * South America Standard Time, Argentina Standard Time, SA Eastern Standard
   * Time, Greenland Standard Time, Montevideo Standard Time, Bahia Standard
   * Time, UTC-02, Mid-Atlantic Standard Time, Azores Standard Time, Cape Verde
   * Standard Time, Morocco Standard Time, UTC, GMT Standard Time, Greenwich
   * Standard Time, W. Europe Standard Time, Central Europe Standard Time,
   * Romance Standard Time, Central European Standard Time, W. Central Africa
   * Standard Time, Namibia Standard Time, Jordan Standard Time, GTB Standard
   * Time, Middle East Standard Time, Egypt Standard Time, Syria Standard Time,
   * E. Europe Standard Time, South Africa Standard Time, FLE Standard Time,
   * Turkey Standard Time, Israel Standard Time, Kaliningrad Standard Time,
   * Libya Standard Time, Arabic Standard Time, Arab Standard Time, Belarus
   * Standard Time, Russian Standard Time, E. Africa Standard Time, Iran
   * Standard Time, Arabian Standard Time, Azerbaijan Standard Time, Russia
   * Time Zone 3, Mauritius Standard Time, Georgian Standard Time, Caucasus
   * Standard Time, Afghanistan Standard Time, West Asia Standard Time,
   * Ekaterinburg Standard Time, Pakistan Standard Time, India Standard Time,
   * Sri Lanka Standard Time, Nepal Standard Time, Central Asia Standard Time,
   * Bangladesh Standard Time, N. Central Asia Standard Time, Myanmar Standard
   * Time, SE Asia Standard Time, North Asia Standard Time, China Standard
   * Time, North Asia East Standard Time, Singapore Standard Time, W. Australia
   * Standard Time, Taipei Standard Time, Ulaanbaatar Standard Time, Tokyo
   * Standard Time, Korea Standard Time, Yakutsk Standard Time, Cen. Australia
   * Standard Time, AUS Central Standard Time, E. Australia Standard Time, AUS
   * Eastern Standard Time, West Pacific Standard Time, Tasmania Standard Time,
   * Magadan Standard Time, Vladivostok Standard Time, Russia Time Zone 10,
   * Central Pacific Standard Time, Russia Time Zone 11, New Zealand Standard
   * Time, UTC+12, Fiji Standard Time, Kamchatka Standard Time, Tonga Standard
   * Time, Samoa Standard Time, Line Islands Standard Time
   */
  timeZone?: string;
  /**
   * @member {Date} start the start time for the profile in ISO 8601 format.
   */
  start: Date;
  /**
   * @member {Date} end the end time for the profile in ISO 8601 format.
   */
  end: Date;
}

/**
 * @interface
 * An interface representing RecurrentSchedule.
 * The scheduling constraints for when the profile begins.
 *
 */
export interface RecurrentSchedule {
  /**
   * @member {string} timeZone the timezone for the hours of the profile. Some
   * examples of valid timezones are: Dateline Standard Time, UTC-11, Hawaiian
   * Standard Time, Alaskan Standard Time, Pacific Standard Time (Mexico),
   * Pacific Standard Time, US Mountain Standard Time, Mountain Standard Time
   * (Mexico), Mountain Standard Time, Central America Standard Time, Central
   * Standard Time, Central Standard Time (Mexico), Canada Central Standard
   * Time, SA Pacific Standard Time, Eastern Standard Time, US Eastern Standard
   * Time, Venezuela Standard Time, Paraguay Standard Time, Atlantic Standard
   * Time, Central Brazilian Standard Time, SA Western Standard Time, Pacific
   * SA Standard Time, Newfoundland Standard Time, E. South America Standard
   * Time, Argentina Standard Time, SA Eastern Standard Time, Greenland
   * Standard Time, Montevideo Standard Time, Bahia Standard Time, UTC-02,
   * Mid-Atlantic Standard Time, Azores Standard Time, Cape Verde Standard
   * Time, Morocco Standard Time, UTC, GMT Standard Time, Greenwich Standard
   * Time, W. Europe Standard Time, Central Europe Standard Time, Romance
   * Standard Time, Central European Standard Time, W. Central Africa Standard
   * Time, Namibia Standard Time, Jordan Standard Time, GTB Standard Time,
   * Middle East Standard Time, Egypt Standard Time, Syria Standard Time, E.
   * Europe Standard Time, South Africa Standard Time, FLE Standard Time,
   * Turkey Standard Time, Israel Standard Time, Kaliningrad Standard Time,
   * Libya Standard Time, Arabic Standard Time, Arab Standard Time, Belarus
   * Standard Time, Russian Standard Time, E. Africa Standard Time, Iran
   * Standard Time, Arabian Standard Time, Azerbaijan Standard Time, Russia
   * Time Zone 3, Mauritius Standard Time, Georgian Standard Time, Caucasus
   * Standard Time, Afghanistan Standard Time, West Asia Standard Time,
   * Ekaterinburg Standard Time, Pakistan Standard Time, India Standard Time,
   * Sri Lanka Standard Time, Nepal Standard Time, Central Asia Standard Time,
   * Bangladesh Standard Time, N. Central Asia Standard Time, Myanmar Standard
   * Time, SE Asia Standard Time, North Asia Standard Time, China Standard
   * Time, North Asia East Standard Time, Singapore Standard Time, W. Australia
   * Standard Time, Taipei Standard Time, Ulaanbaatar Standard Time, Tokyo
   * Standard Time, Korea Standard Time, Yakutsk Standard Time, Cen. Australia
   * Standard Time, AUS Central Standard Time, E. Australia Standard Time, AUS
   * Eastern Standard Time, West Pacific Standard Time, Tasmania Standard Time,
   * Magadan Standard Time, Vladivostok Standard Time, Russia Time Zone 10,
   * Central Pacific Standard Time, Russia Time Zone 11, New Zealand Standard
   * Time, UTC+12, Fiji Standard Time, Kamchatka Standard Time, Tonga Standard
   * Time, Samoa Standard Time, Line Islands Standard Time
   */
  timeZone: string;
  /**
   * @member {string[]} days the collection of days that the profile takes
   * effect on. Possible values are Sunday through Saturday.
   */
  days: string[];
  /**
   * @member {number[]} hours A collection of hours that the profile takes
   * effect on. Values supported are 0 to 23 on the 24-hour clock (AM/PM times
   * are not supported).
   */
  hours: number[];
  /**
   * @member {number[]} minutes A collection of minutes at which the profile
   * takes effect at.
   */
  minutes: number[];
}

/**
 * @interface
 * An interface representing Recurrence.
 * The repeating times at which this profile begins. This element is not used
 * if the FixedDate element is used.
 *
 */
export interface Recurrence {
  /**
   * @member {RecurrenceFrequency} frequency the recurrence frequency. How
   * often the schedule profile should take effect. This value must be Week,
   * meaning each week will have the same set of profiles. For example, to set
   * a daily schedule, set **schedule** to every day of the week. The frequency
   * property specifies that the schedule is repeated weekly. Possible values
   * include: 'None', 'Second', 'Minute', 'Hour', 'Day', 'Week', 'Month',
   * 'Year'
   */
  frequency: RecurrenceFrequency;
  /**
   * @member {RecurrentSchedule} schedule the scheduling constraints for when
   * the profile begins.
   */
  schedule: RecurrentSchedule;
}

/**
 * @interface
 * An interface representing AutoscaleProfile.
 * Autoscale profile.
 *
 */
export interface AutoscaleProfile {
  /**
   * @member {string} name the name of the profile.
   */
  name: string;
  /**
   * @member {ScaleCapacity} capacity the number of instances that can be used
   * during this profile.
   */
  capacity: ScaleCapacity;
  /**
   * @member {ScaleRule[]} rules the collection of rules that provide the
   * triggers and parameters for the scaling action. A maximum of 10 rules can
   * be specified.
   */
  rules: ScaleRule[];
  /**
   * @member {TimeWindow} [fixedDate] the specific date-time for the profile.
   * This element is not used if the Recurrence element is used.
   */
  fixedDate?: TimeWindow;
  /**
   * @member {Recurrence} [recurrence] the repeating times at which this
   * profile begins. This element is not used if the FixedDate element is used.
   */
  recurrence?: Recurrence;
}

/**
 * @interface
 * An interface representing EmailNotification.
 * Email notification of an autoscale event.
 *
 */
export interface EmailNotification {
  /**
   * @member {boolean} [sendToSubscriptionAdministrator] a value indicating
   * whether to send email to subscription administrator.
   */
  sendToSubscriptionAdministrator?: boolean;
  /**
   * @member {boolean} [sendToSubscriptionCoAdministrators] a value indicating
   * whether to send email to subscription co-administrators.
   */
  sendToSubscriptionCoAdministrators?: boolean;
  /**
   * @member {string[]} [customEmails] the custom e-mails list. This value can
   * be null or empty, in which case this attribute will be ignored.
   */
  customEmails?: string[];
}

/**
 * @interface
 * An interface representing WebhookNotification.
 * Webhook notification of an autoscale event.
 *
 */
export interface WebhookNotification {
  /**
   * @member {string} [serviceUri] the service address to receive the
   * notification.
   */
  serviceUri?: string;
  /**
   * @member {{ [propertyName: string]: string }} [properties] a property bag
   * of settings. This value can be empty.
   */
  properties?: { [propertyName: string]: string };
}

/**
 * @interface
 * An interface representing AutoscaleNotification.
 * Autoscale notification.
 *
 */
export interface AutoscaleNotification {
  /**
   * @member {EmailNotification} [email] the email notification.
   */
  email?: EmailNotification;
  /**
   * @member {WebhookNotification[]} [webhooks] the collection of webhook
   * notifications.
   */
  webhooks?: WebhookNotification[];
}

/**
 * @interface
 * An interface representing AutoscaleSettingResource.
 * The autoscale setting resource.
 *
 * @extends Resource
 */
export interface AutoscaleSettingResource extends Resource {
  /**
   * @member {AutoscaleProfile[]} profiles the collection of automatic scaling
   * profiles that specify different scaling parameters for different time
   * periods. A maximum of 20 profiles can be specified.
   */
  profiles: AutoscaleProfile[];
  /**
   * @member {AutoscaleNotification[]} [notifications] the collection of
   * notifications.
   */
  notifications?: AutoscaleNotification[];
  /**
   * @member {boolean} [enabled] the enabled flag. Specifies whether automatic
   * scaling is enabled for the resource. The default value is 'true'. Default
   * value: true .
   */
  enabled?: boolean;
  /**
   * @member {string} [autoscaleSettingResourceName] the name of the autoscale
   * setting.
   */
  autoscaleSettingResourceName?: string;
  /**
   * @member {string} [targetResourceUri] the resource identifier of the
   * resource that the autoscale setting should be added to.
   */
  targetResourceUri?: string;
}

/**
 * @interface
 * An interface representing AutoscaleSettingResourcePatch.
 * The autoscale setting object for patch operations.
 *
 */
export interface AutoscaleSettingResourcePatch {
  /**
   * @member {{ [propertyName: string]: string }} [tags] Resource tags
   */
  tags?: { [propertyName: string]: string };
  /**
   * @member {AutoscaleProfile[]} profiles the collection of automatic scaling
   * profiles that specify different scaling parameters for different time
   * periods. A maximum of 20 profiles can be specified.
   */
  profiles: AutoscaleProfile[];
  /**
   * @member {AutoscaleNotification[]} [notifications] the collection of
   * notifications.
   */
  notifications?: AutoscaleNotification[];
  /**
   * @member {boolean} [enabled] the enabled flag. Specifies whether automatic
   * scaling is enabled for the resource. The default value is 'true'. Default
   * value: true .
   */
  enabled?: boolean;
  /**
   * @member {string} [name] the name of the autoscale setting.
   */
  name?: string;
  /**
   * @member {string} [targetResourceUri] the resource identifier of the
   * resource that the autoscale setting should be added to.
   */
  targetResourceUri?: string;
}

/**
 * @interface
 * An interface representing ErrorResponse.
 * Describes the format of Error response.
 *
 */
export interface ErrorResponse {
  /**
   * @member {string} [code] Error code
   */
  code?: string;
  /**
   * @member {string} [message] Error message indicating why the operation
   * failed.
   */
  message?: string;
}

/**
 * @interface
 * An interface representing OperationDisplay.
 * Display metadata associated with the operation.
 *
 */
export interface OperationDisplay {
  /**
   * @member {string} [provider] Service provider: Microsoft.Insights
   */
  provider?: string;
  /**
   * @member {string} [resource] Resource on which the operation is performed:
   * AlertRules, Autoscale, etc.
   */
  resource?: string;
  /**
   * @member {string} [operation] Operation type: Read, write, delete, etc.
   */
  operation?: string;
}

/**
 * @interface
 * An interface representing Operation.
 * Microsoft Insights API operation definition.
 *
 */
export interface Operation {
  /**
   * @member {string} [name] Operation name: {provider}/{resource}/{operation}
   */
  name?: string;
  /**
   * @member {OperationDisplay} [display] Display metadata associated with the
   * operation.
   */
  display?: OperationDisplay;
}

/**
 * @interface
 * An interface representing OperationListResult.
 * Result of the request to list Microsoft.Insights operations. It contains a
 * list of operations and a URL link to get the next set of results.
 *
 */
export interface OperationListResult {
  /**
   * @member {Operation[]} [value] List of operations supported by the
   * Microsoft.Insights provider.
   */
  value?: Operation[];
  /**
   * @member {string} [nextLink] URL to get the next set of operation list
   * results if there are any.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing Incident.
 * An alert incident indicates the activation status of an alert rule.
 *
 */
export interface Incident {
  /**
   * @member {string} [name] Incident name.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [ruleName] Rule name that is associated with the
   * incident.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly ruleName?: string;
  /**
   * @member {boolean} [isActive] A boolean to indicate whether the incident is
   * active or resolved.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly isActive?: boolean;
  /**
   * @member {Date} [activatedTime] The time at which the incident was
   * activated in ISO8601 format.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly activatedTime?: Date;
  /**
   * @member {Date} [resolvedTime] The time at which the incident was resolved
   * in ISO8601 format. If null, it means the incident is still active.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly resolvedTime?: Date;
}

/**
 * Contains the possible cases for RuleDataSource.
 */
export type RuleDataSourceUnion = RuleDataSource | RuleMetricDataSource | RuleManagementEventDataSource;

/**
 * @interface
 * An interface representing RuleDataSource.
 * The resource from which the rule collects its data.
 *
 */
export interface RuleDataSource {
  /**
   * @member {string} odatatype Polymorphic Discriminator
   */
  odatatype: "RuleDataSource";
  /**
   * @member {string} [resourceUri] the resource identifier of the resource the
   * rule monitors. **NOTE**: this property cannot be updated for an existing
   * rule.
   */
  resourceUri?: string;
}

/**
 * Contains the possible cases for RuleCondition.
 */
export type RuleConditionUnion = RuleCondition | ThresholdRuleCondition | LocationThresholdRuleCondition | ManagementEventRuleCondition;

/**
 * @interface
 * An interface representing RuleCondition.
 * The condition that results in the alert rule being activated.
 *
 */
export interface RuleCondition {
  /**
   * @member {string} odatatype Polymorphic Discriminator
   */
  odatatype: "RuleCondition";
  /**
   * @member {RuleDataSourceUnion} [dataSource] the resource from which the
   * rule collects its data. For this type dataSource will always be of type
   * RuleMetricDataSource.
   */
  dataSource?: RuleDataSourceUnion;
}

/**
 * @interface
 * An interface representing RuleMetricDataSource.
 * A rule metric data source. The discriminator value is always
 * RuleMetricDataSource in this case.
 *
 */
export interface RuleMetricDataSource {
  /**
   * @member {string} odatatype Polymorphic Discriminator
   */
  odatatype: "Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource";
  /**
   * @member {string} [resourceUri] the resource identifier of the resource the
   * rule monitors. **NOTE**: this property cannot be updated for an existing
   * rule.
   */
  resourceUri?: string;
  /**
   * @member {string} [metricName] the name of the metric that defines what the
   * rule monitors.
   */
  metricName?: string;
}

/**
 * @interface
 * An interface representing RuleManagementEventClaimsDataSource.
 * The claims for a rule management event data source.
 *
 */
export interface RuleManagementEventClaimsDataSource {
  /**
   * @member {string} [emailAddress] the email address.
   */
  emailAddress?: string;
}

/**
 * @interface
 * An interface representing RuleManagementEventDataSource.
 * A rule management event data source. The discriminator fields is always
 * RuleManagementEventDataSource in this case.
 *
 */
export interface RuleManagementEventDataSource {
  /**
   * @member {string} odatatype Polymorphic Discriminator
   */
  odatatype: "Microsoft.Azure.Management.Insights.Models.RuleManagementEventDataSource";
  /**
   * @member {string} [resourceUri] the resource identifier of the resource the
   * rule monitors. **NOTE**: this property cannot be updated for an existing
   * rule.
   */
  resourceUri?: string;
  /**
   * @member {string} [eventName] the event name.
   */
  eventName?: string;
  /**
   * @member {string} [eventSource] the event source.
   */
  eventSource?: string;
  /**
   * @member {string} [level] the level.
   */
  level?: string;
  /**
   * @member {string} [operationName] The name of the operation that should be
   * checked for. If no name is provided, any operation will match.
   */
  operationName?: string;
  /**
   * @member {string} [resourceGroupName] the resource group name.
   */
  resourceGroupName?: string;
  /**
   * @member {string} [resourceProviderName] the resource provider name.
   */
  resourceProviderName?: string;
  /**
   * @member {string} [status] The status of the operation that should be
   * checked for. If no status is provided, any status will match.
   */
  status?: string;
  /**
   * @member {string} [subStatus] the substatus.
   */
  subStatus?: string;
  /**
   * @member {RuleManagementEventClaimsDataSource} [claims] the claims.
   */
  claims?: RuleManagementEventClaimsDataSource;
}

/**
 * @interface
 * An interface representing ThresholdRuleCondition.
 * A rule condition based on a metric crossing a threshold.
 *
 */
export interface ThresholdRuleCondition {
  /**
   * @member {string} odatatype Polymorphic Discriminator
   */
  odatatype: "Microsoft.Azure.Management.Insights.Models.ThresholdRuleCondition";
  /**
   * @member {RuleDataSourceUnion} [dataSource] the resource from which the
   * rule collects its data. For this type dataSource will always be of type
   * RuleMetricDataSource.
   */
  dataSource?: RuleDataSourceUnion;
  /**
   * @member {ConditionOperator} operator the operator used to compare the data
   * and the threshold. Possible values include: 'GreaterThan',
   * 'GreaterThanOrEqual', 'LessThan', 'LessThanOrEqual'
   */
  operator: ConditionOperator;
  /**
   * @member {number} threshold the threshold value that activates the alert.
   */
  threshold: number;
  /**
   * @member {string} [windowSize] the period of time (in ISO 8601 duration
   * format) that is used to monitor alert activity based on the threshold. If
   * specified then it must be between 5 minutes and 1 day.
   */
  windowSize?: string;
  /**
   * @member {TimeAggregationOperator} [timeAggregation] the time aggregation
   * operator. How the data that are collected should be combined over time.
   * The default value is the PrimaryAggregationType of the Metric. Possible
   * values include: 'Average', 'Minimum', 'Maximum', 'Total', 'Last'
   */
  timeAggregation?: TimeAggregationOperator;
}

/**
 * @interface
 * An interface representing LocationThresholdRuleCondition.
 * A rule condition based on a certain number of locations failing.
 *
 */
export interface LocationThresholdRuleCondition {
  /**
   * @member {string} odatatype Polymorphic Discriminator
   */
  odatatype: "Microsoft.Azure.Management.Insights.Models.LocationThresholdRuleCondition";
  /**
   * @member {RuleDataSourceUnion} [dataSource] the resource from which the
   * rule collects its data. For this type dataSource will always be of type
   * RuleMetricDataSource.
   */
  dataSource?: RuleDataSourceUnion;
  /**
   * @member {string} [windowSize] the period of time (in ISO 8601 duration
   * format) that is used to monitor alert activity based on the threshold. If
   * specified then it must be between 5 minutes and 1 day.
   */
  windowSize?: string;
  /**
   * @member {number} failedLocationCount the number of locations that must
   * fail to activate the alert.
   */
  failedLocationCount: number;
}

/**
 * @interface
 * An interface representing ManagementEventAggregationCondition.
 * How the data that is collected should be combined over time.
 *
 */
export interface ManagementEventAggregationCondition {
  /**
   * @member {ConditionOperator} [operator] the condition operator. Possible
   * values include: 'GreaterThan', 'GreaterThanOrEqual', 'LessThan',
   * 'LessThanOrEqual'
   */
  operator?: ConditionOperator;
  /**
   * @member {number} [threshold] The threshold value that activates the alert.
   */
  threshold?: number;
  /**
   * @member {string} [windowSize] the period of time (in ISO 8601 duration
   * format) that is used to monitor alert activity based on the threshold. If
   * specified then it must be between 5 minutes and 1 day.
   */
  windowSize?: string;
}

/**
 * @interface
 * An interface representing ManagementEventRuleCondition.
 * A management event rule condition.
 *
 */
export interface ManagementEventRuleCondition {
  /**
   * @member {string} odatatype Polymorphic Discriminator
   */
  odatatype: "Microsoft.Azure.Management.Insights.Models.ManagementEventRuleCondition";
  /**
   * @member {RuleDataSourceUnion} [dataSource] the resource from which the
   * rule collects its data. For this type dataSource will always be of type
   * RuleMetricDataSource.
   */
  dataSource?: RuleDataSourceUnion;
  /**
   * @member {ManagementEventAggregationCondition} [aggregation] How the data
   * that is collected should be combined over time and when the alert is
   * activated. Note that for management event alerts aggregation is optional –
   * if it is not provided then any event will cause the alert to activate.
   */
  aggregation?: ManagementEventAggregationCondition;
}

/**
 * Contains the possible cases for RuleAction.
 */
export type RuleActionUnion = RuleAction | RuleEmailAction | RuleWebhookAction;

/**
 * @interface
 * An interface representing RuleAction.
 * The action that is performed when the alert rule becomes active, and when an
 * alert condition is resolved.
 *
 */
export interface RuleAction {
  /**
   * @member {string} odatatype Polymorphic Discriminator
   */
  odatatype: "RuleAction";
}

/**
 * @interface
 * An interface representing RuleEmailAction.
 * Specifies the action to send email when the rule condition is evaluated. The
 * discriminator is always RuleEmailAction in this case.
 *
 */
export interface RuleEmailAction {
  /**
   * @member {string} odatatype Polymorphic Discriminator
   */
  odatatype: "Microsoft.Azure.Management.Insights.Models.RuleEmailAction";
  /**
   * @member {boolean} [sendToServiceOwners] Whether the administrators
   * (service and co-administrators) of the service should be notified when the
   * alert is activated.
   */
  sendToServiceOwners?: boolean;
  /**
   * @member {string[]} [customEmails] the list of administrator's custom email
   * addresses to notify of the activation of the alert.
   */
  customEmails?: string[];
}

/**
 * @interface
 * An interface representing RuleWebhookAction.
 * Specifies the action to post to service when the rule condition is
 * evaluated. The discriminator is always RuleWebhookAction in this case.
 *
 */
export interface RuleWebhookAction {
  /**
   * @member {string} odatatype Polymorphic Discriminator
   */
  odatatype: "Microsoft.Azure.Management.Insights.Models.RuleWebhookAction";
  /**
   * @member {string} [serviceUri] the service uri to Post the notification
   * when the alert activates or resolves.
   */
  serviceUri?: string;
  /**
   * @member {{ [propertyName: string]: string }} [properties] the dictionary
   * of custom properties to include with the post operation. These data are
   * appended to the webhook payload.
   */
  properties?: { [propertyName: string]: string };
}

/**
 * @interface
 * An interface representing AlertRuleResource.
 * The alert rule resource.
 *
 * @extends Resource
 */
export interface AlertRuleResource extends Resource {
  /**
   * @member {string} alertRuleResourceName the name of the alert rule.
   */
  alertRuleResourceName: string;
  /**
   * @member {string} [description] the description of the alert rule that will
   * be included in the alert email.
   */
  description?: string;
  /**
   * @member {boolean} isEnabled the flag that indicates whether the alert rule
   * is enabled.
   */
  isEnabled: boolean;
  /**
   * @member {RuleConditionUnion} condition the condition that results in the
   * alert rule being activated.
   */
  condition: RuleConditionUnion;
  /**
   * @member {RuleActionUnion[]} [actions] the array of actions that are
   * performed when the alert rule becomes active, and when an alert condition
   * is resolved.
   */
  actions?: RuleActionUnion[];
  /**
   * @member {Date} [lastUpdatedTime] Last time the rule was updated in ISO8601
   * format.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly lastUpdatedTime?: Date;
}

/**
 * @interface
 * An interface representing AlertRuleResourcePatch.
 * The alert rule object for patch operations.
 *
 */
export interface AlertRuleResourcePatch {
  /**
   * @member {{ [propertyName: string]: string }} [tags] Resource tags
   */
  tags?: { [propertyName: string]: string };
  /**
   * @member {string} name the name of the alert rule.
   */
  name: string;
  /**
   * @member {string} [description] the description of the alert rule that will
   * be included in the alert email.
   */
  description?: string;
  /**
   * @member {boolean} isEnabled the flag that indicates whether the alert rule
   * is enabled.
   */
  isEnabled: boolean;
  /**
   * @member {RuleConditionUnion} condition the condition that results in the
   * alert rule being activated.
   */
  condition: RuleConditionUnion;
  /**
   * @member {RuleActionUnion[]} [actions] the array of actions that are
   * performed when the alert rule becomes active, and when an alert condition
   * is resolved.
   */
  actions?: RuleActionUnion[];
  /**
   * @member {Date} [lastUpdatedTime] Last time the rule was updated in ISO8601
   * format.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly lastUpdatedTime?: Date;
}

/**
 * @interface
 * An interface representing RetentionPolicy.
 * Specifies the retention policy for the log.
 *
 */
export interface RetentionPolicy {
  /**
   * @member {boolean} enabled a value indicating whether the retention policy
   * is enabled.
   */
  enabled: boolean;
  /**
   * @member {number} days the number of days for the retention in days. A
   * value of 0 will retain the events indefinitely.
   */
  days: number;
}

/**
 * @interface
 * An interface representing LogProfileResource.
 * The log profile resource.
 *
 * @extends Resource
 */
export interface LogProfileResource extends Resource {
  /**
   * @member {string} [storageAccountId] the resource id of the storage account
   * to which you would like to send the Activity Log.
   */
  storageAccountId?: string;
  /**
   * @member {string} [serviceBusRuleId] The service bus rule ID of the service
   * bus namespace in which you would like to have Event Hubs created for
   * streaming the Activity Log. The rule ID is of the format: '{service bus
   * resource ID}/authorizationrules/{key name}'.
   */
  serviceBusRuleId?: string;
  /**
   * @member {string[]} locations List of regions for which Activity Log events
   * should be stored or streamed. It is a comma separated list of valid ARM
   * locations including the 'global' location.
   */
  locations: string[];
  /**
   * @member {string[]} categories the categories of the logs. These categories
   * are created as is convenient to the user. Some values are: 'Write',
   * 'Delete', and/or 'Action.'
   */
  categories: string[];
  /**
   * @member {RetentionPolicy} retentionPolicy the retention policy for the
   * events in the log.
   */
  retentionPolicy: RetentionPolicy;
}

/**
 * @interface
 * An interface representing LogProfileResourcePatch.
 * The log profile resource for patch operations.
 *
 */
export interface LogProfileResourcePatch {
  /**
   * @member {{ [propertyName: string]: string }} [tags] Resource tags
   */
  tags?: { [propertyName: string]: string };
  /**
   * @member {string} [storageAccountId] the resource id of the storage account
   * to which you would like to send the Activity Log.
   */
  storageAccountId?: string;
  /**
   * @member {string} [serviceBusRuleId] The service bus rule ID of the service
   * bus namespace in which you would like to have Event Hubs created for
   * streaming the Activity Log. The rule ID is of the format: '{service bus
   * resource ID}/authorizationrules/{key name}'.
   */
  serviceBusRuleId?: string;
  /**
   * @member {string[]} locations List of regions for which Activity Log events
   * should be stored or streamed. It is a comma separated list of valid ARM
   * locations including the 'global' location.
   */
  locations: string[];
  /**
   * @member {string[]} categories the categories of the logs. These categories
   * are created as is convenient to the user. Some values are: 'Write',
   * 'Delete', and/or 'Action.'
   */
  categories: string[];
  /**
   * @member {RetentionPolicy} retentionPolicy the retention policy for the
   * events in the log.
   */
  retentionPolicy: RetentionPolicy;
}

/**
 * @interface
 * An interface representing ProxyOnlyResource.
 * A proxy only azure resource object
 *
 * @extends BaseResource
 */
export interface ProxyOnlyResource extends BaseResource {
  /**
   * @member {string} [id] Azure resource Id
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [name] Azure resource name
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [type] Azure resource type
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: string;
}

/**
 * @interface
 * An interface representing MetricSettings.
 * Part of MultiTenantDiagnosticSettings. Specifies the settings for a
 * particular metric.
 *
 */
export interface MetricSettings {
  /**
   * @member {string} [timeGrain] the timegrain of the metric in ISO8601
   * format.
   */
  timeGrain?: string;
  /**
   * @member {string} [category] Name of a Diagnostic Metric category for a
   * resource type this setting is applied to. To obtain the list of Diagnostic
   * metric categories for a resource, first perform a GET diagnostic settings
   * operation.
   */
  category?: string;
  /**
   * @member {boolean} enabled a value indicating whether this category is
   * enabled.
   */
  enabled: boolean;
  /**
   * @member {RetentionPolicy} [retentionPolicy] the retention policy for this
   * category.
   */
  retentionPolicy?: RetentionPolicy;
}

/**
 * @interface
 * An interface representing LogSettings.
 * Part of MultiTenantDiagnosticSettings. Specifies the settings for a
 * particular log.
 *
 */
export interface LogSettings {
  /**
   * @member {string} [category] Name of a Diagnostic Log category for a
   * resource type this setting is applied to. To obtain the list of Diagnostic
   * Log categories for a resource, first perform a GET diagnostic settings
   * operation.
   */
  category?: string;
  /**
   * @member {boolean} enabled a value indicating whether this log is enabled.
   */
  enabled: boolean;
  /**
   * @member {RetentionPolicy} [retentionPolicy] the retention policy for this
   * log.
   */
  retentionPolicy?: RetentionPolicy;
}

/**
 * @interface
 * An interface representing DiagnosticSettingsResource.
 * The diagnostic setting resource.
 *
 * @extends ProxyOnlyResource
 */
export interface DiagnosticSettingsResource extends ProxyOnlyResource {
  /**
   * @member {string} [storageAccountId] The resource ID of the storage account
   * to which you would like to send Diagnostic Logs.
   */
  storageAccountId?: string;
  /**
   * @member {string} [serviceBusRuleId] The service bus rule Id of the
   * diagnostic setting. This is here to maintain backwards compatibility.
   */
  serviceBusRuleId?: string;
  /**
   * @member {string} [eventHubAuthorizationRuleId] The resource Id for the
   * event hub authorization rule.
   */
  eventHubAuthorizationRuleId?: string;
  /**
   * @member {string} [eventHubName] The name of the event hub. If none is
   * specified, the default event hub will be selected.
   */
  eventHubName?: string;
  /**
   * @member {MetricSettings[]} [metrics] the list of metric settings.
   */
  metrics?: MetricSettings[];
  /**
   * @member {LogSettings[]} [logs] the list of logs settings.
   */
  logs?: LogSettings[];
  /**
   * @member {string} [workspaceId] The workspace ID (resource ID of a Log
   * Analytics workspace) for a Log Analytics workspace to which you would like
   * to send Diagnostic Logs. Example:
   * /subscriptions/4b9e8510-67ab-4e9a-95a9-e2f1e570ea9c/resourceGroups/insights-integration/providers/Microsoft.OperationalInsights/workspaces/viruela2
   */
  workspaceId?: string;
}

/**
 * @interface
 * An interface representing DiagnosticSettingsResourceCollection.
 * Represents a collection of alert rule resources.
 *
 */
export interface DiagnosticSettingsResourceCollection {
  /**
   * @member {DiagnosticSettingsResource[]} [value] The collection of
   * diagnostic settings resources;.
   */
  value?: DiagnosticSettingsResource[];
}

/**
 * @interface
 * An interface representing DiagnosticSettingsCategoryResource.
 * The diagnostic settings category resource.
 *
 * @extends ProxyOnlyResource
 */
export interface DiagnosticSettingsCategoryResource extends ProxyOnlyResource {
  /**
   * @member {CategoryType} [categoryType] The type of the diagnostic settings
   * category. Possible values include: 'Metrics', 'Logs'
   */
  categoryType?: CategoryType;
}

/**
 * @interface
 * An interface representing DiagnosticSettingsCategoryResourceCollection.
 * Represents a collection of diagnostic setting category resources.
 *
 */
export interface DiagnosticSettingsCategoryResourceCollection {
  /**
   * @member {DiagnosticSettingsCategoryResource[]} [value] The collection of
   * diagnostic settings category resources.
   */
  value?: DiagnosticSettingsCategoryResource[];
}

/**
 * @interface
 * An interface representing EmailReceiver.
 * An email receiver.
 *
 */
export interface EmailReceiver {
  /**
   * @member {string} name The name of the email receiver. Names must be unique
   * across all receivers within an action group.
   */
  name: string;
  /**
   * @member {string} emailAddress The email address of this receiver.
   */
  emailAddress: string;
  /**
   * @member {ReceiverStatus} [status] The receiver status of the e-mail.
   * Possible values include: 'NotSpecified', 'Enabled', 'Disabled'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly status?: ReceiverStatus;
}

/**
 * @interface
 * An interface representing SmsReceiver.
 * An SMS receiver.
 *
 */
export interface SmsReceiver {
  /**
   * @member {string} name The name of the SMS receiver. Names must be unique
   * across all receivers within an action group.
   */
  name: string;
  /**
   * @member {string} countryCode The country code of the SMS receiver.
   */
  countryCode: string;
  /**
   * @member {string} phoneNumber The phone number of the SMS receiver.
   */
  phoneNumber: string;
  /**
   * @member {ReceiverStatus} [status] The status of the receiver. Possible
   * values include: 'NotSpecified', 'Enabled', 'Disabled'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly status?: ReceiverStatus;
}

/**
 * @interface
 * An interface representing WebhookReceiver.
 * A webhook receiver.
 *
 */
export interface WebhookReceiver {
  /**
   * @member {string} name The name of the webhook receiver. Names must be
   * unique across all receivers within an action group.
   */
  name: string;
  /**
   * @member {string} serviceUri The URI where webhooks should be sent.
   */
  serviceUri: string;
}

/**
 * @interface
 * An interface representing ItsmReceiver.
 * An Itsm receiver.
 *
 */
export interface ItsmReceiver {
  /**
   * @member {string} name The name of the Itsm receiver. Names must be unique
   * across all receivers within an action group.
   */
  name: string;
  /**
   * @member {string} workspaceId OMS LA instance identifier.
   */
  workspaceId: string;
  /**
   * @member {string} connectionId Unique identification of ITSM connection
   * among multiple defined in above workspace.
   */
  connectionId: string;
  /**
   * @member {string} ticketConfiguration JSON blob for the configurations of
   * the ITSM action. CreateMultipleWorkItems option will be part of this blob
   * as well.
   */
  ticketConfiguration: string;
  /**
   * @member {string} region Region in which workspace resides. Supported
   * values:'centralindia','japaneast','southeastasia','australiasoutheast','uksouth','westcentralus','canadacentral','eastus','westeurope'
   */
  region: string;
}

/**
 * @interface
 * An interface representing AzureAppPushReceiver.
 * The Azure mobile App push notification receiver.
 *
 */
export interface AzureAppPushReceiver {
  /**
   * @member {string} name The name of the Azure mobile app push receiver.
   * Names must be unique across all receivers within an action group.
   */
  name: string;
  /**
   * @member {string} emailAddress The email address registered for the Azure
   * mobile app.
   */
  emailAddress: string;
}

/**
 * @interface
 * An interface representing AutomationRunbookReceiver.
 * The Azure Automation Runbook notification receiver.
 *
 */
export interface AutomationRunbookReceiver {
  /**
   * @member {string} automationAccountId The Azure automation account Id which
   * holds this runbook and authenticate to Azure resource.
   */
  automationAccountId: string;
  /**
   * @member {string} runbookName The name for this runbook.
   */
  runbookName: string;
  /**
   * @member {string} webhookResourceId The resource id for webhook linked to
   * this runbook.
   */
  webhookResourceId: string;
  /**
   * @member {boolean} isGlobalRunbook Indicates whether this instance is
   * global runbook.
   */
  isGlobalRunbook: boolean;
  /**
   * @member {string} [name] Indicates name of the webhook.
   */
  name?: string;
  /**
   * @member {string} [serviceUri] The URI where webhooks should be sent.
   */
  serviceUri?: string;
}

/**
 * @interface
 * An interface representing VoiceReceiver.
 * A voice receiver.
 *
 */
export interface VoiceReceiver {
  /**
   * @member {string} name The name of the voice receiver. Names must be unique
   * across all receivers within an action group.
   */
  name: string;
  /**
   * @member {string} countryCode The country code of the voice receiver.
   */
  countryCode: string;
  /**
   * @member {string} phoneNumber The phone number of the voice receiver.
   */
  phoneNumber: string;
}

/**
 * @interface
 * An interface representing LogicAppReceiver.
 * A logic app receiver.
 *
 */
export interface LogicAppReceiver {
  /**
   * @member {string} name The name of the logic app receiver. Names must be
   * unique across all receivers within an action group.
   */
  name: string;
  /**
   * @member {string} resourceId The azure resource id of the logic app
   * receiver.
   */
  resourceId: string;
  /**
   * @member {string} callbackUrl The callback url where http request sent to.
   */
  callbackUrl: string;
}

/**
 * @interface
 * An interface representing AzureFunctionReceiver.
 * An azure function receiver.
 *
 */
export interface AzureFunctionReceiver {
  /**
   * @member {string} name The name of the azure function receiver. Names must
   * be unique across all receivers within an action group.
   */
  name: string;
  /**
   * @member {string} functionAppResourceId The azure resource id of the
   * function app.
   */
  functionAppResourceId: string;
  /**
   * @member {string} functionName The function name in the function app.
   */
  functionName: string;
  /**
   * @member {string} httpTriggerUrl The http trigger url where http request
   * sent to.
   */
  httpTriggerUrl: string;
}

/**
 * @interface
 * An interface representing ActionGroupResource.
 * An action group resource.
 *
 * @extends Resource
 */
export interface ActionGroupResource extends Resource {
  /**
   * @member {string} groupShortName The short name of the action group. This
   * will be used in SMS messages.
   */
  groupShortName: string;
  /**
   * @member {boolean} enabled Indicates whether this action group is enabled.
   * If an action group is not enabled, then none of its receivers will receive
   * communications. Default value: true .
   */
  enabled: boolean;
  /**
   * @member {EmailReceiver[]} [emailReceivers] The list of email receivers
   * that are part of this action group.
   */
  emailReceivers?: EmailReceiver[];
  /**
   * @member {SmsReceiver[]} [smsReceivers] The list of SMS receivers that are
   * part of this action group.
   */
  smsReceivers?: SmsReceiver[];
  /**
   * @member {WebhookReceiver[]} [webhookReceivers] The list of webhook
   * receivers that are part of this action group.
   */
  webhookReceivers?: WebhookReceiver[];
  /**
   * @member {ItsmReceiver[]} [itsmReceivers] The list of ITSM receivers that
   * are part of this action group.
   */
  itsmReceivers?: ItsmReceiver[];
  /**
   * @member {AzureAppPushReceiver[]} [azureAppPushReceivers] The list of
   * AzureAppPush receivers that are part of this action group.
   */
  azureAppPushReceivers?: AzureAppPushReceiver[];
  /**
   * @member {AutomationRunbookReceiver[]} [automationRunbookReceivers] The
   * list of AutomationRunbook receivers that are part of this action group.
   */
  automationRunbookReceivers?: AutomationRunbookReceiver[];
  /**
   * @member {VoiceReceiver[]} [voiceReceivers] The list of voice receivers
   * that are part of this action group.
   */
  voiceReceivers?: VoiceReceiver[];
  /**
   * @member {LogicAppReceiver[]} [logicAppReceivers] The list of logic app
   * receivers that are part of this action group.
   */
  logicAppReceivers?: LogicAppReceiver[];
  /**
   * @member {AzureFunctionReceiver[]} [azureFunctionReceivers] The list of
   * azure function receivers that are part of this action group.
   */
  azureFunctionReceivers?: AzureFunctionReceiver[];
}

/**
 * @interface
 * An interface representing EnableRequest.
 * Describes a receiver that should be resubscribed.
 *
 */
export interface EnableRequest {
  /**
   * @member {string} receiverName The name of the receiver to resubscribe.
   */
  receiverName: string;
}

/**
 * @interface
 * An interface representing ActionGroupPatchBody.
 * An action group object for the body of patch operations.
 *
 */
export interface ActionGroupPatchBody {
  /**
   * @member {{ [propertyName: string]: string }} [tags] Resource tags
   */
  tags?: { [propertyName: string]: string };
  /**
   * @member {boolean} [enabled] Indicates whether this action group is
   * enabled. If an action group is not enabled, then none of its actions will
   * be activated. Default value: true .
   */
  enabled?: boolean;
}

/**
 * @interface
 * An interface representing ActivityLogAlertLeafCondition.
 * An Activity Log alert condition that is met by comparing an activity log
 * field and value.
 *
 */
export interface ActivityLogAlertLeafCondition {
  /**
   * @member {string} field The name of the field that this condition will
   * examine. The possible values for this field are (case-insensitive):
   * 'resourceId', 'category', 'caller', 'level', 'operationName',
   * 'resourceGroup', 'resourceProvider', 'status', 'subStatus',
   * 'resourceType', or anything beginning with 'properties.'.
   */
  field: string;
  /**
   * @member {string} equals The field value will be compared to this value
   * (case-insensitive) to determine if the condition is met.
   */
  equals: string;
}

/**
 * @interface
 * An interface representing ActivityLogAlertAllOfCondition.
 * An Activity Log alert condition that is met when all its member conditions
 * are met.
 *
 */
export interface ActivityLogAlertAllOfCondition {
  /**
   * @member {ActivityLogAlertLeafCondition[]} allOf The list of activity log
   * alert conditions.
   */
  allOf: ActivityLogAlertLeafCondition[];
}

/**
 * @interface
 * An interface representing ActivityLogAlertActionGroup.
 * A pointer to an Azure Action Group.
 *
 */
export interface ActivityLogAlertActionGroup {
  /**
   * @member {string} actionGroupId The resourceId of the action group. This
   * cannot be null or empty.
   */
  actionGroupId: string;
  /**
   * @member {{ [propertyName: string]: string }} [webhookProperties] the
   * dictionary of custom properties to include with the post operation. These
   * data are appended to the webhook payload.
   */
  webhookProperties?: { [propertyName: string]: string };
}

/**
 * @interface
 * An interface representing ActivityLogAlertActionList.
 * A list of activity log alert actions.
 *
 */
export interface ActivityLogAlertActionList {
  /**
   * @member {ActivityLogAlertActionGroup[]} [actionGroups] The list of
   * activity log alerts.
   */
  actionGroups?: ActivityLogAlertActionGroup[];
}

/**
 * @interface
 * An interface representing ActivityLogAlertResource.
 * An activity log alert resource.
 *
 * @extends Resource
 */
export interface ActivityLogAlertResource extends Resource {
  /**
   * @member {string[]} scopes A list of resourceIds that will be used as
   * prefixes. The alert will only apply to activityLogs with resourceIds that
   * fall under one of these prefixes. This list must include at least one
   * item.
   */
  scopes: string[];
  /**
   * @member {boolean} [enabled] Indicates whether this activity log alert is
   * enabled. If an activity log alert is not enabled, then none of its actions
   * will be activated. Default value: true .
   */
  enabled?: boolean;
  /**
   * @member {ActivityLogAlertAllOfCondition} condition The condition that will
   * cause this alert to activate.
   */
  condition: ActivityLogAlertAllOfCondition;
  /**
   * @member {ActivityLogAlertActionList} actions The actions that will
   * activate when the condition is met.
   */
  actions: ActivityLogAlertActionList;
  /**
   * @member {string} [description] A description of this activity log alert.
   */
  description?: string;
}

/**
 * @interface
 * An interface representing ActivityLogAlertPatchBody.
 * An activity log alert object for the body of patch operations.
 *
 */
export interface ActivityLogAlertPatchBody {
  /**
   * @member {{ [propertyName: string]: string }} [tags] Resource tags
   */
  tags?: { [propertyName: string]: string };
  /**
   * @member {boolean} [enabled] Indicates whether this activity log alert is
   * enabled. If an activity log alert is not enabled, then none of its actions
   * will be activated. Default value: true .
   */
  enabled?: boolean;
}

/**
 * @interface
 * An interface representing LocalizableString.
 * The localizable string class.
 *
 */
export interface LocalizableString {
  /**
   * @member {string} value the invariant value.
   */
  value: string;
  /**
   * @member {string} [localizedValue] the locale specific value.
   */
  localizedValue?: string;
}

/**
 * @interface
 * An interface representing SenderAuthorization.
 * the authorization used by the user who has performed the operation that led
 * to this event. This captures the RBAC properties of the event. These usually
 * include the 'action', 'role' and the 'scope'
 *
 */
export interface SenderAuthorization {
  /**
   * @member {string} [action] the permissible actions. For instance:
   * microsoft.support/supporttickets/write
   */
  action?: string;
  /**
   * @member {string} [role] the role of the user. For instance: Subscription
   * Admin
   */
  role?: string;
  /**
   * @member {string} [scope] the scope.
   */
  scope?: string;
}

/**
 * @interface
 * An interface representing HttpRequestInfo.
 * The Http request info.
 *
 */
export interface HttpRequestInfo {
  /**
   * @member {string} [clientRequestId] the client request id.
   */
  clientRequestId?: string;
  /**
   * @member {string} [clientIpAddress] the client Ip Address
   */
  clientIpAddress?: string;
  /**
   * @member {string} [method] the Http request method.
   */
  method?: string;
  /**
   * @member {string} [uri] the Uri.
   */
  uri?: string;
}

/**
 * @interface
 * An interface representing EventData.
 * The Azure event log entries are of type EventData
 *
 */
export interface EventData {
  /**
   * @member {SenderAuthorization} [authorization] The sender authorization
   * information.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly authorization?: SenderAuthorization;
  /**
   * @member {{ [propertyName: string]: string }} [claims] key value pairs to
   * identify ARM permissions.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly claims?: { [propertyName: string]: string };
  /**
   * @member {string} [caller] the email address of the user who has performed
   * the operation, the UPN claim or SPN claim based on availability.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly caller?: string;
  /**
   * @member {string} [description] the description of the event.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
  /**
   * @member {string} [id] the Id of this event as required by ARM for RBAC. It
   * contains the EventDataID and a timestamp information.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [eventDataId] the event data Id. This is a unique
   * identifier for an event.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly eventDataId?: string;
  /**
   * @member {string} [correlationId] the correlation Id, usually a GUID in the
   * string format. The correlation Id is shared among the events that belong
   * to the same uber operation.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly correlationId?: string;
  /**
   * @member {LocalizableString} [eventName] the event name. This value should
   * not be confused with OperationName. For practical purposes, OperationName
   * might be more appealing to end users.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly eventName?: LocalizableString;
  /**
   * @member {LocalizableString} [category] the event category.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly category?: LocalizableString;
  /**
   * @member {HttpRequestInfo} [httpRequest] the HTTP request info. Usually
   * includes the 'clientRequestId', 'clientIpAddress' (IP address of the user
   * who initiated the event) and 'method' (HTTP method e.g. PUT).
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly httpRequest?: HttpRequestInfo;
  /**
   * @member {EventLevel} [level] the event level. Possible values include:
   * 'Critical', 'Error', 'Warning', 'Informational', 'Verbose'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly level?: EventLevel;
  /**
   * @member {string} [resourceGroupName] the resource group name of the
   * impacted resource.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly resourceGroupName?: string;
  /**
   * @member {LocalizableString} [resourceProviderName] the resource provider
   * name of the impacted resource.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly resourceProviderName?: LocalizableString;
  /**
   * @member {string} [resourceId] the resource uri that uniquely identifies
   * the resource that caused this event.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly resourceId?: string;
  /**
   * @member {LocalizableString} [resourceType] the resource type
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly resourceType?: LocalizableString;
  /**
   * @member {string} [operationId] It is usually a GUID shared among the
   * events corresponding to single operation. This value should not be
   * confused with EventName.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly operationId?: string;
  /**
   * @member {LocalizableString} [operationName] the operation name.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly operationName?: LocalizableString;
  /**
   * @member {{ [propertyName: string]: string }} [properties] the set of <Key,
   * Value> pairs (usually a Dictionary<String, String>) that includes details
   * about the event.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly properties?: { [propertyName: string]: string };
  /**
   * @member {LocalizableString} [status] a string describing the status of the
   * operation. Some typical values are: Started, In progress, Succeeded,
   * Failed, Resolved.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly status?: LocalizableString;
  /**
   * @member {LocalizableString} [subStatus] the event sub status. Most of the
   * time, when included, this captures the HTTP status code of the REST call.
   * Common values are: OK (HTTP Status Code: 200), Created (HTTP Status Code:
   * 201), Accepted (HTTP Status Code: 202), No Content (HTTP Status Code:
   * 204), Bad Request(HTTP Status Code: 400), Not Found (HTTP Status Code:
   * 404), Conflict (HTTP Status Code: 409), Internal Server Error (HTTP Status
   * Code: 500), Service Unavailable (HTTP Status Code:503), Gateway Timeout
   * (HTTP Status Code: 504)
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly subStatus?: LocalizableString;
  /**
   * @member {Date} [eventTimestamp] the timestamp of when the event was
   * generated by the Azure service processing the request corresponding the
   * event. It in ISO 8601 format.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly eventTimestamp?: Date;
  /**
   * @member {Date} [submissionTimestamp] the timestamp of when the event
   * became available for querying via this API. It is in ISO 8601 format. This
   * value should not be confused eventTimestamp. As there might be a delay
   * between the occurrence time of the event, and the time that the event is
   * submitted to the Azure logging infrastructure.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly submissionTimestamp?: Date;
  /**
   * @member {string} [subscriptionId] the Azure subscription Id usually a
   * GUID.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly subscriptionId?: string;
  /**
   * @member {string} [tenantId] the Azure tenant Id
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly tenantId?: string;
}

/**
 * @interface
 * An interface representing MetricAvailability.
 * Metric availability specifies the time grain (aggregation interval or
 * frequency) and the retention period for that time grain.
 *
 */
export interface MetricAvailability {
  /**
   * @member {string} [timeGrain] the time grain specifies the aggregation
   * interval for the metric. Expressed as a duration 'PT1M', 'P1D', etc.
   */
  timeGrain?: string;
  /**
   * @member {string} [retention] the retention period for the metric at the
   * specified timegrain.  Expressed as a duration 'PT1M', 'P1D', etc.
   */
  retention?: string;
}

/**
 * @interface
 * An interface representing MetricDefinition.
 * Metric definition class specifies the metadata for a metric.
 *
 */
export interface MetricDefinition {
  /**
   * @member {boolean} [isDimensionRequired] Flag to indicate whether the
   * dimension is required.
   */
  isDimensionRequired?: boolean;
  /**
   * @member {string} [resourceId] the resource identifier of the resource that
   * emitted the metric.
   */
  resourceId?: string;
  /**
   * @member {string} [namespace] the namespace the metric blongs to.
   */
  namespace?: string;
  /**
   * @member {LocalizableString} [name] the name and the display name of the
   * metric, i.e. it is a localizable string.
   */
  name?: LocalizableString;
  /**
   * @member {Unit} [unit] the unit of the metric. Possible values include:
   * 'Count', 'Bytes', 'Seconds', 'CountPerSecond', 'BytesPerSecond',
   * 'Percent', 'MilliSeconds', 'ByteSeconds', 'Unspecified'
   */
  unit?: Unit;
  /**
   * @member {AggregationType} [primaryAggregationType] the primary aggregation
   * type value defining how to use the values for display. Possible values
   * include: 'None', 'Average', 'Count', 'Minimum', 'Maximum', 'Total'
   */
  primaryAggregationType?: AggregationType;
  /**
   * @member {AggregationType[]} [supportedAggregationTypes] the collection of
   * what aggregation types are supported.
   */
  supportedAggregationTypes?: AggregationType[];
  /**
   * @member {MetricAvailability[]} [metricAvailabilities] the collection of
   * what aggregation intervals are available to be queried.
   */
  metricAvailabilities?: MetricAvailability[];
  /**
   * @member {string} [id] the resource identifier of the metric definition.
   */
  id?: string;
  /**
   * @member {LocalizableString[]} [dimensions] the name and the display name
   * of the dimension, i.e. it is a localizable string.
   */
  dimensions?: LocalizableString[];
}

/**
 * @interface
 * An interface representing MetricValue.
 * Represents a metric value.
 *
 */
export interface MetricValue {
  /**
   * @member {Date} timeStamp the timestamp for the metric value in ISO 8601
   * format.
   */
  timeStamp: Date;
  /**
   * @member {number} [average] the average value in the time range.
   */
  average?: number;
  /**
   * @member {number} [minimum] the least value in the time range.
   */
  minimum?: number;
  /**
   * @member {number} [maximum] the greatest value in the time range.
   */
  maximum?: number;
  /**
   * @member {number} [total] the sum of all of the values in the time range.
   */
  total?: number;
  /**
   * @member {number} [count] the number of samples in the time range. Can be
   * used to determine the number of values that contributed to the average
   * value.
   */
  count?: number;
}

/**
 * @interface
 * An interface representing MetadataValue.
 * Represents a metric metadata value.
 *
 */
export interface MetadataValue {
  /**
   * @member {LocalizableString} [name] the name of the metadata.
   */
  name?: LocalizableString;
  /**
   * @member {string} [value] the value of the metadata.
   */
  value?: string;
}

/**
 * @interface
 * An interface representing TimeSeriesElement.
 * A time series result type. The discriminator value is always TimeSeries in
 * this case.
 *
 */
export interface TimeSeriesElement {
  /**
   * @member {MetadataValue[]} [metadatavalues] the metadata values returned if
   * $filter was specified in the call.
   */
  metadatavalues?: MetadataValue[];
  /**
   * @member {MetricValue[]} [data] An array of data points representing the
   * metric values.  This is only returned if a result type of data is
   * specified.
   */
  data?: MetricValue[];
}

/**
 * @interface
 * An interface representing Metric.
 * The result data of a query.
 *
 */
export interface Metric {
  /**
   * @member {string} id the metric Id.
   */
  id: string;
  /**
   * @member {string} type the resource type of the metric resource.
   */
  type: string;
  /**
   * @member {LocalizableString} name the name and the display name of the
   * metric, i.e. it is localizable string.
   */
  name: LocalizableString;
  /**
   * @member {Unit} unit the unit of the metric. Possible values include:
   * 'Count', 'Bytes', 'Seconds', 'CountPerSecond', 'BytesPerSecond',
   * 'Percent', 'MilliSeconds', 'ByteSeconds', 'Unspecified'
   */
  unit: Unit;
  /**
   * @member {TimeSeriesElement[]} timeseries the time series returned when a
   * data query is performed.
   */
  timeseries: TimeSeriesElement[];
}

/**
 * @interface
 * An interface representing Response.
 * The response to a metrics query.
 *
 */
export interface Response {
  /**
   * @member {number} [cost] The integer value representing the cost of the
   * query, for data case.
   */
  cost?: number;
  /**
   * @member {string} timespan The timespan for which the data was retrieved.
   * Its value consists of two datatimes concatenated, separated by '/'.  This
   * may be adjusted in the future and returned back from what was originally
   * requested.
   */
  timespan: string;
  /**
   * @member {string} [interval] The interval (window size) for which the
   * metric data was returned in.  This may be adjusted in the future and
   * returned back from what was originally requested.  This is not present if
   * a metadata request was made.
   */
  interval?: string;
  /**
   * @member {string} [namespace] The namespace of the metrics been queried
   */
  namespace?: string;
  /**
   * @member {string} [resourceregion] The region of the resource been queried
   * for metrics.
   */
  resourceregion?: string;
  /**
   * @member {Metric[]} value the value of the collection.
   */
  value: Metric[];
}

/**
 * @interface
 * An interface representing BaselineMetadataValue.
 * Represents a baseline metadata value.
 *
 */
export interface BaselineMetadataValue {
  /**
   * @member {LocalizableString} [name] the name of the metadata.
   */
  name?: LocalizableString;
  /**
   * @member {string} [value] the value of the metadata.
   */
  value?: string;
}

/**
 * @interface
 * An interface representing Baseline.
 * The baseline values for a single sensitivity value.
 *
 */
export interface Baseline {
  /**
   * @member {Sensitivity} sensitivity the sensitivity of the baseline.
   * Possible values include: 'Low', 'Medium', 'High'
   */
  sensitivity: Sensitivity;
  /**
   * @member {number[]} lowThresholds The low thresholds of the baseline.
   */
  lowThresholds: number[];
  /**
   * @member {number[]} highThresholds The high thresholds of the baseline.
   */
  highThresholds: number[];
}

/**
 * @interface
 * An interface representing BaselineResponse.
 * The response to a baseline query.
 *
 */
export interface BaselineResponse {
  /**
   * @member {string} [id] the metric baseline Id.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [type] the resource type of the baseline resource.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: string;
  /**
   * @member {LocalizableString} [name] the name and the display name of the
   * metric, i.e. it is localizable string.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: LocalizableString;
  /**
   * @member {string} [timespan] The timespan for which the data was retrieved.
   * Its value consists of two datatimes concatenated, separated by '/'.  This
   * may be adjusted in the future and returned back from what was originally
   * requested.
   */
  timespan?: string;
  /**
   * @member {string} [interval] The interval (window size) for which the
   * metric data was returned in.  This may be adjusted in the future and
   * returned back from what was originally requested.  This is not present if
   * a metadata request was made.
   */
  interval?: string;
  /**
   * @member {string} [aggregation] The aggregation type of the metric.
   */
  aggregation?: string;
  /**
   * @member {Date[] | string[]} [timestamps] the array of timestamps of the
   * baselines.
   */
  timestamps?: Date[] | string[];
  /**
   * @member {Baseline[]} [baseline] the baseline values for each sensitivity.
   */
  baseline?: Baseline[];
  /**
   * @member {BaselineMetadataValue[]} [metadata] the baseline metadata values.
   */
  metadata?: BaselineMetadataValue[];
}

/**
 * @interface
 * An interface representing TimeSeriesInformation.
 * The time series info needed for calculating the baseline.
 *
 */
export interface TimeSeriesInformation {
  /**
   * @member {string[]} sensitivities the list of sensitivities for calculating
   * the baseline.
   */
  sensitivities: string[];
  /**
   * @member {number[]} values The metric values to calculate the baseline.
   */
  values: number[];
  /**
   * @member {Date[] | string[]} [timestamps] the array of timestamps of the
   * baselines.
   */
  timestamps?: Date[] | string[];
}

/**
 * @interface
 * An interface representing CalculateBaselineResponse.
 * The response to a calcualte baseline call.
 *
 */
export interface CalculateBaselineResponse {
  /**
   * @member {string} type the resource type of the baseline resource.
   */
  type: string;
  /**
   * @member {Date[] | string[]} [timestamps] the array of timestamps of the
   * baselines.
   */
  timestamps?: Date[] | string[];
  /**
   * @member {Baseline[]} baseline the baseline values for each sensitivity.
   */
  baseline: Baseline[];
}

/**
 * @interface
 * An interface representing MetricAlertAction.
 * An alert action.
 *
 */
export interface MetricAlertAction {
  /**
   * @member {string} [actionGroupId] the id of the action group to use.
   */
  actionGroupId?: string;
  /**
   * @member {{ [propertyName: string]: string }} [webhookProperties] The
   * properties of a webhook object.
   */
  webhookProperties?: { [propertyName: string]: string };
}

/**
 * Contains the possible cases for MetricAlertCriteria.
 */
export type MetricAlertCriteriaUnion = MetricAlertCriteria | MetricAlertSingleResourceMultipleMetricCriteria | MetricAlertMultipleResourceMultipleMetricCriteria;

/**
 * @interface
 * An interface representing MetricAlertCriteria.
 * The rule criteria that defines the conditions of the alert rule.
 *
 */
export interface MetricAlertCriteria {
  /**
   * @member {string} odatatype Polymorphic Discriminator
   */
  odatatype: "MetricAlertCriteria";
  /**
   * @property Describes unknown properties. The value of an unknown property
   * can be of "any" type.
   */
  [property: string]: any;
}

/**
 * @interface
 * An interface representing MetricAlertResource.
 * The metric alert resource.
 *
 * @extends Resource
 */
export interface MetricAlertResource extends Resource {
  /**
   * @member {string} description the description of the metric alert that will
   * be included in the alert email.
   */
  description: string;
  /**
   * @member {number} severity Alert severity {0, 1, 2, 3, 4}
   */
  severity: number;
  /**
   * @member {boolean} enabled the flag that indicates whether the metric alert
   * is enabled.
   */
  enabled: boolean;
  /**
   * @member {string[]} [scopes] the list of resource id's that this metric
   * alert is scoped to.
   */
  scopes?: string[];
  /**
   * @member {string} evaluationFrequency how often the metric alert is
   * evaluated represented in ISO 8601 duration format.
   */
  evaluationFrequency: string;
  /**
   * @member {string} windowSize the period of time (in ISO 8601 duration
   * format) that is used to monitor alert activity based on the threshold.
   */
  windowSize: string;
  /**
   * @member {string} [targetResourceType] the resource type of the target
   * resource(s) on which the alert is created/updated. Mandatory for
   * MultipleResourceMultipleMetricCriteria.
   */
  targetResourceType?: string;
  /**
   * @member {string} [targetResourceRegion] the region of the target
   * resource(s) on which the alert is created/updated. Mandatory for
   * MultipleResourceMultipleMetricCriteria.
   */
  targetResourceRegion?: string;
  /**
   * @member {MetricAlertCriteriaUnion} criteria defines the specific alert
   * criteria information.
   */
  criteria: MetricAlertCriteriaUnion;
  /**
   * @member {boolean} [autoMitigate] the flag that indicates whether the alert
   * should be auto resolved or not.
   */
  autoMitigate?: boolean;
  /**
   * @member {MetricAlertAction[]} [actions] the array of actions that are
   * performed when the alert rule becomes active, and when an alert condition
   * is resolved.
   */
  actions?: MetricAlertAction[];
  /**
   * @member {Date} [lastUpdatedTime] Last time the rule was updated in ISO8601
   * format.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly lastUpdatedTime?: Date;
}

/**
 * @interface
 * An interface representing MetricAlertResourcePatch.
 * The metric alert resource for patch operations.
 *
 */
export interface MetricAlertResourcePatch {
  /**
   * @member {{ [propertyName: string]: string }} [tags] Resource tags
   */
  tags?: { [propertyName: string]: string };
  /**
   * @member {string} description the description of the metric alert that will
   * be included in the alert email.
   */
  description: string;
  /**
   * @member {number} severity Alert severity {0, 1, 2, 3, 4}
   */
  severity: number;
  /**
   * @member {boolean} enabled the flag that indicates whether the metric alert
   * is enabled.
   */
  enabled: boolean;
  /**
   * @member {string[]} [scopes] the list of resource id's that this metric
   * alert is scoped to.
   */
  scopes?: string[];
  /**
   * @member {string} evaluationFrequency how often the metric alert is
   * evaluated represented in ISO 8601 duration format.
   */
  evaluationFrequency: string;
  /**
   * @member {string} windowSize the period of time (in ISO 8601 duration
   * format) that is used to monitor alert activity based on the threshold.
   */
  windowSize: string;
  /**
   * @member {string} [targetResourceType] the resource type of the target
   * resource(s) on which the alert is created/updated. Mandatory for
   * MultipleResourceMultipleMetricCriteria.
   */
  targetResourceType?: string;
  /**
   * @member {string} [targetResourceRegion] the region of the target
   * resource(s) on which the alert is created/updated. Mandatory for
   * MultipleResourceMultipleMetricCriteria.
   */
  targetResourceRegion?: string;
  /**
   * @member {MetricAlertCriteriaUnion} criteria defines the specific alert
   * criteria information.
   */
  criteria: MetricAlertCriteriaUnion;
  /**
   * @member {boolean} [autoMitigate] the flag that indicates whether the alert
   * should be auto resolved or not.
   */
  autoMitigate?: boolean;
  /**
   * @member {MetricAlertAction[]} [actions] the array of actions that are
   * performed when the alert rule becomes active, and when an alert condition
   * is resolved.
   */
  actions?: MetricAlertAction[];
  /**
   * @member {Date} [lastUpdatedTime] Last time the rule was updated in ISO8601
   * format.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly lastUpdatedTime?: Date;
}

/**
 * @interface
 * An interface representing MetricAlertStatusProperties.
 * An alert status properties.
 *
 */
export interface MetricAlertStatusProperties {
  /**
   * @member {{ [propertyName: string]: string }} [dimensions] An object
   * describing the type of the dimensions.
   */
  dimensions?: { [propertyName: string]: string };
  /**
   * @member {string} [status] status value
   */
  status?: string;
  /**
   * @member {Date} [timestamp] UTC time when the status was checked.
   */
  timestamp?: Date;
}

/**
 * @interface
 * An interface representing MetricAlertStatus.
 * An alert status.
 *
 */
export interface MetricAlertStatus {
  /**
   * @member {string} [name] The status name.
   */
  name?: string;
  /**
   * @member {string} [id] The alert rule arm id.
   */
  id?: string;
  /**
   * @member {string} [type] The extended resource type name.
   */
  type?: string;
  /**
   * @member {MetricAlertStatusProperties} [properties] The alert status
   * properties of the metric alert status.
   */
  properties?: MetricAlertStatusProperties;
}

/**
 * @interface
 * An interface representing MetricAlertStatusCollection.
 * Represents a collection of alert rule resources.
 *
 */
export interface MetricAlertStatusCollection {
  /**
   * @member {MetricAlertStatus[]} [value] the values for the alert rule
   * resources.
   */
  value?: MetricAlertStatus[];
}

/**
 * @interface
 * An interface representing MetricDimension.
 * Specifies a metric dimension.
 *
 */
export interface MetricDimension {
  /**
   * @member {string} name Name of the dimension.
   */
  name: string;
  /**
   * @member {string} operator the dimension operator. Only 'Include' and
   * 'Exclude' are supported
   */
  operator: string;
  /**
   * @member {string[]} values list of dimension values.
   */
  values: string[];
}

/**
 * Contains the possible cases for MultiMetricCriteria.
 */
export type MultiMetricCriteriaUnion = MultiMetricCriteria | MetricCriteria;

/**
 * @interface
 * An interface representing MultiMetricCriteria.
 * The types of conditions for a multi resource alert
 *
 */
export interface MultiMetricCriteria {
  /**
   * @member {string} criterionType Polymorphic Discriminator
   */
  criterionType: "MultiMetricCriteria";
  /**
   * @property Describes unknown properties. The value of an unknown property
   * can be of "any" type.
   */
  [property: string]: any;
}

/**
 * @interface
 * An interface representing MetricCriteria.
 * Criterion to filter metrics.
 *
 */
export interface MetricCriteria {
  /**
   * @member {string} criterionType Polymorphic Discriminator
   */
  criterionType: "StaticThresholdCriterion";
  /**
   * @member {string} name Name of the criteria.
   */
  name: string;
  /**
   * @member {string} metricName Name of the metric.
   */
  metricName: string;
  /**
   * @member {string} [metricNamespace] Namespace of the metric.
   */
  metricNamespace?: string;
  /**
   * @member {any} operator the criteria operator.
   */
  operator: any;
  /**
   * @member {any} timeAggregation the criteria time aggregation types.
   */
  timeAggregation: any;
  /**
   * @member {number} threshold the criteria threshold value that activates the
   * alert.
   */
  threshold: number;
  /**
   * @member {MetricDimension[]} [dimensions] List of dimension conditions.
   */
  dimensions?: MetricDimension[];
}

/**
 * @interface
 * An interface representing MetricAlertSingleResourceMultipleMetricCriteria.
 * Specifies the metric alert criteria for a single resource that has multiple
 * metric criteria.
 *
 */
export interface MetricAlertSingleResourceMultipleMetricCriteria {
  /**
   * @member {string} odatatype Polymorphic Discriminator
   */
  odatatype: "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria";
  /**
   * @member {MetricCriteria[]} [allOf] The list of metric criteria for this
   * 'all of' operation.
   */
  allOf?: MetricCriteria[];
}

/**
 * @interface
 * An interface representing MetricAlertMultipleResourceMultipleMetricCriteria.
 * Speficies the metric alert criteria for multiple resource that has multiple
 * metric criteria.
 *
 */
export interface MetricAlertMultipleResourceMultipleMetricCriteria {
  /**
   * @member {string} odatatype Polymorphic Discriminator
   */
  odatatype: "Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria";
  /**
   * @member {MultiMetricCriteriaUnion[]} [allOf] the list of multiple metric
   * criteria for this 'all of' operation.
   */
  allOf?: MultiMetricCriteriaUnion[];
}

/**
 * @interface
 * An interface representing Source.
 * Specifies the log search query.
 *
 */
export interface Source {
  /**
   * @member {string} [query] Log search query. Required for action type -
   * AlertingAction
   */
  query?: string;
  /**
   * @member {string[]} [authorizedResources] List of  Resource referred into
   * query
   */
  authorizedResources?: string[];
  /**
   * @member {string} dataSourceId The resource uri over which log search query
   * is to be run.
   */
  dataSourceId: string;
  /**
   * @member {QueryType} [queryType] Set value to 'ResultCount'. Possible
   * values include: 'ResultCount'
   */
  queryType?: QueryType;
}

/**
 * @interface
 * An interface representing Schedule.
 * Defines how often to run the search and the time interval.
 *
 */
export interface Schedule {
  /**
   * @member {number} frequencyInMinutes frequency (in minutes) at which rule
   * condition should be evaluated.
   */
  frequencyInMinutes: number;
  /**
   * @member {number} timeWindowInMinutes Time window for which data needs to
   * be fetched for query (should be greater than or equal to
   * frequencyInMinutes).
   */
  timeWindowInMinutes: number;
}

/**
 * Contains the possible cases for Action.
 */
export type ActionUnion = Action | AlertingAction | LogToMetricAction;

/**
 * @interface
 * An interface representing Action.
 * Action descriptor.
 *
 */
export interface Action {
  /**
   * @member {string} odatatype Polymorphic Discriminator
   */
  odatatype: "Action";
}

/**
 * @interface
 * An interface representing LogSearchRuleResource.
 * The Log Search Rule resource.
 *
 * @extends Resource
 */
export interface LogSearchRuleResource extends Resource {
  /**
   * @member {string} [description] The description of the Log Search rule.
   */
  description?: string;
  /**
   * @member {Enabled} [enabled] The flag which indicates whether the Log
   * Search rule is enabled. Value should be true or false. Possible values
   * include: 'true', 'false'
   */
  enabled?: Enabled;
  /**
   * @member {Date} [lastUpdatedTime] Last time the rule was updated in IS08601
   * format.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly lastUpdatedTime?: Date;
  /**
   * @member {ProvisioningState} [provisioningState] Provisioning state of the
   * scheduledquery rule. Possible values include: 'Succeeded', 'Deploying',
   * 'Canceled', 'Failed'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * @member {Source} source Data Source against which rule will Query Data
   */
  source: Source;
  /**
   * @member {Schedule} [schedule] Schedule (Frequnecy, Time Window) for rule.
   * Required for action type - AlertingAction
   */
  schedule?: Schedule;
  /**
   * @member {ActionUnion} action Action needs to be taken on rule execution.
   */
  action: ActionUnion;
}

/**
 * @interface
 * An interface representing LogSearchRuleResourcePatch.
 * The log search rule resource for patch operations.
 *
 */
export interface LogSearchRuleResourcePatch {
  /**
   * @member {{ [propertyName: string]: string }} [tags] Resource tags
   */
  tags?: { [propertyName: string]: string };
  /**
   * @member {Enabled} [enabled] The flag which indicates whether the Log
   * Search rule is enabled. Value should be true or false. Possible values
   * include: 'true', 'false'
   */
  enabled?: Enabled;
}

/**
 * @interface
 * An interface representing LogMetricTrigger.
 * A log metrics trigger descriptor.
 *
 */
export interface LogMetricTrigger {
  /**
   * @member {ConditionalOperator} [thresholdOperator] Evaluation operation for
   * Metric -'GreaterThan' or 'LessThan' or 'Equal'. Possible values include:
   * 'GreaterThan', 'LessThan', 'Equal'
   */
  thresholdOperator?: ConditionalOperator;
  /**
   * @member {number} [threshold] The threshold of the metric trigger.
   */
  threshold?: number;
  /**
   * @member {MetricTriggerType} [metricTriggerType] Metric Trigger Type -
   * 'Consecutive' or 'Total'. Possible values include: 'Consecutive', 'Total'
   */
  metricTriggerType?: MetricTriggerType;
  /**
   * @member {string} [metricColumn] Evaluation of metric on a particular
   * column
   */
  metricColumn?: string;
}

/**
 * @interface
 * An interface representing TriggerCondition.
 * The condition that results in the Log Search rule.
 *
 */
export interface TriggerCondition {
  /**
   * @member {ConditionalOperator} thresholdOperator Evaluation operation for
   * rule - 'GreaterThan' or 'LessThan. Possible values include: 'GreaterThan',
   * 'LessThan', 'Equal'
   */
  thresholdOperator: ConditionalOperator;
  /**
   * @member {number} threshold Result or count threshold based on which rule
   * should be triggered.
   */
  threshold: number;
  /**
   * @member {LogMetricTrigger} [metricTrigger] Trigger condition for metric
   * query rule
   */
  metricTrigger?: LogMetricTrigger;
}

/**
 * @interface
 * An interface representing AzNsActionGroup.
 * Azure action group
 *
 */
export interface AzNsActionGroup {
  /**
   * @member {string[]} [actionGroup] Azure Action Group reference.
   */
  actionGroup?: string[];
  /**
   * @member {string} [emailSubject] Custom subject override for all email ids
   * in Azure action group
   */
  emailSubject?: string;
  /**
   * @member {string} [customWebhookPayload] Custom payload to be sent for all
   * webook URI in Azure action group
   */
  customWebhookPayload?: string;
}

/**
 * @interface
 * An interface representing AlertingAction.
 * Specifiy action need to be taken when rule type is Alert
 *
 */
export interface AlertingAction {
  /**
   * @member {string} odatatype Polymorphic Discriminator
   */
  odatatype: "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction";
  /**
   * @member {AlertSeverity} severity Severity of the alert. Possible values
   * include: '0', '1', '2', '3', '4'
   */
  severity: AlertSeverity;
  /**
   * @member {AzNsActionGroup} aznsAction Azure action group reference.
   */
  aznsAction: AzNsActionGroup;
  /**
   * @member {number} [throttlingInMin] time (in minutes) for which Alerts
   * should be throttled or suppressed.
   */
  throttlingInMin?: number;
  /**
   * @member {TriggerCondition} trigger The trigger condition that results in
   * the alert rule being.
   */
  trigger: TriggerCondition;
}

/**
 * @interface
 * An interface representing Dimension.
 * Specifies the criteria for converting log to metric.
 *
 */
export interface Dimension {
  /**
   * @member {string} name Name of the dimension
   */
  name: string;
  /**
   * @member {string[]} values List of dimension values
   */
  values: string[];
}

/**
 * @interface
 * An interface representing Criteria.
 * Specifies the criteria for converting log to metric.
 *
 */
export interface Criteria {
  /**
   * @member {string} metricName Name of the metric
   */
  metricName: string;
  /**
   * @member {Dimension[]} [dimensions] List of Dimensions for creating metric
   */
  dimensions?: Dimension[];
}

/**
 * @interface
 * An interface representing LogToMetricAction.
 * Specifiy action need to be taken when rule type is converting log to metric
 *
 */
export interface LogToMetricAction {
  /**
   * @member {string} odatatype Polymorphic Discriminator
   */
  odatatype: "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.LogToMetricAction";
  /**
   * @member {Criteria} criteria Severity of the alert
   */
  criteria: Criteria;
}

/**
 * @interface
 * An interface representing MetricNamespaceName.
 * The fully qualified metric namespace name.
 *
 */
export interface MetricNamespaceName {
  /**
   * @member {string} [metricNamespaceName] The metric namespace name.
   */
  metricNamespaceName?: string;
}

/**
 * @interface
 * An interface representing MetricNamespace.
 * Metric namespace class specifies the metadata for a metric namespace.
 *
 */
export interface MetricNamespace {
  /**
   * @member {string} [id] The ID of the metricNamespace.
   */
  id?: string;
  /**
   * @member {string} [type] The type of the namespace.
   */
  type?: string;
  /**
   * @member {string} [name] The name of the namespace.
   */
  name?: string;
  /**
   * @member {MetricNamespaceName} [properties] Properties which include the
   * fully qualified namespace name.
   */
  properties?: MetricNamespaceName;
}

/**
 * @interface
 * An interface representing ActivityLogsListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ActivityLogsListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [filter] Reduces the set of data collected.<br>The
   * **$filter** argument is very restricted and allows only the following
   * patterns.<br>- *List events for a resource group*: $filter=eventTimestamp
   * ge '2014-07-16T04:36:37.6407898Z' and eventTimestamp le
   * '2014-07-20T04:36:37.6407898Z' and resourceGroupName eq
   * 'resourceGroupName'.<br>- *List events for resource*:
   * $filter=eventTimestamp ge '2014-07-16T04:36:37.6407898Z' and
   * eventTimestamp le '2014-07-20T04:36:37.6407898Z' and resourceUri eq
   * 'resourceURI'.<br>- *List events for a subscription in a time range*:
   * $filter=eventTimestamp ge '2014-07-16T04:36:37.6407898Z' and
   * eventTimestamp le '2014-07-20T04:36:37.6407898Z'.<br>- *List events for a
   * resource provider*: $filter=eventTimestamp ge
   * '2014-07-16T04:36:37.6407898Z' and eventTimestamp le
   * '2014-07-20T04:36:37.6407898Z' and resourceProvider eq
   * 'resourceProviderName'.<br>- *List events for a correlation Id*:
   * $filter=eventTimestamp ge '2014-07-16T04:36:37.6407898Z' and
   * eventTimestamp le '2014-07-20T04:36:37.6407898Z' and correlationId eq
   * 'correlationID'.<br><br>**NOTE**: No other syntax is allowed.
   */
  filter?: string;
  /**
   * @member {string} [select] Used to fetch events with only the given
   * properties.<br>The **$select** argument is a comma separated list of
   * property names to be returned. Possible values are: *authorization*,
   * *claims*, *correlationId*, *description*, *eventDataId*, *eventName*,
   * *eventTimestamp*, *httpRequest*, *level*, *operationId*, *operationName*,
   * *properties*, *resourceGroupName*, *resourceProviderName*, *resourceId*,
   * *status*, *submissionTimestamp*, *subStatus*, *subscriptionId*
   */
  select?: string;
}

/**
 * @interface
 * An interface representing TenantActivityLogsListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface TenantActivityLogsListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [filter] Reduces the set of data collected. <br>The
   * **$filter** is very restricted and allows only the following
   * patterns.<br>- List events for a resource group: $filter=eventTimestamp ge
   * '<Start Time>' and eventTimestamp le '<End Time>' and eventChannels eq
   * 'Admin, Operation' and resourceGroupName eq '<ResourceGroupName>'.<br>-
   * List events for resource: $filter=eventTimestamp ge '<Start Time>' and
   * eventTimestamp le '<End Time>' and eventChannels eq 'Admin, Operation' and
   * resourceUri eq '<ResourceURI>'.<br>- List events for a subscription:
   * $filter=eventTimestamp ge '<Start Time>' and eventTimestamp le '<End
   * Time>' and eventChannels eq 'Admin, Operation'.<br>- List events for a
   * resource provider: $filter=eventTimestamp ge '<Start Time>' and
   * eventTimestamp le '<End Time>' and eventChannels eq 'Admin, Operation' and
   * resourceProvider eq '<ResourceProviderName>'.<br>- List events for a
   * correlation Id: api-version=2014-04-01&$filter=eventTimestamp ge
   * '2014-07-16T04:36:37.6407898Z' and eventTimestamp le
   * '2014-07-20T04:36:37.6407898Z' and eventChannels eq 'Admin, Operation' and
   * correlationId eq '<CorrelationID>'.<br>**NOTE**: No other syntax is
   * allowed.
   */
  filter?: string;
  /**
   * @member {string} [select] Used to fetch events with only the given
   * properties.<br>The **$select** argument is a comma separated list of
   * property names to be returned. Possible values are: *authorization*,
   * *claims*, *correlationId*, *description*, *eventDataId*, *eventName*,
   * *eventTimestamp*, *httpRequest*, *level*, *operationId*, *operationName*,
   * *properties*, *resourceGroupName*, *resourceProviderName*, *resourceId*,
   * *status*, *submissionTimestamp*, *subStatus*, *subscriptionId*
   */
  select?: string;
}

/**
 * @interface
 * An interface representing MetricDefinitionsListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface MetricDefinitionsListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [metricnamespace] Metric namespace to query metric
   * definitions for.
   */
  metricnamespace?: string;
}

/**
 * @interface
 * An interface representing MetricsListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface MetricsListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [timespan] The timespan of the query. It is a string with
   * the following format 'startDateTime_ISO/endDateTime_ISO'.
   */
  timespan?: string;
  /**
   * @member {string} [interval] The interval (i.e. timegrain) of the query.
   */
  interval?: string;
  /**
   * @member {string} [metricnames] The names of the metrics (comma separated)
   * to retrieve.
   */
  metricnames?: string;
  /**
   * @member {string} [aggregation] The list of aggregation types (comma
   * separated) to retrieve.
   */
  aggregation?: string;
  /**
   * @member {number} [top] The maximum number of records to retrieve.
   * Valid only if $filter is specified.
   * Defaults to 10.
   */
  top?: number;
  /**
   * @member {string} [orderby] The aggregation to use for sorting results and
   * the direction of the sort.
   * Only one order can be specified.
   * Examples: sum asc.
   */
  orderby?: string;
  /**
   * @member {string} [filter] The **$filter** is used to reduce the set of
   * metric data returned.<br>Example:<br>Metric contains metadata A, B and
   * C.<br>- Return all time series of C where A = a1 and B = b1 or
   * b2<br>**$filter=A eq ‘a1’ and B eq ‘b1’ or B eq ‘b2’ and C eq ‘*’**<br>-
   * Invalid variant:<br>**$filter=A eq ‘a1’ and B eq ‘b1’ and C eq ‘*’ or B =
   * ‘b2’**<br>This is invalid because the logical or operator cannot separate
   * two different metadata names.<br>- Return all time series where A = a1, B
   * = b1 and C = c1:<br>**$filter=A eq ‘a1’ and B eq ‘b1’ and C eq ‘c1’**<br>-
   * Return all time series where A = a1<br>**$filter=A eq ‘a1’ and B eq ‘*’
   * and C eq ‘*’**.
   */
  filter?: string;
  /**
   * @member {ResultType} [resultType] Reduces the set of data collected. The
   * syntax allowed depends on the operation. See the operation's description
   * for details. Possible values include: 'Data', 'Metadata'
   */
  resultType?: ResultType;
  /**
   * @member {string} [metricnamespace] Metric namespace to query metric
   * definitions for.
   */
  metricnamespace?: string;
}

/**
 * @interface
 * An interface representing MetricBaselineGetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface MetricBaselineGetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [timespan] The timespan of the query. It is a string with
   * the following format 'startDateTime_ISO/endDateTime_ISO'.
   */
  timespan?: string;
  /**
   * @member {string} [interval] The interval (i.e. timegrain) of the query.
   */
  interval?: string;
  /**
   * @member {string} [aggregation] The aggregation type of the metric to
   * retrieve the baseline for.
   */
  aggregation?: string;
  /**
   * @member {string} [sensitivities] The list of sensitivities (comma
   * separated) to retrieve.
   */
  sensitivities?: string;
  /**
   * @member {ResultType} [resultType] Allows retrieving only metadata of the
   * baseline. On data request all information is retrieved. Possible values
   * include: 'Data', 'Metadata'
   */
  resultType?: ResultType;
}

/**
 * @interface
 * An interface representing ScheduledQueryRulesListBySubscriptionOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ScheduledQueryRulesListBySubscriptionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [filter] The filter to apply on the operation. For more
   * information please see
   * https://msdn.microsoft.com/en-us/library/azure/dn931934.aspx
   */
  filter?: string;
}

/**
 * @interface
 * An interface representing ScheduledQueryRulesListByResourceGroupOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ScheduledQueryRulesListByResourceGroupOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [filter] The filter to apply on the operation. For more
   * information please see
   * https://msdn.microsoft.com/en-us/library/azure/dn931934.aspx
   */
  filter?: string;
}

/**
 * @interface
 * An interface representing MetricNamespacesListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface MetricNamespacesListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [startTime] The ISO 8601 conform Date start time from
   * which to query for metric namespaces.
   */
  startTime?: string;
}

/**
 * @interface
 * An interface representing MonitorManagementClientOptions.
 * @extends AzureServiceClientOptions
 */
export interface MonitorManagementClientOptions extends AzureServiceClientOptions {
  /**
   * @member {string} [baseUri]
   */
  baseUri?: string;
}


/**
 * @interface
 * An interface representing the AutoscaleSettingResourceCollection.
 * Represents a collection of autoscale setting resources.
 *
 * @extends Array<AutoscaleSettingResource>
 */
export interface AutoscaleSettingResourceCollection extends Array<AutoscaleSettingResource> {
  /**
   * @member {string} [nextLink] URL to get the next set of results.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the IncidentListResult.
 * The List incidents operation response.
 *
 * @extends Array<Incident>
 */
export interface IncidentListResult extends Array<Incident> {
}

/**
 * @interface
 * An interface representing the AlertRuleResourceCollection.
 * Represents a collection of alert rule resources.
 *
 * @extends Array<AlertRuleResource>
 */
export interface AlertRuleResourceCollection extends Array<AlertRuleResource> {
}

/**
 * @interface
 * An interface representing the LogProfileCollection.
 * Represents a collection of log profiles.
 *
 * @extends Array<LogProfileResource>
 */
export interface LogProfileCollection extends Array<LogProfileResource> {
}

/**
 * @interface
 * An interface representing the ActionGroupList.
 * A list of action groups.
 *
 * @extends Array<ActionGroupResource>
 */
export interface ActionGroupList extends Array<ActionGroupResource> {
  /**
   * @member {string} [nextLink] Provides the link to retrieve the next set of
   * elements.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the ActivityLogAlertList.
 * A list of activity log alerts.
 *
 * @extends Array<ActivityLogAlertResource>
 */
export interface ActivityLogAlertList extends Array<ActivityLogAlertResource> {
  /**
   * @member {string} [nextLink] Provides the link to retrieve the next set of
   * elements.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the EventDataCollection.
 * Represents collection of events.
 *
 * @extends Array<EventData>
 */
export interface EventDataCollection extends Array<EventData> {
  /**
   * @member {string} [nextLink] Provides the link to retrieve the next set of
   * events.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the EventCategoryCollection.
 * A collection of event categories. Currently possible values are:
 * Administrative, Security, ServiceHealth, Alert, Recommendation, Policy.
 *
 * @extends Array<LocalizableString>
 */
export interface EventCategoryCollection extends Array<LocalizableString> {
}

/**
 * @interface
 * An interface representing the MetricDefinitionCollection.
 * Represents collection of metric definitions.
 *
 * @extends Array<MetricDefinition>
 */
export interface MetricDefinitionCollection extends Array<MetricDefinition> {
}

/**
 * @interface
 * An interface representing the MetricAlertResourceCollection.
 * Represents a collection of alert rule resources.
 *
 * @extends Array<MetricAlertResource>
 */
export interface MetricAlertResourceCollection extends Array<MetricAlertResource> {
}

/**
 * @interface
 * An interface representing the LogSearchRuleResourceCollection.
 * Represents a collection of Log Search rule resources.
 *
 * @extends Array<LogSearchRuleResource>
 */
export interface LogSearchRuleResourceCollection extends Array<LogSearchRuleResource> {
}

/**
 * @interface
 * An interface representing the MetricNamespaceCollection.
 * Represents collection of metric namespaces.
 *
 * @extends Array<MetricNamespace>
 */
export interface MetricNamespaceCollection extends Array<MetricNamespace> {
}

/**
 * Defines values for MetricStatisticType.
 * Possible values include: 'Average', 'Min', 'Max', 'Sum'
 * @readonly
 * @enum {string}
 */
export enum MetricStatisticType {
  Average = 'Average',
  Min = 'Min',
  Max = 'Max',
  Sum = 'Sum',
}

/**
 * Defines values for TimeAggregationType.
 * Possible values include: 'Average', 'Minimum', 'Maximum', 'Total', 'Count',
 * 'Last'
 * @readonly
 * @enum {string}
 */
export enum TimeAggregationType {
  Average = 'Average',
  Minimum = 'Minimum',
  Maximum = 'Maximum',
  Total = 'Total',
  Count = 'Count',
  Last = 'Last',
}

/**
 * Defines values for ComparisonOperationType.
 * Possible values include: 'Equals', 'NotEquals', 'GreaterThan',
 * 'GreaterThanOrEqual', 'LessThan', 'LessThanOrEqual'
 * @readonly
 * @enum {string}
 */
export enum ComparisonOperationType {
  Equals = 'Equals',
  NotEquals = 'NotEquals',
  GreaterThan = 'GreaterThan',
  GreaterThanOrEqual = 'GreaterThanOrEqual',
  LessThan = 'LessThan',
  LessThanOrEqual = 'LessThanOrEqual',
}

/**
 * Defines values for ScaleDirection.
 * Possible values include: 'None', 'Increase', 'Decrease'
 * @readonly
 * @enum {string}
 */
export enum ScaleDirection {
  None = 'None',
  Increase = 'Increase',
  Decrease = 'Decrease',
}

/**
 * Defines values for ScaleType.
 * Possible values include: 'ChangeCount', 'PercentChangeCount', 'ExactCount'
 * @readonly
 * @enum {string}
 */
export enum ScaleType {
  ChangeCount = 'ChangeCount',
  PercentChangeCount = 'PercentChangeCount',
  ExactCount = 'ExactCount',
}

/**
 * Defines values for RecurrenceFrequency.
 * Possible values include: 'None', 'Second', 'Minute', 'Hour', 'Day', 'Week',
 * 'Month', 'Year'
 * @readonly
 * @enum {string}
 */
export enum RecurrenceFrequency {
  None = 'None',
  Second = 'Second',
  Minute = 'Minute',
  Hour = 'Hour',
  Day = 'Day',
  Week = 'Week',
  Month = 'Month',
  Year = 'Year',
}

/**
 * Defines values for ConditionOperator.
 * Possible values include: 'GreaterThan', 'GreaterThanOrEqual', 'LessThan',
 * 'LessThanOrEqual'
 * @readonly
 * @enum {string}
 */
export enum ConditionOperator {
  GreaterThan = 'GreaterThan',
  GreaterThanOrEqual = 'GreaterThanOrEqual',
  LessThan = 'LessThan',
  LessThanOrEqual = 'LessThanOrEqual',
}

/**
 * Defines values for TimeAggregationOperator.
 * Possible values include: 'Average', 'Minimum', 'Maximum', 'Total', 'Last'
 * @readonly
 * @enum {string}
 */
export enum TimeAggregationOperator {
  Average = 'Average',
  Minimum = 'Minimum',
  Maximum = 'Maximum',
  Total = 'Total',
  Last = 'Last',
}

/**
 * Defines values for CategoryType.
 * Possible values include: 'Metrics', 'Logs'
 * @readonly
 * @enum {string}
 */
export enum CategoryType {
  Metrics = 'Metrics',
  Logs = 'Logs',
}

/**
 * Defines values for ReceiverStatus.
 * Possible values include: 'NotSpecified', 'Enabled', 'Disabled'
 * @readonly
 * @enum {string}
 */
export enum ReceiverStatus {
  NotSpecified = 'NotSpecified',
  Enabled = 'Enabled',
  Disabled = 'Disabled',
}

/**
 * Defines values for EventLevel.
 * Possible values include: 'Critical', 'Error', 'Warning', 'Informational',
 * 'Verbose'
 * @readonly
 * @enum {string}
 */
export enum EventLevel {
  Critical = 'Critical',
  Error = 'Error',
  Warning = 'Warning',
  Informational = 'Informational',
  Verbose = 'Verbose',
}

/**
 * Defines values for Unit.
 * Possible values include: 'Count', 'Bytes', 'Seconds', 'CountPerSecond',
 * 'BytesPerSecond', 'Percent', 'MilliSeconds', 'ByteSeconds', 'Unspecified'
 * @readonly
 * @enum {string}
 */
export enum Unit {
  Count = 'Count',
  Bytes = 'Bytes',
  Seconds = 'Seconds',
  CountPerSecond = 'CountPerSecond',
  BytesPerSecond = 'BytesPerSecond',
  Percent = 'Percent',
  MilliSeconds = 'MilliSeconds',
  ByteSeconds = 'ByteSeconds',
  Unspecified = 'Unspecified',
}

/**
 * Defines values for AggregationType.
 * Possible values include: 'None', 'Average', 'Count', 'Minimum', 'Maximum',
 * 'Total'
 * @readonly
 * @enum {string}
 */
export enum AggregationType {
  None = 'None',
  Average = 'Average',
  Count = 'Count',
  Minimum = 'Minimum',
  Maximum = 'Maximum',
  Total = 'Total',
}

/**
 * Defines values for Sensitivity.
 * Possible values include: 'Low', 'Medium', 'High'
 * @readonly
 * @enum {string}
 */
export enum Sensitivity {
  Low = 'Low',
  Medium = 'Medium',
  High = 'High',
}

/**
 * Defines values for Enabled.
 * Possible values include: 'true', 'false'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: Enabled = <Enabled>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum Enabled {
  True = 'true',
  False = 'false',
}

/**
 * Defines values for ProvisioningState.
 * Possible values include: 'Succeeded', 'Deploying', 'Canceled', 'Failed'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: ProvisioningState =
 * <ProvisioningState>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum ProvisioningState {
  Succeeded = 'Succeeded',
  Deploying = 'Deploying',
  Canceled = 'Canceled',
  Failed = 'Failed',
}

/**
 * Defines values for QueryType.
 * Possible values include: 'ResultCount'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: QueryType = <QueryType>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum QueryType {
  ResultCount = 'ResultCount',
}

/**
 * Defines values for ConditionalOperator.
 * Possible values include: 'GreaterThan', 'LessThan', 'Equal'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: ConditionalOperator =
 * <ConditionalOperator>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum ConditionalOperator {
  GreaterThan = 'GreaterThan',
  LessThan = 'LessThan',
  Equal = 'Equal',
}

/**
 * Defines values for MetricTriggerType.
 * Possible values include: 'Consecutive', 'Total'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: MetricTriggerType =
 * <MetricTriggerType>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum MetricTriggerType {
  Consecutive = 'Consecutive',
  Total = 'Total',
}

/**
 * Defines values for AlertSeverity.
 * Possible values include: '0', '1', '2', '3', '4'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: AlertSeverity =
 * <AlertSeverity>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum AlertSeverity {
  Zero = '0',
  One = '1',
  Two = '2',
  Three = '3',
  Four = '4',
}

/**
 * Defines values for ResultType.
 * Possible values include: 'Data', 'Metadata'
 * @readonly
 * @enum {string}
 */
export enum ResultType {
  Data = 'Data',
  Metadata = 'Metadata',
}

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type AutoscaleSettingsListByResourceGroupResponse = AutoscaleSettingResourceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AutoscaleSettingResourceCollection;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type AutoscaleSettingsCreateOrUpdateResponse = AutoscaleSettingResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AutoscaleSettingResource;
    };
};

/**
 * Contains response data for the get operation.
 */
export type AutoscaleSettingsGetResponse = AutoscaleSettingResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AutoscaleSettingResource;
    };
};

/**
 * Contains response data for the update operation.
 */
export type AutoscaleSettingsUpdateResponse = AutoscaleSettingResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AutoscaleSettingResource;
    };
};

/**
 * Contains response data for the listBySubscription operation.
 */
export type AutoscaleSettingsListBySubscriptionResponse = AutoscaleSettingResourceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AutoscaleSettingResourceCollection;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type AutoscaleSettingsListByResourceGroupNextResponse = AutoscaleSettingResourceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AutoscaleSettingResourceCollection;
    };
};

/**
 * Contains response data for the listBySubscriptionNext operation.
 */
export type AutoscaleSettingsListBySubscriptionNextResponse = AutoscaleSettingResourceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AutoscaleSettingResourceCollection;
    };
};

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type AlertRuleIncidentsGetResponse = Incident & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Incident;
    };
};

/**
 * Contains response data for the listByAlertRule operation.
 */
export type AlertRuleIncidentsListByAlertRuleResponse = IncidentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IncidentListResult;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type AlertRulesCreateOrUpdateResponse = AlertRuleResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AlertRuleResource;
    };
};

/**
 * Contains response data for the get operation.
 */
export type AlertRulesGetResponse = AlertRuleResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AlertRuleResource;
    };
};

/**
 * Contains response data for the update operation.
 */
export type AlertRulesUpdateResponse = AlertRuleResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AlertRuleResource;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type AlertRulesListByResourceGroupResponse = AlertRuleResourceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AlertRuleResourceCollection;
    };
};

/**
 * Contains response data for the listBySubscription operation.
 */
export type AlertRulesListBySubscriptionResponse = AlertRuleResourceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AlertRuleResourceCollection;
    };
};

/**
 * Contains response data for the get operation.
 */
export type LogProfilesGetResponse = LogProfileResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LogProfileResource;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type LogProfilesCreateOrUpdateResponse = LogProfileResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LogProfileResource;
    };
};

/**
 * Contains response data for the update operation.
 */
export type LogProfilesUpdateResponse = LogProfileResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LogProfileResource;
    };
};

/**
 * Contains response data for the list operation.
 */
export type LogProfilesListResponse = LogProfileCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LogProfileCollection;
    };
};

/**
 * Contains response data for the get operation.
 */
export type DiagnosticSettingsGetResponse = DiagnosticSettingsResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiagnosticSettingsResource;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type DiagnosticSettingsCreateOrUpdateResponse = DiagnosticSettingsResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiagnosticSettingsResource;
    };
};

/**
 * Contains response data for the list operation.
 */
export type DiagnosticSettingsListResponse = DiagnosticSettingsResourceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiagnosticSettingsResourceCollection;
    };
};

/**
 * Contains response data for the get operation.
 */
export type DiagnosticSettingsCategoryGetResponse = DiagnosticSettingsCategoryResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiagnosticSettingsCategoryResource;
    };
};

/**
 * Contains response data for the list operation.
 */
export type DiagnosticSettingsCategoryListResponse = DiagnosticSettingsCategoryResourceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiagnosticSettingsCategoryResourceCollection;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ActionGroupsCreateOrUpdateResponse = ActionGroupResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ActionGroupResource;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ActionGroupsGetResponse = ActionGroupResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ActionGroupResource;
    };
};

/**
 * Contains response data for the update operation.
 */
export type ActionGroupsUpdateResponse = ActionGroupResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ActionGroupResource;
    };
};

/**
 * Contains response data for the listBySubscriptionId operation.
 */
export type ActionGroupsListBySubscriptionIdResponse = ActionGroupList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ActionGroupList;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type ActionGroupsListByResourceGroupResponse = ActionGroupList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ActionGroupList;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ActivityLogAlertsCreateOrUpdateResponse = ActivityLogAlertResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ActivityLogAlertResource;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ActivityLogAlertsGetResponse = ActivityLogAlertResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ActivityLogAlertResource;
    };
};

/**
 * Contains response data for the update operation.
 */
export type ActivityLogAlertsUpdateResponse = ActivityLogAlertResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ActivityLogAlertResource;
    };
};

/**
 * Contains response data for the listBySubscriptionId operation.
 */
export type ActivityLogAlertsListBySubscriptionIdResponse = ActivityLogAlertList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ActivityLogAlertList;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type ActivityLogAlertsListByResourceGroupResponse = ActivityLogAlertList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ActivityLogAlertList;
    };
};

/**
 * Contains response data for the list operation.
 */
export type ActivityLogsListResponse = EventDataCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventDataCollection;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type ActivityLogsListNextResponse = EventDataCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventDataCollection;
    };
};

/**
 * Contains response data for the list operation.
 */
export type EventCategoriesListResponse = EventCategoryCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventCategoryCollection;
    };
};

/**
 * Contains response data for the list operation.
 */
export type TenantActivityLogsListResponse = EventDataCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventDataCollection;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type TenantActivityLogsListNextResponse = EventDataCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventDataCollection;
    };
};

/**
 * Contains response data for the list operation.
 */
export type MetricDefinitionsListResponse = MetricDefinitionCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MetricDefinitionCollection;
    };
};

/**
 * Contains response data for the list operation.
 */
export type MetricsListResponse = Response & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Response;
    };
};

/**
 * Contains response data for the get operation.
 */
export type MetricBaselineGetResponse = BaselineResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BaselineResponse;
    };
};

/**
 * Contains response data for the calculateBaseline operation.
 */
export type MetricBaselineCalculateBaselineResponse = CalculateBaselineResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CalculateBaselineResponse;
    };
};

/**
 * Contains response data for the listBySubscription operation.
 */
export type MetricAlertsListBySubscriptionResponse = MetricAlertResourceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MetricAlertResourceCollection;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type MetricAlertsListByResourceGroupResponse = MetricAlertResourceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MetricAlertResourceCollection;
    };
};

/**
 * Contains response data for the get operation.
 */
export type MetricAlertsGetResponse = MetricAlertResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MetricAlertResource;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type MetricAlertsCreateOrUpdateResponse = MetricAlertResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MetricAlertResource;
    };
};

/**
 * Contains response data for the update operation.
 */
export type MetricAlertsUpdateResponse = MetricAlertResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MetricAlertResource;
    };
};

/**
 * Contains response data for the list operation.
 */
export type MetricAlertsStatusListResponse = MetricAlertStatusCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MetricAlertStatusCollection;
    };
};

/**
 * Contains response data for the listByName operation.
 */
export type MetricAlertsStatusListByNameResponse = MetricAlertStatusCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MetricAlertStatusCollection;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ScheduledQueryRulesCreateOrUpdateResponse = LogSearchRuleResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LogSearchRuleResource;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ScheduledQueryRulesGetResponse = LogSearchRuleResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LogSearchRuleResource;
    };
};

/**
 * Contains response data for the update operation.
 */
export type ScheduledQueryRulesUpdateResponse = LogSearchRuleResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LogSearchRuleResource;
    };
};

/**
 * Contains response data for the listBySubscription operation.
 */
export type ScheduledQueryRulesListBySubscriptionResponse = LogSearchRuleResourceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LogSearchRuleResourceCollection;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type ScheduledQueryRulesListByResourceGroupResponse = LogSearchRuleResourceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LogSearchRuleResourceCollection;
    };
};

/**
 * Contains response data for the list operation.
 */
export type MetricNamespacesListResponse = MetricNamespaceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MetricNamespaceCollection;
    };
};
