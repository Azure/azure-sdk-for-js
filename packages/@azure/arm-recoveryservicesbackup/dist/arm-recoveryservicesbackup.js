/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('ms-rest-azure-js'), require('ms-rest-js')) :
    typeof define === 'function' && define.amd ? define(['exports', 'ms-rest-azure-js', 'ms-rest-js'], factory) :
    (factory((global.Azure = global.Azure || {}, global.Azure.ArmRecoveryservicesbackup = {}),global.msRestAzure,global.msRest));
}(this, (function (exports,msRestAzure,msRest) { 'use strict';

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */
    /* global Reflect, Promise */

    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };

    function __extends(d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }

    var __assign = function() {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    /**
     * Defines values for ProtectionState.
     * Possible values include: 'Invalid', 'IRPending', 'Protected',
     * 'ProtectionError', 'ProtectionStopped', 'ProtectionPaused'
     * There could be more values for this enum apart from the ones defined here.If
     * you want to set a value that is not from the known values then you can do
     * the following:
     * let param: ProtectionState =
     * <ProtectionState>"someUnknownValueThatWillStillBeValid";
     * @readonly
     * @enum {string}
     */
    var ProtectionState;
    (function (ProtectionState) {
        ProtectionState["Invalid"] = "Invalid";
        ProtectionState["IRPending"] = "IRPending";
        ProtectionState["Protected"] = "Protected";
        ProtectionState["ProtectionError"] = "ProtectionError";
        ProtectionState["ProtectionStopped"] = "ProtectionStopped";
        ProtectionState["ProtectionPaused"] = "ProtectionPaused";
    })(ProtectionState || (ProtectionState = {}));
    /**
     * Defines values for HealthStatus.
     * Possible values include: 'Passed', 'ActionRequired', 'ActionSuggested',
     * 'Invalid'
     * There could be more values for this enum apart from the ones defined here.If
     * you want to set a value that is not from the known values then you can do
     * the following:
     * let param: HealthStatus =
     * <HealthStatus>"someUnknownValueThatWillStillBeValid";
     * @readonly
     * @enum {string}
     */
    var HealthStatus;
    (function (HealthStatus) {
        HealthStatus["Passed"] = "Passed";
        HealthStatus["ActionRequired"] = "ActionRequired";
        HealthStatus["ActionSuggested"] = "ActionSuggested";
        HealthStatus["Invalid"] = "Invalid";
    })(HealthStatus || (HealthStatus = {}));
    /**
     * Defines values for WorkloadType.
     * Possible values include: 'Invalid', 'VM', 'FileFolder', 'AzureSqlDb',
     * 'SQLDB', 'Exchange', 'Sharepoint', 'VMwareVM', 'SystemState', 'Client',
     * 'GenericDataSource', 'SQLDataBase', 'AzureFileShare', 'SAPHanaDatabase'
     * There could be more values for this enum apart from the ones defined here.If
     * you want to set a value that is not from the known values then you can do
     * the following:
     * let param: WorkloadType =
     * <WorkloadType>"someUnknownValueThatWillStillBeValid";
     * @readonly
     * @enum {string}
     */
    var WorkloadType;
    (function (WorkloadType) {
        WorkloadType["Invalid"] = "Invalid";
        WorkloadType["VM"] = "VM";
        WorkloadType["FileFolder"] = "FileFolder";
        WorkloadType["AzureSqlDb"] = "AzureSqlDb";
        WorkloadType["SQLDB"] = "SQLDB";
        WorkloadType["Exchange"] = "Exchange";
        WorkloadType["Sharepoint"] = "Sharepoint";
        WorkloadType["VMwareVM"] = "VMwareVM";
        WorkloadType["SystemState"] = "SystemState";
        WorkloadType["Client"] = "Client";
        WorkloadType["GenericDataSource"] = "GenericDataSource";
        WorkloadType["SQLDataBase"] = "SQLDataBase";
        WorkloadType["AzureFileShare"] = "AzureFileShare";
        WorkloadType["SAPHanaDatabase"] = "SAPHanaDatabase";
    })(WorkloadType || (WorkloadType = {}));
    /**
     * Defines values for RecoveryType.
     * Possible values include: 'Invalid', 'OriginalLocation', 'AlternateLocation',
     * 'RestoreDisks'
     * There could be more values for this enum apart from the ones defined here.If
     * you want to set a value that is not from the known values then you can do
     * the following:
     * let param: RecoveryType =
     * <RecoveryType>"someUnknownValueThatWillStillBeValid";
     * @readonly
     * @enum {string}
     */
    var RecoveryType;
    (function (RecoveryType) {
        RecoveryType["Invalid"] = "Invalid";
        RecoveryType["OriginalLocation"] = "OriginalLocation";
        RecoveryType["AlternateLocation"] = "AlternateLocation";
        RecoveryType["RestoreDisks"] = "RestoreDisks";
    })(RecoveryType || (RecoveryType = {}));
    /**
     * Defines values for CopyOptions.
     * Possible values include: 'Invalid', 'CreateCopy', 'Skip', 'Overwrite',
     * 'FailOnConflict'
     * There could be more values for this enum apart from the ones defined here.If
     * you want to set a value that is not from the known values then you can do
     * the following:
     * let param: CopyOptions =
     * <CopyOptions>"someUnknownValueThatWillStillBeValid";
     * @readonly
     * @enum {string}
     */
    var CopyOptions;
    (function (CopyOptions) {
        CopyOptions["Invalid"] = "Invalid";
        CopyOptions["CreateCopy"] = "CreateCopy";
        CopyOptions["Skip"] = "Skip";
        CopyOptions["Overwrite"] = "Overwrite";
        CopyOptions["FailOnConflict"] = "FailOnConflict";
    })(CopyOptions || (CopyOptions = {}));
    /**
     * Defines values for RestoreRequestType.
     * Possible values include: 'Invalid', 'FullShareRestore', 'ItemLevelRestore'
     * There could be more values for this enum apart from the ones defined here.If
     * you want to set a value that is not from the known values then you can do
     * the following:
     * let param: RestoreRequestType =
     * <RestoreRequestType>"someUnknownValueThatWillStillBeValid";
     * @readonly
     * @enum {string}
     */
    var RestoreRequestType;
    (function (RestoreRequestType) {
        RestoreRequestType["Invalid"] = "Invalid";
        RestoreRequestType["FullShareRestore"] = "FullShareRestore";
        RestoreRequestType["ItemLevelRestore"] = "ItemLevelRestore";
    })(RestoreRequestType || (RestoreRequestType = {}));
    /**
     * Defines values for JobSupportedAction.
     * Possible values include: 'Invalid', 'Cancellable', 'Retriable'
     * @readonly
     * @enum {string}
     */
    var JobSupportedAction;
    (function (JobSupportedAction) {
        JobSupportedAction["Invalid"] = "Invalid";
        JobSupportedAction["Cancellable"] = "Cancellable";
        JobSupportedAction["Retriable"] = "Retriable";
    })(JobSupportedAction || (JobSupportedAction = {}));
    /**
     * Defines values for ProtectedItemState.
     * Possible values include: 'Invalid', 'IRPending', 'Protected',
     * 'ProtectionError', 'ProtectionStopped', 'ProtectionPaused'
     * There could be more values for this enum apart from the ones defined here.If
     * you want to set a value that is not from the known values then you can do
     * the following:
     * let param: ProtectedItemState =
     * <ProtectedItemState>"someUnknownValueThatWillStillBeValid";
     * @readonly
     * @enum {string}
     */
    var ProtectedItemState;
    (function (ProtectedItemState) {
        ProtectedItemState["Invalid"] = "Invalid";
        ProtectedItemState["IRPending"] = "IRPending";
        ProtectedItemState["Protected"] = "Protected";
        ProtectedItemState["ProtectionError"] = "ProtectionError";
        ProtectedItemState["ProtectionStopped"] = "ProtectionStopped";
        ProtectedItemState["ProtectionPaused"] = "ProtectionPaused";
    })(ProtectedItemState || (ProtectedItemState = {}));
    /**
     * Defines values for SupportStatus.
     * Possible values include: 'Invalid', 'Supported', 'DefaultOFF', 'DefaultON',
     * 'NotSupported'
     * There could be more values for this enum apart from the ones defined here.If
     * you want to set a value that is not from the known values then you can do
     * the following:
     * let param: SupportStatus =
     * <SupportStatus>"someUnknownValueThatWillStillBeValid";
     * @readonly
     * @enum {string}
     */
    var SupportStatus;
    (function (SupportStatus) {
        SupportStatus["Invalid"] = "Invalid";
        SupportStatus["Supported"] = "Supported";
        SupportStatus["DefaultOFF"] = "DefaultOFF";
        SupportStatus["DefaultON"] = "DefaultON";
        SupportStatus["NotSupported"] = "NotSupported";
    })(SupportStatus || (SupportStatus = {}));
    /**
     * Defines values for LastBackupStatus.
     * Possible values include: 'Invalid', 'Healthy', 'Unhealthy', 'IRPending'
     * There could be more values for this enum apart from the ones defined here.If
     * you want to set a value that is not from the known values then you can do
     * the following:
     * let param: LastBackupStatus =
     * <LastBackupStatus>"someUnknownValueThatWillStillBeValid";
     * @readonly
     * @enum {string}
     */
    var LastBackupStatus;
    (function (LastBackupStatus) {
        LastBackupStatus["Invalid"] = "Invalid";
        LastBackupStatus["Healthy"] = "Healthy";
        LastBackupStatus["Unhealthy"] = "Unhealthy";
        LastBackupStatus["IRPending"] = "IRPending";
    })(LastBackupStatus || (LastBackupStatus = {}));
    /**
     * Defines values for ProtectedItemHealthStatus.
     * Possible values include: 'Invalid', 'Healthy', 'Unhealthy', 'NotReachable',
     * 'IRPending'
     * There could be more values for this enum apart from the ones defined here.If
     * you want to set a value that is not from the known values then you can do
     * the following:
     * let param: ProtectedItemHealthStatus =
     * <ProtectedItemHealthStatus>"someUnknownValueThatWillStillBeValid";
     * @readonly
     * @enum {string}
     */
    var ProtectedItemHealthStatus;
    (function (ProtectedItemHealthStatus) {
        ProtectedItemHealthStatus["Invalid"] = "Invalid";
        ProtectedItemHealthStatus["Healthy"] = "Healthy";
        ProtectedItemHealthStatus["Unhealthy"] = "Unhealthy";
        ProtectedItemHealthStatus["NotReachable"] = "NotReachable";
        ProtectedItemHealthStatus["IRPending"] = "IRPending";
    })(ProtectedItemHealthStatus || (ProtectedItemHealthStatus = {}));
    /**
     * Defines values for PolicyType.
     * Possible values include: 'Invalid', 'Full', 'Differential', 'Log',
     * 'CopyOnlyFull'
     * There could be more values for this enum apart from the ones defined here.If
     * you want to set a value that is not from the known values then you can do
     * the following:
     * let param: PolicyType = <PolicyType>"someUnknownValueThatWillStillBeValid";
     * @readonly
     * @enum {string}
     */
    var PolicyType;
    (function (PolicyType) {
        PolicyType["Invalid"] = "Invalid";
        PolicyType["Full"] = "Full";
        PolicyType["Differential"] = "Differential";
        PolicyType["Log"] = "Log";
        PolicyType["CopyOnlyFull"] = "CopyOnlyFull";
    })(PolicyType || (PolicyType = {}));
    /**
     * Defines values for OverwriteOptions.
     * Possible values include: 'Invalid', 'FailOnConflict', 'Overwrite'
     * There could be more values for this enum apart from the ones defined here.If
     * you want to set a value that is not from the known values then you can do
     * the following:
     * let param: OverwriteOptions =
     * <OverwriteOptions>"someUnknownValueThatWillStillBeValid";
     * @readonly
     * @enum {string}
     */
    var OverwriteOptions;
    (function (OverwriteOptions) {
        OverwriteOptions["Invalid"] = "Invalid";
        OverwriteOptions["FailOnConflict"] = "FailOnConflict";
        OverwriteOptions["Overwrite"] = "Overwrite";
    })(OverwriteOptions || (OverwriteOptions = {}));
    /**
     * Defines values for WorkloadItemType.
     * Possible values include: 'Invalid', 'SQLInstance', 'SQLDataBase',
     * 'SAPHanaSystem', 'SAPHanaDatabase'
     * There could be more values for this enum apart from the ones defined here.If
     * you want to set a value that is not from the known values then you can do
     * the following:
     * let param: WorkloadItemType =
     * <WorkloadItemType>"someUnknownValueThatWillStillBeValid";
     * @readonly
     * @enum {string}
     */
    var WorkloadItemType;
    (function (WorkloadItemType) {
        WorkloadItemType["Invalid"] = "Invalid";
        WorkloadItemType["SQLInstance"] = "SQLInstance";
        WorkloadItemType["SQLDataBase"] = "SQLDataBase";
        WorkloadItemType["SAPHanaSystem"] = "SAPHanaSystem";
        WorkloadItemType["SAPHanaDatabase"] = "SAPHanaDatabase";
    })(WorkloadItemType || (WorkloadItemType = {}));
    /**
     * Defines values for SQLDataDirectoryType.
     * Possible values include: 'Invalid', 'Data', 'Log'
     * There could be more values for this enum apart from the ones defined here.If
     * you want to set a value that is not from the known values then you can do
     * the following:
     * let param: SQLDataDirectoryType =
     * <SQLDataDirectoryType>"someUnknownValueThatWillStillBeValid";
     * @readonly
     * @enum {string}
     */
    var SQLDataDirectoryType;
    (function (SQLDataDirectoryType) {
        SQLDataDirectoryType["Invalid"] = "Invalid";
        SQLDataDirectoryType["Data"] = "Data";
        SQLDataDirectoryType["Log"] = "Log";
    })(SQLDataDirectoryType || (SQLDataDirectoryType = {}));
    /**
     * Defines values for UsagesUnit.
     * Possible values include: 'Count', 'Bytes', 'Seconds', 'Percent',
     * 'CountPerSecond', 'BytesPerSecond'
     * There could be more values for this enum apart from the ones defined here.If
     * you want to set a value that is not from the known values then you can do
     * the following:
     * let param: UsagesUnit = <UsagesUnit>"someUnknownValueThatWillStillBeValid";
     * @readonly
     * @enum {string}
     */
    var UsagesUnit;
    (function (UsagesUnit) {
        UsagesUnit["Count"] = "Count";
        UsagesUnit["Bytes"] = "Bytes";
        UsagesUnit["Seconds"] = "Seconds";
        UsagesUnit["Percent"] = "Percent";
        UsagesUnit["CountPerSecond"] = "CountPerSecond";
        UsagesUnit["BytesPerSecond"] = "BytesPerSecond";
    })(UsagesUnit || (UsagesUnit = {}));
    /**
     * Defines values for DataSourceType.
     * Possible values include: 'Invalid', 'VM', 'FileFolder', 'AzureSqlDb',
     * 'SQLDB', 'Exchange', 'Sharepoint', 'VMwareVM', 'SystemState', 'Client',
     * 'GenericDataSource', 'SQLDataBase', 'AzureFileShare', 'SAPHanaDatabase'
     * There could be more values for this enum apart from the ones defined here.If
     * you want to set a value that is not from the known values then you can do
     * the following:
     * let param: DataSourceType =
     * <DataSourceType>"someUnknownValueThatWillStillBeValid";
     * @readonly
     * @enum {string}
     */
    var DataSourceType;
    (function (DataSourceType) {
        DataSourceType["Invalid"] = "Invalid";
        DataSourceType["VM"] = "VM";
        DataSourceType["FileFolder"] = "FileFolder";
        DataSourceType["AzureSqlDb"] = "AzureSqlDb";
        DataSourceType["SQLDB"] = "SQLDB";
        DataSourceType["Exchange"] = "Exchange";
        DataSourceType["Sharepoint"] = "Sharepoint";
        DataSourceType["VMwareVM"] = "VMwareVM";
        DataSourceType["SystemState"] = "SystemState";
        DataSourceType["Client"] = "Client";
        DataSourceType["GenericDataSource"] = "GenericDataSource";
        DataSourceType["SQLDataBase"] = "SQLDataBase";
        DataSourceType["AzureFileShare"] = "AzureFileShare";
        DataSourceType["SAPHanaDatabase"] = "SAPHanaDatabase";
    })(DataSourceType || (DataSourceType = {}));
    /**
     * Defines values for ProtectionStatus.
     * Possible values include: 'Invalid', 'NotProtected', 'Protecting',
     * 'Protected', 'ProtectionFailed'
     * There could be more values for this enum apart from the ones defined here.If
     * you want to set a value that is not from the known values then you can do
     * the following:
     * let param: ProtectionStatus =
     * <ProtectionStatus>"someUnknownValueThatWillStillBeValid";
     * @readonly
     * @enum {string}
     */
    var ProtectionStatus;
    (function (ProtectionStatus) {
        ProtectionStatus["Invalid"] = "Invalid";
        ProtectionStatus["NotProtected"] = "NotProtected";
        ProtectionStatus["Protecting"] = "Protecting";
        ProtectionStatus["Protected"] = "Protected";
        ProtectionStatus["ProtectionFailed"] = "ProtectionFailed";
    })(ProtectionStatus || (ProtectionStatus = {}));
    /**
     * Defines values for FabricName.
     * Possible values include: 'Invalid', 'Azure'
     * There could be more values for this enum apart from the ones defined here.If
     * you want to set a value that is not from the known values then you can do
     * the following:
     * let param: FabricName = <FabricName>"someUnknownValueThatWillStillBeValid";
     * @readonly
     * @enum {string}
     */
    var FabricName;
    (function (FabricName) {
        FabricName["Invalid"] = "Invalid";
        FabricName["Azure"] = "Azure";
    })(FabricName || (FabricName = {}));
    /**
     * Defines values for Type.
     * Possible values include: 'Invalid', 'BackupProtectedItemCountSummary',
     * 'BackupProtectionContainerCountSummary'
     * There could be more values for this enum apart from the ones defined here.If
     * you want to set a value that is not from the known values then you can do
     * the following:
     * let param: Type = <Type>"someUnknownValueThatWillStillBeValid";
     * @readonly
     * @enum {string}
     */
    var Type;
    (function (Type) {
        Type["Invalid"] = "Invalid";
        Type["BackupProtectedItemCountSummary"] = "BackupProtectedItemCountSummary";
        Type["BackupProtectionContainerCountSummary"] = "BackupProtectionContainerCountSummary";
    })(Type || (Type = {}));
    /**
     * Defines values for RetentionDurationType.
     * Possible values include: 'Invalid', 'Days', 'Weeks', 'Months', 'Years'
     * There could be more values for this enum apart from the ones defined here.If
     * you want to set a value that is not from the known values then you can do
     * the following:
     * let param: RetentionDurationType =
     * <RetentionDurationType>"someUnknownValueThatWillStillBeValid";
     * @readonly
     * @enum {string}
     */
    var RetentionDurationType;
    (function (RetentionDurationType) {
        RetentionDurationType["Invalid"] = "Invalid";
        RetentionDurationType["Days"] = "Days";
        RetentionDurationType["Weeks"] = "Weeks";
        RetentionDurationType["Months"] = "Months";
        RetentionDurationType["Years"] = "Years";
    })(RetentionDurationType || (RetentionDurationType = {}));
    /**
     * Defines values for BackupManagementType.
     * Possible values include: 'Invalid', 'AzureIaasVM', 'MAB', 'DPM',
     * 'AzureBackupServer', 'AzureSql', 'AzureStorage', 'AzureWorkload',
     * 'DefaultBackup'
     * There could be more values for this enum apart from the ones defined here.If
     * you want to set a value that is not from the known values then you can do
     * the following:
     * let param: BackupManagementType =
     * <BackupManagementType>"someUnknownValueThatWillStillBeValid";
     * @readonly
     * @enum {string}
     */
    var BackupManagementType;
    (function (BackupManagementType) {
        BackupManagementType["Invalid"] = "Invalid";
        BackupManagementType["AzureIaasVM"] = "AzureIaasVM";
        BackupManagementType["MAB"] = "MAB";
        BackupManagementType["DPM"] = "DPM";
        BackupManagementType["AzureBackupServer"] = "AzureBackupServer";
        BackupManagementType["AzureSql"] = "AzureSql";
        BackupManagementType["AzureStorage"] = "AzureStorage";
        BackupManagementType["AzureWorkload"] = "AzureWorkload";
        BackupManagementType["DefaultBackup"] = "DefaultBackup";
    })(BackupManagementType || (BackupManagementType = {}));
    /**
     * Defines values for JobStatus.
     * Possible values include: 'Invalid', 'InProgress', 'Completed', 'Failed',
     * 'CompletedWithWarnings', 'Cancelled', 'Cancelling'
     * There could be more values for this enum apart from the ones defined here.If
     * you want to set a value that is not from the known values then you can do
     * the following:
     * let param: JobStatus = <JobStatus>"someUnknownValueThatWillStillBeValid";
     * @readonly
     * @enum {string}
     */
    var JobStatus;
    (function (JobStatus) {
        JobStatus["Invalid"] = "Invalid";
        JobStatus["InProgress"] = "InProgress";
        JobStatus["Completed"] = "Completed";
        JobStatus["Failed"] = "Failed";
        JobStatus["CompletedWithWarnings"] = "CompletedWithWarnings";
        JobStatus["Cancelled"] = "Cancelled";
        JobStatus["Cancelling"] = "Cancelling";
    })(JobStatus || (JobStatus = {}));
    /**
     * Defines values for JobOperationType.
     * Possible values include: 'Invalid', 'Register', 'UnRegister',
     * 'ConfigureBackup', 'Backup', 'Restore', 'DisableBackup', 'DeleteBackupData'
     * There could be more values for this enum apart from the ones defined here.If
     * you want to set a value that is not from the known values then you can do
     * the following:
     * let param: JobOperationType =
     * <JobOperationType>"someUnknownValueThatWillStillBeValid";
     * @readonly
     * @enum {string}
     */
    var JobOperationType;
    (function (JobOperationType) {
        JobOperationType["Invalid"] = "Invalid";
        JobOperationType["Register"] = "Register";
        JobOperationType["UnRegister"] = "UnRegister";
        JobOperationType["ConfigureBackup"] = "ConfigureBackup";
        JobOperationType["Backup"] = "Backup";
        JobOperationType["Restore"] = "Restore";
        JobOperationType["DisableBackup"] = "DisableBackup";
        JobOperationType["DeleteBackupData"] = "DeleteBackupData";
    })(JobOperationType || (JobOperationType = {}));
    /**
     * Defines values for DayOfWeek.
     * Possible values include: 'Sunday', 'Monday', 'Tuesday', 'Wednesday',
     * 'Thursday', 'Friday', 'Saturday'
     * @readonly
     * @enum {string}
     */
    var DayOfWeek;
    (function (DayOfWeek) {
        DayOfWeek["Sunday"] = "Sunday";
        DayOfWeek["Monday"] = "Monday";
        DayOfWeek["Tuesday"] = "Tuesday";
        DayOfWeek["Wednesday"] = "Wednesday";
        DayOfWeek["Thursday"] = "Thursday";
        DayOfWeek["Friday"] = "Friday";
        DayOfWeek["Saturday"] = "Saturday";
    })(DayOfWeek || (DayOfWeek = {}));
    /**
     * Defines values for RetentionScheduleFormat.
     * Possible values include: 'Invalid', 'Daily', 'Weekly'
     * There could be more values for this enum apart from the ones defined here.If
     * you want to set a value that is not from the known values then you can do
     * the following:
     * let param: RetentionScheduleFormat =
     * <RetentionScheduleFormat>"someUnknownValueThatWillStillBeValid";
     * @readonly
     * @enum {string}
     */
    var RetentionScheduleFormat;
    (function (RetentionScheduleFormat) {
        RetentionScheduleFormat["Invalid"] = "Invalid";
        RetentionScheduleFormat["Daily"] = "Daily";
        RetentionScheduleFormat["Weekly"] = "Weekly";
    })(RetentionScheduleFormat || (RetentionScheduleFormat = {}));
    /**
     * Defines values for WeekOfMonth.
     * Possible values include: 'First', 'Second', 'Third', 'Fourth', 'Last',
     * 'Invalid'
     * @readonly
     * @enum {string}
     */
    var WeekOfMonth;
    (function (WeekOfMonth) {
        WeekOfMonth["First"] = "First";
        WeekOfMonth["Second"] = "Second";
        WeekOfMonth["Third"] = "Third";
        WeekOfMonth["Fourth"] = "Fourth";
        WeekOfMonth["Last"] = "Last";
        WeekOfMonth["Invalid"] = "Invalid";
    })(WeekOfMonth || (WeekOfMonth = {}));
    /**
     * Defines values for MonthOfYear.
     * Possible values include: 'Invalid', 'January', 'February', 'March', 'April',
     * 'May', 'June', 'July', 'August', 'September', 'October', 'November',
     * 'December'
     * @readonly
     * @enum {string}
     */
    var MonthOfYear;
    (function (MonthOfYear) {
        MonthOfYear["Invalid"] = "Invalid";
        MonthOfYear["January"] = "January";
        MonthOfYear["February"] = "February";
        MonthOfYear["March"] = "March";
        MonthOfYear["April"] = "April";
        MonthOfYear["May"] = "May";
        MonthOfYear["June"] = "June";
        MonthOfYear["July"] = "July";
        MonthOfYear["August"] = "August";
        MonthOfYear["September"] = "September";
        MonthOfYear["October"] = "October";
        MonthOfYear["November"] = "November";
        MonthOfYear["December"] = "December";
    })(MonthOfYear || (MonthOfYear = {}));
    /**
     * Defines values for MabServerType.
     * Possible values include: 'Invalid', 'Unknown', 'IaasVMContainer',
     * 'IaasVMServiceContainer', 'DPMContainer', 'AzureBackupServerContainer',
     * 'MABContainer', 'Cluster', 'AzureSqlContainer', 'Windows', 'VCenter',
     * 'VMAppContainer', 'SQLAGWorkLoadContainer', 'StorageContainer',
     * 'GenericContainer'
     * There could be more values for this enum apart from the ones defined here.If
     * you want to set a value that is not from the known values then you can do
     * the following:
     * let param: MabServerType =
     * <MabServerType>"someUnknownValueThatWillStillBeValid";
     * @readonly
     * @enum {string}
     */
    var MabServerType;
    (function (MabServerType) {
        MabServerType["Invalid"] = "Invalid";
        MabServerType["Unknown"] = "Unknown";
        MabServerType["IaasVMContainer"] = "IaasVMContainer";
        MabServerType["IaasVMServiceContainer"] = "IaasVMServiceContainer";
        MabServerType["DPMContainer"] = "DPMContainer";
        MabServerType["AzureBackupServerContainer"] = "AzureBackupServerContainer";
        MabServerType["MABContainer"] = "MABContainer";
        MabServerType["Cluster"] = "Cluster";
        MabServerType["AzureSqlContainer"] = "AzureSqlContainer";
        MabServerType["Windows"] = "Windows";
        MabServerType["VCenter"] = "VCenter";
        MabServerType["VMAppContainer"] = "VMAppContainer";
        MabServerType["SQLAGWorkLoadContainer"] = "SQLAGWorkLoadContainer";
        MabServerType["StorageContainer"] = "StorageContainer";
        MabServerType["GenericContainer"] = "GenericContainer";
    })(MabServerType || (MabServerType = {}));
    /**
     * Defines values for HttpStatusCode.
     * Possible values include: 'Continue', 'SwitchingProtocols', 'OK', 'Created',
     * 'Accepted', 'NonAuthoritativeInformation', 'NoContent', 'ResetContent',
     * 'PartialContent', 'MultipleChoices', 'Ambiguous', 'MovedPermanently',
     * 'Moved', 'Found', 'Redirect', 'SeeOther', 'RedirectMethod', 'NotModified',
     * 'UseProxy', 'Unused', 'TemporaryRedirect', 'RedirectKeepVerb', 'BadRequest',
     * 'Unauthorized', 'PaymentRequired', 'Forbidden', 'NotFound',
     * 'MethodNotAllowed', 'NotAcceptable', 'ProxyAuthenticationRequired',
     * 'RequestTimeout', 'Conflict', 'Gone', 'LengthRequired',
     * 'PreconditionFailed', 'RequestEntityTooLarge', 'RequestUriTooLong',
     * 'UnsupportedMediaType', 'RequestedRangeNotSatisfiable', 'ExpectationFailed',
     * 'UpgradeRequired', 'InternalServerError', 'NotImplemented', 'BadGateway',
     * 'ServiceUnavailable', 'GatewayTimeout', 'HttpVersionNotSupported'
     * @readonly
     * @enum {string}
     */
    var HttpStatusCode;
    (function (HttpStatusCode) {
        HttpStatusCode["Continue"] = "Continue";
        HttpStatusCode["SwitchingProtocols"] = "SwitchingProtocols";
        HttpStatusCode["OK"] = "OK";
        HttpStatusCode["Created"] = "Created";
        HttpStatusCode["Accepted"] = "Accepted";
        HttpStatusCode["NonAuthoritativeInformation"] = "NonAuthoritativeInformation";
        HttpStatusCode["NoContent"] = "NoContent";
        HttpStatusCode["ResetContent"] = "ResetContent";
        HttpStatusCode["PartialContent"] = "PartialContent";
        HttpStatusCode["MultipleChoices"] = "MultipleChoices";
        HttpStatusCode["Ambiguous"] = "Ambiguous";
        HttpStatusCode["MovedPermanently"] = "MovedPermanently";
        HttpStatusCode["Moved"] = "Moved";
        HttpStatusCode["Found"] = "Found";
        HttpStatusCode["Redirect"] = "Redirect";
        HttpStatusCode["SeeOther"] = "SeeOther";
        HttpStatusCode["RedirectMethod"] = "RedirectMethod";
        HttpStatusCode["NotModified"] = "NotModified";
        HttpStatusCode["UseProxy"] = "UseProxy";
        HttpStatusCode["Unused"] = "Unused";
        HttpStatusCode["TemporaryRedirect"] = "TemporaryRedirect";
        HttpStatusCode["RedirectKeepVerb"] = "RedirectKeepVerb";
        HttpStatusCode["BadRequest"] = "BadRequest";
        HttpStatusCode["Unauthorized"] = "Unauthorized";
        HttpStatusCode["PaymentRequired"] = "PaymentRequired";
        HttpStatusCode["Forbidden"] = "Forbidden";
        HttpStatusCode["NotFound"] = "NotFound";
        HttpStatusCode["MethodNotAllowed"] = "MethodNotAllowed";
        HttpStatusCode["NotAcceptable"] = "NotAcceptable";
        HttpStatusCode["ProxyAuthenticationRequired"] = "ProxyAuthenticationRequired";
        HttpStatusCode["RequestTimeout"] = "RequestTimeout";
        HttpStatusCode["Conflict"] = "Conflict";
        HttpStatusCode["Gone"] = "Gone";
        HttpStatusCode["LengthRequired"] = "LengthRequired";
        HttpStatusCode["PreconditionFailed"] = "PreconditionFailed";
        HttpStatusCode["RequestEntityTooLarge"] = "RequestEntityTooLarge";
        HttpStatusCode["RequestUriTooLong"] = "RequestUriTooLong";
        HttpStatusCode["UnsupportedMediaType"] = "UnsupportedMediaType";
        HttpStatusCode["RequestedRangeNotSatisfiable"] = "RequestedRangeNotSatisfiable";
        HttpStatusCode["ExpectationFailed"] = "ExpectationFailed";
        HttpStatusCode["UpgradeRequired"] = "UpgradeRequired";
        HttpStatusCode["InternalServerError"] = "InternalServerError";
        HttpStatusCode["NotImplemented"] = "NotImplemented";
        HttpStatusCode["BadGateway"] = "BadGateway";
        HttpStatusCode["ServiceUnavailable"] = "ServiceUnavailable";
        HttpStatusCode["GatewayTimeout"] = "GatewayTimeout";
        HttpStatusCode["HttpVersionNotSupported"] = "HttpVersionNotSupported";
    })(HttpStatusCode || (HttpStatusCode = {}));
    /**
     * Defines values for ValidationStatus.
     * Possible values include: 'Invalid', 'Succeeded', 'Failed'
     * There could be more values for this enum apart from the ones defined here.If
     * you want to set a value that is not from the known values then you can do
     * the following:
     * let param: ValidationStatus =
     * <ValidationStatus>"someUnknownValueThatWillStillBeValid";
     * @readonly
     * @enum {string}
     */
    var ValidationStatus;
    (function (ValidationStatus) {
        ValidationStatus["Invalid"] = "Invalid";
        ValidationStatus["Succeeded"] = "Succeeded";
        ValidationStatus["Failed"] = "Failed";
    })(ValidationStatus || (ValidationStatus = {}));
    /**
     * Defines values for CreateMode.
     * Possible values include: 'Invalid', 'Default', 'Recover'
     * There could be more values for this enum apart from the ones defined here.If
     * you want to set a value that is not from the known values then you can do
     * the following:
     * let param: CreateMode = <CreateMode>"someUnknownValueThatWillStillBeValid";
     * @readonly
     * @enum {string}
     */
    var CreateMode;
    (function (CreateMode) {
        CreateMode["Invalid"] = "Invalid";
        CreateMode["Default"] = "Default";
        CreateMode["Recover"] = "Recover";
    })(CreateMode || (CreateMode = {}));
    /**
     * Defines values for HealthState.
     * Possible values include: 'Passed', 'ActionRequired', 'ActionSuggested',
     * 'Invalid'
     * There could be more values for this enum apart from the ones defined here.If
     * you want to set a value that is not from the known values then you can do
     * the following:
     * let param: HealthState =
     * <HealthState>"someUnknownValueThatWillStillBeValid";
     * @readonly
     * @enum {string}
     */
    var HealthState;
    (function (HealthState) {
        HealthState["Passed"] = "Passed";
        HealthState["ActionRequired"] = "ActionRequired";
        HealthState["ActionSuggested"] = "ActionSuggested";
        HealthState["Invalid"] = "Invalid";
    })(HealthState || (HealthState = {}));
    /**
     * Defines values for IntentItemType.
     * Possible values include: 'Invalid', 'SQLInstance',
     * 'SQLAvailabilityGroupContainer'
     * There could be more values for this enum apart from the ones defined here.If
     * you want to set a value that is not from the known values then you can do
     * the following:
     * let param: IntentItemType =
     * <IntentItemType>"someUnknownValueThatWillStillBeValid";
     * @readonly
     * @enum {string}
     */
    var IntentItemType;
    (function (IntentItemType) {
        IntentItemType["Invalid"] = "Invalid";
        IntentItemType["SQLInstance"] = "SQLInstance";
        IntentItemType["SQLAvailabilityGroupContainer"] = "SQLAvailabilityGroupContainer";
    })(IntentItemType || (IntentItemType = {}));
    /**
     * Defines values for ScheduleRunType.
     * Possible values include: 'Invalid', 'Daily', 'Weekly'
     * There could be more values for this enum apart from the ones defined here.If
     * you want to set a value that is not from the known values then you can do
     * the following:
     * let param: ScheduleRunType =
     * <ScheduleRunType>"someUnknownValueThatWillStillBeValid";
     * @readonly
     * @enum {string}
     */
    var ScheduleRunType;
    (function (ScheduleRunType) {
        ScheduleRunType["Invalid"] = "Invalid";
        ScheduleRunType["Daily"] = "Daily";
        ScheduleRunType["Weekly"] = "Weekly";
    })(ScheduleRunType || (ScheduleRunType = {}));
    /**
     * Defines values for AzureFileShareType.
     * Possible values include: 'Invalid', 'XSMB', 'XSync'
     * There could be more values for this enum apart from the ones defined here.If
     * you want to set a value that is not from the known values then you can do
     * the following:
     * let param: AzureFileShareType =
     * <AzureFileShareType>"someUnknownValueThatWillStillBeValid";
     * @readonly
     * @enum {string}
     */
    var AzureFileShareType;
    (function (AzureFileShareType) {
        AzureFileShareType["Invalid"] = "Invalid";
        AzureFileShareType["XSMB"] = "XSMB";
        AzureFileShareType["XSync"] = "XSync";
    })(AzureFileShareType || (AzureFileShareType = {}));
    /**
     * Defines values for InquiryStatus.
     * Possible values include: 'Invalid', 'Success', 'Failed'
     * There could be more values for this enum apart from the ones defined here.If
     * you want to set a value that is not from the known values then you can do
     * the following:
     * let param: InquiryStatus =
     * <InquiryStatus>"someUnknownValueThatWillStillBeValid";
     * @readonly
     * @enum {string}
     */
    var InquiryStatus;
    (function (InquiryStatus) {
        InquiryStatus["Invalid"] = "Invalid";
        InquiryStatus["Success"] = "Success";
        InquiryStatus["Failed"] = "Failed";
    })(InquiryStatus || (InquiryStatus = {}));
    /**
     * Defines values for BackupType.
     * Possible values include: 'Invalid', 'Full', 'Differential', 'Log',
     * 'CopyOnlyFull'
     * There could be more values for this enum apart from the ones defined here.If
     * you want to set a value that is not from the known values then you can do
     * the following:
     * let param: BackupType = <BackupType>"someUnknownValueThatWillStillBeValid";
     * @readonly
     * @enum {string}
     */
    var BackupType;
    (function (BackupType) {
        BackupType["Invalid"] = "Invalid";
        BackupType["Full"] = "Full";
        BackupType["Differential"] = "Differential";
        BackupType["Log"] = "Log";
        BackupType["CopyOnlyFull"] = "CopyOnlyFull";
    })(BackupType || (BackupType = {}));
    /**
     * Defines values for RestorePointType.
     * Possible values include: 'Invalid', 'Full', 'Log', 'Differential'
     * There could be more values for this enum apart from the ones defined here.If
     * you want to set a value that is not from the known values then you can do
     * the following:
     * let param: RestorePointType =
     * <RestorePointType>"someUnknownValueThatWillStillBeValid";
     * @readonly
     * @enum {string}
     */
    var RestorePointType;
    (function (RestorePointType) {
        RestorePointType["Invalid"] = "Invalid";
        RestorePointType["Full"] = "Full";
        RestorePointType["Log"] = "Log";
        RestorePointType["Differential"] = "Differential";
    })(RestorePointType || (RestorePointType = {}));
    /**
     * Defines values for StorageType.
     * Possible values include: 'Invalid', 'GeoRedundant', 'LocallyRedundant'
     * There could be more values for this enum apart from the ones defined here.If
     * you want to set a value that is not from the known values then you can do
     * the following:
     * let param: StorageType =
     * <StorageType>"someUnknownValueThatWillStillBeValid";
     * @readonly
     * @enum {string}
     */
    var StorageType;
    (function (StorageType) {
        StorageType["Invalid"] = "Invalid";
        StorageType["GeoRedundant"] = "GeoRedundant";
        StorageType["LocallyRedundant"] = "LocallyRedundant";
    })(StorageType || (StorageType = {}));
    /**
     * Defines values for StorageTypeState.
     * Possible values include: 'Invalid', 'Locked', 'Unlocked'
     * There could be more values for this enum apart from the ones defined here.If
     * you want to set a value that is not from the known values then you can do
     * the following:
     * let param: StorageTypeState =
     * <StorageTypeState>"someUnknownValueThatWillStillBeValid";
     * @readonly
     * @enum {string}
     */
    var StorageTypeState;
    (function (StorageTypeState) {
        StorageTypeState["Invalid"] = "Invalid";
        StorageTypeState["Locked"] = "Locked";
        StorageTypeState["Unlocked"] = "Unlocked";
    })(StorageTypeState || (StorageTypeState = {}));
    /**
     * Defines values for EnhancedSecurityState.
     * Possible values include: 'Invalid', 'Enabled', 'Disabled'
     * There could be more values for this enum apart from the ones defined here.If
     * you want to set a value that is not from the known values then you can do
     * the following:
     * let param: EnhancedSecurityState =
     * <EnhancedSecurityState>"someUnknownValueThatWillStillBeValid";
     * @readonly
     * @enum {string}
     */
    var EnhancedSecurityState;
    (function (EnhancedSecurityState) {
        EnhancedSecurityState["Invalid"] = "Invalid";
        EnhancedSecurityState["Enabled"] = "Enabled";
        EnhancedSecurityState["Disabled"] = "Disabled";
    })(EnhancedSecurityState || (EnhancedSecurityState = {}));
    /**
     * Defines values for ContainerType.
     * Possible values include: 'Invalid', 'Unknown', 'IaasVMContainer',
     * 'IaasVMServiceContainer', 'DPMContainer', 'AzureBackupServerContainer',
     * 'MABContainer', 'Cluster', 'AzureSqlContainer', 'Windows', 'VCenter',
     * 'VMAppContainer', 'SQLAGWorkLoadContainer', 'StorageContainer',
     * 'GenericContainer'
     * There could be more values for this enum apart from the ones defined here.If
     * you want to set a value that is not from the known values then you can do
     * the following:
     * let param: ContainerType =
     * <ContainerType>"someUnknownValueThatWillStillBeValid";
     * @readonly
     * @enum {string}
     */
    var ContainerType;
    (function (ContainerType) {
        ContainerType["Invalid"] = "Invalid";
        ContainerType["Unknown"] = "Unknown";
        ContainerType["IaasVMContainer"] = "IaasVMContainer";
        ContainerType["IaasVMServiceContainer"] = "IaasVMServiceContainer";
        ContainerType["DPMContainer"] = "DPMContainer";
        ContainerType["AzureBackupServerContainer"] = "AzureBackupServerContainer";
        ContainerType["MABContainer"] = "MABContainer";
        ContainerType["Cluster"] = "Cluster";
        ContainerType["AzureSqlContainer"] = "AzureSqlContainer";
        ContainerType["Windows"] = "Windows";
        ContainerType["VCenter"] = "VCenter";
        ContainerType["VMAppContainer"] = "VMAppContainer";
        ContainerType["SQLAGWorkLoadContainer"] = "SQLAGWorkLoadContainer";
        ContainerType["StorageContainer"] = "StorageContainer";
        ContainerType["GenericContainer"] = "GenericContainer";
    })(ContainerType || (ContainerType = {}));
    /**
     * Defines values for RestorePointQueryType.
     * Possible values include: 'Invalid', 'Full', 'Log', 'Differential',
     * 'FullAndDifferential', 'All'
     * There could be more values for this enum apart from the ones defined here.If
     * you want to set a value that is not from the known values then you can do
     * the following:
     * let param: RestorePointQueryType =
     * <RestorePointQueryType>"someUnknownValueThatWillStillBeValid";
     * @readonly
     * @enum {string}
     */
    var RestorePointQueryType;
    (function (RestorePointQueryType) {
        RestorePointQueryType["Invalid"] = "Invalid";
        RestorePointQueryType["Full"] = "Full";
        RestorePointQueryType["Log"] = "Log";
        RestorePointQueryType["Differential"] = "Differential";
        RestorePointQueryType["FullAndDifferential"] = "FullAndDifferential";
        RestorePointQueryType["All"] = "All";
    })(RestorePointQueryType || (RestorePointQueryType = {}));
    /**
     * Defines values for RecoveryPointTierType.
     * Possible values include: 'Invalid', 'InstantRP', 'HardenedRP'
     * @readonly
     * @enum {string}
     */
    var RecoveryPointTierType;
    (function (RecoveryPointTierType) {
        RecoveryPointTierType["Invalid"] = "Invalid";
        RecoveryPointTierType["InstantRP"] = "InstantRP";
        RecoveryPointTierType["HardenedRP"] = "HardenedRP";
    })(RecoveryPointTierType || (RecoveryPointTierType = {}));
    /**
     * Defines values for RecoveryPointTierStatus.
     * Possible values include: 'Invalid', 'Valid', 'Disabled', 'Deleted'
     * @readonly
     * @enum {string}
     */
    var RecoveryPointTierStatus;
    (function (RecoveryPointTierStatus) {
        RecoveryPointTierStatus["Invalid"] = "Invalid";
        RecoveryPointTierStatus["Valid"] = "Valid";
        RecoveryPointTierStatus["Disabled"] = "Disabled";
        RecoveryPointTierStatus["Deleted"] = "Deleted";
    })(RecoveryPointTierStatus || (RecoveryPointTierStatus = {}));
    /**
     * Defines values for BackupItemType.
     * Possible values include: 'Invalid', 'VM', 'FileFolder', 'AzureSqlDb',
     * 'SQLDB', 'Exchange', 'Sharepoint', 'VMwareVM', 'SystemState', 'Client',
     * 'GenericDataSource', 'SQLDataBase', 'AzureFileShare', 'SAPHanaDatabase'
     * There could be more values for this enum apart from the ones defined here.If
     * you want to set a value that is not from the known values then you can do
     * the following:
     * let param: BackupItemType =
     * <BackupItemType>"someUnknownValueThatWillStillBeValid";
     * @readonly
     * @enum {string}
     */
    var BackupItemType;
    (function (BackupItemType) {
        BackupItemType["Invalid"] = "Invalid";
        BackupItemType["VM"] = "VM";
        BackupItemType["FileFolder"] = "FileFolder";
        BackupItemType["AzureSqlDb"] = "AzureSqlDb";
        BackupItemType["SQLDB"] = "SQLDB";
        BackupItemType["Exchange"] = "Exchange";
        BackupItemType["Sharepoint"] = "Sharepoint";
        BackupItemType["VMwareVM"] = "VMwareVM";
        BackupItemType["SystemState"] = "SystemState";
        BackupItemType["Client"] = "Client";
        BackupItemType["GenericDataSource"] = "GenericDataSource";
        BackupItemType["SQLDataBase"] = "SQLDataBase";
        BackupItemType["AzureFileShare"] = "AzureFileShare";
        BackupItemType["SAPHanaDatabase"] = "SAPHanaDatabase";
    })(BackupItemType || (BackupItemType = {}));
    /**
     * Defines values for OperationStatusValues.
     * Possible values include: 'Invalid', 'InProgress', 'Succeeded', 'Failed',
     * 'Canceled'
     * There could be more values for this enum apart from the ones defined here.If
     * you want to set a value that is not from the known values then you can do
     * the following:
     * let param: OperationStatusValues =
     * <OperationStatusValues>"someUnknownValueThatWillStillBeValid";
     * @readonly
     * @enum {string}
     */
    var OperationStatusValues;
    (function (OperationStatusValues) {
        OperationStatusValues["Invalid"] = "Invalid";
        OperationStatusValues["InProgress"] = "InProgress";
        OperationStatusValues["Succeeded"] = "Succeeded";
        OperationStatusValues["Failed"] = "Failed";
        OperationStatusValues["Canceled"] = "Canceled";
    })(OperationStatusValues || (OperationStatusValues = {}));

    var index = /*#__PURE__*/Object.freeze({
        get ProtectionState () { return ProtectionState; },
        get HealthStatus () { return HealthStatus; },
        get WorkloadType () { return WorkloadType; },
        get RecoveryType () { return RecoveryType; },
        get CopyOptions () { return CopyOptions; },
        get RestoreRequestType () { return RestoreRequestType; },
        get JobSupportedAction () { return JobSupportedAction; },
        get ProtectedItemState () { return ProtectedItemState; },
        get SupportStatus () { return SupportStatus; },
        get LastBackupStatus () { return LastBackupStatus; },
        get ProtectedItemHealthStatus () { return ProtectedItemHealthStatus; },
        get PolicyType () { return PolicyType; },
        get OverwriteOptions () { return OverwriteOptions; },
        get WorkloadItemType () { return WorkloadItemType; },
        get SQLDataDirectoryType () { return SQLDataDirectoryType; },
        get UsagesUnit () { return UsagesUnit; },
        get DataSourceType () { return DataSourceType; },
        get ProtectionStatus () { return ProtectionStatus; },
        get FabricName () { return FabricName; },
        get Type () { return Type; },
        get RetentionDurationType () { return RetentionDurationType; },
        get BackupManagementType () { return BackupManagementType; },
        get JobStatus () { return JobStatus; },
        get JobOperationType () { return JobOperationType; },
        get DayOfWeek () { return DayOfWeek; },
        get RetentionScheduleFormat () { return RetentionScheduleFormat; },
        get WeekOfMonth () { return WeekOfMonth; },
        get MonthOfYear () { return MonthOfYear; },
        get MabServerType () { return MabServerType; },
        get HttpStatusCode () { return HttpStatusCode; },
        get ValidationStatus () { return ValidationStatus; },
        get CreateMode () { return CreateMode; },
        get HealthState () { return HealthState; },
        get IntentItemType () { return IntentItemType; },
        get ScheduleRunType () { return ScheduleRunType; },
        get AzureFileShareType () { return AzureFileShareType; },
        get InquiryStatus () { return InquiryStatus; },
        get BackupType () { return BackupType; },
        get RestorePointType () { return RestorePointType; },
        get StorageType () { return StorageType; },
        get StorageTypeState () { return StorageTypeState; },
        get EnhancedSecurityState () { return EnhancedSecurityState; },
        get ContainerType () { return ContainerType; },
        get RestorePointQueryType () { return RestorePointQueryType; },
        get RecoveryPointTierType () { return RecoveryPointTierType; },
        get RecoveryPointTierStatus () { return RecoveryPointTierStatus; },
        get BackupItemType () { return BackupItemType; },
        get OperationStatusValues () { return OperationStatusValues; }
    });

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    var CloudError = msRestAzure.CloudErrorMapper;
    var BaseResource = msRestAzure.BaseResourceMapper;
    var FeatureSupportRequest = {
        serializedName: "FeatureSupportRequest",
        type: {
            name: "Composite",
            polymorphicDiscriminator: {
                serializedName: "featureType",
                clientName: "featureType"
            },
            uberParent: "FeatureSupportRequest",
            className: "FeatureSupportRequest",
            modelProperties: {
                featureType: {
                    required: true,
                    serializedName: "featureType",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var AzureBackupGoalFeatureSupportRequest = {
        serializedName: "AzureBackupGoals",
        type: {
            name: "Composite",
            polymorphicDiscriminator: FeatureSupportRequest.type.polymorphicDiscriminator,
            uberParent: "FeatureSupportRequest",
            className: "AzureBackupGoalFeatureSupportRequest",
            modelProperties: __assign({}, FeatureSupportRequest.type.modelProperties)
        }
    };
    var AzureFileshareProtectedItemExtendedInfo = {
        serializedName: "AzureFileshareProtectedItemExtendedInfo",
        type: {
            name: "Composite",
            className: "AzureFileshareProtectedItemExtendedInfo",
            modelProperties: {
                oldestRecoveryPoint: {
                    serializedName: "oldestRecoveryPoint",
                    type: {
                        name: "DateTime"
                    }
                },
                recoveryPointCount: {
                    serializedName: "recoveryPointCount",
                    type: {
                        name: "Number"
                    }
                },
                policyState: {
                    serializedName: "policyState",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var ProtectedItem = {
        serializedName: "ProtectedItem",
        type: {
            name: "Composite",
            polymorphicDiscriminator: {
                serializedName: "protectedItemType",
                clientName: "protectedItemType"
            },
            uberParent: "ProtectedItem",
            className: "ProtectedItem",
            modelProperties: {
                backupManagementType: {
                    serializedName: "backupManagementType",
                    type: {
                        name: "String"
                    }
                },
                workloadType: {
                    serializedName: "workloadType",
                    type: {
                        name: "String"
                    }
                },
                containerName: {
                    serializedName: "containerName",
                    type: {
                        name: "String"
                    }
                },
                sourceResourceId: {
                    serializedName: "sourceResourceId",
                    type: {
                        name: "String"
                    }
                },
                policyId: {
                    serializedName: "policyId",
                    type: {
                        name: "String"
                    }
                },
                lastRecoveryPoint: {
                    serializedName: "lastRecoveryPoint",
                    type: {
                        name: "DateTime"
                    }
                },
                backupSetName: {
                    serializedName: "backupSetName",
                    type: {
                        name: "String"
                    }
                },
                createMode: {
                    serializedName: "createMode",
                    type: {
                        name: "String"
                    }
                },
                protectedItemType: {
                    required: true,
                    serializedName: "protectedItemType",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var AzureFileshareProtectedItem = {
        serializedName: "AzureFileShareProtectedItem",
        type: {
            name: "Composite",
            polymorphicDiscriminator: ProtectedItem.type.polymorphicDiscriminator,
            uberParent: "ProtectedItem",
            className: "AzureFileshareProtectedItem",
            modelProperties: __assign({}, ProtectedItem.type.modelProperties, { friendlyName: {
                    serializedName: "friendlyName",
                    type: {
                        name: "String"
                    }
                }, protectionStatus: {
                    serializedName: "protectionStatus",
                    type: {
                        name: "String"
                    }
                }, protectionState: {
                    serializedName: "protectionState",
                    type: {
                        name: "String"
                    }
                }, healthStatus: {
                    serializedName: "healthStatus",
                    type: {
                        name: "String"
                    }
                }, lastBackupStatus: {
                    serializedName: "lastBackupStatus",
                    type: {
                        name: "String"
                    }
                }, lastBackupTime: {
                    serializedName: "lastBackupTime",
                    type: {
                        name: "DateTime"
                    }
                }, extendedInfo: {
                    serializedName: "extendedInfo",
                    type: {
                        name: "Composite",
                        className: "AzureFileshareProtectedItemExtendedInfo"
                    }
                } })
        }
    };
    var SchedulePolicy = {
        serializedName: "SchedulePolicy",
        type: {
            name: "Composite",
            polymorphicDiscriminator: {
                serializedName: "schedulePolicyType",
                clientName: "schedulePolicyType"
            },
            uberParent: "SchedulePolicy",
            className: "SchedulePolicy",
            modelProperties: {
                schedulePolicyType: {
                    required: true,
                    serializedName: "schedulePolicyType",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var RetentionPolicy = {
        serializedName: "RetentionPolicy",
        type: {
            name: "Composite",
            polymorphicDiscriminator: {
                serializedName: "retentionPolicyType",
                clientName: "retentionPolicyType"
            },
            uberParent: "RetentionPolicy",
            className: "RetentionPolicy",
            modelProperties: {
                retentionPolicyType: {
                    required: true,
                    serializedName: "retentionPolicyType",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var ProtectionPolicy = {
        serializedName: "ProtectionPolicy",
        type: {
            name: "Composite",
            polymorphicDiscriminator: {
                serializedName: "backupManagementType",
                clientName: "backupManagementType"
            },
            uberParent: "ProtectionPolicy",
            className: "ProtectionPolicy",
            modelProperties: {
                protectedItemsCount: {
                    serializedName: "protectedItemsCount",
                    type: {
                        name: "Number"
                    }
                },
                backupManagementType: {
                    required: true,
                    serializedName: "backupManagementType",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var AzureFileShareProtectionPolicy = {
        serializedName: "AzureStorage",
        type: {
            name: "Composite",
            polymorphicDiscriminator: ProtectionPolicy.type.polymorphicDiscriminator,
            uberParent: "ProtectionPolicy",
            className: "AzureFileShareProtectionPolicy",
            modelProperties: __assign({}, ProtectionPolicy.type.modelProperties, { workLoadType: {
                    serializedName: "workLoadType",
                    type: {
                        name: "String"
                    }
                }, schedulePolicy: {
                    serializedName: "schedulePolicy",
                    type: {
                        name: "Composite",
                        polymorphicDiscriminator: {
                            serializedName: "schedulePolicyType",
                            clientName: "schedulePolicyType"
                        },
                        uberParent: "SchedulePolicy",
                        className: "SchedulePolicy"
                    }
                }, retentionPolicy: {
                    serializedName: "retentionPolicy",
                    type: {
                        name: "Composite",
                        polymorphicDiscriminator: {
                            serializedName: "retentionPolicyType",
                            clientName: "retentionPolicyType"
                        },
                        uberParent: "RetentionPolicy",
                        className: "RetentionPolicy"
                    }
                }, timeZone: {
                    serializedName: "timeZone",
                    type: {
                        name: "String"
                    }
                } })
        }
    };
    var RestoreFileSpecs = {
        serializedName: "RestoreFileSpecs",
        type: {
            name: "Composite",
            className: "RestoreFileSpecs",
            modelProperties: {
                path: {
                    serializedName: "path",
                    type: {
                        name: "String"
                    }
                },
                fileSpecType: {
                    serializedName: "fileSpecType",
                    type: {
                        name: "String"
                    }
                },
                targetFolderPath: {
                    serializedName: "targetFolderPath",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var TargetAFSRestoreInfo = {
        serializedName: "TargetAFSRestoreInfo",
        type: {
            name: "Composite",
            className: "TargetAFSRestoreInfo",
            modelProperties: {
                name: {
                    serializedName: "name",
                    type: {
                        name: "String"
                    }
                },
                targetResourceId: {
                    serializedName: "targetResourceId",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var RestoreRequest = {
        serializedName: "RestoreRequest",
        type: {
            name: "Composite",
            polymorphicDiscriminator: {
                serializedName: "objectType",
                clientName: "objectType"
            },
            uberParent: "RestoreRequest",
            className: "RestoreRequest",
            modelProperties: {
                objectType: {
                    required: true,
                    serializedName: "objectType",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var AzureFileShareRestoreRequest = {
        serializedName: "AzureFileShareRestoreRequest",
        type: {
            name: "Composite",
            polymorphicDiscriminator: RestoreRequest.type.polymorphicDiscriminator,
            uberParent: "RestoreRequest",
            className: "AzureFileShareRestoreRequest",
            modelProperties: __assign({}, RestoreRequest.type.modelProperties, { recoveryType: {
                    serializedName: "recoveryType",
                    type: {
                        name: "String"
                    }
                }, sourceResourceId: {
                    serializedName: "sourceResourceId",
                    type: {
                        name: "String"
                    }
                }, copyOptions: {
                    serializedName: "copyOptions",
                    type: {
                        name: "String"
                    }
                }, restoreRequestType: {
                    serializedName: "restoreRequestType",
                    type: {
                        name: "String"
                    }
                }, restoreFileSpecs: {
                    serializedName: "restoreFileSpecs",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "RestoreFileSpecs"
                            }
                        }
                    }
                }, targetDetails: {
                    serializedName: "targetDetails",
                    type: {
                        name: "Composite",
                        className: "TargetAFSRestoreInfo"
                    }
                } })
        }
    };
    var AzureIaaSVMProtectedItem = {
        serializedName: "AzureIaaSVMProtectedItem",
        type: {
            name: "Composite",
            polymorphicDiscriminator: ProtectedItem.type.polymorphicDiscriminator,
            uberParent: "ProtectedItem",
            className: "AzureIaaSVMProtectedItem",
            modelProperties: __assign({}, ProtectedItem.type.modelProperties, { friendlyName: {
                    serializedName: "friendlyName",
                    type: {
                        name: "String"
                    }
                }, virtualMachineId: {
                    serializedName: "virtualMachineId",
                    type: {
                        name: "String"
                    }
                }, protectionStatus: {
                    serializedName: "protectionStatus",
                    type: {
                        name: "String"
                    }
                }, protectionState: {
                    serializedName: "protectionState",
                    type: {
                        name: "String"
                    }
                }, healthStatus: {
                    serializedName: "healthStatus",
                    type: {
                        name: "String"
                    }
                }, healthDetails: {
                    serializedName: "healthDetails",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "AzureIaaSVMHealthDetails"
                            }
                        }
                    }
                }, lastBackupStatus: {
                    serializedName: "lastBackupStatus",
                    type: {
                        name: "String"
                    }
                }, lastBackupTime: {
                    serializedName: "lastBackupTime",
                    type: {
                        name: "DateTime"
                    }
                }, protectedItemDataId: {
                    serializedName: "protectedItemDataId",
                    type: {
                        name: "String"
                    }
                }, extendedInfo: {
                    serializedName: "extendedInfo",
                    type: {
                        name: "Composite",
                        className: "AzureIaaSVMProtectedItemExtendedInfo"
                    }
                } })
        }
    };
    var AzureIaaSClassicComputeVMProtectedItem = {
        serializedName: "Microsoft.ClassicCompute/virtualMachines",
        type: {
            name: "Composite",
            polymorphicDiscriminator: ProtectedItem.type.polymorphicDiscriminator,
            uberParent: "ProtectedItem",
            className: "AzureIaaSClassicComputeVMProtectedItem",
            modelProperties: __assign({}, AzureIaaSVMProtectedItem.type.modelProperties)
        }
    };
    var AzureIaaSComputeVMProtectedItem = {
        serializedName: "Microsoft.Compute/virtualMachines",
        type: {
            name: "Composite",
            polymorphicDiscriminator: ProtectedItem.type.polymorphicDiscriminator,
            uberParent: "ProtectedItem",
            className: "AzureIaaSComputeVMProtectedItem",
            modelProperties: __assign({}, AzureIaaSVMProtectedItem.type.modelProperties)
        }
    };
    var AzureIaaSVMErrorInfo = {
        serializedName: "AzureIaaSVMErrorInfo",
        type: {
            name: "Composite",
            className: "AzureIaaSVMErrorInfo",
            modelProperties: {
                errorCode: {
                    serializedName: "errorCode",
                    type: {
                        name: "Number"
                    }
                },
                errorTitle: {
                    serializedName: "errorTitle",
                    type: {
                        name: "String"
                    }
                },
                errorString: {
                    serializedName: "errorString",
                    type: {
                        name: "String"
                    }
                },
                recommendations: {
                    serializedName: "recommendations",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                }
            }
        }
    };
    var AzureIaaSVMHealthDetails = {
        serializedName: "AzureIaaSVMHealthDetails",
        type: {
            name: "Composite",
            className: "AzureIaaSVMHealthDetails",
            modelProperties: {
                code: {
                    serializedName: "code",
                    type: {
                        name: "Number"
                    }
                },
                title: {
                    serializedName: "title",
                    type: {
                        name: "String"
                    }
                },
                message: {
                    serializedName: "message",
                    type: {
                        name: "String"
                    }
                },
                recommendations: {
                    serializedName: "recommendations",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                }
            }
        }
    };
    var AzureIaaSVMJobTaskDetails = {
        serializedName: "AzureIaaSVMJobTaskDetails",
        type: {
            name: "Composite",
            className: "AzureIaaSVMJobTaskDetails",
            modelProperties: {
                taskId: {
                    serializedName: "taskId",
                    type: {
                        name: "String"
                    }
                },
                startTime: {
                    serializedName: "startTime",
                    type: {
                        name: "DateTime"
                    }
                },
                endTime: {
                    serializedName: "endTime",
                    type: {
                        name: "DateTime"
                    }
                },
                instanceId: {
                    serializedName: "instanceId",
                    type: {
                        name: "String"
                    }
                },
                duration: {
                    serializedName: "duration",
                    type: {
                        name: "TimeSpan"
                    }
                },
                status: {
                    serializedName: "status",
                    type: {
                        name: "String"
                    }
                },
                progressPercentage: {
                    serializedName: "progressPercentage",
                    type: {
                        name: "Number"
                    }
                },
                taskExecutionDetails: {
                    serializedName: "taskExecutionDetails",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var AzureIaaSVMJobExtendedInfo = {
        serializedName: "AzureIaaSVMJobExtendedInfo",
        type: {
            name: "Composite",
            className: "AzureIaaSVMJobExtendedInfo",
            modelProperties: {
                tasksList: {
                    serializedName: "tasksList",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "AzureIaaSVMJobTaskDetails"
                            }
                        }
                    }
                },
                propertyBag: {
                    serializedName: "propertyBag",
                    type: {
                        name: "Dictionary",
                        value: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                },
                internalPropertyBag: {
                    serializedName: "internalPropertyBag",
                    type: {
                        name: "Dictionary",
                        value: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                },
                progressPercentage: {
                    serializedName: "progressPercentage",
                    type: {
                        name: "Number"
                    }
                },
                estimatedRemainingDuration: {
                    serializedName: "estimatedRemainingDuration",
                    type: {
                        name: "String"
                    }
                },
                dynamicErrorMessage: {
                    serializedName: "dynamicErrorMessage",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var Job = {
        serializedName: "Job",
        type: {
            name: "Composite",
            polymorphicDiscriminator: {
                serializedName: "jobType",
                clientName: "jobType"
            },
            uberParent: "Job",
            className: "Job",
            modelProperties: {
                entityFriendlyName: {
                    serializedName: "entityFriendlyName",
                    type: {
                        name: "String"
                    }
                },
                backupManagementType: {
                    serializedName: "backupManagementType",
                    type: {
                        name: "String"
                    }
                },
                operation: {
                    serializedName: "operation",
                    type: {
                        name: "String"
                    }
                },
                status: {
                    serializedName: "status",
                    type: {
                        name: "String"
                    }
                },
                startTime: {
                    serializedName: "startTime",
                    type: {
                        name: "DateTime"
                    }
                },
                endTime: {
                    serializedName: "endTime",
                    type: {
                        name: "DateTime"
                    }
                },
                activityId: {
                    serializedName: "activityId",
                    type: {
                        name: "String"
                    }
                },
                jobType: {
                    required: true,
                    serializedName: "jobType",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var AzureIaaSVMJob = {
        serializedName: "AzureIaaSVMJob",
        type: {
            name: "Composite",
            polymorphicDiscriminator: Job.type.polymorphicDiscriminator,
            uberParent: "Job",
            className: "AzureIaaSVMJob",
            modelProperties: __assign({}, Job.type.modelProperties, { duration: {
                    serializedName: "duration",
                    type: {
                        name: "TimeSpan"
                    }
                }, actionsInfo: {
                    serializedName: "actionsInfo",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Enum",
                                allowedValues: [
                                    "Invalid",
                                    "Cancellable",
                                    "Retriable"
                                ]
                            }
                        }
                    }
                }, errorDetails: {
                    serializedName: "errorDetails",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "AzureIaaSVMErrorInfo"
                            }
                        }
                    }
                }, virtualMachineVersion: {
                    serializedName: "virtualMachineVersion",
                    type: {
                        name: "String"
                    }
                }, extendedInfo: {
                    serializedName: "extendedInfo",
                    type: {
                        name: "Composite",
                        className: "AzureIaaSVMJobExtendedInfo"
                    }
                } })
        }
    };
    var AzureIaaSVMProtectedItemExtendedInfo = {
        serializedName: "AzureIaaSVMProtectedItemExtendedInfo",
        type: {
            name: "Composite",
            className: "AzureIaaSVMProtectedItemExtendedInfo",
            modelProperties: {
                oldestRecoveryPoint: {
                    serializedName: "oldestRecoveryPoint",
                    type: {
                        name: "DateTime"
                    }
                },
                recoveryPointCount: {
                    serializedName: "recoveryPointCount",
                    type: {
                        name: "Number"
                    }
                },
                policyInconsistent: {
                    serializedName: "policyInconsistent",
                    type: {
                        name: "Boolean"
                    }
                }
            }
        }
    };
    var AzureIaaSVMProtectionPolicy = {
        serializedName: "AzureIaasVM",
        type: {
            name: "Composite",
            polymorphicDiscriminator: ProtectionPolicy.type.polymorphicDiscriminator,
            uberParent: "ProtectionPolicy",
            className: "AzureIaaSVMProtectionPolicy",
            modelProperties: __assign({}, ProtectionPolicy.type.modelProperties, { schedulePolicy: {
                    serializedName: "schedulePolicy",
                    type: {
                        name: "Composite",
                        polymorphicDiscriminator: {
                            serializedName: "schedulePolicyType",
                            clientName: "schedulePolicyType"
                        },
                        uberParent: "SchedulePolicy",
                        className: "SchedulePolicy"
                    }
                }, retentionPolicy: {
                    serializedName: "retentionPolicy",
                    type: {
                        name: "Composite",
                        polymorphicDiscriminator: {
                            serializedName: "retentionPolicyType",
                            clientName: "retentionPolicyType"
                        },
                        uberParent: "RetentionPolicy",
                        className: "RetentionPolicy"
                    }
                }, instantRpRetentionRangeInDays: {
                    serializedName: "instantRpRetentionRangeInDays",
                    type: {
                        name: "Number"
                    }
                }, timeZone: {
                    serializedName: "timeZone",
                    type: {
                        name: "String"
                    }
                } })
        }
    };
    var ProtectionIntent = {
        serializedName: "ProtectionIntent",
        type: {
            name: "Composite",
            polymorphicDiscriminator: {
                serializedName: "protectionIntentItemType",
                clientName: "protectionIntentItemType"
            },
            uberParent: "ProtectionIntent",
            className: "ProtectionIntent",
            modelProperties: {
                backupManagementType: {
                    serializedName: "backupManagementType",
                    type: {
                        name: "String"
                    }
                },
                sourceResourceId: {
                    serializedName: "sourceResourceId",
                    type: {
                        name: "String"
                    }
                },
                itemId: {
                    serializedName: "itemId",
                    type: {
                        name: "String"
                    }
                },
                policyId: {
                    serializedName: "policyId",
                    type: {
                        name: "String"
                    }
                },
                protectionState: {
                    serializedName: "protectionState",
                    type: {
                        name: "String"
                    }
                },
                protectionIntentItemType: {
                    required: true,
                    serializedName: "protectionIntentItemType",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var AzureRecoveryServiceVaultProtectionIntent = {
        serializedName: "RecoveryServiceVaultItem",
        type: {
            name: "Composite",
            polymorphicDiscriminator: ProtectionIntent.type.polymorphicDiscriminator,
            uberParent: "ProtectionIntent",
            className: "AzureRecoveryServiceVaultProtectionIntent",
            modelProperties: __assign({}, ProtectionIntent.type.modelProperties)
        }
    };
    var AzureResourceProtectionIntent = {
        serializedName: "AzureResourceItem",
        type: {
            name: "Composite",
            polymorphicDiscriminator: ProtectionIntent.type.polymorphicDiscriminator,
            uberParent: "ProtectionIntent",
            className: "AzureResourceProtectionIntent",
            modelProperties: __assign({}, ProtectionIntent.type.modelProperties, { friendlyName: {
                    serializedName: "friendlyName",
                    type: {
                        name: "String"
                    }
                } })
        }
    };
    var AzureSqlProtectedItemExtendedInfo = {
        serializedName: "AzureSqlProtectedItemExtendedInfo",
        type: {
            name: "Composite",
            className: "AzureSqlProtectedItemExtendedInfo",
            modelProperties: {
                oldestRecoveryPoint: {
                    serializedName: "oldestRecoveryPoint",
                    type: {
                        name: "DateTime"
                    }
                },
                recoveryPointCount: {
                    serializedName: "recoveryPointCount",
                    type: {
                        name: "Number"
                    }
                },
                policyState: {
                    serializedName: "policyState",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var AzureSqlProtectedItem = {
        serializedName: "Microsoft.Sql/servers/databases",
        type: {
            name: "Composite",
            polymorphicDiscriminator: ProtectedItem.type.polymorphicDiscriminator,
            uberParent: "ProtectedItem",
            className: "AzureSqlProtectedItem",
            modelProperties: __assign({}, ProtectedItem.type.modelProperties, { protectedItemDataId: {
                    serializedName: "protectedItemDataId",
                    type: {
                        name: "String"
                    }
                }, protectionState: {
                    serializedName: "protectionState",
                    type: {
                        name: "String"
                    }
                }, extendedInfo: {
                    serializedName: "extendedInfo",
                    type: {
                        name: "Composite",
                        className: "AzureSqlProtectedItemExtendedInfo"
                    }
                } })
        }
    };
    var AzureSqlProtectionPolicy = {
        serializedName: "AzureSql",
        type: {
            name: "Composite",
            polymorphicDiscriminator: ProtectionPolicy.type.polymorphicDiscriminator,
            uberParent: "ProtectionPolicy",
            className: "AzureSqlProtectionPolicy",
            modelProperties: __assign({}, ProtectionPolicy.type.modelProperties, { retentionPolicy: {
                    serializedName: "retentionPolicy",
                    type: {
                        name: "Composite",
                        polymorphicDiscriminator: {
                            serializedName: "retentionPolicyType",
                            clientName: "retentionPolicyType"
                        },
                        uberParent: "RetentionPolicy",
                        className: "RetentionPolicy"
                    }
                } })
        }
    };
    var AzureStorageErrorInfo = {
        serializedName: "AzureStorageErrorInfo",
        type: {
            name: "Composite",
            className: "AzureStorageErrorInfo",
            modelProperties: {
                errorCode: {
                    serializedName: "errorCode",
                    type: {
                        name: "Number"
                    }
                },
                errorString: {
                    serializedName: "errorString",
                    type: {
                        name: "String"
                    }
                },
                recommendations: {
                    serializedName: "recommendations",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                }
            }
        }
    };
    var AzureStorageJobTaskDetails = {
        serializedName: "AzureStorageJobTaskDetails",
        type: {
            name: "Composite",
            className: "AzureStorageJobTaskDetails",
            modelProperties: {
                taskId: {
                    serializedName: "taskId",
                    type: {
                        name: "String"
                    }
                },
                status: {
                    serializedName: "status",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var AzureStorageJobExtendedInfo = {
        serializedName: "AzureStorageJobExtendedInfo",
        type: {
            name: "Composite",
            className: "AzureStorageJobExtendedInfo",
            modelProperties: {
                tasksList: {
                    serializedName: "tasksList",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "AzureStorageJobTaskDetails"
                            }
                        }
                    }
                },
                propertyBag: {
                    serializedName: "propertyBag",
                    type: {
                        name: "Dictionary",
                        value: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                },
                dynamicErrorMessage: {
                    serializedName: "dynamicErrorMessage",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var AzureStorageJob = {
        serializedName: "AzureStorageJob",
        type: {
            name: "Composite",
            polymorphicDiscriminator: Job.type.polymorphicDiscriminator,
            uberParent: "Job",
            className: "AzureStorageJob",
            modelProperties: __assign({}, Job.type.modelProperties, { duration: {
                    serializedName: "duration",
                    type: {
                        name: "TimeSpan"
                    }
                }, actionsInfo: {
                    serializedName: "actionsInfo",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Enum",
                                allowedValues: [
                                    "Invalid",
                                    "Cancellable",
                                    "Retriable"
                                ]
                            }
                        }
                    }
                }, errorDetails: {
                    serializedName: "errorDetails",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "AzureStorageErrorInfo"
                            }
                        }
                    }
                }, storageAccountName: {
                    serializedName: "storageAccountName",
                    type: {
                        name: "String"
                    }
                }, storageAccountVersion: {
                    serializedName: "storageAccountVersion",
                    type: {
                        name: "String"
                    }
                }, extendedInfo: {
                    serializedName: "extendedInfo",
                    type: {
                        name: "Composite",
                        className: "AzureStorageJobExtendedInfo"
                    }
                } })
        }
    };
    var AzureVMResourceFeatureSupportRequest = {
        serializedName: "AzureVMResourceBackup",
        type: {
            name: "Composite",
            polymorphicDiscriminator: FeatureSupportRequest.type.polymorphicDiscriminator,
            uberParent: "FeatureSupportRequest",
            className: "AzureVMResourceFeatureSupportRequest",
            modelProperties: __assign({}, FeatureSupportRequest.type.modelProperties, { vmSize: {
                    serializedName: "vmSize",
                    type: {
                        name: "String"
                    }
                }, vmSku: {
                    serializedName: "vmSku",
                    type: {
                        name: "String"
                    }
                } })
        }
    };
    var AzureVMResourceFeatureSupportResponse = {
        serializedName: "AzureVMResourceFeatureSupportResponse",
        type: {
            name: "Composite",
            className: "AzureVMResourceFeatureSupportResponse",
            modelProperties: {
                supportStatus: {
                    serializedName: "supportStatus",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var ErrorDetail = {
        serializedName: "ErrorDetail",
        type: {
            name: "Composite",
            className: "ErrorDetail",
            modelProperties: {
                code: {
                    serializedName: "code",
                    type: {
                        name: "String"
                    }
                },
                message: {
                    serializedName: "message",
                    type: {
                        name: "String"
                    }
                },
                recommendations: {
                    serializedName: "recommendations",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                }
            }
        }
    };
    var AzureVmWorkloadProtectedItemExtendedInfo = {
        serializedName: "AzureVmWorkloadProtectedItemExtendedInfo",
        type: {
            name: "Composite",
            className: "AzureVmWorkloadProtectedItemExtendedInfo",
            modelProperties: {
                oldestRecoveryPoint: {
                    serializedName: "oldestRecoveryPoint",
                    type: {
                        name: "DateTime"
                    }
                },
                recoveryPointCount: {
                    serializedName: "recoveryPointCount",
                    type: {
                        name: "Number"
                    }
                },
                policyState: {
                    serializedName: "policyState",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var AzureVmWorkloadProtectedItem = {
        serializedName: "AzureVmWorkloadProtectedItem",
        type: {
            name: "Composite",
            polymorphicDiscriminator: ProtectedItem.type.polymorphicDiscriminator,
            uberParent: "ProtectedItem",
            className: "AzureVmWorkloadProtectedItem",
            modelProperties: __assign({}, ProtectedItem.type.modelProperties, { friendlyName: {
                    serializedName: "friendlyName",
                    type: {
                        name: "String"
                    }
                }, serverName: {
                    serializedName: "serverName",
                    type: {
                        name: "String"
                    }
                }, parentName: {
                    serializedName: "parentName",
                    type: {
                        name: "String"
                    }
                }, parentType: {
                    serializedName: "parentType",
                    type: {
                        name: "String"
                    }
                }, protectionStatus: {
                    serializedName: "protectionStatus",
                    type: {
                        name: "String"
                    }
                }, protectionState: {
                    serializedName: "protectionState",
                    type: {
                        name: "String"
                    }
                }, lastBackupStatus: {
                    serializedName: "lastBackupStatus",
                    type: {
                        name: "String"
                    }
                }, lastBackupTime: {
                    serializedName: "lastBackupTime",
                    type: {
                        name: "DateTime"
                    }
                }, lastBackupErrorDetail: {
                    serializedName: "lastBackupErrorDetail",
                    type: {
                        name: "Composite",
                        className: "ErrorDetail"
                    }
                }, protectedItemDataSourceId: {
                    serializedName: "protectedItemDataSourceId",
                    type: {
                        name: "String"
                    }
                }, protectedItemHealthStatus: {
                    serializedName: "protectedItemHealthStatus",
                    type: {
                        name: "String"
                    }
                }, extendedInfo: {
                    serializedName: "extendedInfo",
                    type: {
                        name: "Composite",
                        className: "AzureVmWorkloadProtectedItemExtendedInfo"
                    }
                } })
        }
    };
    var Settings = {
        serializedName: "Settings",
        type: {
            name: "Composite",
            className: "Settings",
            modelProperties: {
                timeZone: {
                    serializedName: "timeZone",
                    type: {
                        name: "String"
                    }
                },
                issqlcompression: {
                    serializedName: "issqlcompression",
                    type: {
                        name: "Boolean"
                    }
                },
                isCompression: {
                    serializedName: "isCompression",
                    type: {
                        name: "Boolean"
                    }
                }
            }
        }
    };
    var SubProtectionPolicy = {
        serializedName: "SubProtectionPolicy",
        type: {
            name: "Composite",
            className: "SubProtectionPolicy",
            modelProperties: {
                policyType: {
                    serializedName: "policyType",
                    type: {
                        name: "String"
                    }
                },
                schedulePolicy: {
                    serializedName: "schedulePolicy",
                    type: {
                        name: "Composite",
                        polymorphicDiscriminator: {
                            serializedName: "schedulePolicyType",
                            clientName: "schedulePolicyType"
                        },
                        uberParent: "SchedulePolicy",
                        className: "SchedulePolicy"
                    }
                },
                retentionPolicy: {
                    serializedName: "retentionPolicy",
                    type: {
                        name: "Composite",
                        polymorphicDiscriminator: {
                            serializedName: "retentionPolicyType",
                            clientName: "retentionPolicyType"
                        },
                        uberParent: "RetentionPolicy",
                        className: "RetentionPolicy"
                    }
                }
            }
        }
    };
    var AzureVmWorkloadProtectionPolicy = {
        serializedName: "AzureWorkload",
        type: {
            name: "Composite",
            polymorphicDiscriminator: ProtectionPolicy.type.polymorphicDiscriminator,
            uberParent: "ProtectionPolicy",
            className: "AzureVmWorkloadProtectionPolicy",
            modelProperties: __assign({}, ProtectionPolicy.type.modelProperties, { workLoadType: {
                    serializedName: "workLoadType",
                    type: {
                        name: "String"
                    }
                }, settings: {
                    serializedName: "settings",
                    type: {
                        name: "Composite",
                        className: "Settings"
                    }
                }, subProtectionPolicy: {
                    serializedName: "subProtectionPolicy",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "SubProtectionPolicy"
                            }
                        }
                    }
                } })
        }
    };
    var AzureVmWorkloadSAPHanaDatabaseProtectedItem = {
        serializedName: "AzureVmWorkloadSAPHanaDatabase",
        type: {
            name: "Composite",
            polymorphicDiscriminator: ProtectedItem.type.polymorphicDiscriminator,
            uberParent: "ProtectedItem",
            className: "AzureVmWorkloadSAPHanaDatabaseProtectedItem",
            modelProperties: __assign({}, AzureVmWorkloadProtectedItem.type.modelProperties)
        }
    };
    var AzureVmWorkloadSQLDatabaseProtectedItem = {
        serializedName: "AzureVmWorkloadSQLDatabase",
        type: {
            name: "Composite",
            polymorphicDiscriminator: ProtectedItem.type.polymorphicDiscriminator,
            uberParent: "ProtectedItem",
            className: "AzureVmWorkloadSQLDatabaseProtectedItem",
            modelProperties: __assign({}, ProtectedItem.type.modelProperties, { friendlyName: {
                    serializedName: "friendlyName",
                    type: {
                        name: "String"
                    }
                }, serverName: {
                    serializedName: "serverName",
                    type: {
                        name: "String"
                    }
                }, parentName: {
                    serializedName: "parentName",
                    type: {
                        name: "String"
                    }
                }, parentType: {
                    serializedName: "parentType",
                    type: {
                        name: "String"
                    }
                }, protectionStatus: {
                    serializedName: "protectionStatus",
                    type: {
                        name: "String"
                    }
                }, protectionState: {
                    serializedName: "protectionState",
                    type: {
                        name: "String"
                    }
                }, lastBackupStatus: {
                    serializedName: "lastBackupStatus",
                    type: {
                        name: "String"
                    }
                }, lastBackupTime: {
                    serializedName: "lastBackupTime",
                    type: {
                        name: "DateTime"
                    }
                }, lastBackupErrorDetail: {
                    serializedName: "lastBackupErrorDetail",
                    type: {
                        name: "Composite",
                        className: "ErrorDetail"
                    }
                }, protectedItemDataSourceId: {
                    serializedName: "protectedItemDataSourceId",
                    type: {
                        name: "String"
                    }
                }, protectedItemHealthStatus: {
                    serializedName: "protectedItemHealthStatus",
                    type: {
                        name: "String"
                    }
                }, extendedInfo: {
                    serializedName: "extendedInfo",
                    type: {
                        name: "Composite",
                        className: "AzureVmWorkloadProtectedItemExtendedInfo"
                    }
                } })
        }
    };
    var AzureWorkloadAutoProtectionIntent = {
        serializedName: "AzureWorkloadAutoProtectionIntent",
        type: {
            name: "Composite",
            polymorphicDiscriminator: ProtectionIntent.type.polymorphicDiscriminator,
            uberParent: "ProtectionIntent",
            className: "AzureWorkloadAutoProtectionIntent",
            modelProperties: __assign({}, AzureRecoveryServiceVaultProtectionIntent.type.modelProperties)
        }
    };
    var AzureWorkloadErrorInfo = {
        serializedName: "AzureWorkloadErrorInfo",
        type: {
            name: "Composite",
            className: "AzureWorkloadErrorInfo",
            modelProperties: {
                errorCode: {
                    serializedName: "errorCode",
                    type: {
                        name: "Number"
                    }
                },
                errorString: {
                    serializedName: "errorString",
                    type: {
                        name: "String"
                    }
                },
                errorTitle: {
                    serializedName: "errorTitle",
                    type: {
                        name: "String"
                    }
                },
                recommendations: {
                    serializedName: "recommendations",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                },
                additionalDetails: {
                    serializedName: "additionalDetails",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var AzureWorkloadJobTaskDetails = {
        serializedName: "AzureWorkloadJobTaskDetails",
        type: {
            name: "Composite",
            className: "AzureWorkloadJobTaskDetails",
            modelProperties: {
                taskId: {
                    serializedName: "taskId",
                    type: {
                        name: "String"
                    }
                },
                status: {
                    serializedName: "status",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var AzureWorkloadJobExtendedInfo = {
        serializedName: "AzureWorkloadJobExtendedInfo",
        type: {
            name: "Composite",
            className: "AzureWorkloadJobExtendedInfo",
            modelProperties: {
                tasksList: {
                    serializedName: "tasksList",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "AzureWorkloadJobTaskDetails"
                            }
                        }
                    }
                },
                propertyBag: {
                    serializedName: "propertyBag",
                    type: {
                        name: "Dictionary",
                        value: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                },
                dynamicErrorMessage: {
                    serializedName: "dynamicErrorMessage",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var AzureWorkloadJob = {
        serializedName: "AzureWorkloadJob",
        type: {
            name: "Composite",
            polymorphicDiscriminator: Job.type.polymorphicDiscriminator,
            uberParent: "Job",
            className: "AzureWorkloadJob",
            modelProperties: __assign({}, Job.type.modelProperties, { workloadType: {
                    serializedName: "workloadType",
                    type: {
                        name: "String"
                    }
                }, duration: {
                    serializedName: "duration",
                    type: {
                        name: "TimeSpan"
                    }
                }, actionsInfo: {
                    serializedName: "actionsInfo",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Enum",
                                allowedValues: [
                                    "Invalid",
                                    "Cancellable",
                                    "Retriable"
                                ]
                            }
                        }
                    }
                }, errorDetails: {
                    serializedName: "errorDetails",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "AzureWorkloadErrorInfo"
                            }
                        }
                    }
                }, extendedInfo: {
                    serializedName: "extendedInfo",
                    type: {
                        name: "Composite",
                        className: "AzureWorkloadJobExtendedInfo"
                    }
                } })
        }
    };
    var AzureWorkloadRestoreRequest = {
        serializedName: "AzureWorkloadRestoreRequest",
        type: {
            name: "Composite",
            polymorphicDiscriminator: RestoreRequest.type.polymorphicDiscriminator,
            uberParent: "RestoreRequest",
            className: "AzureWorkloadRestoreRequest",
            modelProperties: __assign({}, RestoreRequest.type.modelProperties, { recoveryType: {
                    serializedName: "recoveryType",
                    type: {
                        name: "String"
                    }
                }, sourceResourceId: {
                    serializedName: "sourceResourceId",
                    type: {
                        name: "String"
                    }
                }, propertyBag: {
                    serializedName: "propertyBag",
                    type: {
                        name: "Dictionary",
                        value: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                } })
        }
    };
    var AzureWorkloadSAPHanaRestoreRequest = {
        serializedName: "AzureWorkloadSAPHanaRestoreRequest",
        type: {
            name: "Composite",
            polymorphicDiscriminator: RestoreRequest.type.polymorphicDiscriminator,
            uberParent: "RestoreRequest",
            className: "AzureWorkloadSAPHanaRestoreRequest",
            modelProperties: __assign({}, RestoreRequest.type.modelProperties, { targetInfo: {
                    serializedName: "targetInfo",
                    type: {
                        name: "Composite",
                        className: "TargetRestoreInfo"
                    }
                }, recoveryType: {
                    serializedName: "recoveryType",
                    type: {
                        name: "String"
                    }
                }, sourceResourceId: {
                    serializedName: "sourceResourceId",
                    type: {
                        name: "String"
                    }
                }, propertyBag: {
                    serializedName: "propertyBag",
                    type: {
                        name: "Dictionary",
                        value: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                } })
        }
    };
    var AzureWorkloadSAPHanaPointInTimeRestoreRequest = {
        serializedName: "AzureWorkloadSAPHanaPointInTimeRestoreRequest",
        type: {
            name: "Composite",
            polymorphicDiscriminator: RestoreRequest.type.polymorphicDiscriminator,
            uberParent: "RestoreRequest",
            className: "AzureWorkloadSAPHanaPointInTimeRestoreRequest",
            modelProperties: __assign({}, AzureWorkloadSAPHanaRestoreRequest.type.modelProperties, { pointInTime: {
                    serializedName: "pointInTime",
                    type: {
                        name: "DateTime"
                    }
                } })
        }
    };
    var TargetRestoreInfo = {
        serializedName: "TargetRestoreInfo",
        type: {
            name: "Composite",
            className: "TargetRestoreInfo",
            modelProperties: {
                overwriteOption: {
                    serializedName: "overwriteOption",
                    type: {
                        name: "String"
                    }
                },
                containerId: {
                    serializedName: "containerId",
                    type: {
                        name: "String"
                    }
                },
                databaseName: {
                    serializedName: "databaseName",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var AzureWorkloadSQLAutoProtectionIntent = {
        serializedName: "AzureWorkloadSQLAutoProtectionIntent",
        type: {
            name: "Composite",
            polymorphicDiscriminator: ProtectionIntent.type.polymorphicDiscriminator,
            uberParent: "ProtectionIntent",
            className: "AzureWorkloadSQLAutoProtectionIntent",
            modelProperties: __assign({}, AzureWorkloadAutoProtectionIntent.type.modelProperties, { workloadItemType: {
                    serializedName: "workloadItemType",
                    type: {
                        name: "String"
                    }
                } })
        }
    };
    var AzureWorkloadSQLRestoreRequest = {
        serializedName: "AzureWorkloadSQLRestoreRequest",
        type: {
            name: "Composite",
            polymorphicDiscriminator: RestoreRequest.type.polymorphicDiscriminator,
            uberParent: "RestoreRequest",
            className: "AzureWorkloadSQLRestoreRequest",
            modelProperties: __assign({}, AzureWorkloadRestoreRequest.type.modelProperties, { shouldUseAlternateTargetLocation: {
                    serializedName: "shouldUseAlternateTargetLocation",
                    type: {
                        name: "Boolean"
                    }
                }, isNonRecoverable: {
                    serializedName: "isNonRecoverable",
                    type: {
                        name: "Boolean"
                    }
                }, targetInfo: {
                    serializedName: "targetInfo",
                    type: {
                        name: "Composite",
                        className: "TargetRestoreInfo"
                    }
                }, alternateDirectoryPaths: {
                    serializedName: "alternateDirectoryPaths",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "SQLDataDirectoryMapping"
                            }
                        }
                    }
                } })
        }
    };
    var AzureWorkloadSQLPointInTimeRestoreRequest = {
        serializedName: "AzureWorkloadSQLPointInTimeRestoreRequest",
        type: {
            name: "Composite",
            polymorphicDiscriminator: RestoreRequest.type.polymorphicDiscriminator,
            uberParent: "RestoreRequest",
            className: "AzureWorkloadSQLPointInTimeRestoreRequest",
            modelProperties: __assign({}, AzureWorkloadSQLRestoreRequest.type.modelProperties, { pointInTime: {
                    serializedName: "pointInTime",
                    type: {
                        name: "DateTime"
                    }
                } })
        }
    };
    var SQLDataDirectoryMapping = {
        serializedName: "SQLDataDirectoryMapping",
        type: {
            name: "Composite",
            className: "SQLDataDirectoryMapping",
            modelProperties: {
                mappingType: {
                    serializedName: "mappingType",
                    type: {
                        name: "String"
                    }
                },
                sourceLogicalName: {
                    serializedName: "sourceLogicalName",
                    type: {
                        name: "String"
                    }
                },
                sourcePath: {
                    serializedName: "sourcePath",
                    type: {
                        name: "String"
                    }
                },
                targetPath: {
                    serializedName: "targetPath",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var NameInfo = {
        serializedName: "NameInfo",
        type: {
            name: "Composite",
            className: "NameInfo",
            modelProperties: {
                value: {
                    serializedName: "value",
                    type: {
                        name: "String"
                    }
                },
                localizedValue: {
                    serializedName: "localizedValue",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var BackupManagementUsage = {
        serializedName: "BackupManagementUsage",
        type: {
            name: "Composite",
            className: "BackupManagementUsage",
            modelProperties: {
                unit: {
                    serializedName: "unit",
                    type: {
                        name: "String"
                    }
                },
                quotaPeriod: {
                    serializedName: "quotaPeriod",
                    type: {
                        name: "String"
                    }
                },
                nextResetTime: {
                    serializedName: "nextResetTime",
                    type: {
                        name: "DateTime"
                    }
                },
                currentValue: {
                    serializedName: "currentValue",
                    type: {
                        name: "Number"
                    }
                },
                limit: {
                    serializedName: "limit",
                    type: {
                        name: "Number"
                    }
                },
                name: {
                    serializedName: "name",
                    type: {
                        name: "Composite",
                        className: "NameInfo"
                    }
                }
            }
        }
    };
    var BackupStatusRequest = {
        serializedName: "BackupStatusRequest",
        type: {
            name: "Composite",
            className: "BackupStatusRequest",
            modelProperties: {
                resourceType: {
                    serializedName: "resourceType",
                    type: {
                        name: "String"
                    }
                },
                resourceId: {
                    serializedName: "resourceId",
                    type: {
                        name: "String"
                    }
                },
                poLogicalName: {
                    serializedName: "poLogicalName",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var BackupStatusResponse = {
        serializedName: "BackupStatusResponse",
        type: {
            name: "Composite",
            className: "BackupStatusResponse",
            modelProperties: {
                protectionStatus: {
                    serializedName: "protectionStatus",
                    type: {
                        name: "String"
                    }
                },
                fabricName: {
                    serializedName: "fabricName",
                    type: {
                        name: "String"
                    }
                },
                containerName: {
                    serializedName: "containerName",
                    type: {
                        name: "String"
                    }
                },
                protectedItemName: {
                    serializedName: "protectedItemName",
                    type: {
                        name: "String"
                    }
                },
                errorCode: {
                    serializedName: "errorCode",
                    type: {
                        name: "String"
                    }
                },
                errorMessage: {
                    serializedName: "errorMessage",
                    type: {
                        name: "String"
                    }
                },
                policyName: {
                    serializedName: "policyName",
                    type: {
                        name: "String"
                    }
                },
                registrationStatus: {
                    serializedName: "registrationStatus",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var BMSBackupSummariesQueryObject = {
        serializedName: "BMSBackupSummariesQueryObject",
        type: {
            name: "Composite",
            className: "BMSBackupSummariesQueryObject",
            modelProperties: {
                type: {
                    serializedName: "type",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var Day = {
        serializedName: "Day",
        type: {
            name: "Composite",
            className: "Day",
            modelProperties: {
                date: {
                    serializedName: "date",
                    type: {
                        name: "Number"
                    }
                },
                isLast: {
                    serializedName: "isLast",
                    type: {
                        name: "Boolean"
                    }
                }
            }
        }
    };
    var DailyRetentionFormat = {
        serializedName: "DailyRetentionFormat",
        type: {
            name: "Composite",
            className: "DailyRetentionFormat",
            modelProperties: {
                daysOfTheMonth: {
                    serializedName: "daysOfTheMonth",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "Day"
                            }
                        }
                    }
                }
            }
        }
    };
    var RetentionDuration = {
        serializedName: "RetentionDuration",
        type: {
            name: "Composite",
            className: "RetentionDuration",
            modelProperties: {
                count: {
                    serializedName: "count",
                    type: {
                        name: "Number"
                    }
                },
                durationType: {
                    serializedName: "durationType",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var DailyRetentionSchedule = {
        serializedName: "DailyRetentionSchedule",
        type: {
            name: "Composite",
            className: "DailyRetentionSchedule",
            modelProperties: {
                retentionTimes: {
                    serializedName: "retentionTimes",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "DateTime"
                            }
                        }
                    }
                },
                retentionDuration: {
                    serializedName: "retentionDuration",
                    type: {
                        name: "Composite",
                        className: "RetentionDuration"
                    }
                }
            }
        }
    };
    var DpmErrorInfo = {
        serializedName: "DpmErrorInfo",
        type: {
            name: "Composite",
            className: "DpmErrorInfo",
            modelProperties: {
                errorString: {
                    serializedName: "errorString",
                    type: {
                        name: "String"
                    }
                },
                recommendations: {
                    serializedName: "recommendations",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                }
            }
        }
    };
    var DpmJobTaskDetails = {
        serializedName: "DpmJobTaskDetails",
        type: {
            name: "Composite",
            className: "DpmJobTaskDetails",
            modelProperties: {
                taskId: {
                    serializedName: "taskId",
                    type: {
                        name: "String"
                    }
                },
                startTime: {
                    serializedName: "startTime",
                    type: {
                        name: "DateTime"
                    }
                },
                endTime: {
                    serializedName: "endTime",
                    type: {
                        name: "DateTime"
                    }
                },
                duration: {
                    serializedName: "duration",
                    type: {
                        name: "TimeSpan"
                    }
                },
                status: {
                    serializedName: "status",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var DpmJobExtendedInfo = {
        serializedName: "DpmJobExtendedInfo",
        type: {
            name: "Composite",
            className: "DpmJobExtendedInfo",
            modelProperties: {
                tasksList: {
                    serializedName: "tasksList",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "DpmJobTaskDetails"
                            }
                        }
                    }
                },
                propertyBag: {
                    serializedName: "propertyBag",
                    type: {
                        name: "Dictionary",
                        value: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                },
                dynamicErrorMessage: {
                    serializedName: "dynamicErrorMessage",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var DpmJob = {
        serializedName: "DpmJob",
        type: {
            name: "Composite",
            polymorphicDiscriminator: Job.type.polymorphicDiscriminator,
            uberParent: "Job",
            className: "DpmJob",
            modelProperties: __assign({}, Job.type.modelProperties, { duration: {
                    serializedName: "duration",
                    type: {
                        name: "TimeSpan"
                    }
                }, dpmServerName: {
                    serializedName: "dpmServerName",
                    type: {
                        name: "String"
                    }
                }, containerName: {
                    serializedName: "containerName",
                    type: {
                        name: "String"
                    }
                }, containerType: {
                    serializedName: "containerType",
                    type: {
                        name: "String"
                    }
                }, workloadType: {
                    serializedName: "workloadType",
                    type: {
                        name: "String"
                    }
                }, actionsInfo: {
                    serializedName: "actionsInfo",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Enum",
                                allowedValues: [
                                    "Invalid",
                                    "Cancellable",
                                    "Retriable"
                                ]
                            }
                        }
                    }
                }, errorDetails: {
                    serializedName: "errorDetails",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "DpmErrorInfo"
                            }
                        }
                    }
                }, extendedInfo: {
                    serializedName: "extendedInfo",
                    type: {
                        name: "Composite",
                        className: "DpmJobExtendedInfo"
                    }
                } })
        }
    };
    var DPMProtectedItemExtendedInfo = {
        serializedName: "DPMProtectedItemExtendedInfo",
        type: {
            name: "Composite",
            className: "DPMProtectedItemExtendedInfo",
            modelProperties: {
                protectableObjectLoadPath: {
                    serializedName: "protectableObjectLoadPath",
                    type: {
                        name: "Dictionary",
                        value: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                },
                protectedProperty: {
                    serializedName: "protected",
                    type: {
                        name: "Boolean"
                    }
                },
                isPresentOnCloud: {
                    serializedName: "isPresentOnCloud",
                    type: {
                        name: "Boolean"
                    }
                },
                lastBackupStatus: {
                    serializedName: "lastBackupStatus",
                    type: {
                        name: "String"
                    }
                },
                lastRefreshedAt: {
                    serializedName: "lastRefreshedAt",
                    type: {
                        name: "DateTime"
                    }
                },
                oldestRecoveryPoint: {
                    serializedName: "oldestRecoveryPoint",
                    type: {
                        name: "DateTime"
                    }
                },
                recoveryPointCount: {
                    serializedName: "recoveryPointCount",
                    type: {
                        name: "Number"
                    }
                },
                onPremiseOldestRecoveryPoint: {
                    serializedName: "onPremiseOldestRecoveryPoint",
                    type: {
                        name: "DateTime"
                    }
                },
                onPremiseLatestRecoveryPoint: {
                    serializedName: "onPremiseLatestRecoveryPoint",
                    type: {
                        name: "DateTime"
                    }
                },
                onPremiseRecoveryPointCount: {
                    serializedName: "onPremiseRecoveryPointCount",
                    type: {
                        name: "Number"
                    }
                },
                isCollocated: {
                    serializedName: "isCollocated",
                    type: {
                        name: "Boolean"
                    }
                },
                protectionGroupName: {
                    serializedName: "protectionGroupName",
                    type: {
                        name: "String"
                    }
                },
                diskStorageUsedInBytes: {
                    serializedName: "diskStorageUsedInBytes",
                    type: {
                        name: "String"
                    }
                },
                totalDiskStorageSizeInBytes: {
                    serializedName: "totalDiskStorageSizeInBytes",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var DPMProtectedItem = {
        serializedName: "DPMProtectedItem",
        type: {
            name: "Composite",
            polymorphicDiscriminator: ProtectedItem.type.polymorphicDiscriminator,
            uberParent: "ProtectedItem",
            className: "DPMProtectedItem",
            modelProperties: __assign({}, ProtectedItem.type.modelProperties, { friendlyName: {
                    serializedName: "friendlyName",
                    type: {
                        name: "String"
                    }
                }, backupEngineName: {
                    serializedName: "backupEngineName",
                    type: {
                        name: "String"
                    }
                }, protectionState: {
                    serializedName: "protectionState",
                    type: {
                        name: "String"
                    }
                }, isScheduledForDeferredDelete: {
                    serializedName: "isScheduledForDeferredDelete",
                    type: {
                        name: "Boolean"
                    }
                }, extendedInfo: {
                    serializedName: "extendedInfo",
                    type: {
                        name: "Composite",
                        className: "DPMProtectedItemExtendedInfo"
                    }
                } })
        }
    };
    var EncryptionDetails = {
        serializedName: "EncryptionDetails",
        type: {
            name: "Composite",
            className: "EncryptionDetails",
            modelProperties: {
                encryptionEnabled: {
                    serializedName: "encryptionEnabled",
                    type: {
                        name: "Boolean"
                    }
                },
                kekUrl: {
                    serializedName: "kekUrl",
                    type: {
                        name: "String"
                    }
                },
                secretKeyUrl: {
                    serializedName: "secretKeyUrl",
                    type: {
                        name: "String"
                    }
                },
                kekVaultId: {
                    serializedName: "kekVaultId",
                    type: {
                        name: "String"
                    }
                },
                secretKeyVaultId: {
                    serializedName: "secretKeyVaultId",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var OperationResultInfoBase = {
        serializedName: "OperationResultInfoBase",
        type: {
            name: "Composite",
            polymorphicDiscriminator: {
                serializedName: "objectType",
                clientName: "objectType"
            },
            uberParent: "OperationResultInfoBase",
            className: "OperationResultInfoBase",
            modelProperties: {
                objectType: {
                    required: true,
                    serializedName: "objectType",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var ExportJobsOperationResultInfo = {
        serializedName: "ExportJobsOperationResultInfo",
        type: {
            name: "Composite",
            polymorphicDiscriminator: OperationResultInfoBase.type.polymorphicDiscriminator,
            uberParent: "OperationResultInfoBase",
            className: "ExportJobsOperationResultInfo",
            modelProperties: __assign({}, OperationResultInfoBase.type.modelProperties, { blobUrl: {
                    serializedName: "blobUrl",
                    type: {
                        name: "String"
                    }
                }, blobSasKey: {
                    serializedName: "blobSasKey",
                    type: {
                        name: "String"
                    }
                } })
        }
    };
    var GenericProtectedItem = {
        serializedName: "GenericProtectedItem",
        type: {
            name: "Composite",
            polymorphicDiscriminator: ProtectedItem.type.polymorphicDiscriminator,
            uberParent: "ProtectedItem",
            className: "GenericProtectedItem",
            modelProperties: __assign({}, ProtectedItem.type.modelProperties, { friendlyName: {
                    serializedName: "friendlyName",
                    type: {
                        name: "String"
                    }
                }, policyState: {
                    serializedName: "policyState",
                    type: {
                        name: "String"
                    }
                }, protectionState: {
                    serializedName: "protectionState",
                    type: {
                        name: "String"
                    }
                }, protectedItemId: {
                    serializedName: "protectedItemId",
                    type: {
                        name: "Number"
                    }
                }, sourceAssociations: {
                    serializedName: "sourceAssociations",
                    type: {
                        name: "Dictionary",
                        value: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                }, fabricName: {
                    serializedName: "fabricName",
                    type: {
                        name: "String"
                    }
                } })
        }
    };
    var GenericProtectionPolicy = {
        serializedName: "GenericProtectionPolicy",
        type: {
            name: "Composite",
            polymorphicDiscriminator: ProtectionPolicy.type.polymorphicDiscriminator,
            uberParent: "ProtectionPolicy",
            className: "GenericProtectionPolicy",
            modelProperties: __assign({}, ProtectionPolicy.type.modelProperties, { subProtectionPolicy: {
                    serializedName: "subProtectionPolicy",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "SubProtectionPolicy"
                            }
                        }
                    }
                }, timeZone: {
                    serializedName: "timeZone",
                    type: {
                        name: "String"
                    }
                }, fabricName: {
                    serializedName: "fabricName",
                    type: {
                        name: "String"
                    }
                } })
        }
    };
    var IaasVMRestoreRequest = {
        serializedName: "IaasVMRestoreRequest",
        type: {
            name: "Composite",
            polymorphicDiscriminator: RestoreRequest.type.polymorphicDiscriminator,
            uberParent: "RestoreRequest",
            className: "IaasVMRestoreRequest",
            modelProperties: __assign({}, RestoreRequest.type.modelProperties, { recoveryPointId: {
                    serializedName: "recoveryPointId",
                    type: {
                        name: "String"
                    }
                }, recoveryType: {
                    serializedName: "recoveryType",
                    type: {
                        name: "String"
                    }
                }, sourceResourceId: {
                    serializedName: "sourceResourceId",
                    type: {
                        name: "String"
                    }
                }, targetVirtualMachineId: {
                    serializedName: "targetVirtualMachineId",
                    type: {
                        name: "String"
                    }
                }, targetResourceGroupId: {
                    serializedName: "targetResourceGroupId",
                    type: {
                        name: "String"
                    }
                }, storageAccountId: {
                    serializedName: "storageAccountId",
                    type: {
                        name: "String"
                    }
                }, virtualNetworkId: {
                    serializedName: "virtualNetworkId",
                    type: {
                        name: "String"
                    }
                }, subnetId: {
                    serializedName: "subnetId",
                    type: {
                        name: "String"
                    }
                }, targetDomainNameId: {
                    serializedName: "targetDomainNameId",
                    type: {
                        name: "String"
                    }
                }, region: {
                    serializedName: "region",
                    type: {
                        name: "String"
                    }
                }, affinityGroup: {
                    serializedName: "affinityGroup",
                    type: {
                        name: "String"
                    }
                }, createNewCloudService: {
                    serializedName: "createNewCloudService",
                    type: {
                        name: "Boolean"
                    }
                }, originalStorageAccountOption: {
                    serializedName: "originalStorageAccountOption",
                    type: {
                        name: "Boolean"
                    }
                }, encryptionDetails: {
                    serializedName: "encryptionDetails",
                    type: {
                        name: "Composite",
                        className: "EncryptionDetails"
                    }
                } })
        }
    };
    var JobQueryObject = {
        serializedName: "JobQueryObject",
        type: {
            name: "Composite",
            className: "JobQueryObject",
            modelProperties: {
                status: {
                    serializedName: "status",
                    type: {
                        name: "String"
                    }
                },
                backupManagementType: {
                    serializedName: "backupManagementType",
                    type: {
                        name: "String"
                    }
                },
                operation: {
                    serializedName: "operation",
                    type: {
                        name: "String"
                    }
                },
                jobId: {
                    serializedName: "jobId",
                    type: {
                        name: "String"
                    }
                },
                startTime: {
                    serializedName: "startTime",
                    type: {
                        name: "DateTime"
                    }
                },
                endTime: {
                    serializedName: "endTime",
                    type: {
                        name: "DateTime"
                    }
                }
            }
        }
    };
    var Resource = {
        serializedName: "Resource",
        type: {
            name: "Composite",
            className: "Resource",
            modelProperties: {
                id: {
                    readOnly: true,
                    serializedName: "id",
                    type: {
                        name: "String"
                    }
                },
                name: {
                    readOnly: true,
                    serializedName: "name",
                    type: {
                        name: "String"
                    }
                },
                type: {
                    readOnly: true,
                    serializedName: "type",
                    type: {
                        name: "String"
                    }
                },
                location: {
                    serializedName: "location",
                    type: {
                        name: "String"
                    }
                },
                tags: {
                    serializedName: "tags",
                    type: {
                        name: "Dictionary",
                        value: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                },
                eTag: {
                    serializedName: "eTag",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var JobResource = {
        serializedName: "JobResource",
        type: {
            name: "Composite",
            className: "JobResource",
            modelProperties: __assign({}, Resource.type.modelProperties, { properties: {
                    serializedName: "properties",
                    type: {
                        name: "Composite",
                        polymorphicDiscriminator: {
                            serializedName: "jobType",
                            clientName: "jobType"
                        },
                        uberParent: "Job",
                        className: "Job"
                    }
                } })
        }
    };
    var LogSchedulePolicy = {
        serializedName: "LogSchedulePolicy",
        type: {
            name: "Composite",
            polymorphicDiscriminator: SchedulePolicy.type.polymorphicDiscriminator,
            uberParent: "SchedulePolicy",
            className: "LogSchedulePolicy",
            modelProperties: __assign({}, SchedulePolicy.type.modelProperties, { scheduleFrequencyInMins: {
                    serializedName: "scheduleFrequencyInMins",
                    type: {
                        name: "Number"
                    }
                } })
        }
    };
    var WeeklyRetentionSchedule = {
        serializedName: "WeeklyRetentionSchedule",
        type: {
            name: "Composite",
            className: "WeeklyRetentionSchedule",
            modelProperties: {
                daysOfTheWeek: {
                    serializedName: "daysOfTheWeek",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Enum",
                                allowedValues: [
                                    "Sunday",
                                    "Monday",
                                    "Tuesday",
                                    "Wednesday",
                                    "Thursday",
                                    "Friday",
                                    "Saturday"
                                ]
                            }
                        }
                    }
                },
                retentionTimes: {
                    serializedName: "retentionTimes",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "DateTime"
                            }
                        }
                    }
                },
                retentionDuration: {
                    serializedName: "retentionDuration",
                    type: {
                        name: "Composite",
                        className: "RetentionDuration"
                    }
                }
            }
        }
    };
    var WeeklyRetentionFormat = {
        serializedName: "WeeklyRetentionFormat",
        type: {
            name: "Composite",
            className: "WeeklyRetentionFormat",
            modelProperties: {
                daysOfTheWeek: {
                    serializedName: "daysOfTheWeek",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Enum",
                                allowedValues: [
                                    "Sunday",
                                    "Monday",
                                    "Tuesday",
                                    "Wednesday",
                                    "Thursday",
                                    "Friday",
                                    "Saturday"
                                ]
                            }
                        }
                    }
                },
                weeksOfTheMonth: {
                    serializedName: "weeksOfTheMonth",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Enum",
                                allowedValues: [
                                    "First",
                                    "Second",
                                    "Third",
                                    "Fourth",
                                    "Last",
                                    "Invalid"
                                ]
                            }
                        }
                    }
                }
            }
        }
    };
    var MonthlyRetentionSchedule = {
        serializedName: "MonthlyRetentionSchedule",
        type: {
            name: "Composite",
            className: "MonthlyRetentionSchedule",
            modelProperties: {
                retentionScheduleFormatType: {
                    serializedName: "retentionScheduleFormatType",
                    type: {
                        name: "String"
                    }
                },
                retentionScheduleDaily: {
                    serializedName: "retentionScheduleDaily",
                    type: {
                        name: "Composite",
                        className: "DailyRetentionFormat"
                    }
                },
                retentionScheduleWeekly: {
                    serializedName: "retentionScheduleWeekly",
                    type: {
                        name: "Composite",
                        className: "WeeklyRetentionFormat"
                    }
                },
                retentionTimes: {
                    serializedName: "retentionTimes",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "DateTime"
                            }
                        }
                    }
                },
                retentionDuration: {
                    serializedName: "retentionDuration",
                    type: {
                        name: "Composite",
                        className: "RetentionDuration"
                    }
                }
            }
        }
    };
    var YearlyRetentionSchedule = {
        serializedName: "YearlyRetentionSchedule",
        type: {
            name: "Composite",
            className: "YearlyRetentionSchedule",
            modelProperties: {
                retentionScheduleFormatType: {
                    serializedName: "retentionScheduleFormatType",
                    type: {
                        name: "String"
                    }
                },
                monthsOfYear: {
                    serializedName: "monthsOfYear",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Enum",
                                allowedValues: [
                                    "Invalid",
                                    "January",
                                    "February",
                                    "March",
                                    "April",
                                    "May",
                                    "June",
                                    "July",
                                    "August",
                                    "September",
                                    "October",
                                    "November",
                                    "December"
                                ]
                            }
                        }
                    }
                },
                retentionScheduleDaily: {
                    serializedName: "retentionScheduleDaily",
                    type: {
                        name: "Composite",
                        className: "DailyRetentionFormat"
                    }
                },
                retentionScheduleWeekly: {
                    serializedName: "retentionScheduleWeekly",
                    type: {
                        name: "Composite",
                        className: "WeeklyRetentionFormat"
                    }
                },
                retentionTimes: {
                    serializedName: "retentionTimes",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "DateTime"
                            }
                        }
                    }
                },
                retentionDuration: {
                    serializedName: "retentionDuration",
                    type: {
                        name: "Composite",
                        className: "RetentionDuration"
                    }
                }
            }
        }
    };
    var LongTermRetentionPolicy = {
        serializedName: "LongTermRetentionPolicy",
        type: {
            name: "Composite",
            polymorphicDiscriminator: RetentionPolicy.type.polymorphicDiscriminator,
            uberParent: "RetentionPolicy",
            className: "LongTermRetentionPolicy",
            modelProperties: __assign({}, RetentionPolicy.type.modelProperties, { dailySchedule: {
                    serializedName: "dailySchedule",
                    type: {
                        name: "Composite",
                        className: "DailyRetentionSchedule"
                    }
                }, weeklySchedule: {
                    serializedName: "weeklySchedule",
                    type: {
                        name: "Composite",
                        className: "WeeklyRetentionSchedule"
                    }
                }, monthlySchedule: {
                    serializedName: "monthlySchedule",
                    type: {
                        name: "Composite",
                        className: "MonthlyRetentionSchedule"
                    }
                }, yearlySchedule: {
                    serializedName: "yearlySchedule",
                    type: {
                        name: "Composite",
                        className: "YearlyRetentionSchedule"
                    }
                } })
        }
    };
    var LongTermSchedulePolicy = {
        serializedName: "LongTermSchedulePolicy",
        type: {
            name: "Composite",
            polymorphicDiscriminator: SchedulePolicy.type.polymorphicDiscriminator,
            uberParent: "SchedulePolicy",
            className: "LongTermSchedulePolicy",
            modelProperties: __assign({}, SchedulePolicy.type.modelProperties)
        }
    };
    var MabErrorInfo = {
        serializedName: "MabErrorInfo",
        type: {
            name: "Composite",
            className: "MabErrorInfo",
            modelProperties: {
                errorString: {
                    serializedName: "errorString",
                    type: {
                        name: "String"
                    }
                },
                recommendations: {
                    serializedName: "recommendations",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                }
            }
        }
    };
    var MabFileFolderProtectedItemExtendedInfo = {
        serializedName: "MabFileFolderProtectedItemExtendedInfo",
        type: {
            name: "Composite",
            className: "MabFileFolderProtectedItemExtendedInfo",
            modelProperties: {
                lastRefreshedAt: {
                    serializedName: "lastRefreshedAt",
                    type: {
                        name: "DateTime"
                    }
                },
                oldestRecoveryPoint: {
                    serializedName: "oldestRecoveryPoint",
                    type: {
                        name: "DateTime"
                    }
                },
                recoveryPointCount: {
                    serializedName: "recoveryPointCount",
                    type: {
                        name: "Number"
                    }
                }
            }
        }
    };
    var MabFileFolderProtectedItem = {
        serializedName: "MabFileFolderProtectedItem",
        type: {
            name: "Composite",
            polymorphicDiscriminator: ProtectedItem.type.polymorphicDiscriminator,
            uberParent: "ProtectedItem",
            className: "MabFileFolderProtectedItem",
            modelProperties: __assign({}, ProtectedItem.type.modelProperties, { friendlyName: {
                    serializedName: "friendlyName",
                    type: {
                        name: "String"
                    }
                }, computerName: {
                    serializedName: "computerName",
                    type: {
                        name: "String"
                    }
                }, lastBackupStatus: {
                    serializedName: "lastBackupStatus",
                    type: {
                        name: "String"
                    }
                }, protectionState: {
                    serializedName: "protectionState",
                    type: {
                        name: "String"
                    }
                }, isScheduledForDeferredDelete: {
                    serializedName: "isScheduledForDeferredDelete",
                    type: {
                        name: "Boolean"
                    }
                }, deferredDeleteSyncTimeInUTC: {
                    serializedName: "deferredDeleteSyncTimeInUTC",
                    type: {
                        name: "Number"
                    }
                }, extendedInfo: {
                    serializedName: "extendedInfo",
                    type: {
                        name: "Composite",
                        className: "MabFileFolderProtectedItemExtendedInfo"
                    }
                } })
        }
    };
    var MabJobTaskDetails = {
        serializedName: "MabJobTaskDetails",
        type: {
            name: "Composite",
            className: "MabJobTaskDetails",
            modelProperties: {
                taskId: {
                    serializedName: "taskId",
                    type: {
                        name: "String"
                    }
                },
                startTime: {
                    serializedName: "startTime",
                    type: {
                        name: "DateTime"
                    }
                },
                endTime: {
                    serializedName: "endTime",
                    type: {
                        name: "DateTime"
                    }
                },
                duration: {
                    serializedName: "duration",
                    type: {
                        name: "TimeSpan"
                    }
                },
                status: {
                    serializedName: "status",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var MabJobExtendedInfo = {
        serializedName: "MabJobExtendedInfo",
        type: {
            name: "Composite",
            className: "MabJobExtendedInfo",
            modelProperties: {
                tasksList: {
                    serializedName: "tasksList",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "MabJobTaskDetails"
                            }
                        }
                    }
                },
                propertyBag: {
                    serializedName: "propertyBag",
                    type: {
                        name: "Dictionary",
                        value: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                },
                dynamicErrorMessage: {
                    serializedName: "dynamicErrorMessage",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var MabJob = {
        serializedName: "MabJob",
        type: {
            name: "Composite",
            polymorphicDiscriminator: Job.type.polymorphicDiscriminator,
            uberParent: "Job",
            className: "MabJob",
            modelProperties: __assign({}, Job.type.modelProperties, { duration: {
                    serializedName: "duration",
                    type: {
                        name: "TimeSpan"
                    }
                }, actionsInfo: {
                    serializedName: "actionsInfo",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Enum",
                                allowedValues: [
                                    "Invalid",
                                    "Cancellable",
                                    "Retriable"
                                ]
                            }
                        }
                    }
                }, mabServerName: {
                    serializedName: "mabServerName",
                    type: {
                        name: "String"
                    }
                }, mabServerType: {
                    serializedName: "mabServerType",
                    type: {
                        name: "String"
                    }
                }, workloadType: {
                    serializedName: "workloadType",
                    type: {
                        name: "String"
                    }
                }, errorDetails: {
                    serializedName: "errorDetails",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "MabErrorInfo"
                            }
                        }
                    }
                }, extendedInfo: {
                    serializedName: "extendedInfo",
                    type: {
                        name: "Composite",
                        className: "MabJobExtendedInfo"
                    }
                } })
        }
    };
    var MabProtectionPolicy = {
        serializedName: "MAB",
        type: {
            name: "Composite",
            polymorphicDiscriminator: ProtectionPolicy.type.polymorphicDiscriminator,
            uberParent: "ProtectionPolicy",
            className: "MabProtectionPolicy",
            modelProperties: __assign({}, ProtectionPolicy.type.modelProperties, { schedulePolicy: {
                    serializedName: "schedulePolicy",
                    type: {
                        name: "Composite",
                        polymorphicDiscriminator: {
                            serializedName: "schedulePolicyType",
                            clientName: "schedulePolicyType"
                        },
                        uberParent: "SchedulePolicy",
                        className: "SchedulePolicy"
                    }
                }, retentionPolicy: {
                    serializedName: "retentionPolicy",
                    type: {
                        name: "Composite",
                        polymorphicDiscriminator: {
                            serializedName: "retentionPolicyType",
                            clientName: "retentionPolicyType"
                        },
                        uberParent: "RetentionPolicy",
                        className: "RetentionPolicy"
                    }
                } })
        }
    };
    var OperationResultInfo = {
        serializedName: "OperationResultInfo",
        type: {
            name: "Composite",
            polymorphicDiscriminator: OperationResultInfoBase.type.polymorphicDiscriminator,
            uberParent: "OperationResultInfoBase",
            className: "OperationResultInfo",
            modelProperties: __assign({}, OperationResultInfoBase.type.modelProperties, { jobList: {
                    serializedName: "jobList",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                } })
        }
    };
    var OperationWorkerResponse = {
        serializedName: "OperationWorkerResponse",
        type: {
            name: "Composite",
            className: "OperationWorkerResponse",
            modelProperties: {
                statusCode: {
                    serializedName: "statusCode",
                    type: {
                        name: "Enum",
                        allowedValues: [
                            "Continue",
                            "SwitchingProtocols",
                            "OK",
                            "Created",
                            "Accepted",
                            "NonAuthoritativeInformation",
                            "NoContent",
                            "ResetContent",
                            "PartialContent",
                            "MultipleChoices",
                            "Ambiguous",
                            "MovedPermanently",
                            "Moved",
                            "Found",
                            "Redirect",
                            "SeeOther",
                            "RedirectMethod",
                            "NotModified",
                            "UseProxy",
                            "Unused",
                            "TemporaryRedirect",
                            "RedirectKeepVerb",
                            "BadRequest",
                            "Unauthorized",
                            "PaymentRequired",
                            "Forbidden",
                            "NotFound",
                            "MethodNotAllowed",
                            "NotAcceptable",
                            "ProxyAuthenticationRequired",
                            "RequestTimeout",
                            "Conflict",
                            "Gone",
                            "LengthRequired",
                            "PreconditionFailed",
                            "RequestEntityTooLarge",
                            "RequestUriTooLong",
                            "UnsupportedMediaType",
                            "RequestedRangeNotSatisfiable",
                            "ExpectationFailed",
                            "UpgradeRequired",
                            "InternalServerError",
                            "NotImplemented",
                            "BadGateway",
                            "ServiceUnavailable",
                            "GatewayTimeout",
                            "HttpVersionNotSupported"
                        ]
                    }
                },
                headers: {
                    serializedName: "headers",
                    type: {
                        name: "Dictionary",
                        value: {
                            type: {
                                name: "Sequence",
                                element: {
                                    type: {
                                        name: "String"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    };
    var OperationResultInfoBaseResource = {
        serializedName: "OperationResultInfoBaseResource",
        type: {
            name: "Composite",
            className: "OperationResultInfoBaseResource",
            modelProperties: __assign({}, OperationWorkerResponse.type.modelProperties, { operation: {
                    serializedName: "operation",
                    type: {
                        name: "Composite",
                        polymorphicDiscriminator: {
                            serializedName: "objectType",
                            clientName: "objectType"
                        },
                        uberParent: "OperationResultInfoBase",
                        className: "OperationResultInfoBase"
                    }
                } })
        }
    };
    var PreValidateEnableBackupRequest = {
        serializedName: "PreValidateEnableBackupRequest",
        type: {
            name: "Composite",
            className: "PreValidateEnableBackupRequest",
            modelProperties: {
                resourceType: {
                    serializedName: "resourceType",
                    type: {
                        name: "String"
                    }
                },
                resourceId: {
                    serializedName: "resourceId",
                    type: {
                        name: "String"
                    }
                },
                properties: {
                    serializedName: "properties",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var PreValidateEnableBackupResponse = {
        serializedName: "PreValidateEnableBackupResponse",
        type: {
            name: "Composite",
            className: "PreValidateEnableBackupResponse",
            modelProperties: {
                status: {
                    serializedName: "status",
                    type: {
                        name: "String"
                    }
                },
                errorCode: {
                    serializedName: "errorCode",
                    type: {
                        name: "String"
                    }
                },
                errorMessage: {
                    serializedName: "errorMessage",
                    type: {
                        name: "String"
                    }
                },
                recommendation: {
                    serializedName: "recommendation",
                    type: {
                        name: "String"
                    }
                },
                containerName: {
                    serializedName: "containerName",
                    type: {
                        name: "String"
                    }
                },
                protectedItemName: {
                    serializedName: "protectedItemName",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var ProtectedItemQueryObject = {
        serializedName: "ProtectedItemQueryObject",
        type: {
            name: "Composite",
            className: "ProtectedItemQueryObject",
            modelProperties: {
                healthState: {
                    serializedName: "healthState",
                    type: {
                        name: "String"
                    }
                },
                backupManagementType: {
                    serializedName: "backupManagementType",
                    type: {
                        name: "String"
                    }
                },
                itemType: {
                    serializedName: "itemType",
                    type: {
                        name: "String"
                    }
                },
                policyName: {
                    serializedName: "policyName",
                    type: {
                        name: "String"
                    }
                },
                containerName: {
                    serializedName: "containerName",
                    type: {
                        name: "String"
                    }
                },
                backupEngineName: {
                    serializedName: "backupEngineName",
                    type: {
                        name: "String"
                    }
                },
                friendlyName: {
                    serializedName: "friendlyName",
                    type: {
                        name: "String"
                    }
                },
                fabricName: {
                    serializedName: "fabricName",
                    type: {
                        name: "String"
                    }
                },
                backupSetName: {
                    serializedName: "backupSetName",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var ProtectedItemResource = {
        serializedName: "ProtectedItemResource",
        type: {
            name: "Composite",
            className: "ProtectedItemResource",
            modelProperties: __assign({}, Resource.type.modelProperties, { properties: {
                    serializedName: "properties",
                    type: {
                        name: "Composite",
                        polymorphicDiscriminator: {
                            serializedName: "protectedItemType",
                            clientName: "protectedItemType"
                        },
                        uberParent: "ProtectedItem",
                        className: "ProtectedItem"
                    }
                } })
        }
    };
    var ProtectionIntentQueryObject = {
        serializedName: "ProtectionIntentQueryObject",
        type: {
            name: "Composite",
            className: "ProtectionIntentQueryObject",
            modelProperties: {
                backupManagementType: {
                    serializedName: "backupManagementType",
                    type: {
                        name: "String"
                    }
                },
                itemType: {
                    serializedName: "itemType",
                    type: {
                        name: "String"
                    }
                },
                parentName: {
                    serializedName: "parentName",
                    type: {
                        name: "String"
                    }
                },
                itemName: {
                    serializedName: "itemName",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var ProtectionIntentResource = {
        serializedName: "ProtectionIntentResource",
        type: {
            name: "Composite",
            className: "ProtectionIntentResource",
            modelProperties: __assign({}, Resource.type.modelProperties, { properties: {
                    serializedName: "properties",
                    type: {
                        name: "Composite",
                        polymorphicDiscriminator: {
                            serializedName: "protectionIntentItemType",
                            clientName: "protectionIntentItemType"
                        },
                        uberParent: "ProtectionIntent",
                        className: "ProtectionIntent"
                    }
                } })
        }
    };
    var ProtectionPolicyQueryObject = {
        serializedName: "ProtectionPolicyQueryObject",
        type: {
            name: "Composite",
            className: "ProtectionPolicyQueryObject",
            modelProperties: {
                backupManagementType: {
                    serializedName: "backupManagementType",
                    type: {
                        name: "String"
                    }
                },
                fabricName: {
                    serializedName: "fabricName",
                    type: {
                        name: "String"
                    }
                },
                workloadType: {
                    serializedName: "workloadType",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var ProtectionPolicyResource = {
        serializedName: "ProtectionPolicyResource",
        type: {
            name: "Composite",
            className: "ProtectionPolicyResource",
            modelProperties: __assign({}, Resource.type.modelProperties, { properties: {
                    serializedName: "properties",
                    type: {
                        name: "Composite",
                        polymorphicDiscriminator: {
                            serializedName: "backupManagementType",
                            clientName: "backupManagementType"
                        },
                        uberParent: "ProtectionPolicy",
                        className: "ProtectionPolicy"
                    }
                } })
        }
    };
    var ResourceList = {
        serializedName: "ResourceList",
        type: {
            name: "Composite",
            className: "ResourceList",
            modelProperties: {
                nextLink: {
                    serializedName: "nextLink",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var SimpleRetentionPolicy = {
        serializedName: "SimpleRetentionPolicy",
        type: {
            name: "Composite",
            polymorphicDiscriminator: RetentionPolicy.type.polymorphicDiscriminator,
            uberParent: "RetentionPolicy",
            className: "SimpleRetentionPolicy",
            modelProperties: __assign({}, RetentionPolicy.type.modelProperties, { retentionDuration: {
                    serializedName: "retentionDuration",
                    type: {
                        name: "Composite",
                        className: "RetentionDuration"
                    }
                } })
        }
    };
    var SimpleSchedulePolicy = {
        serializedName: "SimpleSchedulePolicy",
        type: {
            name: "Composite",
            polymorphicDiscriminator: SchedulePolicy.type.polymorphicDiscriminator,
            uberParent: "SchedulePolicy",
            className: "SimpleSchedulePolicy",
            modelProperties: __assign({}, SchedulePolicy.type.modelProperties, { scheduleRunFrequency: {
                    serializedName: "scheduleRunFrequency",
                    type: {
                        name: "String"
                    }
                }, scheduleRunDays: {
                    serializedName: "scheduleRunDays",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Enum",
                                allowedValues: [
                                    "Sunday",
                                    "Monday",
                                    "Tuesday",
                                    "Wednesday",
                                    "Thursday",
                                    "Friday",
                                    "Saturday"
                                ]
                            }
                        }
                    }
                }, scheduleRunTimes: {
                    serializedName: "scheduleRunTimes",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "DateTime"
                            }
                        }
                    }
                }, scheduleWeeklyFrequency: {
                    serializedName: "scheduleWeeklyFrequency",
                    type: {
                        name: "Number"
                    }
                } })
        }
    };
    var ValidateOperationRequest = {
        serializedName: "ValidateOperationRequest",
        type: {
            name: "Composite",
            polymorphicDiscriminator: {
                serializedName: "objectType",
                clientName: "objectType"
            },
            uberParent: "ValidateOperationRequest",
            className: "ValidateOperationRequest",
            modelProperties: {
                objectType: {
                    required: true,
                    serializedName: "objectType",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var ValidateRestoreOperationRequest = {
        serializedName: "ValidateRestoreOperationRequest",
        type: {
            name: "Composite",
            polymorphicDiscriminator: ValidateOperationRequest.type.polymorphicDiscriminator,
            uberParent: "ValidateOperationRequest",
            className: "ValidateRestoreOperationRequest",
            modelProperties: __assign({}, ValidateOperationRequest.type.modelProperties, { restoreRequest: {
                    serializedName: "restoreRequest",
                    type: {
                        name: "Composite",
                        polymorphicDiscriminator: {
                            serializedName: "objectType",
                            clientName: "objectType"
                        },
                        uberParent: "RestoreRequest",
                        className: "RestoreRequest"
                    }
                } })
        }
    };
    var ValidateIaasVMRestoreOperationRequest = {
        serializedName: "ValidateIaasVMRestoreOperationRequest",
        type: {
            name: "Composite",
            polymorphicDiscriminator: ValidateOperationRequest.type.polymorphicDiscriminator,
            uberParent: "ValidateOperationRequest",
            className: "ValidateIaasVMRestoreOperationRequest",
            modelProperties: __assign({}, ValidateRestoreOperationRequest.type.modelProperties)
        }
    };
    var ValidateOperationResponse = {
        serializedName: "ValidateOperationResponse",
        type: {
            name: "Composite",
            className: "ValidateOperationResponse",
            modelProperties: {
                validationResults: {
                    serializedName: "validationResults",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "ErrorDetail"
                            }
                        }
                    }
                }
            }
        }
    };
    var ValidateOperationsResponse = {
        serializedName: "ValidateOperationsResponse",
        type: {
            name: "Composite",
            className: "ValidateOperationsResponse",
            modelProperties: {
                validateOperationResponse: {
                    serializedName: "validateOperationResponse",
                    type: {
                        name: "Composite",
                        className: "ValidateOperationResponse"
                    }
                }
            }
        }
    };
    var DPMContainerExtendedInfo = {
        serializedName: "DPMContainerExtendedInfo",
        type: {
            name: "Composite",
            className: "DPMContainerExtendedInfo",
            modelProperties: {
                lastRefreshedAt: {
                    serializedName: "lastRefreshedAt",
                    type: {
                        name: "DateTime"
                    }
                }
            }
        }
    };
    var ProtectionContainer = {
        serializedName: "ProtectionContainer",
        type: {
            name: "Composite",
            polymorphicDiscriminator: {
                serializedName: "containerType",
                clientName: "containerType"
            },
            uberParent: "ProtectionContainer",
            className: "ProtectionContainer",
            modelProperties: {
                friendlyName: {
                    serializedName: "friendlyName",
                    type: {
                        name: "String"
                    }
                },
                backupManagementType: {
                    serializedName: "backupManagementType",
                    type: {
                        name: "String"
                    }
                },
                registrationStatus: {
                    serializedName: "registrationStatus",
                    type: {
                        name: "String"
                    }
                },
                healthStatus: {
                    serializedName: "healthStatus",
                    type: {
                        name: "String"
                    }
                },
                containerType: {
                    required: true,
                    serializedName: "containerType",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var AzureBackupServerContainer = {
        serializedName: "AzureBackupServerContainer",
        type: {
            name: "Composite",
            polymorphicDiscriminator: ProtectionContainer.type.polymorphicDiscriminator,
            uberParent: "ProtectionContainer",
            className: "AzureBackupServerContainer",
            modelProperties: __assign({}, ProtectionContainer.type.modelProperties, { canReRegister: {
                    serializedName: "canReRegister",
                    type: {
                        name: "Boolean"
                    }
                }, containerId: {
                    serializedName: "containerId",
                    type: {
                        name: "String"
                    }
                }, protectedItemCount: {
                    serializedName: "protectedItemCount",
                    type: {
                        name: "Number"
                    }
                }, dpmAgentVersion: {
                    serializedName: "dpmAgentVersion",
                    type: {
                        name: "String"
                    }
                }, dpmServers: {
                    serializedName: "dpmServers",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                }, upgradeAvailable: {
                    serializedName: "upgradeAvailable",
                    type: {
                        name: "Boolean"
                    }
                }, protectionStatus: {
                    serializedName: "protectionStatus",
                    type: {
                        name: "String"
                    }
                }, extendedInfo: {
                    serializedName: "extendedInfo",
                    type: {
                        name: "Composite",
                        className: "DPMContainerExtendedInfo"
                    }
                } })
        }
    };
    var BackupEngineBase = {
        serializedName: "BackupEngineBase",
        type: {
            name: "Composite",
            polymorphicDiscriminator: {
                serializedName: "backupEngineType",
                clientName: "backupEngineType"
            },
            uberParent: "BackupEngineBase",
            className: "BackupEngineBase",
            modelProperties: {
                friendlyName: {
                    serializedName: "friendlyName",
                    type: {
                        name: "String"
                    }
                },
                backupManagementType: {
                    serializedName: "backupManagementType",
                    type: {
                        name: "String"
                    }
                },
                registrationStatus: {
                    serializedName: "registrationStatus",
                    type: {
                        name: "String"
                    }
                },
                backupEngineState: {
                    serializedName: "backupEngineState",
                    type: {
                        name: "String"
                    }
                },
                healthStatus: {
                    serializedName: "healthStatus",
                    type: {
                        name: "String"
                    }
                },
                canReRegister: {
                    serializedName: "canReRegister",
                    type: {
                        name: "Boolean"
                    }
                },
                backupEngineId: {
                    serializedName: "backupEngineId",
                    type: {
                        name: "String"
                    }
                },
                dpmVersion: {
                    serializedName: "dpmVersion",
                    type: {
                        name: "String"
                    }
                },
                azureBackupAgentVersion: {
                    serializedName: "azureBackupAgentVersion",
                    type: {
                        name: "String"
                    }
                },
                isAzureBackupAgentUpgradeAvailable: {
                    serializedName: "isAzureBackupAgentUpgradeAvailable",
                    type: {
                        name: "Boolean"
                    }
                },
                isDpmUpgradeAvailable: {
                    serializedName: "isDpmUpgradeAvailable",
                    type: {
                        name: "Boolean"
                    }
                },
                extendedInfo: {
                    serializedName: "extendedInfo",
                    type: {
                        name: "Composite",
                        className: "BackupEngineExtendedInfo"
                    }
                },
                backupEngineType: {
                    required: true,
                    serializedName: "backupEngineType",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var AzureBackupServerEngine = {
        serializedName: "AzureBackupServerEngine",
        type: {
            name: "Composite",
            polymorphicDiscriminator: BackupEngineBase.type.polymorphicDiscriminator,
            uberParent: "BackupEngineBase",
            className: "AzureBackupServerEngine",
            modelProperties: __assign({}, BackupEngineBase.type.modelProperties)
        }
    };
    var BackupRequest = {
        serializedName: "BackupRequest",
        type: {
            name: "Composite",
            polymorphicDiscriminator: {
                serializedName: "objectType",
                clientName: "objectType"
            },
            uberParent: "BackupRequest",
            className: "BackupRequest",
            modelProperties: {
                objectType: {
                    required: true,
                    serializedName: "objectType",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var AzureFileShareBackupRequest = {
        serializedName: "AzureFileShareBackupRequest",
        type: {
            name: "Composite",
            polymorphicDiscriminator: BackupRequest.type.polymorphicDiscriminator,
            uberParent: "BackupRequest",
            className: "AzureFileShareBackupRequest",
            modelProperties: __assign({}, BackupRequest.type.modelProperties, { recoveryPointExpiryTimeInUTC: {
                    serializedName: "recoveryPointExpiryTimeInUTC",
                    type: {
                        name: "DateTime"
                    }
                } })
        }
    };
    var WorkloadProtectableItem = {
        serializedName: "WorkloadProtectableItem",
        type: {
            name: "Composite",
            polymorphicDiscriminator: {
                serializedName: "protectableItemType",
                clientName: "protectableItemType"
            },
            uberParent: "WorkloadProtectableItem",
            className: "WorkloadProtectableItem",
            modelProperties: {
                backupManagementType: {
                    serializedName: "backupManagementType",
                    type: {
                        name: "String"
                    }
                },
                workloadType: {
                    serializedName: "workloadType",
                    type: {
                        name: "String"
                    }
                },
                friendlyName: {
                    serializedName: "friendlyName",
                    type: {
                        name: "String"
                    }
                },
                protectionState: {
                    serializedName: "protectionState",
                    type: {
                        name: "String"
                    }
                },
                protectableItemType: {
                    required: true,
                    serializedName: "protectableItemType",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var AzureFileShareProtectableItem = {
        serializedName: "AzureFileShare",
        type: {
            name: "Composite",
            polymorphicDiscriminator: WorkloadProtectableItem.type.polymorphicDiscriminator,
            uberParent: "WorkloadProtectableItem",
            className: "AzureFileShareProtectableItem",
            modelProperties: __assign({}, WorkloadProtectableItem.type.modelProperties, { parentContainerFabricId: {
                    serializedName: "parentContainerFabricId",
                    type: {
                        name: "String"
                    }
                }, parentContainerFriendlyName: {
                    serializedName: "parentContainerFriendlyName",
                    type: {
                        name: "String"
                    }
                }, azureFileShareType: {
                    serializedName: "azureFileShareType",
                    type: {
                        name: "String"
                    }
                } })
        }
    };
    var RecoveryPoint = {
        serializedName: "RecoveryPoint",
        type: {
            name: "Composite",
            polymorphicDiscriminator: {
                serializedName: "objectType",
                clientName: "objectType"
            },
            uberParent: "RecoveryPoint",
            className: "RecoveryPoint",
            modelProperties: {
                objectType: {
                    required: true,
                    serializedName: "objectType",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var AzureFileShareRecoveryPoint = {
        serializedName: "AzureFileShareRecoveryPoint",
        type: {
            name: "Composite",
            polymorphicDiscriminator: RecoveryPoint.type.polymorphicDiscriminator,
            uberParent: "RecoveryPoint",
            className: "AzureFileShareRecoveryPoint",
            modelProperties: __assign({}, RecoveryPoint.type.modelProperties, { recoveryPointType: {
                    serializedName: "recoveryPointType",
                    type: {
                        name: "String"
                    }
                }, recoveryPointTime: {
                    serializedName: "recoveryPointTime",
                    type: {
                        name: "DateTime"
                    }
                }, fileShareSnapshotUri: {
                    serializedName: "fileShareSnapshotUri",
                    type: {
                        name: "String"
                    }
                } })
        }
    };
    var IaaSVMContainer = {
        serializedName: "IaaSVMContainer",
        type: {
            name: "Composite",
            polymorphicDiscriminator: ProtectionContainer.type.polymorphicDiscriminator,
            uberParent: "ProtectionContainer",
            className: "IaaSVMContainer",
            modelProperties: __assign({}, ProtectionContainer.type.modelProperties, { virtualMachineId: {
                    serializedName: "virtualMachineId",
                    type: {
                        name: "String"
                    }
                }, virtualMachineVersion: {
                    serializedName: "virtualMachineVersion",
                    type: {
                        name: "String"
                    }
                }, resourceGroup: {
                    serializedName: "resourceGroup",
                    type: {
                        name: "String"
                    }
                } })
        }
    };
    var AzureIaaSClassicComputeVMContainer = {
        serializedName: "Microsoft.ClassicCompute/virtualMachines",
        type: {
            name: "Composite",
            polymorphicDiscriminator: ProtectionContainer.type.polymorphicDiscriminator,
            uberParent: "ProtectionContainer",
            className: "AzureIaaSClassicComputeVMContainer",
            modelProperties: __assign({}, IaaSVMContainer.type.modelProperties)
        }
    };
    var IaaSVMProtectableItem = {
        serializedName: "IaaSVMProtectableItem",
        type: {
            name: "Composite",
            polymorphicDiscriminator: WorkloadProtectableItem.type.polymorphicDiscriminator,
            uberParent: "WorkloadProtectableItem",
            className: "IaaSVMProtectableItem",
            modelProperties: __assign({}, WorkloadProtectableItem.type.modelProperties, { virtualMachineId: {
                    serializedName: "virtualMachineId",
                    type: {
                        name: "String"
                    }
                } })
        }
    };
    var AzureIaaSClassicComputeVMProtectableItem = {
        serializedName: "Microsoft.ClassicCompute/virtualMachines",
        type: {
            name: "Composite",
            polymorphicDiscriminator: WorkloadProtectableItem.type.polymorphicDiscriminator,
            uberParent: "WorkloadProtectableItem",
            className: "AzureIaaSClassicComputeVMProtectableItem",
            modelProperties: __assign({}, IaaSVMProtectableItem.type.modelProperties)
        }
    };
    var AzureIaaSComputeVMContainer = {
        serializedName: "Microsoft.Compute/virtualMachines",
        type: {
            name: "Composite",
            polymorphicDiscriminator: ProtectionContainer.type.polymorphicDiscriminator,
            uberParent: "ProtectionContainer",
            className: "AzureIaaSComputeVMContainer",
            modelProperties: __assign({}, IaaSVMContainer.type.modelProperties)
        }
    };
    var AzureIaaSComputeVMProtectableItem = {
        serializedName: "Microsoft.Compute/virtualMachines",
        type: {
            name: "Composite",
            polymorphicDiscriminator: WorkloadProtectableItem.type.polymorphicDiscriminator,
            uberParent: "WorkloadProtectableItem",
            className: "AzureIaaSComputeVMProtectableItem",
            modelProperties: __assign({}, IaaSVMProtectableItem.type.modelProperties)
        }
    };
    var AzureWorkloadContainer = {
        serializedName: "AzureWorkloadBackupRequest",
        type: {
            name: "Composite",
            polymorphicDiscriminator: ProtectionContainer.type.polymorphicDiscriminator,
            uberParent: "ProtectionContainer",
            className: "AzureWorkloadContainer",
            modelProperties: __assign({}, ProtectionContainer.type.modelProperties, { sourceResourceId: {
                    serializedName: "sourceResourceId",
                    type: {
                        name: "String"
                    }
                }, lastUpdatedTime: {
                    serializedName: "lastUpdatedTime",
                    type: {
                        name: "DateTime"
                    }
                }, extendedInfo: {
                    serializedName: "extendedInfo",
                    type: {
                        name: "Composite",
                        className: "AzureWorkloadContainerExtendedInfo"
                    }
                }, workloadType: {
                    serializedName: "workloadType",
                    type: {
                        name: "String"
                    }
                } })
        }
    };
    var AzureSQLAGWorkloadContainerProtectionContainer = {
        serializedName: "SQLAGWorkLoadContainer",
        type: {
            name: "Composite",
            polymorphicDiscriminator: ProtectionContainer.type.polymorphicDiscriminator,
            uberParent: "ProtectionContainer",
            className: "AzureSQLAGWorkloadContainerProtectionContainer",
            modelProperties: __assign({}, AzureWorkloadContainer.type.modelProperties)
        }
    };
    var AzureSqlContainer = {
        serializedName: "AzureSqlContainer",
        type: {
            name: "Composite",
            polymorphicDiscriminator: ProtectionContainer.type.polymorphicDiscriminator,
            uberParent: "ProtectionContainer",
            className: "AzureSqlContainer",
            modelProperties: __assign({}, ProtectionContainer.type.modelProperties)
        }
    };
    var AzureStorageContainer = {
        serializedName: "StorageContainer",
        type: {
            name: "Composite",
            polymorphicDiscriminator: ProtectionContainer.type.polymorphicDiscriminator,
            uberParent: "ProtectionContainer",
            className: "AzureStorageContainer",
            modelProperties: __assign({}, ProtectionContainer.type.modelProperties, { sourceResourceId: {
                    serializedName: "sourceResourceId",
                    type: {
                        name: "String"
                    }
                }, storageAccountVersion: {
                    serializedName: "storageAccountVersion",
                    type: {
                        name: "String"
                    }
                }, resourceGroup: {
                    serializedName: "resourceGroup",
                    type: {
                        name: "String"
                    }
                }, protectedItemCount: {
                    serializedName: "protectedItemCount",
                    type: {
                        name: "Number"
                    }
                } })
        }
    };
    var ProtectableContainer = {
        serializedName: "ProtectableContainer",
        type: {
            name: "Composite",
            polymorphicDiscriminator: {
                serializedName: "protectableContainerType",
                clientName: "protectableContainerType"
            },
            uberParent: "ProtectableContainer",
            className: "ProtectableContainer",
            modelProperties: {
                friendlyName: {
                    serializedName: "friendlyName",
                    type: {
                        name: "String"
                    }
                },
                backupManagementType: {
                    serializedName: "backupManagementType",
                    type: {
                        name: "String"
                    }
                },
                healthStatus: {
                    serializedName: "healthStatus",
                    type: {
                        name: "String"
                    }
                },
                containerId: {
                    serializedName: "containerId",
                    type: {
                        name: "String"
                    }
                },
                protectableContainerType: {
                    required: true,
                    serializedName: "protectableContainerType",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var AzureStorageProtectableContainer = {
        serializedName: "StorageContainer",
        type: {
            name: "Composite",
            polymorphicDiscriminator: ProtectableContainer.type.polymorphicDiscriminator,
            uberParent: "ProtectableContainer",
            className: "AzureStorageProtectableContainer",
            modelProperties: __assign({}, ProtectableContainer.type.modelProperties)
        }
    };
    var AzureVMAppContainerProtectableContainer = {
        serializedName: "VMAppContainer",
        type: {
            name: "Composite",
            polymorphicDiscriminator: ProtectableContainer.type.polymorphicDiscriminator,
            uberParent: "ProtectableContainer",
            className: "AzureVMAppContainerProtectableContainer",
            modelProperties: __assign({}, ProtectableContainer.type.modelProperties)
        }
    };
    var AzureVMAppContainerProtectionContainer = {
        serializedName: "VMAppContainer",
        type: {
            name: "Composite",
            polymorphicDiscriminator: ProtectionContainer.type.polymorphicDiscriminator,
            uberParent: "ProtectionContainer",
            className: "AzureVMAppContainerProtectionContainer",
            modelProperties: __assign({}, AzureWorkloadContainer.type.modelProperties)
        }
    };
    var WorkloadItem = {
        serializedName: "WorkloadItem",
        type: {
            name: "Composite",
            polymorphicDiscriminator: {
                serializedName: "workloadItemType",
                clientName: "workloadItemType"
            },
            uberParent: "WorkloadItem",
            className: "WorkloadItem",
            modelProperties: {
                backupManagementType: {
                    serializedName: "backupManagementType",
                    type: {
                        name: "String"
                    }
                },
                workloadType: {
                    serializedName: "workloadType",
                    type: {
                        name: "String"
                    }
                },
                friendlyName: {
                    serializedName: "friendlyName",
                    type: {
                        name: "String"
                    }
                },
                protectionState: {
                    serializedName: "protectionState",
                    type: {
                        name: "String"
                    }
                },
                workloadItemType: {
                    required: true,
                    serializedName: "workloadItemType",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var AzureVmWorkloadItem = {
        serializedName: "AzureVmWorkloadItem",
        type: {
            name: "Composite",
            polymorphicDiscriminator: WorkloadItem.type.polymorphicDiscriminator,
            uberParent: "WorkloadItem",
            className: "AzureVmWorkloadItem",
            modelProperties: __assign({}, WorkloadItem.type.modelProperties, { parentName: {
                    serializedName: "parentName",
                    type: {
                        name: "String"
                    }
                }, serverName: {
                    serializedName: "serverName",
                    type: {
                        name: "String"
                    }
                }, isAutoProtectable: {
                    serializedName: "isAutoProtectable",
                    type: {
                        name: "Boolean"
                    }
                }, subinquireditemcount: {
                    serializedName: "subinquireditemcount",
                    type: {
                        name: "Number"
                    }
                }, subWorkloadItemCount: {
                    serializedName: "subWorkloadItemCount",
                    type: {
                        name: "Number"
                    }
                } })
        }
    };
    var PreBackupValidation = {
        serializedName: "PreBackupValidation",
        type: {
            name: "Composite",
            className: "PreBackupValidation",
            modelProperties: {
                status: {
                    serializedName: "status",
                    type: {
                        name: "String"
                    }
                },
                code: {
                    serializedName: "code",
                    type: {
                        name: "String"
                    }
                },
                message: {
                    serializedName: "message",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var AzureVmWorkloadProtectableItem = {
        serializedName: "AzureVmWorkloadProtectableItem",
        type: {
            name: "Composite",
            polymorphicDiscriminator: WorkloadProtectableItem.type.polymorphicDiscriminator,
            uberParent: "WorkloadProtectableItem",
            className: "AzureVmWorkloadProtectableItem",
            modelProperties: __assign({}, WorkloadProtectableItem.type.modelProperties, { parentName: {
                    serializedName: "parentName",
                    type: {
                        name: "String"
                    }
                }, parentUniqueName: {
                    serializedName: "parentUniqueName",
                    type: {
                        name: "String"
                    }
                }, serverName: {
                    serializedName: "serverName",
                    type: {
                        name: "String"
                    }
                }, isAutoProtectable: {
                    serializedName: "isAutoProtectable",
                    type: {
                        name: "Boolean"
                    }
                }, isAutoProtected: {
                    serializedName: "isAutoProtected",
                    type: {
                        name: "Boolean"
                    }
                }, subinquireditemcount: {
                    serializedName: "subinquireditemcount",
                    type: {
                        name: "Number"
                    }
                }, subprotectableitemcount: {
                    serializedName: "subprotectableitemcount",
                    type: {
                        name: "Number"
                    }
                }, prebackupvalidation: {
                    serializedName: "prebackupvalidation",
                    type: {
                        name: "Composite",
                        className: "PreBackupValidation"
                    }
                } })
        }
    };
    var AzureVmWorkloadSAPHanaDatabaseProtectableItem = {
        serializedName: "SAPHanaDatabase",
        type: {
            name: "Composite",
            polymorphicDiscriminator: WorkloadProtectableItem.type.polymorphicDiscriminator,
            uberParent: "WorkloadProtectableItem",
            className: "AzureVmWorkloadSAPHanaDatabaseProtectableItem",
            modelProperties: __assign({}, AzureVmWorkloadProtectableItem.type.modelProperties)
        }
    };
    var AzureVmWorkloadSAPHanaDatabaseWorkloadItem = {
        serializedName: "SAPHanaDatabase",
        type: {
            name: "Composite",
            polymorphicDiscriminator: WorkloadItem.type.polymorphicDiscriminator,
            uberParent: "WorkloadItem",
            className: "AzureVmWorkloadSAPHanaDatabaseWorkloadItem",
            modelProperties: __assign({}, AzureVmWorkloadItem.type.modelProperties)
        }
    };
    var AzureVmWorkloadSAPHanaSystemProtectableItem = {
        serializedName: "SAPHanaSystem",
        type: {
            name: "Composite",
            polymorphicDiscriminator: WorkloadProtectableItem.type.polymorphicDiscriminator,
            uberParent: "WorkloadProtectableItem",
            className: "AzureVmWorkloadSAPHanaSystemProtectableItem",
            modelProperties: __assign({}, AzureVmWorkloadProtectableItem.type.modelProperties)
        }
    };
    var AzureVmWorkloadSAPHanaSystemWorkloadItem = {
        serializedName: "SAPHanaSystem",
        type: {
            name: "Composite",
            polymorphicDiscriminator: WorkloadItem.type.polymorphicDiscriminator,
            uberParent: "WorkloadItem",
            className: "AzureVmWorkloadSAPHanaSystemWorkloadItem",
            modelProperties: __assign({}, AzureVmWorkloadItem.type.modelProperties)
        }
    };
    var AzureVmWorkloadSQLAvailabilityGroupProtectableItem = {
        serializedName: "SQLAvailabilityGroupContainer",
        type: {
            name: "Composite",
            polymorphicDiscriminator: WorkloadProtectableItem.type.polymorphicDiscriminator,
            uberParent: "WorkloadProtectableItem",
            className: "AzureVmWorkloadSQLAvailabilityGroupProtectableItem",
            modelProperties: __assign({}, AzureVmWorkloadProtectableItem.type.modelProperties)
        }
    };
    var AzureVmWorkloadSQLDatabaseProtectableItem = {
        serializedName: "SQLDataBase",
        type: {
            name: "Composite",
            polymorphicDiscriminator: WorkloadProtectableItem.type.polymorphicDiscriminator,
            uberParent: "WorkloadProtectableItem",
            className: "AzureVmWorkloadSQLDatabaseProtectableItem",
            modelProperties: __assign({}, AzureVmWorkloadProtectableItem.type.modelProperties)
        }
    };
    var AzureVmWorkloadSQLDatabaseWorkloadItem = {
        serializedName: "SQLDataBase",
        type: {
            name: "Composite",
            polymorphicDiscriminator: WorkloadItem.type.polymorphicDiscriminator,
            uberParent: "WorkloadItem",
            className: "AzureVmWorkloadSQLDatabaseWorkloadItem",
            modelProperties: __assign({}, AzureVmWorkloadItem.type.modelProperties)
        }
    };
    var AzureVmWorkloadSQLInstanceProtectableItem = {
        serializedName: "SQLInstance",
        type: {
            name: "Composite",
            polymorphicDiscriminator: WorkloadProtectableItem.type.polymorphicDiscriminator,
            uberParent: "WorkloadProtectableItem",
            className: "AzureVmWorkloadSQLInstanceProtectableItem",
            modelProperties: __assign({}, AzureVmWorkloadProtectableItem.type.modelProperties)
        }
    };
    var SQLDataDirectory = {
        serializedName: "SQLDataDirectory",
        type: {
            name: "Composite",
            className: "SQLDataDirectory",
            modelProperties: {
                type: {
                    serializedName: "type",
                    type: {
                        name: "String"
                    }
                },
                path: {
                    serializedName: "path",
                    type: {
                        name: "String"
                    }
                },
                logicalName: {
                    serializedName: "logicalName",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var AzureVmWorkloadSQLInstanceWorkloadItem = {
        serializedName: "SQLInstance",
        type: {
            name: "Composite",
            polymorphicDiscriminator: WorkloadItem.type.polymorphicDiscriminator,
            uberParent: "WorkloadItem",
            className: "AzureVmWorkloadSQLInstanceWorkloadItem",
            modelProperties: __assign({}, AzureVmWorkloadItem.type.modelProperties, { dataDirectoryPaths: {
                    serializedName: "dataDirectoryPaths",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "SQLDataDirectory"
                            }
                        }
                    }
                } })
        }
    };
    var AzureWorkloadBackupRequest = {
        serializedName: "AzureWorkloadBackupRequest",
        type: {
            name: "Composite",
            polymorphicDiscriminator: BackupRequest.type.polymorphicDiscriminator,
            uberParent: "BackupRequest",
            className: "AzureWorkloadBackupRequest",
            modelProperties: __assign({}, BackupRequest.type.modelProperties, { backupType: {
                    serializedName: "backupType",
                    type: {
                        name: "String"
                    }
                }, enableCompression: {
                    serializedName: "enableCompression",
                    type: {
                        name: "Boolean"
                    }
                }, recoveryPointExpiryTimeInUTC: {
                    serializedName: "recoveryPointExpiryTimeInUTC",
                    type: {
                        name: "DateTime"
                    }
                } })
        }
    };
    var InquiryValidation = {
        serializedName: "InquiryValidation",
        type: {
            name: "Composite",
            className: "InquiryValidation",
            modelProperties: {
                status: {
                    serializedName: "status",
                    type: {
                        name: "String"
                    }
                },
                errorDetail: {
                    serializedName: "errorDetail",
                    type: {
                        name: "Composite",
                        className: "ErrorDetail"
                    }
                }
            }
        }
    };
    var WorkloadInquiryDetails = {
        serializedName: "WorkloadInquiryDetails",
        type: {
            name: "Composite",
            className: "WorkloadInquiryDetails",
            modelProperties: {
                type: {
                    serializedName: "type",
                    type: {
                        name: "String"
                    }
                },
                itemCount: {
                    serializedName: "itemCount",
                    type: {
                        name: "Number"
                    }
                },
                inquiryValidation: {
                    serializedName: "inquiryValidation",
                    type: {
                        name: "Composite",
                        className: "InquiryValidation"
                    }
                }
            }
        }
    };
    var InquiryInfo = {
        serializedName: "InquiryInfo",
        type: {
            name: "Composite",
            className: "InquiryInfo",
            modelProperties: {
                status: {
                    serializedName: "status",
                    type: {
                        name: "String"
                    }
                },
                errorDetail: {
                    serializedName: "errorDetail",
                    type: {
                        name: "Composite",
                        className: "ErrorDetail"
                    }
                },
                inquiryDetails: {
                    serializedName: "inquiryDetails",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "WorkloadInquiryDetails"
                            }
                        }
                    }
                }
            }
        }
    };
    var DistributedNodesInfo = {
        serializedName: "DistributedNodesInfo",
        type: {
            name: "Composite",
            className: "DistributedNodesInfo",
            modelProperties: {
                nodeName: {
                    serializedName: "nodeName",
                    type: {
                        name: "String"
                    }
                },
                status: {
                    serializedName: "status",
                    type: {
                        name: "String"
                    }
                },
                errorDetail: {
                    serializedName: "errorDetail",
                    type: {
                        name: "Composite",
                        className: "ErrorDetail"
                    }
                }
            }
        }
    };
    var AzureWorkloadContainerExtendedInfo = {
        serializedName: "AzureWorkloadContainerExtendedInfo",
        type: {
            name: "Composite",
            className: "AzureWorkloadContainerExtendedInfo",
            modelProperties: {
                hostServerName: {
                    serializedName: "hostServerName",
                    type: {
                        name: "String"
                    }
                },
                inquiryInfo: {
                    serializedName: "inquiryInfo",
                    type: {
                        name: "Composite",
                        className: "InquiryInfo"
                    }
                },
                nodesList: {
                    serializedName: "nodesList",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "DistributedNodesInfo"
                            }
                        }
                    }
                }
            }
        }
    };
    var AzureWorkloadRecoveryPoint = {
        serializedName: "AzureWorkloadRecoveryPoint",
        type: {
            name: "Composite",
            polymorphicDiscriminator: RecoveryPoint.type.polymorphicDiscriminator,
            uberParent: "RecoveryPoint",
            className: "AzureWorkloadRecoveryPoint",
            modelProperties: __assign({}, RecoveryPoint.type.modelProperties, { recoveryPointTimeInUTC: {
                    serializedName: "recoveryPointTimeInUTC",
                    type: {
                        name: "DateTime"
                    }
                }, type: {
                    serializedName: "type",
                    type: {
                        name: "String"
                    }
                } })
        }
    };
    var PointInTimeRange = {
        serializedName: "PointInTimeRange",
        type: {
            name: "Composite",
            className: "PointInTimeRange",
            modelProperties: {
                startTime: {
                    serializedName: "startTime",
                    type: {
                        name: "DateTime"
                    }
                },
                endTime: {
                    serializedName: "endTime",
                    type: {
                        name: "DateTime"
                    }
                }
            }
        }
    };
    var AzureWorkloadSAPHanaRecoveryPoint = {
        serializedName: "AzureWorkloadSAPHanaRecoveryPoint",
        type: {
            name: "Composite",
            polymorphicDiscriminator: RecoveryPoint.type.polymorphicDiscriminator,
            uberParent: "RecoveryPoint",
            className: "AzureWorkloadSAPHanaRecoveryPoint",
            modelProperties: __assign({}, RecoveryPoint.type.modelProperties, { recoveryPointTimeInUTC: {
                    serializedName: "recoveryPointTimeInUTC",
                    type: {
                        name: "DateTime"
                    }
                }, type: {
                    serializedName: "type",
                    type: {
                        name: "String"
                    }
                } })
        }
    };
    var AzureWorkloadSAPHanaPointInTimeRecoveryPoint = {
        serializedName: "AzureWorkloadSAPHanaPointInTimeRecoveryPoint",
        type: {
            name: "Composite",
            polymorphicDiscriminator: RecoveryPoint.type.polymorphicDiscriminator,
            uberParent: "RecoveryPoint",
            className: "AzureWorkloadSAPHanaPointInTimeRecoveryPoint",
            modelProperties: __assign({}, AzureWorkloadSAPHanaRecoveryPoint.type.modelProperties, { timeRanges: {
                    serializedName: "timeRanges",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "PointInTimeRange"
                            }
                        }
                    }
                } })
        }
    };
    var AzureWorkloadSQLRecoveryPoint = {
        serializedName: "AzureWorkloadSQLRecoveryPoint",
        type: {
            name: "Composite",
            polymorphicDiscriminator: RecoveryPoint.type.polymorphicDiscriminator,
            uberParent: "RecoveryPoint",
            className: "AzureWorkloadSQLRecoveryPoint",
            modelProperties: __assign({}, AzureWorkloadRecoveryPoint.type.modelProperties, { extendedInfo: {
                    serializedName: "extendedInfo",
                    type: {
                        name: "Composite",
                        className: "AzureWorkloadSQLRecoveryPointExtendedInfo"
                    }
                } })
        }
    };
    var AzureWorkloadSQLPointInTimeRecoveryPoint = {
        serializedName: "AzureWorkloadSQLPointInTimeRecoveryPoint",
        type: {
            name: "Composite",
            polymorphicDiscriminator: RecoveryPoint.type.polymorphicDiscriminator,
            uberParent: "RecoveryPoint",
            className: "AzureWorkloadSQLPointInTimeRecoveryPoint",
            modelProperties: __assign({}, AzureWorkloadSQLRecoveryPoint.type.modelProperties, { timeRanges: {
                    serializedName: "timeRanges",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "PointInTimeRange"
                            }
                        }
                    }
                } })
        }
    };
    var AzureWorkloadSQLRecoveryPointExtendedInfo = {
        serializedName: "AzureWorkloadSQLRecoveryPointExtendedInfo",
        type: {
            name: "Composite",
            className: "AzureWorkloadSQLRecoveryPointExtendedInfo",
            modelProperties: {
                dataDirectoryTimeInUTC: {
                    serializedName: "dataDirectoryTimeInUTC",
                    type: {
                        name: "DateTime"
                    }
                },
                dataDirectoryPaths: {
                    serializedName: "dataDirectoryPaths",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "SQLDataDirectory"
                            }
                        }
                    }
                }
            }
        }
    };
    var BackupEngineExtendedInfo = {
        serializedName: "BackupEngineExtendedInfo",
        type: {
            name: "Composite",
            className: "BackupEngineExtendedInfo",
            modelProperties: {
                databaseName: {
                    serializedName: "databaseName",
                    type: {
                        name: "String"
                    }
                },
                protectedItemsCount: {
                    serializedName: "protectedItemsCount",
                    type: {
                        name: "Number"
                    }
                },
                protectedServersCount: {
                    serializedName: "protectedServersCount",
                    type: {
                        name: "Number"
                    }
                },
                diskCount: {
                    serializedName: "diskCount",
                    type: {
                        name: "Number"
                    }
                },
                usedDiskSpace: {
                    serializedName: "usedDiskSpace",
                    type: {
                        name: "Number"
                    }
                },
                availableDiskSpace: {
                    serializedName: "availableDiskSpace",
                    type: {
                        name: "Number"
                    }
                },
                refreshedAt: {
                    serializedName: "refreshedAt",
                    type: {
                        name: "DateTime"
                    }
                },
                azureProtectedInstances: {
                    serializedName: "azureProtectedInstances",
                    type: {
                        name: "Number"
                    }
                }
            }
        }
    };
    var BackupEngineBaseResource = {
        serializedName: "BackupEngineBaseResource",
        type: {
            name: "Composite",
            className: "BackupEngineBaseResource",
            modelProperties: __assign({}, Resource.type.modelProperties, { properties: {
                    serializedName: "properties",
                    type: {
                        name: "Composite",
                        polymorphicDiscriminator: {
                            serializedName: "backupEngineType",
                            clientName: "backupEngineType"
                        },
                        uberParent: "BackupEngineBase",
                        className: "BackupEngineBase"
                    }
                } })
        }
    };
    var BackupRequestResource = {
        serializedName: "BackupRequestResource",
        type: {
            name: "Composite",
            className: "BackupRequestResource",
            modelProperties: __assign({}, Resource.type.modelProperties, { properties: {
                    serializedName: "properties",
                    type: {
                        name: "Composite",
                        polymorphicDiscriminator: {
                            serializedName: "objectType",
                            clientName: "objectType"
                        },
                        uberParent: "BackupRequest",
                        className: "BackupRequest"
                    }
                } })
        }
    };
    var BackupResourceConfig = {
        serializedName: "BackupResourceConfig",
        type: {
            name: "Composite",
            className: "BackupResourceConfig",
            modelProperties: {
                storageModelType: {
                    serializedName: "storageModelType",
                    type: {
                        name: "String"
                    }
                },
                storageType: {
                    serializedName: "storageType",
                    type: {
                        name: "String"
                    }
                },
                storageTypeState: {
                    serializedName: "storageTypeState",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var BackupResourceConfigResource = {
        serializedName: "BackupResourceConfigResource",
        type: {
            name: "Composite",
            className: "BackupResourceConfigResource",
            modelProperties: __assign({}, Resource.type.modelProperties, { properties: {
                    serializedName: "properties",
                    type: {
                        name: "Composite",
                        className: "BackupResourceConfig"
                    }
                } })
        }
    };
    var BackupResourceVaultConfig = {
        serializedName: "BackupResourceVaultConfig",
        type: {
            name: "Composite",
            className: "BackupResourceVaultConfig",
            modelProperties: {
                storageModelType: {
                    serializedName: "storageModelType",
                    type: {
                        name: "String"
                    }
                },
                storageType: {
                    serializedName: "storageType",
                    type: {
                        name: "String"
                    }
                },
                storageTypeState: {
                    serializedName: "storageTypeState",
                    type: {
                        name: "String"
                    }
                },
                enhancedSecurityState: {
                    serializedName: "enhancedSecurityState",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var BackupResourceVaultConfigResource = {
        serializedName: "BackupResourceVaultConfigResource",
        type: {
            name: "Composite",
            className: "BackupResourceVaultConfigResource",
            modelProperties: __assign({}, Resource.type.modelProperties, { properties: {
                    serializedName: "properties",
                    type: {
                        name: "Composite",
                        className: "BackupResourceVaultConfig"
                    }
                } })
        }
    };
    var BEKDetails = {
        serializedName: "BEKDetails",
        type: {
            name: "Composite",
            className: "BEKDetails",
            modelProperties: {
                secretUrl: {
                    serializedName: "secretUrl",
                    type: {
                        name: "String"
                    }
                },
                secretVaultId: {
                    serializedName: "secretVaultId",
                    type: {
                        name: "String"
                    }
                },
                secretData: {
                    serializedName: "secretData",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var BMSBackupEngineQueryObject = {
        serializedName: "BMSBackupEngineQueryObject",
        type: {
            name: "Composite",
            className: "BMSBackupEngineQueryObject",
            modelProperties: {
                expand: {
                    serializedName: "expand",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var BMSBackupEnginesQueryObject = {
        serializedName: "BMSBackupEnginesQueryObject",
        type: {
            name: "Composite",
            className: "BMSBackupEnginesQueryObject",
            modelProperties: {
                backupManagementType: {
                    serializedName: "backupManagementType",
                    type: {
                        name: "String"
                    }
                },
                friendlyName: {
                    serializedName: "friendlyName",
                    type: {
                        name: "String"
                    }
                },
                expand: {
                    serializedName: "expand",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var BMSContainerQueryObject = {
        serializedName: "BMSContainerQueryObject",
        type: {
            name: "Composite",
            className: "BMSContainerQueryObject",
            modelProperties: {
                backupManagementType: {
                    required: true,
                    serializedName: "backupManagementType",
                    type: {
                        name: "String"
                    }
                },
                containerType: {
                    serializedName: "containerType",
                    type: {
                        name: "String"
                    }
                },
                backupEngineName: {
                    serializedName: "backupEngineName",
                    type: {
                        name: "String"
                    }
                },
                fabricName: {
                    serializedName: "fabricName",
                    type: {
                        name: "String"
                    }
                },
                status: {
                    serializedName: "status",
                    type: {
                        name: "String"
                    }
                },
                friendlyName: {
                    serializedName: "friendlyName",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var BMSContainersInquiryQueryObject = {
        serializedName: "BMSContainersInquiryQueryObject",
        type: {
            name: "Composite",
            className: "BMSContainersInquiryQueryObject",
            modelProperties: {
                backupManagementType: {
                    serializedName: "backupManagementType",
                    type: {
                        name: "String"
                    }
                },
                workloadType: {
                    serializedName: "workloadType",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var BMSPOQueryObject = {
        serializedName: "BMSPOQueryObject",
        type: {
            name: "Composite",
            className: "BMSPOQueryObject",
            modelProperties: {
                backupManagementType: {
                    serializedName: "backupManagementType",
                    type: {
                        name: "String"
                    }
                },
                workloadType: {
                    serializedName: "workloadType",
                    type: {
                        name: "String"
                    }
                },
                containerName: {
                    serializedName: "containerName",
                    type: {
                        name: "String"
                    }
                },
                status: {
                    serializedName: "status",
                    type: {
                        name: "String"
                    }
                },
                friendlyName: {
                    serializedName: "friendlyName",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var BMSRefreshContainersQueryObject = {
        serializedName: "BMSRefreshContainersQueryObject",
        type: {
            name: "Composite",
            className: "BMSRefreshContainersQueryObject",
            modelProperties: {
                backupManagementType: {
                    serializedName: "backupManagementType",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var BMSRPQueryObject = {
        serializedName: "BMSRPQueryObject",
        type: {
            name: "Composite",
            className: "BMSRPQueryObject",
            modelProperties: {
                startDate: {
                    serializedName: "startDate",
                    type: {
                        name: "DateTime"
                    }
                },
                endDate: {
                    serializedName: "endDate",
                    type: {
                        name: "DateTime"
                    }
                },
                restorePointQueryType: {
                    serializedName: "restorePointQueryType",
                    type: {
                        name: "String"
                    }
                },
                extendedInfo: {
                    serializedName: "extendedInfo",
                    type: {
                        name: "Boolean"
                    }
                }
            }
        }
    };
    var BMSWorkloadItemQueryObject = {
        serializedName: "BMSWorkloadItemQueryObject",
        type: {
            name: "Composite",
            className: "BMSWorkloadItemQueryObject",
            modelProperties: {
                backupManagementType: {
                    serializedName: "backupManagementType",
                    type: {
                        name: "String"
                    }
                },
                workloadItemType: {
                    serializedName: "workloadItemType",
                    type: {
                        name: "String"
                    }
                },
                workloadType: {
                    serializedName: "workloadType",
                    type: {
                        name: "String"
                    }
                },
                protectionStatus: {
                    serializedName: "protectionStatus",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var ClientScriptForConnect = {
        serializedName: "ClientScriptForConnect",
        type: {
            name: "Composite",
            className: "ClientScriptForConnect",
            modelProperties: {
                scriptContent: {
                    serializedName: "scriptContent",
                    type: {
                        name: "String"
                    }
                },
                scriptExtension: {
                    serializedName: "scriptExtension",
                    type: {
                        name: "String"
                    }
                },
                osType: {
                    serializedName: "osType",
                    type: {
                        name: "String"
                    }
                },
                url: {
                    serializedName: "url",
                    type: {
                        name: "String"
                    }
                },
                scriptNameSuffix: {
                    serializedName: "scriptNameSuffix",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var ContainerIdentityInfo = {
        serializedName: "ContainerIdentityInfo",
        type: {
            name: "Composite",
            className: "ContainerIdentityInfo",
            modelProperties: {
                uniqueName: {
                    serializedName: "uniqueName",
                    type: {
                        name: "String"
                    }
                },
                aadTenantId: {
                    serializedName: "aadTenantId",
                    type: {
                        name: "String"
                    }
                },
                servicePrincipalClientId: {
                    serializedName: "servicePrincipalClientId",
                    type: {
                        name: "String"
                    }
                },
                audience: {
                    serializedName: "audience",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var DpmBackupEngine = {
        serializedName: "DpmBackupEngine",
        type: {
            name: "Composite",
            polymorphicDiscriminator: BackupEngineBase.type.polymorphicDiscriminator,
            uberParent: "BackupEngineBase",
            className: "DpmBackupEngine",
            modelProperties: __assign({}, BackupEngineBase.type.modelProperties)
        }
    };
    var DpmContainer = {
        serializedName: "DPMContainer",
        type: {
            name: "Composite",
            polymorphicDiscriminator: ProtectionContainer.type.polymorphicDiscriminator,
            uberParent: "ProtectionContainer",
            className: "DpmContainer",
            modelProperties: __assign({}, ProtectionContainer.type.modelProperties, { canReRegister: {
                    serializedName: "canReRegister",
                    type: {
                        name: "Boolean"
                    }
                }, containerId: {
                    serializedName: "containerId",
                    type: {
                        name: "String"
                    }
                }, protectedItemCount: {
                    serializedName: "protectedItemCount",
                    type: {
                        name: "Number"
                    }
                }, dpmAgentVersion: {
                    serializedName: "dpmAgentVersion",
                    type: {
                        name: "String"
                    }
                }, dpmServers: {
                    serializedName: "dpmServers",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                }, upgradeAvailable: {
                    serializedName: "upgradeAvailable",
                    type: {
                        name: "Boolean"
                    }
                }, protectionStatus: {
                    serializedName: "protectionStatus",
                    type: {
                        name: "String"
                    }
                }, extendedInfo: {
                    serializedName: "extendedInfo",
                    type: {
                        name: "Composite",
                        className: "DPMContainerExtendedInfo"
                    }
                } })
        }
    };
    var GenericContainerExtendedInfo = {
        serializedName: "GenericContainerExtendedInfo",
        type: {
            name: "Composite",
            className: "GenericContainerExtendedInfo",
            modelProperties: {
                rawCertData: {
                    serializedName: "rawCertData",
                    type: {
                        name: "String"
                    }
                },
                containerIdentityInfo: {
                    serializedName: "containerIdentityInfo",
                    type: {
                        name: "Composite",
                        className: "ContainerIdentityInfo"
                    }
                },
                serviceEndpoints: {
                    serializedName: "serviceEndpoints",
                    type: {
                        name: "Dictionary",
                        value: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                }
            }
        }
    };
    var GenericContainer = {
        serializedName: "GenericContainer",
        type: {
            name: "Composite",
            polymorphicDiscriminator: ProtectionContainer.type.polymorphicDiscriminator,
            uberParent: "ProtectionContainer",
            className: "GenericContainer",
            modelProperties: __assign({}, ProtectionContainer.type.modelProperties, { fabricName: {
                    serializedName: "fabricName",
                    type: {
                        name: "String"
                    }
                }, extendedInformation: {
                    serializedName: "extendedInformation",
                    type: {
                        name: "Composite",
                        className: "GenericContainerExtendedInfo"
                    }
                } })
        }
    };
    var GenericRecoveryPoint = {
        serializedName: "GenericRecoveryPoint",
        type: {
            name: "Composite",
            polymorphicDiscriminator: RecoveryPoint.type.polymorphicDiscriminator,
            uberParent: "RecoveryPoint",
            className: "GenericRecoveryPoint",
            modelProperties: __assign({}, RecoveryPoint.type.modelProperties, { friendlyName: {
                    serializedName: "friendlyName",
                    type: {
                        name: "String"
                    }
                }, recoveryPointType: {
                    serializedName: "recoveryPointType",
                    type: {
                        name: "String"
                    }
                }, recoveryPointTime: {
                    serializedName: "recoveryPointTime",
                    type: {
                        name: "DateTime"
                    }
                }, recoveryPointAdditionalInfo: {
                    serializedName: "recoveryPointAdditionalInfo",
                    type: {
                        name: "String"
                    }
                } })
        }
    };
    var GetProtectedItemQueryObject = {
        serializedName: "GetProtectedItemQueryObject",
        type: {
            name: "Composite",
            className: "GetProtectedItemQueryObject",
            modelProperties: {
                expand: {
                    serializedName: "expand",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var IaasVMBackupRequest = {
        serializedName: "IaasVMBackupRequest",
        type: {
            name: "Composite",
            polymorphicDiscriminator: BackupRequest.type.polymorphicDiscriminator,
            uberParent: "BackupRequest",
            className: "IaasVMBackupRequest",
            modelProperties: __assign({}, BackupRequest.type.modelProperties, { recoveryPointExpiryTimeInUTC: {
                    serializedName: "recoveryPointExpiryTimeInUTC",
                    type: {
                        name: "DateTime"
                    }
                } })
        }
    };
    var ILRRequest = {
        serializedName: "ILRRequest",
        type: {
            name: "Composite",
            polymorphicDiscriminator: {
                serializedName: "objectType",
                clientName: "objectType"
            },
            uberParent: "ILRRequest",
            className: "ILRRequest",
            modelProperties: {
                objectType: {
                    required: true,
                    serializedName: "objectType",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var IaasVMILRRegistrationRequest = {
        serializedName: "IaasVMILRRegistrationRequest",
        type: {
            name: "Composite",
            polymorphicDiscriminator: ILRRequest.type.polymorphicDiscriminator,
            uberParent: "ILRRequest",
            className: "IaasVMILRRegistrationRequest",
            modelProperties: __assign({}, ILRRequest.type.modelProperties, { recoveryPointId: {
                    serializedName: "recoveryPointId",
                    type: {
                        name: "String"
                    }
                }, virtualMachineId: {
                    serializedName: "virtualMachineId",
                    type: {
                        name: "String"
                    }
                }, initiatorName: {
                    serializedName: "initiatorName",
                    type: {
                        name: "String"
                    }
                }, renewExistingRegistration: {
                    serializedName: "renewExistingRegistration",
                    type: {
                        name: "Boolean"
                    }
                } })
        }
    };
    var KEKDetails = {
        serializedName: "KEKDetails",
        type: {
            name: "Composite",
            className: "KEKDetails",
            modelProperties: {
                keyUrl: {
                    serializedName: "keyUrl",
                    type: {
                        name: "String"
                    }
                },
                keyVaultId: {
                    serializedName: "keyVaultId",
                    type: {
                        name: "String"
                    }
                },
                keyBackupData: {
                    serializedName: "keyBackupData",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var KeyAndSecretDetails = {
        serializedName: "KeyAndSecretDetails",
        type: {
            name: "Composite",
            className: "KeyAndSecretDetails",
            modelProperties: {
                kekDetails: {
                    serializedName: "kekDetails",
                    type: {
                        name: "Composite",
                        className: "KEKDetails"
                    }
                },
                bekDetails: {
                    serializedName: "bekDetails",
                    type: {
                        name: "Composite",
                        className: "BEKDetails"
                    }
                },
                encryptionMechanism: {
                    serializedName: "encryptionMechanism",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var RecoveryPointTierInformation = {
        serializedName: "RecoveryPointTierInformation",
        type: {
            name: "Composite",
            className: "RecoveryPointTierInformation",
            modelProperties: {
                type: {
                    serializedName: "type",
                    type: {
                        name: "Enum",
                        allowedValues: [
                            "Invalid",
                            "InstantRP",
                            "HardenedRP"
                        ]
                    }
                },
                status: {
                    serializedName: "status",
                    type: {
                        name: "Enum",
                        allowedValues: [
                            "Invalid",
                            "Valid",
                            "Disabled",
                            "Deleted"
                        ]
                    }
                }
            }
        }
    };
    var IaasVMRecoveryPoint = {
        serializedName: "IaasVMRecoveryPoint",
        type: {
            name: "Composite",
            polymorphicDiscriminator: RecoveryPoint.type.polymorphicDiscriminator,
            uberParent: "RecoveryPoint",
            className: "IaasVMRecoveryPoint",
            modelProperties: __assign({}, RecoveryPoint.type.modelProperties, { recoveryPointType: {
                    serializedName: "recoveryPointType",
                    type: {
                        name: "String"
                    }
                }, recoveryPointTime: {
                    serializedName: "recoveryPointTime",
                    type: {
                        name: "DateTime"
                    }
                }, recoveryPointAdditionalInfo: {
                    serializedName: "recoveryPointAdditionalInfo",
                    type: {
                        name: "String"
                    }
                }, sourceVMStorageType: {
                    serializedName: "sourceVMStorageType",
                    type: {
                        name: "String"
                    }
                }, isSourceVMEncrypted: {
                    serializedName: "isSourceVMEncrypted",
                    type: {
                        name: "Boolean"
                    }
                }, keyAndSecret: {
                    serializedName: "keyAndSecret",
                    type: {
                        name: "Composite",
                        className: "KeyAndSecretDetails"
                    }
                }, isInstantIlrSessionActive: {
                    serializedName: "isInstantIlrSessionActive",
                    type: {
                        name: "Boolean"
                    }
                }, recoveryPointTierDetails: {
                    serializedName: "recoveryPointTierDetails",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "RecoveryPointTierInformation"
                            }
                        }
                    }
                }, isManagedVirtualMachine: {
                    serializedName: "isManagedVirtualMachine",
                    type: {
                        name: "Boolean"
                    }
                }, virtualMachineSize: {
                    serializedName: "virtualMachineSize",
                    type: {
                        name: "String"
                    }
                }, originalStorageAccountOption: {
                    serializedName: "originalStorageAccountOption",
                    type: {
                        name: "Boolean"
                    }
                }, osType: {
                    serializedName: "osType",
                    type: {
                        name: "String"
                    }
                } })
        }
    };
    var ILRRequestResource = {
        serializedName: "ILRRequestResource",
        type: {
            name: "Composite",
            className: "ILRRequestResource",
            modelProperties: __assign({}, Resource.type.modelProperties, { properties: {
                    serializedName: "properties",
                    type: {
                        name: "Composite",
                        polymorphicDiscriminator: {
                            serializedName: "objectType",
                            clientName: "objectType"
                        },
                        uberParent: "ILRRequest",
                        className: "ILRRequest"
                    }
                } })
        }
    };
    var InstantItemRecoveryTarget = {
        serializedName: "InstantItemRecoveryTarget",
        type: {
            name: "Composite",
            className: "InstantItemRecoveryTarget",
            modelProperties: {
                clientScripts: {
                    serializedName: "clientScripts",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "ClientScriptForConnect"
                            }
                        }
                    }
                }
            }
        }
    };
    var MabContainerExtendedInfo = {
        serializedName: "MabContainerExtendedInfo",
        type: {
            name: "Composite",
            className: "MabContainerExtendedInfo",
            modelProperties: {
                lastRefreshedAt: {
                    serializedName: "lastRefreshedAt",
                    type: {
                        name: "DateTime"
                    }
                },
                backupItemType: {
                    serializedName: "backupItemType",
                    type: {
                        name: "String"
                    }
                },
                backupItems: {
                    serializedName: "backupItems",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                },
                policyName: {
                    serializedName: "policyName",
                    type: {
                        name: "String"
                    }
                },
                lastBackupStatus: {
                    serializedName: "lastBackupStatus",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var MABContainerHealthDetails = {
        serializedName: "MABContainerHealthDetails",
        type: {
            name: "Composite",
            className: "MABContainerHealthDetails",
            modelProperties: {
                code: {
                    serializedName: "code",
                    type: {
                        name: "Number"
                    }
                },
                title: {
                    serializedName: "title",
                    type: {
                        name: "String"
                    }
                },
                message: {
                    serializedName: "message",
                    type: {
                        name: "String"
                    }
                },
                recommendations: {
                    serializedName: "recommendations",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                }
            }
        }
    };
    var MabContainer = {
        serializedName: "Windows",
        type: {
            name: "Composite",
            polymorphicDiscriminator: ProtectionContainer.type.polymorphicDiscriminator,
            uberParent: "ProtectionContainer",
            className: "MabContainer",
            modelProperties: __assign({}, ProtectionContainer.type.modelProperties, { canReRegister: {
                    serializedName: "canReRegister",
                    type: {
                        name: "Boolean"
                    }
                }, containerId: {
                    serializedName: "containerId",
                    type: {
                        name: "Number"
                    }
                }, protectedItemCount: {
                    serializedName: "protectedItemCount",
                    type: {
                        name: "Number"
                    }
                }, agentVersion: {
                    serializedName: "agentVersion",
                    type: {
                        name: "String"
                    }
                }, extendedInfo: {
                    serializedName: "extendedInfo",
                    type: {
                        name: "Composite",
                        className: "MabContainerExtendedInfo"
                    }
                }, mabContainerHealthDetails: {
                    serializedName: "mabContainerHealthDetails",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "MABContainerHealthDetails"
                            }
                        }
                    }
                }, containerHealthState: {
                    serializedName: "containerHealthState",
                    type: {
                        name: "String"
                    }
                } })
        }
    };
    var OperationStatusError = {
        serializedName: "OperationStatusError",
        type: {
            name: "Composite",
            className: "OperationStatusError",
            modelProperties: {
                code: {
                    serializedName: "code",
                    type: {
                        name: "String"
                    }
                },
                message: {
                    serializedName: "message",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var OperationStatusExtendedInfo = {
        serializedName: "OperationStatusExtendedInfo",
        type: {
            name: "Composite",
            polymorphicDiscriminator: {
                serializedName: "objectType",
                clientName: "objectType"
            },
            uberParent: "OperationStatusExtendedInfo",
            className: "OperationStatusExtendedInfo",
            modelProperties: {
                objectType: {
                    required: true,
                    serializedName: "objectType",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var OperationStatus = {
        serializedName: "OperationStatus",
        type: {
            name: "Composite",
            className: "OperationStatus",
            modelProperties: {
                id: {
                    serializedName: "id",
                    type: {
                        name: "String"
                    }
                },
                name: {
                    serializedName: "name",
                    type: {
                        name: "String"
                    }
                },
                status: {
                    serializedName: "status",
                    type: {
                        name: "String"
                    }
                },
                startTime: {
                    serializedName: "startTime",
                    type: {
                        name: "DateTime"
                    }
                },
                endTime: {
                    serializedName: "endTime",
                    type: {
                        name: "DateTime"
                    }
                },
                error: {
                    serializedName: "error",
                    type: {
                        name: "Composite",
                        className: "OperationStatusError"
                    }
                },
                properties: {
                    serializedName: "properties",
                    type: {
                        name: "Composite",
                        polymorphicDiscriminator: {
                            serializedName: "objectType",
                            clientName: "objectType"
                        },
                        uberParent: "OperationStatusExtendedInfo",
                        className: "OperationStatusExtendedInfo"
                    }
                }
            }
        }
    };
    var OperationStatusJobExtendedInfo = {
        serializedName: "OperationStatusJobExtendedInfo",
        type: {
            name: "Composite",
            polymorphicDiscriminator: OperationStatusExtendedInfo.type.polymorphicDiscriminator,
            uberParent: "OperationStatusExtendedInfo",
            className: "OperationStatusJobExtendedInfo",
            modelProperties: __assign({}, OperationStatusExtendedInfo.type.modelProperties, { jobId: {
                    serializedName: "jobId",
                    type: {
                        name: "String"
                    }
                } })
        }
    };
    var OperationStatusJobsExtendedInfo = {
        serializedName: "OperationStatusJobsExtendedInfo",
        type: {
            name: "Composite",
            polymorphicDiscriminator: OperationStatusExtendedInfo.type.polymorphicDiscriminator,
            uberParent: "OperationStatusExtendedInfo",
            className: "OperationStatusJobsExtendedInfo",
            modelProperties: __assign({}, OperationStatusExtendedInfo.type.modelProperties, { jobIds: {
                    serializedName: "jobIds",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                }, failedJobsError: {
                    serializedName: "failedJobsError",
                    type: {
                        name: "Dictionary",
                        value: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                } })
        }
    };
    var OperationStatusProvisionILRExtendedInfo = {
        serializedName: "OperationStatusProvisionILRExtendedInfo",
        type: {
            name: "Composite",
            polymorphicDiscriminator: OperationStatusExtendedInfo.type.polymorphicDiscriminator,
            uberParent: "OperationStatusExtendedInfo",
            className: "OperationStatusProvisionILRExtendedInfo",
            modelProperties: __assign({}, OperationStatusExtendedInfo.type.modelProperties, { recoveryTarget: {
                    serializedName: "recoveryTarget",
                    type: {
                        name: "Composite",
                        className: "InstantItemRecoveryTarget"
                    }
                } })
        }
    };
    var ProtectableContainerResource = {
        serializedName: "ProtectableContainerResource",
        type: {
            name: "Composite",
            className: "ProtectableContainerResource",
            modelProperties: __assign({}, Resource.type.modelProperties, { properties: {
                    serializedName: "properties",
                    type: {
                        name: "Composite",
                        polymorphicDiscriminator: {
                            serializedName: "protectableContainerType",
                            clientName: "protectableContainerType"
                        },
                        uberParent: "ProtectableContainer",
                        className: "ProtectableContainer"
                    }
                } })
        }
    };
    var ProtectionContainerResource = {
        serializedName: "ProtectionContainerResource",
        type: {
            name: "Composite",
            className: "ProtectionContainerResource",
            modelProperties: __assign({}, Resource.type.modelProperties, { properties: {
                    serializedName: "properties",
                    type: {
                        name: "Composite",
                        polymorphicDiscriminator: {
                            serializedName: "containerType",
                            clientName: "containerType"
                        },
                        uberParent: "ProtectionContainer",
                        className: "ProtectionContainer"
                    }
                } })
        }
    };
    var RecoveryPointResource = {
        serializedName: "RecoveryPointResource",
        type: {
            name: "Composite",
            className: "RecoveryPointResource",
            modelProperties: __assign({}, Resource.type.modelProperties, { properties: {
                    serializedName: "properties",
                    type: {
                        name: "Composite",
                        polymorphicDiscriminator: {
                            serializedName: "objectType",
                            clientName: "objectType"
                        },
                        uberParent: "RecoveryPoint",
                        className: "RecoveryPoint"
                    }
                } })
        }
    };
    var RestoreRequestResource = {
        serializedName: "RestoreRequestResource",
        type: {
            name: "Composite",
            className: "RestoreRequestResource",
            modelProperties: __assign({}, Resource.type.modelProperties, { properties: {
                    serializedName: "properties",
                    type: {
                        name: "Composite",
                        polymorphicDiscriminator: {
                            serializedName: "objectType",
                            clientName: "objectType"
                        },
                        uberParent: "RestoreRequest",
                        className: "RestoreRequest"
                    }
                } })
        }
    };
    var TokenInformation = {
        serializedName: "TokenInformation",
        type: {
            name: "Composite",
            className: "TokenInformation",
            modelProperties: {
                token: {
                    serializedName: "token",
                    type: {
                        name: "String"
                    }
                },
                expiryTimeInUtcTicks: {
                    serializedName: "expiryTimeInUtcTicks",
                    type: {
                        name: "Number"
                    }
                },
                securityPIN: {
                    serializedName: "securityPIN",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var WorkloadItemResource = {
        serializedName: "WorkloadItemResource",
        type: {
            name: "Composite",
            className: "WorkloadItemResource",
            modelProperties: __assign({}, Resource.type.modelProperties, { properties: {
                    serializedName: "properties",
                    type: {
                        name: "Composite",
                        polymorphicDiscriminator: {
                            serializedName: "workloadItemType",
                            clientName: "workloadItemType"
                        },
                        uberParent: "WorkloadItem",
                        className: "WorkloadItem"
                    }
                } })
        }
    };
    var WorkloadProtectableItemResource = {
        serializedName: "WorkloadProtectableItemResource",
        type: {
            name: "Composite",
            className: "WorkloadProtectableItemResource",
            modelProperties: __assign({}, Resource.type.modelProperties, { properties: {
                    serializedName: "properties",
                    type: {
                        name: "Composite",
                        polymorphicDiscriminator: {
                            serializedName: "protectableItemType",
                            clientName: "protectableItemType"
                        },
                        uberParent: "WorkloadProtectableItem",
                        className: "WorkloadProtectableItem"
                    }
                } })
        }
    };
    var ClientDiscoveryDisplay = {
        serializedName: "ClientDiscoveryDisplay",
        type: {
            name: "Composite",
            className: "ClientDiscoveryDisplay",
            modelProperties: {
                provider: {
                    serializedName: "provider",
                    type: {
                        name: "String"
                    }
                },
                resource: {
                    serializedName: "resource",
                    type: {
                        name: "String"
                    }
                },
                operation: {
                    serializedName: "operation",
                    type: {
                        name: "String"
                    }
                },
                description: {
                    serializedName: "description",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var ClientDiscoveryForLogSpecification = {
        serializedName: "ClientDiscoveryForLogSpecification",
        type: {
            name: "Composite",
            className: "ClientDiscoveryForLogSpecification",
            modelProperties: {
                name: {
                    serializedName: "name",
                    type: {
                        name: "String"
                    }
                },
                displayName: {
                    serializedName: "displayName",
                    type: {
                        name: "String"
                    }
                },
                blobDuration: {
                    serializedName: "blobDuration",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var ClientDiscoveryForServiceSpecification = {
        serializedName: "ClientDiscoveryForServiceSpecification",
        type: {
            name: "Composite",
            className: "ClientDiscoveryForServiceSpecification",
            modelProperties: {
                logSpecifications: {
                    serializedName: "logSpecifications",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "ClientDiscoveryForLogSpecification"
                            }
                        }
                    }
                }
            }
        }
    };
    var ClientDiscoveryForProperties = {
        serializedName: "ClientDiscoveryForProperties",
        type: {
            name: "Composite",
            className: "ClientDiscoveryForProperties",
            modelProperties: {
                serviceSpecification: {
                    serializedName: "serviceSpecification",
                    type: {
                        name: "Composite",
                        className: "ClientDiscoveryForServiceSpecification"
                    }
                }
            }
        }
    };
    var ClientDiscoveryValueForSingleApi = {
        serializedName: "ClientDiscoveryValueForSingleApi",
        type: {
            name: "Composite",
            className: "ClientDiscoveryValueForSingleApi",
            modelProperties: {
                name: {
                    serializedName: "name",
                    type: {
                        name: "String"
                    }
                },
                display: {
                    serializedName: "display",
                    type: {
                        name: "Composite",
                        className: "ClientDiscoveryDisplay"
                    }
                },
                origin: {
                    serializedName: "origin",
                    type: {
                        name: "String"
                    }
                },
                properties: {
                    serializedName: "properties",
                    type: {
                        name: "Composite",
                        className: "ClientDiscoveryForProperties"
                    }
                }
            }
        }
    };
    var JobResourceList = {
        serializedName: "JobResourceList",
        type: {
            name: "Composite",
            className: "JobResourceList",
            modelProperties: __assign({}, ResourceList.type.modelProperties, { value: {
                    serializedName: "",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "JobResource"
                            }
                        }
                    }
                } })
        }
    };
    var ProtectionPolicyResourceList = {
        serializedName: "ProtectionPolicyResourceList",
        type: {
            name: "Composite",
            className: "ProtectionPolicyResourceList",
            modelProperties: __assign({}, ResourceList.type.modelProperties, { value: {
                    serializedName: "",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "ProtectionPolicyResource"
                            }
                        }
                    }
                } })
        }
    };
    var ProtectedItemResourceList = {
        serializedName: "ProtectedItemResourceList",
        type: {
            name: "Composite",
            className: "ProtectedItemResourceList",
            modelProperties: __assign({}, ResourceList.type.modelProperties, { value: {
                    serializedName: "",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "ProtectedItemResource"
                            }
                        }
                    }
                } })
        }
    };
    var ProtectionIntentResourceList = {
        serializedName: "ProtectionIntentResourceList",
        type: {
            name: "Composite",
            className: "ProtectionIntentResourceList",
            modelProperties: __assign({}, ResourceList.type.modelProperties, { value: {
                    serializedName: "",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "ProtectionIntentResource"
                            }
                        }
                    }
                } })
        }
    };
    var BackupManagementUsageList = {
        serializedName: "BackupManagementUsageList",
        type: {
            name: "Composite",
            className: "BackupManagementUsageList",
            modelProperties: {
                value: {
                    serializedName: "",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "BackupManagementUsage"
                            }
                        }
                    }
                }
            }
        }
    };
    var BackupEngineBaseResourceList = {
        serializedName: "BackupEngineBaseResourceList",
        type: {
            name: "Composite",
            className: "BackupEngineBaseResourceList",
            modelProperties: __assign({}, ResourceList.type.modelProperties, { value: {
                    serializedName: "",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "BackupEngineBaseResource"
                            }
                        }
                    }
                } })
        }
    };
    var ProtectableContainerResourceList = {
        serializedName: "ProtectableContainerResourceList",
        type: {
            name: "Composite",
            className: "ProtectableContainerResourceList",
            modelProperties: __assign({}, ResourceList.type.modelProperties, { value: {
                    serializedName: "",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "ProtectableContainerResource"
                            }
                        }
                    }
                } })
        }
    };
    var WorkloadItemResourceList = {
        serializedName: "WorkloadItemResourceList",
        type: {
            name: "Composite",
            className: "WorkloadItemResourceList",
            modelProperties: __assign({}, ResourceList.type.modelProperties, { value: {
                    serializedName: "",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "WorkloadItemResource"
                            }
                        }
                    }
                } })
        }
    };
    var RecoveryPointResourceList = {
        serializedName: "RecoveryPointResourceList",
        type: {
            name: "Composite",
            className: "RecoveryPointResourceList",
            modelProperties: __assign({}, ResourceList.type.modelProperties, { value: {
                    serializedName: "",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "RecoveryPointResource"
                            }
                        }
                    }
                } })
        }
    };
    var WorkloadProtectableItemResourceList = {
        serializedName: "WorkloadProtectableItemResourceList",
        type: {
            name: "Composite",
            className: "WorkloadProtectableItemResourceList",
            modelProperties: __assign({}, ResourceList.type.modelProperties, { value: {
                    serializedName: "",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "WorkloadProtectableItemResource"
                            }
                        }
                    }
                } })
        }
    };
    var ProtectionContainerResourceList = {
        serializedName: "ProtectionContainerResourceList",
        type: {
            name: "Composite",
            className: "ProtectionContainerResourceList",
            modelProperties: __assign({}, ResourceList.type.modelProperties, { value: {
                    serializedName: "",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "ProtectionContainerResource"
                            }
                        }
                    }
                } })
        }
    };
    var ClientDiscoveryResponse = {
        serializedName: "ClientDiscoveryResponse",
        type: {
            name: "Composite",
            className: "ClientDiscoveryResponse",
            modelProperties: {
                value: {
                    serializedName: "",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "ClientDiscoveryValueForSingleApi"
                            }
                        }
                    }
                },
                nextLink: {
                    serializedName: "nextLink",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var discriminators = {
        'FeatureSupportRequest.AzureBackupGoals': AzureBackupGoalFeatureSupportRequest,
        'ProtectedItem.AzureFileShareProtectedItem': AzureFileshareProtectedItem,
        'SchedulePolicy': SchedulePolicy,
        'RetentionPolicy': RetentionPolicy,
        'ProtectionPolicy.AzureStorage': AzureFileShareProtectionPolicy,
        'RestoreRequest.AzureFileShareRestoreRequest': AzureFileShareRestoreRequest,
        'ProtectedItem.Microsoft.ClassicCompute/virtualMachines': AzureIaaSClassicComputeVMProtectedItem,
        'ProtectedItem.Microsoft.Compute/virtualMachines': AzureIaaSComputeVMProtectedItem,
        'Job.AzureIaaSVMJob': AzureIaaSVMJob,
        'ProtectedItem.AzureIaaSVMProtectedItem': AzureIaaSVMProtectedItem,
        'ProtectionPolicy.AzureIaasVM': AzureIaaSVMProtectionPolicy,
        'ProtectionIntent.RecoveryServiceVaultItem': AzureRecoveryServiceVaultProtectionIntent,
        'ProtectionIntent.AzureResourceItem': AzureResourceProtectionIntent,
        'ProtectedItem.Microsoft.Sql/servers/databases': AzureSqlProtectedItem,
        'ProtectionPolicy.AzureSql': AzureSqlProtectionPolicy,
        'Job.AzureStorageJob': AzureStorageJob,
        'FeatureSupportRequest.AzureVMResourceBackup': AzureVMResourceFeatureSupportRequest,
        'ProtectedItem.AzureVmWorkloadProtectedItem': AzureVmWorkloadProtectedItem,
        'ProtectionPolicy.AzureWorkload': AzureVmWorkloadProtectionPolicy,
        'ProtectedItem.AzureVmWorkloadSAPHanaDatabase': AzureVmWorkloadSAPHanaDatabaseProtectedItem,
        'ProtectedItem.AzureVmWorkloadSQLDatabase': AzureVmWorkloadSQLDatabaseProtectedItem,
        'ProtectionIntent.AzureWorkloadAutoProtectionIntent': AzureWorkloadAutoProtectionIntent,
        'Job.AzureWorkloadJob': AzureWorkloadJob,
        'RestoreRequest.AzureWorkloadRestoreRequest': AzureWorkloadRestoreRequest,
        'RestoreRequest.AzureWorkloadSAPHanaPointInTimeRestoreRequest': AzureWorkloadSAPHanaPointInTimeRestoreRequest,
        'RestoreRequest.AzureWorkloadSAPHanaRestoreRequest': AzureWorkloadSAPHanaRestoreRequest,
        'ProtectionIntent.AzureWorkloadSQLAutoProtectionIntent': AzureWorkloadSQLAutoProtectionIntent,
        'RestoreRequest.AzureWorkloadSQLPointInTimeRestoreRequest': AzureWorkloadSQLPointInTimeRestoreRequest,
        'RestoreRequest.AzureWorkloadSQLRestoreRequest': AzureWorkloadSQLRestoreRequest,
        'Job.DpmJob': DpmJob,
        'ProtectedItem.DPMProtectedItem': DPMProtectedItem,
        'OperationResultInfoBase.ExportJobsOperationResultInfo': ExportJobsOperationResultInfo,
        'FeatureSupportRequest': FeatureSupportRequest,
        'ProtectedItem.GenericProtectedItem': GenericProtectedItem,
        'ProtectionPolicy.GenericProtectionPolicy': GenericProtectionPolicy,
        'RestoreRequest.IaasVMRestoreRequest': IaasVMRestoreRequest,
        'Job': Job,
        'SchedulePolicy.LogSchedulePolicy': LogSchedulePolicy,
        'RetentionPolicy.LongTermRetentionPolicy': LongTermRetentionPolicy,
        'SchedulePolicy.LongTermSchedulePolicy': LongTermSchedulePolicy,
        'ProtectedItem.MabFileFolderProtectedItem': MabFileFolderProtectedItem,
        'Job.MabJob': MabJob,
        'ProtectionPolicy.MAB': MabProtectionPolicy,
        'OperationResultInfoBase.OperationResultInfo': OperationResultInfo,
        'OperationResultInfoBase': OperationResultInfoBase,
        'ProtectedItem': ProtectedItem,
        'ProtectionIntent': ProtectionIntent,
        'ProtectionPolicy': ProtectionPolicy,
        'RestoreRequest': RestoreRequest,
        'RetentionPolicy.SimpleRetentionPolicy': SimpleRetentionPolicy,
        'SchedulePolicy.SimpleSchedulePolicy': SimpleSchedulePolicy,
        'ValidateOperationRequest.ValidateIaasVMRestoreOperationRequest': ValidateIaasVMRestoreOperationRequest,
        'ValidateOperationRequest': ValidateOperationRequest,
        'ValidateOperationRequest.ValidateRestoreOperationRequest': ValidateRestoreOperationRequest,
        'ProtectionContainer.AzureBackupServerContainer': AzureBackupServerContainer,
        'BackupEngineBase.AzureBackupServerEngine': AzureBackupServerEngine,
        'BackupRequest.AzureFileShareBackupRequest': AzureFileShareBackupRequest,
        'WorkloadProtectableItem.AzureFileShare': AzureFileShareProtectableItem,
        'RecoveryPoint.AzureFileShareRecoveryPoint': AzureFileShareRecoveryPoint,
        'ProtectionContainer.Microsoft.ClassicCompute/virtualMachines': AzureIaaSClassicComputeVMContainer,
        'WorkloadProtectableItem.Microsoft.ClassicCompute/virtualMachines': AzureIaaSClassicComputeVMProtectableItem,
        'ProtectionContainer.Microsoft.Compute/virtualMachines': AzureIaaSComputeVMContainer,
        'WorkloadProtectableItem.Microsoft.Compute/virtualMachines': AzureIaaSComputeVMProtectableItem,
        'ProtectionContainer.SQLAGWorkLoadContainer': AzureSQLAGWorkloadContainerProtectionContainer,
        'ProtectionContainer.AzureSqlContainer': AzureSqlContainer,
        'ProtectionContainer.StorageContainer': AzureStorageContainer,
        'ProtectableContainer.StorageContainer': AzureStorageProtectableContainer,
        'ProtectableContainer.VMAppContainer': AzureVMAppContainerProtectableContainer,
        'ProtectionContainer.VMAppContainer': AzureVMAppContainerProtectionContainer,
        'WorkloadItem.AzureVmWorkloadItem': AzureVmWorkloadItem,
        'WorkloadProtectableItem.AzureVmWorkloadProtectableItem': AzureVmWorkloadProtectableItem,
        'WorkloadProtectableItem.SAPHanaDatabase': AzureVmWorkloadSAPHanaDatabaseProtectableItem,
        'WorkloadItem.SAPHanaDatabase': AzureVmWorkloadSAPHanaDatabaseWorkloadItem,
        'WorkloadProtectableItem.SAPHanaSystem': AzureVmWorkloadSAPHanaSystemProtectableItem,
        'WorkloadItem.SAPHanaSystem': AzureVmWorkloadSAPHanaSystemWorkloadItem,
        'WorkloadProtectableItem.SQLAvailabilityGroupContainer': AzureVmWorkloadSQLAvailabilityGroupProtectableItem,
        'WorkloadProtectableItem.SQLDataBase': AzureVmWorkloadSQLDatabaseProtectableItem,
        'WorkloadItem.SQLDataBase': AzureVmWorkloadSQLDatabaseWorkloadItem,
        'WorkloadProtectableItem.SQLInstance': AzureVmWorkloadSQLInstanceProtectableItem,
        'WorkloadItem.SQLInstance': AzureVmWorkloadSQLInstanceWorkloadItem,
        'BackupRequest.AzureWorkloadBackupRequest': AzureWorkloadBackupRequest,
        'ProtectionContainer.AzureWorkloadBackupRequest': AzureWorkloadContainer,
        'RecoveryPoint.AzureWorkloadRecoveryPoint': AzureWorkloadRecoveryPoint,
        'RecoveryPoint.AzureWorkloadSAPHanaPointInTimeRecoveryPoint': AzureWorkloadSAPHanaPointInTimeRecoveryPoint,
        'RecoveryPoint.AzureWorkloadSAPHanaRecoveryPoint': AzureWorkloadSAPHanaRecoveryPoint,
        'RecoveryPoint.AzureWorkloadSQLPointInTimeRecoveryPoint': AzureWorkloadSQLPointInTimeRecoveryPoint,
        'RecoveryPoint.AzureWorkloadSQLRecoveryPoint': AzureWorkloadSQLRecoveryPoint,
        'BackupEngineBase': BackupEngineBase,
        'BackupRequest': BackupRequest,
        'BackupEngineBase.DpmBackupEngine': DpmBackupEngine,
        'ProtectionContainer.DPMContainer': DpmContainer,
        'ProtectionContainer.GenericContainer': GenericContainer,
        'RecoveryPoint.GenericRecoveryPoint': GenericRecoveryPoint,
        'BackupRequest.IaasVMBackupRequest': IaasVMBackupRequest,
        'ProtectionContainer.IaaSVMContainer': IaaSVMContainer,
        'ILRRequest.IaasVMILRRegistrationRequest': IaasVMILRRegistrationRequest,
        'WorkloadProtectableItem.IaaSVMProtectableItem': IaaSVMProtectableItem,
        'RecoveryPoint.IaasVMRecoveryPoint': IaasVMRecoveryPoint,
        'ILRRequest': ILRRequest,
        'ProtectionContainer.Windows': MabContainer,
        'OperationStatusExtendedInfo': OperationStatusExtendedInfo,
        'OperationStatusExtendedInfo.OperationStatusJobExtendedInfo': OperationStatusJobExtendedInfo,
        'OperationStatusExtendedInfo.OperationStatusJobsExtendedInfo': OperationStatusJobsExtendedInfo,
        'OperationStatusExtendedInfo.OperationStatusProvisionILRExtendedInfo': OperationStatusProvisionILRExtendedInfo,
        'ProtectableContainer': ProtectableContainer,
        'ProtectionContainer': ProtectionContainer,
        'RecoveryPoint': RecoveryPoint,
        'WorkloadItem': WorkloadItem,
        'WorkloadProtectableItem': WorkloadProtectableItem
    };

    var mappers = /*#__PURE__*/Object.freeze({
        CloudError: CloudError,
        BaseResource: BaseResource,
        FeatureSupportRequest: FeatureSupportRequest,
        AzureBackupGoalFeatureSupportRequest: AzureBackupGoalFeatureSupportRequest,
        AzureFileshareProtectedItemExtendedInfo: AzureFileshareProtectedItemExtendedInfo,
        ProtectedItem: ProtectedItem,
        AzureFileshareProtectedItem: AzureFileshareProtectedItem,
        SchedulePolicy: SchedulePolicy,
        RetentionPolicy: RetentionPolicy,
        ProtectionPolicy: ProtectionPolicy,
        AzureFileShareProtectionPolicy: AzureFileShareProtectionPolicy,
        RestoreFileSpecs: RestoreFileSpecs,
        TargetAFSRestoreInfo: TargetAFSRestoreInfo,
        RestoreRequest: RestoreRequest,
        AzureFileShareRestoreRequest: AzureFileShareRestoreRequest,
        AzureIaaSVMProtectedItem: AzureIaaSVMProtectedItem,
        AzureIaaSClassicComputeVMProtectedItem: AzureIaaSClassicComputeVMProtectedItem,
        AzureIaaSComputeVMProtectedItem: AzureIaaSComputeVMProtectedItem,
        AzureIaaSVMErrorInfo: AzureIaaSVMErrorInfo,
        AzureIaaSVMHealthDetails: AzureIaaSVMHealthDetails,
        AzureIaaSVMJobTaskDetails: AzureIaaSVMJobTaskDetails,
        AzureIaaSVMJobExtendedInfo: AzureIaaSVMJobExtendedInfo,
        Job: Job,
        AzureIaaSVMJob: AzureIaaSVMJob,
        AzureIaaSVMProtectedItemExtendedInfo: AzureIaaSVMProtectedItemExtendedInfo,
        AzureIaaSVMProtectionPolicy: AzureIaaSVMProtectionPolicy,
        ProtectionIntent: ProtectionIntent,
        AzureRecoveryServiceVaultProtectionIntent: AzureRecoveryServiceVaultProtectionIntent,
        AzureResourceProtectionIntent: AzureResourceProtectionIntent,
        AzureSqlProtectedItemExtendedInfo: AzureSqlProtectedItemExtendedInfo,
        AzureSqlProtectedItem: AzureSqlProtectedItem,
        AzureSqlProtectionPolicy: AzureSqlProtectionPolicy,
        AzureStorageErrorInfo: AzureStorageErrorInfo,
        AzureStorageJobTaskDetails: AzureStorageJobTaskDetails,
        AzureStorageJobExtendedInfo: AzureStorageJobExtendedInfo,
        AzureStorageJob: AzureStorageJob,
        AzureVMResourceFeatureSupportRequest: AzureVMResourceFeatureSupportRequest,
        AzureVMResourceFeatureSupportResponse: AzureVMResourceFeatureSupportResponse,
        ErrorDetail: ErrorDetail,
        AzureVmWorkloadProtectedItemExtendedInfo: AzureVmWorkloadProtectedItemExtendedInfo,
        AzureVmWorkloadProtectedItem: AzureVmWorkloadProtectedItem,
        Settings: Settings,
        SubProtectionPolicy: SubProtectionPolicy,
        AzureVmWorkloadProtectionPolicy: AzureVmWorkloadProtectionPolicy,
        AzureVmWorkloadSAPHanaDatabaseProtectedItem: AzureVmWorkloadSAPHanaDatabaseProtectedItem,
        AzureVmWorkloadSQLDatabaseProtectedItem: AzureVmWorkloadSQLDatabaseProtectedItem,
        AzureWorkloadAutoProtectionIntent: AzureWorkloadAutoProtectionIntent,
        AzureWorkloadErrorInfo: AzureWorkloadErrorInfo,
        AzureWorkloadJobTaskDetails: AzureWorkloadJobTaskDetails,
        AzureWorkloadJobExtendedInfo: AzureWorkloadJobExtendedInfo,
        AzureWorkloadJob: AzureWorkloadJob,
        AzureWorkloadRestoreRequest: AzureWorkloadRestoreRequest,
        AzureWorkloadSAPHanaRestoreRequest: AzureWorkloadSAPHanaRestoreRequest,
        AzureWorkloadSAPHanaPointInTimeRestoreRequest: AzureWorkloadSAPHanaPointInTimeRestoreRequest,
        TargetRestoreInfo: TargetRestoreInfo,
        AzureWorkloadSQLAutoProtectionIntent: AzureWorkloadSQLAutoProtectionIntent,
        AzureWorkloadSQLRestoreRequest: AzureWorkloadSQLRestoreRequest,
        AzureWorkloadSQLPointInTimeRestoreRequest: AzureWorkloadSQLPointInTimeRestoreRequest,
        SQLDataDirectoryMapping: SQLDataDirectoryMapping,
        NameInfo: NameInfo,
        BackupManagementUsage: BackupManagementUsage,
        BackupStatusRequest: BackupStatusRequest,
        BackupStatusResponse: BackupStatusResponse,
        BMSBackupSummariesQueryObject: BMSBackupSummariesQueryObject,
        Day: Day,
        DailyRetentionFormat: DailyRetentionFormat,
        RetentionDuration: RetentionDuration,
        DailyRetentionSchedule: DailyRetentionSchedule,
        DpmErrorInfo: DpmErrorInfo,
        DpmJobTaskDetails: DpmJobTaskDetails,
        DpmJobExtendedInfo: DpmJobExtendedInfo,
        DpmJob: DpmJob,
        DPMProtectedItemExtendedInfo: DPMProtectedItemExtendedInfo,
        DPMProtectedItem: DPMProtectedItem,
        EncryptionDetails: EncryptionDetails,
        OperationResultInfoBase: OperationResultInfoBase,
        ExportJobsOperationResultInfo: ExportJobsOperationResultInfo,
        GenericProtectedItem: GenericProtectedItem,
        GenericProtectionPolicy: GenericProtectionPolicy,
        IaasVMRestoreRequest: IaasVMRestoreRequest,
        JobQueryObject: JobQueryObject,
        Resource: Resource,
        JobResource: JobResource,
        LogSchedulePolicy: LogSchedulePolicy,
        WeeklyRetentionSchedule: WeeklyRetentionSchedule,
        WeeklyRetentionFormat: WeeklyRetentionFormat,
        MonthlyRetentionSchedule: MonthlyRetentionSchedule,
        YearlyRetentionSchedule: YearlyRetentionSchedule,
        LongTermRetentionPolicy: LongTermRetentionPolicy,
        LongTermSchedulePolicy: LongTermSchedulePolicy,
        MabErrorInfo: MabErrorInfo,
        MabFileFolderProtectedItemExtendedInfo: MabFileFolderProtectedItemExtendedInfo,
        MabFileFolderProtectedItem: MabFileFolderProtectedItem,
        MabJobTaskDetails: MabJobTaskDetails,
        MabJobExtendedInfo: MabJobExtendedInfo,
        MabJob: MabJob,
        MabProtectionPolicy: MabProtectionPolicy,
        OperationResultInfo: OperationResultInfo,
        OperationWorkerResponse: OperationWorkerResponse,
        OperationResultInfoBaseResource: OperationResultInfoBaseResource,
        PreValidateEnableBackupRequest: PreValidateEnableBackupRequest,
        PreValidateEnableBackupResponse: PreValidateEnableBackupResponse,
        ProtectedItemQueryObject: ProtectedItemQueryObject,
        ProtectedItemResource: ProtectedItemResource,
        ProtectionIntentQueryObject: ProtectionIntentQueryObject,
        ProtectionIntentResource: ProtectionIntentResource,
        ProtectionPolicyQueryObject: ProtectionPolicyQueryObject,
        ProtectionPolicyResource: ProtectionPolicyResource,
        ResourceList: ResourceList,
        SimpleRetentionPolicy: SimpleRetentionPolicy,
        SimpleSchedulePolicy: SimpleSchedulePolicy,
        ValidateOperationRequest: ValidateOperationRequest,
        ValidateRestoreOperationRequest: ValidateRestoreOperationRequest,
        ValidateIaasVMRestoreOperationRequest: ValidateIaasVMRestoreOperationRequest,
        ValidateOperationResponse: ValidateOperationResponse,
        ValidateOperationsResponse: ValidateOperationsResponse,
        DPMContainerExtendedInfo: DPMContainerExtendedInfo,
        ProtectionContainer: ProtectionContainer,
        AzureBackupServerContainer: AzureBackupServerContainer,
        BackupEngineBase: BackupEngineBase,
        AzureBackupServerEngine: AzureBackupServerEngine,
        BackupRequest: BackupRequest,
        AzureFileShareBackupRequest: AzureFileShareBackupRequest,
        WorkloadProtectableItem: WorkloadProtectableItem,
        AzureFileShareProtectableItem: AzureFileShareProtectableItem,
        RecoveryPoint: RecoveryPoint,
        AzureFileShareRecoveryPoint: AzureFileShareRecoveryPoint,
        IaaSVMContainer: IaaSVMContainer,
        AzureIaaSClassicComputeVMContainer: AzureIaaSClassicComputeVMContainer,
        IaaSVMProtectableItem: IaaSVMProtectableItem,
        AzureIaaSClassicComputeVMProtectableItem: AzureIaaSClassicComputeVMProtectableItem,
        AzureIaaSComputeVMContainer: AzureIaaSComputeVMContainer,
        AzureIaaSComputeVMProtectableItem: AzureIaaSComputeVMProtectableItem,
        AzureWorkloadContainer: AzureWorkloadContainer,
        AzureSQLAGWorkloadContainerProtectionContainer: AzureSQLAGWorkloadContainerProtectionContainer,
        AzureSqlContainer: AzureSqlContainer,
        AzureStorageContainer: AzureStorageContainer,
        ProtectableContainer: ProtectableContainer,
        AzureStorageProtectableContainer: AzureStorageProtectableContainer,
        AzureVMAppContainerProtectableContainer: AzureVMAppContainerProtectableContainer,
        AzureVMAppContainerProtectionContainer: AzureVMAppContainerProtectionContainer,
        WorkloadItem: WorkloadItem,
        AzureVmWorkloadItem: AzureVmWorkloadItem,
        PreBackupValidation: PreBackupValidation,
        AzureVmWorkloadProtectableItem: AzureVmWorkloadProtectableItem,
        AzureVmWorkloadSAPHanaDatabaseProtectableItem: AzureVmWorkloadSAPHanaDatabaseProtectableItem,
        AzureVmWorkloadSAPHanaDatabaseWorkloadItem: AzureVmWorkloadSAPHanaDatabaseWorkloadItem,
        AzureVmWorkloadSAPHanaSystemProtectableItem: AzureVmWorkloadSAPHanaSystemProtectableItem,
        AzureVmWorkloadSAPHanaSystemWorkloadItem: AzureVmWorkloadSAPHanaSystemWorkloadItem,
        AzureVmWorkloadSQLAvailabilityGroupProtectableItem: AzureVmWorkloadSQLAvailabilityGroupProtectableItem,
        AzureVmWorkloadSQLDatabaseProtectableItem: AzureVmWorkloadSQLDatabaseProtectableItem,
        AzureVmWorkloadSQLDatabaseWorkloadItem: AzureVmWorkloadSQLDatabaseWorkloadItem,
        AzureVmWorkloadSQLInstanceProtectableItem: AzureVmWorkloadSQLInstanceProtectableItem,
        SQLDataDirectory: SQLDataDirectory,
        AzureVmWorkloadSQLInstanceWorkloadItem: AzureVmWorkloadSQLInstanceWorkloadItem,
        AzureWorkloadBackupRequest: AzureWorkloadBackupRequest,
        InquiryValidation: InquiryValidation,
        WorkloadInquiryDetails: WorkloadInquiryDetails,
        InquiryInfo: InquiryInfo,
        DistributedNodesInfo: DistributedNodesInfo,
        AzureWorkloadContainerExtendedInfo: AzureWorkloadContainerExtendedInfo,
        AzureWorkloadRecoveryPoint: AzureWorkloadRecoveryPoint,
        PointInTimeRange: PointInTimeRange,
        AzureWorkloadSAPHanaRecoveryPoint: AzureWorkloadSAPHanaRecoveryPoint,
        AzureWorkloadSAPHanaPointInTimeRecoveryPoint: AzureWorkloadSAPHanaPointInTimeRecoveryPoint,
        AzureWorkloadSQLRecoveryPoint: AzureWorkloadSQLRecoveryPoint,
        AzureWorkloadSQLPointInTimeRecoveryPoint: AzureWorkloadSQLPointInTimeRecoveryPoint,
        AzureWorkloadSQLRecoveryPointExtendedInfo: AzureWorkloadSQLRecoveryPointExtendedInfo,
        BackupEngineExtendedInfo: BackupEngineExtendedInfo,
        BackupEngineBaseResource: BackupEngineBaseResource,
        BackupRequestResource: BackupRequestResource,
        BackupResourceConfig: BackupResourceConfig,
        BackupResourceConfigResource: BackupResourceConfigResource,
        BackupResourceVaultConfig: BackupResourceVaultConfig,
        BackupResourceVaultConfigResource: BackupResourceVaultConfigResource,
        BEKDetails: BEKDetails,
        BMSBackupEngineQueryObject: BMSBackupEngineQueryObject,
        BMSBackupEnginesQueryObject: BMSBackupEnginesQueryObject,
        BMSContainerQueryObject: BMSContainerQueryObject,
        BMSContainersInquiryQueryObject: BMSContainersInquiryQueryObject,
        BMSPOQueryObject: BMSPOQueryObject,
        BMSRefreshContainersQueryObject: BMSRefreshContainersQueryObject,
        BMSRPQueryObject: BMSRPQueryObject,
        BMSWorkloadItemQueryObject: BMSWorkloadItemQueryObject,
        ClientScriptForConnect: ClientScriptForConnect,
        ContainerIdentityInfo: ContainerIdentityInfo,
        DpmBackupEngine: DpmBackupEngine,
        DpmContainer: DpmContainer,
        GenericContainerExtendedInfo: GenericContainerExtendedInfo,
        GenericContainer: GenericContainer,
        GenericRecoveryPoint: GenericRecoveryPoint,
        GetProtectedItemQueryObject: GetProtectedItemQueryObject,
        IaasVMBackupRequest: IaasVMBackupRequest,
        ILRRequest: ILRRequest,
        IaasVMILRRegistrationRequest: IaasVMILRRegistrationRequest,
        KEKDetails: KEKDetails,
        KeyAndSecretDetails: KeyAndSecretDetails,
        RecoveryPointTierInformation: RecoveryPointTierInformation,
        IaasVMRecoveryPoint: IaasVMRecoveryPoint,
        ILRRequestResource: ILRRequestResource,
        InstantItemRecoveryTarget: InstantItemRecoveryTarget,
        MabContainerExtendedInfo: MabContainerExtendedInfo,
        MABContainerHealthDetails: MABContainerHealthDetails,
        MabContainer: MabContainer,
        OperationStatusError: OperationStatusError,
        OperationStatusExtendedInfo: OperationStatusExtendedInfo,
        OperationStatus: OperationStatus,
        OperationStatusJobExtendedInfo: OperationStatusJobExtendedInfo,
        OperationStatusJobsExtendedInfo: OperationStatusJobsExtendedInfo,
        OperationStatusProvisionILRExtendedInfo: OperationStatusProvisionILRExtendedInfo,
        ProtectableContainerResource: ProtectableContainerResource,
        ProtectionContainerResource: ProtectionContainerResource,
        RecoveryPointResource: RecoveryPointResource,
        RestoreRequestResource: RestoreRequestResource,
        TokenInformation: TokenInformation,
        WorkloadItemResource: WorkloadItemResource,
        WorkloadProtectableItemResource: WorkloadProtectableItemResource,
        ClientDiscoveryDisplay: ClientDiscoveryDisplay,
        ClientDiscoveryForLogSpecification: ClientDiscoveryForLogSpecification,
        ClientDiscoveryForServiceSpecification: ClientDiscoveryForServiceSpecification,
        ClientDiscoveryForProperties: ClientDiscoveryForProperties,
        ClientDiscoveryValueForSingleApi: ClientDiscoveryValueForSingleApi,
        JobResourceList: JobResourceList,
        ProtectionPolicyResourceList: ProtectionPolicyResourceList,
        ProtectedItemResourceList: ProtectedItemResourceList,
        ProtectionIntentResourceList: ProtectionIntentResourceList,
        BackupManagementUsageList: BackupManagementUsageList,
        BackupEngineBaseResourceList: BackupEngineBaseResourceList,
        ProtectableContainerResourceList: ProtectableContainerResourceList,
        WorkloadItemResourceList: WorkloadItemResourceList,
        RecoveryPointResourceList: RecoveryPointResourceList,
        WorkloadProtectableItemResourceList: WorkloadProtectableItemResourceList,
        ProtectionContainerResourceList: ProtectionContainerResourceList,
        ClientDiscoveryResponse: ClientDiscoveryResponse,
        discriminators: discriminators
    });

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */

    var Mappers = /*#__PURE__*/Object.freeze({
        discriminators: discriminators,
        PreValidateEnableBackupRequest: PreValidateEnableBackupRequest,
        PreValidateEnableBackupResponse: PreValidateEnableBackupResponse,
        CloudError: CloudError,
        ProtectionIntentResource: ProtectionIntentResource,
        Resource: Resource,
        BaseResource: BaseResource,
        ProtectionIntent: ProtectionIntent,
        AzureRecoveryServiceVaultProtectionIntent: AzureRecoveryServiceVaultProtectionIntent,
        AzureResourceProtectionIntent: AzureResourceProtectionIntent,
        AzureWorkloadAutoProtectionIntent: AzureWorkloadAutoProtectionIntent,
        AzureWorkloadSQLAutoProtectionIntent: AzureWorkloadSQLAutoProtectionIntent,
        JobResource: JobResource,
        Job: Job,
        MabJob: MabJob,
        MabErrorInfo: MabErrorInfo,
        MabJobExtendedInfo: MabJobExtendedInfo,
        MabJobTaskDetails: MabJobTaskDetails,
        ProtectedItemResource: ProtectedItemResource,
        ProtectedItem: ProtectedItem,
        ProtectionPolicyResource: ProtectionPolicyResource,
        ProtectionPolicy: ProtectionPolicy,
        BackupEngineBaseResource: BackupEngineBaseResource,
        BackupEngineBase: BackupEngineBase,
        BackupEngineExtendedInfo: BackupEngineExtendedInfo,
        BackupRequestResource: BackupRequestResource,
        BackupRequest: BackupRequest,
        BackupResourceConfigResource: BackupResourceConfigResource,
        BackupResourceConfig: BackupResourceConfig,
        BackupResourceVaultConfigResource: BackupResourceVaultConfigResource,
        BackupResourceVaultConfig: BackupResourceVaultConfig,
        DpmBackupEngine: DpmBackupEngine,
        IaasVMBackupRequest: IaasVMBackupRequest,
        ILRRequestResource: ILRRequestResource,
        ILRRequest: ILRRequest,
        ProtectableContainerResource: ProtectableContainerResource,
        ProtectableContainer: ProtectableContainer,
        ProtectionContainerResource: ProtectionContainerResource,
        ProtectionContainer: ProtectionContainer,
        RecoveryPointResource: RecoveryPointResource,
        RecoveryPoint: RecoveryPoint,
        RestoreRequestResource: RestoreRequestResource,
        RestoreRequest: RestoreRequest,
        WorkloadItemResource: WorkloadItemResource,
        WorkloadItem: WorkloadItem,
        WorkloadProtectableItemResource: WorkloadProtectableItemResource,
        WorkloadProtectableItem: WorkloadProtectableItem,
        AzureFileshareProtectedItem: AzureFileshareProtectedItem,
        AzureFileshareProtectedItemExtendedInfo: AzureFileshareProtectedItemExtendedInfo,
        AzureFileShareProtectionPolicy: AzureFileShareProtectionPolicy,
        SchedulePolicy: SchedulePolicy,
        RetentionPolicy: RetentionPolicy,
        AzureFileShareRestoreRequest: AzureFileShareRestoreRequest,
        RestoreFileSpecs: RestoreFileSpecs,
        TargetAFSRestoreInfo: TargetAFSRestoreInfo,
        AzureIaaSVMJob: AzureIaaSVMJob,
        AzureIaaSVMErrorInfo: AzureIaaSVMErrorInfo,
        AzureIaaSVMJobExtendedInfo: AzureIaaSVMJobExtendedInfo,
        AzureIaaSVMJobTaskDetails: AzureIaaSVMJobTaskDetails,
        AzureIaaSVMProtectedItem: AzureIaaSVMProtectedItem,
        AzureIaaSVMHealthDetails: AzureIaaSVMHealthDetails,
        AzureIaaSVMProtectedItemExtendedInfo: AzureIaaSVMProtectedItemExtendedInfo,
        AzureIaaSVMProtectionPolicy: AzureIaaSVMProtectionPolicy,
        AzureSqlProtectedItem: AzureSqlProtectedItem,
        AzureSqlProtectedItemExtendedInfo: AzureSqlProtectedItemExtendedInfo,
        AzureSqlProtectionPolicy: AzureSqlProtectionPolicy,
        AzureStorageJob: AzureStorageJob,
        AzureStorageErrorInfo: AzureStorageErrorInfo,
        AzureStorageJobExtendedInfo: AzureStorageJobExtendedInfo,
        AzureStorageJobTaskDetails: AzureStorageJobTaskDetails,
        AzureVmWorkloadProtectedItem: AzureVmWorkloadProtectedItem,
        ErrorDetail: ErrorDetail,
        AzureVmWorkloadProtectedItemExtendedInfo: AzureVmWorkloadProtectedItemExtendedInfo,
        AzureVmWorkloadProtectionPolicy: AzureVmWorkloadProtectionPolicy,
        Settings: Settings,
        SubProtectionPolicy: SubProtectionPolicy,
        AzureVmWorkloadSAPHanaDatabaseProtectedItem: AzureVmWorkloadSAPHanaDatabaseProtectedItem,
        AzureVmWorkloadSQLDatabaseProtectedItem: AzureVmWorkloadSQLDatabaseProtectedItem,
        AzureWorkloadJob: AzureWorkloadJob,
        AzureWorkloadErrorInfo: AzureWorkloadErrorInfo,
        AzureWorkloadJobExtendedInfo: AzureWorkloadJobExtendedInfo,
        AzureWorkloadJobTaskDetails: AzureWorkloadJobTaskDetails,
        AzureWorkloadRestoreRequest: AzureWorkloadRestoreRequest,
        AzureWorkloadSAPHanaRestoreRequest: AzureWorkloadSAPHanaRestoreRequest,
        TargetRestoreInfo: TargetRestoreInfo,
        AzureWorkloadSQLRestoreRequest: AzureWorkloadSQLRestoreRequest,
        SQLDataDirectoryMapping: SQLDataDirectoryMapping,
        DpmJob: DpmJob,
        DpmErrorInfo: DpmErrorInfo,
        DpmJobExtendedInfo: DpmJobExtendedInfo,
        DpmJobTaskDetails: DpmJobTaskDetails,
        DPMProtectedItem: DPMProtectedItem,
        DPMProtectedItemExtendedInfo: DPMProtectedItemExtendedInfo,
        GenericProtectedItem: GenericProtectedItem,
        GenericProtectionPolicy: GenericProtectionPolicy,
        IaasVMRestoreRequest: IaasVMRestoreRequest,
        EncryptionDetails: EncryptionDetails,
        LogSchedulePolicy: LogSchedulePolicy,
        LongTermRetentionPolicy: LongTermRetentionPolicy,
        DailyRetentionSchedule: DailyRetentionSchedule,
        RetentionDuration: RetentionDuration,
        WeeklyRetentionSchedule: WeeklyRetentionSchedule,
        MonthlyRetentionSchedule: MonthlyRetentionSchedule,
        DailyRetentionFormat: DailyRetentionFormat,
        Day: Day,
        WeeklyRetentionFormat: WeeklyRetentionFormat,
        YearlyRetentionSchedule: YearlyRetentionSchedule,
        LongTermSchedulePolicy: LongTermSchedulePolicy,
        MabFileFolderProtectedItem: MabFileFolderProtectedItem,
        MabFileFolderProtectedItemExtendedInfo: MabFileFolderProtectedItemExtendedInfo,
        MabProtectionPolicy: MabProtectionPolicy,
        SimpleRetentionPolicy: SimpleRetentionPolicy,
        SimpleSchedulePolicy: SimpleSchedulePolicy,
        AzureBackupServerContainer: AzureBackupServerContainer,
        DPMContainerExtendedInfo: DPMContainerExtendedInfo,
        AzureBackupServerEngine: AzureBackupServerEngine,
        AzureFileShareBackupRequest: AzureFileShareBackupRequest,
        AzureFileShareProtectableItem: AzureFileShareProtectableItem,
        AzureFileShareRecoveryPoint: AzureFileShareRecoveryPoint,
        AzureSqlContainer: AzureSqlContainer,
        AzureStorageContainer: AzureStorageContainer,
        AzureStorageProtectableContainer: AzureStorageProtectableContainer,
        AzureVMAppContainerProtectableContainer: AzureVMAppContainerProtectableContainer,
        AzureVmWorkloadItem: AzureVmWorkloadItem,
        AzureVmWorkloadProtectableItem: AzureVmWorkloadProtectableItem,
        PreBackupValidation: PreBackupValidation,
        AzureVmWorkloadSAPHanaDatabaseProtectableItem: AzureVmWorkloadSAPHanaDatabaseProtectableItem,
        AzureVmWorkloadSAPHanaDatabaseWorkloadItem: AzureVmWorkloadSAPHanaDatabaseWorkloadItem,
        AzureVmWorkloadSAPHanaSystemProtectableItem: AzureVmWorkloadSAPHanaSystemProtectableItem,
        AzureVmWorkloadSAPHanaSystemWorkloadItem: AzureVmWorkloadSAPHanaSystemWorkloadItem,
        AzureVmWorkloadSQLAvailabilityGroupProtectableItem: AzureVmWorkloadSQLAvailabilityGroupProtectableItem,
        AzureVmWorkloadSQLDatabaseProtectableItem: AzureVmWorkloadSQLDatabaseProtectableItem,
        AzureVmWorkloadSQLDatabaseWorkloadItem: AzureVmWorkloadSQLDatabaseWorkloadItem,
        AzureVmWorkloadSQLInstanceProtectableItem: AzureVmWorkloadSQLInstanceProtectableItem,
        AzureVmWorkloadSQLInstanceWorkloadItem: AzureVmWorkloadSQLInstanceWorkloadItem,
        SQLDataDirectory: SQLDataDirectory,
        AzureWorkloadBackupRequest: AzureWorkloadBackupRequest,
        AzureWorkloadContainer: AzureWorkloadContainer,
        AzureWorkloadContainerExtendedInfo: AzureWorkloadContainerExtendedInfo,
        InquiryInfo: InquiryInfo,
        WorkloadInquiryDetails: WorkloadInquiryDetails,
        InquiryValidation: InquiryValidation,
        DistributedNodesInfo: DistributedNodesInfo,
        AzureWorkloadRecoveryPoint: AzureWorkloadRecoveryPoint,
        AzureWorkloadSAPHanaRecoveryPoint: AzureWorkloadSAPHanaRecoveryPoint,
        AzureWorkloadSQLRecoveryPoint: AzureWorkloadSQLRecoveryPoint,
        AzureWorkloadSQLRecoveryPointExtendedInfo: AzureWorkloadSQLRecoveryPointExtendedInfo,
        DpmContainer: DpmContainer,
        GenericContainer: GenericContainer,
        GenericContainerExtendedInfo: GenericContainerExtendedInfo,
        ContainerIdentityInfo: ContainerIdentityInfo,
        GenericRecoveryPoint: GenericRecoveryPoint,
        IaaSVMContainer: IaaSVMContainer,
        IaasVMILRRegistrationRequest: IaasVMILRRegistrationRequest,
        IaaSVMProtectableItem: IaaSVMProtectableItem,
        IaasVMRecoveryPoint: IaasVMRecoveryPoint,
        KeyAndSecretDetails: KeyAndSecretDetails,
        KEKDetails: KEKDetails,
        BEKDetails: BEKDetails,
        RecoveryPointTierInformation: RecoveryPointTierInformation,
        MabContainer: MabContainer,
        MabContainerExtendedInfo: MabContainerExtendedInfo,
        MABContainerHealthDetails: MABContainerHealthDetails,
        AzureIaaSClassicComputeVMProtectedItem: AzureIaaSClassicComputeVMProtectedItem,
        AzureIaaSComputeVMProtectedItem: AzureIaaSComputeVMProtectedItem,
        AzureWorkloadSAPHanaPointInTimeRestoreRequest: AzureWorkloadSAPHanaPointInTimeRestoreRequest,
        AzureWorkloadSQLPointInTimeRestoreRequest: AzureWorkloadSQLPointInTimeRestoreRequest,
        AzureIaaSClassicComputeVMContainer: AzureIaaSClassicComputeVMContainer,
        AzureIaaSClassicComputeVMProtectableItem: AzureIaaSClassicComputeVMProtectableItem,
        AzureIaaSComputeVMContainer: AzureIaaSComputeVMContainer,
        AzureIaaSComputeVMProtectableItem: AzureIaaSComputeVMProtectableItem,
        AzureSQLAGWorkloadContainerProtectionContainer: AzureSQLAGWorkloadContainerProtectionContainer,
        AzureVMAppContainerProtectionContainer: AzureVMAppContainerProtectionContainer,
        AzureWorkloadSAPHanaPointInTimeRecoveryPoint: AzureWorkloadSAPHanaPointInTimeRecoveryPoint,
        PointInTimeRange: PointInTimeRange,
        AzureWorkloadSQLPointInTimeRecoveryPoint: AzureWorkloadSQLPointInTimeRecoveryPoint
    });

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    var acceptLanguage = {
        parameterPath: "acceptLanguage",
        mapper: {
            serializedName: "accept-language",
            defaultValue: 'en-US',
            type: {
                name: "String"
            }
        }
    };
    var apiVersion0 = {
        parameterPath: "apiVersion",
        mapper: {
            required: true,
            isConstant: true,
            serializedName: "api-version",
            defaultValue: '2017-07-01',
            type: {
                name: "String"
            }
        }
    };
    var apiVersion1 = {
        parameterPath: "apiVersion",
        mapper: {
            required: true,
            isConstant: true,
            serializedName: "api-version",
            defaultValue: '2016-12-01',
            type: {
                name: "String"
            }
        }
    };
    var apiVersion2 = {
        parameterPath: "apiVersion",
        mapper: {
            required: true,
            isConstant: true,
            serializedName: "api-version",
            defaultValue: '2016-08-10',
            type: {
                name: "String"
            }
        }
    };
    var azureRegion = {
        parameterPath: "azureRegion",
        mapper: {
            required: true,
            serializedName: "azureRegion",
            type: {
                name: "String"
            }
        }
    };
    var backupEngineName = {
        parameterPath: "backupEngineName",
        mapper: {
            required: true,
            serializedName: "backupEngineName",
            type: {
                name: "String"
            }
        }
    };
    var containerName = {
        parameterPath: "containerName",
        mapper: {
            required: true,
            serializedName: "containerName",
            type: {
                name: "String"
            }
        }
    };
    var fabricName = {
        parameterPath: "fabricName",
        mapper: {
            required: true,
            serializedName: "fabricName",
            type: {
                name: "String"
            }
        }
    };
    var filter = {
        parameterPath: [
            "options",
            "filter"
        ],
        mapper: {
            serializedName: "$filter",
            type: {
                name: "String"
            }
        }
    };
    var intentObjectName = {
        parameterPath: "intentObjectName",
        mapper: {
            required: true,
            serializedName: "intentObjectName",
            type: {
                name: "String"
            }
        }
    };
    var jobName = {
        parameterPath: "jobName",
        mapper: {
            required: true,
            serializedName: "jobName",
            type: {
                name: "String"
            }
        }
    };
    var nextPageLink = {
        parameterPath: "nextPageLink",
        mapper: {
            required: true,
            serializedName: "nextLink",
            type: {
                name: "String"
            }
        },
        skipEncoding: true
    };
    var operationId = {
        parameterPath: "operationId",
        mapper: {
            required: true,
            serializedName: "operationId",
            type: {
                name: "String"
            }
        }
    };
    var policyName = {
        parameterPath: "policyName",
        mapper: {
            required: true,
            serializedName: "policyName",
            type: {
                name: "String"
            }
        }
    };
    var protectedItemName = {
        parameterPath: "protectedItemName",
        mapper: {
            required: true,
            serializedName: "protectedItemName",
            type: {
                name: "String"
            }
        }
    };
    var recoveryPointId = {
        parameterPath: "recoveryPointId",
        mapper: {
            required: true,
            serializedName: "recoveryPointId",
            type: {
                name: "String"
            }
        }
    };
    var resourceGroupName = {
        parameterPath: "resourceGroupName",
        mapper: {
            required: true,
            serializedName: "resourceGroupName",
            type: {
                name: "String"
            }
        }
    };
    var skipToken = {
        parameterPath: [
            "options",
            "skipToken"
        ],
        mapper: {
            serializedName: "$skipToken",
            type: {
                name: "String"
            }
        }
    };
    var subscriptionId = {
        parameterPath: "subscriptionId",
        mapper: {
            required: true,
            serializedName: "subscriptionId",
            type: {
                name: "String"
            }
        }
    };
    var vaultName = {
        parameterPath: "vaultName",
        mapper: {
            required: true,
            serializedName: "vaultName",
            type: {
                name: "String"
            }
        }
    };

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    /** Class representing a ProtectionIntentOperations. */
    var ProtectionIntentOperations = /** @class */ (function () {
        /**
         * Create a ProtectionIntentOperations.
         * @param {RecoveryServicesBackupClientContext} client Reference to the service client.
         */
        function ProtectionIntentOperations(client) {
            this.client = client;
        }
        ProtectionIntentOperations.prototype.validate = function (azureRegion$$1, parameters, options, callback) {
            return this.client.sendOperationRequest({
                azureRegion: azureRegion$$1,
                parameters: parameters,
                options: options
            }, validateOperationSpec, callback);
        };
        ProtectionIntentOperations.prototype.get = function (vaultName$$1, resourceGroupName$$1, fabricName$$1, intentObjectName$$1, options, callback) {
            return this.client.sendOperationRequest({
                vaultName: vaultName$$1,
                resourceGroupName: resourceGroupName$$1,
                fabricName: fabricName$$1,
                intentObjectName: intentObjectName$$1,
                options: options
            }, getOperationSpec, callback);
        };
        ProtectionIntentOperations.prototype.createOrUpdate = function (vaultName$$1, resourceGroupName$$1, fabricName$$1, intentObjectName$$1, parameters, options, callback) {
            return this.client.sendOperationRequest({
                vaultName: vaultName$$1,
                resourceGroupName: resourceGroupName$$1,
                fabricName: fabricName$$1,
                intentObjectName: intentObjectName$$1,
                parameters: parameters,
                options: options
            }, createOrUpdateOperationSpec, callback);
        };
        ProtectionIntentOperations.prototype.deleteMethod = function (vaultName$$1, resourceGroupName$$1, fabricName$$1, intentObjectName$$1, options, callback) {
            return this.client.sendOperationRequest({
                vaultName: vaultName$$1,
                resourceGroupName: resourceGroupName$$1,
                fabricName: fabricName$$1,
                intentObjectName: intentObjectName$$1,
                options: options
            }, deleteMethodOperationSpec, callback);
        };
        return ProtectionIntentOperations;
    }());
    // Operation Specifications
    var serializer = new msRest.Serializer(Mappers);
    var validateOperationSpec = {
        httpMethod: "POST",
        path: "Subscriptions/{subscriptionId}/providers/Microsoft.RecoveryServices/locations/{azureRegion}/backupPreValidateProtection",
        urlParameters: [
            azureRegion,
            subscriptionId
        ],
        queryParameters: [
            apiVersion0
        ],
        headerParameters: [
            acceptLanguage
        ],
        requestBody: {
            parameterPath: "parameters",
            mapper: __assign({}, PreValidateEnableBackupRequest, { required: true })
        },
        responses: {
            200: {
                bodyMapper: PreValidateEnableBackupResponse
            },
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer
    };
    var getOperationSpec = {
        httpMethod: "GET",
        path: "Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/backupProtectionIntent/{intentObjectName}",
        urlParameters: [
            vaultName,
            resourceGroupName,
            subscriptionId,
            fabricName,
            intentObjectName
        ],
        queryParameters: [
            apiVersion0
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            200: {
                bodyMapper: ProtectionIntentResource
            },
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer
    };
    var createOrUpdateOperationSpec = {
        httpMethod: "PUT",
        path: "Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/backupProtectionIntent/{intentObjectName}",
        urlParameters: [
            vaultName,
            resourceGroupName,
            subscriptionId,
            fabricName,
            intentObjectName
        ],
        queryParameters: [
            apiVersion0
        ],
        headerParameters: [
            acceptLanguage
        ],
        requestBody: {
            parameterPath: "parameters",
            mapper: __assign({}, ProtectionIntentResource, { required: true })
        },
        responses: {
            200: {
                bodyMapper: ProtectionIntentResource
            },
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer
    };
    var deleteMethodOperationSpec = {
        httpMethod: "DELETE",
        path: "Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/backupProtectionIntent/{intentObjectName}",
        urlParameters: [
            vaultName,
            resourceGroupName,
            subscriptionId,
            fabricName,
            intentObjectName
        ],
        queryParameters: [
            apiVersion0
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            204: {},
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer
    };

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */

    var Mappers$1 = /*#__PURE__*/Object.freeze({
        discriminators: discriminators,
        BackupStatusRequest: BackupStatusRequest,
        BackupStatusResponse: BackupStatusResponse,
        CloudError: CloudError
    });

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    /** Class representing a BackupStatus. */
    var BackupStatus = /** @class */ (function () {
        /**
         * Create a BackupStatus.
         * @param {RecoveryServicesBackupClientContext} client Reference to the service client.
         */
        function BackupStatus(client) {
            this.client = client;
        }
        BackupStatus.prototype.get = function (azureRegion$$1, parameters, options, callback) {
            return this.client.sendOperationRequest({
                azureRegion: azureRegion$$1,
                parameters: parameters,
                options: options
            }, getOperationSpec$1, callback);
        };
        return BackupStatus;
    }());
    // Operation Specifications
    var serializer$1 = new msRest.Serializer(Mappers$1);
    var getOperationSpec$1 = {
        httpMethod: "POST",
        path: "Subscriptions/{subscriptionId}/providers/Microsoft.RecoveryServices/locations/{azureRegion}/backupStatus",
        urlParameters: [
            azureRegion,
            subscriptionId
        ],
        queryParameters: [
            apiVersion0
        ],
        headerParameters: [
            acceptLanguage
        ],
        requestBody: {
            parameterPath: "parameters",
            mapper: __assign({}, BackupStatusRequest, { required: true })
        },
        responses: {
            200: {
                bodyMapper: BackupStatusResponse
            },
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer$1
    };

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */

    var Mappers$2 = /*#__PURE__*/Object.freeze({
        discriminators: discriminators,
        FeatureSupportRequest: FeatureSupportRequest,
        AzureVMResourceFeatureSupportResponse: AzureVMResourceFeatureSupportResponse,
        CloudError: CloudError,
        AzureBackupGoalFeatureSupportRequest: AzureBackupGoalFeatureSupportRequest,
        AzureVMResourceFeatureSupportRequest: AzureVMResourceFeatureSupportRequest
    });

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    /** Class representing a FeatureSupport. */
    var FeatureSupport = /** @class */ (function () {
        /**
         * Create a FeatureSupport.
         * @param {RecoveryServicesBackupClientContext} client Reference to the service client.
         */
        function FeatureSupport(client) {
            this.client = client;
        }
        FeatureSupport.prototype.validate = function (azureRegion$$1, parameters, options, callback) {
            return this.client.sendOperationRequest({
                azureRegion: azureRegion$$1,
                parameters: parameters,
                options: options
            }, validateOperationSpec$1, callback);
        };
        return FeatureSupport;
    }());
    // Operation Specifications
    var serializer$2 = new msRest.Serializer(Mappers$2);
    var validateOperationSpec$1 = {
        httpMethod: "POST",
        path: "Subscriptions/{subscriptionId}/providers/Microsoft.RecoveryServices/locations/{azureRegion}/backupValidateFeatures",
        urlParameters: [
            azureRegion,
            subscriptionId
        ],
        queryParameters: [
            apiVersion0
        ],
        headerParameters: [
            acceptLanguage
        ],
        requestBody: {
            parameterPath: "parameters",
            mapper: __assign({}, FeatureSupportRequest, { required: true })
        },
        responses: {
            200: {
                bodyMapper: AzureVMResourceFeatureSupportResponse
            },
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer$2
    };

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */

    var Mappers$3 = /*#__PURE__*/Object.freeze({
        discriminators: discriminators,
        JobResourceList: JobResourceList,
        ResourceList: ResourceList,
        JobResource: JobResource,
        Resource: Resource,
        BaseResource: BaseResource,
        Job: Job,
        CloudError: CloudError,
        AzureIaaSVMJob: AzureIaaSVMJob,
        AzureIaaSVMErrorInfo: AzureIaaSVMErrorInfo,
        AzureIaaSVMJobExtendedInfo: AzureIaaSVMJobExtendedInfo,
        AzureIaaSVMJobTaskDetails: AzureIaaSVMJobTaskDetails,
        AzureStorageJob: AzureStorageJob,
        AzureStorageErrorInfo: AzureStorageErrorInfo,
        AzureStorageJobExtendedInfo: AzureStorageJobExtendedInfo,
        AzureStorageJobTaskDetails: AzureStorageJobTaskDetails,
        AzureWorkloadJob: AzureWorkloadJob,
        AzureWorkloadErrorInfo: AzureWorkloadErrorInfo,
        AzureWorkloadJobExtendedInfo: AzureWorkloadJobExtendedInfo,
        AzureWorkloadJobTaskDetails: AzureWorkloadJobTaskDetails,
        DpmJob: DpmJob,
        DpmErrorInfo: DpmErrorInfo,
        DpmJobExtendedInfo: DpmJobExtendedInfo,
        DpmJobTaskDetails: DpmJobTaskDetails,
        MabJob: MabJob,
        MabErrorInfo: MabErrorInfo,
        MabJobExtendedInfo: MabJobExtendedInfo,
        MabJobTaskDetails: MabJobTaskDetails,
        ProtectedItemResource: ProtectedItemResource,
        ProtectedItem: ProtectedItem,
        ProtectedItemResourceList: ProtectedItemResourceList,
        ProtectionIntentResource: ProtectionIntentResource,
        ProtectionIntent: ProtectionIntent,
        ProtectionIntentResourceList: ProtectionIntentResourceList,
        ProtectionPolicyResource: ProtectionPolicyResource,
        ProtectionPolicy: ProtectionPolicy,
        ProtectionPolicyResourceList: ProtectionPolicyResourceList,
        BackupEngineBaseResource: BackupEngineBaseResource,
        BackupEngineBase: BackupEngineBase,
        BackupEngineExtendedInfo: BackupEngineExtendedInfo,
        BackupEngineBaseResourceList: BackupEngineBaseResourceList,
        BackupRequestResource: BackupRequestResource,
        BackupRequest: BackupRequest,
        BackupResourceConfigResource: BackupResourceConfigResource,
        BackupResourceConfig: BackupResourceConfig,
        BackupResourceVaultConfigResource: BackupResourceVaultConfigResource,
        BackupResourceVaultConfig: BackupResourceVaultConfig,
        DpmBackupEngine: DpmBackupEngine,
        IaasVMBackupRequest: IaasVMBackupRequest,
        ILRRequestResource: ILRRequestResource,
        ILRRequest: ILRRequest,
        ProtectableContainerResource: ProtectableContainerResource,
        ProtectableContainer: ProtectableContainer,
        ProtectableContainerResourceList: ProtectableContainerResourceList,
        ProtectionContainerResource: ProtectionContainerResource,
        ProtectionContainer: ProtectionContainer,
        ProtectionContainerResourceList: ProtectionContainerResourceList,
        RecoveryPointResource: RecoveryPointResource,
        RecoveryPoint: RecoveryPoint,
        RecoveryPointResourceList: RecoveryPointResourceList,
        RestoreRequestResource: RestoreRequestResource,
        RestoreRequest: RestoreRequest,
        WorkloadItemResource: WorkloadItemResource,
        WorkloadItem: WorkloadItem,
        WorkloadItemResourceList: WorkloadItemResourceList,
        WorkloadProtectableItemResource: WorkloadProtectableItemResource,
        WorkloadProtectableItem: WorkloadProtectableItem,
        WorkloadProtectableItemResourceList: WorkloadProtectableItemResourceList,
        AzureFileshareProtectedItem: AzureFileshareProtectedItem,
        AzureFileshareProtectedItemExtendedInfo: AzureFileshareProtectedItemExtendedInfo,
        AzureFileShareProtectionPolicy: AzureFileShareProtectionPolicy,
        SchedulePolicy: SchedulePolicy,
        RetentionPolicy: RetentionPolicy,
        AzureFileShareRestoreRequest: AzureFileShareRestoreRequest,
        RestoreFileSpecs: RestoreFileSpecs,
        TargetAFSRestoreInfo: TargetAFSRestoreInfo,
        AzureIaaSVMProtectedItem: AzureIaaSVMProtectedItem,
        AzureIaaSVMHealthDetails: AzureIaaSVMHealthDetails,
        AzureIaaSVMProtectedItemExtendedInfo: AzureIaaSVMProtectedItemExtendedInfo,
        AzureIaaSVMProtectionPolicy: AzureIaaSVMProtectionPolicy,
        AzureRecoveryServiceVaultProtectionIntent: AzureRecoveryServiceVaultProtectionIntent,
        AzureResourceProtectionIntent: AzureResourceProtectionIntent,
        AzureSqlProtectedItem: AzureSqlProtectedItem,
        AzureSqlProtectedItemExtendedInfo: AzureSqlProtectedItemExtendedInfo,
        AzureSqlProtectionPolicy: AzureSqlProtectionPolicy,
        AzureVmWorkloadProtectedItem: AzureVmWorkloadProtectedItem,
        ErrorDetail: ErrorDetail,
        AzureVmWorkloadProtectedItemExtendedInfo: AzureVmWorkloadProtectedItemExtendedInfo,
        AzureVmWorkloadProtectionPolicy: AzureVmWorkloadProtectionPolicy,
        Settings: Settings,
        SubProtectionPolicy: SubProtectionPolicy,
        AzureVmWorkloadSAPHanaDatabaseProtectedItem: AzureVmWorkloadSAPHanaDatabaseProtectedItem,
        AzureVmWorkloadSQLDatabaseProtectedItem: AzureVmWorkloadSQLDatabaseProtectedItem,
        AzureWorkloadAutoProtectionIntent: AzureWorkloadAutoProtectionIntent,
        AzureWorkloadRestoreRequest: AzureWorkloadRestoreRequest,
        AzureWorkloadSAPHanaRestoreRequest: AzureWorkloadSAPHanaRestoreRequest,
        TargetRestoreInfo: TargetRestoreInfo,
        AzureWorkloadSQLAutoProtectionIntent: AzureWorkloadSQLAutoProtectionIntent,
        AzureWorkloadSQLRestoreRequest: AzureWorkloadSQLRestoreRequest,
        SQLDataDirectoryMapping: SQLDataDirectoryMapping,
        DPMProtectedItem: DPMProtectedItem,
        DPMProtectedItemExtendedInfo: DPMProtectedItemExtendedInfo,
        GenericProtectedItem: GenericProtectedItem,
        GenericProtectionPolicy: GenericProtectionPolicy,
        IaasVMRestoreRequest: IaasVMRestoreRequest,
        EncryptionDetails: EncryptionDetails,
        LogSchedulePolicy: LogSchedulePolicy,
        LongTermRetentionPolicy: LongTermRetentionPolicy,
        DailyRetentionSchedule: DailyRetentionSchedule,
        RetentionDuration: RetentionDuration,
        WeeklyRetentionSchedule: WeeklyRetentionSchedule,
        MonthlyRetentionSchedule: MonthlyRetentionSchedule,
        DailyRetentionFormat: DailyRetentionFormat,
        Day: Day,
        WeeklyRetentionFormat: WeeklyRetentionFormat,
        YearlyRetentionSchedule: YearlyRetentionSchedule,
        LongTermSchedulePolicy: LongTermSchedulePolicy,
        MabFileFolderProtectedItem: MabFileFolderProtectedItem,
        MabFileFolderProtectedItemExtendedInfo: MabFileFolderProtectedItemExtendedInfo,
        MabProtectionPolicy: MabProtectionPolicy,
        SimpleRetentionPolicy: SimpleRetentionPolicy,
        SimpleSchedulePolicy: SimpleSchedulePolicy,
        AzureBackupServerContainer: AzureBackupServerContainer,
        DPMContainerExtendedInfo: DPMContainerExtendedInfo,
        AzureBackupServerEngine: AzureBackupServerEngine,
        AzureFileShareBackupRequest: AzureFileShareBackupRequest,
        AzureFileShareProtectableItem: AzureFileShareProtectableItem,
        AzureFileShareRecoveryPoint: AzureFileShareRecoveryPoint,
        AzureSqlContainer: AzureSqlContainer,
        AzureStorageContainer: AzureStorageContainer,
        AzureStorageProtectableContainer: AzureStorageProtectableContainer,
        AzureVMAppContainerProtectableContainer: AzureVMAppContainerProtectableContainer,
        AzureVmWorkloadItem: AzureVmWorkloadItem,
        AzureVmWorkloadProtectableItem: AzureVmWorkloadProtectableItem,
        PreBackupValidation: PreBackupValidation,
        AzureVmWorkloadSAPHanaDatabaseProtectableItem: AzureVmWorkloadSAPHanaDatabaseProtectableItem,
        AzureVmWorkloadSAPHanaDatabaseWorkloadItem: AzureVmWorkloadSAPHanaDatabaseWorkloadItem,
        AzureVmWorkloadSAPHanaSystemProtectableItem: AzureVmWorkloadSAPHanaSystemProtectableItem,
        AzureVmWorkloadSAPHanaSystemWorkloadItem: AzureVmWorkloadSAPHanaSystemWorkloadItem,
        AzureVmWorkloadSQLAvailabilityGroupProtectableItem: AzureVmWorkloadSQLAvailabilityGroupProtectableItem,
        AzureVmWorkloadSQLDatabaseProtectableItem: AzureVmWorkloadSQLDatabaseProtectableItem,
        AzureVmWorkloadSQLDatabaseWorkloadItem: AzureVmWorkloadSQLDatabaseWorkloadItem,
        AzureVmWorkloadSQLInstanceProtectableItem: AzureVmWorkloadSQLInstanceProtectableItem,
        AzureVmWorkloadSQLInstanceWorkloadItem: AzureVmWorkloadSQLInstanceWorkloadItem,
        SQLDataDirectory: SQLDataDirectory,
        AzureWorkloadBackupRequest: AzureWorkloadBackupRequest,
        AzureWorkloadContainer: AzureWorkloadContainer,
        AzureWorkloadContainerExtendedInfo: AzureWorkloadContainerExtendedInfo,
        InquiryInfo: InquiryInfo,
        WorkloadInquiryDetails: WorkloadInquiryDetails,
        InquiryValidation: InquiryValidation,
        DistributedNodesInfo: DistributedNodesInfo,
        AzureWorkloadRecoveryPoint: AzureWorkloadRecoveryPoint,
        AzureWorkloadSAPHanaRecoveryPoint: AzureWorkloadSAPHanaRecoveryPoint,
        AzureWorkloadSQLRecoveryPoint: AzureWorkloadSQLRecoveryPoint,
        AzureWorkloadSQLRecoveryPointExtendedInfo: AzureWorkloadSQLRecoveryPointExtendedInfo,
        DpmContainer: DpmContainer,
        GenericContainer: GenericContainer,
        GenericContainerExtendedInfo: GenericContainerExtendedInfo,
        ContainerIdentityInfo: ContainerIdentityInfo,
        GenericRecoveryPoint: GenericRecoveryPoint,
        IaaSVMContainer: IaaSVMContainer,
        IaasVMILRRegistrationRequest: IaasVMILRRegistrationRequest,
        IaaSVMProtectableItem: IaaSVMProtectableItem,
        IaasVMRecoveryPoint: IaasVMRecoveryPoint,
        KeyAndSecretDetails: KeyAndSecretDetails,
        KEKDetails: KEKDetails,
        BEKDetails: BEKDetails,
        RecoveryPointTierInformation: RecoveryPointTierInformation,
        MabContainer: MabContainer,
        MabContainerExtendedInfo: MabContainerExtendedInfo,
        MABContainerHealthDetails: MABContainerHealthDetails,
        AzureIaaSClassicComputeVMProtectedItem: AzureIaaSClassicComputeVMProtectedItem,
        AzureIaaSComputeVMProtectedItem: AzureIaaSComputeVMProtectedItem,
        AzureWorkloadSAPHanaPointInTimeRestoreRequest: AzureWorkloadSAPHanaPointInTimeRestoreRequest,
        AzureWorkloadSQLPointInTimeRestoreRequest: AzureWorkloadSQLPointInTimeRestoreRequest,
        AzureIaaSClassicComputeVMContainer: AzureIaaSClassicComputeVMContainer,
        AzureIaaSClassicComputeVMProtectableItem: AzureIaaSClassicComputeVMProtectableItem,
        AzureIaaSComputeVMContainer: AzureIaaSComputeVMContainer,
        AzureIaaSComputeVMProtectableItem: AzureIaaSComputeVMProtectableItem,
        AzureSQLAGWorkloadContainerProtectionContainer: AzureSQLAGWorkloadContainerProtectionContainer,
        AzureVMAppContainerProtectionContainer: AzureVMAppContainerProtectionContainer,
        AzureWorkloadSAPHanaPointInTimeRecoveryPoint: AzureWorkloadSAPHanaPointInTimeRecoveryPoint,
        PointInTimeRange: PointInTimeRange,
        AzureWorkloadSQLPointInTimeRecoveryPoint: AzureWorkloadSQLPointInTimeRecoveryPoint
    });

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    /** Class representing a BackupJobs. */
    var BackupJobs = /** @class */ (function () {
        /**
         * Create a BackupJobs.
         * @param {RecoveryServicesBackupClientContext} client Reference to the service client.
         */
        function BackupJobs(client) {
            this.client = client;
        }
        BackupJobs.prototype.list = function (vaultName$$1, resourceGroupName$$1, options, callback) {
            return this.client.sendOperationRequest({
                vaultName: vaultName$$1,
                resourceGroupName: resourceGroupName$$1,
                options: options
            }, listOperationSpec, callback);
        };
        BackupJobs.prototype.listNext = function (nextPageLink$$1, options, callback) {
            return this.client.sendOperationRequest({
                nextPageLink: nextPageLink$$1,
                options: options
            }, listNextOperationSpec, callback);
        };
        return BackupJobs;
    }());
    // Operation Specifications
    var serializer$3 = new msRest.Serializer(Mappers$3);
    var listOperationSpec = {
        httpMethod: "GET",
        path: "Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupJobs",
        urlParameters: [
            vaultName,
            resourceGroupName,
            subscriptionId
        ],
        queryParameters: [
            apiVersion0,
            filter,
            skipToken
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            200: {
                bodyMapper: JobResourceList
            },
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer$3
    };
    var listNextOperationSpec = {
        httpMethod: "GET",
        baseUrl: "https://management.azure.com",
        path: "{nextLink}",
        urlParameters: [
            nextPageLink
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            200: {
                bodyMapper: JobResourceList
            },
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer$3
    };

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */

    var Mappers$4 = /*#__PURE__*/Object.freeze({
        discriminators: discriminators,
        JobResource: JobResource,
        Resource: Resource,
        BaseResource: BaseResource,
        Job: Job,
        CloudError: CloudError,
        AzureIaaSVMJob: AzureIaaSVMJob,
        AzureIaaSVMErrorInfo: AzureIaaSVMErrorInfo,
        AzureIaaSVMJobExtendedInfo: AzureIaaSVMJobExtendedInfo,
        AzureIaaSVMJobTaskDetails: AzureIaaSVMJobTaskDetails,
        AzureStorageJob: AzureStorageJob,
        AzureStorageErrorInfo: AzureStorageErrorInfo,
        AzureStorageJobExtendedInfo: AzureStorageJobExtendedInfo,
        AzureStorageJobTaskDetails: AzureStorageJobTaskDetails,
        AzureWorkloadJob: AzureWorkloadJob,
        AzureWorkloadErrorInfo: AzureWorkloadErrorInfo,
        AzureWorkloadJobExtendedInfo: AzureWorkloadJobExtendedInfo,
        AzureWorkloadJobTaskDetails: AzureWorkloadJobTaskDetails,
        DpmJob: DpmJob,
        DpmErrorInfo: DpmErrorInfo,
        DpmJobExtendedInfo: DpmJobExtendedInfo,
        DpmJobTaskDetails: DpmJobTaskDetails,
        MabJob: MabJob,
        MabErrorInfo: MabErrorInfo,
        MabJobExtendedInfo: MabJobExtendedInfo,
        MabJobTaskDetails: MabJobTaskDetails,
        ProtectedItemResource: ProtectedItemResource,
        ProtectedItem: ProtectedItem,
        ProtectionIntentResource: ProtectionIntentResource,
        ProtectionIntent: ProtectionIntent,
        ProtectionPolicyResource: ProtectionPolicyResource,
        ProtectionPolicy: ProtectionPolicy,
        BackupEngineBaseResource: BackupEngineBaseResource,
        BackupEngineBase: BackupEngineBase,
        BackupEngineExtendedInfo: BackupEngineExtendedInfo,
        BackupRequestResource: BackupRequestResource,
        BackupRequest: BackupRequest,
        BackupResourceConfigResource: BackupResourceConfigResource,
        BackupResourceConfig: BackupResourceConfig,
        BackupResourceVaultConfigResource: BackupResourceVaultConfigResource,
        BackupResourceVaultConfig: BackupResourceVaultConfig,
        DpmBackupEngine: DpmBackupEngine,
        IaasVMBackupRequest: IaasVMBackupRequest,
        ILRRequestResource: ILRRequestResource,
        ILRRequest: ILRRequest,
        ProtectableContainerResource: ProtectableContainerResource,
        ProtectableContainer: ProtectableContainer,
        ProtectionContainerResource: ProtectionContainerResource,
        ProtectionContainer: ProtectionContainer,
        RecoveryPointResource: RecoveryPointResource,
        RecoveryPoint: RecoveryPoint,
        RestoreRequestResource: RestoreRequestResource,
        RestoreRequest: RestoreRequest,
        WorkloadItemResource: WorkloadItemResource,
        WorkloadItem: WorkloadItem,
        WorkloadProtectableItemResource: WorkloadProtectableItemResource,
        WorkloadProtectableItem: WorkloadProtectableItem,
        AzureFileshareProtectedItem: AzureFileshareProtectedItem,
        AzureFileshareProtectedItemExtendedInfo: AzureFileshareProtectedItemExtendedInfo,
        AzureFileShareProtectionPolicy: AzureFileShareProtectionPolicy,
        SchedulePolicy: SchedulePolicy,
        RetentionPolicy: RetentionPolicy,
        AzureFileShareRestoreRequest: AzureFileShareRestoreRequest,
        RestoreFileSpecs: RestoreFileSpecs,
        TargetAFSRestoreInfo: TargetAFSRestoreInfo,
        AzureIaaSVMProtectedItem: AzureIaaSVMProtectedItem,
        AzureIaaSVMHealthDetails: AzureIaaSVMHealthDetails,
        AzureIaaSVMProtectedItemExtendedInfo: AzureIaaSVMProtectedItemExtendedInfo,
        AzureIaaSVMProtectionPolicy: AzureIaaSVMProtectionPolicy,
        AzureRecoveryServiceVaultProtectionIntent: AzureRecoveryServiceVaultProtectionIntent,
        AzureResourceProtectionIntent: AzureResourceProtectionIntent,
        AzureSqlProtectedItem: AzureSqlProtectedItem,
        AzureSqlProtectedItemExtendedInfo: AzureSqlProtectedItemExtendedInfo,
        AzureSqlProtectionPolicy: AzureSqlProtectionPolicy,
        AzureVmWorkloadProtectedItem: AzureVmWorkloadProtectedItem,
        ErrorDetail: ErrorDetail,
        AzureVmWorkloadProtectedItemExtendedInfo: AzureVmWorkloadProtectedItemExtendedInfo,
        AzureVmWorkloadProtectionPolicy: AzureVmWorkloadProtectionPolicy,
        Settings: Settings,
        SubProtectionPolicy: SubProtectionPolicy,
        AzureVmWorkloadSAPHanaDatabaseProtectedItem: AzureVmWorkloadSAPHanaDatabaseProtectedItem,
        AzureVmWorkloadSQLDatabaseProtectedItem: AzureVmWorkloadSQLDatabaseProtectedItem,
        AzureWorkloadAutoProtectionIntent: AzureWorkloadAutoProtectionIntent,
        AzureWorkloadRestoreRequest: AzureWorkloadRestoreRequest,
        AzureWorkloadSAPHanaRestoreRequest: AzureWorkloadSAPHanaRestoreRequest,
        TargetRestoreInfo: TargetRestoreInfo,
        AzureWorkloadSQLAutoProtectionIntent: AzureWorkloadSQLAutoProtectionIntent,
        AzureWorkloadSQLRestoreRequest: AzureWorkloadSQLRestoreRequest,
        SQLDataDirectoryMapping: SQLDataDirectoryMapping,
        DPMProtectedItem: DPMProtectedItem,
        DPMProtectedItemExtendedInfo: DPMProtectedItemExtendedInfo,
        GenericProtectedItem: GenericProtectedItem,
        GenericProtectionPolicy: GenericProtectionPolicy,
        IaasVMRestoreRequest: IaasVMRestoreRequest,
        EncryptionDetails: EncryptionDetails,
        LogSchedulePolicy: LogSchedulePolicy,
        LongTermRetentionPolicy: LongTermRetentionPolicy,
        DailyRetentionSchedule: DailyRetentionSchedule,
        RetentionDuration: RetentionDuration,
        WeeklyRetentionSchedule: WeeklyRetentionSchedule,
        MonthlyRetentionSchedule: MonthlyRetentionSchedule,
        DailyRetentionFormat: DailyRetentionFormat,
        Day: Day,
        WeeklyRetentionFormat: WeeklyRetentionFormat,
        YearlyRetentionSchedule: YearlyRetentionSchedule,
        LongTermSchedulePolicy: LongTermSchedulePolicy,
        MabFileFolderProtectedItem: MabFileFolderProtectedItem,
        MabFileFolderProtectedItemExtendedInfo: MabFileFolderProtectedItemExtendedInfo,
        MabProtectionPolicy: MabProtectionPolicy,
        SimpleRetentionPolicy: SimpleRetentionPolicy,
        SimpleSchedulePolicy: SimpleSchedulePolicy,
        AzureBackupServerContainer: AzureBackupServerContainer,
        DPMContainerExtendedInfo: DPMContainerExtendedInfo,
        AzureBackupServerEngine: AzureBackupServerEngine,
        AzureFileShareBackupRequest: AzureFileShareBackupRequest,
        AzureFileShareProtectableItem: AzureFileShareProtectableItem,
        AzureFileShareRecoveryPoint: AzureFileShareRecoveryPoint,
        AzureSqlContainer: AzureSqlContainer,
        AzureStorageContainer: AzureStorageContainer,
        AzureStorageProtectableContainer: AzureStorageProtectableContainer,
        AzureVMAppContainerProtectableContainer: AzureVMAppContainerProtectableContainer,
        AzureVmWorkloadItem: AzureVmWorkloadItem,
        AzureVmWorkloadProtectableItem: AzureVmWorkloadProtectableItem,
        PreBackupValidation: PreBackupValidation,
        AzureVmWorkloadSAPHanaDatabaseProtectableItem: AzureVmWorkloadSAPHanaDatabaseProtectableItem,
        AzureVmWorkloadSAPHanaDatabaseWorkloadItem: AzureVmWorkloadSAPHanaDatabaseWorkloadItem,
        AzureVmWorkloadSAPHanaSystemProtectableItem: AzureVmWorkloadSAPHanaSystemProtectableItem,
        AzureVmWorkloadSAPHanaSystemWorkloadItem: AzureVmWorkloadSAPHanaSystemWorkloadItem,
        AzureVmWorkloadSQLAvailabilityGroupProtectableItem: AzureVmWorkloadSQLAvailabilityGroupProtectableItem,
        AzureVmWorkloadSQLDatabaseProtectableItem: AzureVmWorkloadSQLDatabaseProtectableItem,
        AzureVmWorkloadSQLDatabaseWorkloadItem: AzureVmWorkloadSQLDatabaseWorkloadItem,
        AzureVmWorkloadSQLInstanceProtectableItem: AzureVmWorkloadSQLInstanceProtectableItem,
        AzureVmWorkloadSQLInstanceWorkloadItem: AzureVmWorkloadSQLInstanceWorkloadItem,
        SQLDataDirectory: SQLDataDirectory,
        AzureWorkloadBackupRequest: AzureWorkloadBackupRequest,
        AzureWorkloadContainer: AzureWorkloadContainer,
        AzureWorkloadContainerExtendedInfo: AzureWorkloadContainerExtendedInfo,
        InquiryInfo: InquiryInfo,
        WorkloadInquiryDetails: WorkloadInquiryDetails,
        InquiryValidation: InquiryValidation,
        DistributedNodesInfo: DistributedNodesInfo,
        AzureWorkloadRecoveryPoint: AzureWorkloadRecoveryPoint,
        AzureWorkloadSAPHanaRecoveryPoint: AzureWorkloadSAPHanaRecoveryPoint,
        AzureWorkloadSQLRecoveryPoint: AzureWorkloadSQLRecoveryPoint,
        AzureWorkloadSQLRecoveryPointExtendedInfo: AzureWorkloadSQLRecoveryPointExtendedInfo,
        DpmContainer: DpmContainer,
        GenericContainer: GenericContainer,
        GenericContainerExtendedInfo: GenericContainerExtendedInfo,
        ContainerIdentityInfo: ContainerIdentityInfo,
        GenericRecoveryPoint: GenericRecoveryPoint,
        IaaSVMContainer: IaaSVMContainer,
        IaasVMILRRegistrationRequest: IaasVMILRRegistrationRequest,
        IaaSVMProtectableItem: IaaSVMProtectableItem,
        IaasVMRecoveryPoint: IaasVMRecoveryPoint,
        KeyAndSecretDetails: KeyAndSecretDetails,
        KEKDetails: KEKDetails,
        BEKDetails: BEKDetails,
        RecoveryPointTierInformation: RecoveryPointTierInformation,
        MabContainer: MabContainer,
        MabContainerExtendedInfo: MabContainerExtendedInfo,
        MABContainerHealthDetails: MABContainerHealthDetails,
        AzureIaaSClassicComputeVMProtectedItem: AzureIaaSClassicComputeVMProtectedItem,
        AzureIaaSComputeVMProtectedItem: AzureIaaSComputeVMProtectedItem,
        AzureWorkloadSAPHanaPointInTimeRestoreRequest: AzureWorkloadSAPHanaPointInTimeRestoreRequest,
        AzureWorkloadSQLPointInTimeRestoreRequest: AzureWorkloadSQLPointInTimeRestoreRequest,
        AzureIaaSClassicComputeVMContainer: AzureIaaSClassicComputeVMContainer,
        AzureIaaSClassicComputeVMProtectableItem: AzureIaaSClassicComputeVMProtectableItem,
        AzureIaaSComputeVMContainer: AzureIaaSComputeVMContainer,
        AzureIaaSComputeVMProtectableItem: AzureIaaSComputeVMProtectableItem,
        AzureSQLAGWorkloadContainerProtectionContainer: AzureSQLAGWorkloadContainerProtectionContainer,
        AzureVMAppContainerProtectionContainer: AzureVMAppContainerProtectionContainer,
        AzureWorkloadSAPHanaPointInTimeRecoveryPoint: AzureWorkloadSAPHanaPointInTimeRecoveryPoint,
        PointInTimeRange: PointInTimeRange,
        AzureWorkloadSQLPointInTimeRecoveryPoint: AzureWorkloadSQLPointInTimeRecoveryPoint
    });

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    /** Class representing a JobDetails. */
    var JobDetails = /** @class */ (function () {
        /**
         * Create a JobDetails.
         * @param {RecoveryServicesBackupClientContext} client Reference to the service client.
         */
        function JobDetails(client) {
            this.client = client;
        }
        JobDetails.prototype.get = function (vaultName$$1, resourceGroupName$$1, jobName$$1, options, callback) {
            return this.client.sendOperationRequest({
                vaultName: vaultName$$1,
                resourceGroupName: resourceGroupName$$1,
                jobName: jobName$$1,
                options: options
            }, getOperationSpec$2, callback);
        };
        return JobDetails;
    }());
    // Operation Specifications
    var serializer$4 = new msRest.Serializer(Mappers$4);
    var getOperationSpec$2 = {
        httpMethod: "GET",
        path: "Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupJobs/{jobName}",
        urlParameters: [
            vaultName,
            resourceGroupName,
            subscriptionId,
            jobName
        ],
        queryParameters: [
            apiVersion0
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            200: {
                bodyMapper: JobResource
            },
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer$4
    };

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */

    var Mappers$5 = /*#__PURE__*/Object.freeze({
        discriminators: discriminators,
        OperationResultInfoBaseResource: OperationResultInfoBaseResource,
        OperationWorkerResponse: OperationWorkerResponse,
        OperationResultInfoBase: OperationResultInfoBase,
        CloudError: CloudError,
        ExportJobsOperationResultInfo: ExportJobsOperationResultInfo,
        OperationResultInfo: OperationResultInfo
    });

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    /** Class representing a ExportJobsOperationResults. */
    var ExportJobsOperationResults = /** @class */ (function () {
        /**
         * Create a ExportJobsOperationResults.
         * @param {RecoveryServicesBackupClientContext} client Reference to the service client.
         */
        function ExportJobsOperationResults(client) {
            this.client = client;
        }
        ExportJobsOperationResults.prototype.get = function (vaultName$$1, resourceGroupName$$1, operationId$$1, options, callback) {
            return this.client.sendOperationRequest({
                vaultName: vaultName$$1,
                resourceGroupName: resourceGroupName$$1,
                operationId: operationId$$1,
                options: options
            }, getOperationSpec$3, callback);
        };
        return ExportJobsOperationResults;
    }());
    // Operation Specifications
    var serializer$5 = new msRest.Serializer(Mappers$5);
    var getOperationSpec$3 = {
        httpMethod: "GET",
        path: "Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupJobs/operationResults/{operationId}",
        urlParameters: [
            vaultName,
            resourceGroupName,
            subscriptionId,
            operationId
        ],
        queryParameters: [
            apiVersion0
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            200: {
                bodyMapper: OperationResultInfoBaseResource
            },
            202: {
                bodyMapper: OperationResultInfoBaseResource
            },
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer$5
    };

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */

    var Mappers$6 = /*#__PURE__*/Object.freeze({
        discriminators: discriminators,
        CloudError: CloudError
    });

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    /** Class representing a Jobs. */
    var Jobs = /** @class */ (function () {
        /**
         * Create a Jobs.
         * @param {RecoveryServicesBackupClientContext} client Reference to the service client.
         */
        function Jobs(client) {
            this.client = client;
        }
        Jobs.prototype.exportMethod = function (vaultName$$1, resourceGroupName$$1, options, callback) {
            return this.client.sendOperationRequest({
                vaultName: vaultName$$1,
                resourceGroupName: resourceGroupName$$1,
                options: options
            }, exportMethodOperationSpec, callback);
        };
        return Jobs;
    }());
    // Operation Specifications
    var serializer$6 = new msRest.Serializer(Mappers$6);
    var exportMethodOperationSpec = {
        httpMethod: "POST",
        path: "Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupJobsExport",
        urlParameters: [
            vaultName,
            resourceGroupName,
            subscriptionId
        ],
        queryParameters: [
            apiVersion0,
            filter
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            202: {},
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer$6
    };

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */

    var Mappers$7 = /*#__PURE__*/Object.freeze({
        discriminators: discriminators,
        ProtectionPolicyResourceList: ProtectionPolicyResourceList,
        ResourceList: ResourceList,
        ProtectionPolicyResource: ProtectionPolicyResource,
        Resource: Resource,
        BaseResource: BaseResource,
        ProtectionPolicy: ProtectionPolicy,
        CloudError: CloudError,
        AzureFileShareProtectionPolicy: AzureFileShareProtectionPolicy,
        SchedulePolicy: SchedulePolicy,
        RetentionPolicy: RetentionPolicy,
        AzureIaaSVMProtectionPolicy: AzureIaaSVMProtectionPolicy,
        AzureSqlProtectionPolicy: AzureSqlProtectionPolicy,
        AzureVmWorkloadProtectionPolicy: AzureVmWorkloadProtectionPolicy,
        Settings: Settings,
        SubProtectionPolicy: SubProtectionPolicy,
        GenericProtectionPolicy: GenericProtectionPolicy,
        JobResource: JobResource,
        Job: Job,
        JobResourceList: JobResourceList,
        LogSchedulePolicy: LogSchedulePolicy,
        LongTermRetentionPolicy: LongTermRetentionPolicy,
        DailyRetentionSchedule: DailyRetentionSchedule,
        RetentionDuration: RetentionDuration,
        WeeklyRetentionSchedule: WeeklyRetentionSchedule,
        MonthlyRetentionSchedule: MonthlyRetentionSchedule,
        DailyRetentionFormat: DailyRetentionFormat,
        Day: Day,
        WeeklyRetentionFormat: WeeklyRetentionFormat,
        YearlyRetentionSchedule: YearlyRetentionSchedule,
        LongTermSchedulePolicy: LongTermSchedulePolicy,
        MabJob: MabJob,
        MabErrorInfo: MabErrorInfo,
        MabJobExtendedInfo: MabJobExtendedInfo,
        MabJobTaskDetails: MabJobTaskDetails,
        MabProtectionPolicy: MabProtectionPolicy,
        ProtectedItemResource: ProtectedItemResource,
        ProtectedItem: ProtectedItem,
        ProtectedItemResourceList: ProtectedItemResourceList,
        ProtectionIntentResource: ProtectionIntentResource,
        ProtectionIntent: ProtectionIntent,
        ProtectionIntentResourceList: ProtectionIntentResourceList,
        SimpleRetentionPolicy: SimpleRetentionPolicy,
        SimpleSchedulePolicy: SimpleSchedulePolicy,
        BackupEngineBaseResource: BackupEngineBaseResource,
        BackupEngineBase: BackupEngineBase,
        BackupEngineExtendedInfo: BackupEngineExtendedInfo,
        BackupEngineBaseResourceList: BackupEngineBaseResourceList,
        BackupRequestResource: BackupRequestResource,
        BackupRequest: BackupRequest,
        BackupResourceConfigResource: BackupResourceConfigResource,
        BackupResourceConfig: BackupResourceConfig,
        BackupResourceVaultConfigResource: BackupResourceVaultConfigResource,
        BackupResourceVaultConfig: BackupResourceVaultConfig,
        DpmBackupEngine: DpmBackupEngine,
        IaasVMBackupRequest: IaasVMBackupRequest,
        ILRRequestResource: ILRRequestResource,
        ILRRequest: ILRRequest,
        ProtectableContainerResource: ProtectableContainerResource,
        ProtectableContainer: ProtectableContainer,
        ProtectableContainerResourceList: ProtectableContainerResourceList,
        ProtectionContainerResource: ProtectionContainerResource,
        ProtectionContainer: ProtectionContainer,
        ProtectionContainerResourceList: ProtectionContainerResourceList,
        RecoveryPointResource: RecoveryPointResource,
        RecoveryPoint: RecoveryPoint,
        RecoveryPointResourceList: RecoveryPointResourceList,
        RestoreRequestResource: RestoreRequestResource,
        RestoreRequest: RestoreRequest,
        WorkloadItemResource: WorkloadItemResource,
        WorkloadItem: WorkloadItem,
        WorkloadItemResourceList: WorkloadItemResourceList,
        WorkloadProtectableItemResource: WorkloadProtectableItemResource,
        WorkloadProtectableItem: WorkloadProtectableItem,
        WorkloadProtectableItemResourceList: WorkloadProtectableItemResourceList,
        AzureFileshareProtectedItem: AzureFileshareProtectedItem,
        AzureFileshareProtectedItemExtendedInfo: AzureFileshareProtectedItemExtendedInfo,
        AzureFileShareRestoreRequest: AzureFileShareRestoreRequest,
        RestoreFileSpecs: RestoreFileSpecs,
        TargetAFSRestoreInfo: TargetAFSRestoreInfo,
        AzureIaaSVMJob: AzureIaaSVMJob,
        AzureIaaSVMErrorInfo: AzureIaaSVMErrorInfo,
        AzureIaaSVMJobExtendedInfo: AzureIaaSVMJobExtendedInfo,
        AzureIaaSVMJobTaskDetails: AzureIaaSVMJobTaskDetails,
        AzureIaaSVMProtectedItem: AzureIaaSVMProtectedItem,
        AzureIaaSVMHealthDetails: AzureIaaSVMHealthDetails,
        AzureIaaSVMProtectedItemExtendedInfo: AzureIaaSVMProtectedItemExtendedInfo,
        AzureRecoveryServiceVaultProtectionIntent: AzureRecoveryServiceVaultProtectionIntent,
        AzureResourceProtectionIntent: AzureResourceProtectionIntent,
        AzureSqlProtectedItem: AzureSqlProtectedItem,
        AzureSqlProtectedItemExtendedInfo: AzureSqlProtectedItemExtendedInfo,
        AzureStorageJob: AzureStorageJob,
        AzureStorageErrorInfo: AzureStorageErrorInfo,
        AzureStorageJobExtendedInfo: AzureStorageJobExtendedInfo,
        AzureStorageJobTaskDetails: AzureStorageJobTaskDetails,
        AzureVmWorkloadProtectedItem: AzureVmWorkloadProtectedItem,
        ErrorDetail: ErrorDetail,
        AzureVmWorkloadProtectedItemExtendedInfo: AzureVmWorkloadProtectedItemExtendedInfo,
        AzureVmWorkloadSAPHanaDatabaseProtectedItem: AzureVmWorkloadSAPHanaDatabaseProtectedItem,
        AzureVmWorkloadSQLDatabaseProtectedItem: AzureVmWorkloadSQLDatabaseProtectedItem,
        AzureWorkloadAutoProtectionIntent: AzureWorkloadAutoProtectionIntent,
        AzureWorkloadJob: AzureWorkloadJob,
        AzureWorkloadErrorInfo: AzureWorkloadErrorInfo,
        AzureWorkloadJobExtendedInfo: AzureWorkloadJobExtendedInfo,
        AzureWorkloadJobTaskDetails: AzureWorkloadJobTaskDetails,
        AzureWorkloadRestoreRequest: AzureWorkloadRestoreRequest,
        AzureWorkloadSAPHanaRestoreRequest: AzureWorkloadSAPHanaRestoreRequest,
        TargetRestoreInfo: TargetRestoreInfo,
        AzureWorkloadSQLAutoProtectionIntent: AzureWorkloadSQLAutoProtectionIntent,
        AzureWorkloadSQLRestoreRequest: AzureWorkloadSQLRestoreRequest,
        SQLDataDirectoryMapping: SQLDataDirectoryMapping,
        DpmJob: DpmJob,
        DpmErrorInfo: DpmErrorInfo,
        DpmJobExtendedInfo: DpmJobExtendedInfo,
        DpmJobTaskDetails: DpmJobTaskDetails,
        DPMProtectedItem: DPMProtectedItem,
        DPMProtectedItemExtendedInfo: DPMProtectedItemExtendedInfo,
        GenericProtectedItem: GenericProtectedItem,
        IaasVMRestoreRequest: IaasVMRestoreRequest,
        EncryptionDetails: EncryptionDetails,
        MabFileFolderProtectedItem: MabFileFolderProtectedItem,
        MabFileFolderProtectedItemExtendedInfo: MabFileFolderProtectedItemExtendedInfo,
        AzureBackupServerContainer: AzureBackupServerContainer,
        DPMContainerExtendedInfo: DPMContainerExtendedInfo,
        AzureBackupServerEngine: AzureBackupServerEngine,
        AzureFileShareBackupRequest: AzureFileShareBackupRequest,
        AzureFileShareProtectableItem: AzureFileShareProtectableItem,
        AzureFileShareRecoveryPoint: AzureFileShareRecoveryPoint,
        AzureSqlContainer: AzureSqlContainer,
        AzureStorageContainer: AzureStorageContainer,
        AzureStorageProtectableContainer: AzureStorageProtectableContainer,
        AzureVMAppContainerProtectableContainer: AzureVMAppContainerProtectableContainer,
        AzureVmWorkloadItem: AzureVmWorkloadItem,
        AzureVmWorkloadProtectableItem: AzureVmWorkloadProtectableItem,
        PreBackupValidation: PreBackupValidation,
        AzureVmWorkloadSAPHanaDatabaseProtectableItem: AzureVmWorkloadSAPHanaDatabaseProtectableItem,
        AzureVmWorkloadSAPHanaDatabaseWorkloadItem: AzureVmWorkloadSAPHanaDatabaseWorkloadItem,
        AzureVmWorkloadSAPHanaSystemProtectableItem: AzureVmWorkloadSAPHanaSystemProtectableItem,
        AzureVmWorkloadSAPHanaSystemWorkloadItem: AzureVmWorkloadSAPHanaSystemWorkloadItem,
        AzureVmWorkloadSQLAvailabilityGroupProtectableItem: AzureVmWorkloadSQLAvailabilityGroupProtectableItem,
        AzureVmWorkloadSQLDatabaseProtectableItem: AzureVmWorkloadSQLDatabaseProtectableItem,
        AzureVmWorkloadSQLDatabaseWorkloadItem: AzureVmWorkloadSQLDatabaseWorkloadItem,
        AzureVmWorkloadSQLInstanceProtectableItem: AzureVmWorkloadSQLInstanceProtectableItem,
        AzureVmWorkloadSQLInstanceWorkloadItem: AzureVmWorkloadSQLInstanceWorkloadItem,
        SQLDataDirectory: SQLDataDirectory,
        AzureWorkloadBackupRequest: AzureWorkloadBackupRequest,
        AzureWorkloadContainer: AzureWorkloadContainer,
        AzureWorkloadContainerExtendedInfo: AzureWorkloadContainerExtendedInfo,
        InquiryInfo: InquiryInfo,
        WorkloadInquiryDetails: WorkloadInquiryDetails,
        InquiryValidation: InquiryValidation,
        DistributedNodesInfo: DistributedNodesInfo,
        AzureWorkloadRecoveryPoint: AzureWorkloadRecoveryPoint,
        AzureWorkloadSAPHanaRecoveryPoint: AzureWorkloadSAPHanaRecoveryPoint,
        AzureWorkloadSQLRecoveryPoint: AzureWorkloadSQLRecoveryPoint,
        AzureWorkloadSQLRecoveryPointExtendedInfo: AzureWorkloadSQLRecoveryPointExtendedInfo,
        DpmContainer: DpmContainer,
        GenericContainer: GenericContainer,
        GenericContainerExtendedInfo: GenericContainerExtendedInfo,
        ContainerIdentityInfo: ContainerIdentityInfo,
        GenericRecoveryPoint: GenericRecoveryPoint,
        IaaSVMContainer: IaaSVMContainer,
        IaasVMILRRegistrationRequest: IaasVMILRRegistrationRequest,
        IaaSVMProtectableItem: IaaSVMProtectableItem,
        IaasVMRecoveryPoint: IaasVMRecoveryPoint,
        KeyAndSecretDetails: KeyAndSecretDetails,
        KEKDetails: KEKDetails,
        BEKDetails: BEKDetails,
        RecoveryPointTierInformation: RecoveryPointTierInformation,
        MabContainer: MabContainer,
        MabContainerExtendedInfo: MabContainerExtendedInfo,
        MABContainerHealthDetails: MABContainerHealthDetails,
        AzureIaaSClassicComputeVMProtectedItem: AzureIaaSClassicComputeVMProtectedItem,
        AzureIaaSComputeVMProtectedItem: AzureIaaSComputeVMProtectedItem,
        AzureWorkloadSAPHanaPointInTimeRestoreRequest: AzureWorkloadSAPHanaPointInTimeRestoreRequest,
        AzureWorkloadSQLPointInTimeRestoreRequest: AzureWorkloadSQLPointInTimeRestoreRequest,
        AzureIaaSClassicComputeVMContainer: AzureIaaSClassicComputeVMContainer,
        AzureIaaSClassicComputeVMProtectableItem: AzureIaaSClassicComputeVMProtectableItem,
        AzureIaaSComputeVMContainer: AzureIaaSComputeVMContainer,
        AzureIaaSComputeVMProtectableItem: AzureIaaSComputeVMProtectableItem,
        AzureSQLAGWorkloadContainerProtectionContainer: AzureSQLAGWorkloadContainerProtectionContainer,
        AzureVMAppContainerProtectionContainer: AzureVMAppContainerProtectionContainer,
        AzureWorkloadSAPHanaPointInTimeRecoveryPoint: AzureWorkloadSAPHanaPointInTimeRecoveryPoint,
        PointInTimeRange: PointInTimeRange,
        AzureWorkloadSQLPointInTimeRecoveryPoint: AzureWorkloadSQLPointInTimeRecoveryPoint
    });

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    /** Class representing a BackupPolicies. */
    var BackupPolicies = /** @class */ (function () {
        /**
         * Create a BackupPolicies.
         * @param {RecoveryServicesBackupClientContext} client Reference to the service client.
         */
        function BackupPolicies(client) {
            this.client = client;
        }
        BackupPolicies.prototype.list = function (vaultName$$1, resourceGroupName$$1, options, callback) {
            return this.client.sendOperationRequest({
                vaultName: vaultName$$1,
                resourceGroupName: resourceGroupName$$1,
                options: options
            }, listOperationSpec$1, callback);
        };
        BackupPolicies.prototype.listNext = function (nextPageLink$$1, options, callback) {
            return this.client.sendOperationRequest({
                nextPageLink: nextPageLink$$1,
                options: options
            }, listNextOperationSpec$1, callback);
        };
        return BackupPolicies;
    }());
    // Operation Specifications
    var serializer$7 = new msRest.Serializer(Mappers$7);
    var listOperationSpec$1 = {
        httpMethod: "GET",
        path: "Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupPolicies",
        urlParameters: [
            vaultName,
            resourceGroupName,
            subscriptionId
        ],
        queryParameters: [
            apiVersion0,
            filter
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            200: {
                bodyMapper: ProtectionPolicyResourceList
            },
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer$7
    };
    var listNextOperationSpec$1 = {
        httpMethod: "GET",
        baseUrl: "https://management.azure.com",
        path: "{nextLink}",
        urlParameters: [
            nextPageLink
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            200: {
                bodyMapper: ProtectionPolicyResourceList
            },
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer$7
    };

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */

    var Mappers$8 = /*#__PURE__*/Object.freeze({
        discriminators: discriminators,
        ProtectedItemResourceList: ProtectedItemResourceList,
        ResourceList: ResourceList,
        ProtectedItemResource: ProtectedItemResource,
        Resource: Resource,
        BaseResource: BaseResource,
        ProtectedItem: ProtectedItem,
        CloudError: CloudError,
        AzureFileshareProtectedItem: AzureFileshareProtectedItem,
        AzureFileshareProtectedItemExtendedInfo: AzureFileshareProtectedItemExtendedInfo,
        AzureIaaSVMProtectedItem: AzureIaaSVMProtectedItem,
        AzureIaaSVMHealthDetails: AzureIaaSVMHealthDetails,
        AzureIaaSVMProtectedItemExtendedInfo: AzureIaaSVMProtectedItemExtendedInfo,
        AzureSqlProtectedItem: AzureSqlProtectedItem,
        AzureSqlProtectedItemExtendedInfo: AzureSqlProtectedItemExtendedInfo,
        AzureVmWorkloadProtectedItem: AzureVmWorkloadProtectedItem,
        ErrorDetail: ErrorDetail,
        AzureVmWorkloadProtectedItemExtendedInfo: AzureVmWorkloadProtectedItemExtendedInfo,
        AzureVmWorkloadSAPHanaDatabaseProtectedItem: AzureVmWorkloadSAPHanaDatabaseProtectedItem,
        AzureVmWorkloadSQLDatabaseProtectedItem: AzureVmWorkloadSQLDatabaseProtectedItem,
        DPMProtectedItem: DPMProtectedItem,
        DPMProtectedItemExtendedInfo: DPMProtectedItemExtendedInfo,
        GenericProtectedItem: GenericProtectedItem,
        JobResource: JobResource,
        Job: Job,
        JobResourceList: JobResourceList,
        MabFileFolderProtectedItem: MabFileFolderProtectedItem,
        MabFileFolderProtectedItemExtendedInfo: MabFileFolderProtectedItemExtendedInfo,
        MabJob: MabJob,
        MabErrorInfo: MabErrorInfo,
        MabJobExtendedInfo: MabJobExtendedInfo,
        MabJobTaskDetails: MabJobTaskDetails,
        ProtectionIntentResource: ProtectionIntentResource,
        ProtectionIntent: ProtectionIntent,
        ProtectionIntentResourceList: ProtectionIntentResourceList,
        ProtectionPolicyResource: ProtectionPolicyResource,
        ProtectionPolicy: ProtectionPolicy,
        ProtectionPolicyResourceList: ProtectionPolicyResourceList,
        BackupEngineBaseResource: BackupEngineBaseResource,
        BackupEngineBase: BackupEngineBase,
        BackupEngineExtendedInfo: BackupEngineExtendedInfo,
        BackupEngineBaseResourceList: BackupEngineBaseResourceList,
        BackupRequestResource: BackupRequestResource,
        BackupRequest: BackupRequest,
        BackupResourceConfigResource: BackupResourceConfigResource,
        BackupResourceConfig: BackupResourceConfig,
        BackupResourceVaultConfigResource: BackupResourceVaultConfigResource,
        BackupResourceVaultConfig: BackupResourceVaultConfig,
        DpmBackupEngine: DpmBackupEngine,
        IaasVMBackupRequest: IaasVMBackupRequest,
        ILRRequestResource: ILRRequestResource,
        ILRRequest: ILRRequest,
        ProtectableContainerResource: ProtectableContainerResource,
        ProtectableContainer: ProtectableContainer,
        ProtectableContainerResourceList: ProtectableContainerResourceList,
        ProtectionContainerResource: ProtectionContainerResource,
        ProtectionContainer: ProtectionContainer,
        ProtectionContainerResourceList: ProtectionContainerResourceList,
        RecoveryPointResource: RecoveryPointResource,
        RecoveryPoint: RecoveryPoint,
        RecoveryPointResourceList: RecoveryPointResourceList,
        RestoreRequestResource: RestoreRequestResource,
        RestoreRequest: RestoreRequest,
        WorkloadItemResource: WorkloadItemResource,
        WorkloadItem: WorkloadItem,
        WorkloadItemResourceList: WorkloadItemResourceList,
        WorkloadProtectableItemResource: WorkloadProtectableItemResource,
        WorkloadProtectableItem: WorkloadProtectableItem,
        WorkloadProtectableItemResourceList: WorkloadProtectableItemResourceList,
        AzureFileShareProtectionPolicy: AzureFileShareProtectionPolicy,
        SchedulePolicy: SchedulePolicy,
        RetentionPolicy: RetentionPolicy,
        AzureFileShareRestoreRequest: AzureFileShareRestoreRequest,
        RestoreFileSpecs: RestoreFileSpecs,
        TargetAFSRestoreInfo: TargetAFSRestoreInfo,
        AzureIaaSClassicComputeVMProtectedItem: AzureIaaSClassicComputeVMProtectedItem,
        AzureIaaSComputeVMProtectedItem: AzureIaaSComputeVMProtectedItem,
        AzureIaaSVMJob: AzureIaaSVMJob,
        AzureIaaSVMErrorInfo: AzureIaaSVMErrorInfo,
        AzureIaaSVMJobExtendedInfo: AzureIaaSVMJobExtendedInfo,
        AzureIaaSVMJobTaskDetails: AzureIaaSVMJobTaskDetails,
        AzureIaaSVMProtectionPolicy: AzureIaaSVMProtectionPolicy,
        AzureRecoveryServiceVaultProtectionIntent: AzureRecoveryServiceVaultProtectionIntent,
        AzureResourceProtectionIntent: AzureResourceProtectionIntent,
        AzureSqlProtectionPolicy: AzureSqlProtectionPolicy,
        AzureStorageJob: AzureStorageJob,
        AzureStorageErrorInfo: AzureStorageErrorInfo,
        AzureStorageJobExtendedInfo: AzureStorageJobExtendedInfo,
        AzureStorageJobTaskDetails: AzureStorageJobTaskDetails,
        AzureVmWorkloadProtectionPolicy: AzureVmWorkloadProtectionPolicy,
        Settings: Settings,
        SubProtectionPolicy: SubProtectionPolicy,
        AzureWorkloadAutoProtectionIntent: AzureWorkloadAutoProtectionIntent,
        AzureWorkloadJob: AzureWorkloadJob,
        AzureWorkloadErrorInfo: AzureWorkloadErrorInfo,
        AzureWorkloadJobExtendedInfo: AzureWorkloadJobExtendedInfo,
        AzureWorkloadJobTaskDetails: AzureWorkloadJobTaskDetails,
        AzureWorkloadRestoreRequest: AzureWorkloadRestoreRequest,
        AzureWorkloadSAPHanaRestoreRequest: AzureWorkloadSAPHanaRestoreRequest,
        TargetRestoreInfo: TargetRestoreInfo,
        AzureWorkloadSQLAutoProtectionIntent: AzureWorkloadSQLAutoProtectionIntent,
        AzureWorkloadSQLRestoreRequest: AzureWorkloadSQLRestoreRequest,
        SQLDataDirectoryMapping: SQLDataDirectoryMapping,
        DpmJob: DpmJob,
        DpmErrorInfo: DpmErrorInfo,
        DpmJobExtendedInfo: DpmJobExtendedInfo,
        DpmJobTaskDetails: DpmJobTaskDetails,
        GenericProtectionPolicy: GenericProtectionPolicy,
        IaasVMRestoreRequest: IaasVMRestoreRequest,
        EncryptionDetails: EncryptionDetails,
        LogSchedulePolicy: LogSchedulePolicy,
        LongTermRetentionPolicy: LongTermRetentionPolicy,
        DailyRetentionSchedule: DailyRetentionSchedule,
        RetentionDuration: RetentionDuration,
        WeeklyRetentionSchedule: WeeklyRetentionSchedule,
        MonthlyRetentionSchedule: MonthlyRetentionSchedule,
        DailyRetentionFormat: DailyRetentionFormat,
        Day: Day,
        WeeklyRetentionFormat: WeeklyRetentionFormat,
        YearlyRetentionSchedule: YearlyRetentionSchedule,
        LongTermSchedulePolicy: LongTermSchedulePolicy,
        MabProtectionPolicy: MabProtectionPolicy,
        SimpleRetentionPolicy: SimpleRetentionPolicy,
        SimpleSchedulePolicy: SimpleSchedulePolicy,
        AzureBackupServerContainer: AzureBackupServerContainer,
        DPMContainerExtendedInfo: DPMContainerExtendedInfo,
        AzureBackupServerEngine: AzureBackupServerEngine,
        AzureFileShareBackupRequest: AzureFileShareBackupRequest,
        AzureFileShareProtectableItem: AzureFileShareProtectableItem,
        AzureFileShareRecoveryPoint: AzureFileShareRecoveryPoint,
        AzureSqlContainer: AzureSqlContainer,
        AzureStorageContainer: AzureStorageContainer,
        AzureStorageProtectableContainer: AzureStorageProtectableContainer,
        AzureVMAppContainerProtectableContainer: AzureVMAppContainerProtectableContainer,
        AzureVmWorkloadItem: AzureVmWorkloadItem,
        AzureVmWorkloadProtectableItem: AzureVmWorkloadProtectableItem,
        PreBackupValidation: PreBackupValidation,
        AzureVmWorkloadSAPHanaDatabaseProtectableItem: AzureVmWorkloadSAPHanaDatabaseProtectableItem,
        AzureVmWorkloadSAPHanaDatabaseWorkloadItem: AzureVmWorkloadSAPHanaDatabaseWorkloadItem,
        AzureVmWorkloadSAPHanaSystemProtectableItem: AzureVmWorkloadSAPHanaSystemProtectableItem,
        AzureVmWorkloadSAPHanaSystemWorkloadItem: AzureVmWorkloadSAPHanaSystemWorkloadItem,
        AzureVmWorkloadSQLAvailabilityGroupProtectableItem: AzureVmWorkloadSQLAvailabilityGroupProtectableItem,
        AzureVmWorkloadSQLDatabaseProtectableItem: AzureVmWorkloadSQLDatabaseProtectableItem,
        AzureVmWorkloadSQLDatabaseWorkloadItem: AzureVmWorkloadSQLDatabaseWorkloadItem,
        AzureVmWorkloadSQLInstanceProtectableItem: AzureVmWorkloadSQLInstanceProtectableItem,
        AzureVmWorkloadSQLInstanceWorkloadItem: AzureVmWorkloadSQLInstanceWorkloadItem,
        SQLDataDirectory: SQLDataDirectory,
        AzureWorkloadBackupRequest: AzureWorkloadBackupRequest,
        AzureWorkloadContainer: AzureWorkloadContainer,
        AzureWorkloadContainerExtendedInfo: AzureWorkloadContainerExtendedInfo,
        InquiryInfo: InquiryInfo,
        WorkloadInquiryDetails: WorkloadInquiryDetails,
        InquiryValidation: InquiryValidation,
        DistributedNodesInfo: DistributedNodesInfo,
        AzureWorkloadRecoveryPoint: AzureWorkloadRecoveryPoint,
        AzureWorkloadSAPHanaRecoveryPoint: AzureWorkloadSAPHanaRecoveryPoint,
        AzureWorkloadSQLRecoveryPoint: AzureWorkloadSQLRecoveryPoint,
        AzureWorkloadSQLRecoveryPointExtendedInfo: AzureWorkloadSQLRecoveryPointExtendedInfo,
        DpmContainer: DpmContainer,
        GenericContainer: GenericContainer,
        GenericContainerExtendedInfo: GenericContainerExtendedInfo,
        ContainerIdentityInfo: ContainerIdentityInfo,
        GenericRecoveryPoint: GenericRecoveryPoint,
        IaaSVMContainer: IaaSVMContainer,
        IaasVMILRRegistrationRequest: IaasVMILRRegistrationRequest,
        IaaSVMProtectableItem: IaaSVMProtectableItem,
        IaasVMRecoveryPoint: IaasVMRecoveryPoint,
        KeyAndSecretDetails: KeyAndSecretDetails,
        KEKDetails: KEKDetails,
        BEKDetails: BEKDetails,
        RecoveryPointTierInformation: RecoveryPointTierInformation,
        MabContainer: MabContainer,
        MabContainerExtendedInfo: MabContainerExtendedInfo,
        MABContainerHealthDetails: MABContainerHealthDetails,
        AzureWorkloadSAPHanaPointInTimeRestoreRequest: AzureWorkloadSAPHanaPointInTimeRestoreRequest,
        AzureWorkloadSQLPointInTimeRestoreRequest: AzureWorkloadSQLPointInTimeRestoreRequest,
        AzureIaaSClassicComputeVMContainer: AzureIaaSClassicComputeVMContainer,
        AzureIaaSClassicComputeVMProtectableItem: AzureIaaSClassicComputeVMProtectableItem,
        AzureIaaSComputeVMContainer: AzureIaaSComputeVMContainer,
        AzureIaaSComputeVMProtectableItem: AzureIaaSComputeVMProtectableItem,
        AzureSQLAGWorkloadContainerProtectionContainer: AzureSQLAGWorkloadContainerProtectionContainer,
        AzureVMAppContainerProtectionContainer: AzureVMAppContainerProtectionContainer,
        AzureWorkloadSAPHanaPointInTimeRecoveryPoint: AzureWorkloadSAPHanaPointInTimeRecoveryPoint,
        PointInTimeRange: PointInTimeRange,
        AzureWorkloadSQLPointInTimeRecoveryPoint: AzureWorkloadSQLPointInTimeRecoveryPoint
    });

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    /** Class representing a BackupProtectedItems. */
    var BackupProtectedItems = /** @class */ (function () {
        /**
         * Create a BackupProtectedItems.
         * @param {RecoveryServicesBackupClientContext} client Reference to the service client.
         */
        function BackupProtectedItems(client) {
            this.client = client;
        }
        BackupProtectedItems.prototype.list = function (vaultName$$1, resourceGroupName$$1, options, callback) {
            return this.client.sendOperationRequest({
                vaultName: vaultName$$1,
                resourceGroupName: resourceGroupName$$1,
                options: options
            }, listOperationSpec$2, callback);
        };
        BackupProtectedItems.prototype.listNext = function (nextPageLink$$1, options, callback) {
            return this.client.sendOperationRequest({
                nextPageLink: nextPageLink$$1,
                options: options
            }, listNextOperationSpec$2, callback);
        };
        return BackupProtectedItems;
    }());
    // Operation Specifications
    var serializer$8 = new msRest.Serializer(Mappers$8);
    var listOperationSpec$2 = {
        httpMethod: "GET",
        path: "Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupProtectedItems",
        urlParameters: [
            vaultName,
            resourceGroupName,
            subscriptionId
        ],
        queryParameters: [
            apiVersion0,
            filter,
            skipToken
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            200: {
                bodyMapper: ProtectedItemResourceList
            },
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer$8
    };
    var listNextOperationSpec$2 = {
        httpMethod: "GET",
        baseUrl: "https://management.azure.com",
        path: "{nextLink}",
        urlParameters: [
            nextPageLink
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            200: {
                bodyMapper: ProtectedItemResourceList
            },
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer$8
    };

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */

    var Mappers$9 = /*#__PURE__*/Object.freeze({
        discriminators: discriminators,
        ProtectionIntentResourceList: ProtectionIntentResourceList,
        ResourceList: ResourceList,
        ProtectionIntentResource: ProtectionIntentResource,
        Resource: Resource,
        BaseResource: BaseResource,
        ProtectionIntent: ProtectionIntent,
        CloudError: CloudError,
        AzureRecoveryServiceVaultProtectionIntent: AzureRecoveryServiceVaultProtectionIntent,
        AzureResourceProtectionIntent: AzureResourceProtectionIntent,
        AzureWorkloadAutoProtectionIntent: AzureWorkloadAutoProtectionIntent,
        AzureWorkloadSQLAutoProtectionIntent: AzureWorkloadSQLAutoProtectionIntent,
        JobResource: JobResource,
        Job: Job,
        JobResourceList: JobResourceList,
        MabJob: MabJob,
        MabErrorInfo: MabErrorInfo,
        MabJobExtendedInfo: MabJobExtendedInfo,
        MabJobTaskDetails: MabJobTaskDetails,
        ProtectedItemResource: ProtectedItemResource,
        ProtectedItem: ProtectedItem,
        ProtectedItemResourceList: ProtectedItemResourceList,
        ProtectionPolicyResource: ProtectionPolicyResource,
        ProtectionPolicy: ProtectionPolicy,
        ProtectionPolicyResourceList: ProtectionPolicyResourceList,
        BackupEngineBaseResource: BackupEngineBaseResource,
        BackupEngineBase: BackupEngineBase,
        BackupEngineExtendedInfo: BackupEngineExtendedInfo,
        BackupEngineBaseResourceList: BackupEngineBaseResourceList,
        BackupRequestResource: BackupRequestResource,
        BackupRequest: BackupRequest,
        BackupResourceConfigResource: BackupResourceConfigResource,
        BackupResourceConfig: BackupResourceConfig,
        BackupResourceVaultConfigResource: BackupResourceVaultConfigResource,
        BackupResourceVaultConfig: BackupResourceVaultConfig,
        DpmBackupEngine: DpmBackupEngine,
        IaasVMBackupRequest: IaasVMBackupRequest,
        ILRRequestResource: ILRRequestResource,
        ILRRequest: ILRRequest,
        ProtectableContainerResource: ProtectableContainerResource,
        ProtectableContainer: ProtectableContainer,
        ProtectableContainerResourceList: ProtectableContainerResourceList,
        ProtectionContainerResource: ProtectionContainerResource,
        ProtectionContainer: ProtectionContainer,
        ProtectionContainerResourceList: ProtectionContainerResourceList,
        RecoveryPointResource: RecoveryPointResource,
        RecoveryPoint: RecoveryPoint,
        RecoveryPointResourceList: RecoveryPointResourceList,
        RestoreRequestResource: RestoreRequestResource,
        RestoreRequest: RestoreRequest,
        WorkloadItemResource: WorkloadItemResource,
        WorkloadItem: WorkloadItem,
        WorkloadItemResourceList: WorkloadItemResourceList,
        WorkloadProtectableItemResource: WorkloadProtectableItemResource,
        WorkloadProtectableItem: WorkloadProtectableItem,
        WorkloadProtectableItemResourceList: WorkloadProtectableItemResourceList,
        AzureFileshareProtectedItem: AzureFileshareProtectedItem,
        AzureFileshareProtectedItemExtendedInfo: AzureFileshareProtectedItemExtendedInfo,
        AzureFileShareProtectionPolicy: AzureFileShareProtectionPolicy,
        SchedulePolicy: SchedulePolicy,
        RetentionPolicy: RetentionPolicy,
        AzureFileShareRestoreRequest: AzureFileShareRestoreRequest,
        RestoreFileSpecs: RestoreFileSpecs,
        TargetAFSRestoreInfo: TargetAFSRestoreInfo,
        AzureIaaSVMJob: AzureIaaSVMJob,
        AzureIaaSVMErrorInfo: AzureIaaSVMErrorInfo,
        AzureIaaSVMJobExtendedInfo: AzureIaaSVMJobExtendedInfo,
        AzureIaaSVMJobTaskDetails: AzureIaaSVMJobTaskDetails,
        AzureIaaSVMProtectedItem: AzureIaaSVMProtectedItem,
        AzureIaaSVMHealthDetails: AzureIaaSVMHealthDetails,
        AzureIaaSVMProtectedItemExtendedInfo: AzureIaaSVMProtectedItemExtendedInfo,
        AzureIaaSVMProtectionPolicy: AzureIaaSVMProtectionPolicy,
        AzureSqlProtectedItem: AzureSqlProtectedItem,
        AzureSqlProtectedItemExtendedInfo: AzureSqlProtectedItemExtendedInfo,
        AzureSqlProtectionPolicy: AzureSqlProtectionPolicy,
        AzureStorageJob: AzureStorageJob,
        AzureStorageErrorInfo: AzureStorageErrorInfo,
        AzureStorageJobExtendedInfo: AzureStorageJobExtendedInfo,
        AzureStorageJobTaskDetails: AzureStorageJobTaskDetails,
        AzureVmWorkloadProtectedItem: AzureVmWorkloadProtectedItem,
        ErrorDetail: ErrorDetail,
        AzureVmWorkloadProtectedItemExtendedInfo: AzureVmWorkloadProtectedItemExtendedInfo,
        AzureVmWorkloadProtectionPolicy: AzureVmWorkloadProtectionPolicy,
        Settings: Settings,
        SubProtectionPolicy: SubProtectionPolicy,
        AzureVmWorkloadSAPHanaDatabaseProtectedItem: AzureVmWorkloadSAPHanaDatabaseProtectedItem,
        AzureVmWorkloadSQLDatabaseProtectedItem: AzureVmWorkloadSQLDatabaseProtectedItem,
        AzureWorkloadJob: AzureWorkloadJob,
        AzureWorkloadErrorInfo: AzureWorkloadErrorInfo,
        AzureWorkloadJobExtendedInfo: AzureWorkloadJobExtendedInfo,
        AzureWorkloadJobTaskDetails: AzureWorkloadJobTaskDetails,
        AzureWorkloadRestoreRequest: AzureWorkloadRestoreRequest,
        AzureWorkloadSAPHanaRestoreRequest: AzureWorkloadSAPHanaRestoreRequest,
        TargetRestoreInfo: TargetRestoreInfo,
        AzureWorkloadSQLRestoreRequest: AzureWorkloadSQLRestoreRequest,
        SQLDataDirectoryMapping: SQLDataDirectoryMapping,
        DpmJob: DpmJob,
        DpmErrorInfo: DpmErrorInfo,
        DpmJobExtendedInfo: DpmJobExtendedInfo,
        DpmJobTaskDetails: DpmJobTaskDetails,
        DPMProtectedItem: DPMProtectedItem,
        DPMProtectedItemExtendedInfo: DPMProtectedItemExtendedInfo,
        GenericProtectedItem: GenericProtectedItem,
        GenericProtectionPolicy: GenericProtectionPolicy,
        IaasVMRestoreRequest: IaasVMRestoreRequest,
        EncryptionDetails: EncryptionDetails,
        LogSchedulePolicy: LogSchedulePolicy,
        LongTermRetentionPolicy: LongTermRetentionPolicy,
        DailyRetentionSchedule: DailyRetentionSchedule,
        RetentionDuration: RetentionDuration,
        WeeklyRetentionSchedule: WeeklyRetentionSchedule,
        MonthlyRetentionSchedule: MonthlyRetentionSchedule,
        DailyRetentionFormat: DailyRetentionFormat,
        Day: Day,
        WeeklyRetentionFormat: WeeklyRetentionFormat,
        YearlyRetentionSchedule: YearlyRetentionSchedule,
        LongTermSchedulePolicy: LongTermSchedulePolicy,
        MabFileFolderProtectedItem: MabFileFolderProtectedItem,
        MabFileFolderProtectedItemExtendedInfo: MabFileFolderProtectedItemExtendedInfo,
        MabProtectionPolicy: MabProtectionPolicy,
        SimpleRetentionPolicy: SimpleRetentionPolicy,
        SimpleSchedulePolicy: SimpleSchedulePolicy,
        AzureBackupServerContainer: AzureBackupServerContainer,
        DPMContainerExtendedInfo: DPMContainerExtendedInfo,
        AzureBackupServerEngine: AzureBackupServerEngine,
        AzureFileShareBackupRequest: AzureFileShareBackupRequest,
        AzureFileShareProtectableItem: AzureFileShareProtectableItem,
        AzureFileShareRecoveryPoint: AzureFileShareRecoveryPoint,
        AzureSqlContainer: AzureSqlContainer,
        AzureStorageContainer: AzureStorageContainer,
        AzureStorageProtectableContainer: AzureStorageProtectableContainer,
        AzureVMAppContainerProtectableContainer: AzureVMAppContainerProtectableContainer,
        AzureVmWorkloadItem: AzureVmWorkloadItem,
        AzureVmWorkloadProtectableItem: AzureVmWorkloadProtectableItem,
        PreBackupValidation: PreBackupValidation,
        AzureVmWorkloadSAPHanaDatabaseProtectableItem: AzureVmWorkloadSAPHanaDatabaseProtectableItem,
        AzureVmWorkloadSAPHanaDatabaseWorkloadItem: AzureVmWorkloadSAPHanaDatabaseWorkloadItem,
        AzureVmWorkloadSAPHanaSystemProtectableItem: AzureVmWorkloadSAPHanaSystemProtectableItem,
        AzureVmWorkloadSAPHanaSystemWorkloadItem: AzureVmWorkloadSAPHanaSystemWorkloadItem,
        AzureVmWorkloadSQLAvailabilityGroupProtectableItem: AzureVmWorkloadSQLAvailabilityGroupProtectableItem,
        AzureVmWorkloadSQLDatabaseProtectableItem: AzureVmWorkloadSQLDatabaseProtectableItem,
        AzureVmWorkloadSQLDatabaseWorkloadItem: AzureVmWorkloadSQLDatabaseWorkloadItem,
        AzureVmWorkloadSQLInstanceProtectableItem: AzureVmWorkloadSQLInstanceProtectableItem,
        AzureVmWorkloadSQLInstanceWorkloadItem: AzureVmWorkloadSQLInstanceWorkloadItem,
        SQLDataDirectory: SQLDataDirectory,
        AzureWorkloadBackupRequest: AzureWorkloadBackupRequest,
        AzureWorkloadContainer: AzureWorkloadContainer,
        AzureWorkloadContainerExtendedInfo: AzureWorkloadContainerExtendedInfo,
        InquiryInfo: InquiryInfo,
        WorkloadInquiryDetails: WorkloadInquiryDetails,
        InquiryValidation: InquiryValidation,
        DistributedNodesInfo: DistributedNodesInfo,
        AzureWorkloadRecoveryPoint: AzureWorkloadRecoveryPoint,
        AzureWorkloadSAPHanaRecoveryPoint: AzureWorkloadSAPHanaRecoveryPoint,
        AzureWorkloadSQLRecoveryPoint: AzureWorkloadSQLRecoveryPoint,
        AzureWorkloadSQLRecoveryPointExtendedInfo: AzureWorkloadSQLRecoveryPointExtendedInfo,
        DpmContainer: DpmContainer,
        GenericContainer: GenericContainer,
        GenericContainerExtendedInfo: GenericContainerExtendedInfo,
        ContainerIdentityInfo: ContainerIdentityInfo,
        GenericRecoveryPoint: GenericRecoveryPoint,
        IaaSVMContainer: IaaSVMContainer,
        IaasVMILRRegistrationRequest: IaasVMILRRegistrationRequest,
        IaaSVMProtectableItem: IaaSVMProtectableItem,
        IaasVMRecoveryPoint: IaasVMRecoveryPoint,
        KeyAndSecretDetails: KeyAndSecretDetails,
        KEKDetails: KEKDetails,
        BEKDetails: BEKDetails,
        RecoveryPointTierInformation: RecoveryPointTierInformation,
        MabContainer: MabContainer,
        MabContainerExtendedInfo: MabContainerExtendedInfo,
        MABContainerHealthDetails: MABContainerHealthDetails,
        AzureIaaSClassicComputeVMProtectedItem: AzureIaaSClassicComputeVMProtectedItem,
        AzureIaaSComputeVMProtectedItem: AzureIaaSComputeVMProtectedItem,
        AzureWorkloadSAPHanaPointInTimeRestoreRequest: AzureWorkloadSAPHanaPointInTimeRestoreRequest,
        AzureWorkloadSQLPointInTimeRestoreRequest: AzureWorkloadSQLPointInTimeRestoreRequest,
        AzureIaaSClassicComputeVMContainer: AzureIaaSClassicComputeVMContainer,
        AzureIaaSClassicComputeVMProtectableItem: AzureIaaSClassicComputeVMProtectableItem,
        AzureIaaSComputeVMContainer: AzureIaaSComputeVMContainer,
        AzureIaaSComputeVMProtectableItem: AzureIaaSComputeVMProtectableItem,
        AzureSQLAGWorkloadContainerProtectionContainer: AzureSQLAGWorkloadContainerProtectionContainer,
        AzureVMAppContainerProtectionContainer: AzureVMAppContainerProtectionContainer,
        AzureWorkloadSAPHanaPointInTimeRecoveryPoint: AzureWorkloadSAPHanaPointInTimeRecoveryPoint,
        PointInTimeRange: PointInTimeRange,
        AzureWorkloadSQLPointInTimeRecoveryPoint: AzureWorkloadSQLPointInTimeRecoveryPoint
    });

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    /** Class representing a BackupProtectionIntent. */
    var BackupProtectionIntent = /** @class */ (function () {
        /**
         * Create a BackupProtectionIntent.
         * @param {RecoveryServicesBackupClientContext} client Reference to the service client.
         */
        function BackupProtectionIntent(client) {
            this.client = client;
        }
        BackupProtectionIntent.prototype.list = function (vaultName$$1, resourceGroupName$$1, options, callback) {
            return this.client.sendOperationRequest({
                vaultName: vaultName$$1,
                resourceGroupName: resourceGroupName$$1,
                options: options
            }, listOperationSpec$3, callback);
        };
        BackupProtectionIntent.prototype.listNext = function (nextPageLink$$1, options, callback) {
            return this.client.sendOperationRequest({
                nextPageLink: nextPageLink$$1,
                options: options
            }, listNextOperationSpec$3, callback);
        };
        return BackupProtectionIntent;
    }());
    // Operation Specifications
    var serializer$9 = new msRest.Serializer(Mappers$9);
    var listOperationSpec$3 = {
        httpMethod: "GET",
        path: "Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupProtectionIntents",
        urlParameters: [
            vaultName,
            resourceGroupName,
            subscriptionId
        ],
        queryParameters: [
            apiVersion0,
            filter,
            skipToken
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            200: {
                bodyMapper: ProtectionIntentResourceList
            },
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer$9
    };
    var listNextOperationSpec$3 = {
        httpMethod: "GET",
        baseUrl: "https://management.azure.com",
        path: "{nextLink}",
        urlParameters: [
            nextPageLink
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            200: {
                bodyMapper: ProtectionIntentResourceList
            },
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer$9
    };

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */

    var Mappers$a = /*#__PURE__*/Object.freeze({
        discriminators: discriminators,
        BackupManagementUsageList: BackupManagementUsageList,
        BackupManagementUsage: BackupManagementUsage,
        NameInfo: NameInfo,
        CloudError: CloudError
    });

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    /** Class representing a BackupUsageSummaries. */
    var BackupUsageSummaries = /** @class */ (function () {
        /**
         * Create a BackupUsageSummaries.
         * @param {RecoveryServicesBackupClientContext} client Reference to the service client.
         */
        function BackupUsageSummaries(client) {
            this.client = client;
        }
        BackupUsageSummaries.prototype.list = function (vaultName$$1, resourceGroupName$$1, options, callback) {
            return this.client.sendOperationRequest({
                vaultName: vaultName$$1,
                resourceGroupName: resourceGroupName$$1,
                options: options
            }, listOperationSpec$4, callback);
        };
        return BackupUsageSummaries;
    }());
    // Operation Specifications
    var serializer$a = new msRest.Serializer(Mappers$a);
    var listOperationSpec$4 = {
        httpMethod: "GET",
        path: "Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupUsageSummaries",
        urlParameters: [
            vaultName,
            resourceGroupName,
            subscriptionId
        ],
        queryParameters: [
            apiVersion0,
            filter,
            skipToken
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            200: {
                bodyMapper: BackupManagementUsageList
            },
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer$a
    };

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */

    var Mappers$b = /*#__PURE__*/Object.freeze({
        discriminators: discriminators,
        ValidateOperationRequest: ValidateOperationRequest,
        ValidateOperationsResponse: ValidateOperationsResponse,
        ValidateOperationResponse: ValidateOperationResponse,
        ErrorDetail: ErrorDetail,
        CloudError: CloudError,
        ValidateRestoreOperationRequest: ValidateRestoreOperationRequest,
        RestoreRequest: RestoreRequest,
        AzureFileShareRestoreRequest: AzureFileShareRestoreRequest,
        RestoreFileSpecs: RestoreFileSpecs,
        TargetAFSRestoreInfo: TargetAFSRestoreInfo,
        AzureWorkloadRestoreRequest: AzureWorkloadRestoreRequest,
        AzureWorkloadSAPHanaRestoreRequest: AzureWorkloadSAPHanaRestoreRequest,
        TargetRestoreInfo: TargetRestoreInfo,
        AzureWorkloadSQLRestoreRequest: AzureWorkloadSQLRestoreRequest,
        SQLDataDirectoryMapping: SQLDataDirectoryMapping,
        IaasVMRestoreRequest: IaasVMRestoreRequest,
        EncryptionDetails: EncryptionDetails,
        ValidateIaasVMRestoreOperationRequest: ValidateIaasVMRestoreOperationRequest,
        AzureWorkloadSAPHanaPointInTimeRestoreRequest: AzureWorkloadSAPHanaPointInTimeRestoreRequest,
        AzureWorkloadSQLPointInTimeRestoreRequest: AzureWorkloadSQLPointInTimeRestoreRequest
    });

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    /** Class representing a Operation. */
    var Operation = /** @class */ (function () {
        /**
         * Create a Operation.
         * @param {RecoveryServicesBackupClientContext} client Reference to the service client.
         */
        function Operation(client) {
            this.client = client;
        }
        Operation.prototype.validate = function (vaultName$$1, resourceGroupName$$1, parameters, options, callback) {
            return this.client.sendOperationRequest({
                vaultName: vaultName$$1,
                resourceGroupName: resourceGroupName$$1,
                parameters: parameters,
                options: options
            }, validateOperationSpec$2, callback);
        };
        return Operation;
    }());
    // Operation Specifications
    var serializer$b = new msRest.Serializer(Mappers$b);
    var validateOperationSpec$2 = {
        httpMethod: "POST",
        path: "Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupValidateOperation",
        urlParameters: [
            vaultName,
            resourceGroupName,
            subscriptionId
        ],
        queryParameters: [
            apiVersion0
        ],
        headerParameters: [
            acceptLanguage
        ],
        requestBody: {
            parameterPath: "parameters",
            mapper: __assign({}, ValidateOperationRequest, { required: true })
        },
        responses: {
            200: {
                bodyMapper: ValidateOperationsResponse
            },
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer$b
    };

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */

    var Mappers$c = /*#__PURE__*/Object.freeze({
        discriminators: discriminators,
        BackupResourceVaultConfigResource: BackupResourceVaultConfigResource,
        Resource: Resource,
        BaseResource: BaseResource,
        BackupResourceVaultConfig: BackupResourceVaultConfig,
        CloudError: CloudError,
        JobResource: JobResource,
        Job: Job,
        MabJob: MabJob,
        MabErrorInfo: MabErrorInfo,
        MabJobExtendedInfo: MabJobExtendedInfo,
        MabJobTaskDetails: MabJobTaskDetails,
        ProtectedItemResource: ProtectedItemResource,
        ProtectedItem: ProtectedItem,
        ProtectionIntentResource: ProtectionIntentResource,
        ProtectionIntent: ProtectionIntent,
        ProtectionPolicyResource: ProtectionPolicyResource,
        ProtectionPolicy: ProtectionPolicy,
        BackupEngineBaseResource: BackupEngineBaseResource,
        BackupEngineBase: BackupEngineBase,
        BackupEngineExtendedInfo: BackupEngineExtendedInfo,
        BackupRequestResource: BackupRequestResource,
        BackupRequest: BackupRequest,
        BackupResourceConfigResource: BackupResourceConfigResource,
        BackupResourceConfig: BackupResourceConfig,
        DpmBackupEngine: DpmBackupEngine,
        IaasVMBackupRequest: IaasVMBackupRequest,
        ILRRequestResource: ILRRequestResource,
        ILRRequest: ILRRequest,
        ProtectableContainerResource: ProtectableContainerResource,
        ProtectableContainer: ProtectableContainer,
        ProtectionContainerResource: ProtectionContainerResource,
        ProtectionContainer: ProtectionContainer,
        RecoveryPointResource: RecoveryPointResource,
        RecoveryPoint: RecoveryPoint,
        RestoreRequestResource: RestoreRequestResource,
        RestoreRequest: RestoreRequest,
        WorkloadItemResource: WorkloadItemResource,
        WorkloadItem: WorkloadItem,
        WorkloadProtectableItemResource: WorkloadProtectableItemResource,
        WorkloadProtectableItem: WorkloadProtectableItem,
        AzureFileshareProtectedItem: AzureFileshareProtectedItem,
        AzureFileshareProtectedItemExtendedInfo: AzureFileshareProtectedItemExtendedInfo,
        AzureFileShareProtectionPolicy: AzureFileShareProtectionPolicy,
        SchedulePolicy: SchedulePolicy,
        RetentionPolicy: RetentionPolicy,
        AzureFileShareRestoreRequest: AzureFileShareRestoreRequest,
        RestoreFileSpecs: RestoreFileSpecs,
        TargetAFSRestoreInfo: TargetAFSRestoreInfo,
        AzureIaaSVMJob: AzureIaaSVMJob,
        AzureIaaSVMErrorInfo: AzureIaaSVMErrorInfo,
        AzureIaaSVMJobExtendedInfo: AzureIaaSVMJobExtendedInfo,
        AzureIaaSVMJobTaskDetails: AzureIaaSVMJobTaskDetails,
        AzureIaaSVMProtectedItem: AzureIaaSVMProtectedItem,
        AzureIaaSVMHealthDetails: AzureIaaSVMHealthDetails,
        AzureIaaSVMProtectedItemExtendedInfo: AzureIaaSVMProtectedItemExtendedInfo,
        AzureIaaSVMProtectionPolicy: AzureIaaSVMProtectionPolicy,
        AzureRecoveryServiceVaultProtectionIntent: AzureRecoveryServiceVaultProtectionIntent,
        AzureResourceProtectionIntent: AzureResourceProtectionIntent,
        AzureSqlProtectedItem: AzureSqlProtectedItem,
        AzureSqlProtectedItemExtendedInfo: AzureSqlProtectedItemExtendedInfo,
        AzureSqlProtectionPolicy: AzureSqlProtectionPolicy,
        AzureStorageJob: AzureStorageJob,
        AzureStorageErrorInfo: AzureStorageErrorInfo,
        AzureStorageJobExtendedInfo: AzureStorageJobExtendedInfo,
        AzureStorageJobTaskDetails: AzureStorageJobTaskDetails,
        AzureVmWorkloadProtectedItem: AzureVmWorkloadProtectedItem,
        ErrorDetail: ErrorDetail,
        AzureVmWorkloadProtectedItemExtendedInfo: AzureVmWorkloadProtectedItemExtendedInfo,
        AzureVmWorkloadProtectionPolicy: AzureVmWorkloadProtectionPolicy,
        Settings: Settings,
        SubProtectionPolicy: SubProtectionPolicy,
        AzureVmWorkloadSAPHanaDatabaseProtectedItem: AzureVmWorkloadSAPHanaDatabaseProtectedItem,
        AzureVmWorkloadSQLDatabaseProtectedItem: AzureVmWorkloadSQLDatabaseProtectedItem,
        AzureWorkloadAutoProtectionIntent: AzureWorkloadAutoProtectionIntent,
        AzureWorkloadJob: AzureWorkloadJob,
        AzureWorkloadErrorInfo: AzureWorkloadErrorInfo,
        AzureWorkloadJobExtendedInfo: AzureWorkloadJobExtendedInfo,
        AzureWorkloadJobTaskDetails: AzureWorkloadJobTaskDetails,
        AzureWorkloadRestoreRequest: AzureWorkloadRestoreRequest,
        AzureWorkloadSAPHanaRestoreRequest: AzureWorkloadSAPHanaRestoreRequest,
        TargetRestoreInfo: TargetRestoreInfo,
        AzureWorkloadSQLAutoProtectionIntent: AzureWorkloadSQLAutoProtectionIntent,
        AzureWorkloadSQLRestoreRequest: AzureWorkloadSQLRestoreRequest,
        SQLDataDirectoryMapping: SQLDataDirectoryMapping,
        DpmJob: DpmJob,
        DpmErrorInfo: DpmErrorInfo,
        DpmJobExtendedInfo: DpmJobExtendedInfo,
        DpmJobTaskDetails: DpmJobTaskDetails,
        DPMProtectedItem: DPMProtectedItem,
        DPMProtectedItemExtendedInfo: DPMProtectedItemExtendedInfo,
        GenericProtectedItem: GenericProtectedItem,
        GenericProtectionPolicy: GenericProtectionPolicy,
        IaasVMRestoreRequest: IaasVMRestoreRequest,
        EncryptionDetails: EncryptionDetails,
        LogSchedulePolicy: LogSchedulePolicy,
        LongTermRetentionPolicy: LongTermRetentionPolicy,
        DailyRetentionSchedule: DailyRetentionSchedule,
        RetentionDuration: RetentionDuration,
        WeeklyRetentionSchedule: WeeklyRetentionSchedule,
        MonthlyRetentionSchedule: MonthlyRetentionSchedule,
        DailyRetentionFormat: DailyRetentionFormat,
        Day: Day,
        WeeklyRetentionFormat: WeeklyRetentionFormat,
        YearlyRetentionSchedule: YearlyRetentionSchedule,
        LongTermSchedulePolicy: LongTermSchedulePolicy,
        MabFileFolderProtectedItem: MabFileFolderProtectedItem,
        MabFileFolderProtectedItemExtendedInfo: MabFileFolderProtectedItemExtendedInfo,
        MabProtectionPolicy: MabProtectionPolicy,
        SimpleRetentionPolicy: SimpleRetentionPolicy,
        SimpleSchedulePolicy: SimpleSchedulePolicy,
        AzureBackupServerContainer: AzureBackupServerContainer,
        DPMContainerExtendedInfo: DPMContainerExtendedInfo,
        AzureBackupServerEngine: AzureBackupServerEngine,
        AzureFileShareBackupRequest: AzureFileShareBackupRequest,
        AzureFileShareProtectableItem: AzureFileShareProtectableItem,
        AzureFileShareRecoveryPoint: AzureFileShareRecoveryPoint,
        AzureSqlContainer: AzureSqlContainer,
        AzureStorageContainer: AzureStorageContainer,
        AzureStorageProtectableContainer: AzureStorageProtectableContainer,
        AzureVMAppContainerProtectableContainer: AzureVMAppContainerProtectableContainer,
        AzureVmWorkloadItem: AzureVmWorkloadItem,
        AzureVmWorkloadProtectableItem: AzureVmWorkloadProtectableItem,
        PreBackupValidation: PreBackupValidation,
        AzureVmWorkloadSAPHanaDatabaseProtectableItem: AzureVmWorkloadSAPHanaDatabaseProtectableItem,
        AzureVmWorkloadSAPHanaDatabaseWorkloadItem: AzureVmWorkloadSAPHanaDatabaseWorkloadItem,
        AzureVmWorkloadSAPHanaSystemProtectableItem: AzureVmWorkloadSAPHanaSystemProtectableItem,
        AzureVmWorkloadSAPHanaSystemWorkloadItem: AzureVmWorkloadSAPHanaSystemWorkloadItem,
        AzureVmWorkloadSQLAvailabilityGroupProtectableItem: AzureVmWorkloadSQLAvailabilityGroupProtectableItem,
        AzureVmWorkloadSQLDatabaseProtectableItem: AzureVmWorkloadSQLDatabaseProtectableItem,
        AzureVmWorkloadSQLDatabaseWorkloadItem: AzureVmWorkloadSQLDatabaseWorkloadItem,
        AzureVmWorkloadSQLInstanceProtectableItem: AzureVmWorkloadSQLInstanceProtectableItem,
        AzureVmWorkloadSQLInstanceWorkloadItem: AzureVmWorkloadSQLInstanceWorkloadItem,
        SQLDataDirectory: SQLDataDirectory,
        AzureWorkloadBackupRequest: AzureWorkloadBackupRequest,
        AzureWorkloadContainer: AzureWorkloadContainer,
        AzureWorkloadContainerExtendedInfo: AzureWorkloadContainerExtendedInfo,
        InquiryInfo: InquiryInfo,
        WorkloadInquiryDetails: WorkloadInquiryDetails,
        InquiryValidation: InquiryValidation,
        DistributedNodesInfo: DistributedNodesInfo,
        AzureWorkloadRecoveryPoint: AzureWorkloadRecoveryPoint,
        AzureWorkloadSAPHanaRecoveryPoint: AzureWorkloadSAPHanaRecoveryPoint,
        AzureWorkloadSQLRecoveryPoint: AzureWorkloadSQLRecoveryPoint,
        AzureWorkloadSQLRecoveryPointExtendedInfo: AzureWorkloadSQLRecoveryPointExtendedInfo,
        DpmContainer: DpmContainer,
        GenericContainer: GenericContainer,
        GenericContainerExtendedInfo: GenericContainerExtendedInfo,
        ContainerIdentityInfo: ContainerIdentityInfo,
        GenericRecoveryPoint: GenericRecoveryPoint,
        IaaSVMContainer: IaaSVMContainer,
        IaasVMILRRegistrationRequest: IaasVMILRRegistrationRequest,
        IaaSVMProtectableItem: IaaSVMProtectableItem,
        IaasVMRecoveryPoint: IaasVMRecoveryPoint,
        KeyAndSecretDetails: KeyAndSecretDetails,
        KEKDetails: KEKDetails,
        BEKDetails: BEKDetails,
        RecoveryPointTierInformation: RecoveryPointTierInformation,
        MabContainer: MabContainer,
        MabContainerExtendedInfo: MabContainerExtendedInfo,
        MABContainerHealthDetails: MABContainerHealthDetails,
        AzureIaaSClassicComputeVMProtectedItem: AzureIaaSClassicComputeVMProtectedItem,
        AzureIaaSComputeVMProtectedItem: AzureIaaSComputeVMProtectedItem,
        AzureWorkloadSAPHanaPointInTimeRestoreRequest: AzureWorkloadSAPHanaPointInTimeRestoreRequest,
        AzureWorkloadSQLPointInTimeRestoreRequest: AzureWorkloadSQLPointInTimeRestoreRequest,
        AzureIaaSClassicComputeVMContainer: AzureIaaSClassicComputeVMContainer,
        AzureIaaSClassicComputeVMProtectableItem: AzureIaaSClassicComputeVMProtectableItem,
        AzureIaaSComputeVMContainer: AzureIaaSComputeVMContainer,
        AzureIaaSComputeVMProtectableItem: AzureIaaSComputeVMProtectableItem,
        AzureSQLAGWorkloadContainerProtectionContainer: AzureSQLAGWorkloadContainerProtectionContainer,
        AzureVMAppContainerProtectionContainer: AzureVMAppContainerProtectionContainer,
        AzureWorkloadSAPHanaPointInTimeRecoveryPoint: AzureWorkloadSAPHanaPointInTimeRecoveryPoint,
        PointInTimeRange: PointInTimeRange,
        AzureWorkloadSQLPointInTimeRecoveryPoint: AzureWorkloadSQLPointInTimeRecoveryPoint
    });

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    /** Class representing a BackupResourceVaultConfigs. */
    var BackupResourceVaultConfigs = /** @class */ (function () {
        /**
         * Create a BackupResourceVaultConfigs.
         * @param {RecoveryServicesBackupClientContext} client Reference to the service client.
         */
        function BackupResourceVaultConfigs(client) {
            this.client = client;
        }
        BackupResourceVaultConfigs.prototype.get = function (vaultName$$1, resourceGroupName$$1, options, callback) {
            return this.client.sendOperationRequest({
                vaultName: vaultName$$1,
                resourceGroupName: resourceGroupName$$1,
                options: options
            }, getOperationSpec$4, callback);
        };
        BackupResourceVaultConfigs.prototype.update = function (vaultName$$1, resourceGroupName$$1, parameters, options, callback) {
            return this.client.sendOperationRequest({
                vaultName: vaultName$$1,
                resourceGroupName: resourceGroupName$$1,
                parameters: parameters,
                options: options
            }, updateOperationSpec, callback);
        };
        return BackupResourceVaultConfigs;
    }());
    // Operation Specifications
    var serializer$c = new msRest.Serializer(Mappers$c);
    var getOperationSpec$4 = {
        httpMethod: "GET",
        path: "Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupconfig/vaultconfig",
        urlParameters: [
            vaultName,
            resourceGroupName,
            subscriptionId
        ],
        queryParameters: [
            apiVersion1
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            200: {
                bodyMapper: BackupResourceVaultConfigResource
            },
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer$c
    };
    var updateOperationSpec = {
        httpMethod: "PATCH",
        path: "Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupconfig/vaultconfig",
        urlParameters: [
            vaultName,
            resourceGroupName,
            subscriptionId
        ],
        queryParameters: [
            apiVersion1
        ],
        headerParameters: [
            acceptLanguage
        ],
        requestBody: {
            parameterPath: "parameters",
            mapper: __assign({}, BackupResourceVaultConfigResource, { required: true })
        },
        responses: {
            200: {
                bodyMapper: BackupResourceVaultConfigResource
            },
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer$c
    };

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */

    var Mappers$d = /*#__PURE__*/Object.freeze({
        discriminators: discriminators,
        BackupEngineBaseResourceList: BackupEngineBaseResourceList,
        ResourceList: ResourceList,
        BackupEngineBaseResource: BackupEngineBaseResource,
        Resource: Resource,
        BaseResource: BaseResource,
        BackupEngineBase: BackupEngineBase,
        BackupEngineExtendedInfo: BackupEngineExtendedInfo,
        CloudError: CloudError,
        JobResource: JobResource,
        Job: Job,
        JobResourceList: JobResourceList,
        MabJob: MabJob,
        MabErrorInfo: MabErrorInfo,
        MabJobExtendedInfo: MabJobExtendedInfo,
        MabJobTaskDetails: MabJobTaskDetails,
        ProtectedItemResource: ProtectedItemResource,
        ProtectedItem: ProtectedItem,
        ProtectedItemResourceList: ProtectedItemResourceList,
        ProtectionIntentResource: ProtectionIntentResource,
        ProtectionIntent: ProtectionIntent,
        ProtectionIntentResourceList: ProtectionIntentResourceList,
        ProtectionPolicyResource: ProtectionPolicyResource,
        ProtectionPolicy: ProtectionPolicy,
        ProtectionPolicyResourceList: ProtectionPolicyResourceList,
        AzureBackupServerEngine: AzureBackupServerEngine,
        BackupRequestResource: BackupRequestResource,
        BackupRequest: BackupRequest,
        BackupResourceConfigResource: BackupResourceConfigResource,
        BackupResourceConfig: BackupResourceConfig,
        BackupResourceVaultConfigResource: BackupResourceVaultConfigResource,
        BackupResourceVaultConfig: BackupResourceVaultConfig,
        DpmBackupEngine: DpmBackupEngine,
        IaasVMBackupRequest: IaasVMBackupRequest,
        ILRRequestResource: ILRRequestResource,
        ILRRequest: ILRRequest,
        ProtectableContainerResource: ProtectableContainerResource,
        ProtectableContainer: ProtectableContainer,
        ProtectableContainerResourceList: ProtectableContainerResourceList,
        ProtectionContainerResource: ProtectionContainerResource,
        ProtectionContainer: ProtectionContainer,
        ProtectionContainerResourceList: ProtectionContainerResourceList,
        RecoveryPointResource: RecoveryPointResource,
        RecoveryPoint: RecoveryPoint,
        RecoveryPointResourceList: RecoveryPointResourceList,
        RestoreRequestResource: RestoreRequestResource,
        RestoreRequest: RestoreRequest,
        WorkloadItemResource: WorkloadItemResource,
        WorkloadItem: WorkloadItem,
        WorkloadItemResourceList: WorkloadItemResourceList,
        WorkloadProtectableItemResource: WorkloadProtectableItemResource,
        WorkloadProtectableItem: WorkloadProtectableItem,
        WorkloadProtectableItemResourceList: WorkloadProtectableItemResourceList,
        AzureFileshareProtectedItem: AzureFileshareProtectedItem,
        AzureFileshareProtectedItemExtendedInfo: AzureFileshareProtectedItemExtendedInfo,
        AzureFileShareProtectionPolicy: AzureFileShareProtectionPolicy,
        SchedulePolicy: SchedulePolicy,
        RetentionPolicy: RetentionPolicy,
        AzureFileShareRestoreRequest: AzureFileShareRestoreRequest,
        RestoreFileSpecs: RestoreFileSpecs,
        TargetAFSRestoreInfo: TargetAFSRestoreInfo,
        AzureIaaSVMJob: AzureIaaSVMJob,
        AzureIaaSVMErrorInfo: AzureIaaSVMErrorInfo,
        AzureIaaSVMJobExtendedInfo: AzureIaaSVMJobExtendedInfo,
        AzureIaaSVMJobTaskDetails: AzureIaaSVMJobTaskDetails,
        AzureIaaSVMProtectedItem: AzureIaaSVMProtectedItem,
        AzureIaaSVMHealthDetails: AzureIaaSVMHealthDetails,
        AzureIaaSVMProtectedItemExtendedInfo: AzureIaaSVMProtectedItemExtendedInfo,
        AzureIaaSVMProtectionPolicy: AzureIaaSVMProtectionPolicy,
        AzureRecoveryServiceVaultProtectionIntent: AzureRecoveryServiceVaultProtectionIntent,
        AzureResourceProtectionIntent: AzureResourceProtectionIntent,
        AzureSqlProtectedItem: AzureSqlProtectedItem,
        AzureSqlProtectedItemExtendedInfo: AzureSqlProtectedItemExtendedInfo,
        AzureSqlProtectionPolicy: AzureSqlProtectionPolicy,
        AzureStorageJob: AzureStorageJob,
        AzureStorageErrorInfo: AzureStorageErrorInfo,
        AzureStorageJobExtendedInfo: AzureStorageJobExtendedInfo,
        AzureStorageJobTaskDetails: AzureStorageJobTaskDetails,
        AzureVmWorkloadProtectedItem: AzureVmWorkloadProtectedItem,
        ErrorDetail: ErrorDetail,
        AzureVmWorkloadProtectedItemExtendedInfo: AzureVmWorkloadProtectedItemExtendedInfo,
        AzureVmWorkloadProtectionPolicy: AzureVmWorkloadProtectionPolicy,
        Settings: Settings,
        SubProtectionPolicy: SubProtectionPolicy,
        AzureVmWorkloadSAPHanaDatabaseProtectedItem: AzureVmWorkloadSAPHanaDatabaseProtectedItem,
        AzureVmWorkloadSQLDatabaseProtectedItem: AzureVmWorkloadSQLDatabaseProtectedItem,
        AzureWorkloadAutoProtectionIntent: AzureWorkloadAutoProtectionIntent,
        AzureWorkloadJob: AzureWorkloadJob,
        AzureWorkloadErrorInfo: AzureWorkloadErrorInfo,
        AzureWorkloadJobExtendedInfo: AzureWorkloadJobExtendedInfo,
        AzureWorkloadJobTaskDetails: AzureWorkloadJobTaskDetails,
        AzureWorkloadRestoreRequest: AzureWorkloadRestoreRequest,
        AzureWorkloadSAPHanaRestoreRequest: AzureWorkloadSAPHanaRestoreRequest,
        TargetRestoreInfo: TargetRestoreInfo,
        AzureWorkloadSQLAutoProtectionIntent: AzureWorkloadSQLAutoProtectionIntent,
        AzureWorkloadSQLRestoreRequest: AzureWorkloadSQLRestoreRequest,
        SQLDataDirectoryMapping: SQLDataDirectoryMapping,
        DpmJob: DpmJob,
        DpmErrorInfo: DpmErrorInfo,
        DpmJobExtendedInfo: DpmJobExtendedInfo,
        DpmJobTaskDetails: DpmJobTaskDetails,
        DPMProtectedItem: DPMProtectedItem,
        DPMProtectedItemExtendedInfo: DPMProtectedItemExtendedInfo,
        GenericProtectedItem: GenericProtectedItem,
        GenericProtectionPolicy: GenericProtectionPolicy,
        IaasVMRestoreRequest: IaasVMRestoreRequest,
        EncryptionDetails: EncryptionDetails,
        LogSchedulePolicy: LogSchedulePolicy,
        LongTermRetentionPolicy: LongTermRetentionPolicy,
        DailyRetentionSchedule: DailyRetentionSchedule,
        RetentionDuration: RetentionDuration,
        WeeklyRetentionSchedule: WeeklyRetentionSchedule,
        MonthlyRetentionSchedule: MonthlyRetentionSchedule,
        DailyRetentionFormat: DailyRetentionFormat,
        Day: Day,
        WeeklyRetentionFormat: WeeklyRetentionFormat,
        YearlyRetentionSchedule: YearlyRetentionSchedule,
        LongTermSchedulePolicy: LongTermSchedulePolicy,
        MabFileFolderProtectedItem: MabFileFolderProtectedItem,
        MabFileFolderProtectedItemExtendedInfo: MabFileFolderProtectedItemExtendedInfo,
        MabProtectionPolicy: MabProtectionPolicy,
        SimpleRetentionPolicy: SimpleRetentionPolicy,
        SimpleSchedulePolicy: SimpleSchedulePolicy,
        AzureBackupServerContainer: AzureBackupServerContainer,
        DPMContainerExtendedInfo: DPMContainerExtendedInfo,
        AzureFileShareBackupRequest: AzureFileShareBackupRequest,
        AzureFileShareProtectableItem: AzureFileShareProtectableItem,
        AzureFileShareRecoveryPoint: AzureFileShareRecoveryPoint,
        AzureSqlContainer: AzureSqlContainer,
        AzureStorageContainer: AzureStorageContainer,
        AzureStorageProtectableContainer: AzureStorageProtectableContainer,
        AzureVMAppContainerProtectableContainer: AzureVMAppContainerProtectableContainer,
        AzureVmWorkloadItem: AzureVmWorkloadItem,
        AzureVmWorkloadProtectableItem: AzureVmWorkloadProtectableItem,
        PreBackupValidation: PreBackupValidation,
        AzureVmWorkloadSAPHanaDatabaseProtectableItem: AzureVmWorkloadSAPHanaDatabaseProtectableItem,
        AzureVmWorkloadSAPHanaDatabaseWorkloadItem: AzureVmWorkloadSAPHanaDatabaseWorkloadItem,
        AzureVmWorkloadSAPHanaSystemProtectableItem: AzureVmWorkloadSAPHanaSystemProtectableItem,
        AzureVmWorkloadSAPHanaSystemWorkloadItem: AzureVmWorkloadSAPHanaSystemWorkloadItem,
        AzureVmWorkloadSQLAvailabilityGroupProtectableItem: AzureVmWorkloadSQLAvailabilityGroupProtectableItem,
        AzureVmWorkloadSQLDatabaseProtectableItem: AzureVmWorkloadSQLDatabaseProtectableItem,
        AzureVmWorkloadSQLDatabaseWorkloadItem: AzureVmWorkloadSQLDatabaseWorkloadItem,
        AzureVmWorkloadSQLInstanceProtectableItem: AzureVmWorkloadSQLInstanceProtectableItem,
        AzureVmWorkloadSQLInstanceWorkloadItem: AzureVmWorkloadSQLInstanceWorkloadItem,
        SQLDataDirectory: SQLDataDirectory,
        AzureWorkloadBackupRequest: AzureWorkloadBackupRequest,
        AzureWorkloadContainer: AzureWorkloadContainer,
        AzureWorkloadContainerExtendedInfo: AzureWorkloadContainerExtendedInfo,
        InquiryInfo: InquiryInfo,
        WorkloadInquiryDetails: WorkloadInquiryDetails,
        InquiryValidation: InquiryValidation,
        DistributedNodesInfo: DistributedNodesInfo,
        AzureWorkloadRecoveryPoint: AzureWorkloadRecoveryPoint,
        AzureWorkloadSAPHanaRecoveryPoint: AzureWorkloadSAPHanaRecoveryPoint,
        AzureWorkloadSQLRecoveryPoint: AzureWorkloadSQLRecoveryPoint,
        AzureWorkloadSQLRecoveryPointExtendedInfo: AzureWorkloadSQLRecoveryPointExtendedInfo,
        DpmContainer: DpmContainer,
        GenericContainer: GenericContainer,
        GenericContainerExtendedInfo: GenericContainerExtendedInfo,
        ContainerIdentityInfo: ContainerIdentityInfo,
        GenericRecoveryPoint: GenericRecoveryPoint,
        IaaSVMContainer: IaaSVMContainer,
        IaasVMILRRegistrationRequest: IaasVMILRRegistrationRequest,
        IaaSVMProtectableItem: IaaSVMProtectableItem,
        IaasVMRecoveryPoint: IaasVMRecoveryPoint,
        KeyAndSecretDetails: KeyAndSecretDetails,
        KEKDetails: KEKDetails,
        BEKDetails: BEKDetails,
        RecoveryPointTierInformation: RecoveryPointTierInformation,
        MabContainer: MabContainer,
        MabContainerExtendedInfo: MabContainerExtendedInfo,
        MABContainerHealthDetails: MABContainerHealthDetails,
        AzureIaaSClassicComputeVMProtectedItem: AzureIaaSClassicComputeVMProtectedItem,
        AzureIaaSComputeVMProtectedItem: AzureIaaSComputeVMProtectedItem,
        AzureWorkloadSAPHanaPointInTimeRestoreRequest: AzureWorkloadSAPHanaPointInTimeRestoreRequest,
        AzureWorkloadSQLPointInTimeRestoreRequest: AzureWorkloadSQLPointInTimeRestoreRequest,
        AzureIaaSClassicComputeVMContainer: AzureIaaSClassicComputeVMContainer,
        AzureIaaSClassicComputeVMProtectableItem: AzureIaaSClassicComputeVMProtectableItem,
        AzureIaaSComputeVMContainer: AzureIaaSComputeVMContainer,
        AzureIaaSComputeVMProtectableItem: AzureIaaSComputeVMProtectableItem,
        AzureSQLAGWorkloadContainerProtectionContainer: AzureSQLAGWorkloadContainerProtectionContainer,
        AzureVMAppContainerProtectionContainer: AzureVMAppContainerProtectionContainer,
        AzureWorkloadSAPHanaPointInTimeRecoveryPoint: AzureWorkloadSAPHanaPointInTimeRecoveryPoint,
        PointInTimeRange: PointInTimeRange,
        AzureWorkloadSQLPointInTimeRecoveryPoint: AzureWorkloadSQLPointInTimeRecoveryPoint
    });

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    /** Class representing a BackupEngines. */
    var BackupEngines = /** @class */ (function () {
        /**
         * Create a BackupEngines.
         * @param {RecoveryServicesBackupClientContext} client Reference to the service client.
         */
        function BackupEngines(client) {
            this.client = client;
        }
        BackupEngines.prototype.list = function (vaultName$$1, resourceGroupName$$1, options, callback) {
            return this.client.sendOperationRequest({
                vaultName: vaultName$$1,
                resourceGroupName: resourceGroupName$$1,
                options: options
            }, listOperationSpec$5, callback);
        };
        BackupEngines.prototype.get = function (vaultName$$1, resourceGroupName$$1, backupEngineName$$1, options, callback) {
            return this.client.sendOperationRequest({
                vaultName: vaultName$$1,
                resourceGroupName: resourceGroupName$$1,
                backupEngineName: backupEngineName$$1,
                options: options
            }, getOperationSpec$5, callback);
        };
        BackupEngines.prototype.listNext = function (nextPageLink$$1, options, callback) {
            return this.client.sendOperationRequest({
                nextPageLink: nextPageLink$$1,
                options: options
            }, listNextOperationSpec$4, callback);
        };
        return BackupEngines;
    }());
    // Operation Specifications
    var serializer$d = new msRest.Serializer(Mappers$d);
    var listOperationSpec$5 = {
        httpMethod: "GET",
        path: "Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupEngines",
        urlParameters: [
            vaultName,
            resourceGroupName,
            subscriptionId
        ],
        queryParameters: [
            apiVersion1,
            filter,
            skipToken
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            200: {
                bodyMapper: BackupEngineBaseResourceList
            },
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer$d
    };
    var getOperationSpec$5 = {
        httpMethod: "GET",
        path: "Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupEngines/{backupEngineName}",
        urlParameters: [
            vaultName,
            resourceGroupName,
            subscriptionId,
            backupEngineName
        ],
        queryParameters: [
            apiVersion1,
            filter,
            skipToken
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            200: {
                bodyMapper: BackupEngineBaseResource
            },
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer$d
    };
    var listNextOperationSpec$4 = {
        httpMethod: "GET",
        baseUrl: "https://management.azure.com",
        path: "{nextLink}",
        urlParameters: [
            nextPageLink
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            200: {
                bodyMapper: BackupEngineBaseResourceList
            },
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer$d
    };

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */

    var Mappers$e = /*#__PURE__*/Object.freeze({
        discriminators: discriminators,
        CloudError: CloudError
    });

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    /** Class representing a ProtectionContainerRefreshOperationResults. */
    var ProtectionContainerRefreshOperationResults = /** @class */ (function () {
        /**
         * Create a ProtectionContainerRefreshOperationResults.
         * @param {RecoveryServicesBackupClientContext} client Reference to the service client.
         */
        function ProtectionContainerRefreshOperationResults(client) {
            this.client = client;
        }
        ProtectionContainerRefreshOperationResults.prototype.get = function (vaultName$$1, resourceGroupName$$1, fabricName$$1, operationId$$1, options, callback) {
            return this.client.sendOperationRequest({
                vaultName: vaultName$$1,
                resourceGroupName: resourceGroupName$$1,
                fabricName: fabricName$$1,
                operationId: operationId$$1,
                options: options
            }, getOperationSpec$6, callback);
        };
        return ProtectionContainerRefreshOperationResults;
    }());
    // Operation Specifications
    var serializer$e = new msRest.Serializer(Mappers$e);
    var getOperationSpec$6 = {
        httpMethod: "GET",
        path: "Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/operationResults/{operationId}",
        urlParameters: [
            vaultName,
            resourceGroupName,
            subscriptionId,
            fabricName,
            operationId
        ],
        queryParameters: [
            apiVersion1
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            202: {},
            204: {},
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer$e
    };

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */

    var Mappers$f = /*#__PURE__*/Object.freeze({
        discriminators: discriminators,
        ProtectableContainerResourceList: ProtectableContainerResourceList,
        ResourceList: ResourceList,
        ProtectableContainerResource: ProtectableContainerResource,
        Resource: Resource,
        BaseResource: BaseResource,
        ProtectableContainer: ProtectableContainer,
        CloudError: CloudError,
        JobResource: JobResource,
        Job: Job,
        JobResourceList: JobResourceList,
        MabJob: MabJob,
        MabErrorInfo: MabErrorInfo,
        MabJobExtendedInfo: MabJobExtendedInfo,
        MabJobTaskDetails: MabJobTaskDetails,
        ProtectedItemResource: ProtectedItemResource,
        ProtectedItem: ProtectedItem,
        ProtectedItemResourceList: ProtectedItemResourceList,
        ProtectionIntentResource: ProtectionIntentResource,
        ProtectionIntent: ProtectionIntent,
        ProtectionIntentResourceList: ProtectionIntentResourceList,
        ProtectionPolicyResource: ProtectionPolicyResource,
        ProtectionPolicy: ProtectionPolicy,
        ProtectionPolicyResourceList: ProtectionPolicyResourceList,
        AzureStorageProtectableContainer: AzureStorageProtectableContainer,
        AzureVMAppContainerProtectableContainer: AzureVMAppContainerProtectableContainer,
        BackupEngineBaseResource: BackupEngineBaseResource,
        BackupEngineBase: BackupEngineBase,
        BackupEngineExtendedInfo: BackupEngineExtendedInfo,
        BackupEngineBaseResourceList: BackupEngineBaseResourceList,
        BackupRequestResource: BackupRequestResource,
        BackupRequest: BackupRequest,
        BackupResourceConfigResource: BackupResourceConfigResource,
        BackupResourceConfig: BackupResourceConfig,
        BackupResourceVaultConfigResource: BackupResourceVaultConfigResource,
        BackupResourceVaultConfig: BackupResourceVaultConfig,
        DpmBackupEngine: DpmBackupEngine,
        IaasVMBackupRequest: IaasVMBackupRequest,
        ILRRequestResource: ILRRequestResource,
        ILRRequest: ILRRequest,
        ProtectionContainerResource: ProtectionContainerResource,
        ProtectionContainer: ProtectionContainer,
        ProtectionContainerResourceList: ProtectionContainerResourceList,
        RecoveryPointResource: RecoveryPointResource,
        RecoveryPoint: RecoveryPoint,
        RecoveryPointResourceList: RecoveryPointResourceList,
        RestoreRequestResource: RestoreRequestResource,
        RestoreRequest: RestoreRequest,
        WorkloadItemResource: WorkloadItemResource,
        WorkloadItem: WorkloadItem,
        WorkloadItemResourceList: WorkloadItemResourceList,
        WorkloadProtectableItemResource: WorkloadProtectableItemResource,
        WorkloadProtectableItem: WorkloadProtectableItem,
        WorkloadProtectableItemResourceList: WorkloadProtectableItemResourceList,
        AzureFileshareProtectedItem: AzureFileshareProtectedItem,
        AzureFileshareProtectedItemExtendedInfo: AzureFileshareProtectedItemExtendedInfo,
        AzureFileShareProtectionPolicy: AzureFileShareProtectionPolicy,
        SchedulePolicy: SchedulePolicy,
        RetentionPolicy: RetentionPolicy,
        AzureFileShareRestoreRequest: AzureFileShareRestoreRequest,
        RestoreFileSpecs: RestoreFileSpecs,
        TargetAFSRestoreInfo: TargetAFSRestoreInfo,
        AzureIaaSVMJob: AzureIaaSVMJob,
        AzureIaaSVMErrorInfo: AzureIaaSVMErrorInfo,
        AzureIaaSVMJobExtendedInfo: AzureIaaSVMJobExtendedInfo,
        AzureIaaSVMJobTaskDetails: AzureIaaSVMJobTaskDetails,
        AzureIaaSVMProtectedItem: AzureIaaSVMProtectedItem,
        AzureIaaSVMHealthDetails: AzureIaaSVMHealthDetails,
        AzureIaaSVMProtectedItemExtendedInfo: AzureIaaSVMProtectedItemExtendedInfo,
        AzureIaaSVMProtectionPolicy: AzureIaaSVMProtectionPolicy,
        AzureRecoveryServiceVaultProtectionIntent: AzureRecoveryServiceVaultProtectionIntent,
        AzureResourceProtectionIntent: AzureResourceProtectionIntent,
        AzureSqlProtectedItem: AzureSqlProtectedItem,
        AzureSqlProtectedItemExtendedInfo: AzureSqlProtectedItemExtendedInfo,
        AzureSqlProtectionPolicy: AzureSqlProtectionPolicy,
        AzureStorageJob: AzureStorageJob,
        AzureStorageErrorInfo: AzureStorageErrorInfo,
        AzureStorageJobExtendedInfo: AzureStorageJobExtendedInfo,
        AzureStorageJobTaskDetails: AzureStorageJobTaskDetails,
        AzureVmWorkloadProtectedItem: AzureVmWorkloadProtectedItem,
        ErrorDetail: ErrorDetail,
        AzureVmWorkloadProtectedItemExtendedInfo: AzureVmWorkloadProtectedItemExtendedInfo,
        AzureVmWorkloadProtectionPolicy: AzureVmWorkloadProtectionPolicy,
        Settings: Settings,
        SubProtectionPolicy: SubProtectionPolicy,
        AzureVmWorkloadSAPHanaDatabaseProtectedItem: AzureVmWorkloadSAPHanaDatabaseProtectedItem,
        AzureVmWorkloadSQLDatabaseProtectedItem: AzureVmWorkloadSQLDatabaseProtectedItem,
        AzureWorkloadAutoProtectionIntent: AzureWorkloadAutoProtectionIntent,
        AzureWorkloadJob: AzureWorkloadJob,
        AzureWorkloadErrorInfo: AzureWorkloadErrorInfo,
        AzureWorkloadJobExtendedInfo: AzureWorkloadJobExtendedInfo,
        AzureWorkloadJobTaskDetails: AzureWorkloadJobTaskDetails,
        AzureWorkloadRestoreRequest: AzureWorkloadRestoreRequest,
        AzureWorkloadSAPHanaRestoreRequest: AzureWorkloadSAPHanaRestoreRequest,
        TargetRestoreInfo: TargetRestoreInfo,
        AzureWorkloadSQLAutoProtectionIntent: AzureWorkloadSQLAutoProtectionIntent,
        AzureWorkloadSQLRestoreRequest: AzureWorkloadSQLRestoreRequest,
        SQLDataDirectoryMapping: SQLDataDirectoryMapping,
        DpmJob: DpmJob,
        DpmErrorInfo: DpmErrorInfo,
        DpmJobExtendedInfo: DpmJobExtendedInfo,
        DpmJobTaskDetails: DpmJobTaskDetails,
        DPMProtectedItem: DPMProtectedItem,
        DPMProtectedItemExtendedInfo: DPMProtectedItemExtendedInfo,
        GenericProtectedItem: GenericProtectedItem,
        GenericProtectionPolicy: GenericProtectionPolicy,
        IaasVMRestoreRequest: IaasVMRestoreRequest,
        EncryptionDetails: EncryptionDetails,
        LogSchedulePolicy: LogSchedulePolicy,
        LongTermRetentionPolicy: LongTermRetentionPolicy,
        DailyRetentionSchedule: DailyRetentionSchedule,
        RetentionDuration: RetentionDuration,
        WeeklyRetentionSchedule: WeeklyRetentionSchedule,
        MonthlyRetentionSchedule: MonthlyRetentionSchedule,
        DailyRetentionFormat: DailyRetentionFormat,
        Day: Day,
        WeeklyRetentionFormat: WeeklyRetentionFormat,
        YearlyRetentionSchedule: YearlyRetentionSchedule,
        LongTermSchedulePolicy: LongTermSchedulePolicy,
        MabFileFolderProtectedItem: MabFileFolderProtectedItem,
        MabFileFolderProtectedItemExtendedInfo: MabFileFolderProtectedItemExtendedInfo,
        MabProtectionPolicy: MabProtectionPolicy,
        SimpleRetentionPolicy: SimpleRetentionPolicy,
        SimpleSchedulePolicy: SimpleSchedulePolicy,
        AzureBackupServerContainer: AzureBackupServerContainer,
        DPMContainerExtendedInfo: DPMContainerExtendedInfo,
        AzureBackupServerEngine: AzureBackupServerEngine,
        AzureFileShareBackupRequest: AzureFileShareBackupRequest,
        AzureFileShareProtectableItem: AzureFileShareProtectableItem,
        AzureFileShareRecoveryPoint: AzureFileShareRecoveryPoint,
        AzureSqlContainer: AzureSqlContainer,
        AzureStorageContainer: AzureStorageContainer,
        AzureVmWorkloadItem: AzureVmWorkloadItem,
        AzureVmWorkloadProtectableItem: AzureVmWorkloadProtectableItem,
        PreBackupValidation: PreBackupValidation,
        AzureVmWorkloadSAPHanaDatabaseProtectableItem: AzureVmWorkloadSAPHanaDatabaseProtectableItem,
        AzureVmWorkloadSAPHanaDatabaseWorkloadItem: AzureVmWorkloadSAPHanaDatabaseWorkloadItem,
        AzureVmWorkloadSAPHanaSystemProtectableItem: AzureVmWorkloadSAPHanaSystemProtectableItem,
        AzureVmWorkloadSAPHanaSystemWorkloadItem: AzureVmWorkloadSAPHanaSystemWorkloadItem,
        AzureVmWorkloadSQLAvailabilityGroupProtectableItem: AzureVmWorkloadSQLAvailabilityGroupProtectableItem,
        AzureVmWorkloadSQLDatabaseProtectableItem: AzureVmWorkloadSQLDatabaseProtectableItem,
        AzureVmWorkloadSQLDatabaseWorkloadItem: AzureVmWorkloadSQLDatabaseWorkloadItem,
        AzureVmWorkloadSQLInstanceProtectableItem: AzureVmWorkloadSQLInstanceProtectableItem,
        AzureVmWorkloadSQLInstanceWorkloadItem: AzureVmWorkloadSQLInstanceWorkloadItem,
        SQLDataDirectory: SQLDataDirectory,
        AzureWorkloadBackupRequest: AzureWorkloadBackupRequest,
        AzureWorkloadContainer: AzureWorkloadContainer,
        AzureWorkloadContainerExtendedInfo: AzureWorkloadContainerExtendedInfo,
        InquiryInfo: InquiryInfo,
        WorkloadInquiryDetails: WorkloadInquiryDetails,
        InquiryValidation: InquiryValidation,
        DistributedNodesInfo: DistributedNodesInfo,
        AzureWorkloadRecoveryPoint: AzureWorkloadRecoveryPoint,
        AzureWorkloadSAPHanaRecoveryPoint: AzureWorkloadSAPHanaRecoveryPoint,
        AzureWorkloadSQLRecoveryPoint: AzureWorkloadSQLRecoveryPoint,
        AzureWorkloadSQLRecoveryPointExtendedInfo: AzureWorkloadSQLRecoveryPointExtendedInfo,
        DpmContainer: DpmContainer,
        GenericContainer: GenericContainer,
        GenericContainerExtendedInfo: GenericContainerExtendedInfo,
        ContainerIdentityInfo: ContainerIdentityInfo,
        GenericRecoveryPoint: GenericRecoveryPoint,
        IaaSVMContainer: IaaSVMContainer,
        IaasVMILRRegistrationRequest: IaasVMILRRegistrationRequest,
        IaaSVMProtectableItem: IaaSVMProtectableItem,
        IaasVMRecoveryPoint: IaasVMRecoveryPoint,
        KeyAndSecretDetails: KeyAndSecretDetails,
        KEKDetails: KEKDetails,
        BEKDetails: BEKDetails,
        RecoveryPointTierInformation: RecoveryPointTierInformation,
        MabContainer: MabContainer,
        MabContainerExtendedInfo: MabContainerExtendedInfo,
        MABContainerHealthDetails: MABContainerHealthDetails,
        AzureIaaSClassicComputeVMProtectedItem: AzureIaaSClassicComputeVMProtectedItem,
        AzureIaaSComputeVMProtectedItem: AzureIaaSComputeVMProtectedItem,
        AzureWorkloadSAPHanaPointInTimeRestoreRequest: AzureWorkloadSAPHanaPointInTimeRestoreRequest,
        AzureWorkloadSQLPointInTimeRestoreRequest: AzureWorkloadSQLPointInTimeRestoreRequest,
        AzureIaaSClassicComputeVMContainer: AzureIaaSClassicComputeVMContainer,
        AzureIaaSClassicComputeVMProtectableItem: AzureIaaSClassicComputeVMProtectableItem,
        AzureIaaSComputeVMContainer: AzureIaaSComputeVMContainer,
        AzureIaaSComputeVMProtectableItem: AzureIaaSComputeVMProtectableItem,
        AzureSQLAGWorkloadContainerProtectionContainer: AzureSQLAGWorkloadContainerProtectionContainer,
        AzureVMAppContainerProtectionContainer: AzureVMAppContainerProtectionContainer,
        AzureWorkloadSAPHanaPointInTimeRecoveryPoint: AzureWorkloadSAPHanaPointInTimeRecoveryPoint,
        PointInTimeRange: PointInTimeRange,
        AzureWorkloadSQLPointInTimeRecoveryPoint: AzureWorkloadSQLPointInTimeRecoveryPoint
    });

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    /** Class representing a ProtectableContainers. */
    var ProtectableContainers = /** @class */ (function () {
        /**
         * Create a ProtectableContainers.
         * @param {RecoveryServicesBackupClientContext} client Reference to the service client.
         */
        function ProtectableContainers(client) {
            this.client = client;
        }
        ProtectableContainers.prototype.list = function (vaultName$$1, resourceGroupName$$1, fabricName$$1, options, callback) {
            return this.client.sendOperationRequest({
                vaultName: vaultName$$1,
                resourceGroupName: resourceGroupName$$1,
                fabricName: fabricName$$1,
                options: options
            }, listOperationSpec$6, callback);
        };
        ProtectableContainers.prototype.listNext = function (nextPageLink$$1, options, callback) {
            return this.client.sendOperationRequest({
                nextPageLink: nextPageLink$$1,
                options: options
            }, listNextOperationSpec$5, callback);
        };
        return ProtectableContainers;
    }());
    // Operation Specifications
    var serializer$f = new msRest.Serializer(Mappers$f);
    var listOperationSpec$6 = {
        httpMethod: "GET",
        path: "Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/protectableContainers",
        urlParameters: [
            vaultName,
            resourceGroupName,
            subscriptionId,
            fabricName
        ],
        queryParameters: [
            apiVersion1,
            filter
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            200: {
                bodyMapper: ProtectableContainerResourceList
            },
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer$f
    };
    var listNextOperationSpec$5 = {
        httpMethod: "GET",
        baseUrl: "https://management.azure.com",
        path: "{nextLink}",
        urlParameters: [
            nextPageLink
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            200: {
                bodyMapper: ProtectableContainerResourceList
            },
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer$f
    };

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */

    var Mappers$g = /*#__PURE__*/Object.freeze({
        discriminators: discriminators,
        ProtectionContainerResource: ProtectionContainerResource,
        Resource: Resource,
        BaseResource: BaseResource,
        ProtectionContainer: ProtectionContainer,
        CloudError: CloudError,
        JobResource: JobResource,
        Job: Job,
        MabJob: MabJob,
        MabErrorInfo: MabErrorInfo,
        MabJobExtendedInfo: MabJobExtendedInfo,
        MabJobTaskDetails: MabJobTaskDetails,
        ProtectedItemResource: ProtectedItemResource,
        ProtectedItem: ProtectedItem,
        ProtectionIntentResource: ProtectionIntentResource,
        ProtectionIntent: ProtectionIntent,
        ProtectionPolicyResource: ProtectionPolicyResource,
        ProtectionPolicy: ProtectionPolicy,
        AzureBackupServerContainer: AzureBackupServerContainer,
        DPMContainerExtendedInfo: DPMContainerExtendedInfo,
        AzureSqlContainer: AzureSqlContainer,
        AzureStorageContainer: AzureStorageContainer,
        AzureWorkloadContainer: AzureWorkloadContainer,
        AzureWorkloadContainerExtendedInfo: AzureWorkloadContainerExtendedInfo,
        InquiryInfo: InquiryInfo,
        ErrorDetail: ErrorDetail,
        WorkloadInquiryDetails: WorkloadInquiryDetails,
        InquiryValidation: InquiryValidation,
        DistributedNodesInfo: DistributedNodesInfo,
        BackupEngineBaseResource: BackupEngineBaseResource,
        BackupEngineBase: BackupEngineBase,
        BackupEngineExtendedInfo: BackupEngineExtendedInfo,
        BackupRequestResource: BackupRequestResource,
        BackupRequest: BackupRequest,
        BackupResourceConfigResource: BackupResourceConfigResource,
        BackupResourceConfig: BackupResourceConfig,
        BackupResourceVaultConfigResource: BackupResourceVaultConfigResource,
        BackupResourceVaultConfig: BackupResourceVaultConfig,
        DpmBackupEngine: DpmBackupEngine,
        DpmContainer: DpmContainer,
        GenericContainer: GenericContainer,
        GenericContainerExtendedInfo: GenericContainerExtendedInfo,
        ContainerIdentityInfo: ContainerIdentityInfo,
        IaasVMBackupRequest: IaasVMBackupRequest,
        IaaSVMContainer: IaaSVMContainer,
        ILRRequestResource: ILRRequestResource,
        ILRRequest: ILRRequest,
        MabContainer: MabContainer,
        MabContainerExtendedInfo: MabContainerExtendedInfo,
        MABContainerHealthDetails: MABContainerHealthDetails,
        ProtectableContainerResource: ProtectableContainerResource,
        ProtectableContainer: ProtectableContainer,
        RecoveryPointResource: RecoveryPointResource,
        RecoveryPoint: RecoveryPoint,
        RestoreRequestResource: RestoreRequestResource,
        RestoreRequest: RestoreRequest,
        WorkloadItemResource: WorkloadItemResource,
        WorkloadItem: WorkloadItem,
        WorkloadProtectableItemResource: WorkloadProtectableItemResource,
        WorkloadProtectableItem: WorkloadProtectableItem,
        AzureFileshareProtectedItem: AzureFileshareProtectedItem,
        AzureFileshareProtectedItemExtendedInfo: AzureFileshareProtectedItemExtendedInfo,
        AzureFileShareProtectionPolicy: AzureFileShareProtectionPolicy,
        SchedulePolicy: SchedulePolicy,
        RetentionPolicy: RetentionPolicy,
        AzureFileShareRestoreRequest: AzureFileShareRestoreRequest,
        RestoreFileSpecs: RestoreFileSpecs,
        TargetAFSRestoreInfo: TargetAFSRestoreInfo,
        AzureIaaSVMJob: AzureIaaSVMJob,
        AzureIaaSVMErrorInfo: AzureIaaSVMErrorInfo,
        AzureIaaSVMJobExtendedInfo: AzureIaaSVMJobExtendedInfo,
        AzureIaaSVMJobTaskDetails: AzureIaaSVMJobTaskDetails,
        AzureIaaSVMProtectedItem: AzureIaaSVMProtectedItem,
        AzureIaaSVMHealthDetails: AzureIaaSVMHealthDetails,
        AzureIaaSVMProtectedItemExtendedInfo: AzureIaaSVMProtectedItemExtendedInfo,
        AzureIaaSVMProtectionPolicy: AzureIaaSVMProtectionPolicy,
        AzureRecoveryServiceVaultProtectionIntent: AzureRecoveryServiceVaultProtectionIntent,
        AzureResourceProtectionIntent: AzureResourceProtectionIntent,
        AzureSqlProtectedItem: AzureSqlProtectedItem,
        AzureSqlProtectedItemExtendedInfo: AzureSqlProtectedItemExtendedInfo,
        AzureSqlProtectionPolicy: AzureSqlProtectionPolicy,
        AzureStorageJob: AzureStorageJob,
        AzureStorageErrorInfo: AzureStorageErrorInfo,
        AzureStorageJobExtendedInfo: AzureStorageJobExtendedInfo,
        AzureStorageJobTaskDetails: AzureStorageJobTaskDetails,
        AzureVmWorkloadProtectedItem: AzureVmWorkloadProtectedItem,
        AzureVmWorkloadProtectedItemExtendedInfo: AzureVmWorkloadProtectedItemExtendedInfo,
        AzureVmWorkloadProtectionPolicy: AzureVmWorkloadProtectionPolicy,
        Settings: Settings,
        SubProtectionPolicy: SubProtectionPolicy,
        AzureVmWorkloadSAPHanaDatabaseProtectedItem: AzureVmWorkloadSAPHanaDatabaseProtectedItem,
        AzureVmWorkloadSQLDatabaseProtectedItem: AzureVmWorkloadSQLDatabaseProtectedItem,
        AzureWorkloadAutoProtectionIntent: AzureWorkloadAutoProtectionIntent,
        AzureWorkloadJob: AzureWorkloadJob,
        AzureWorkloadErrorInfo: AzureWorkloadErrorInfo,
        AzureWorkloadJobExtendedInfo: AzureWorkloadJobExtendedInfo,
        AzureWorkloadJobTaskDetails: AzureWorkloadJobTaskDetails,
        AzureWorkloadRestoreRequest: AzureWorkloadRestoreRequest,
        AzureWorkloadSAPHanaRestoreRequest: AzureWorkloadSAPHanaRestoreRequest,
        TargetRestoreInfo: TargetRestoreInfo,
        AzureWorkloadSQLAutoProtectionIntent: AzureWorkloadSQLAutoProtectionIntent,
        AzureWorkloadSQLRestoreRequest: AzureWorkloadSQLRestoreRequest,
        SQLDataDirectoryMapping: SQLDataDirectoryMapping,
        DpmJob: DpmJob,
        DpmErrorInfo: DpmErrorInfo,
        DpmJobExtendedInfo: DpmJobExtendedInfo,
        DpmJobTaskDetails: DpmJobTaskDetails,
        DPMProtectedItem: DPMProtectedItem,
        DPMProtectedItemExtendedInfo: DPMProtectedItemExtendedInfo,
        GenericProtectedItem: GenericProtectedItem,
        GenericProtectionPolicy: GenericProtectionPolicy,
        IaasVMRestoreRequest: IaasVMRestoreRequest,
        EncryptionDetails: EncryptionDetails,
        LogSchedulePolicy: LogSchedulePolicy,
        LongTermRetentionPolicy: LongTermRetentionPolicy,
        DailyRetentionSchedule: DailyRetentionSchedule,
        RetentionDuration: RetentionDuration,
        WeeklyRetentionSchedule: WeeklyRetentionSchedule,
        MonthlyRetentionSchedule: MonthlyRetentionSchedule,
        DailyRetentionFormat: DailyRetentionFormat,
        Day: Day,
        WeeklyRetentionFormat: WeeklyRetentionFormat,
        YearlyRetentionSchedule: YearlyRetentionSchedule,
        LongTermSchedulePolicy: LongTermSchedulePolicy,
        MabFileFolderProtectedItem: MabFileFolderProtectedItem,
        MabFileFolderProtectedItemExtendedInfo: MabFileFolderProtectedItemExtendedInfo,
        MabProtectionPolicy: MabProtectionPolicy,
        SimpleRetentionPolicy: SimpleRetentionPolicy,
        SimpleSchedulePolicy: SimpleSchedulePolicy,
        AzureBackupServerEngine: AzureBackupServerEngine,
        AzureFileShareBackupRequest: AzureFileShareBackupRequest,
        AzureFileShareProtectableItem: AzureFileShareProtectableItem,
        AzureFileShareRecoveryPoint: AzureFileShareRecoveryPoint,
        AzureIaaSClassicComputeVMContainer: AzureIaaSClassicComputeVMContainer,
        AzureIaaSComputeVMContainer: AzureIaaSComputeVMContainer,
        AzureSQLAGWorkloadContainerProtectionContainer: AzureSQLAGWorkloadContainerProtectionContainer,
        AzureStorageProtectableContainer: AzureStorageProtectableContainer,
        AzureVMAppContainerProtectableContainer: AzureVMAppContainerProtectableContainer,
        AzureVMAppContainerProtectionContainer: AzureVMAppContainerProtectionContainer,
        AzureVmWorkloadItem: AzureVmWorkloadItem,
        AzureVmWorkloadProtectableItem: AzureVmWorkloadProtectableItem,
        PreBackupValidation: PreBackupValidation,
        AzureVmWorkloadSAPHanaDatabaseProtectableItem: AzureVmWorkloadSAPHanaDatabaseProtectableItem,
        AzureVmWorkloadSAPHanaDatabaseWorkloadItem: AzureVmWorkloadSAPHanaDatabaseWorkloadItem,
        AzureVmWorkloadSAPHanaSystemProtectableItem: AzureVmWorkloadSAPHanaSystemProtectableItem,
        AzureVmWorkloadSAPHanaSystemWorkloadItem: AzureVmWorkloadSAPHanaSystemWorkloadItem,
        AzureVmWorkloadSQLAvailabilityGroupProtectableItem: AzureVmWorkloadSQLAvailabilityGroupProtectableItem,
        AzureVmWorkloadSQLDatabaseProtectableItem: AzureVmWorkloadSQLDatabaseProtectableItem,
        AzureVmWorkloadSQLDatabaseWorkloadItem: AzureVmWorkloadSQLDatabaseWorkloadItem,
        AzureVmWorkloadSQLInstanceProtectableItem: AzureVmWorkloadSQLInstanceProtectableItem,
        AzureVmWorkloadSQLInstanceWorkloadItem: AzureVmWorkloadSQLInstanceWorkloadItem,
        SQLDataDirectory: SQLDataDirectory,
        AzureWorkloadBackupRequest: AzureWorkloadBackupRequest,
        AzureWorkloadRecoveryPoint: AzureWorkloadRecoveryPoint,
        AzureWorkloadSAPHanaRecoveryPoint: AzureWorkloadSAPHanaRecoveryPoint,
        AzureWorkloadSQLRecoveryPoint: AzureWorkloadSQLRecoveryPoint,
        AzureWorkloadSQLRecoveryPointExtendedInfo: AzureWorkloadSQLRecoveryPointExtendedInfo,
        GenericRecoveryPoint: GenericRecoveryPoint,
        IaasVMILRRegistrationRequest: IaasVMILRRegistrationRequest,
        IaaSVMProtectableItem: IaaSVMProtectableItem,
        IaasVMRecoveryPoint: IaasVMRecoveryPoint,
        KeyAndSecretDetails: KeyAndSecretDetails,
        KEKDetails: KEKDetails,
        BEKDetails: BEKDetails,
        RecoveryPointTierInformation: RecoveryPointTierInformation,
        AzureIaaSClassicComputeVMProtectedItem: AzureIaaSClassicComputeVMProtectedItem,
        AzureIaaSComputeVMProtectedItem: AzureIaaSComputeVMProtectedItem,
        AzureWorkloadSAPHanaPointInTimeRestoreRequest: AzureWorkloadSAPHanaPointInTimeRestoreRequest,
        AzureWorkloadSQLPointInTimeRestoreRequest: AzureWorkloadSQLPointInTimeRestoreRequest,
        AzureIaaSClassicComputeVMProtectableItem: AzureIaaSClassicComputeVMProtectableItem,
        AzureIaaSComputeVMProtectableItem: AzureIaaSComputeVMProtectableItem,
        AzureWorkloadSAPHanaPointInTimeRecoveryPoint: AzureWorkloadSAPHanaPointInTimeRecoveryPoint,
        PointInTimeRange: PointInTimeRange,
        AzureWorkloadSQLPointInTimeRecoveryPoint: AzureWorkloadSQLPointInTimeRecoveryPoint
    });

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    /** Class representing a ProtectionContainers. */
    var ProtectionContainers = /** @class */ (function () {
        /**
         * Create a ProtectionContainers.
         * @param {RecoveryServicesBackupClientContext} client Reference to the service client.
         */
        function ProtectionContainers(client) {
            this.client = client;
        }
        ProtectionContainers.prototype.get = function (vaultName$$1, resourceGroupName$$1, fabricName$$1, containerName$$1, options, callback) {
            return this.client.sendOperationRequest({
                vaultName: vaultName$$1,
                resourceGroupName: resourceGroupName$$1,
                fabricName: fabricName$$1,
                containerName: containerName$$1,
                options: options
            }, getOperationSpec$7, callback);
        };
        ProtectionContainers.prototype.register = function (vaultName$$1, resourceGroupName$$1, fabricName$$1, containerName$$1, parameters, options, callback) {
            return this.client.sendOperationRequest({
                vaultName: vaultName$$1,
                resourceGroupName: resourceGroupName$$1,
                fabricName: fabricName$$1,
                containerName: containerName$$1,
                parameters: parameters,
                options: options
            }, registerOperationSpec, callback);
        };
        ProtectionContainers.prototype.unregister = function (vaultName$$1, resourceGroupName$$1, fabricName$$1, containerName$$1, options, callback) {
            return this.client.sendOperationRequest({
                vaultName: vaultName$$1,
                resourceGroupName: resourceGroupName$$1,
                fabricName: fabricName$$1,
                containerName: containerName$$1,
                options: options
            }, unregisterOperationSpec, callback);
        };
        ProtectionContainers.prototype.inquire = function (vaultName$$1, resourceGroupName$$1, fabricName$$1, containerName$$1, options, callback) {
            return this.client.sendOperationRequest({
                vaultName: vaultName$$1,
                resourceGroupName: resourceGroupName$$1,
                fabricName: fabricName$$1,
                containerName: containerName$$1,
                options: options
            }, inquireOperationSpec, callback);
        };
        ProtectionContainers.prototype.refresh = function (vaultName$$1, resourceGroupName$$1, fabricName$$1, options, callback) {
            return this.client.sendOperationRequest({
                vaultName: vaultName$$1,
                resourceGroupName: resourceGroupName$$1,
                fabricName: fabricName$$1,
                options: options
            }, refreshOperationSpec, callback);
        };
        return ProtectionContainers;
    }());
    // Operation Specifications
    var serializer$g = new msRest.Serializer(Mappers$g);
    var getOperationSpec$7 = {
        httpMethod: "GET",
        path: "Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/protectionContainers/{containerName}",
        urlParameters: [
            vaultName,
            resourceGroupName,
            subscriptionId,
            fabricName,
            containerName
        ],
        queryParameters: [
            apiVersion1
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            200: {
                bodyMapper: ProtectionContainerResource
            },
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer$g
    };
    var registerOperationSpec = {
        httpMethod: "PUT",
        path: "Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/protectionContainers/{containerName}",
        urlParameters: [
            vaultName,
            resourceGroupName,
            subscriptionId,
            fabricName,
            containerName
        ],
        queryParameters: [
            apiVersion1
        ],
        headerParameters: [
            acceptLanguage
        ],
        requestBody: {
            parameterPath: "parameters",
            mapper: __assign({}, ProtectionContainerResource, { required: true })
        },
        responses: {
            200: {
                bodyMapper: ProtectionContainerResource
            },
            202: {},
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer$g
    };
    var unregisterOperationSpec = {
        httpMethod: "DELETE",
        path: "Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/protectionContainers/{containerName}",
        urlParameters: [
            vaultName,
            resourceGroupName,
            subscriptionId,
            fabricName,
            containerName
        ],
        queryParameters: [
            apiVersion1
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            202: {},
            204: {},
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer$g
    };
    var inquireOperationSpec = {
        httpMethod: "POST",
        path: "Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/protectionContainers/{containerName}/inquire",
        urlParameters: [
            vaultName,
            resourceGroupName,
            subscriptionId,
            fabricName,
            containerName
        ],
        queryParameters: [
            apiVersion1,
            filter
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            202: {},
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer$g
    };
    var refreshOperationSpec = {
        httpMethod: "POST",
        path: "Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/refreshContainers",
        urlParameters: [
            vaultName,
            resourceGroupName,
            subscriptionId,
            fabricName
        ],
        queryParameters: [
            apiVersion1,
            filter
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            202: {},
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer$g
    };

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */

    var Mappers$h = /*#__PURE__*/Object.freeze({
        discriminators: discriminators,
        WorkloadItemResourceList: WorkloadItemResourceList,
        ResourceList: ResourceList,
        WorkloadItemResource: WorkloadItemResource,
        Resource: Resource,
        BaseResource: BaseResource,
        WorkloadItem: WorkloadItem,
        CloudError: CloudError,
        JobResource: JobResource,
        Job: Job,
        JobResourceList: JobResourceList,
        MabJob: MabJob,
        MabErrorInfo: MabErrorInfo,
        MabJobExtendedInfo: MabJobExtendedInfo,
        MabJobTaskDetails: MabJobTaskDetails,
        ProtectedItemResource: ProtectedItemResource,
        ProtectedItem: ProtectedItem,
        ProtectedItemResourceList: ProtectedItemResourceList,
        ProtectionIntentResource: ProtectionIntentResource,
        ProtectionIntent: ProtectionIntent,
        ProtectionIntentResourceList: ProtectionIntentResourceList,
        ProtectionPolicyResource: ProtectionPolicyResource,
        ProtectionPolicy: ProtectionPolicy,
        ProtectionPolicyResourceList: ProtectionPolicyResourceList,
        AzureVmWorkloadItem: AzureVmWorkloadItem,
        AzureVmWorkloadSAPHanaDatabaseWorkloadItem: AzureVmWorkloadSAPHanaDatabaseWorkloadItem,
        AzureVmWorkloadSAPHanaSystemWorkloadItem: AzureVmWorkloadSAPHanaSystemWorkloadItem,
        AzureVmWorkloadSQLDatabaseWorkloadItem: AzureVmWorkloadSQLDatabaseWorkloadItem,
        AzureVmWorkloadSQLInstanceWorkloadItem: AzureVmWorkloadSQLInstanceWorkloadItem,
        SQLDataDirectory: SQLDataDirectory,
        BackupEngineBaseResource: BackupEngineBaseResource,
        BackupEngineBase: BackupEngineBase,
        BackupEngineExtendedInfo: BackupEngineExtendedInfo,
        BackupEngineBaseResourceList: BackupEngineBaseResourceList,
        BackupRequestResource: BackupRequestResource,
        BackupRequest: BackupRequest,
        BackupResourceConfigResource: BackupResourceConfigResource,
        BackupResourceConfig: BackupResourceConfig,
        BackupResourceVaultConfigResource: BackupResourceVaultConfigResource,
        BackupResourceVaultConfig: BackupResourceVaultConfig,
        DpmBackupEngine: DpmBackupEngine,
        IaasVMBackupRequest: IaasVMBackupRequest,
        ILRRequestResource: ILRRequestResource,
        ILRRequest: ILRRequest,
        ProtectableContainerResource: ProtectableContainerResource,
        ProtectableContainer: ProtectableContainer,
        ProtectableContainerResourceList: ProtectableContainerResourceList,
        ProtectionContainerResource: ProtectionContainerResource,
        ProtectionContainer: ProtectionContainer,
        ProtectionContainerResourceList: ProtectionContainerResourceList,
        RecoveryPointResource: RecoveryPointResource,
        RecoveryPoint: RecoveryPoint,
        RecoveryPointResourceList: RecoveryPointResourceList,
        RestoreRequestResource: RestoreRequestResource,
        RestoreRequest: RestoreRequest,
        WorkloadProtectableItemResource: WorkloadProtectableItemResource,
        WorkloadProtectableItem: WorkloadProtectableItem,
        WorkloadProtectableItemResourceList: WorkloadProtectableItemResourceList,
        AzureFileshareProtectedItem: AzureFileshareProtectedItem,
        AzureFileshareProtectedItemExtendedInfo: AzureFileshareProtectedItemExtendedInfo,
        AzureFileShareProtectionPolicy: AzureFileShareProtectionPolicy,
        SchedulePolicy: SchedulePolicy,
        RetentionPolicy: RetentionPolicy,
        AzureFileShareRestoreRequest: AzureFileShareRestoreRequest,
        RestoreFileSpecs: RestoreFileSpecs,
        TargetAFSRestoreInfo: TargetAFSRestoreInfo,
        AzureIaaSVMJob: AzureIaaSVMJob,
        AzureIaaSVMErrorInfo: AzureIaaSVMErrorInfo,
        AzureIaaSVMJobExtendedInfo: AzureIaaSVMJobExtendedInfo,
        AzureIaaSVMJobTaskDetails: AzureIaaSVMJobTaskDetails,
        AzureIaaSVMProtectedItem: AzureIaaSVMProtectedItem,
        AzureIaaSVMHealthDetails: AzureIaaSVMHealthDetails,
        AzureIaaSVMProtectedItemExtendedInfo: AzureIaaSVMProtectedItemExtendedInfo,
        AzureIaaSVMProtectionPolicy: AzureIaaSVMProtectionPolicy,
        AzureRecoveryServiceVaultProtectionIntent: AzureRecoveryServiceVaultProtectionIntent,
        AzureResourceProtectionIntent: AzureResourceProtectionIntent,
        AzureSqlProtectedItem: AzureSqlProtectedItem,
        AzureSqlProtectedItemExtendedInfo: AzureSqlProtectedItemExtendedInfo,
        AzureSqlProtectionPolicy: AzureSqlProtectionPolicy,
        AzureStorageJob: AzureStorageJob,
        AzureStorageErrorInfo: AzureStorageErrorInfo,
        AzureStorageJobExtendedInfo: AzureStorageJobExtendedInfo,
        AzureStorageJobTaskDetails: AzureStorageJobTaskDetails,
        AzureVmWorkloadProtectedItem: AzureVmWorkloadProtectedItem,
        ErrorDetail: ErrorDetail,
        AzureVmWorkloadProtectedItemExtendedInfo: AzureVmWorkloadProtectedItemExtendedInfo,
        AzureVmWorkloadProtectionPolicy: AzureVmWorkloadProtectionPolicy,
        Settings: Settings,
        SubProtectionPolicy: SubProtectionPolicy,
        AzureVmWorkloadSAPHanaDatabaseProtectedItem: AzureVmWorkloadSAPHanaDatabaseProtectedItem,
        AzureVmWorkloadSQLDatabaseProtectedItem: AzureVmWorkloadSQLDatabaseProtectedItem,
        AzureWorkloadAutoProtectionIntent: AzureWorkloadAutoProtectionIntent,
        AzureWorkloadJob: AzureWorkloadJob,
        AzureWorkloadErrorInfo: AzureWorkloadErrorInfo,
        AzureWorkloadJobExtendedInfo: AzureWorkloadJobExtendedInfo,
        AzureWorkloadJobTaskDetails: AzureWorkloadJobTaskDetails,
        AzureWorkloadRestoreRequest: AzureWorkloadRestoreRequest,
        AzureWorkloadSAPHanaRestoreRequest: AzureWorkloadSAPHanaRestoreRequest,
        TargetRestoreInfo: TargetRestoreInfo,
        AzureWorkloadSQLAutoProtectionIntent: AzureWorkloadSQLAutoProtectionIntent,
        AzureWorkloadSQLRestoreRequest: AzureWorkloadSQLRestoreRequest,
        SQLDataDirectoryMapping: SQLDataDirectoryMapping,
        DpmJob: DpmJob,
        DpmErrorInfo: DpmErrorInfo,
        DpmJobExtendedInfo: DpmJobExtendedInfo,
        DpmJobTaskDetails: DpmJobTaskDetails,
        DPMProtectedItem: DPMProtectedItem,
        DPMProtectedItemExtendedInfo: DPMProtectedItemExtendedInfo,
        GenericProtectedItem: GenericProtectedItem,
        GenericProtectionPolicy: GenericProtectionPolicy,
        IaasVMRestoreRequest: IaasVMRestoreRequest,
        EncryptionDetails: EncryptionDetails,
        LogSchedulePolicy: LogSchedulePolicy,
        LongTermRetentionPolicy: LongTermRetentionPolicy,
        DailyRetentionSchedule: DailyRetentionSchedule,
        RetentionDuration: RetentionDuration,
        WeeklyRetentionSchedule: WeeklyRetentionSchedule,
        MonthlyRetentionSchedule: MonthlyRetentionSchedule,
        DailyRetentionFormat: DailyRetentionFormat,
        Day: Day,
        WeeklyRetentionFormat: WeeklyRetentionFormat,
        YearlyRetentionSchedule: YearlyRetentionSchedule,
        LongTermSchedulePolicy: LongTermSchedulePolicy,
        MabFileFolderProtectedItem: MabFileFolderProtectedItem,
        MabFileFolderProtectedItemExtendedInfo: MabFileFolderProtectedItemExtendedInfo,
        MabProtectionPolicy: MabProtectionPolicy,
        SimpleRetentionPolicy: SimpleRetentionPolicy,
        SimpleSchedulePolicy: SimpleSchedulePolicy,
        AzureBackupServerContainer: AzureBackupServerContainer,
        DPMContainerExtendedInfo: DPMContainerExtendedInfo,
        AzureBackupServerEngine: AzureBackupServerEngine,
        AzureFileShareBackupRequest: AzureFileShareBackupRequest,
        AzureFileShareProtectableItem: AzureFileShareProtectableItem,
        AzureFileShareRecoveryPoint: AzureFileShareRecoveryPoint,
        AzureSqlContainer: AzureSqlContainer,
        AzureStorageContainer: AzureStorageContainer,
        AzureStorageProtectableContainer: AzureStorageProtectableContainer,
        AzureVMAppContainerProtectableContainer: AzureVMAppContainerProtectableContainer,
        AzureVmWorkloadProtectableItem: AzureVmWorkloadProtectableItem,
        PreBackupValidation: PreBackupValidation,
        AzureVmWorkloadSAPHanaDatabaseProtectableItem: AzureVmWorkloadSAPHanaDatabaseProtectableItem,
        AzureVmWorkloadSAPHanaSystemProtectableItem: AzureVmWorkloadSAPHanaSystemProtectableItem,
        AzureVmWorkloadSQLAvailabilityGroupProtectableItem: AzureVmWorkloadSQLAvailabilityGroupProtectableItem,
        AzureVmWorkloadSQLDatabaseProtectableItem: AzureVmWorkloadSQLDatabaseProtectableItem,
        AzureVmWorkloadSQLInstanceProtectableItem: AzureVmWorkloadSQLInstanceProtectableItem,
        AzureWorkloadBackupRequest: AzureWorkloadBackupRequest,
        AzureWorkloadContainer: AzureWorkloadContainer,
        AzureWorkloadContainerExtendedInfo: AzureWorkloadContainerExtendedInfo,
        InquiryInfo: InquiryInfo,
        WorkloadInquiryDetails: WorkloadInquiryDetails,
        InquiryValidation: InquiryValidation,
        DistributedNodesInfo: DistributedNodesInfo,
        AzureWorkloadRecoveryPoint: AzureWorkloadRecoveryPoint,
        AzureWorkloadSAPHanaRecoveryPoint: AzureWorkloadSAPHanaRecoveryPoint,
        AzureWorkloadSQLRecoveryPoint: AzureWorkloadSQLRecoveryPoint,
        AzureWorkloadSQLRecoveryPointExtendedInfo: AzureWorkloadSQLRecoveryPointExtendedInfo,
        DpmContainer: DpmContainer,
        GenericContainer: GenericContainer,
        GenericContainerExtendedInfo: GenericContainerExtendedInfo,
        ContainerIdentityInfo: ContainerIdentityInfo,
        GenericRecoveryPoint: GenericRecoveryPoint,
        IaaSVMContainer: IaaSVMContainer,
        IaasVMILRRegistrationRequest: IaasVMILRRegistrationRequest,
        IaaSVMProtectableItem: IaaSVMProtectableItem,
        IaasVMRecoveryPoint: IaasVMRecoveryPoint,
        KeyAndSecretDetails: KeyAndSecretDetails,
        KEKDetails: KEKDetails,
        BEKDetails: BEKDetails,
        RecoveryPointTierInformation: RecoveryPointTierInformation,
        MabContainer: MabContainer,
        MabContainerExtendedInfo: MabContainerExtendedInfo,
        MABContainerHealthDetails: MABContainerHealthDetails,
        AzureIaaSClassicComputeVMProtectedItem: AzureIaaSClassicComputeVMProtectedItem,
        AzureIaaSComputeVMProtectedItem: AzureIaaSComputeVMProtectedItem,
        AzureWorkloadSAPHanaPointInTimeRestoreRequest: AzureWorkloadSAPHanaPointInTimeRestoreRequest,
        AzureWorkloadSQLPointInTimeRestoreRequest: AzureWorkloadSQLPointInTimeRestoreRequest,
        AzureIaaSClassicComputeVMContainer: AzureIaaSClassicComputeVMContainer,
        AzureIaaSClassicComputeVMProtectableItem: AzureIaaSClassicComputeVMProtectableItem,
        AzureIaaSComputeVMContainer: AzureIaaSComputeVMContainer,
        AzureIaaSComputeVMProtectableItem: AzureIaaSComputeVMProtectableItem,
        AzureSQLAGWorkloadContainerProtectionContainer: AzureSQLAGWorkloadContainerProtectionContainer,
        AzureVMAppContainerProtectionContainer: AzureVMAppContainerProtectionContainer,
        AzureWorkloadSAPHanaPointInTimeRecoveryPoint: AzureWorkloadSAPHanaPointInTimeRecoveryPoint,
        PointInTimeRange: PointInTimeRange,
        AzureWorkloadSQLPointInTimeRecoveryPoint: AzureWorkloadSQLPointInTimeRecoveryPoint
    });

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    /** Class representing a BackupWorkloadItems. */
    var BackupWorkloadItems = /** @class */ (function () {
        /**
         * Create a BackupWorkloadItems.
         * @param {RecoveryServicesBackupClientContext} client Reference to the service client.
         */
        function BackupWorkloadItems(client) {
            this.client = client;
        }
        BackupWorkloadItems.prototype.list = function (vaultName$$1, resourceGroupName$$1, fabricName$$1, containerName$$1, options, callback) {
            return this.client.sendOperationRequest({
                vaultName: vaultName$$1,
                resourceGroupName: resourceGroupName$$1,
                fabricName: fabricName$$1,
                containerName: containerName$$1,
                options: options
            }, listOperationSpec$7, callback);
        };
        BackupWorkloadItems.prototype.listNext = function (nextPageLink$$1, options, callback) {
            return this.client.sendOperationRequest({
                nextPageLink: nextPageLink$$1,
                options: options
            }, listNextOperationSpec$6, callback);
        };
        return BackupWorkloadItems;
    }());
    // Operation Specifications
    var serializer$h = new msRest.Serializer(Mappers$h);
    var listOperationSpec$7 = {
        httpMethod: "GET",
        path: "Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/protectionContainers/{containerName}/items",
        urlParameters: [
            vaultName,
            resourceGroupName,
            subscriptionId,
            fabricName,
            containerName
        ],
        queryParameters: [
            apiVersion1,
            filter,
            skipToken
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            200: {
                bodyMapper: WorkloadItemResourceList
            },
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer$h
    };
    var listNextOperationSpec$6 = {
        httpMethod: "GET",
        baseUrl: "https://management.azure.com",
        path: "{nextLink}",
        urlParameters: [
            nextPageLink
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            200: {
                bodyMapper: WorkloadItemResourceList
            },
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer$h
    };

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */

    var Mappers$i = /*#__PURE__*/Object.freeze({
        discriminators: discriminators,
        ProtectionContainerResource: ProtectionContainerResource,
        Resource: Resource,
        BaseResource: BaseResource,
        ProtectionContainer: ProtectionContainer,
        CloudError: CloudError,
        JobResource: JobResource,
        Job: Job,
        MabJob: MabJob,
        MabErrorInfo: MabErrorInfo,
        MabJobExtendedInfo: MabJobExtendedInfo,
        MabJobTaskDetails: MabJobTaskDetails,
        ProtectedItemResource: ProtectedItemResource,
        ProtectedItem: ProtectedItem,
        ProtectionIntentResource: ProtectionIntentResource,
        ProtectionIntent: ProtectionIntent,
        ProtectionPolicyResource: ProtectionPolicyResource,
        ProtectionPolicy: ProtectionPolicy,
        AzureBackupServerContainer: AzureBackupServerContainer,
        DPMContainerExtendedInfo: DPMContainerExtendedInfo,
        AzureSqlContainer: AzureSqlContainer,
        AzureStorageContainer: AzureStorageContainer,
        AzureWorkloadContainer: AzureWorkloadContainer,
        AzureWorkloadContainerExtendedInfo: AzureWorkloadContainerExtendedInfo,
        InquiryInfo: InquiryInfo,
        ErrorDetail: ErrorDetail,
        WorkloadInquiryDetails: WorkloadInquiryDetails,
        InquiryValidation: InquiryValidation,
        DistributedNodesInfo: DistributedNodesInfo,
        BackupEngineBaseResource: BackupEngineBaseResource,
        BackupEngineBase: BackupEngineBase,
        BackupEngineExtendedInfo: BackupEngineExtendedInfo,
        BackupRequestResource: BackupRequestResource,
        BackupRequest: BackupRequest,
        BackupResourceConfigResource: BackupResourceConfigResource,
        BackupResourceConfig: BackupResourceConfig,
        BackupResourceVaultConfigResource: BackupResourceVaultConfigResource,
        BackupResourceVaultConfig: BackupResourceVaultConfig,
        DpmBackupEngine: DpmBackupEngine,
        DpmContainer: DpmContainer,
        GenericContainer: GenericContainer,
        GenericContainerExtendedInfo: GenericContainerExtendedInfo,
        ContainerIdentityInfo: ContainerIdentityInfo,
        IaasVMBackupRequest: IaasVMBackupRequest,
        IaaSVMContainer: IaaSVMContainer,
        ILRRequestResource: ILRRequestResource,
        ILRRequest: ILRRequest,
        MabContainer: MabContainer,
        MabContainerExtendedInfo: MabContainerExtendedInfo,
        MABContainerHealthDetails: MABContainerHealthDetails,
        ProtectableContainerResource: ProtectableContainerResource,
        ProtectableContainer: ProtectableContainer,
        RecoveryPointResource: RecoveryPointResource,
        RecoveryPoint: RecoveryPoint,
        RestoreRequestResource: RestoreRequestResource,
        RestoreRequest: RestoreRequest,
        WorkloadItemResource: WorkloadItemResource,
        WorkloadItem: WorkloadItem,
        WorkloadProtectableItemResource: WorkloadProtectableItemResource,
        WorkloadProtectableItem: WorkloadProtectableItem,
        AzureFileshareProtectedItem: AzureFileshareProtectedItem,
        AzureFileshareProtectedItemExtendedInfo: AzureFileshareProtectedItemExtendedInfo,
        AzureFileShareProtectionPolicy: AzureFileShareProtectionPolicy,
        SchedulePolicy: SchedulePolicy,
        RetentionPolicy: RetentionPolicy,
        AzureFileShareRestoreRequest: AzureFileShareRestoreRequest,
        RestoreFileSpecs: RestoreFileSpecs,
        TargetAFSRestoreInfo: TargetAFSRestoreInfo,
        AzureIaaSVMJob: AzureIaaSVMJob,
        AzureIaaSVMErrorInfo: AzureIaaSVMErrorInfo,
        AzureIaaSVMJobExtendedInfo: AzureIaaSVMJobExtendedInfo,
        AzureIaaSVMJobTaskDetails: AzureIaaSVMJobTaskDetails,
        AzureIaaSVMProtectedItem: AzureIaaSVMProtectedItem,
        AzureIaaSVMHealthDetails: AzureIaaSVMHealthDetails,
        AzureIaaSVMProtectedItemExtendedInfo: AzureIaaSVMProtectedItemExtendedInfo,
        AzureIaaSVMProtectionPolicy: AzureIaaSVMProtectionPolicy,
        AzureRecoveryServiceVaultProtectionIntent: AzureRecoveryServiceVaultProtectionIntent,
        AzureResourceProtectionIntent: AzureResourceProtectionIntent,
        AzureSqlProtectedItem: AzureSqlProtectedItem,
        AzureSqlProtectedItemExtendedInfo: AzureSqlProtectedItemExtendedInfo,
        AzureSqlProtectionPolicy: AzureSqlProtectionPolicy,
        AzureStorageJob: AzureStorageJob,
        AzureStorageErrorInfo: AzureStorageErrorInfo,
        AzureStorageJobExtendedInfo: AzureStorageJobExtendedInfo,
        AzureStorageJobTaskDetails: AzureStorageJobTaskDetails,
        AzureVmWorkloadProtectedItem: AzureVmWorkloadProtectedItem,
        AzureVmWorkloadProtectedItemExtendedInfo: AzureVmWorkloadProtectedItemExtendedInfo,
        AzureVmWorkloadProtectionPolicy: AzureVmWorkloadProtectionPolicy,
        Settings: Settings,
        SubProtectionPolicy: SubProtectionPolicy,
        AzureVmWorkloadSAPHanaDatabaseProtectedItem: AzureVmWorkloadSAPHanaDatabaseProtectedItem,
        AzureVmWorkloadSQLDatabaseProtectedItem: AzureVmWorkloadSQLDatabaseProtectedItem,
        AzureWorkloadAutoProtectionIntent: AzureWorkloadAutoProtectionIntent,
        AzureWorkloadJob: AzureWorkloadJob,
        AzureWorkloadErrorInfo: AzureWorkloadErrorInfo,
        AzureWorkloadJobExtendedInfo: AzureWorkloadJobExtendedInfo,
        AzureWorkloadJobTaskDetails: AzureWorkloadJobTaskDetails,
        AzureWorkloadRestoreRequest: AzureWorkloadRestoreRequest,
        AzureWorkloadSAPHanaRestoreRequest: AzureWorkloadSAPHanaRestoreRequest,
        TargetRestoreInfo: TargetRestoreInfo,
        AzureWorkloadSQLAutoProtectionIntent: AzureWorkloadSQLAutoProtectionIntent,
        AzureWorkloadSQLRestoreRequest: AzureWorkloadSQLRestoreRequest,
        SQLDataDirectoryMapping: SQLDataDirectoryMapping,
        DpmJob: DpmJob,
        DpmErrorInfo: DpmErrorInfo,
        DpmJobExtendedInfo: DpmJobExtendedInfo,
        DpmJobTaskDetails: DpmJobTaskDetails,
        DPMProtectedItem: DPMProtectedItem,
        DPMProtectedItemExtendedInfo: DPMProtectedItemExtendedInfo,
        GenericProtectedItem: GenericProtectedItem,
        GenericProtectionPolicy: GenericProtectionPolicy,
        IaasVMRestoreRequest: IaasVMRestoreRequest,
        EncryptionDetails: EncryptionDetails,
        LogSchedulePolicy: LogSchedulePolicy,
        LongTermRetentionPolicy: LongTermRetentionPolicy,
        DailyRetentionSchedule: DailyRetentionSchedule,
        RetentionDuration: RetentionDuration,
        WeeklyRetentionSchedule: WeeklyRetentionSchedule,
        MonthlyRetentionSchedule: MonthlyRetentionSchedule,
        DailyRetentionFormat: DailyRetentionFormat,
        Day: Day,
        WeeklyRetentionFormat: WeeklyRetentionFormat,
        YearlyRetentionSchedule: YearlyRetentionSchedule,
        LongTermSchedulePolicy: LongTermSchedulePolicy,
        MabFileFolderProtectedItem: MabFileFolderProtectedItem,
        MabFileFolderProtectedItemExtendedInfo: MabFileFolderProtectedItemExtendedInfo,
        MabProtectionPolicy: MabProtectionPolicy,
        SimpleRetentionPolicy: SimpleRetentionPolicy,
        SimpleSchedulePolicy: SimpleSchedulePolicy,
        AzureBackupServerEngine: AzureBackupServerEngine,
        AzureFileShareBackupRequest: AzureFileShareBackupRequest,
        AzureFileShareProtectableItem: AzureFileShareProtectableItem,
        AzureFileShareRecoveryPoint: AzureFileShareRecoveryPoint,
        AzureIaaSClassicComputeVMContainer: AzureIaaSClassicComputeVMContainer,
        AzureIaaSComputeVMContainer: AzureIaaSComputeVMContainer,
        AzureSQLAGWorkloadContainerProtectionContainer: AzureSQLAGWorkloadContainerProtectionContainer,
        AzureStorageProtectableContainer: AzureStorageProtectableContainer,
        AzureVMAppContainerProtectableContainer: AzureVMAppContainerProtectableContainer,
        AzureVMAppContainerProtectionContainer: AzureVMAppContainerProtectionContainer,
        AzureVmWorkloadItem: AzureVmWorkloadItem,
        AzureVmWorkloadProtectableItem: AzureVmWorkloadProtectableItem,
        PreBackupValidation: PreBackupValidation,
        AzureVmWorkloadSAPHanaDatabaseProtectableItem: AzureVmWorkloadSAPHanaDatabaseProtectableItem,
        AzureVmWorkloadSAPHanaDatabaseWorkloadItem: AzureVmWorkloadSAPHanaDatabaseWorkloadItem,
        AzureVmWorkloadSAPHanaSystemProtectableItem: AzureVmWorkloadSAPHanaSystemProtectableItem,
        AzureVmWorkloadSAPHanaSystemWorkloadItem: AzureVmWorkloadSAPHanaSystemWorkloadItem,
        AzureVmWorkloadSQLAvailabilityGroupProtectableItem: AzureVmWorkloadSQLAvailabilityGroupProtectableItem,
        AzureVmWorkloadSQLDatabaseProtectableItem: AzureVmWorkloadSQLDatabaseProtectableItem,
        AzureVmWorkloadSQLDatabaseWorkloadItem: AzureVmWorkloadSQLDatabaseWorkloadItem,
        AzureVmWorkloadSQLInstanceProtectableItem: AzureVmWorkloadSQLInstanceProtectableItem,
        AzureVmWorkloadSQLInstanceWorkloadItem: AzureVmWorkloadSQLInstanceWorkloadItem,
        SQLDataDirectory: SQLDataDirectory,
        AzureWorkloadBackupRequest: AzureWorkloadBackupRequest,
        AzureWorkloadRecoveryPoint: AzureWorkloadRecoveryPoint,
        AzureWorkloadSAPHanaRecoveryPoint: AzureWorkloadSAPHanaRecoveryPoint,
        AzureWorkloadSQLRecoveryPoint: AzureWorkloadSQLRecoveryPoint,
        AzureWorkloadSQLRecoveryPointExtendedInfo: AzureWorkloadSQLRecoveryPointExtendedInfo,
        GenericRecoveryPoint: GenericRecoveryPoint,
        IaasVMILRRegistrationRequest: IaasVMILRRegistrationRequest,
        IaaSVMProtectableItem: IaaSVMProtectableItem,
        IaasVMRecoveryPoint: IaasVMRecoveryPoint,
        KeyAndSecretDetails: KeyAndSecretDetails,
        KEKDetails: KEKDetails,
        BEKDetails: BEKDetails,
        RecoveryPointTierInformation: RecoveryPointTierInformation,
        AzureIaaSClassicComputeVMProtectedItem: AzureIaaSClassicComputeVMProtectedItem,
        AzureIaaSComputeVMProtectedItem: AzureIaaSComputeVMProtectedItem,
        AzureWorkloadSAPHanaPointInTimeRestoreRequest: AzureWorkloadSAPHanaPointInTimeRestoreRequest,
        AzureWorkloadSQLPointInTimeRestoreRequest: AzureWorkloadSQLPointInTimeRestoreRequest,
        AzureIaaSClassicComputeVMProtectableItem: AzureIaaSClassicComputeVMProtectableItem,
        AzureIaaSComputeVMProtectableItem: AzureIaaSComputeVMProtectableItem,
        AzureWorkloadSAPHanaPointInTimeRecoveryPoint: AzureWorkloadSAPHanaPointInTimeRecoveryPoint,
        PointInTimeRange: PointInTimeRange,
        AzureWorkloadSQLPointInTimeRecoveryPoint: AzureWorkloadSQLPointInTimeRecoveryPoint
    });

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    /** Class representing a ProtectionContainerOperationResults. */
    var ProtectionContainerOperationResults = /** @class */ (function () {
        /**
         * Create a ProtectionContainerOperationResults.
         * @param {RecoveryServicesBackupClientContext} client Reference to the service client.
         */
        function ProtectionContainerOperationResults(client) {
            this.client = client;
        }
        ProtectionContainerOperationResults.prototype.get = function (vaultName$$1, resourceGroupName$$1, fabricName$$1, containerName$$1, operationId$$1, options, callback) {
            return this.client.sendOperationRequest({
                vaultName: vaultName$$1,
                resourceGroupName: resourceGroupName$$1,
                fabricName: fabricName$$1,
                containerName: containerName$$1,
                operationId: operationId$$1,
                options: options
            }, getOperationSpec$8, callback);
        };
        return ProtectionContainerOperationResults;
    }());
    // Operation Specifications
    var serializer$i = new msRest.Serializer(Mappers$i);
    var getOperationSpec$8 = {
        httpMethod: "GET",
        path: "Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/protectionContainers/{containerName}/operationResults/{operationId}",
        urlParameters: [
            vaultName,
            resourceGroupName,
            subscriptionId,
            fabricName,
            containerName,
            operationId
        ],
        queryParameters: [
            apiVersion1
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            200: {
                bodyMapper: ProtectionContainerResource
            },
            202: {},
            204: {},
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer$i
    };

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */

    var Mappers$j = /*#__PURE__*/Object.freeze({
        discriminators: discriminators,
        ProtectedItemResource: ProtectedItemResource,
        Resource: Resource,
        BaseResource: BaseResource,
        ProtectedItem: ProtectedItem,
        CloudError: CloudError,
        AzureFileshareProtectedItem: AzureFileshareProtectedItem,
        AzureFileshareProtectedItemExtendedInfo: AzureFileshareProtectedItemExtendedInfo,
        AzureIaaSVMProtectedItem: AzureIaaSVMProtectedItem,
        AzureIaaSVMHealthDetails: AzureIaaSVMHealthDetails,
        AzureIaaSVMProtectedItemExtendedInfo: AzureIaaSVMProtectedItemExtendedInfo,
        AzureSqlProtectedItem: AzureSqlProtectedItem,
        AzureSqlProtectedItemExtendedInfo: AzureSqlProtectedItemExtendedInfo,
        AzureVmWorkloadProtectedItem: AzureVmWorkloadProtectedItem,
        ErrorDetail: ErrorDetail,
        AzureVmWorkloadProtectedItemExtendedInfo: AzureVmWorkloadProtectedItemExtendedInfo,
        AzureVmWorkloadSAPHanaDatabaseProtectedItem: AzureVmWorkloadSAPHanaDatabaseProtectedItem,
        AzureVmWorkloadSQLDatabaseProtectedItem: AzureVmWorkloadSQLDatabaseProtectedItem,
        DPMProtectedItem: DPMProtectedItem,
        DPMProtectedItemExtendedInfo: DPMProtectedItemExtendedInfo,
        GenericProtectedItem: GenericProtectedItem,
        JobResource: JobResource,
        Job: Job,
        MabFileFolderProtectedItem: MabFileFolderProtectedItem,
        MabFileFolderProtectedItemExtendedInfo: MabFileFolderProtectedItemExtendedInfo,
        MabJob: MabJob,
        MabErrorInfo: MabErrorInfo,
        MabJobExtendedInfo: MabJobExtendedInfo,
        MabJobTaskDetails: MabJobTaskDetails,
        ProtectionIntentResource: ProtectionIntentResource,
        ProtectionIntent: ProtectionIntent,
        ProtectionPolicyResource: ProtectionPolicyResource,
        ProtectionPolicy: ProtectionPolicy,
        BackupEngineBaseResource: BackupEngineBaseResource,
        BackupEngineBase: BackupEngineBase,
        BackupEngineExtendedInfo: BackupEngineExtendedInfo,
        BackupRequestResource: BackupRequestResource,
        BackupRequest: BackupRequest,
        BackupResourceConfigResource: BackupResourceConfigResource,
        BackupResourceConfig: BackupResourceConfig,
        BackupResourceVaultConfigResource: BackupResourceVaultConfigResource,
        BackupResourceVaultConfig: BackupResourceVaultConfig,
        DpmBackupEngine: DpmBackupEngine,
        IaasVMBackupRequest: IaasVMBackupRequest,
        ILRRequestResource: ILRRequestResource,
        ILRRequest: ILRRequest,
        ProtectableContainerResource: ProtectableContainerResource,
        ProtectableContainer: ProtectableContainer,
        ProtectionContainerResource: ProtectionContainerResource,
        ProtectionContainer: ProtectionContainer,
        RecoveryPointResource: RecoveryPointResource,
        RecoveryPoint: RecoveryPoint,
        RestoreRequestResource: RestoreRequestResource,
        RestoreRequest: RestoreRequest,
        WorkloadItemResource: WorkloadItemResource,
        WorkloadItem: WorkloadItem,
        WorkloadProtectableItemResource: WorkloadProtectableItemResource,
        WorkloadProtectableItem: WorkloadProtectableItem,
        AzureFileShareProtectionPolicy: AzureFileShareProtectionPolicy,
        SchedulePolicy: SchedulePolicy,
        RetentionPolicy: RetentionPolicy,
        AzureFileShareRestoreRequest: AzureFileShareRestoreRequest,
        RestoreFileSpecs: RestoreFileSpecs,
        TargetAFSRestoreInfo: TargetAFSRestoreInfo,
        AzureIaaSClassicComputeVMProtectedItem: AzureIaaSClassicComputeVMProtectedItem,
        AzureIaaSComputeVMProtectedItem: AzureIaaSComputeVMProtectedItem,
        AzureIaaSVMJob: AzureIaaSVMJob,
        AzureIaaSVMErrorInfo: AzureIaaSVMErrorInfo,
        AzureIaaSVMJobExtendedInfo: AzureIaaSVMJobExtendedInfo,
        AzureIaaSVMJobTaskDetails: AzureIaaSVMJobTaskDetails,
        AzureIaaSVMProtectionPolicy: AzureIaaSVMProtectionPolicy,
        AzureRecoveryServiceVaultProtectionIntent: AzureRecoveryServiceVaultProtectionIntent,
        AzureResourceProtectionIntent: AzureResourceProtectionIntent,
        AzureSqlProtectionPolicy: AzureSqlProtectionPolicy,
        AzureStorageJob: AzureStorageJob,
        AzureStorageErrorInfo: AzureStorageErrorInfo,
        AzureStorageJobExtendedInfo: AzureStorageJobExtendedInfo,
        AzureStorageJobTaskDetails: AzureStorageJobTaskDetails,
        AzureVmWorkloadProtectionPolicy: AzureVmWorkloadProtectionPolicy,
        Settings: Settings,
        SubProtectionPolicy: SubProtectionPolicy,
        AzureWorkloadAutoProtectionIntent: AzureWorkloadAutoProtectionIntent,
        AzureWorkloadJob: AzureWorkloadJob,
        AzureWorkloadErrorInfo: AzureWorkloadErrorInfo,
        AzureWorkloadJobExtendedInfo: AzureWorkloadJobExtendedInfo,
        AzureWorkloadJobTaskDetails: AzureWorkloadJobTaskDetails,
        AzureWorkloadRestoreRequest: AzureWorkloadRestoreRequest,
        AzureWorkloadSAPHanaRestoreRequest: AzureWorkloadSAPHanaRestoreRequest,
        TargetRestoreInfo: TargetRestoreInfo,
        AzureWorkloadSQLAutoProtectionIntent: AzureWorkloadSQLAutoProtectionIntent,
        AzureWorkloadSQLRestoreRequest: AzureWorkloadSQLRestoreRequest,
        SQLDataDirectoryMapping: SQLDataDirectoryMapping,
        DpmJob: DpmJob,
        DpmErrorInfo: DpmErrorInfo,
        DpmJobExtendedInfo: DpmJobExtendedInfo,
        DpmJobTaskDetails: DpmJobTaskDetails,
        GenericProtectionPolicy: GenericProtectionPolicy,
        IaasVMRestoreRequest: IaasVMRestoreRequest,
        EncryptionDetails: EncryptionDetails,
        LogSchedulePolicy: LogSchedulePolicy,
        LongTermRetentionPolicy: LongTermRetentionPolicy,
        DailyRetentionSchedule: DailyRetentionSchedule,
        RetentionDuration: RetentionDuration,
        WeeklyRetentionSchedule: WeeklyRetentionSchedule,
        MonthlyRetentionSchedule: MonthlyRetentionSchedule,
        DailyRetentionFormat: DailyRetentionFormat,
        Day: Day,
        WeeklyRetentionFormat: WeeklyRetentionFormat,
        YearlyRetentionSchedule: YearlyRetentionSchedule,
        LongTermSchedulePolicy: LongTermSchedulePolicy,
        MabProtectionPolicy: MabProtectionPolicy,
        SimpleRetentionPolicy: SimpleRetentionPolicy,
        SimpleSchedulePolicy: SimpleSchedulePolicy,
        AzureBackupServerContainer: AzureBackupServerContainer,
        DPMContainerExtendedInfo: DPMContainerExtendedInfo,
        AzureBackupServerEngine: AzureBackupServerEngine,
        AzureFileShareBackupRequest: AzureFileShareBackupRequest,
        AzureFileShareProtectableItem: AzureFileShareProtectableItem,
        AzureFileShareRecoveryPoint: AzureFileShareRecoveryPoint,
        AzureSqlContainer: AzureSqlContainer,
        AzureStorageContainer: AzureStorageContainer,
        AzureStorageProtectableContainer: AzureStorageProtectableContainer,
        AzureVMAppContainerProtectableContainer: AzureVMAppContainerProtectableContainer,
        AzureVmWorkloadItem: AzureVmWorkloadItem,
        AzureVmWorkloadProtectableItem: AzureVmWorkloadProtectableItem,
        PreBackupValidation: PreBackupValidation,
        AzureVmWorkloadSAPHanaDatabaseProtectableItem: AzureVmWorkloadSAPHanaDatabaseProtectableItem,
        AzureVmWorkloadSAPHanaDatabaseWorkloadItem: AzureVmWorkloadSAPHanaDatabaseWorkloadItem,
        AzureVmWorkloadSAPHanaSystemProtectableItem: AzureVmWorkloadSAPHanaSystemProtectableItem,
        AzureVmWorkloadSAPHanaSystemWorkloadItem: AzureVmWorkloadSAPHanaSystemWorkloadItem,
        AzureVmWorkloadSQLAvailabilityGroupProtectableItem: AzureVmWorkloadSQLAvailabilityGroupProtectableItem,
        AzureVmWorkloadSQLDatabaseProtectableItem: AzureVmWorkloadSQLDatabaseProtectableItem,
        AzureVmWorkloadSQLDatabaseWorkloadItem: AzureVmWorkloadSQLDatabaseWorkloadItem,
        AzureVmWorkloadSQLInstanceProtectableItem: AzureVmWorkloadSQLInstanceProtectableItem,
        AzureVmWorkloadSQLInstanceWorkloadItem: AzureVmWorkloadSQLInstanceWorkloadItem,
        SQLDataDirectory: SQLDataDirectory,
        AzureWorkloadBackupRequest: AzureWorkloadBackupRequest,
        AzureWorkloadContainer: AzureWorkloadContainer,
        AzureWorkloadContainerExtendedInfo: AzureWorkloadContainerExtendedInfo,
        InquiryInfo: InquiryInfo,
        WorkloadInquiryDetails: WorkloadInquiryDetails,
        InquiryValidation: InquiryValidation,
        DistributedNodesInfo: DistributedNodesInfo,
        AzureWorkloadRecoveryPoint: AzureWorkloadRecoveryPoint,
        AzureWorkloadSAPHanaRecoveryPoint: AzureWorkloadSAPHanaRecoveryPoint,
        AzureWorkloadSQLRecoveryPoint: AzureWorkloadSQLRecoveryPoint,
        AzureWorkloadSQLRecoveryPointExtendedInfo: AzureWorkloadSQLRecoveryPointExtendedInfo,
        DpmContainer: DpmContainer,
        GenericContainer: GenericContainer,
        GenericContainerExtendedInfo: GenericContainerExtendedInfo,
        ContainerIdentityInfo: ContainerIdentityInfo,
        GenericRecoveryPoint: GenericRecoveryPoint,
        IaaSVMContainer: IaaSVMContainer,
        IaasVMILRRegistrationRequest: IaasVMILRRegistrationRequest,
        IaaSVMProtectableItem: IaaSVMProtectableItem,
        IaasVMRecoveryPoint: IaasVMRecoveryPoint,
        KeyAndSecretDetails: KeyAndSecretDetails,
        KEKDetails: KEKDetails,
        BEKDetails: BEKDetails,
        RecoveryPointTierInformation: RecoveryPointTierInformation,
        MabContainer: MabContainer,
        MabContainerExtendedInfo: MabContainerExtendedInfo,
        MABContainerHealthDetails: MABContainerHealthDetails,
        AzureWorkloadSAPHanaPointInTimeRestoreRequest: AzureWorkloadSAPHanaPointInTimeRestoreRequest,
        AzureWorkloadSQLPointInTimeRestoreRequest: AzureWorkloadSQLPointInTimeRestoreRequest,
        AzureIaaSClassicComputeVMContainer: AzureIaaSClassicComputeVMContainer,
        AzureIaaSClassicComputeVMProtectableItem: AzureIaaSClassicComputeVMProtectableItem,
        AzureIaaSComputeVMContainer: AzureIaaSComputeVMContainer,
        AzureIaaSComputeVMProtectableItem: AzureIaaSComputeVMProtectableItem,
        AzureSQLAGWorkloadContainerProtectionContainer: AzureSQLAGWorkloadContainerProtectionContainer,
        AzureVMAppContainerProtectionContainer: AzureVMAppContainerProtectionContainer,
        AzureWorkloadSAPHanaPointInTimeRecoveryPoint: AzureWorkloadSAPHanaPointInTimeRecoveryPoint,
        PointInTimeRange: PointInTimeRange,
        AzureWorkloadSQLPointInTimeRecoveryPoint: AzureWorkloadSQLPointInTimeRecoveryPoint
    });

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    /** Class representing a ProtectedItems. */
    var ProtectedItems = /** @class */ (function () {
        /**
         * Create a ProtectedItems.
         * @param {RecoveryServicesBackupClientContext} client Reference to the service client.
         */
        function ProtectedItems(client) {
            this.client = client;
        }
        ProtectedItems.prototype.get = function (vaultName$$1, resourceGroupName$$1, fabricName$$1, containerName$$1, protectedItemName$$1, options, callback) {
            return this.client.sendOperationRequest({
                vaultName: vaultName$$1,
                resourceGroupName: resourceGroupName$$1,
                fabricName: fabricName$$1,
                containerName: containerName$$1,
                protectedItemName: protectedItemName$$1,
                options: options
            }, getOperationSpec$9, callback);
        };
        ProtectedItems.prototype.createOrUpdate = function (vaultName$$1, resourceGroupName$$1, fabricName$$1, containerName$$1, protectedItemName$$1, parameters, options, callback) {
            return this.client.sendOperationRequest({
                vaultName: vaultName$$1,
                resourceGroupName: resourceGroupName$$1,
                fabricName: fabricName$$1,
                containerName: containerName$$1,
                protectedItemName: protectedItemName$$1,
                parameters: parameters,
                options: options
            }, createOrUpdateOperationSpec$1, callback);
        };
        ProtectedItems.prototype.deleteMethod = function (vaultName$$1, resourceGroupName$$1, fabricName$$1, containerName$$1, protectedItemName$$1, options, callback) {
            return this.client.sendOperationRequest({
                vaultName: vaultName$$1,
                resourceGroupName: resourceGroupName$$1,
                fabricName: fabricName$$1,
                containerName: containerName$$1,
                protectedItemName: protectedItemName$$1,
                options: options
            }, deleteMethodOperationSpec$1, callback);
        };
        return ProtectedItems;
    }());
    // Operation Specifications
    var serializer$j = new msRest.Serializer(Mappers$j);
    var getOperationSpec$9 = {
        httpMethod: "GET",
        path: "Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/protectionContainers/{containerName}/protectedItems/{protectedItemName}",
        urlParameters: [
            vaultName,
            resourceGroupName,
            subscriptionId,
            fabricName,
            containerName,
            protectedItemName
        ],
        queryParameters: [
            apiVersion1,
            filter
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            200: {
                bodyMapper: ProtectedItemResource
            },
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer$j
    };
    var createOrUpdateOperationSpec$1 = {
        httpMethod: "PUT",
        path: "Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/protectionContainers/{containerName}/protectedItems/{protectedItemName}",
        urlParameters: [
            vaultName,
            resourceGroupName,
            subscriptionId,
            fabricName,
            containerName,
            protectedItemName
        ],
        queryParameters: [
            apiVersion1
        ],
        headerParameters: [
            acceptLanguage
        ],
        requestBody: {
            parameterPath: "parameters",
            mapper: __assign({}, ProtectedItemResource, { required: true })
        },
        responses: {
            200: {
                bodyMapper: ProtectedItemResource
            },
            202: {},
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer$j
    };
    var deleteMethodOperationSpec$1 = {
        httpMethod: "DELETE",
        path: "Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/protectionContainers/{containerName}/protectedItems/{protectedItemName}",
        urlParameters: [
            vaultName,
            resourceGroupName,
            subscriptionId,
            fabricName,
            containerName,
            protectedItemName
        ],
        queryParameters: [
            apiVersion1
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            202: {},
            204: {},
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer$j
    };

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */

    var Mappers$k = /*#__PURE__*/Object.freeze({
        discriminators: discriminators,
        BackupRequestResource: BackupRequestResource,
        Resource: Resource,
        BaseResource: BaseResource,
        BackupRequest: BackupRequest,
        CloudError: CloudError,
        JobResource: JobResource,
        Job: Job,
        MabJob: MabJob,
        MabErrorInfo: MabErrorInfo,
        MabJobExtendedInfo: MabJobExtendedInfo,
        MabJobTaskDetails: MabJobTaskDetails,
        ProtectedItemResource: ProtectedItemResource,
        ProtectedItem: ProtectedItem,
        ProtectionIntentResource: ProtectionIntentResource,
        ProtectionIntent: ProtectionIntent,
        ProtectionPolicyResource: ProtectionPolicyResource,
        ProtectionPolicy: ProtectionPolicy,
        AzureFileShareBackupRequest: AzureFileShareBackupRequest,
        AzureWorkloadBackupRequest: AzureWorkloadBackupRequest,
        BackupEngineBaseResource: BackupEngineBaseResource,
        BackupEngineBase: BackupEngineBase,
        BackupEngineExtendedInfo: BackupEngineExtendedInfo,
        BackupResourceConfigResource: BackupResourceConfigResource,
        BackupResourceConfig: BackupResourceConfig,
        BackupResourceVaultConfigResource: BackupResourceVaultConfigResource,
        BackupResourceVaultConfig: BackupResourceVaultConfig,
        DpmBackupEngine: DpmBackupEngine,
        IaasVMBackupRequest: IaasVMBackupRequest,
        ILRRequestResource: ILRRequestResource,
        ILRRequest: ILRRequest,
        ProtectableContainerResource: ProtectableContainerResource,
        ProtectableContainer: ProtectableContainer,
        ProtectionContainerResource: ProtectionContainerResource,
        ProtectionContainer: ProtectionContainer,
        RecoveryPointResource: RecoveryPointResource,
        RecoveryPoint: RecoveryPoint,
        RestoreRequestResource: RestoreRequestResource,
        RestoreRequest: RestoreRequest,
        WorkloadItemResource: WorkloadItemResource,
        WorkloadItem: WorkloadItem,
        WorkloadProtectableItemResource: WorkloadProtectableItemResource,
        WorkloadProtectableItem: WorkloadProtectableItem,
        AzureFileshareProtectedItem: AzureFileshareProtectedItem,
        AzureFileshareProtectedItemExtendedInfo: AzureFileshareProtectedItemExtendedInfo,
        AzureFileShareProtectionPolicy: AzureFileShareProtectionPolicy,
        SchedulePolicy: SchedulePolicy,
        RetentionPolicy: RetentionPolicy,
        AzureFileShareRestoreRequest: AzureFileShareRestoreRequest,
        RestoreFileSpecs: RestoreFileSpecs,
        TargetAFSRestoreInfo: TargetAFSRestoreInfo,
        AzureIaaSVMJob: AzureIaaSVMJob,
        AzureIaaSVMErrorInfo: AzureIaaSVMErrorInfo,
        AzureIaaSVMJobExtendedInfo: AzureIaaSVMJobExtendedInfo,
        AzureIaaSVMJobTaskDetails: AzureIaaSVMJobTaskDetails,
        AzureIaaSVMProtectedItem: AzureIaaSVMProtectedItem,
        AzureIaaSVMHealthDetails: AzureIaaSVMHealthDetails,
        AzureIaaSVMProtectedItemExtendedInfo: AzureIaaSVMProtectedItemExtendedInfo,
        AzureIaaSVMProtectionPolicy: AzureIaaSVMProtectionPolicy,
        AzureRecoveryServiceVaultProtectionIntent: AzureRecoveryServiceVaultProtectionIntent,
        AzureResourceProtectionIntent: AzureResourceProtectionIntent,
        AzureSqlProtectedItem: AzureSqlProtectedItem,
        AzureSqlProtectedItemExtendedInfo: AzureSqlProtectedItemExtendedInfo,
        AzureSqlProtectionPolicy: AzureSqlProtectionPolicy,
        AzureStorageJob: AzureStorageJob,
        AzureStorageErrorInfo: AzureStorageErrorInfo,
        AzureStorageJobExtendedInfo: AzureStorageJobExtendedInfo,
        AzureStorageJobTaskDetails: AzureStorageJobTaskDetails,
        AzureVmWorkloadProtectedItem: AzureVmWorkloadProtectedItem,
        ErrorDetail: ErrorDetail,
        AzureVmWorkloadProtectedItemExtendedInfo: AzureVmWorkloadProtectedItemExtendedInfo,
        AzureVmWorkloadProtectionPolicy: AzureVmWorkloadProtectionPolicy,
        Settings: Settings,
        SubProtectionPolicy: SubProtectionPolicy,
        AzureVmWorkloadSAPHanaDatabaseProtectedItem: AzureVmWorkloadSAPHanaDatabaseProtectedItem,
        AzureVmWorkloadSQLDatabaseProtectedItem: AzureVmWorkloadSQLDatabaseProtectedItem,
        AzureWorkloadAutoProtectionIntent: AzureWorkloadAutoProtectionIntent,
        AzureWorkloadJob: AzureWorkloadJob,
        AzureWorkloadErrorInfo: AzureWorkloadErrorInfo,
        AzureWorkloadJobExtendedInfo: AzureWorkloadJobExtendedInfo,
        AzureWorkloadJobTaskDetails: AzureWorkloadJobTaskDetails,
        AzureWorkloadRestoreRequest: AzureWorkloadRestoreRequest,
        AzureWorkloadSAPHanaRestoreRequest: AzureWorkloadSAPHanaRestoreRequest,
        TargetRestoreInfo: TargetRestoreInfo,
        AzureWorkloadSQLAutoProtectionIntent: AzureWorkloadSQLAutoProtectionIntent,
        AzureWorkloadSQLRestoreRequest: AzureWorkloadSQLRestoreRequest,
        SQLDataDirectoryMapping: SQLDataDirectoryMapping,
        DpmJob: DpmJob,
        DpmErrorInfo: DpmErrorInfo,
        DpmJobExtendedInfo: DpmJobExtendedInfo,
        DpmJobTaskDetails: DpmJobTaskDetails,
        DPMProtectedItem: DPMProtectedItem,
        DPMProtectedItemExtendedInfo: DPMProtectedItemExtendedInfo,
        GenericProtectedItem: GenericProtectedItem,
        GenericProtectionPolicy: GenericProtectionPolicy,
        IaasVMRestoreRequest: IaasVMRestoreRequest,
        EncryptionDetails: EncryptionDetails,
        LogSchedulePolicy: LogSchedulePolicy,
        LongTermRetentionPolicy: LongTermRetentionPolicy,
        DailyRetentionSchedule: DailyRetentionSchedule,
        RetentionDuration: RetentionDuration,
        WeeklyRetentionSchedule: WeeklyRetentionSchedule,
        MonthlyRetentionSchedule: MonthlyRetentionSchedule,
        DailyRetentionFormat: DailyRetentionFormat,
        Day: Day,
        WeeklyRetentionFormat: WeeklyRetentionFormat,
        YearlyRetentionSchedule: YearlyRetentionSchedule,
        LongTermSchedulePolicy: LongTermSchedulePolicy,
        MabFileFolderProtectedItem: MabFileFolderProtectedItem,
        MabFileFolderProtectedItemExtendedInfo: MabFileFolderProtectedItemExtendedInfo,
        MabProtectionPolicy: MabProtectionPolicy,
        SimpleRetentionPolicy: SimpleRetentionPolicy,
        SimpleSchedulePolicy: SimpleSchedulePolicy,
        AzureBackupServerContainer: AzureBackupServerContainer,
        DPMContainerExtendedInfo: DPMContainerExtendedInfo,
        AzureBackupServerEngine: AzureBackupServerEngine,
        AzureFileShareProtectableItem: AzureFileShareProtectableItem,
        AzureFileShareRecoveryPoint: AzureFileShareRecoveryPoint,
        AzureSqlContainer: AzureSqlContainer,
        AzureStorageContainer: AzureStorageContainer,
        AzureStorageProtectableContainer: AzureStorageProtectableContainer,
        AzureVMAppContainerProtectableContainer: AzureVMAppContainerProtectableContainer,
        AzureVmWorkloadItem: AzureVmWorkloadItem,
        AzureVmWorkloadProtectableItem: AzureVmWorkloadProtectableItem,
        PreBackupValidation: PreBackupValidation,
        AzureVmWorkloadSAPHanaDatabaseProtectableItem: AzureVmWorkloadSAPHanaDatabaseProtectableItem,
        AzureVmWorkloadSAPHanaDatabaseWorkloadItem: AzureVmWorkloadSAPHanaDatabaseWorkloadItem,
        AzureVmWorkloadSAPHanaSystemProtectableItem: AzureVmWorkloadSAPHanaSystemProtectableItem,
        AzureVmWorkloadSAPHanaSystemWorkloadItem: AzureVmWorkloadSAPHanaSystemWorkloadItem,
        AzureVmWorkloadSQLAvailabilityGroupProtectableItem: AzureVmWorkloadSQLAvailabilityGroupProtectableItem,
        AzureVmWorkloadSQLDatabaseProtectableItem: AzureVmWorkloadSQLDatabaseProtectableItem,
        AzureVmWorkloadSQLDatabaseWorkloadItem: AzureVmWorkloadSQLDatabaseWorkloadItem,
        AzureVmWorkloadSQLInstanceProtectableItem: AzureVmWorkloadSQLInstanceProtectableItem,
        AzureVmWorkloadSQLInstanceWorkloadItem: AzureVmWorkloadSQLInstanceWorkloadItem,
        SQLDataDirectory: SQLDataDirectory,
        AzureWorkloadContainer: AzureWorkloadContainer,
        AzureWorkloadContainerExtendedInfo: AzureWorkloadContainerExtendedInfo,
        InquiryInfo: InquiryInfo,
        WorkloadInquiryDetails: WorkloadInquiryDetails,
        InquiryValidation: InquiryValidation,
        DistributedNodesInfo: DistributedNodesInfo,
        AzureWorkloadRecoveryPoint: AzureWorkloadRecoveryPoint,
        AzureWorkloadSAPHanaRecoveryPoint: AzureWorkloadSAPHanaRecoveryPoint,
        AzureWorkloadSQLRecoveryPoint: AzureWorkloadSQLRecoveryPoint,
        AzureWorkloadSQLRecoveryPointExtendedInfo: AzureWorkloadSQLRecoveryPointExtendedInfo,
        DpmContainer: DpmContainer,
        GenericContainer: GenericContainer,
        GenericContainerExtendedInfo: GenericContainerExtendedInfo,
        ContainerIdentityInfo: ContainerIdentityInfo,
        GenericRecoveryPoint: GenericRecoveryPoint,
        IaaSVMContainer: IaaSVMContainer,
        IaasVMILRRegistrationRequest: IaasVMILRRegistrationRequest,
        IaaSVMProtectableItem: IaaSVMProtectableItem,
        IaasVMRecoveryPoint: IaasVMRecoveryPoint,
        KeyAndSecretDetails: KeyAndSecretDetails,
        KEKDetails: KEKDetails,
        BEKDetails: BEKDetails,
        RecoveryPointTierInformation: RecoveryPointTierInformation,
        MabContainer: MabContainer,
        MabContainerExtendedInfo: MabContainerExtendedInfo,
        MABContainerHealthDetails: MABContainerHealthDetails,
        AzureIaaSClassicComputeVMProtectedItem: AzureIaaSClassicComputeVMProtectedItem,
        AzureIaaSComputeVMProtectedItem: AzureIaaSComputeVMProtectedItem,
        AzureWorkloadSAPHanaPointInTimeRestoreRequest: AzureWorkloadSAPHanaPointInTimeRestoreRequest,
        AzureWorkloadSQLPointInTimeRestoreRequest: AzureWorkloadSQLPointInTimeRestoreRequest,
        AzureIaaSClassicComputeVMContainer: AzureIaaSClassicComputeVMContainer,
        AzureIaaSClassicComputeVMProtectableItem: AzureIaaSClassicComputeVMProtectableItem,
        AzureIaaSComputeVMContainer: AzureIaaSComputeVMContainer,
        AzureIaaSComputeVMProtectableItem: AzureIaaSComputeVMProtectableItem,
        AzureSQLAGWorkloadContainerProtectionContainer: AzureSQLAGWorkloadContainerProtectionContainer,
        AzureVMAppContainerProtectionContainer: AzureVMAppContainerProtectionContainer,
        AzureWorkloadSAPHanaPointInTimeRecoveryPoint: AzureWorkloadSAPHanaPointInTimeRecoveryPoint,
        PointInTimeRange: PointInTimeRange,
        AzureWorkloadSQLPointInTimeRecoveryPoint: AzureWorkloadSQLPointInTimeRecoveryPoint
    });

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    /** Class representing a Backups. */
    var Backups = /** @class */ (function () {
        /**
         * Create a Backups.
         * @param {RecoveryServicesBackupClientContext} client Reference to the service client.
         */
        function Backups(client) {
            this.client = client;
        }
        Backups.prototype.trigger = function (vaultName$$1, resourceGroupName$$1, fabricName$$1, containerName$$1, protectedItemName$$1, parameters, options, callback) {
            return this.client.sendOperationRequest({
                vaultName: vaultName$$1,
                resourceGroupName: resourceGroupName$$1,
                fabricName: fabricName$$1,
                containerName: containerName$$1,
                protectedItemName: protectedItemName$$1,
                parameters: parameters,
                options: options
            }, triggerOperationSpec, callback);
        };
        return Backups;
    }());
    // Operation Specifications
    var serializer$k = new msRest.Serializer(Mappers$k);
    var triggerOperationSpec = {
        httpMethod: "POST",
        path: "Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/protectionContainers/{containerName}/protectedItems/{protectedItemName}/backup",
        urlParameters: [
            vaultName,
            resourceGroupName,
            subscriptionId,
            fabricName,
            containerName,
            protectedItemName
        ],
        queryParameters: [
            apiVersion1
        ],
        headerParameters: [
            acceptLanguage
        ],
        requestBody: {
            parameterPath: "parameters",
            mapper: __assign({}, BackupRequestResource, { required: true })
        },
        responses: {
            202: {},
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer$k
    };

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */

    var Mappers$l = /*#__PURE__*/Object.freeze({
        discriminators: discriminators,
        ProtectedItemResource: ProtectedItemResource,
        Resource: Resource,
        BaseResource: BaseResource,
        ProtectedItem: ProtectedItem,
        CloudError: CloudError,
        AzureFileshareProtectedItem: AzureFileshareProtectedItem,
        AzureFileshareProtectedItemExtendedInfo: AzureFileshareProtectedItemExtendedInfo,
        AzureIaaSVMProtectedItem: AzureIaaSVMProtectedItem,
        AzureIaaSVMHealthDetails: AzureIaaSVMHealthDetails,
        AzureIaaSVMProtectedItemExtendedInfo: AzureIaaSVMProtectedItemExtendedInfo,
        AzureSqlProtectedItem: AzureSqlProtectedItem,
        AzureSqlProtectedItemExtendedInfo: AzureSqlProtectedItemExtendedInfo,
        AzureVmWorkloadProtectedItem: AzureVmWorkloadProtectedItem,
        ErrorDetail: ErrorDetail,
        AzureVmWorkloadProtectedItemExtendedInfo: AzureVmWorkloadProtectedItemExtendedInfo,
        AzureVmWorkloadSAPHanaDatabaseProtectedItem: AzureVmWorkloadSAPHanaDatabaseProtectedItem,
        AzureVmWorkloadSQLDatabaseProtectedItem: AzureVmWorkloadSQLDatabaseProtectedItem,
        DPMProtectedItem: DPMProtectedItem,
        DPMProtectedItemExtendedInfo: DPMProtectedItemExtendedInfo,
        GenericProtectedItem: GenericProtectedItem,
        JobResource: JobResource,
        Job: Job,
        MabFileFolderProtectedItem: MabFileFolderProtectedItem,
        MabFileFolderProtectedItemExtendedInfo: MabFileFolderProtectedItemExtendedInfo,
        MabJob: MabJob,
        MabErrorInfo: MabErrorInfo,
        MabJobExtendedInfo: MabJobExtendedInfo,
        MabJobTaskDetails: MabJobTaskDetails,
        ProtectionIntentResource: ProtectionIntentResource,
        ProtectionIntent: ProtectionIntent,
        ProtectionPolicyResource: ProtectionPolicyResource,
        ProtectionPolicy: ProtectionPolicy,
        BackupEngineBaseResource: BackupEngineBaseResource,
        BackupEngineBase: BackupEngineBase,
        BackupEngineExtendedInfo: BackupEngineExtendedInfo,
        BackupRequestResource: BackupRequestResource,
        BackupRequest: BackupRequest,
        BackupResourceConfigResource: BackupResourceConfigResource,
        BackupResourceConfig: BackupResourceConfig,
        BackupResourceVaultConfigResource: BackupResourceVaultConfigResource,
        BackupResourceVaultConfig: BackupResourceVaultConfig,
        DpmBackupEngine: DpmBackupEngine,
        IaasVMBackupRequest: IaasVMBackupRequest,
        ILRRequestResource: ILRRequestResource,
        ILRRequest: ILRRequest,
        ProtectableContainerResource: ProtectableContainerResource,
        ProtectableContainer: ProtectableContainer,
        ProtectionContainerResource: ProtectionContainerResource,
        ProtectionContainer: ProtectionContainer,
        RecoveryPointResource: RecoveryPointResource,
        RecoveryPoint: RecoveryPoint,
        RestoreRequestResource: RestoreRequestResource,
        RestoreRequest: RestoreRequest,
        WorkloadItemResource: WorkloadItemResource,
        WorkloadItem: WorkloadItem,
        WorkloadProtectableItemResource: WorkloadProtectableItemResource,
        WorkloadProtectableItem: WorkloadProtectableItem,
        AzureFileShareProtectionPolicy: AzureFileShareProtectionPolicy,
        SchedulePolicy: SchedulePolicy,
        RetentionPolicy: RetentionPolicy,
        AzureFileShareRestoreRequest: AzureFileShareRestoreRequest,
        RestoreFileSpecs: RestoreFileSpecs,
        TargetAFSRestoreInfo: TargetAFSRestoreInfo,
        AzureIaaSClassicComputeVMProtectedItem: AzureIaaSClassicComputeVMProtectedItem,
        AzureIaaSComputeVMProtectedItem: AzureIaaSComputeVMProtectedItem,
        AzureIaaSVMJob: AzureIaaSVMJob,
        AzureIaaSVMErrorInfo: AzureIaaSVMErrorInfo,
        AzureIaaSVMJobExtendedInfo: AzureIaaSVMJobExtendedInfo,
        AzureIaaSVMJobTaskDetails: AzureIaaSVMJobTaskDetails,
        AzureIaaSVMProtectionPolicy: AzureIaaSVMProtectionPolicy,
        AzureRecoveryServiceVaultProtectionIntent: AzureRecoveryServiceVaultProtectionIntent,
        AzureResourceProtectionIntent: AzureResourceProtectionIntent,
        AzureSqlProtectionPolicy: AzureSqlProtectionPolicy,
        AzureStorageJob: AzureStorageJob,
        AzureStorageErrorInfo: AzureStorageErrorInfo,
        AzureStorageJobExtendedInfo: AzureStorageJobExtendedInfo,
        AzureStorageJobTaskDetails: AzureStorageJobTaskDetails,
        AzureVmWorkloadProtectionPolicy: AzureVmWorkloadProtectionPolicy,
        Settings: Settings,
        SubProtectionPolicy: SubProtectionPolicy,
        AzureWorkloadAutoProtectionIntent: AzureWorkloadAutoProtectionIntent,
        AzureWorkloadJob: AzureWorkloadJob,
        AzureWorkloadErrorInfo: AzureWorkloadErrorInfo,
        AzureWorkloadJobExtendedInfo: AzureWorkloadJobExtendedInfo,
        AzureWorkloadJobTaskDetails: AzureWorkloadJobTaskDetails,
        AzureWorkloadRestoreRequest: AzureWorkloadRestoreRequest,
        AzureWorkloadSAPHanaRestoreRequest: AzureWorkloadSAPHanaRestoreRequest,
        TargetRestoreInfo: TargetRestoreInfo,
        AzureWorkloadSQLAutoProtectionIntent: AzureWorkloadSQLAutoProtectionIntent,
        AzureWorkloadSQLRestoreRequest: AzureWorkloadSQLRestoreRequest,
        SQLDataDirectoryMapping: SQLDataDirectoryMapping,
        DpmJob: DpmJob,
        DpmErrorInfo: DpmErrorInfo,
        DpmJobExtendedInfo: DpmJobExtendedInfo,
        DpmJobTaskDetails: DpmJobTaskDetails,
        GenericProtectionPolicy: GenericProtectionPolicy,
        IaasVMRestoreRequest: IaasVMRestoreRequest,
        EncryptionDetails: EncryptionDetails,
        LogSchedulePolicy: LogSchedulePolicy,
        LongTermRetentionPolicy: LongTermRetentionPolicy,
        DailyRetentionSchedule: DailyRetentionSchedule,
        RetentionDuration: RetentionDuration,
        WeeklyRetentionSchedule: WeeklyRetentionSchedule,
        MonthlyRetentionSchedule: MonthlyRetentionSchedule,
        DailyRetentionFormat: DailyRetentionFormat,
        Day: Day,
        WeeklyRetentionFormat: WeeklyRetentionFormat,
        YearlyRetentionSchedule: YearlyRetentionSchedule,
        LongTermSchedulePolicy: LongTermSchedulePolicy,
        MabProtectionPolicy: MabProtectionPolicy,
        SimpleRetentionPolicy: SimpleRetentionPolicy,
        SimpleSchedulePolicy: SimpleSchedulePolicy,
        AzureBackupServerContainer: AzureBackupServerContainer,
        DPMContainerExtendedInfo: DPMContainerExtendedInfo,
        AzureBackupServerEngine: AzureBackupServerEngine,
        AzureFileShareBackupRequest: AzureFileShareBackupRequest,
        AzureFileShareProtectableItem: AzureFileShareProtectableItem,
        AzureFileShareRecoveryPoint: AzureFileShareRecoveryPoint,
        AzureSqlContainer: AzureSqlContainer,
        AzureStorageContainer: AzureStorageContainer,
        AzureStorageProtectableContainer: AzureStorageProtectableContainer,
        AzureVMAppContainerProtectableContainer: AzureVMAppContainerProtectableContainer,
        AzureVmWorkloadItem: AzureVmWorkloadItem,
        AzureVmWorkloadProtectableItem: AzureVmWorkloadProtectableItem,
        PreBackupValidation: PreBackupValidation,
        AzureVmWorkloadSAPHanaDatabaseProtectableItem: AzureVmWorkloadSAPHanaDatabaseProtectableItem,
        AzureVmWorkloadSAPHanaDatabaseWorkloadItem: AzureVmWorkloadSAPHanaDatabaseWorkloadItem,
        AzureVmWorkloadSAPHanaSystemProtectableItem: AzureVmWorkloadSAPHanaSystemProtectableItem,
        AzureVmWorkloadSAPHanaSystemWorkloadItem: AzureVmWorkloadSAPHanaSystemWorkloadItem,
        AzureVmWorkloadSQLAvailabilityGroupProtectableItem: AzureVmWorkloadSQLAvailabilityGroupProtectableItem,
        AzureVmWorkloadSQLDatabaseProtectableItem: AzureVmWorkloadSQLDatabaseProtectableItem,
        AzureVmWorkloadSQLDatabaseWorkloadItem: AzureVmWorkloadSQLDatabaseWorkloadItem,
        AzureVmWorkloadSQLInstanceProtectableItem: AzureVmWorkloadSQLInstanceProtectableItem,
        AzureVmWorkloadSQLInstanceWorkloadItem: AzureVmWorkloadSQLInstanceWorkloadItem,
        SQLDataDirectory: SQLDataDirectory,
        AzureWorkloadBackupRequest: AzureWorkloadBackupRequest,
        AzureWorkloadContainer: AzureWorkloadContainer,
        AzureWorkloadContainerExtendedInfo: AzureWorkloadContainerExtendedInfo,
        InquiryInfo: InquiryInfo,
        WorkloadInquiryDetails: WorkloadInquiryDetails,
        InquiryValidation: InquiryValidation,
        DistributedNodesInfo: DistributedNodesInfo,
        AzureWorkloadRecoveryPoint: AzureWorkloadRecoveryPoint,
        AzureWorkloadSAPHanaRecoveryPoint: AzureWorkloadSAPHanaRecoveryPoint,
        AzureWorkloadSQLRecoveryPoint: AzureWorkloadSQLRecoveryPoint,
        AzureWorkloadSQLRecoveryPointExtendedInfo: AzureWorkloadSQLRecoveryPointExtendedInfo,
        DpmContainer: DpmContainer,
        GenericContainer: GenericContainer,
        GenericContainerExtendedInfo: GenericContainerExtendedInfo,
        ContainerIdentityInfo: ContainerIdentityInfo,
        GenericRecoveryPoint: GenericRecoveryPoint,
        IaaSVMContainer: IaaSVMContainer,
        IaasVMILRRegistrationRequest: IaasVMILRRegistrationRequest,
        IaaSVMProtectableItem: IaaSVMProtectableItem,
        IaasVMRecoveryPoint: IaasVMRecoveryPoint,
        KeyAndSecretDetails: KeyAndSecretDetails,
        KEKDetails: KEKDetails,
        BEKDetails: BEKDetails,
        RecoveryPointTierInformation: RecoveryPointTierInformation,
        MabContainer: MabContainer,
        MabContainerExtendedInfo: MabContainerExtendedInfo,
        MABContainerHealthDetails: MABContainerHealthDetails,
        AzureWorkloadSAPHanaPointInTimeRestoreRequest: AzureWorkloadSAPHanaPointInTimeRestoreRequest,
        AzureWorkloadSQLPointInTimeRestoreRequest: AzureWorkloadSQLPointInTimeRestoreRequest,
        AzureIaaSClassicComputeVMContainer: AzureIaaSClassicComputeVMContainer,
        AzureIaaSClassicComputeVMProtectableItem: AzureIaaSClassicComputeVMProtectableItem,
        AzureIaaSComputeVMContainer: AzureIaaSComputeVMContainer,
        AzureIaaSComputeVMProtectableItem: AzureIaaSComputeVMProtectableItem,
        AzureSQLAGWorkloadContainerProtectionContainer: AzureSQLAGWorkloadContainerProtectionContainer,
        AzureVMAppContainerProtectionContainer: AzureVMAppContainerProtectionContainer,
        AzureWorkloadSAPHanaPointInTimeRecoveryPoint: AzureWorkloadSAPHanaPointInTimeRecoveryPoint,
        PointInTimeRange: PointInTimeRange,
        AzureWorkloadSQLPointInTimeRecoveryPoint: AzureWorkloadSQLPointInTimeRecoveryPoint
    });

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    /** Class representing a ProtectedItemOperationResults. */
    var ProtectedItemOperationResults = /** @class */ (function () {
        /**
         * Create a ProtectedItemOperationResults.
         * @param {RecoveryServicesBackupClientContext} client Reference to the service client.
         */
        function ProtectedItemOperationResults(client) {
            this.client = client;
        }
        ProtectedItemOperationResults.prototype.get = function (vaultName$$1, resourceGroupName$$1, fabricName$$1, containerName$$1, protectedItemName$$1, operationId$$1, options, callback) {
            return this.client.sendOperationRequest({
                vaultName: vaultName$$1,
                resourceGroupName: resourceGroupName$$1,
                fabricName: fabricName$$1,
                containerName: containerName$$1,
                protectedItemName: protectedItemName$$1,
                operationId: operationId$$1,
                options: options
            }, getOperationSpec$a, callback);
        };
        return ProtectedItemOperationResults;
    }());
    // Operation Specifications
    var serializer$l = new msRest.Serializer(Mappers$l);
    var getOperationSpec$a = {
        httpMethod: "GET",
        path: "Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/protectionContainers/{containerName}/protectedItems/{protectedItemName}/operationResults/{operationId}",
        urlParameters: [
            vaultName,
            resourceGroupName,
            subscriptionId,
            fabricName,
            containerName,
            protectedItemName,
            operationId
        ],
        queryParameters: [
            apiVersion1
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            200: {
                bodyMapper: ProtectedItemResource
            },
            202: {},
            204: {},
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer$l
    };

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */

    var Mappers$m = /*#__PURE__*/Object.freeze({
        discriminators: discriminators,
        OperationStatus: OperationStatus,
        OperationStatusError: OperationStatusError,
        OperationStatusExtendedInfo: OperationStatusExtendedInfo,
        CloudError: CloudError,
        OperationStatusJobExtendedInfo: OperationStatusJobExtendedInfo,
        OperationStatusJobsExtendedInfo: OperationStatusJobsExtendedInfo,
        OperationStatusProvisionILRExtendedInfo: OperationStatusProvisionILRExtendedInfo,
        InstantItemRecoveryTarget: InstantItemRecoveryTarget,
        ClientScriptForConnect: ClientScriptForConnect
    });

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    /** Class representing a ProtectedItemOperationStatuses. */
    var ProtectedItemOperationStatuses = /** @class */ (function () {
        /**
         * Create a ProtectedItemOperationStatuses.
         * @param {RecoveryServicesBackupClientContext} client Reference to the service client.
         */
        function ProtectedItemOperationStatuses(client) {
            this.client = client;
        }
        ProtectedItemOperationStatuses.prototype.get = function (vaultName$$1, resourceGroupName$$1, fabricName$$1, containerName$$1, protectedItemName$$1, operationId$$1, options, callback) {
            return this.client.sendOperationRequest({
                vaultName: vaultName$$1,
                resourceGroupName: resourceGroupName$$1,
                fabricName: fabricName$$1,
                containerName: containerName$$1,
                protectedItemName: protectedItemName$$1,
                operationId: operationId$$1,
                options: options
            }, getOperationSpec$b, callback);
        };
        return ProtectedItemOperationStatuses;
    }());
    // Operation Specifications
    var serializer$m = new msRest.Serializer(Mappers$m);
    var getOperationSpec$b = {
        httpMethod: "GET",
        path: "Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/protectionContainers/{containerName}/protectedItems/{protectedItemName}/operationsStatus/{operationId}",
        urlParameters: [
            vaultName,
            resourceGroupName,
            subscriptionId,
            fabricName,
            containerName,
            protectedItemName,
            operationId
        ],
        queryParameters: [
            apiVersion1
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            200: {
                bodyMapper: OperationStatus
            },
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer$m
    };

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */

    var Mappers$n = /*#__PURE__*/Object.freeze({
        discriminators: discriminators,
        RecoveryPointResourceList: RecoveryPointResourceList,
        ResourceList: ResourceList,
        RecoveryPointResource: RecoveryPointResource,
        Resource: Resource,
        BaseResource: BaseResource,
        RecoveryPoint: RecoveryPoint,
        CloudError: CloudError,
        JobResource: JobResource,
        Job: Job,
        JobResourceList: JobResourceList,
        MabJob: MabJob,
        MabErrorInfo: MabErrorInfo,
        MabJobExtendedInfo: MabJobExtendedInfo,
        MabJobTaskDetails: MabJobTaskDetails,
        ProtectedItemResource: ProtectedItemResource,
        ProtectedItem: ProtectedItem,
        ProtectedItemResourceList: ProtectedItemResourceList,
        ProtectionIntentResource: ProtectionIntentResource,
        ProtectionIntent: ProtectionIntent,
        ProtectionIntentResourceList: ProtectionIntentResourceList,
        ProtectionPolicyResource: ProtectionPolicyResource,
        ProtectionPolicy: ProtectionPolicy,
        ProtectionPolicyResourceList: ProtectionPolicyResourceList,
        AzureFileShareRecoveryPoint: AzureFileShareRecoveryPoint,
        AzureWorkloadRecoveryPoint: AzureWorkloadRecoveryPoint,
        AzureWorkloadSAPHanaRecoveryPoint: AzureWorkloadSAPHanaRecoveryPoint,
        AzureWorkloadSQLRecoveryPoint: AzureWorkloadSQLRecoveryPoint,
        AzureWorkloadSQLRecoveryPointExtendedInfo: AzureWorkloadSQLRecoveryPointExtendedInfo,
        SQLDataDirectory: SQLDataDirectory,
        BackupEngineBaseResource: BackupEngineBaseResource,
        BackupEngineBase: BackupEngineBase,
        BackupEngineExtendedInfo: BackupEngineExtendedInfo,
        BackupEngineBaseResourceList: BackupEngineBaseResourceList,
        BackupRequestResource: BackupRequestResource,
        BackupRequest: BackupRequest,
        BackupResourceConfigResource: BackupResourceConfigResource,
        BackupResourceConfig: BackupResourceConfig,
        BackupResourceVaultConfigResource: BackupResourceVaultConfigResource,
        BackupResourceVaultConfig: BackupResourceVaultConfig,
        DpmBackupEngine: DpmBackupEngine,
        GenericRecoveryPoint: GenericRecoveryPoint,
        IaasVMBackupRequest: IaasVMBackupRequest,
        IaasVMRecoveryPoint: IaasVMRecoveryPoint,
        KeyAndSecretDetails: KeyAndSecretDetails,
        KEKDetails: KEKDetails,
        BEKDetails: BEKDetails,
        RecoveryPointTierInformation: RecoveryPointTierInformation,
        ILRRequestResource: ILRRequestResource,
        ILRRequest: ILRRequest,
        ProtectableContainerResource: ProtectableContainerResource,
        ProtectableContainer: ProtectableContainer,
        ProtectableContainerResourceList: ProtectableContainerResourceList,
        ProtectionContainerResource: ProtectionContainerResource,
        ProtectionContainer: ProtectionContainer,
        ProtectionContainerResourceList: ProtectionContainerResourceList,
        RestoreRequestResource: RestoreRequestResource,
        RestoreRequest: RestoreRequest,
        WorkloadItemResource: WorkloadItemResource,
        WorkloadItem: WorkloadItem,
        WorkloadItemResourceList: WorkloadItemResourceList,
        WorkloadProtectableItemResource: WorkloadProtectableItemResource,
        WorkloadProtectableItem: WorkloadProtectableItem,
        WorkloadProtectableItemResourceList: WorkloadProtectableItemResourceList,
        AzureFileshareProtectedItem: AzureFileshareProtectedItem,
        AzureFileshareProtectedItemExtendedInfo: AzureFileshareProtectedItemExtendedInfo,
        AzureFileShareProtectionPolicy: AzureFileShareProtectionPolicy,
        SchedulePolicy: SchedulePolicy,
        RetentionPolicy: RetentionPolicy,
        AzureFileShareRestoreRequest: AzureFileShareRestoreRequest,
        RestoreFileSpecs: RestoreFileSpecs,
        TargetAFSRestoreInfo: TargetAFSRestoreInfo,
        AzureIaaSVMJob: AzureIaaSVMJob,
        AzureIaaSVMErrorInfo: AzureIaaSVMErrorInfo,
        AzureIaaSVMJobExtendedInfo: AzureIaaSVMJobExtendedInfo,
        AzureIaaSVMJobTaskDetails: AzureIaaSVMJobTaskDetails,
        AzureIaaSVMProtectedItem: AzureIaaSVMProtectedItem,
        AzureIaaSVMHealthDetails: AzureIaaSVMHealthDetails,
        AzureIaaSVMProtectedItemExtendedInfo: AzureIaaSVMProtectedItemExtendedInfo,
        AzureIaaSVMProtectionPolicy: AzureIaaSVMProtectionPolicy,
        AzureRecoveryServiceVaultProtectionIntent: AzureRecoveryServiceVaultProtectionIntent,
        AzureResourceProtectionIntent: AzureResourceProtectionIntent,
        AzureSqlProtectedItem: AzureSqlProtectedItem,
        AzureSqlProtectedItemExtendedInfo: AzureSqlProtectedItemExtendedInfo,
        AzureSqlProtectionPolicy: AzureSqlProtectionPolicy,
        AzureStorageJob: AzureStorageJob,
        AzureStorageErrorInfo: AzureStorageErrorInfo,
        AzureStorageJobExtendedInfo: AzureStorageJobExtendedInfo,
        AzureStorageJobTaskDetails: AzureStorageJobTaskDetails,
        AzureVmWorkloadProtectedItem: AzureVmWorkloadProtectedItem,
        ErrorDetail: ErrorDetail,
        AzureVmWorkloadProtectedItemExtendedInfo: AzureVmWorkloadProtectedItemExtendedInfo,
        AzureVmWorkloadProtectionPolicy: AzureVmWorkloadProtectionPolicy,
        Settings: Settings,
        SubProtectionPolicy: SubProtectionPolicy,
        AzureVmWorkloadSAPHanaDatabaseProtectedItem: AzureVmWorkloadSAPHanaDatabaseProtectedItem,
        AzureVmWorkloadSQLDatabaseProtectedItem: AzureVmWorkloadSQLDatabaseProtectedItem,
        AzureWorkloadAutoProtectionIntent: AzureWorkloadAutoProtectionIntent,
        AzureWorkloadJob: AzureWorkloadJob,
        AzureWorkloadErrorInfo: AzureWorkloadErrorInfo,
        AzureWorkloadJobExtendedInfo: AzureWorkloadJobExtendedInfo,
        AzureWorkloadJobTaskDetails: AzureWorkloadJobTaskDetails,
        AzureWorkloadRestoreRequest: AzureWorkloadRestoreRequest,
        AzureWorkloadSAPHanaRestoreRequest: AzureWorkloadSAPHanaRestoreRequest,
        TargetRestoreInfo: TargetRestoreInfo,
        AzureWorkloadSQLAutoProtectionIntent: AzureWorkloadSQLAutoProtectionIntent,
        AzureWorkloadSQLRestoreRequest: AzureWorkloadSQLRestoreRequest,
        SQLDataDirectoryMapping: SQLDataDirectoryMapping,
        DpmJob: DpmJob,
        DpmErrorInfo: DpmErrorInfo,
        DpmJobExtendedInfo: DpmJobExtendedInfo,
        DpmJobTaskDetails: DpmJobTaskDetails,
        DPMProtectedItem: DPMProtectedItem,
        DPMProtectedItemExtendedInfo: DPMProtectedItemExtendedInfo,
        GenericProtectedItem: GenericProtectedItem,
        GenericProtectionPolicy: GenericProtectionPolicy,
        IaasVMRestoreRequest: IaasVMRestoreRequest,
        EncryptionDetails: EncryptionDetails,
        LogSchedulePolicy: LogSchedulePolicy,
        LongTermRetentionPolicy: LongTermRetentionPolicy,
        DailyRetentionSchedule: DailyRetentionSchedule,
        RetentionDuration: RetentionDuration,
        WeeklyRetentionSchedule: WeeklyRetentionSchedule,
        MonthlyRetentionSchedule: MonthlyRetentionSchedule,
        DailyRetentionFormat: DailyRetentionFormat,
        Day: Day,
        WeeklyRetentionFormat: WeeklyRetentionFormat,
        YearlyRetentionSchedule: YearlyRetentionSchedule,
        LongTermSchedulePolicy: LongTermSchedulePolicy,
        MabFileFolderProtectedItem: MabFileFolderProtectedItem,
        MabFileFolderProtectedItemExtendedInfo: MabFileFolderProtectedItemExtendedInfo,
        MabProtectionPolicy: MabProtectionPolicy,
        SimpleRetentionPolicy: SimpleRetentionPolicy,
        SimpleSchedulePolicy: SimpleSchedulePolicy,
        AzureBackupServerContainer: AzureBackupServerContainer,
        DPMContainerExtendedInfo: DPMContainerExtendedInfo,
        AzureBackupServerEngine: AzureBackupServerEngine,
        AzureFileShareBackupRequest: AzureFileShareBackupRequest,
        AzureFileShareProtectableItem: AzureFileShareProtectableItem,
        AzureSqlContainer: AzureSqlContainer,
        AzureStorageContainer: AzureStorageContainer,
        AzureStorageProtectableContainer: AzureStorageProtectableContainer,
        AzureVMAppContainerProtectableContainer: AzureVMAppContainerProtectableContainer,
        AzureVmWorkloadItem: AzureVmWorkloadItem,
        AzureVmWorkloadProtectableItem: AzureVmWorkloadProtectableItem,
        PreBackupValidation: PreBackupValidation,
        AzureVmWorkloadSAPHanaDatabaseProtectableItem: AzureVmWorkloadSAPHanaDatabaseProtectableItem,
        AzureVmWorkloadSAPHanaDatabaseWorkloadItem: AzureVmWorkloadSAPHanaDatabaseWorkloadItem,
        AzureVmWorkloadSAPHanaSystemProtectableItem: AzureVmWorkloadSAPHanaSystemProtectableItem,
        AzureVmWorkloadSAPHanaSystemWorkloadItem: AzureVmWorkloadSAPHanaSystemWorkloadItem,
        AzureVmWorkloadSQLAvailabilityGroupProtectableItem: AzureVmWorkloadSQLAvailabilityGroupProtectableItem,
        AzureVmWorkloadSQLDatabaseProtectableItem: AzureVmWorkloadSQLDatabaseProtectableItem,
        AzureVmWorkloadSQLDatabaseWorkloadItem: AzureVmWorkloadSQLDatabaseWorkloadItem,
        AzureVmWorkloadSQLInstanceProtectableItem: AzureVmWorkloadSQLInstanceProtectableItem,
        AzureVmWorkloadSQLInstanceWorkloadItem: AzureVmWorkloadSQLInstanceWorkloadItem,
        AzureWorkloadBackupRequest: AzureWorkloadBackupRequest,
        AzureWorkloadContainer: AzureWorkloadContainer,
        AzureWorkloadContainerExtendedInfo: AzureWorkloadContainerExtendedInfo,
        InquiryInfo: InquiryInfo,
        WorkloadInquiryDetails: WorkloadInquiryDetails,
        InquiryValidation: InquiryValidation,
        DistributedNodesInfo: DistributedNodesInfo,
        AzureWorkloadSAPHanaPointInTimeRecoveryPoint: AzureWorkloadSAPHanaPointInTimeRecoveryPoint,
        PointInTimeRange: PointInTimeRange,
        AzureWorkloadSQLPointInTimeRecoveryPoint: AzureWorkloadSQLPointInTimeRecoveryPoint,
        DpmContainer: DpmContainer,
        GenericContainer: GenericContainer,
        GenericContainerExtendedInfo: GenericContainerExtendedInfo,
        ContainerIdentityInfo: ContainerIdentityInfo,
        IaaSVMContainer: IaaSVMContainer,
        IaasVMILRRegistrationRequest: IaasVMILRRegistrationRequest,
        IaaSVMProtectableItem: IaaSVMProtectableItem,
        MabContainer: MabContainer,
        MabContainerExtendedInfo: MabContainerExtendedInfo,
        MABContainerHealthDetails: MABContainerHealthDetails,
        AzureIaaSClassicComputeVMProtectedItem: AzureIaaSClassicComputeVMProtectedItem,
        AzureIaaSComputeVMProtectedItem: AzureIaaSComputeVMProtectedItem,
        AzureWorkloadSAPHanaPointInTimeRestoreRequest: AzureWorkloadSAPHanaPointInTimeRestoreRequest,
        AzureWorkloadSQLPointInTimeRestoreRequest: AzureWorkloadSQLPointInTimeRestoreRequest,
        AzureIaaSClassicComputeVMContainer: AzureIaaSClassicComputeVMContainer,
        AzureIaaSClassicComputeVMProtectableItem: AzureIaaSClassicComputeVMProtectableItem,
        AzureIaaSComputeVMContainer: AzureIaaSComputeVMContainer,
        AzureIaaSComputeVMProtectableItem: AzureIaaSComputeVMProtectableItem,
        AzureSQLAGWorkloadContainerProtectionContainer: AzureSQLAGWorkloadContainerProtectionContainer,
        AzureVMAppContainerProtectionContainer: AzureVMAppContainerProtectionContainer
    });

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    /** Class representing a RecoveryPoints. */
    var RecoveryPoints = /** @class */ (function () {
        /**
         * Create a RecoveryPoints.
         * @param {RecoveryServicesBackupClientContext} client Reference to the service client.
         */
        function RecoveryPoints(client) {
            this.client = client;
        }
        RecoveryPoints.prototype.list = function (vaultName$$1, resourceGroupName$$1, fabricName$$1, containerName$$1, protectedItemName$$1, options, callback) {
            return this.client.sendOperationRequest({
                vaultName: vaultName$$1,
                resourceGroupName: resourceGroupName$$1,
                fabricName: fabricName$$1,
                containerName: containerName$$1,
                protectedItemName: protectedItemName$$1,
                options: options
            }, listOperationSpec$8, callback);
        };
        RecoveryPoints.prototype.get = function (vaultName$$1, resourceGroupName$$1, fabricName$$1, containerName$$1, protectedItemName$$1, recoveryPointId$$1, options, callback) {
            return this.client.sendOperationRequest({
                vaultName: vaultName$$1,
                resourceGroupName: resourceGroupName$$1,
                fabricName: fabricName$$1,
                containerName: containerName$$1,
                protectedItemName: protectedItemName$$1,
                recoveryPointId: recoveryPointId$$1,
                options: options
            }, getOperationSpec$c, callback);
        };
        RecoveryPoints.prototype.listNext = function (nextPageLink$$1, options, callback) {
            return this.client.sendOperationRequest({
                nextPageLink: nextPageLink$$1,
                options: options
            }, listNextOperationSpec$7, callback);
        };
        return RecoveryPoints;
    }());
    // Operation Specifications
    var serializer$n = new msRest.Serializer(Mappers$n);
    var listOperationSpec$8 = {
        httpMethod: "GET",
        path: "Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/protectionContainers/{containerName}/protectedItems/{protectedItemName}/recoveryPoints",
        urlParameters: [
            vaultName,
            resourceGroupName,
            subscriptionId,
            fabricName,
            containerName,
            protectedItemName
        ],
        queryParameters: [
            apiVersion1,
            filter
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            200: {
                bodyMapper: RecoveryPointResourceList
            },
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer$n
    };
    var getOperationSpec$c = {
        httpMethod: "GET",
        path: "Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/protectionContainers/{containerName}/protectedItems/{protectedItemName}/recoveryPoints/{recoveryPointId}",
        urlParameters: [
            vaultName,
            resourceGroupName,
            subscriptionId,
            fabricName,
            containerName,
            protectedItemName,
            recoveryPointId
        ],
        queryParameters: [
            apiVersion1
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            200: {
                bodyMapper: RecoveryPointResource
            },
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer$n
    };
    var listNextOperationSpec$7 = {
        httpMethod: "GET",
        baseUrl: "https://management.azure.com",
        path: "{nextLink}",
        urlParameters: [
            nextPageLink
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            200: {
                bodyMapper: RecoveryPointResourceList
            },
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer$n
    };

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */

    var Mappers$o = /*#__PURE__*/Object.freeze({
        discriminators: discriminators,
        ILRRequestResource: ILRRequestResource,
        Resource: Resource,
        BaseResource: BaseResource,
        ILRRequest: ILRRequest,
        CloudError: CloudError,
        JobResource: JobResource,
        Job: Job,
        MabJob: MabJob,
        MabErrorInfo: MabErrorInfo,
        MabJobExtendedInfo: MabJobExtendedInfo,
        MabJobTaskDetails: MabJobTaskDetails,
        ProtectedItemResource: ProtectedItemResource,
        ProtectedItem: ProtectedItem,
        ProtectionIntentResource: ProtectionIntentResource,
        ProtectionIntent: ProtectionIntent,
        ProtectionPolicyResource: ProtectionPolicyResource,
        ProtectionPolicy: ProtectionPolicy,
        BackupEngineBaseResource: BackupEngineBaseResource,
        BackupEngineBase: BackupEngineBase,
        BackupEngineExtendedInfo: BackupEngineExtendedInfo,
        BackupRequestResource: BackupRequestResource,
        BackupRequest: BackupRequest,
        BackupResourceConfigResource: BackupResourceConfigResource,
        BackupResourceConfig: BackupResourceConfig,
        BackupResourceVaultConfigResource: BackupResourceVaultConfigResource,
        BackupResourceVaultConfig: BackupResourceVaultConfig,
        DpmBackupEngine: DpmBackupEngine,
        IaasVMBackupRequest: IaasVMBackupRequest,
        IaasVMILRRegistrationRequest: IaasVMILRRegistrationRequest,
        ProtectableContainerResource: ProtectableContainerResource,
        ProtectableContainer: ProtectableContainer,
        ProtectionContainerResource: ProtectionContainerResource,
        ProtectionContainer: ProtectionContainer,
        RecoveryPointResource: RecoveryPointResource,
        RecoveryPoint: RecoveryPoint,
        RestoreRequestResource: RestoreRequestResource,
        RestoreRequest: RestoreRequest,
        WorkloadItemResource: WorkloadItemResource,
        WorkloadItem: WorkloadItem,
        WorkloadProtectableItemResource: WorkloadProtectableItemResource,
        WorkloadProtectableItem: WorkloadProtectableItem,
        AzureFileshareProtectedItem: AzureFileshareProtectedItem,
        AzureFileshareProtectedItemExtendedInfo: AzureFileshareProtectedItemExtendedInfo,
        AzureFileShareProtectionPolicy: AzureFileShareProtectionPolicy,
        SchedulePolicy: SchedulePolicy,
        RetentionPolicy: RetentionPolicy,
        AzureFileShareRestoreRequest: AzureFileShareRestoreRequest,
        RestoreFileSpecs: RestoreFileSpecs,
        TargetAFSRestoreInfo: TargetAFSRestoreInfo,
        AzureIaaSVMJob: AzureIaaSVMJob,
        AzureIaaSVMErrorInfo: AzureIaaSVMErrorInfo,
        AzureIaaSVMJobExtendedInfo: AzureIaaSVMJobExtendedInfo,
        AzureIaaSVMJobTaskDetails: AzureIaaSVMJobTaskDetails,
        AzureIaaSVMProtectedItem: AzureIaaSVMProtectedItem,
        AzureIaaSVMHealthDetails: AzureIaaSVMHealthDetails,
        AzureIaaSVMProtectedItemExtendedInfo: AzureIaaSVMProtectedItemExtendedInfo,
        AzureIaaSVMProtectionPolicy: AzureIaaSVMProtectionPolicy,
        AzureRecoveryServiceVaultProtectionIntent: AzureRecoveryServiceVaultProtectionIntent,
        AzureResourceProtectionIntent: AzureResourceProtectionIntent,
        AzureSqlProtectedItem: AzureSqlProtectedItem,
        AzureSqlProtectedItemExtendedInfo: AzureSqlProtectedItemExtendedInfo,
        AzureSqlProtectionPolicy: AzureSqlProtectionPolicy,
        AzureStorageJob: AzureStorageJob,
        AzureStorageErrorInfo: AzureStorageErrorInfo,
        AzureStorageJobExtendedInfo: AzureStorageJobExtendedInfo,
        AzureStorageJobTaskDetails: AzureStorageJobTaskDetails,
        AzureVmWorkloadProtectedItem: AzureVmWorkloadProtectedItem,
        ErrorDetail: ErrorDetail,
        AzureVmWorkloadProtectedItemExtendedInfo: AzureVmWorkloadProtectedItemExtendedInfo,
        AzureVmWorkloadProtectionPolicy: AzureVmWorkloadProtectionPolicy,
        Settings: Settings,
        SubProtectionPolicy: SubProtectionPolicy,
        AzureVmWorkloadSAPHanaDatabaseProtectedItem: AzureVmWorkloadSAPHanaDatabaseProtectedItem,
        AzureVmWorkloadSQLDatabaseProtectedItem: AzureVmWorkloadSQLDatabaseProtectedItem,
        AzureWorkloadAutoProtectionIntent: AzureWorkloadAutoProtectionIntent,
        AzureWorkloadJob: AzureWorkloadJob,
        AzureWorkloadErrorInfo: AzureWorkloadErrorInfo,
        AzureWorkloadJobExtendedInfo: AzureWorkloadJobExtendedInfo,
        AzureWorkloadJobTaskDetails: AzureWorkloadJobTaskDetails,
        AzureWorkloadRestoreRequest: AzureWorkloadRestoreRequest,
        AzureWorkloadSAPHanaRestoreRequest: AzureWorkloadSAPHanaRestoreRequest,
        TargetRestoreInfo: TargetRestoreInfo,
        AzureWorkloadSQLAutoProtectionIntent: AzureWorkloadSQLAutoProtectionIntent,
        AzureWorkloadSQLRestoreRequest: AzureWorkloadSQLRestoreRequest,
        SQLDataDirectoryMapping: SQLDataDirectoryMapping,
        DpmJob: DpmJob,
        DpmErrorInfo: DpmErrorInfo,
        DpmJobExtendedInfo: DpmJobExtendedInfo,
        DpmJobTaskDetails: DpmJobTaskDetails,
        DPMProtectedItem: DPMProtectedItem,
        DPMProtectedItemExtendedInfo: DPMProtectedItemExtendedInfo,
        GenericProtectedItem: GenericProtectedItem,
        GenericProtectionPolicy: GenericProtectionPolicy,
        IaasVMRestoreRequest: IaasVMRestoreRequest,
        EncryptionDetails: EncryptionDetails,
        LogSchedulePolicy: LogSchedulePolicy,
        LongTermRetentionPolicy: LongTermRetentionPolicy,
        DailyRetentionSchedule: DailyRetentionSchedule,
        RetentionDuration: RetentionDuration,
        WeeklyRetentionSchedule: WeeklyRetentionSchedule,
        MonthlyRetentionSchedule: MonthlyRetentionSchedule,
        DailyRetentionFormat: DailyRetentionFormat,
        Day: Day,
        WeeklyRetentionFormat: WeeklyRetentionFormat,
        YearlyRetentionSchedule: YearlyRetentionSchedule,
        LongTermSchedulePolicy: LongTermSchedulePolicy,
        MabFileFolderProtectedItem: MabFileFolderProtectedItem,
        MabFileFolderProtectedItemExtendedInfo: MabFileFolderProtectedItemExtendedInfo,
        MabProtectionPolicy: MabProtectionPolicy,
        SimpleRetentionPolicy: SimpleRetentionPolicy,
        SimpleSchedulePolicy: SimpleSchedulePolicy,
        AzureBackupServerContainer: AzureBackupServerContainer,
        DPMContainerExtendedInfo: DPMContainerExtendedInfo,
        AzureBackupServerEngine: AzureBackupServerEngine,
        AzureFileShareBackupRequest: AzureFileShareBackupRequest,
        AzureFileShareProtectableItem: AzureFileShareProtectableItem,
        AzureFileShareRecoveryPoint: AzureFileShareRecoveryPoint,
        AzureSqlContainer: AzureSqlContainer,
        AzureStorageContainer: AzureStorageContainer,
        AzureStorageProtectableContainer: AzureStorageProtectableContainer,
        AzureVMAppContainerProtectableContainer: AzureVMAppContainerProtectableContainer,
        AzureVmWorkloadItem: AzureVmWorkloadItem,
        AzureVmWorkloadProtectableItem: AzureVmWorkloadProtectableItem,
        PreBackupValidation: PreBackupValidation,
        AzureVmWorkloadSAPHanaDatabaseProtectableItem: AzureVmWorkloadSAPHanaDatabaseProtectableItem,
        AzureVmWorkloadSAPHanaDatabaseWorkloadItem: AzureVmWorkloadSAPHanaDatabaseWorkloadItem,
        AzureVmWorkloadSAPHanaSystemProtectableItem: AzureVmWorkloadSAPHanaSystemProtectableItem,
        AzureVmWorkloadSAPHanaSystemWorkloadItem: AzureVmWorkloadSAPHanaSystemWorkloadItem,
        AzureVmWorkloadSQLAvailabilityGroupProtectableItem: AzureVmWorkloadSQLAvailabilityGroupProtectableItem,
        AzureVmWorkloadSQLDatabaseProtectableItem: AzureVmWorkloadSQLDatabaseProtectableItem,
        AzureVmWorkloadSQLDatabaseWorkloadItem: AzureVmWorkloadSQLDatabaseWorkloadItem,
        AzureVmWorkloadSQLInstanceProtectableItem: AzureVmWorkloadSQLInstanceProtectableItem,
        AzureVmWorkloadSQLInstanceWorkloadItem: AzureVmWorkloadSQLInstanceWorkloadItem,
        SQLDataDirectory: SQLDataDirectory,
        AzureWorkloadBackupRequest: AzureWorkloadBackupRequest,
        AzureWorkloadContainer: AzureWorkloadContainer,
        AzureWorkloadContainerExtendedInfo: AzureWorkloadContainerExtendedInfo,
        InquiryInfo: InquiryInfo,
        WorkloadInquiryDetails: WorkloadInquiryDetails,
        InquiryValidation: InquiryValidation,
        DistributedNodesInfo: DistributedNodesInfo,
        AzureWorkloadRecoveryPoint: AzureWorkloadRecoveryPoint,
        AzureWorkloadSAPHanaRecoveryPoint: AzureWorkloadSAPHanaRecoveryPoint,
        AzureWorkloadSQLRecoveryPoint: AzureWorkloadSQLRecoveryPoint,
        AzureWorkloadSQLRecoveryPointExtendedInfo: AzureWorkloadSQLRecoveryPointExtendedInfo,
        DpmContainer: DpmContainer,
        GenericContainer: GenericContainer,
        GenericContainerExtendedInfo: GenericContainerExtendedInfo,
        ContainerIdentityInfo: ContainerIdentityInfo,
        GenericRecoveryPoint: GenericRecoveryPoint,
        IaaSVMContainer: IaaSVMContainer,
        IaaSVMProtectableItem: IaaSVMProtectableItem,
        IaasVMRecoveryPoint: IaasVMRecoveryPoint,
        KeyAndSecretDetails: KeyAndSecretDetails,
        KEKDetails: KEKDetails,
        BEKDetails: BEKDetails,
        RecoveryPointTierInformation: RecoveryPointTierInformation,
        MabContainer: MabContainer,
        MabContainerExtendedInfo: MabContainerExtendedInfo,
        MABContainerHealthDetails: MABContainerHealthDetails,
        AzureIaaSClassicComputeVMProtectedItem: AzureIaaSClassicComputeVMProtectedItem,
        AzureIaaSComputeVMProtectedItem: AzureIaaSComputeVMProtectedItem,
        AzureWorkloadSAPHanaPointInTimeRestoreRequest: AzureWorkloadSAPHanaPointInTimeRestoreRequest,
        AzureWorkloadSQLPointInTimeRestoreRequest: AzureWorkloadSQLPointInTimeRestoreRequest,
        AzureIaaSClassicComputeVMContainer: AzureIaaSClassicComputeVMContainer,
        AzureIaaSClassicComputeVMProtectableItem: AzureIaaSClassicComputeVMProtectableItem,
        AzureIaaSComputeVMContainer: AzureIaaSComputeVMContainer,
        AzureIaaSComputeVMProtectableItem: AzureIaaSComputeVMProtectableItem,
        AzureSQLAGWorkloadContainerProtectionContainer: AzureSQLAGWorkloadContainerProtectionContainer,
        AzureVMAppContainerProtectionContainer: AzureVMAppContainerProtectionContainer,
        AzureWorkloadSAPHanaPointInTimeRecoveryPoint: AzureWorkloadSAPHanaPointInTimeRecoveryPoint,
        PointInTimeRange: PointInTimeRange,
        AzureWorkloadSQLPointInTimeRecoveryPoint: AzureWorkloadSQLPointInTimeRecoveryPoint
    });

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    /** Class representing a ItemLevelRecoveryConnections. */
    var ItemLevelRecoveryConnections = /** @class */ (function () {
        /**
         * Create a ItemLevelRecoveryConnections.
         * @param {RecoveryServicesBackupClientContext} client Reference to the service client.
         */
        function ItemLevelRecoveryConnections(client) {
            this.client = client;
        }
        ItemLevelRecoveryConnections.prototype.provision = function (vaultName$$1, resourceGroupName$$1, fabricName$$1, containerName$$1, protectedItemName$$1, recoveryPointId$$1, parameters, options, callback) {
            return this.client.sendOperationRequest({
                vaultName: vaultName$$1,
                resourceGroupName: resourceGroupName$$1,
                fabricName: fabricName$$1,
                containerName: containerName$$1,
                protectedItemName: protectedItemName$$1,
                recoveryPointId: recoveryPointId$$1,
                parameters: parameters,
                options: options
            }, provisionOperationSpec, callback);
        };
        ItemLevelRecoveryConnections.prototype.revoke = function (vaultName$$1, resourceGroupName$$1, fabricName$$1, containerName$$1, protectedItemName$$1, recoveryPointId$$1, options, callback) {
            return this.client.sendOperationRequest({
                vaultName: vaultName$$1,
                resourceGroupName: resourceGroupName$$1,
                fabricName: fabricName$$1,
                containerName: containerName$$1,
                protectedItemName: protectedItemName$$1,
                recoveryPointId: recoveryPointId$$1,
                options: options
            }, revokeOperationSpec, callback);
        };
        return ItemLevelRecoveryConnections;
    }());
    // Operation Specifications
    var serializer$o = new msRest.Serializer(Mappers$o);
    var provisionOperationSpec = {
        httpMethod: "POST",
        path: "Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/protectionContainers/{containerName}/protectedItems/{protectedItemName}/recoveryPoints/{recoveryPointId}/provisionInstantItemRecovery",
        urlParameters: [
            vaultName,
            resourceGroupName,
            subscriptionId,
            fabricName,
            containerName,
            protectedItemName,
            recoveryPointId
        ],
        queryParameters: [
            apiVersion1
        ],
        headerParameters: [
            acceptLanguage
        ],
        requestBody: {
            parameterPath: "parameters",
            mapper: __assign({}, ILRRequestResource, { required: true })
        },
        responses: {
            202: {},
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer$o
    };
    var revokeOperationSpec = {
        httpMethod: "POST",
        path: "Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/protectionContainers/{containerName}/protectedItems/{protectedItemName}/recoveryPoints/{recoveryPointId}/revokeInstantItemRecovery",
        urlParameters: [
            vaultName,
            resourceGroupName,
            subscriptionId,
            fabricName,
            containerName,
            protectedItemName,
            recoveryPointId
        ],
        queryParameters: [
            apiVersion1
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            202: {},
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer$o
    };

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */

    var Mappers$p = /*#__PURE__*/Object.freeze({
        discriminators: discriminators,
        RestoreRequestResource: RestoreRequestResource,
        Resource: Resource,
        BaseResource: BaseResource,
        RestoreRequest: RestoreRequest,
        CloudError: CloudError,
        AzureFileShareRestoreRequest: AzureFileShareRestoreRequest,
        RestoreFileSpecs: RestoreFileSpecs,
        TargetAFSRestoreInfo: TargetAFSRestoreInfo,
        AzureWorkloadRestoreRequest: AzureWorkloadRestoreRequest,
        AzureWorkloadSAPHanaRestoreRequest: AzureWorkloadSAPHanaRestoreRequest,
        TargetRestoreInfo: TargetRestoreInfo,
        AzureWorkloadSQLRestoreRequest: AzureWorkloadSQLRestoreRequest,
        SQLDataDirectoryMapping: SQLDataDirectoryMapping,
        IaasVMRestoreRequest: IaasVMRestoreRequest,
        EncryptionDetails: EncryptionDetails,
        JobResource: JobResource,
        Job: Job,
        MabJob: MabJob,
        MabErrorInfo: MabErrorInfo,
        MabJobExtendedInfo: MabJobExtendedInfo,
        MabJobTaskDetails: MabJobTaskDetails,
        ProtectedItemResource: ProtectedItemResource,
        ProtectedItem: ProtectedItem,
        ProtectionIntentResource: ProtectionIntentResource,
        ProtectionIntent: ProtectionIntent,
        ProtectionPolicyResource: ProtectionPolicyResource,
        ProtectionPolicy: ProtectionPolicy,
        BackupEngineBaseResource: BackupEngineBaseResource,
        BackupEngineBase: BackupEngineBase,
        BackupEngineExtendedInfo: BackupEngineExtendedInfo,
        BackupRequestResource: BackupRequestResource,
        BackupRequest: BackupRequest,
        BackupResourceConfigResource: BackupResourceConfigResource,
        BackupResourceConfig: BackupResourceConfig,
        BackupResourceVaultConfigResource: BackupResourceVaultConfigResource,
        BackupResourceVaultConfig: BackupResourceVaultConfig,
        DpmBackupEngine: DpmBackupEngine,
        IaasVMBackupRequest: IaasVMBackupRequest,
        ILRRequestResource: ILRRequestResource,
        ILRRequest: ILRRequest,
        ProtectableContainerResource: ProtectableContainerResource,
        ProtectableContainer: ProtectableContainer,
        ProtectionContainerResource: ProtectionContainerResource,
        ProtectionContainer: ProtectionContainer,
        RecoveryPointResource: RecoveryPointResource,
        RecoveryPoint: RecoveryPoint,
        WorkloadItemResource: WorkloadItemResource,
        WorkloadItem: WorkloadItem,
        WorkloadProtectableItemResource: WorkloadProtectableItemResource,
        WorkloadProtectableItem: WorkloadProtectableItem,
        AzureFileshareProtectedItem: AzureFileshareProtectedItem,
        AzureFileshareProtectedItemExtendedInfo: AzureFileshareProtectedItemExtendedInfo,
        AzureFileShareProtectionPolicy: AzureFileShareProtectionPolicy,
        SchedulePolicy: SchedulePolicy,
        RetentionPolicy: RetentionPolicy,
        AzureIaaSVMJob: AzureIaaSVMJob,
        AzureIaaSVMErrorInfo: AzureIaaSVMErrorInfo,
        AzureIaaSVMJobExtendedInfo: AzureIaaSVMJobExtendedInfo,
        AzureIaaSVMJobTaskDetails: AzureIaaSVMJobTaskDetails,
        AzureIaaSVMProtectedItem: AzureIaaSVMProtectedItem,
        AzureIaaSVMHealthDetails: AzureIaaSVMHealthDetails,
        AzureIaaSVMProtectedItemExtendedInfo: AzureIaaSVMProtectedItemExtendedInfo,
        AzureIaaSVMProtectionPolicy: AzureIaaSVMProtectionPolicy,
        AzureRecoveryServiceVaultProtectionIntent: AzureRecoveryServiceVaultProtectionIntent,
        AzureResourceProtectionIntent: AzureResourceProtectionIntent,
        AzureSqlProtectedItem: AzureSqlProtectedItem,
        AzureSqlProtectedItemExtendedInfo: AzureSqlProtectedItemExtendedInfo,
        AzureSqlProtectionPolicy: AzureSqlProtectionPolicy,
        AzureStorageJob: AzureStorageJob,
        AzureStorageErrorInfo: AzureStorageErrorInfo,
        AzureStorageJobExtendedInfo: AzureStorageJobExtendedInfo,
        AzureStorageJobTaskDetails: AzureStorageJobTaskDetails,
        AzureVmWorkloadProtectedItem: AzureVmWorkloadProtectedItem,
        ErrorDetail: ErrorDetail,
        AzureVmWorkloadProtectedItemExtendedInfo: AzureVmWorkloadProtectedItemExtendedInfo,
        AzureVmWorkloadProtectionPolicy: AzureVmWorkloadProtectionPolicy,
        Settings: Settings,
        SubProtectionPolicy: SubProtectionPolicy,
        AzureVmWorkloadSAPHanaDatabaseProtectedItem: AzureVmWorkloadSAPHanaDatabaseProtectedItem,
        AzureVmWorkloadSQLDatabaseProtectedItem: AzureVmWorkloadSQLDatabaseProtectedItem,
        AzureWorkloadAutoProtectionIntent: AzureWorkloadAutoProtectionIntent,
        AzureWorkloadJob: AzureWorkloadJob,
        AzureWorkloadErrorInfo: AzureWorkloadErrorInfo,
        AzureWorkloadJobExtendedInfo: AzureWorkloadJobExtendedInfo,
        AzureWorkloadJobTaskDetails: AzureWorkloadJobTaskDetails,
        AzureWorkloadSAPHanaPointInTimeRestoreRequest: AzureWorkloadSAPHanaPointInTimeRestoreRequest,
        AzureWorkloadSQLAutoProtectionIntent: AzureWorkloadSQLAutoProtectionIntent,
        AzureWorkloadSQLPointInTimeRestoreRequest: AzureWorkloadSQLPointInTimeRestoreRequest,
        DpmJob: DpmJob,
        DpmErrorInfo: DpmErrorInfo,
        DpmJobExtendedInfo: DpmJobExtendedInfo,
        DpmJobTaskDetails: DpmJobTaskDetails,
        DPMProtectedItem: DPMProtectedItem,
        DPMProtectedItemExtendedInfo: DPMProtectedItemExtendedInfo,
        GenericProtectedItem: GenericProtectedItem,
        GenericProtectionPolicy: GenericProtectionPolicy,
        LogSchedulePolicy: LogSchedulePolicy,
        LongTermRetentionPolicy: LongTermRetentionPolicy,
        DailyRetentionSchedule: DailyRetentionSchedule,
        RetentionDuration: RetentionDuration,
        WeeklyRetentionSchedule: WeeklyRetentionSchedule,
        MonthlyRetentionSchedule: MonthlyRetentionSchedule,
        DailyRetentionFormat: DailyRetentionFormat,
        Day: Day,
        WeeklyRetentionFormat: WeeklyRetentionFormat,
        YearlyRetentionSchedule: YearlyRetentionSchedule,
        LongTermSchedulePolicy: LongTermSchedulePolicy,
        MabFileFolderProtectedItem: MabFileFolderProtectedItem,
        MabFileFolderProtectedItemExtendedInfo: MabFileFolderProtectedItemExtendedInfo,
        MabProtectionPolicy: MabProtectionPolicy,
        SimpleRetentionPolicy: SimpleRetentionPolicy,
        SimpleSchedulePolicy: SimpleSchedulePolicy,
        AzureBackupServerContainer: AzureBackupServerContainer,
        DPMContainerExtendedInfo: DPMContainerExtendedInfo,
        AzureBackupServerEngine: AzureBackupServerEngine,
        AzureFileShareBackupRequest: AzureFileShareBackupRequest,
        AzureFileShareProtectableItem: AzureFileShareProtectableItem,
        AzureFileShareRecoveryPoint: AzureFileShareRecoveryPoint,
        AzureSqlContainer: AzureSqlContainer,
        AzureStorageContainer: AzureStorageContainer,
        AzureStorageProtectableContainer: AzureStorageProtectableContainer,
        AzureVMAppContainerProtectableContainer: AzureVMAppContainerProtectableContainer,
        AzureVmWorkloadItem: AzureVmWorkloadItem,
        AzureVmWorkloadProtectableItem: AzureVmWorkloadProtectableItem,
        PreBackupValidation: PreBackupValidation,
        AzureVmWorkloadSAPHanaDatabaseProtectableItem: AzureVmWorkloadSAPHanaDatabaseProtectableItem,
        AzureVmWorkloadSAPHanaDatabaseWorkloadItem: AzureVmWorkloadSAPHanaDatabaseWorkloadItem,
        AzureVmWorkloadSAPHanaSystemProtectableItem: AzureVmWorkloadSAPHanaSystemProtectableItem,
        AzureVmWorkloadSAPHanaSystemWorkloadItem: AzureVmWorkloadSAPHanaSystemWorkloadItem,
        AzureVmWorkloadSQLAvailabilityGroupProtectableItem: AzureVmWorkloadSQLAvailabilityGroupProtectableItem,
        AzureVmWorkloadSQLDatabaseProtectableItem: AzureVmWorkloadSQLDatabaseProtectableItem,
        AzureVmWorkloadSQLDatabaseWorkloadItem: AzureVmWorkloadSQLDatabaseWorkloadItem,
        AzureVmWorkloadSQLInstanceProtectableItem: AzureVmWorkloadSQLInstanceProtectableItem,
        AzureVmWorkloadSQLInstanceWorkloadItem: AzureVmWorkloadSQLInstanceWorkloadItem,
        SQLDataDirectory: SQLDataDirectory,
        AzureWorkloadBackupRequest: AzureWorkloadBackupRequest,
        AzureWorkloadContainer: AzureWorkloadContainer,
        AzureWorkloadContainerExtendedInfo: AzureWorkloadContainerExtendedInfo,
        InquiryInfo: InquiryInfo,
        WorkloadInquiryDetails: WorkloadInquiryDetails,
        InquiryValidation: InquiryValidation,
        DistributedNodesInfo: DistributedNodesInfo,
        AzureWorkloadRecoveryPoint: AzureWorkloadRecoveryPoint,
        AzureWorkloadSAPHanaRecoveryPoint: AzureWorkloadSAPHanaRecoveryPoint,
        AzureWorkloadSQLRecoveryPoint: AzureWorkloadSQLRecoveryPoint,
        AzureWorkloadSQLRecoveryPointExtendedInfo: AzureWorkloadSQLRecoveryPointExtendedInfo,
        DpmContainer: DpmContainer,
        GenericContainer: GenericContainer,
        GenericContainerExtendedInfo: GenericContainerExtendedInfo,
        ContainerIdentityInfo: ContainerIdentityInfo,
        GenericRecoveryPoint: GenericRecoveryPoint,
        IaaSVMContainer: IaaSVMContainer,
        IaasVMILRRegistrationRequest: IaasVMILRRegistrationRequest,
        IaaSVMProtectableItem: IaaSVMProtectableItem,
        IaasVMRecoveryPoint: IaasVMRecoveryPoint,
        KeyAndSecretDetails: KeyAndSecretDetails,
        KEKDetails: KEKDetails,
        BEKDetails: BEKDetails,
        RecoveryPointTierInformation: RecoveryPointTierInformation,
        MabContainer: MabContainer,
        MabContainerExtendedInfo: MabContainerExtendedInfo,
        MABContainerHealthDetails: MABContainerHealthDetails,
        AzureIaaSClassicComputeVMProtectedItem: AzureIaaSClassicComputeVMProtectedItem,
        AzureIaaSComputeVMProtectedItem: AzureIaaSComputeVMProtectedItem,
        AzureIaaSClassicComputeVMContainer: AzureIaaSClassicComputeVMContainer,
        AzureIaaSClassicComputeVMProtectableItem: AzureIaaSClassicComputeVMProtectableItem,
        AzureIaaSComputeVMContainer: AzureIaaSComputeVMContainer,
        AzureIaaSComputeVMProtectableItem: AzureIaaSComputeVMProtectableItem,
        AzureSQLAGWorkloadContainerProtectionContainer: AzureSQLAGWorkloadContainerProtectionContainer,
        AzureVMAppContainerProtectionContainer: AzureVMAppContainerProtectionContainer,
        AzureWorkloadSAPHanaPointInTimeRecoveryPoint: AzureWorkloadSAPHanaPointInTimeRecoveryPoint,
        PointInTimeRange: PointInTimeRange,
        AzureWorkloadSQLPointInTimeRecoveryPoint: AzureWorkloadSQLPointInTimeRecoveryPoint
    });

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    /** Class representing a Restores. */
    var Restores = /** @class */ (function () {
        /**
         * Create a Restores.
         * @param {RecoveryServicesBackupClientContext} client Reference to the service client.
         */
        function Restores(client) {
            this.client = client;
        }
        Restores.prototype.trigger = function (vaultName$$1, resourceGroupName$$1, fabricName$$1, containerName$$1, protectedItemName$$1, recoveryPointId$$1, parameters, options, callback) {
            return this.client.sendOperationRequest({
                vaultName: vaultName$$1,
                resourceGroupName: resourceGroupName$$1,
                fabricName: fabricName$$1,
                containerName: containerName$$1,
                protectedItemName: protectedItemName$$1,
                recoveryPointId: recoveryPointId$$1,
                parameters: parameters,
                options: options
            }, triggerOperationSpec$1, callback);
        };
        return Restores;
    }());
    // Operation Specifications
    var serializer$p = new msRest.Serializer(Mappers$p);
    var triggerOperationSpec$1 = {
        httpMethod: "POST",
        path: "Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/protectionContainers/{containerName}/protectedItems/{protectedItemName}/recoveryPoints/{recoveryPointId}/restore",
        urlParameters: [
            vaultName,
            resourceGroupName,
            subscriptionId,
            fabricName,
            containerName,
            protectedItemName,
            recoveryPointId
        ],
        queryParameters: [
            apiVersion1
        ],
        headerParameters: [
            acceptLanguage
        ],
        requestBody: {
            parameterPath: "parameters",
            mapper: __assign({}, RestoreRequestResource, { required: true })
        },
        responses: {
            202: {},
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer$p
    };

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */

    var Mappers$q = /*#__PURE__*/Object.freeze({
        discriminators: discriminators,
        CloudError: CloudError
    });

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    /** Class representing a JobCancellations. */
    var JobCancellations = /** @class */ (function () {
        /**
         * Create a JobCancellations.
         * @param {RecoveryServicesBackupClientContext} client Reference to the service client.
         */
        function JobCancellations(client) {
            this.client = client;
        }
        JobCancellations.prototype.trigger = function (vaultName$$1, resourceGroupName$$1, jobName$$1, options, callback) {
            return this.client.sendOperationRequest({
                vaultName: vaultName$$1,
                resourceGroupName: resourceGroupName$$1,
                jobName: jobName$$1,
                options: options
            }, triggerOperationSpec$2, callback);
        };
        return JobCancellations;
    }());
    // Operation Specifications
    var serializer$q = new msRest.Serializer(Mappers$q);
    var triggerOperationSpec$2 = {
        httpMethod: "POST",
        path: "Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupJobs/{jobName}/cancel",
        urlParameters: [
            vaultName,
            resourceGroupName,
            subscriptionId,
            jobName
        ],
        queryParameters: [
            apiVersion1
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            202: {},
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer$q
    };

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */

    var Mappers$r = /*#__PURE__*/Object.freeze({
        discriminators: discriminators,
        CloudError: CloudError
    });

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    /** Class representing a JobOperationResults. */
    var JobOperationResults = /** @class */ (function () {
        /**
         * Create a JobOperationResults.
         * @param {RecoveryServicesBackupClientContext} client Reference to the service client.
         */
        function JobOperationResults(client) {
            this.client = client;
        }
        JobOperationResults.prototype.get = function (vaultName$$1, resourceGroupName$$1, jobName$$1, operationId$$1, options, callback) {
            return this.client.sendOperationRequest({
                vaultName: vaultName$$1,
                resourceGroupName: resourceGroupName$$1,
                jobName: jobName$$1,
                operationId: operationId$$1,
                options: options
            }, getOperationSpec$d, callback);
        };
        return JobOperationResults;
    }());
    // Operation Specifications
    var serializer$r = new msRest.Serializer(Mappers$r);
    var getOperationSpec$d = {
        httpMethod: "GET",
        path: "Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupJobs/{jobName}/operationResults/{operationId}",
        urlParameters: [
            vaultName,
            resourceGroupName,
            subscriptionId,
            jobName,
            operationId
        ],
        queryParameters: [
            apiVersion1
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            200: {},
            202: {},
            204: {},
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer$r
    };

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */

    var Mappers$s = /*#__PURE__*/Object.freeze({
        discriminators: discriminators,
        CloudError: CloudError
    });

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    /** Class representing a BackupOperationResults. */
    var BackupOperationResults = /** @class */ (function () {
        /**
         * Create a BackupOperationResults.
         * @param {RecoveryServicesBackupClientContext} client Reference to the service client.
         */
        function BackupOperationResults(client) {
            this.client = client;
        }
        BackupOperationResults.prototype.get = function (vaultName$$1, resourceGroupName$$1, operationId$$1, options, callback) {
            return this.client.sendOperationRequest({
                vaultName: vaultName$$1,
                resourceGroupName: resourceGroupName$$1,
                operationId: operationId$$1,
                options: options
            }, getOperationSpec$e, callback);
        };
        return BackupOperationResults;
    }());
    // Operation Specifications
    var serializer$s = new msRest.Serializer(Mappers$s);
    var getOperationSpec$e = {
        httpMethod: "GET",
        path: "Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupOperationResults/{operationId}",
        urlParameters: [
            vaultName,
            resourceGroupName,
            subscriptionId,
            operationId
        ],
        queryParameters: [
            apiVersion1
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            200: {},
            202: {},
            204: {},
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer$s
    };

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */

    var Mappers$t = /*#__PURE__*/Object.freeze({
        discriminators: discriminators,
        OperationStatus: OperationStatus,
        OperationStatusError: OperationStatusError,
        OperationStatusExtendedInfo: OperationStatusExtendedInfo,
        CloudError: CloudError,
        OperationStatusJobExtendedInfo: OperationStatusJobExtendedInfo,
        OperationStatusJobsExtendedInfo: OperationStatusJobsExtendedInfo,
        OperationStatusProvisionILRExtendedInfo: OperationStatusProvisionILRExtendedInfo,
        InstantItemRecoveryTarget: InstantItemRecoveryTarget,
        ClientScriptForConnect: ClientScriptForConnect
    });

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    /** Class representing a BackupOperationStatuses. */
    var BackupOperationStatuses = /** @class */ (function () {
        /**
         * Create a BackupOperationStatuses.
         * @param {RecoveryServicesBackupClientContext} client Reference to the service client.
         */
        function BackupOperationStatuses(client) {
            this.client = client;
        }
        BackupOperationStatuses.prototype.get = function (vaultName$$1, resourceGroupName$$1, operationId$$1, options, callback) {
            return this.client.sendOperationRequest({
                vaultName: vaultName$$1,
                resourceGroupName: resourceGroupName$$1,
                operationId: operationId$$1,
                options: options
            }, getOperationSpec$f, callback);
        };
        return BackupOperationStatuses;
    }());
    // Operation Specifications
    var serializer$t = new msRest.Serializer(Mappers$t);
    var getOperationSpec$f = {
        httpMethod: "GET",
        path: "Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupOperations/{operationId}",
        urlParameters: [
            vaultName,
            resourceGroupName,
            subscriptionId,
            operationId
        ],
        queryParameters: [
            apiVersion1
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            200: {
                bodyMapper: OperationStatus
            },
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer$t
    };

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */

    var Mappers$u = /*#__PURE__*/Object.freeze({
        discriminators: discriminators,
        ProtectionPolicyResource: ProtectionPolicyResource,
        Resource: Resource,
        BaseResource: BaseResource,
        ProtectionPolicy: ProtectionPolicy,
        CloudError: CloudError,
        AzureFileShareProtectionPolicy: AzureFileShareProtectionPolicy,
        SchedulePolicy: SchedulePolicy,
        RetentionPolicy: RetentionPolicy,
        AzureIaaSVMProtectionPolicy: AzureIaaSVMProtectionPolicy,
        AzureSqlProtectionPolicy: AzureSqlProtectionPolicy,
        AzureVmWorkloadProtectionPolicy: AzureVmWorkloadProtectionPolicy,
        Settings: Settings,
        SubProtectionPolicy: SubProtectionPolicy,
        GenericProtectionPolicy: GenericProtectionPolicy,
        JobResource: JobResource,
        Job: Job,
        LogSchedulePolicy: LogSchedulePolicy,
        LongTermRetentionPolicy: LongTermRetentionPolicy,
        DailyRetentionSchedule: DailyRetentionSchedule,
        RetentionDuration: RetentionDuration,
        WeeklyRetentionSchedule: WeeklyRetentionSchedule,
        MonthlyRetentionSchedule: MonthlyRetentionSchedule,
        DailyRetentionFormat: DailyRetentionFormat,
        Day: Day,
        WeeklyRetentionFormat: WeeklyRetentionFormat,
        YearlyRetentionSchedule: YearlyRetentionSchedule,
        LongTermSchedulePolicy: LongTermSchedulePolicy,
        MabJob: MabJob,
        MabErrorInfo: MabErrorInfo,
        MabJobExtendedInfo: MabJobExtendedInfo,
        MabJobTaskDetails: MabJobTaskDetails,
        MabProtectionPolicy: MabProtectionPolicy,
        ProtectedItemResource: ProtectedItemResource,
        ProtectedItem: ProtectedItem,
        ProtectionIntentResource: ProtectionIntentResource,
        ProtectionIntent: ProtectionIntent,
        SimpleRetentionPolicy: SimpleRetentionPolicy,
        SimpleSchedulePolicy: SimpleSchedulePolicy,
        BackupEngineBaseResource: BackupEngineBaseResource,
        BackupEngineBase: BackupEngineBase,
        BackupEngineExtendedInfo: BackupEngineExtendedInfo,
        BackupRequestResource: BackupRequestResource,
        BackupRequest: BackupRequest,
        BackupResourceConfigResource: BackupResourceConfigResource,
        BackupResourceConfig: BackupResourceConfig,
        BackupResourceVaultConfigResource: BackupResourceVaultConfigResource,
        BackupResourceVaultConfig: BackupResourceVaultConfig,
        DpmBackupEngine: DpmBackupEngine,
        IaasVMBackupRequest: IaasVMBackupRequest,
        ILRRequestResource: ILRRequestResource,
        ILRRequest: ILRRequest,
        ProtectableContainerResource: ProtectableContainerResource,
        ProtectableContainer: ProtectableContainer,
        ProtectionContainerResource: ProtectionContainerResource,
        ProtectionContainer: ProtectionContainer,
        RecoveryPointResource: RecoveryPointResource,
        RecoveryPoint: RecoveryPoint,
        RestoreRequestResource: RestoreRequestResource,
        RestoreRequest: RestoreRequest,
        WorkloadItemResource: WorkloadItemResource,
        WorkloadItem: WorkloadItem,
        WorkloadProtectableItemResource: WorkloadProtectableItemResource,
        WorkloadProtectableItem: WorkloadProtectableItem,
        AzureFileshareProtectedItem: AzureFileshareProtectedItem,
        AzureFileshareProtectedItemExtendedInfo: AzureFileshareProtectedItemExtendedInfo,
        AzureFileShareRestoreRequest: AzureFileShareRestoreRequest,
        RestoreFileSpecs: RestoreFileSpecs,
        TargetAFSRestoreInfo: TargetAFSRestoreInfo,
        AzureIaaSVMJob: AzureIaaSVMJob,
        AzureIaaSVMErrorInfo: AzureIaaSVMErrorInfo,
        AzureIaaSVMJobExtendedInfo: AzureIaaSVMJobExtendedInfo,
        AzureIaaSVMJobTaskDetails: AzureIaaSVMJobTaskDetails,
        AzureIaaSVMProtectedItem: AzureIaaSVMProtectedItem,
        AzureIaaSVMHealthDetails: AzureIaaSVMHealthDetails,
        AzureIaaSVMProtectedItemExtendedInfo: AzureIaaSVMProtectedItemExtendedInfo,
        AzureRecoveryServiceVaultProtectionIntent: AzureRecoveryServiceVaultProtectionIntent,
        AzureResourceProtectionIntent: AzureResourceProtectionIntent,
        AzureSqlProtectedItem: AzureSqlProtectedItem,
        AzureSqlProtectedItemExtendedInfo: AzureSqlProtectedItemExtendedInfo,
        AzureStorageJob: AzureStorageJob,
        AzureStorageErrorInfo: AzureStorageErrorInfo,
        AzureStorageJobExtendedInfo: AzureStorageJobExtendedInfo,
        AzureStorageJobTaskDetails: AzureStorageJobTaskDetails,
        AzureVmWorkloadProtectedItem: AzureVmWorkloadProtectedItem,
        ErrorDetail: ErrorDetail,
        AzureVmWorkloadProtectedItemExtendedInfo: AzureVmWorkloadProtectedItemExtendedInfo,
        AzureVmWorkloadSAPHanaDatabaseProtectedItem: AzureVmWorkloadSAPHanaDatabaseProtectedItem,
        AzureVmWorkloadSQLDatabaseProtectedItem: AzureVmWorkloadSQLDatabaseProtectedItem,
        AzureWorkloadAutoProtectionIntent: AzureWorkloadAutoProtectionIntent,
        AzureWorkloadJob: AzureWorkloadJob,
        AzureWorkloadErrorInfo: AzureWorkloadErrorInfo,
        AzureWorkloadJobExtendedInfo: AzureWorkloadJobExtendedInfo,
        AzureWorkloadJobTaskDetails: AzureWorkloadJobTaskDetails,
        AzureWorkloadRestoreRequest: AzureWorkloadRestoreRequest,
        AzureWorkloadSAPHanaRestoreRequest: AzureWorkloadSAPHanaRestoreRequest,
        TargetRestoreInfo: TargetRestoreInfo,
        AzureWorkloadSQLAutoProtectionIntent: AzureWorkloadSQLAutoProtectionIntent,
        AzureWorkloadSQLRestoreRequest: AzureWorkloadSQLRestoreRequest,
        SQLDataDirectoryMapping: SQLDataDirectoryMapping,
        DpmJob: DpmJob,
        DpmErrorInfo: DpmErrorInfo,
        DpmJobExtendedInfo: DpmJobExtendedInfo,
        DpmJobTaskDetails: DpmJobTaskDetails,
        DPMProtectedItem: DPMProtectedItem,
        DPMProtectedItemExtendedInfo: DPMProtectedItemExtendedInfo,
        GenericProtectedItem: GenericProtectedItem,
        IaasVMRestoreRequest: IaasVMRestoreRequest,
        EncryptionDetails: EncryptionDetails,
        MabFileFolderProtectedItem: MabFileFolderProtectedItem,
        MabFileFolderProtectedItemExtendedInfo: MabFileFolderProtectedItemExtendedInfo,
        AzureBackupServerContainer: AzureBackupServerContainer,
        DPMContainerExtendedInfo: DPMContainerExtendedInfo,
        AzureBackupServerEngine: AzureBackupServerEngine,
        AzureFileShareBackupRequest: AzureFileShareBackupRequest,
        AzureFileShareProtectableItem: AzureFileShareProtectableItem,
        AzureFileShareRecoveryPoint: AzureFileShareRecoveryPoint,
        AzureSqlContainer: AzureSqlContainer,
        AzureStorageContainer: AzureStorageContainer,
        AzureStorageProtectableContainer: AzureStorageProtectableContainer,
        AzureVMAppContainerProtectableContainer: AzureVMAppContainerProtectableContainer,
        AzureVmWorkloadItem: AzureVmWorkloadItem,
        AzureVmWorkloadProtectableItem: AzureVmWorkloadProtectableItem,
        PreBackupValidation: PreBackupValidation,
        AzureVmWorkloadSAPHanaDatabaseProtectableItem: AzureVmWorkloadSAPHanaDatabaseProtectableItem,
        AzureVmWorkloadSAPHanaDatabaseWorkloadItem: AzureVmWorkloadSAPHanaDatabaseWorkloadItem,
        AzureVmWorkloadSAPHanaSystemProtectableItem: AzureVmWorkloadSAPHanaSystemProtectableItem,
        AzureVmWorkloadSAPHanaSystemWorkloadItem: AzureVmWorkloadSAPHanaSystemWorkloadItem,
        AzureVmWorkloadSQLAvailabilityGroupProtectableItem: AzureVmWorkloadSQLAvailabilityGroupProtectableItem,
        AzureVmWorkloadSQLDatabaseProtectableItem: AzureVmWorkloadSQLDatabaseProtectableItem,
        AzureVmWorkloadSQLDatabaseWorkloadItem: AzureVmWorkloadSQLDatabaseWorkloadItem,
        AzureVmWorkloadSQLInstanceProtectableItem: AzureVmWorkloadSQLInstanceProtectableItem,
        AzureVmWorkloadSQLInstanceWorkloadItem: AzureVmWorkloadSQLInstanceWorkloadItem,
        SQLDataDirectory: SQLDataDirectory,
        AzureWorkloadBackupRequest: AzureWorkloadBackupRequest,
        AzureWorkloadContainer: AzureWorkloadContainer,
        AzureWorkloadContainerExtendedInfo: AzureWorkloadContainerExtendedInfo,
        InquiryInfo: InquiryInfo,
        WorkloadInquiryDetails: WorkloadInquiryDetails,
        InquiryValidation: InquiryValidation,
        DistributedNodesInfo: DistributedNodesInfo,
        AzureWorkloadRecoveryPoint: AzureWorkloadRecoveryPoint,
        AzureWorkloadSAPHanaRecoveryPoint: AzureWorkloadSAPHanaRecoveryPoint,
        AzureWorkloadSQLRecoveryPoint: AzureWorkloadSQLRecoveryPoint,
        AzureWorkloadSQLRecoveryPointExtendedInfo: AzureWorkloadSQLRecoveryPointExtendedInfo,
        DpmContainer: DpmContainer,
        GenericContainer: GenericContainer,
        GenericContainerExtendedInfo: GenericContainerExtendedInfo,
        ContainerIdentityInfo: ContainerIdentityInfo,
        GenericRecoveryPoint: GenericRecoveryPoint,
        IaaSVMContainer: IaaSVMContainer,
        IaasVMILRRegistrationRequest: IaasVMILRRegistrationRequest,
        IaaSVMProtectableItem: IaaSVMProtectableItem,
        IaasVMRecoveryPoint: IaasVMRecoveryPoint,
        KeyAndSecretDetails: KeyAndSecretDetails,
        KEKDetails: KEKDetails,
        BEKDetails: BEKDetails,
        RecoveryPointTierInformation: RecoveryPointTierInformation,
        MabContainer: MabContainer,
        MabContainerExtendedInfo: MabContainerExtendedInfo,
        MABContainerHealthDetails: MABContainerHealthDetails,
        AzureIaaSClassicComputeVMProtectedItem: AzureIaaSClassicComputeVMProtectedItem,
        AzureIaaSComputeVMProtectedItem: AzureIaaSComputeVMProtectedItem,
        AzureWorkloadSAPHanaPointInTimeRestoreRequest: AzureWorkloadSAPHanaPointInTimeRestoreRequest,
        AzureWorkloadSQLPointInTimeRestoreRequest: AzureWorkloadSQLPointInTimeRestoreRequest,
        AzureIaaSClassicComputeVMContainer: AzureIaaSClassicComputeVMContainer,
        AzureIaaSClassicComputeVMProtectableItem: AzureIaaSClassicComputeVMProtectableItem,
        AzureIaaSComputeVMContainer: AzureIaaSComputeVMContainer,
        AzureIaaSComputeVMProtectableItem: AzureIaaSComputeVMProtectableItem,
        AzureSQLAGWorkloadContainerProtectionContainer: AzureSQLAGWorkloadContainerProtectionContainer,
        AzureVMAppContainerProtectionContainer: AzureVMAppContainerProtectionContainer,
        AzureWorkloadSAPHanaPointInTimeRecoveryPoint: AzureWorkloadSAPHanaPointInTimeRecoveryPoint,
        PointInTimeRange: PointInTimeRange,
        AzureWorkloadSQLPointInTimeRecoveryPoint: AzureWorkloadSQLPointInTimeRecoveryPoint
    });

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    /** Class representing a ProtectionPolicies. */
    var ProtectionPolicies = /** @class */ (function () {
        /**
         * Create a ProtectionPolicies.
         * @param {RecoveryServicesBackupClientContext} client Reference to the service client.
         */
        function ProtectionPolicies(client) {
            this.client = client;
        }
        ProtectionPolicies.prototype.get = function (vaultName$$1, resourceGroupName$$1, policyName$$1, options, callback) {
            return this.client.sendOperationRequest({
                vaultName: vaultName$$1,
                resourceGroupName: resourceGroupName$$1,
                policyName: policyName$$1,
                options: options
            }, getOperationSpec$g, callback);
        };
        ProtectionPolicies.prototype.createOrUpdate = function (vaultName$$1, resourceGroupName$$1, policyName$$1, parameters, options, callback) {
            return this.client.sendOperationRequest({
                vaultName: vaultName$$1,
                resourceGroupName: resourceGroupName$$1,
                policyName: policyName$$1,
                parameters: parameters,
                options: options
            }, createOrUpdateOperationSpec$2, callback);
        };
        ProtectionPolicies.prototype.deleteMethod = function (vaultName$$1, resourceGroupName$$1, policyName$$1, options, callback) {
            return this.client.sendOperationRequest({
                vaultName: vaultName$$1,
                resourceGroupName: resourceGroupName$$1,
                policyName: policyName$$1,
                options: options
            }, deleteMethodOperationSpec$2, callback);
        };
        return ProtectionPolicies;
    }());
    // Operation Specifications
    var serializer$u = new msRest.Serializer(Mappers$u);
    var getOperationSpec$g = {
        httpMethod: "GET",
        path: "Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupPolicies/{policyName}",
        urlParameters: [
            vaultName,
            resourceGroupName,
            subscriptionId,
            policyName
        ],
        queryParameters: [
            apiVersion1
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            200: {
                bodyMapper: ProtectionPolicyResource
            },
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer$u
    };
    var createOrUpdateOperationSpec$2 = {
        httpMethod: "PUT",
        path: "Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupPolicies/{policyName}",
        urlParameters: [
            vaultName,
            resourceGroupName,
            subscriptionId,
            policyName
        ],
        queryParameters: [
            apiVersion1
        ],
        headerParameters: [
            acceptLanguage
        ],
        requestBody: {
            parameterPath: "parameters",
            mapper: __assign({}, ProtectionPolicyResource, { required: true })
        },
        responses: {
            200: {
                bodyMapper: ProtectionPolicyResource
            },
            202: {},
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer$u
    };
    var deleteMethodOperationSpec$2 = {
        httpMethod: "DELETE",
        path: "Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupPolicies/{policyName}",
        urlParameters: [
            vaultName,
            resourceGroupName,
            subscriptionId,
            policyName
        ],
        queryParameters: [
            apiVersion1
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            200: {},
            204: {},
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer$u
    };

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */

    var Mappers$v = /*#__PURE__*/Object.freeze({
        discriminators: discriminators,
        ProtectionPolicyResource: ProtectionPolicyResource,
        Resource: Resource,
        BaseResource: BaseResource,
        ProtectionPolicy: ProtectionPolicy,
        CloudError: CloudError,
        AzureFileShareProtectionPolicy: AzureFileShareProtectionPolicy,
        SchedulePolicy: SchedulePolicy,
        RetentionPolicy: RetentionPolicy,
        AzureIaaSVMProtectionPolicy: AzureIaaSVMProtectionPolicy,
        AzureSqlProtectionPolicy: AzureSqlProtectionPolicy,
        AzureVmWorkloadProtectionPolicy: AzureVmWorkloadProtectionPolicy,
        Settings: Settings,
        SubProtectionPolicy: SubProtectionPolicy,
        GenericProtectionPolicy: GenericProtectionPolicy,
        JobResource: JobResource,
        Job: Job,
        LogSchedulePolicy: LogSchedulePolicy,
        LongTermRetentionPolicy: LongTermRetentionPolicy,
        DailyRetentionSchedule: DailyRetentionSchedule,
        RetentionDuration: RetentionDuration,
        WeeklyRetentionSchedule: WeeklyRetentionSchedule,
        MonthlyRetentionSchedule: MonthlyRetentionSchedule,
        DailyRetentionFormat: DailyRetentionFormat,
        Day: Day,
        WeeklyRetentionFormat: WeeklyRetentionFormat,
        YearlyRetentionSchedule: YearlyRetentionSchedule,
        LongTermSchedulePolicy: LongTermSchedulePolicy,
        MabJob: MabJob,
        MabErrorInfo: MabErrorInfo,
        MabJobExtendedInfo: MabJobExtendedInfo,
        MabJobTaskDetails: MabJobTaskDetails,
        MabProtectionPolicy: MabProtectionPolicy,
        ProtectedItemResource: ProtectedItemResource,
        ProtectedItem: ProtectedItem,
        ProtectionIntentResource: ProtectionIntentResource,
        ProtectionIntent: ProtectionIntent,
        SimpleRetentionPolicy: SimpleRetentionPolicy,
        SimpleSchedulePolicy: SimpleSchedulePolicy,
        BackupEngineBaseResource: BackupEngineBaseResource,
        BackupEngineBase: BackupEngineBase,
        BackupEngineExtendedInfo: BackupEngineExtendedInfo,
        BackupRequestResource: BackupRequestResource,
        BackupRequest: BackupRequest,
        BackupResourceConfigResource: BackupResourceConfigResource,
        BackupResourceConfig: BackupResourceConfig,
        BackupResourceVaultConfigResource: BackupResourceVaultConfigResource,
        BackupResourceVaultConfig: BackupResourceVaultConfig,
        DpmBackupEngine: DpmBackupEngine,
        IaasVMBackupRequest: IaasVMBackupRequest,
        ILRRequestResource: ILRRequestResource,
        ILRRequest: ILRRequest,
        ProtectableContainerResource: ProtectableContainerResource,
        ProtectableContainer: ProtectableContainer,
        ProtectionContainerResource: ProtectionContainerResource,
        ProtectionContainer: ProtectionContainer,
        RecoveryPointResource: RecoveryPointResource,
        RecoveryPoint: RecoveryPoint,
        RestoreRequestResource: RestoreRequestResource,
        RestoreRequest: RestoreRequest,
        WorkloadItemResource: WorkloadItemResource,
        WorkloadItem: WorkloadItem,
        WorkloadProtectableItemResource: WorkloadProtectableItemResource,
        WorkloadProtectableItem: WorkloadProtectableItem,
        AzureFileshareProtectedItem: AzureFileshareProtectedItem,
        AzureFileshareProtectedItemExtendedInfo: AzureFileshareProtectedItemExtendedInfo,
        AzureFileShareRestoreRequest: AzureFileShareRestoreRequest,
        RestoreFileSpecs: RestoreFileSpecs,
        TargetAFSRestoreInfo: TargetAFSRestoreInfo,
        AzureIaaSVMJob: AzureIaaSVMJob,
        AzureIaaSVMErrorInfo: AzureIaaSVMErrorInfo,
        AzureIaaSVMJobExtendedInfo: AzureIaaSVMJobExtendedInfo,
        AzureIaaSVMJobTaskDetails: AzureIaaSVMJobTaskDetails,
        AzureIaaSVMProtectedItem: AzureIaaSVMProtectedItem,
        AzureIaaSVMHealthDetails: AzureIaaSVMHealthDetails,
        AzureIaaSVMProtectedItemExtendedInfo: AzureIaaSVMProtectedItemExtendedInfo,
        AzureRecoveryServiceVaultProtectionIntent: AzureRecoveryServiceVaultProtectionIntent,
        AzureResourceProtectionIntent: AzureResourceProtectionIntent,
        AzureSqlProtectedItem: AzureSqlProtectedItem,
        AzureSqlProtectedItemExtendedInfo: AzureSqlProtectedItemExtendedInfo,
        AzureStorageJob: AzureStorageJob,
        AzureStorageErrorInfo: AzureStorageErrorInfo,
        AzureStorageJobExtendedInfo: AzureStorageJobExtendedInfo,
        AzureStorageJobTaskDetails: AzureStorageJobTaskDetails,
        AzureVmWorkloadProtectedItem: AzureVmWorkloadProtectedItem,
        ErrorDetail: ErrorDetail,
        AzureVmWorkloadProtectedItemExtendedInfo: AzureVmWorkloadProtectedItemExtendedInfo,
        AzureVmWorkloadSAPHanaDatabaseProtectedItem: AzureVmWorkloadSAPHanaDatabaseProtectedItem,
        AzureVmWorkloadSQLDatabaseProtectedItem: AzureVmWorkloadSQLDatabaseProtectedItem,
        AzureWorkloadAutoProtectionIntent: AzureWorkloadAutoProtectionIntent,
        AzureWorkloadJob: AzureWorkloadJob,
        AzureWorkloadErrorInfo: AzureWorkloadErrorInfo,
        AzureWorkloadJobExtendedInfo: AzureWorkloadJobExtendedInfo,
        AzureWorkloadJobTaskDetails: AzureWorkloadJobTaskDetails,
        AzureWorkloadRestoreRequest: AzureWorkloadRestoreRequest,
        AzureWorkloadSAPHanaRestoreRequest: AzureWorkloadSAPHanaRestoreRequest,
        TargetRestoreInfo: TargetRestoreInfo,
        AzureWorkloadSQLAutoProtectionIntent: AzureWorkloadSQLAutoProtectionIntent,
        AzureWorkloadSQLRestoreRequest: AzureWorkloadSQLRestoreRequest,
        SQLDataDirectoryMapping: SQLDataDirectoryMapping,
        DpmJob: DpmJob,
        DpmErrorInfo: DpmErrorInfo,
        DpmJobExtendedInfo: DpmJobExtendedInfo,
        DpmJobTaskDetails: DpmJobTaskDetails,
        DPMProtectedItem: DPMProtectedItem,
        DPMProtectedItemExtendedInfo: DPMProtectedItemExtendedInfo,
        GenericProtectedItem: GenericProtectedItem,
        IaasVMRestoreRequest: IaasVMRestoreRequest,
        EncryptionDetails: EncryptionDetails,
        MabFileFolderProtectedItem: MabFileFolderProtectedItem,
        MabFileFolderProtectedItemExtendedInfo: MabFileFolderProtectedItemExtendedInfo,
        AzureBackupServerContainer: AzureBackupServerContainer,
        DPMContainerExtendedInfo: DPMContainerExtendedInfo,
        AzureBackupServerEngine: AzureBackupServerEngine,
        AzureFileShareBackupRequest: AzureFileShareBackupRequest,
        AzureFileShareProtectableItem: AzureFileShareProtectableItem,
        AzureFileShareRecoveryPoint: AzureFileShareRecoveryPoint,
        AzureSqlContainer: AzureSqlContainer,
        AzureStorageContainer: AzureStorageContainer,
        AzureStorageProtectableContainer: AzureStorageProtectableContainer,
        AzureVMAppContainerProtectableContainer: AzureVMAppContainerProtectableContainer,
        AzureVmWorkloadItem: AzureVmWorkloadItem,
        AzureVmWorkloadProtectableItem: AzureVmWorkloadProtectableItem,
        PreBackupValidation: PreBackupValidation,
        AzureVmWorkloadSAPHanaDatabaseProtectableItem: AzureVmWorkloadSAPHanaDatabaseProtectableItem,
        AzureVmWorkloadSAPHanaDatabaseWorkloadItem: AzureVmWorkloadSAPHanaDatabaseWorkloadItem,
        AzureVmWorkloadSAPHanaSystemProtectableItem: AzureVmWorkloadSAPHanaSystemProtectableItem,
        AzureVmWorkloadSAPHanaSystemWorkloadItem: AzureVmWorkloadSAPHanaSystemWorkloadItem,
        AzureVmWorkloadSQLAvailabilityGroupProtectableItem: AzureVmWorkloadSQLAvailabilityGroupProtectableItem,
        AzureVmWorkloadSQLDatabaseProtectableItem: AzureVmWorkloadSQLDatabaseProtectableItem,
        AzureVmWorkloadSQLDatabaseWorkloadItem: AzureVmWorkloadSQLDatabaseWorkloadItem,
        AzureVmWorkloadSQLInstanceProtectableItem: AzureVmWorkloadSQLInstanceProtectableItem,
        AzureVmWorkloadSQLInstanceWorkloadItem: AzureVmWorkloadSQLInstanceWorkloadItem,
        SQLDataDirectory: SQLDataDirectory,
        AzureWorkloadBackupRequest: AzureWorkloadBackupRequest,
        AzureWorkloadContainer: AzureWorkloadContainer,
        AzureWorkloadContainerExtendedInfo: AzureWorkloadContainerExtendedInfo,
        InquiryInfo: InquiryInfo,
        WorkloadInquiryDetails: WorkloadInquiryDetails,
        InquiryValidation: InquiryValidation,
        DistributedNodesInfo: DistributedNodesInfo,
        AzureWorkloadRecoveryPoint: AzureWorkloadRecoveryPoint,
        AzureWorkloadSAPHanaRecoveryPoint: AzureWorkloadSAPHanaRecoveryPoint,
        AzureWorkloadSQLRecoveryPoint: AzureWorkloadSQLRecoveryPoint,
        AzureWorkloadSQLRecoveryPointExtendedInfo: AzureWorkloadSQLRecoveryPointExtendedInfo,
        DpmContainer: DpmContainer,
        GenericContainer: GenericContainer,
        GenericContainerExtendedInfo: GenericContainerExtendedInfo,
        ContainerIdentityInfo: ContainerIdentityInfo,
        GenericRecoveryPoint: GenericRecoveryPoint,
        IaaSVMContainer: IaaSVMContainer,
        IaasVMILRRegistrationRequest: IaasVMILRRegistrationRequest,
        IaaSVMProtectableItem: IaaSVMProtectableItem,
        IaasVMRecoveryPoint: IaasVMRecoveryPoint,
        KeyAndSecretDetails: KeyAndSecretDetails,
        KEKDetails: KEKDetails,
        BEKDetails: BEKDetails,
        RecoveryPointTierInformation: RecoveryPointTierInformation,
        MabContainer: MabContainer,
        MabContainerExtendedInfo: MabContainerExtendedInfo,
        MABContainerHealthDetails: MABContainerHealthDetails,
        AzureIaaSClassicComputeVMProtectedItem: AzureIaaSClassicComputeVMProtectedItem,
        AzureIaaSComputeVMProtectedItem: AzureIaaSComputeVMProtectedItem,
        AzureWorkloadSAPHanaPointInTimeRestoreRequest: AzureWorkloadSAPHanaPointInTimeRestoreRequest,
        AzureWorkloadSQLPointInTimeRestoreRequest: AzureWorkloadSQLPointInTimeRestoreRequest,
        AzureIaaSClassicComputeVMContainer: AzureIaaSClassicComputeVMContainer,
        AzureIaaSClassicComputeVMProtectableItem: AzureIaaSClassicComputeVMProtectableItem,
        AzureIaaSComputeVMContainer: AzureIaaSComputeVMContainer,
        AzureIaaSComputeVMProtectableItem: AzureIaaSComputeVMProtectableItem,
        AzureSQLAGWorkloadContainerProtectionContainer: AzureSQLAGWorkloadContainerProtectionContainer,
        AzureVMAppContainerProtectionContainer: AzureVMAppContainerProtectionContainer,
        AzureWorkloadSAPHanaPointInTimeRecoveryPoint: AzureWorkloadSAPHanaPointInTimeRecoveryPoint,
        PointInTimeRange: PointInTimeRange,
        AzureWorkloadSQLPointInTimeRecoveryPoint: AzureWorkloadSQLPointInTimeRecoveryPoint
    });

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    /** Class representing a ProtectionPolicyOperationResults. */
    var ProtectionPolicyOperationResults = /** @class */ (function () {
        /**
         * Create a ProtectionPolicyOperationResults.
         * @param {RecoveryServicesBackupClientContext} client Reference to the service client.
         */
        function ProtectionPolicyOperationResults(client) {
            this.client = client;
        }
        ProtectionPolicyOperationResults.prototype.get = function (vaultName$$1, resourceGroupName$$1, policyName$$1, operationId$$1, options, callback) {
            return this.client.sendOperationRequest({
                vaultName: vaultName$$1,
                resourceGroupName: resourceGroupName$$1,
                policyName: policyName$$1,
                operationId: operationId$$1,
                options: options
            }, getOperationSpec$h, callback);
        };
        return ProtectionPolicyOperationResults;
    }());
    // Operation Specifications
    var serializer$v = new msRest.Serializer(Mappers$v);
    var getOperationSpec$h = {
        httpMethod: "GET",
        path: "Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupPolicies/{policyName}/operationResults/{operationId}",
        urlParameters: [
            vaultName,
            resourceGroupName,
            subscriptionId,
            policyName,
            operationId
        ],
        queryParameters: [
            apiVersion1
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            200: {
                bodyMapper: ProtectionPolicyResource
            },
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer$v
    };

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */

    var Mappers$w = /*#__PURE__*/Object.freeze({
        discriminators: discriminators,
        OperationStatus: OperationStatus,
        OperationStatusError: OperationStatusError,
        OperationStatusExtendedInfo: OperationStatusExtendedInfo,
        CloudError: CloudError,
        OperationStatusJobExtendedInfo: OperationStatusJobExtendedInfo,
        OperationStatusJobsExtendedInfo: OperationStatusJobsExtendedInfo,
        OperationStatusProvisionILRExtendedInfo: OperationStatusProvisionILRExtendedInfo,
        InstantItemRecoveryTarget: InstantItemRecoveryTarget,
        ClientScriptForConnect: ClientScriptForConnect
    });

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    /** Class representing a ProtectionPolicyOperationStatuses. */
    var ProtectionPolicyOperationStatuses = /** @class */ (function () {
        /**
         * Create a ProtectionPolicyOperationStatuses.
         * @param {RecoveryServicesBackupClientContext} client Reference to the service client.
         */
        function ProtectionPolicyOperationStatuses(client) {
            this.client = client;
        }
        ProtectionPolicyOperationStatuses.prototype.get = function (vaultName$$1, resourceGroupName$$1, policyName$$1, operationId$$1, options, callback) {
            return this.client.sendOperationRequest({
                vaultName: vaultName$$1,
                resourceGroupName: resourceGroupName$$1,
                policyName: policyName$$1,
                operationId: operationId$$1,
                options: options
            }, getOperationSpec$i, callback);
        };
        return ProtectionPolicyOperationStatuses;
    }());
    // Operation Specifications
    var serializer$w = new msRest.Serializer(Mappers$w);
    var getOperationSpec$i = {
        httpMethod: "GET",
        path: "Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupPolicies/{policyName}/operations/{operationId}",
        urlParameters: [
            vaultName,
            resourceGroupName,
            subscriptionId,
            policyName,
            operationId
        ],
        queryParameters: [
            apiVersion1
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            200: {
                bodyMapper: OperationStatus
            },
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer$w
    };

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */

    var Mappers$x = /*#__PURE__*/Object.freeze({
        discriminators: discriminators,
        WorkloadProtectableItemResourceList: WorkloadProtectableItemResourceList,
        ResourceList: ResourceList,
        WorkloadProtectableItemResource: WorkloadProtectableItemResource,
        Resource: Resource,
        BaseResource: BaseResource,
        WorkloadProtectableItem: WorkloadProtectableItem,
        CloudError: CloudError,
        JobResource: JobResource,
        Job: Job,
        JobResourceList: JobResourceList,
        MabJob: MabJob,
        MabErrorInfo: MabErrorInfo,
        MabJobExtendedInfo: MabJobExtendedInfo,
        MabJobTaskDetails: MabJobTaskDetails,
        ProtectedItemResource: ProtectedItemResource,
        ProtectedItem: ProtectedItem,
        ProtectedItemResourceList: ProtectedItemResourceList,
        ProtectionIntentResource: ProtectionIntentResource,
        ProtectionIntent: ProtectionIntent,
        ProtectionIntentResourceList: ProtectionIntentResourceList,
        ProtectionPolicyResource: ProtectionPolicyResource,
        ProtectionPolicy: ProtectionPolicy,
        ProtectionPolicyResourceList: ProtectionPolicyResourceList,
        AzureFileShareProtectableItem: AzureFileShareProtectableItem,
        AzureVmWorkloadProtectableItem: AzureVmWorkloadProtectableItem,
        PreBackupValidation: PreBackupValidation,
        AzureVmWorkloadSAPHanaDatabaseProtectableItem: AzureVmWorkloadSAPHanaDatabaseProtectableItem,
        AzureVmWorkloadSAPHanaSystemProtectableItem: AzureVmWorkloadSAPHanaSystemProtectableItem,
        AzureVmWorkloadSQLAvailabilityGroupProtectableItem: AzureVmWorkloadSQLAvailabilityGroupProtectableItem,
        AzureVmWorkloadSQLDatabaseProtectableItem: AzureVmWorkloadSQLDatabaseProtectableItem,
        AzureVmWorkloadSQLInstanceProtectableItem: AzureVmWorkloadSQLInstanceProtectableItem,
        BackupEngineBaseResource: BackupEngineBaseResource,
        BackupEngineBase: BackupEngineBase,
        BackupEngineExtendedInfo: BackupEngineExtendedInfo,
        BackupEngineBaseResourceList: BackupEngineBaseResourceList,
        BackupRequestResource: BackupRequestResource,
        BackupRequest: BackupRequest,
        BackupResourceConfigResource: BackupResourceConfigResource,
        BackupResourceConfig: BackupResourceConfig,
        BackupResourceVaultConfigResource: BackupResourceVaultConfigResource,
        BackupResourceVaultConfig: BackupResourceVaultConfig,
        DpmBackupEngine: DpmBackupEngine,
        IaasVMBackupRequest: IaasVMBackupRequest,
        IaaSVMProtectableItem: IaaSVMProtectableItem,
        ILRRequestResource: ILRRequestResource,
        ILRRequest: ILRRequest,
        ProtectableContainerResource: ProtectableContainerResource,
        ProtectableContainer: ProtectableContainer,
        ProtectableContainerResourceList: ProtectableContainerResourceList,
        ProtectionContainerResource: ProtectionContainerResource,
        ProtectionContainer: ProtectionContainer,
        ProtectionContainerResourceList: ProtectionContainerResourceList,
        RecoveryPointResource: RecoveryPointResource,
        RecoveryPoint: RecoveryPoint,
        RecoveryPointResourceList: RecoveryPointResourceList,
        RestoreRequestResource: RestoreRequestResource,
        RestoreRequest: RestoreRequest,
        WorkloadItemResource: WorkloadItemResource,
        WorkloadItem: WorkloadItem,
        WorkloadItemResourceList: WorkloadItemResourceList,
        AzureFileshareProtectedItem: AzureFileshareProtectedItem,
        AzureFileshareProtectedItemExtendedInfo: AzureFileshareProtectedItemExtendedInfo,
        AzureFileShareProtectionPolicy: AzureFileShareProtectionPolicy,
        SchedulePolicy: SchedulePolicy,
        RetentionPolicy: RetentionPolicy,
        AzureFileShareRestoreRequest: AzureFileShareRestoreRequest,
        RestoreFileSpecs: RestoreFileSpecs,
        TargetAFSRestoreInfo: TargetAFSRestoreInfo,
        AzureIaaSVMJob: AzureIaaSVMJob,
        AzureIaaSVMErrorInfo: AzureIaaSVMErrorInfo,
        AzureIaaSVMJobExtendedInfo: AzureIaaSVMJobExtendedInfo,
        AzureIaaSVMJobTaskDetails: AzureIaaSVMJobTaskDetails,
        AzureIaaSVMProtectedItem: AzureIaaSVMProtectedItem,
        AzureIaaSVMHealthDetails: AzureIaaSVMHealthDetails,
        AzureIaaSVMProtectedItemExtendedInfo: AzureIaaSVMProtectedItemExtendedInfo,
        AzureIaaSVMProtectionPolicy: AzureIaaSVMProtectionPolicy,
        AzureRecoveryServiceVaultProtectionIntent: AzureRecoveryServiceVaultProtectionIntent,
        AzureResourceProtectionIntent: AzureResourceProtectionIntent,
        AzureSqlProtectedItem: AzureSqlProtectedItem,
        AzureSqlProtectedItemExtendedInfo: AzureSqlProtectedItemExtendedInfo,
        AzureSqlProtectionPolicy: AzureSqlProtectionPolicy,
        AzureStorageJob: AzureStorageJob,
        AzureStorageErrorInfo: AzureStorageErrorInfo,
        AzureStorageJobExtendedInfo: AzureStorageJobExtendedInfo,
        AzureStorageJobTaskDetails: AzureStorageJobTaskDetails,
        AzureVmWorkloadProtectedItem: AzureVmWorkloadProtectedItem,
        ErrorDetail: ErrorDetail,
        AzureVmWorkloadProtectedItemExtendedInfo: AzureVmWorkloadProtectedItemExtendedInfo,
        AzureVmWorkloadProtectionPolicy: AzureVmWorkloadProtectionPolicy,
        Settings: Settings,
        SubProtectionPolicy: SubProtectionPolicy,
        AzureVmWorkloadSAPHanaDatabaseProtectedItem: AzureVmWorkloadSAPHanaDatabaseProtectedItem,
        AzureVmWorkloadSQLDatabaseProtectedItem: AzureVmWorkloadSQLDatabaseProtectedItem,
        AzureWorkloadAutoProtectionIntent: AzureWorkloadAutoProtectionIntent,
        AzureWorkloadJob: AzureWorkloadJob,
        AzureWorkloadErrorInfo: AzureWorkloadErrorInfo,
        AzureWorkloadJobExtendedInfo: AzureWorkloadJobExtendedInfo,
        AzureWorkloadJobTaskDetails: AzureWorkloadJobTaskDetails,
        AzureWorkloadRestoreRequest: AzureWorkloadRestoreRequest,
        AzureWorkloadSAPHanaRestoreRequest: AzureWorkloadSAPHanaRestoreRequest,
        TargetRestoreInfo: TargetRestoreInfo,
        AzureWorkloadSQLAutoProtectionIntent: AzureWorkloadSQLAutoProtectionIntent,
        AzureWorkloadSQLRestoreRequest: AzureWorkloadSQLRestoreRequest,
        SQLDataDirectoryMapping: SQLDataDirectoryMapping,
        DpmJob: DpmJob,
        DpmErrorInfo: DpmErrorInfo,
        DpmJobExtendedInfo: DpmJobExtendedInfo,
        DpmJobTaskDetails: DpmJobTaskDetails,
        DPMProtectedItem: DPMProtectedItem,
        DPMProtectedItemExtendedInfo: DPMProtectedItemExtendedInfo,
        GenericProtectedItem: GenericProtectedItem,
        GenericProtectionPolicy: GenericProtectionPolicy,
        IaasVMRestoreRequest: IaasVMRestoreRequest,
        EncryptionDetails: EncryptionDetails,
        LogSchedulePolicy: LogSchedulePolicy,
        LongTermRetentionPolicy: LongTermRetentionPolicy,
        DailyRetentionSchedule: DailyRetentionSchedule,
        RetentionDuration: RetentionDuration,
        WeeklyRetentionSchedule: WeeklyRetentionSchedule,
        MonthlyRetentionSchedule: MonthlyRetentionSchedule,
        DailyRetentionFormat: DailyRetentionFormat,
        Day: Day,
        WeeklyRetentionFormat: WeeklyRetentionFormat,
        YearlyRetentionSchedule: YearlyRetentionSchedule,
        LongTermSchedulePolicy: LongTermSchedulePolicy,
        MabFileFolderProtectedItem: MabFileFolderProtectedItem,
        MabFileFolderProtectedItemExtendedInfo: MabFileFolderProtectedItemExtendedInfo,
        MabProtectionPolicy: MabProtectionPolicy,
        SimpleRetentionPolicy: SimpleRetentionPolicy,
        SimpleSchedulePolicy: SimpleSchedulePolicy,
        AzureBackupServerContainer: AzureBackupServerContainer,
        DPMContainerExtendedInfo: DPMContainerExtendedInfo,
        AzureBackupServerEngine: AzureBackupServerEngine,
        AzureFileShareBackupRequest: AzureFileShareBackupRequest,
        AzureFileShareRecoveryPoint: AzureFileShareRecoveryPoint,
        AzureIaaSClassicComputeVMProtectableItem: AzureIaaSClassicComputeVMProtectableItem,
        AzureIaaSComputeVMProtectableItem: AzureIaaSComputeVMProtectableItem,
        AzureSqlContainer: AzureSqlContainer,
        AzureStorageContainer: AzureStorageContainer,
        AzureStorageProtectableContainer: AzureStorageProtectableContainer,
        AzureVMAppContainerProtectableContainer: AzureVMAppContainerProtectableContainer,
        AzureVmWorkloadItem: AzureVmWorkloadItem,
        AzureVmWorkloadSAPHanaDatabaseWorkloadItem: AzureVmWorkloadSAPHanaDatabaseWorkloadItem,
        AzureVmWorkloadSAPHanaSystemWorkloadItem: AzureVmWorkloadSAPHanaSystemWorkloadItem,
        AzureVmWorkloadSQLDatabaseWorkloadItem: AzureVmWorkloadSQLDatabaseWorkloadItem,
        AzureVmWorkloadSQLInstanceWorkloadItem: AzureVmWorkloadSQLInstanceWorkloadItem,
        SQLDataDirectory: SQLDataDirectory,
        AzureWorkloadBackupRequest: AzureWorkloadBackupRequest,
        AzureWorkloadContainer: AzureWorkloadContainer,
        AzureWorkloadContainerExtendedInfo: AzureWorkloadContainerExtendedInfo,
        InquiryInfo: InquiryInfo,
        WorkloadInquiryDetails: WorkloadInquiryDetails,
        InquiryValidation: InquiryValidation,
        DistributedNodesInfo: DistributedNodesInfo,
        AzureWorkloadRecoveryPoint: AzureWorkloadRecoveryPoint,
        AzureWorkloadSAPHanaRecoveryPoint: AzureWorkloadSAPHanaRecoveryPoint,
        AzureWorkloadSQLRecoveryPoint: AzureWorkloadSQLRecoveryPoint,
        AzureWorkloadSQLRecoveryPointExtendedInfo: AzureWorkloadSQLRecoveryPointExtendedInfo,
        DpmContainer: DpmContainer,
        GenericContainer: GenericContainer,
        GenericContainerExtendedInfo: GenericContainerExtendedInfo,
        ContainerIdentityInfo: ContainerIdentityInfo,
        GenericRecoveryPoint: GenericRecoveryPoint,
        IaaSVMContainer: IaaSVMContainer,
        IaasVMILRRegistrationRequest: IaasVMILRRegistrationRequest,
        IaasVMRecoveryPoint: IaasVMRecoveryPoint,
        KeyAndSecretDetails: KeyAndSecretDetails,
        KEKDetails: KEKDetails,
        BEKDetails: BEKDetails,
        RecoveryPointTierInformation: RecoveryPointTierInformation,
        MabContainer: MabContainer,
        MabContainerExtendedInfo: MabContainerExtendedInfo,
        MABContainerHealthDetails: MABContainerHealthDetails,
        AzureIaaSClassicComputeVMProtectedItem: AzureIaaSClassicComputeVMProtectedItem,
        AzureIaaSComputeVMProtectedItem: AzureIaaSComputeVMProtectedItem,
        AzureWorkloadSAPHanaPointInTimeRestoreRequest: AzureWorkloadSAPHanaPointInTimeRestoreRequest,
        AzureWorkloadSQLPointInTimeRestoreRequest: AzureWorkloadSQLPointInTimeRestoreRequest,
        AzureIaaSClassicComputeVMContainer: AzureIaaSClassicComputeVMContainer,
        AzureIaaSComputeVMContainer: AzureIaaSComputeVMContainer,
        AzureSQLAGWorkloadContainerProtectionContainer: AzureSQLAGWorkloadContainerProtectionContainer,
        AzureVMAppContainerProtectionContainer: AzureVMAppContainerProtectionContainer,
        AzureWorkloadSAPHanaPointInTimeRecoveryPoint: AzureWorkloadSAPHanaPointInTimeRecoveryPoint,
        PointInTimeRange: PointInTimeRange,
        AzureWorkloadSQLPointInTimeRecoveryPoint: AzureWorkloadSQLPointInTimeRecoveryPoint
    });

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    /** Class representing a BackupProtectableItems. */
    var BackupProtectableItems = /** @class */ (function () {
        /**
         * Create a BackupProtectableItems.
         * @param {RecoveryServicesBackupClientContext} client Reference to the service client.
         */
        function BackupProtectableItems(client) {
            this.client = client;
        }
        BackupProtectableItems.prototype.list = function (vaultName$$1, resourceGroupName$$1, options, callback) {
            return this.client.sendOperationRequest({
                vaultName: vaultName$$1,
                resourceGroupName: resourceGroupName$$1,
                options: options
            }, listOperationSpec$9, callback);
        };
        BackupProtectableItems.prototype.listNext = function (nextPageLink$$1, options, callback) {
            return this.client.sendOperationRequest({
                nextPageLink: nextPageLink$$1,
                options: options
            }, listNextOperationSpec$8, callback);
        };
        return BackupProtectableItems;
    }());
    // Operation Specifications
    var serializer$x = new msRest.Serializer(Mappers$x);
    var listOperationSpec$9 = {
        httpMethod: "GET",
        path: "Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupProtectableItems",
        urlParameters: [
            vaultName,
            resourceGroupName,
            subscriptionId
        ],
        queryParameters: [
            apiVersion1,
            filter,
            skipToken
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            200: {
                bodyMapper: WorkloadProtectableItemResourceList
            },
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer$x
    };
    var listNextOperationSpec$8 = {
        httpMethod: "GET",
        baseUrl: "https://management.azure.com",
        path: "{nextLink}",
        urlParameters: [
            nextPageLink
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            200: {
                bodyMapper: WorkloadProtectableItemResourceList
            },
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer$x
    };

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */

    var Mappers$y = /*#__PURE__*/Object.freeze({
        discriminators: discriminators,
        ProtectionContainerResourceList: ProtectionContainerResourceList,
        ResourceList: ResourceList,
        ProtectionContainerResource: ProtectionContainerResource,
        Resource: Resource,
        BaseResource: BaseResource,
        ProtectionContainer: ProtectionContainer,
        CloudError: CloudError,
        JobResource: JobResource,
        Job: Job,
        JobResourceList: JobResourceList,
        MabJob: MabJob,
        MabErrorInfo: MabErrorInfo,
        MabJobExtendedInfo: MabJobExtendedInfo,
        MabJobTaskDetails: MabJobTaskDetails,
        ProtectedItemResource: ProtectedItemResource,
        ProtectedItem: ProtectedItem,
        ProtectedItemResourceList: ProtectedItemResourceList,
        ProtectionIntentResource: ProtectionIntentResource,
        ProtectionIntent: ProtectionIntent,
        ProtectionIntentResourceList: ProtectionIntentResourceList,
        ProtectionPolicyResource: ProtectionPolicyResource,
        ProtectionPolicy: ProtectionPolicy,
        ProtectionPolicyResourceList: ProtectionPolicyResourceList,
        AzureBackupServerContainer: AzureBackupServerContainer,
        DPMContainerExtendedInfo: DPMContainerExtendedInfo,
        AzureSqlContainer: AzureSqlContainer,
        AzureStorageContainer: AzureStorageContainer,
        AzureWorkloadContainer: AzureWorkloadContainer,
        AzureWorkloadContainerExtendedInfo: AzureWorkloadContainerExtendedInfo,
        InquiryInfo: InquiryInfo,
        ErrorDetail: ErrorDetail,
        WorkloadInquiryDetails: WorkloadInquiryDetails,
        InquiryValidation: InquiryValidation,
        DistributedNodesInfo: DistributedNodesInfo,
        BackupEngineBaseResource: BackupEngineBaseResource,
        BackupEngineBase: BackupEngineBase,
        BackupEngineExtendedInfo: BackupEngineExtendedInfo,
        BackupEngineBaseResourceList: BackupEngineBaseResourceList,
        BackupRequestResource: BackupRequestResource,
        BackupRequest: BackupRequest,
        BackupResourceConfigResource: BackupResourceConfigResource,
        BackupResourceConfig: BackupResourceConfig,
        BackupResourceVaultConfigResource: BackupResourceVaultConfigResource,
        BackupResourceVaultConfig: BackupResourceVaultConfig,
        DpmBackupEngine: DpmBackupEngine,
        DpmContainer: DpmContainer,
        GenericContainer: GenericContainer,
        GenericContainerExtendedInfo: GenericContainerExtendedInfo,
        ContainerIdentityInfo: ContainerIdentityInfo,
        IaasVMBackupRequest: IaasVMBackupRequest,
        IaaSVMContainer: IaaSVMContainer,
        ILRRequestResource: ILRRequestResource,
        ILRRequest: ILRRequest,
        MabContainer: MabContainer,
        MabContainerExtendedInfo: MabContainerExtendedInfo,
        MABContainerHealthDetails: MABContainerHealthDetails,
        ProtectableContainerResource: ProtectableContainerResource,
        ProtectableContainer: ProtectableContainer,
        ProtectableContainerResourceList: ProtectableContainerResourceList,
        RecoveryPointResource: RecoveryPointResource,
        RecoveryPoint: RecoveryPoint,
        RecoveryPointResourceList: RecoveryPointResourceList,
        RestoreRequestResource: RestoreRequestResource,
        RestoreRequest: RestoreRequest,
        WorkloadItemResource: WorkloadItemResource,
        WorkloadItem: WorkloadItem,
        WorkloadItemResourceList: WorkloadItemResourceList,
        WorkloadProtectableItemResource: WorkloadProtectableItemResource,
        WorkloadProtectableItem: WorkloadProtectableItem,
        WorkloadProtectableItemResourceList: WorkloadProtectableItemResourceList,
        AzureFileshareProtectedItem: AzureFileshareProtectedItem,
        AzureFileshareProtectedItemExtendedInfo: AzureFileshareProtectedItemExtendedInfo,
        AzureFileShareProtectionPolicy: AzureFileShareProtectionPolicy,
        SchedulePolicy: SchedulePolicy,
        RetentionPolicy: RetentionPolicy,
        AzureFileShareRestoreRequest: AzureFileShareRestoreRequest,
        RestoreFileSpecs: RestoreFileSpecs,
        TargetAFSRestoreInfo: TargetAFSRestoreInfo,
        AzureIaaSVMJob: AzureIaaSVMJob,
        AzureIaaSVMErrorInfo: AzureIaaSVMErrorInfo,
        AzureIaaSVMJobExtendedInfo: AzureIaaSVMJobExtendedInfo,
        AzureIaaSVMJobTaskDetails: AzureIaaSVMJobTaskDetails,
        AzureIaaSVMProtectedItem: AzureIaaSVMProtectedItem,
        AzureIaaSVMHealthDetails: AzureIaaSVMHealthDetails,
        AzureIaaSVMProtectedItemExtendedInfo: AzureIaaSVMProtectedItemExtendedInfo,
        AzureIaaSVMProtectionPolicy: AzureIaaSVMProtectionPolicy,
        AzureRecoveryServiceVaultProtectionIntent: AzureRecoveryServiceVaultProtectionIntent,
        AzureResourceProtectionIntent: AzureResourceProtectionIntent,
        AzureSqlProtectedItem: AzureSqlProtectedItem,
        AzureSqlProtectedItemExtendedInfo: AzureSqlProtectedItemExtendedInfo,
        AzureSqlProtectionPolicy: AzureSqlProtectionPolicy,
        AzureStorageJob: AzureStorageJob,
        AzureStorageErrorInfo: AzureStorageErrorInfo,
        AzureStorageJobExtendedInfo: AzureStorageJobExtendedInfo,
        AzureStorageJobTaskDetails: AzureStorageJobTaskDetails,
        AzureVmWorkloadProtectedItem: AzureVmWorkloadProtectedItem,
        AzureVmWorkloadProtectedItemExtendedInfo: AzureVmWorkloadProtectedItemExtendedInfo,
        AzureVmWorkloadProtectionPolicy: AzureVmWorkloadProtectionPolicy,
        Settings: Settings,
        SubProtectionPolicy: SubProtectionPolicy,
        AzureVmWorkloadSAPHanaDatabaseProtectedItem: AzureVmWorkloadSAPHanaDatabaseProtectedItem,
        AzureVmWorkloadSQLDatabaseProtectedItem: AzureVmWorkloadSQLDatabaseProtectedItem,
        AzureWorkloadAutoProtectionIntent: AzureWorkloadAutoProtectionIntent,
        AzureWorkloadJob: AzureWorkloadJob,
        AzureWorkloadErrorInfo: AzureWorkloadErrorInfo,
        AzureWorkloadJobExtendedInfo: AzureWorkloadJobExtendedInfo,
        AzureWorkloadJobTaskDetails: AzureWorkloadJobTaskDetails,
        AzureWorkloadRestoreRequest: AzureWorkloadRestoreRequest,
        AzureWorkloadSAPHanaRestoreRequest: AzureWorkloadSAPHanaRestoreRequest,
        TargetRestoreInfo: TargetRestoreInfo,
        AzureWorkloadSQLAutoProtectionIntent: AzureWorkloadSQLAutoProtectionIntent,
        AzureWorkloadSQLRestoreRequest: AzureWorkloadSQLRestoreRequest,
        SQLDataDirectoryMapping: SQLDataDirectoryMapping,
        DpmJob: DpmJob,
        DpmErrorInfo: DpmErrorInfo,
        DpmJobExtendedInfo: DpmJobExtendedInfo,
        DpmJobTaskDetails: DpmJobTaskDetails,
        DPMProtectedItem: DPMProtectedItem,
        DPMProtectedItemExtendedInfo: DPMProtectedItemExtendedInfo,
        GenericProtectedItem: GenericProtectedItem,
        GenericProtectionPolicy: GenericProtectionPolicy,
        IaasVMRestoreRequest: IaasVMRestoreRequest,
        EncryptionDetails: EncryptionDetails,
        LogSchedulePolicy: LogSchedulePolicy,
        LongTermRetentionPolicy: LongTermRetentionPolicy,
        DailyRetentionSchedule: DailyRetentionSchedule,
        RetentionDuration: RetentionDuration,
        WeeklyRetentionSchedule: WeeklyRetentionSchedule,
        MonthlyRetentionSchedule: MonthlyRetentionSchedule,
        DailyRetentionFormat: DailyRetentionFormat,
        Day: Day,
        WeeklyRetentionFormat: WeeklyRetentionFormat,
        YearlyRetentionSchedule: YearlyRetentionSchedule,
        LongTermSchedulePolicy: LongTermSchedulePolicy,
        MabFileFolderProtectedItem: MabFileFolderProtectedItem,
        MabFileFolderProtectedItemExtendedInfo: MabFileFolderProtectedItemExtendedInfo,
        MabProtectionPolicy: MabProtectionPolicy,
        SimpleRetentionPolicy: SimpleRetentionPolicy,
        SimpleSchedulePolicy: SimpleSchedulePolicy,
        AzureBackupServerEngine: AzureBackupServerEngine,
        AzureFileShareBackupRequest: AzureFileShareBackupRequest,
        AzureFileShareProtectableItem: AzureFileShareProtectableItem,
        AzureFileShareRecoveryPoint: AzureFileShareRecoveryPoint,
        AzureIaaSClassicComputeVMContainer: AzureIaaSClassicComputeVMContainer,
        AzureIaaSComputeVMContainer: AzureIaaSComputeVMContainer,
        AzureSQLAGWorkloadContainerProtectionContainer: AzureSQLAGWorkloadContainerProtectionContainer,
        AzureStorageProtectableContainer: AzureStorageProtectableContainer,
        AzureVMAppContainerProtectableContainer: AzureVMAppContainerProtectableContainer,
        AzureVMAppContainerProtectionContainer: AzureVMAppContainerProtectionContainer,
        AzureVmWorkloadItem: AzureVmWorkloadItem,
        AzureVmWorkloadProtectableItem: AzureVmWorkloadProtectableItem,
        PreBackupValidation: PreBackupValidation,
        AzureVmWorkloadSAPHanaDatabaseProtectableItem: AzureVmWorkloadSAPHanaDatabaseProtectableItem,
        AzureVmWorkloadSAPHanaDatabaseWorkloadItem: AzureVmWorkloadSAPHanaDatabaseWorkloadItem,
        AzureVmWorkloadSAPHanaSystemProtectableItem: AzureVmWorkloadSAPHanaSystemProtectableItem,
        AzureVmWorkloadSAPHanaSystemWorkloadItem: AzureVmWorkloadSAPHanaSystemWorkloadItem,
        AzureVmWorkloadSQLAvailabilityGroupProtectableItem: AzureVmWorkloadSQLAvailabilityGroupProtectableItem,
        AzureVmWorkloadSQLDatabaseProtectableItem: AzureVmWorkloadSQLDatabaseProtectableItem,
        AzureVmWorkloadSQLDatabaseWorkloadItem: AzureVmWorkloadSQLDatabaseWorkloadItem,
        AzureVmWorkloadSQLInstanceProtectableItem: AzureVmWorkloadSQLInstanceProtectableItem,
        AzureVmWorkloadSQLInstanceWorkloadItem: AzureVmWorkloadSQLInstanceWorkloadItem,
        SQLDataDirectory: SQLDataDirectory,
        AzureWorkloadBackupRequest: AzureWorkloadBackupRequest,
        AzureWorkloadRecoveryPoint: AzureWorkloadRecoveryPoint,
        AzureWorkloadSAPHanaRecoveryPoint: AzureWorkloadSAPHanaRecoveryPoint,
        AzureWorkloadSQLRecoveryPoint: AzureWorkloadSQLRecoveryPoint,
        AzureWorkloadSQLRecoveryPointExtendedInfo: AzureWorkloadSQLRecoveryPointExtendedInfo,
        GenericRecoveryPoint: GenericRecoveryPoint,
        IaasVMILRRegistrationRequest: IaasVMILRRegistrationRequest,
        IaaSVMProtectableItem: IaaSVMProtectableItem,
        IaasVMRecoveryPoint: IaasVMRecoveryPoint,
        KeyAndSecretDetails: KeyAndSecretDetails,
        KEKDetails: KEKDetails,
        BEKDetails: BEKDetails,
        RecoveryPointTierInformation: RecoveryPointTierInformation,
        AzureIaaSClassicComputeVMProtectedItem: AzureIaaSClassicComputeVMProtectedItem,
        AzureIaaSComputeVMProtectedItem: AzureIaaSComputeVMProtectedItem,
        AzureWorkloadSAPHanaPointInTimeRestoreRequest: AzureWorkloadSAPHanaPointInTimeRestoreRequest,
        AzureWorkloadSQLPointInTimeRestoreRequest: AzureWorkloadSQLPointInTimeRestoreRequest,
        AzureIaaSClassicComputeVMProtectableItem: AzureIaaSClassicComputeVMProtectableItem,
        AzureIaaSComputeVMProtectableItem: AzureIaaSComputeVMProtectableItem,
        AzureWorkloadSAPHanaPointInTimeRecoveryPoint: AzureWorkloadSAPHanaPointInTimeRecoveryPoint,
        PointInTimeRange: PointInTimeRange,
        AzureWorkloadSQLPointInTimeRecoveryPoint: AzureWorkloadSQLPointInTimeRecoveryPoint
    });

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    /** Class representing a BackupProtectionContainers. */
    var BackupProtectionContainers = /** @class */ (function () {
        /**
         * Create a BackupProtectionContainers.
         * @param {RecoveryServicesBackupClientContext} client Reference to the service client.
         */
        function BackupProtectionContainers(client) {
            this.client = client;
        }
        BackupProtectionContainers.prototype.list = function (vaultName$$1, resourceGroupName$$1, options, callback) {
            return this.client.sendOperationRequest({
                vaultName: vaultName$$1,
                resourceGroupName: resourceGroupName$$1,
                options: options
            }, listOperationSpec$a, callback);
        };
        BackupProtectionContainers.prototype.listNext = function (nextPageLink$$1, options, callback) {
            return this.client.sendOperationRequest({
                nextPageLink: nextPageLink$$1,
                options: options
            }, listNextOperationSpec$9, callback);
        };
        return BackupProtectionContainers;
    }());
    // Operation Specifications
    var serializer$y = new msRest.Serializer(Mappers$y);
    var listOperationSpec$a = {
        httpMethod: "GET",
        path: "Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupProtectionContainers",
        urlParameters: [
            vaultName,
            resourceGroupName,
            subscriptionId
        ],
        queryParameters: [
            apiVersion1,
            filter
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            200: {
                bodyMapper: ProtectionContainerResourceList
            },
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer$y
    };
    var listNextOperationSpec$9 = {
        httpMethod: "GET",
        baseUrl: "https://management.azure.com",
        path: "{nextLink}",
        urlParameters: [
            nextPageLink
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            200: {
                bodyMapper: ProtectionContainerResourceList
            },
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer$y
    };

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */

    var Mappers$z = /*#__PURE__*/Object.freeze({
        discriminators: discriminators,
        TokenInformation: TokenInformation,
        CloudError: CloudError
    });

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    /** Class representing a SecurityPINs. */
    var SecurityPINs = /** @class */ (function () {
        /**
         * Create a SecurityPINs.
         * @param {RecoveryServicesBackupClientContext} client Reference to the service client.
         */
        function SecurityPINs(client) {
            this.client = client;
        }
        SecurityPINs.prototype.get = function (vaultName$$1, resourceGroupName$$1, options, callback) {
            return this.client.sendOperationRequest({
                vaultName: vaultName$$1,
                resourceGroupName: resourceGroupName$$1,
                options: options
            }, getOperationSpec$j, callback);
        };
        return SecurityPINs;
    }());
    // Operation Specifications
    var serializer$z = new msRest.Serializer(Mappers$z);
    var getOperationSpec$j = {
        httpMethod: "POST",
        path: "Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupSecurityPIN",
        urlParameters: [
            vaultName,
            resourceGroupName,
            subscriptionId
        ],
        queryParameters: [
            apiVersion1
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            200: {
                bodyMapper: TokenInformation
            },
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer$z
    };

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */

    var Mappers$A = /*#__PURE__*/Object.freeze({
        discriminators: discriminators,
        BackupResourceConfigResource: BackupResourceConfigResource,
        Resource: Resource,
        BaseResource: BaseResource,
        BackupResourceConfig: BackupResourceConfig,
        CloudError: CloudError,
        JobResource: JobResource,
        Job: Job,
        MabJob: MabJob,
        MabErrorInfo: MabErrorInfo,
        MabJobExtendedInfo: MabJobExtendedInfo,
        MabJobTaskDetails: MabJobTaskDetails,
        ProtectedItemResource: ProtectedItemResource,
        ProtectedItem: ProtectedItem,
        ProtectionIntentResource: ProtectionIntentResource,
        ProtectionIntent: ProtectionIntent,
        ProtectionPolicyResource: ProtectionPolicyResource,
        ProtectionPolicy: ProtectionPolicy,
        BackupEngineBaseResource: BackupEngineBaseResource,
        BackupEngineBase: BackupEngineBase,
        BackupEngineExtendedInfo: BackupEngineExtendedInfo,
        BackupRequestResource: BackupRequestResource,
        BackupRequest: BackupRequest,
        BackupResourceVaultConfigResource: BackupResourceVaultConfigResource,
        BackupResourceVaultConfig: BackupResourceVaultConfig,
        DpmBackupEngine: DpmBackupEngine,
        IaasVMBackupRequest: IaasVMBackupRequest,
        ILRRequestResource: ILRRequestResource,
        ILRRequest: ILRRequest,
        ProtectableContainerResource: ProtectableContainerResource,
        ProtectableContainer: ProtectableContainer,
        ProtectionContainerResource: ProtectionContainerResource,
        ProtectionContainer: ProtectionContainer,
        RecoveryPointResource: RecoveryPointResource,
        RecoveryPoint: RecoveryPoint,
        RestoreRequestResource: RestoreRequestResource,
        RestoreRequest: RestoreRequest,
        WorkloadItemResource: WorkloadItemResource,
        WorkloadItem: WorkloadItem,
        WorkloadProtectableItemResource: WorkloadProtectableItemResource,
        WorkloadProtectableItem: WorkloadProtectableItem,
        AzureFileshareProtectedItem: AzureFileshareProtectedItem,
        AzureFileshareProtectedItemExtendedInfo: AzureFileshareProtectedItemExtendedInfo,
        AzureFileShareProtectionPolicy: AzureFileShareProtectionPolicy,
        SchedulePolicy: SchedulePolicy,
        RetentionPolicy: RetentionPolicy,
        AzureFileShareRestoreRequest: AzureFileShareRestoreRequest,
        RestoreFileSpecs: RestoreFileSpecs,
        TargetAFSRestoreInfo: TargetAFSRestoreInfo,
        AzureIaaSVMJob: AzureIaaSVMJob,
        AzureIaaSVMErrorInfo: AzureIaaSVMErrorInfo,
        AzureIaaSVMJobExtendedInfo: AzureIaaSVMJobExtendedInfo,
        AzureIaaSVMJobTaskDetails: AzureIaaSVMJobTaskDetails,
        AzureIaaSVMProtectedItem: AzureIaaSVMProtectedItem,
        AzureIaaSVMHealthDetails: AzureIaaSVMHealthDetails,
        AzureIaaSVMProtectedItemExtendedInfo: AzureIaaSVMProtectedItemExtendedInfo,
        AzureIaaSVMProtectionPolicy: AzureIaaSVMProtectionPolicy,
        AzureRecoveryServiceVaultProtectionIntent: AzureRecoveryServiceVaultProtectionIntent,
        AzureResourceProtectionIntent: AzureResourceProtectionIntent,
        AzureSqlProtectedItem: AzureSqlProtectedItem,
        AzureSqlProtectedItemExtendedInfo: AzureSqlProtectedItemExtendedInfo,
        AzureSqlProtectionPolicy: AzureSqlProtectionPolicy,
        AzureStorageJob: AzureStorageJob,
        AzureStorageErrorInfo: AzureStorageErrorInfo,
        AzureStorageJobExtendedInfo: AzureStorageJobExtendedInfo,
        AzureStorageJobTaskDetails: AzureStorageJobTaskDetails,
        AzureVmWorkloadProtectedItem: AzureVmWorkloadProtectedItem,
        ErrorDetail: ErrorDetail,
        AzureVmWorkloadProtectedItemExtendedInfo: AzureVmWorkloadProtectedItemExtendedInfo,
        AzureVmWorkloadProtectionPolicy: AzureVmWorkloadProtectionPolicy,
        Settings: Settings,
        SubProtectionPolicy: SubProtectionPolicy,
        AzureVmWorkloadSAPHanaDatabaseProtectedItem: AzureVmWorkloadSAPHanaDatabaseProtectedItem,
        AzureVmWorkloadSQLDatabaseProtectedItem: AzureVmWorkloadSQLDatabaseProtectedItem,
        AzureWorkloadAutoProtectionIntent: AzureWorkloadAutoProtectionIntent,
        AzureWorkloadJob: AzureWorkloadJob,
        AzureWorkloadErrorInfo: AzureWorkloadErrorInfo,
        AzureWorkloadJobExtendedInfo: AzureWorkloadJobExtendedInfo,
        AzureWorkloadJobTaskDetails: AzureWorkloadJobTaskDetails,
        AzureWorkloadRestoreRequest: AzureWorkloadRestoreRequest,
        AzureWorkloadSAPHanaRestoreRequest: AzureWorkloadSAPHanaRestoreRequest,
        TargetRestoreInfo: TargetRestoreInfo,
        AzureWorkloadSQLAutoProtectionIntent: AzureWorkloadSQLAutoProtectionIntent,
        AzureWorkloadSQLRestoreRequest: AzureWorkloadSQLRestoreRequest,
        SQLDataDirectoryMapping: SQLDataDirectoryMapping,
        DpmJob: DpmJob,
        DpmErrorInfo: DpmErrorInfo,
        DpmJobExtendedInfo: DpmJobExtendedInfo,
        DpmJobTaskDetails: DpmJobTaskDetails,
        DPMProtectedItem: DPMProtectedItem,
        DPMProtectedItemExtendedInfo: DPMProtectedItemExtendedInfo,
        GenericProtectedItem: GenericProtectedItem,
        GenericProtectionPolicy: GenericProtectionPolicy,
        IaasVMRestoreRequest: IaasVMRestoreRequest,
        EncryptionDetails: EncryptionDetails,
        LogSchedulePolicy: LogSchedulePolicy,
        LongTermRetentionPolicy: LongTermRetentionPolicy,
        DailyRetentionSchedule: DailyRetentionSchedule,
        RetentionDuration: RetentionDuration,
        WeeklyRetentionSchedule: WeeklyRetentionSchedule,
        MonthlyRetentionSchedule: MonthlyRetentionSchedule,
        DailyRetentionFormat: DailyRetentionFormat,
        Day: Day,
        WeeklyRetentionFormat: WeeklyRetentionFormat,
        YearlyRetentionSchedule: YearlyRetentionSchedule,
        LongTermSchedulePolicy: LongTermSchedulePolicy,
        MabFileFolderProtectedItem: MabFileFolderProtectedItem,
        MabFileFolderProtectedItemExtendedInfo: MabFileFolderProtectedItemExtendedInfo,
        MabProtectionPolicy: MabProtectionPolicy,
        SimpleRetentionPolicy: SimpleRetentionPolicy,
        SimpleSchedulePolicy: SimpleSchedulePolicy,
        AzureBackupServerContainer: AzureBackupServerContainer,
        DPMContainerExtendedInfo: DPMContainerExtendedInfo,
        AzureBackupServerEngine: AzureBackupServerEngine,
        AzureFileShareBackupRequest: AzureFileShareBackupRequest,
        AzureFileShareProtectableItem: AzureFileShareProtectableItem,
        AzureFileShareRecoveryPoint: AzureFileShareRecoveryPoint,
        AzureSqlContainer: AzureSqlContainer,
        AzureStorageContainer: AzureStorageContainer,
        AzureStorageProtectableContainer: AzureStorageProtectableContainer,
        AzureVMAppContainerProtectableContainer: AzureVMAppContainerProtectableContainer,
        AzureVmWorkloadItem: AzureVmWorkloadItem,
        AzureVmWorkloadProtectableItem: AzureVmWorkloadProtectableItem,
        PreBackupValidation: PreBackupValidation,
        AzureVmWorkloadSAPHanaDatabaseProtectableItem: AzureVmWorkloadSAPHanaDatabaseProtectableItem,
        AzureVmWorkloadSAPHanaDatabaseWorkloadItem: AzureVmWorkloadSAPHanaDatabaseWorkloadItem,
        AzureVmWorkloadSAPHanaSystemProtectableItem: AzureVmWorkloadSAPHanaSystemProtectableItem,
        AzureVmWorkloadSAPHanaSystemWorkloadItem: AzureVmWorkloadSAPHanaSystemWorkloadItem,
        AzureVmWorkloadSQLAvailabilityGroupProtectableItem: AzureVmWorkloadSQLAvailabilityGroupProtectableItem,
        AzureVmWorkloadSQLDatabaseProtectableItem: AzureVmWorkloadSQLDatabaseProtectableItem,
        AzureVmWorkloadSQLDatabaseWorkloadItem: AzureVmWorkloadSQLDatabaseWorkloadItem,
        AzureVmWorkloadSQLInstanceProtectableItem: AzureVmWorkloadSQLInstanceProtectableItem,
        AzureVmWorkloadSQLInstanceWorkloadItem: AzureVmWorkloadSQLInstanceWorkloadItem,
        SQLDataDirectory: SQLDataDirectory,
        AzureWorkloadBackupRequest: AzureWorkloadBackupRequest,
        AzureWorkloadContainer: AzureWorkloadContainer,
        AzureWorkloadContainerExtendedInfo: AzureWorkloadContainerExtendedInfo,
        InquiryInfo: InquiryInfo,
        WorkloadInquiryDetails: WorkloadInquiryDetails,
        InquiryValidation: InquiryValidation,
        DistributedNodesInfo: DistributedNodesInfo,
        AzureWorkloadRecoveryPoint: AzureWorkloadRecoveryPoint,
        AzureWorkloadSAPHanaRecoveryPoint: AzureWorkloadSAPHanaRecoveryPoint,
        AzureWorkloadSQLRecoveryPoint: AzureWorkloadSQLRecoveryPoint,
        AzureWorkloadSQLRecoveryPointExtendedInfo: AzureWorkloadSQLRecoveryPointExtendedInfo,
        DpmContainer: DpmContainer,
        GenericContainer: GenericContainer,
        GenericContainerExtendedInfo: GenericContainerExtendedInfo,
        ContainerIdentityInfo: ContainerIdentityInfo,
        GenericRecoveryPoint: GenericRecoveryPoint,
        IaaSVMContainer: IaaSVMContainer,
        IaasVMILRRegistrationRequest: IaasVMILRRegistrationRequest,
        IaaSVMProtectableItem: IaaSVMProtectableItem,
        IaasVMRecoveryPoint: IaasVMRecoveryPoint,
        KeyAndSecretDetails: KeyAndSecretDetails,
        KEKDetails: KEKDetails,
        BEKDetails: BEKDetails,
        RecoveryPointTierInformation: RecoveryPointTierInformation,
        MabContainer: MabContainer,
        MabContainerExtendedInfo: MabContainerExtendedInfo,
        MABContainerHealthDetails: MABContainerHealthDetails,
        AzureIaaSClassicComputeVMProtectedItem: AzureIaaSClassicComputeVMProtectedItem,
        AzureIaaSComputeVMProtectedItem: AzureIaaSComputeVMProtectedItem,
        AzureWorkloadSAPHanaPointInTimeRestoreRequest: AzureWorkloadSAPHanaPointInTimeRestoreRequest,
        AzureWorkloadSQLPointInTimeRestoreRequest: AzureWorkloadSQLPointInTimeRestoreRequest,
        AzureIaaSClassicComputeVMContainer: AzureIaaSClassicComputeVMContainer,
        AzureIaaSClassicComputeVMProtectableItem: AzureIaaSClassicComputeVMProtectableItem,
        AzureIaaSComputeVMContainer: AzureIaaSComputeVMContainer,
        AzureIaaSComputeVMProtectableItem: AzureIaaSComputeVMProtectableItem,
        AzureSQLAGWorkloadContainerProtectionContainer: AzureSQLAGWorkloadContainerProtectionContainer,
        AzureVMAppContainerProtectionContainer: AzureVMAppContainerProtectionContainer,
        AzureWorkloadSAPHanaPointInTimeRecoveryPoint: AzureWorkloadSAPHanaPointInTimeRecoveryPoint,
        PointInTimeRange: PointInTimeRange,
        AzureWorkloadSQLPointInTimeRecoveryPoint: AzureWorkloadSQLPointInTimeRecoveryPoint
    });

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    /** Class representing a BackupResourceStorageConfigs. */
    var BackupResourceStorageConfigs = /** @class */ (function () {
        /**
         * Create a BackupResourceStorageConfigs.
         * @param {RecoveryServicesBackupClientContext} client Reference to the service client.
         */
        function BackupResourceStorageConfigs(client) {
            this.client = client;
        }
        BackupResourceStorageConfigs.prototype.get = function (vaultName$$1, resourceGroupName$$1, options, callback) {
            return this.client.sendOperationRequest({
                vaultName: vaultName$$1,
                resourceGroupName: resourceGroupName$$1,
                options: options
            }, getOperationSpec$k, callback);
        };
        BackupResourceStorageConfigs.prototype.update = function (vaultName$$1, resourceGroupName$$1, parameters, options, callback) {
            return this.client.sendOperationRequest({
                vaultName: vaultName$$1,
                resourceGroupName: resourceGroupName$$1,
                parameters: parameters,
                options: options
            }, updateOperationSpec$1, callback);
        };
        return BackupResourceStorageConfigs;
    }());
    // Operation Specifications
    var serializer$A = new msRest.Serializer(Mappers$A);
    var getOperationSpec$k = {
        httpMethod: "GET",
        path: "Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupstorageconfig/vaultstorageconfig",
        urlParameters: [
            vaultName,
            resourceGroupName,
            subscriptionId
        ],
        queryParameters: [
            apiVersion1
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            200: {
                bodyMapper: BackupResourceConfigResource
            },
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer$A
    };
    var updateOperationSpec$1 = {
        httpMethod: "PATCH",
        path: "Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupstorageconfig/vaultstorageconfig",
        urlParameters: [
            vaultName,
            resourceGroupName,
            subscriptionId
        ],
        queryParameters: [
            apiVersion1
        ],
        headerParameters: [
            acceptLanguage
        ],
        requestBody: {
            parameterPath: "parameters",
            mapper: __assign({}, BackupResourceConfigResource, { required: true })
        },
        responses: {
            204: {},
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer$A
    };

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */

    var Mappers$B = /*#__PURE__*/Object.freeze({
        discriminators: discriminators,
        ClientDiscoveryResponse: ClientDiscoveryResponse,
        ClientDiscoveryValueForSingleApi: ClientDiscoveryValueForSingleApi,
        ClientDiscoveryDisplay: ClientDiscoveryDisplay,
        ClientDiscoveryForProperties: ClientDiscoveryForProperties,
        ClientDiscoveryForServiceSpecification: ClientDiscoveryForServiceSpecification,
        ClientDiscoveryForLogSpecification: ClientDiscoveryForLogSpecification,
        CloudError: CloudError
    });

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    /** Class representing a Operations. */
    var Operations = /** @class */ (function () {
        /**
         * Create a Operations.
         * @param {RecoveryServicesBackupClientContext} client Reference to the service client.
         */
        function Operations(client) {
            this.client = client;
        }
        Operations.prototype.list = function (options, callback) {
            return this.client.sendOperationRequest({
                options: options
            }, listOperationSpec$b, callback);
        };
        Operations.prototype.listNext = function (nextPageLink$$1, options, callback) {
            return this.client.sendOperationRequest({
                nextPageLink: nextPageLink$$1,
                options: options
            }, listNextOperationSpec$a, callback);
        };
        return Operations;
    }());
    // Operation Specifications
    var serializer$B = new msRest.Serializer(Mappers$B);
    var listOperationSpec$b = {
        httpMethod: "GET",
        path: "providers/Microsoft.RecoveryServices/operations",
        queryParameters: [
            apiVersion2
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            200: {
                bodyMapper: ClientDiscoveryResponse
            },
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer$B
    };
    var listNextOperationSpec$a = {
        httpMethod: "GET",
        baseUrl: "https://management.azure.com",
        path: "{nextLink}",
        urlParameters: [
            nextPageLink
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            200: {
                bodyMapper: ClientDiscoveryResponse
            },
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer$B
    };

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    var packageName = "@azure/arm-recoveryservicesbackup";
    var packageVersion = "1.0.0";
    var RecoveryServicesBackupClientContext = /** @class */ (function (_super) {
        __extends(RecoveryServicesBackupClientContext, _super);
        /**
         * Initializes a new instance of the RecoveryServicesBackupClient class.
         * @param credentials Credentials needed for the client to connect to Azure.
         * @param subscriptionId The subscription Id.
         * @param [options] The parameter options
         */
        function RecoveryServicesBackupClientContext(credentials, subscriptionId, options) {
            var _this = this;
            if (credentials == undefined) {
                throw new Error('\'credentials\' cannot be null.');
            }
            if (subscriptionId == undefined) {
                throw new Error('\'subscriptionId\' cannot be null.');
            }
            if (!options) {
                options = {};
            }
            _this = _super.call(this, credentials, options) || this;
            _this.acceptLanguage = 'en-US';
            _this.longRunningOperationRetryTimeout = 30;
            _this.baseUri = options.baseUri || _this.baseUri || "https://management.azure.com";
            _this.requestContentType = "application/json; charset=utf-8";
            _this.credentials = credentials;
            _this.subscriptionId = subscriptionId;
            _this.addUserAgentInfo(packageName + "/" + packageVersion);
            if (options.acceptLanguage !== null && options.acceptLanguage !== undefined) {
                _this.acceptLanguage = options.acceptLanguage;
            }
            if (options.longRunningOperationRetryTimeout !== null && options.longRunningOperationRetryTimeout !== undefined) {
                _this.longRunningOperationRetryTimeout = options.longRunningOperationRetryTimeout;
            }
            return _this;
        }
        return RecoveryServicesBackupClientContext;
    }(msRestAzure.AzureServiceClient));

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    var RecoveryServicesBackupClient = /** @class */ (function (_super) {
        __extends(RecoveryServicesBackupClient, _super);
        /**
         * Initializes a new instance of the RecoveryServicesBackupClient class.
         * @param credentials Credentials needed for the client to connect to Azure.
         * @param subscriptionId The subscription Id.
         * @param [options] The parameter options
         */
        function RecoveryServicesBackupClient(credentials, subscriptionId, options) {
            var _this = _super.call(this, credentials, subscriptionId, options) || this;
            _this.protectionIntent = new ProtectionIntentOperations(_this);
            _this.backupStatus = new BackupStatus(_this);
            _this.featureSupport = new FeatureSupport(_this);
            _this.backupJobs = new BackupJobs(_this);
            _this.jobDetails = new JobDetails(_this);
            _this.exportJobsOperationResults = new ExportJobsOperationResults(_this);
            _this.jobs = new Jobs(_this);
            _this.backupPolicies = new BackupPolicies(_this);
            _this.backupProtectedItems = new BackupProtectedItems(_this);
            _this.backupProtectionIntent = new BackupProtectionIntent(_this);
            _this.backupUsageSummaries = new BackupUsageSummaries(_this);
            _this.operation = new Operation(_this);
            _this.backupResourceVaultConfigs = new BackupResourceVaultConfigs(_this);
            _this.backupEngines = new BackupEngines(_this);
            _this.protectionContainerRefreshOperationResults = new ProtectionContainerRefreshOperationResults(_this);
            _this.protectableContainers = new ProtectableContainers(_this);
            _this.protectionContainers = new ProtectionContainers(_this);
            _this.backupWorkloadItems = new BackupWorkloadItems(_this);
            _this.protectionContainerOperationResults = new ProtectionContainerOperationResults(_this);
            _this.protectedItems = new ProtectedItems(_this);
            _this.backups = new Backups(_this);
            _this.protectedItemOperationResults = new ProtectedItemOperationResults(_this);
            _this.protectedItemOperationStatuses = new ProtectedItemOperationStatuses(_this);
            _this.recoveryPoints = new RecoveryPoints(_this);
            _this.itemLevelRecoveryConnections = new ItemLevelRecoveryConnections(_this);
            _this.restores = new Restores(_this);
            _this.jobCancellations = new JobCancellations(_this);
            _this.jobOperationResults = new JobOperationResults(_this);
            _this.backupOperationResults = new BackupOperationResults(_this);
            _this.backupOperationStatuses = new BackupOperationStatuses(_this);
            _this.protectionPolicies = new ProtectionPolicies(_this);
            _this.protectionPolicyOperationResults = new ProtectionPolicyOperationResults(_this);
            _this.protectionPolicyOperationStatuses = new ProtectionPolicyOperationStatuses(_this);
            _this.backupProtectableItems = new BackupProtectableItems(_this);
            _this.backupProtectionContainers = new BackupProtectionContainers(_this);
            _this.securityPINs = new SecurityPINs(_this);
            _this.backupResourceStorageConfigs = new BackupResourceStorageConfigs(_this);
            _this.operations = new Operations(_this);
            return _this;
        }
        return RecoveryServicesBackupClient;
    }(RecoveryServicesBackupClientContext));

    exports.RecoveryServicesBackupClient = RecoveryServicesBackupClient;
    exports.RecoveryServicesBackupClientContext = RecoveryServicesBackupClientContext;
    exports.RecoveryServicesBackupModels = index;
    exports.RecoveryServicesBackupMappers = mappers;
    exports.ProtectionIntentOperations = ProtectionIntentOperations;
    exports.BackupStatus = BackupStatus;
    exports.FeatureSupport = FeatureSupport;
    exports.BackupJobs = BackupJobs;
    exports.JobDetails = JobDetails;
    exports.ExportJobsOperationResults = ExportJobsOperationResults;
    exports.Jobs = Jobs;
    exports.BackupPolicies = BackupPolicies;
    exports.BackupProtectedItems = BackupProtectedItems;
    exports.BackupProtectionIntent = BackupProtectionIntent;
    exports.BackupUsageSummaries = BackupUsageSummaries;
    exports.Operation = Operation;
    exports.BackupResourceVaultConfigs = BackupResourceVaultConfigs;
    exports.BackupEngines = BackupEngines;
    exports.ProtectionContainerRefreshOperationResults = ProtectionContainerRefreshOperationResults;
    exports.ProtectableContainers = ProtectableContainers;
    exports.ProtectionContainers = ProtectionContainers;
    exports.BackupWorkloadItems = BackupWorkloadItems;
    exports.ProtectionContainerOperationResults = ProtectionContainerOperationResults;
    exports.ProtectedItems = ProtectedItems;
    exports.Backups = Backups;
    exports.ProtectedItemOperationResults = ProtectedItemOperationResults;
    exports.ProtectedItemOperationStatuses = ProtectedItemOperationStatuses;
    exports.RecoveryPoints = RecoveryPoints;
    exports.ItemLevelRecoveryConnections = ItemLevelRecoveryConnections;
    exports.Restores = Restores;
    exports.JobCancellations = JobCancellations;
    exports.JobOperationResults = JobOperationResults;
    exports.BackupOperationResults = BackupOperationResults;
    exports.BackupOperationStatuses = BackupOperationStatuses;
    exports.ProtectionPolicies = ProtectionPolicies;
    exports.ProtectionPolicyOperationResults = ProtectionPolicyOperationResults;
    exports.ProtectionPolicyOperationStatuses = ProtectionPolicyOperationStatuses;
    exports.BackupProtectableItems = BackupProtectableItems;
    exports.BackupProtectionContainers = BackupProtectionContainers;
    exports.SecurityPINs = SecurityPINs;
    exports.BackupResourceStorageConfigs = BackupResourceStorageConfigs;
    exports.Operations = Operations;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=arm-recoveryservicesbackup.js.map
