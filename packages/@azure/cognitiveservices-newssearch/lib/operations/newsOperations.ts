/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/newsOperationsMappers";
import * as Parameters from "../models/parameters";
import { NewsSearchClientContext } from "../newsSearchClientContext";

/** Class representing a NewsOperations. */
export class NewsOperations {
  private readonly client: NewsSearchClientContext;

  /**
   * Create a NewsOperations.
   * @param {NewsSearchClientContext} client Reference to the service client.
   */
  constructor(client: NewsSearchClientContext) {
    this.client = client;
  }

  /**
   * @summary The News Search API lets you send a search query to Bing and get back a list of news
   * that are relevant to the search query. This section provides technical details about the query
   * parameters and headers that you use to request news and the JSON response objects that contain
   * them.  For examples that show how to make requests, see [Searching the web for
   * news](https://docs.microsoft.com/en-us/azure/cognitive-services/bing-news-search/search-the-web).
   * @param query The user's search query string. The query string cannot be empty. The query string
   * may contain [Bing Advanced Operators](http://msdn.microsoft.com/library/ff795620.aspx). For
   * example, to limit news to a specific domain, use the
   * [site:](http://msdn.microsoft.com/library/ff795613.aspx) operator. Use this parameter only with
   * the News Search API. Do not specify this parameter when calling the Trending Topics API or News
   * Category API.
   * @param [options] The optional parameters
   * @returns Promise<Models.NewsSearchResponse>
   */
  search(query: string, options?: Models.NewsSearchOptionalParams): Promise<Models.NewsSearchResponse>;
  /**
   * @param query The user's search query string. The query string cannot be empty. The query string
   * may contain [Bing Advanced Operators](http://msdn.microsoft.com/library/ff795620.aspx). For
   * example, to limit news to a specific domain, use the
   * [site:](http://msdn.microsoft.com/library/ff795613.aspx) operator. Use this parameter only with
   * the News Search API. Do not specify this parameter when calling the Trending Topics API or News
   * Category API.
   * @param callback The callback
   */
  search(query: string, callback: msRest.ServiceCallback<Models.News>): void;
  /**
   * @param query The user's search query string. The query string cannot be empty. The query string
   * may contain [Bing Advanced Operators](http://msdn.microsoft.com/library/ff795620.aspx). For
   * example, to limit news to a specific domain, use the
   * [site:](http://msdn.microsoft.com/library/ff795613.aspx) operator. Use this parameter only with
   * the News Search API. Do not specify this parameter when calling the Trending Topics API or News
   * Category API.
   * @param options The optional parameters
   * @param callback The callback
   */
  search(query: string, options: Models.NewsSearchOptionalParams, callback: msRest.ServiceCallback<Models.News>): void;
  search(query: string, options?: Models.NewsSearchOptionalParams | msRest.ServiceCallback<Models.News>, callback?: msRest.ServiceCallback<Models.News>): Promise<Models.NewsSearchResponse> {
    return this.client.sendOperationRequest(
      {
        query,
        options
      },
      searchOperationSpec,
      callback) as Promise<Models.NewsSearchResponse>;
  }

  /**
   * @summary The News Category API lets you search on Bing and get back a list of top news articles
   * by category. This section provides technical details about the query parameters and headers that
   * you use to request news and the JSON response objects that contain them.  For examples that show
   * how to make requests, see [Searching the web for
   * news](https://docs.microsoft.com/en-us/azure/cognitive-services/bing-news-search/search-the-web).
   * @param [options] The optional parameters
   * @returns Promise<Models.NewsCategoryResponse>
   */
  category(options?: Models.NewsCategoryOptionalParams): Promise<Models.NewsCategoryResponse>;
  /**
   * @param callback The callback
   */
  category(callback: msRest.ServiceCallback<Models.News>): void;
  /**
   * @param options The optional parameters
   * @param callback The callback
   */
  category(options: Models.NewsCategoryOptionalParams, callback: msRest.ServiceCallback<Models.News>): void;
  category(options?: Models.NewsCategoryOptionalParams | msRest.ServiceCallback<Models.News>, callback?: msRest.ServiceCallback<Models.News>): Promise<Models.NewsCategoryResponse> {
    return this.client.sendOperationRequest(
      {
        options
      },
      categoryOperationSpec,
      callback) as Promise<Models.NewsCategoryResponse>;
  }

  /**
   * @summary The News Trending Topics API lets you search on Bing and get back a list of trending
   * news topics that are currently trending on Bing. This section provides technical details about
   * the query parameters and headers that you use to request news and the JSON response objects that
   * contain them.  For examples that show how to make requests, see [Searching the web for
   * news](https://docs.microsoft.com/en-us/azure/cognitive-services/bing-news-search/search-the-web).
   * @param [options] The optional parameters
   * @returns Promise<Models.NewsTrendingResponse>
   */
  trending(options?: Models.NewsTrendingOptionalParams): Promise<Models.NewsTrendingResponse>;
  /**
   * @param callback The callback
   */
  trending(callback: msRest.ServiceCallback<Models.TrendingTopics>): void;
  /**
   * @param options The optional parameters
   * @param callback The callback
   */
  trending(options: Models.NewsTrendingOptionalParams, callback: msRest.ServiceCallback<Models.TrendingTopics>): void;
  trending(options?: Models.NewsTrendingOptionalParams | msRest.ServiceCallback<Models.TrendingTopics>, callback?: msRest.ServiceCallback<Models.TrendingTopics>): Promise<Models.NewsTrendingResponse> {
    return this.client.sendOperationRequest(
      {
        options
      },
      trendingOperationSpec,
      callback) as Promise<Models.NewsTrendingResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const searchOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "news/search",
  urlParameters: [
    Parameters.endpoint
  ],
  queryParameters: [
    Parameters.countryCode,
    Parameters.count,
    Parameters.freshness,
    Parameters.market,
    Parameters.offset,
    Parameters.originalImage,
    Parameters.query,
    Parameters.safeSearch,
    Parameters.setLang,
    Parameters.sortBy,
    Parameters.textDecorations,
    Parameters.textFormat
  ],
  headerParameters: [
    Parameters.xBingApisSDK,
    Parameters.acceptLanguage,
    Parameters.userAgent,
    Parameters.clientId,
    Parameters.clientIp,
    Parameters.location
  ],
  responses: {
    200: {
      bodyMapper: Mappers.News
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const categoryOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "news",
  urlParameters: [
    Parameters.endpoint
  ],
  queryParameters: [
    Parameters.countryCode,
    Parameters.category,
    Parameters.count,
    Parameters.headlineCount,
    Parameters.market,
    Parameters.offset,
    Parameters.originalImage,
    Parameters.safeSearch,
    Parameters.setLang,
    Parameters.textDecorations,
    Parameters.textFormat
  ],
  headerParameters: [
    Parameters.xBingApisSDK,
    Parameters.acceptLanguage,
    Parameters.userAgent,
    Parameters.clientId,
    Parameters.clientIp,
    Parameters.location
  ],
  responses: {
    200: {
      bodyMapper: Mappers.News
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const trendingOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "news/trendingtopics",
  urlParameters: [
    Parameters.endpoint
  ],
  queryParameters: [
    Parameters.countryCode,
    Parameters.count,
    Parameters.market,
    Parameters.offset,
    Parameters.safeSearch,
    Parameters.setLang,
    Parameters.since,
    Parameters.sortBy,
    Parameters.textDecorations,
    Parameters.textFormat
  ],
  headerParameters: [
    Parameters.xBingApisSDK,
    Parameters.acceptLanguage,
    Parameters.userAgent,
    Parameters.clientId,
    Parameters.clientIp,
    Parameters.location
  ],
  responses: {
    200: {
      bodyMapper: Mappers.TrendingTopics
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};
