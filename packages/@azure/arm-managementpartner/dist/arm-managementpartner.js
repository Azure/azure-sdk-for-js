/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('ms-rest-azure-js'), require('ms-rest-js')) :
    typeof define === 'function' && define.amd ? define(['exports', 'ms-rest-azure-js', 'ms-rest-js'], factory) :
    (factory((global.Azure = global.Azure || {}, global.Azure.ArmManagementpartner = {}),global.msRestAzure,global.msRest));
}(this, (function (exports,msRestAzure,msRest) { 'use strict';

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */
    /* global Reflect, Promise */

    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };

    function __extends(d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    /**
     * Defines values for State.
     * Possible values include: 'Active', 'Deleted'
     * There could be more values for this enum apart from the ones defined here.If
     * you want to set a value that is not from the known values then you can do
     * the following:
     * let param: State = <State>"someUnknownValueThatWillStillBeValid";
     * @readonly
     * @enum {string}
     */
    var State;
    (function (State) {
        State["Active"] = "Active";
        State["Deleted"] = "Deleted";
    })(State || (State = {}));
    /**
     * Defines values for Code.
     * Possible values include: 'NotFound', 'Conflict', 'BadRequest'
     * There could be more values for this enum apart from the ones defined here.If
     * you want to set a value that is not from the known values then you can do
     * the following:
     * let param: Code = <Code>"someUnknownValueThatWillStillBeValid";
     * @readonly
     * @enum {string}
     */
    var Code;
    (function (Code) {
        Code["NotFound"] = "NotFound";
        Code["Conflict"] = "Conflict";
        Code["BadRequest"] = "BadRequest";
    })(Code || (Code = {}));

    var index = /*#__PURE__*/Object.freeze({
        get State () { return State; },
        get Code () { return Code; }
    });

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    var CloudError = msRestAzure.CloudErrorMapper;
    var BaseResource = msRestAzure.BaseResourceMapper;
    var PartnerResponse = {
        serializedName: "PartnerResponse",
        type: {
            name: "Composite",
            className: "PartnerResponse",
            modelProperties: {
                etag: {
                    serializedName: "etag",
                    type: {
                        name: "Number"
                    }
                },
                id: {
                    readOnly: true,
                    serializedName: "id",
                    type: {
                        name: "String"
                    }
                },
                name: {
                    readOnly: true,
                    serializedName: "name",
                    type: {
                        name: "String"
                    }
                },
                partnerId: {
                    serializedName: "properties.partnerId",
                    type: {
                        name: "String"
                    }
                },
                partnerName: {
                    serializedName: "properties.partnerName",
                    type: {
                        name: "String"
                    }
                },
                tenantId: {
                    serializedName: "properties.tenantId",
                    type: {
                        name: "String"
                    }
                },
                objectId: {
                    serializedName: "properties.objectId",
                    type: {
                        name: "String"
                    }
                },
                version: {
                    serializedName: "properties.version",
                    type: {
                        name: "String"
                    }
                },
                updatedTime: {
                    serializedName: "properties.updatedTime",
                    type: {
                        name: "DateTime"
                    }
                },
                createdTime: {
                    serializedName: "properties.createdTime",
                    type: {
                        name: "DateTime"
                    }
                },
                state: {
                    serializedName: "properties.state",
                    type: {
                        name: "String"
                    }
                },
                type: {
                    readOnly: true,
                    serializedName: "type",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var ExtendedErrorInfo = {
        serializedName: "ExtendedErrorInfo",
        type: {
            name: "Composite",
            className: "ExtendedErrorInfo",
            modelProperties: {
                code: {
                    serializedName: "code",
                    type: {
                        name: "String"
                    }
                },
                message: {
                    serializedName: "message",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var ErrorModel = {
        serializedName: "Error",
        type: {
            name: "Composite",
            className: "ErrorModel",
            modelProperties: {
                error: {
                    serializedName: "error",
                    type: {
                        name: "Composite",
                        className: "ExtendedErrorInfo"
                    }
                }
            }
        }
    };
    var OperationDisplay = {
        serializedName: "OperationDisplay",
        type: {
            name: "Composite",
            className: "OperationDisplay",
            modelProperties: {
                provider: {
                    serializedName: "provider",
                    type: {
                        name: "String"
                    }
                },
                resource: {
                    serializedName: "resource",
                    type: {
                        name: "String"
                    }
                },
                operation: {
                    serializedName: "operation",
                    type: {
                        name: "String"
                    }
                },
                description: {
                    serializedName: "description",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var OperationResponse = {
        serializedName: "OperationResponse",
        type: {
            name: "Composite",
            className: "OperationResponse",
            modelProperties: {
                name: {
                    serializedName: "name",
                    type: {
                        name: "String"
                    }
                },
                display: {
                    serializedName: "display",
                    type: {
                        name: "Composite",
                        className: "OperationDisplay"
                    }
                },
                origin: {
                    serializedName: "origin",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var OperationList = {
        serializedName: "OperationList",
        type: {
            name: "Composite",
            className: "OperationList",
            modelProperties: {
                value: {
                    serializedName: "",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "OperationResponse"
                            }
                        }
                    }
                },
                nextLink: {
                    serializedName: "nextLink",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };

    var mappers = /*#__PURE__*/Object.freeze({
        CloudError: CloudError,
        BaseResource: BaseResource,
        PartnerResponse: PartnerResponse,
        ExtendedErrorInfo: ExtendedErrorInfo,
        ErrorModel: ErrorModel,
        OperationDisplay: OperationDisplay,
        OperationResponse: OperationResponse,
        OperationList: OperationList
    });

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */

    var Mappers = /*#__PURE__*/Object.freeze({
        PartnerResponse: PartnerResponse,
        BaseResource: BaseResource,
        ErrorModel: ErrorModel,
        ExtendedErrorInfo: ExtendedErrorInfo
    });

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    var acceptLanguage = {
        parameterPath: "acceptLanguage",
        mapper: {
            serializedName: "accept-language",
            defaultValue: 'en-US',
            type: {
                name: "String"
            }
        }
    };
    var apiVersion = {
        parameterPath: "apiVersion",
        mapper: {
            required: true,
            serializedName: "api-version",
            type: {
                name: "String"
            }
        }
    };
    var nextPageLink = {
        parameterPath: "nextPageLink",
        mapper: {
            required: true,
            serializedName: "nextLink",
            type: {
                name: "String"
            }
        },
        skipEncoding: true
    };
    var partnerId = {
        parameterPath: "partnerId",
        mapper: {
            required: true,
            serializedName: "partnerId",
            type: {
                name: "String"
            }
        }
    };

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    /** Class representing a Partner. */
    var Partner = /** @class */ (function () {
        /**
         * Create a Partner.
         * @param {ACEProvisioningManagementPartnerAPIContext} client Reference to the service client.
         */
        function Partner(client) {
            this.client = client;
        }
        Partner.prototype.get = function (partnerId$$1, options, callback) {
            return this.client.sendOperationRequest({
                partnerId: partnerId$$1,
                options: options
            }, getOperationSpec, callback);
        };
        Partner.prototype.create = function (partnerId$$1, options, callback) {
            return this.client.sendOperationRequest({
                partnerId: partnerId$$1,
                options: options
            }, createOperationSpec, callback);
        };
        Partner.prototype.update = function (partnerId$$1, options, callback) {
            return this.client.sendOperationRequest({
                partnerId: partnerId$$1,
                options: options
            }, updateOperationSpec, callback);
        };
        Partner.prototype.deleteMethod = function (partnerId$$1, options, callback) {
            return this.client.sendOperationRequest({
                partnerId: partnerId$$1,
                options: options
            }, deleteMethodOperationSpec, callback);
        };
        return Partner;
    }());
    // Operation Specifications
    var serializer = new msRest.Serializer(Mappers);
    var getOperationSpec = {
        httpMethod: "GET",
        path: "providers/Microsoft.ManagementPartner/partners/{partnerId}",
        urlParameters: [
            partnerId
        ],
        queryParameters: [
            apiVersion
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            200: {
                bodyMapper: PartnerResponse
            },
            default: {
                bodyMapper: ErrorModel
            }
        },
        serializer: serializer
    };
    var createOperationSpec = {
        httpMethod: "PUT",
        path: "providers/Microsoft.ManagementPartner/partners/{partnerId}",
        urlParameters: [
            partnerId
        ],
        queryParameters: [
            apiVersion
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            200: {
                bodyMapper: PartnerResponse
            },
            default: {
                bodyMapper: ErrorModel
            }
        },
        serializer: serializer
    };
    var updateOperationSpec = {
        httpMethod: "PATCH",
        path: "providers/Microsoft.ManagementPartner/partners/{partnerId}",
        urlParameters: [
            partnerId
        ],
        queryParameters: [
            apiVersion
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            200: {
                bodyMapper: PartnerResponse
            },
            default: {
                bodyMapper: ErrorModel
            }
        },
        serializer: serializer
    };
    var deleteMethodOperationSpec = {
        httpMethod: "DELETE",
        path: "providers/Microsoft.ManagementPartner/partners/{partnerId}",
        urlParameters: [
            partnerId
        ],
        queryParameters: [
            apiVersion
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            200: {},
            default: {
                bodyMapper: ErrorModel
            }
        },
        serializer: serializer
    };

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */

    var Mappers$1 = /*#__PURE__*/Object.freeze({
        OperationList: OperationList,
        OperationResponse: OperationResponse,
        OperationDisplay: OperationDisplay,
        ErrorModel: ErrorModel,
        ExtendedErrorInfo: ExtendedErrorInfo
    });

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    /** Class representing a Operation. */
    var Operation = /** @class */ (function () {
        /**
         * Create a Operation.
         * @param {ACEProvisioningManagementPartnerAPIContext} client Reference to the service client.
         */
        function Operation(client) {
            this.client = client;
        }
        Operation.prototype.list = function (options, callback) {
            return this.client.sendOperationRequest({
                options: options
            }, listOperationSpec, callback);
        };
        Operation.prototype.listNext = function (nextPageLink$$1, options, callback) {
            return this.client.sendOperationRequest({
                nextPageLink: nextPageLink$$1,
                options: options
            }, listNextOperationSpec, callback);
        };
        return Operation;
    }());
    // Operation Specifications
    var serializer$1 = new msRest.Serializer(Mappers$1);
    var listOperationSpec = {
        httpMethod: "GET",
        path: "providers/Microsoft.ManagementPartner/operations",
        queryParameters: [
            apiVersion
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            200: {
                bodyMapper: OperationList
            },
            default: {
                bodyMapper: ErrorModel
            }
        },
        serializer: serializer$1
    };
    var listNextOperationSpec = {
        httpMethod: "GET",
        baseUrl: "https://management.azure.com",
        path: "{nextLink}",
        urlParameters: [
            nextPageLink
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            200: {
                bodyMapper: OperationList
            },
            default: {
                bodyMapper: ErrorModel
            }
        },
        serializer: serializer$1
    };

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    var packageName = "@azure/arm-managementpartner";
    var packageVersion = "1.0.0-preview";
    var ACEProvisioningManagementPartnerAPIContext = /** @class */ (function (_super) {
        __extends(ACEProvisioningManagementPartnerAPIContext, _super);
        /**
         * Initializes a new instance of the ACEProvisioningManagementPartnerAPI class.
         * @param credentials Credentials needed for the client to connect to Azure.
         * @param [options] The parameter options
         */
        function ACEProvisioningManagementPartnerAPIContext(credentials, options) {
            var _this = this;
            if (credentials == undefined) {
                throw new Error('\'credentials\' cannot be null.');
            }
            if (!options) {
                options = {};
            }
            _this = _super.call(this, credentials, options) || this;
            _this.apiVersion = '2018-02-01';
            _this.acceptLanguage = 'en-US';
            _this.longRunningOperationRetryTimeout = 30;
            _this.baseUri = options.baseUri || _this.baseUri || "https://management.azure.com";
            _this.requestContentType = "application/json; charset=utf-8";
            _this.credentials = credentials;
            _this.addUserAgentInfo(packageName + "/" + packageVersion);
            if (options.acceptLanguage !== null && options.acceptLanguage !== undefined) {
                _this.acceptLanguage = options.acceptLanguage;
            }
            if (options.longRunningOperationRetryTimeout !== null && options.longRunningOperationRetryTimeout !== undefined) {
                _this.longRunningOperationRetryTimeout = options.longRunningOperationRetryTimeout;
            }
            return _this;
        }
        return ACEProvisioningManagementPartnerAPIContext;
    }(msRestAzure.AzureServiceClient));

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    var ACEProvisioningManagementPartnerAPI = /** @class */ (function (_super) {
        __extends(ACEProvisioningManagementPartnerAPI, _super);
        /**
         * Initializes a new instance of the ACEProvisioningManagementPartnerAPI class.
         * @param credentials Credentials needed for the client to connect to Azure.
         * @param [options] The parameter options
         */
        function ACEProvisioningManagementPartnerAPI(credentials, options) {
            var _this = _super.call(this, credentials, options) || this;
            _this.partner = new Partner(_this);
            _this.operation = new Operation(_this);
            return _this;
        }
        return ACEProvisioningManagementPartnerAPI;
    }(ACEProvisioningManagementPartnerAPIContext));

    exports.ACEProvisioningManagementPartnerAPI = ACEProvisioningManagementPartnerAPI;
    exports.ACEProvisioningManagementPartnerAPIContext = ACEProvisioningManagementPartnerAPIContext;
    exports.ACEProvisioningManagementPartnerAPIModels = index;
    exports.ACEProvisioningManagementPartnerAPIMappers = mappers;
    exports.Partner = Partner;
    exports.Operation = Operation;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=arm-managementpartner.js.map
