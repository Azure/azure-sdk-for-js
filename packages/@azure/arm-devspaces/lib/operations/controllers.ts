/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as msRestAzure from "@azure/ms-rest-azure-js";
import * as Models from "../models";
import * as Mappers from "../models/controllersMappers";
import * as Parameters from "../models/parameters";
import { DevSpacesManagementClientContext } from "../devSpacesManagementClientContext";

/** Class representing a Controllers. */
export class Controllers {
  private readonly client: DevSpacesManagementClientContext;

  /**
   * Create a Controllers.
   * @param {DevSpacesManagementClientContext} client Reference to the service client.
   */
  constructor(client: DevSpacesManagementClientContext) {
    this.client = client;
  }

  /**
   * Gets the properties for an Azure Dev Spaces Controller.
   * @summary Gets an Azure Dev Spaces Controller.
   * @param resourceGroupName Resource group to which the resource belongs.
   * @param name Name of the resource.
   * @param [options] The optional parameters
   * @returns Promise<Models.ControllersGetResponse>
   */
  get(resourceGroupName: string, name: string, options?: msRest.RequestOptionsBase): Promise<Models.ControllersGetResponse>;
  /**
   * @param resourceGroupName Resource group to which the resource belongs.
   * @param name Name of the resource.
   * @param callback The callback
   */
  get(resourceGroupName: string, name: string, callback: msRest.ServiceCallback<Models.Controller>): void;
  /**
   * @param resourceGroupName Resource group to which the resource belongs.
   * @param name Name of the resource.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(resourceGroupName: string, name: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.Controller>): void;
  get(resourceGroupName: string, name: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.Controller>, callback?: msRest.ServiceCallback<Models.Controller>): Promise<Models.ControllersGetResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        name,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.ControllersGetResponse>;
  }

  /**
   * Creates an Azure Dev Spaces Controller with the specified create parameters.
   * @summary Creates an Azure Dev Spaces Controller.
   * @param resourceGroupName Resource group to which the resource belongs.
   * @param name Name of the resource.
   * @param controller Controller create parameters.
   * @param [options] The optional parameters
   * @returns Promise<Models.ControllersCreateResponse>
   */
  create(resourceGroupName: string, name: string, controller: Models.Controller, options?: msRest.RequestOptionsBase): Promise<Models.ControllersCreateResponse> {
    return this.beginCreate(resourceGroupName,name,controller,options)
      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.ControllersCreateResponse>;
  }

  /**
   * Deletes an existing Azure Dev Spaces Controller.
   * @summary Deletes an Azure Dev Spaces Controller.
   * @param resourceGroupName Resource group to which the resource belongs.
   * @param name Name of the resource.
   * @param [options] The optional parameters
   * @returns Promise<msRest.RestResponse>
   */
  deleteMethod(resourceGroupName: string, name: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse> {
    return this.beginDeleteMethod(resourceGroupName,name,options)
      .then(lroPoller => lroPoller.pollUntilFinished());
  }

  /**
   * Updates the properties of an existing Azure Dev Spaces Controller with the specified update
   * parameters.
   * @summary Updates an Azure Dev Spaces Controller.
   * @param resourceGroupName Resource group to which the resource belongs.
   * @param name Name of the resource.
   * @param controllerUpdateParameters Parameters for updating the Azure Dev Spaces Controller.
   * @param [options] The optional parameters
   * @returns Promise<Models.ControllersUpdateResponse>
   */
  update(resourceGroupName: string, name: string, controllerUpdateParameters: Models.ControllerUpdateParameters, options?: msRest.RequestOptionsBase): Promise<Models.ControllersUpdateResponse>;
  /**
   * @param resourceGroupName Resource group to which the resource belongs.
   * @param name Name of the resource.
   * @param controllerUpdateParameters Parameters for updating the Azure Dev Spaces Controller.
   * @param callback The callback
   */
  update(resourceGroupName: string, name: string, controllerUpdateParameters: Models.ControllerUpdateParameters, callback: msRest.ServiceCallback<Models.Controller>): void;
  /**
   * @param resourceGroupName Resource group to which the resource belongs.
   * @param name Name of the resource.
   * @param controllerUpdateParameters Parameters for updating the Azure Dev Spaces Controller.
   * @param options The optional parameters
   * @param callback The callback
   */
  update(resourceGroupName: string, name: string, controllerUpdateParameters: Models.ControllerUpdateParameters, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.Controller>): void;
  update(resourceGroupName: string, name: string, controllerUpdateParameters: Models.ControllerUpdateParameters, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.Controller>, callback?: msRest.ServiceCallback<Models.Controller>): Promise<Models.ControllersUpdateResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        name,
        controllerUpdateParameters,
        options
      },
      updateOperationSpec,
      callback) as Promise<Models.ControllersUpdateResponse>;
  }

  /**
   * Lists all the Azure Dev Spaces Controllers with their properties in the specified resource group
   * and subscription.
   * @summary Lists the Azure Dev Spaces Controllers in a resource group.
   * @param resourceGroupName Resource group to which the resource belongs.
   * @param [options] The optional parameters
   * @returns Promise<Models.ControllersListByResourceGroupResponse>
   */
  listByResourceGroup(resourceGroupName: string, options?: msRest.RequestOptionsBase): Promise<Models.ControllersListByResourceGroupResponse>;
  /**
   * @param resourceGroupName Resource group to which the resource belongs.
   * @param callback The callback
   */
  listByResourceGroup(resourceGroupName: string, callback: msRest.ServiceCallback<Models.ControllerList>): void;
  /**
   * @param resourceGroupName Resource group to which the resource belongs.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByResourceGroup(resourceGroupName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ControllerList>): void;
  listByResourceGroup(resourceGroupName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ControllerList>, callback?: msRest.ServiceCallback<Models.ControllerList>): Promise<Models.ControllersListByResourceGroupResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        options
      },
      listByResourceGroupOperationSpec,
      callback) as Promise<Models.ControllersListByResourceGroupResponse>;
  }

  /**
   * Lists all the Azure Dev Spaces Controllers with their properties in the subscription.
   * @summary Lists the Azure Dev Spaces Controllers in a subscription.
   * @param [options] The optional parameters
   * @returns Promise<Models.ControllersListResponse>
   */
  list(options?: msRest.RequestOptionsBase): Promise<Models.ControllersListResponse>;
  /**
   * @param callback The callback
   */
  list(callback: msRest.ServiceCallback<Models.ControllerList>): void;
  /**
   * @param options The optional parameters
   * @param callback The callback
   */
  list(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ControllerList>): void;
  list(options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ControllerList>, callback?: msRest.ServiceCallback<Models.ControllerList>): Promise<Models.ControllersListResponse> {
    return this.client.sendOperationRequest(
      {
        options
      },
      listOperationSpec,
      callback) as Promise<Models.ControllersListResponse>;
  }

  /**
   * Lists connection details for the underlying container resources of an Azure Dev Spaces
   * Controller.
   * @summary Lists connection details for an Azure Dev Spaces Controller.
   * @param resourceGroupName Resource group to which the resource belongs.
   * @param name Name of the resource.
   * @param [options] The optional parameters
   * @returns Promise<Models.ControllersListConnectionDetailsResponse>
   */
  listConnectionDetails(resourceGroupName: string, name: string, options?: msRest.RequestOptionsBase): Promise<Models.ControllersListConnectionDetailsResponse>;
  /**
   * @param resourceGroupName Resource group to which the resource belongs.
   * @param name Name of the resource.
   * @param callback The callback
   */
  listConnectionDetails(resourceGroupName: string, name: string, callback: msRest.ServiceCallback<Models.ControllerConnectionDetailsList>): void;
  /**
   * @param resourceGroupName Resource group to which the resource belongs.
   * @param name Name of the resource.
   * @param options The optional parameters
   * @param callback The callback
   */
  listConnectionDetails(resourceGroupName: string, name: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ControllerConnectionDetailsList>): void;
  listConnectionDetails(resourceGroupName: string, name: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ControllerConnectionDetailsList>, callback?: msRest.ServiceCallback<Models.ControllerConnectionDetailsList>): Promise<Models.ControllersListConnectionDetailsResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        name,
        options
      },
      listConnectionDetailsOperationSpec,
      callback) as Promise<Models.ControllersListConnectionDetailsResponse>;
  }

  /**
   * Creates an Azure Dev Spaces Controller with the specified create parameters.
   * @summary Creates an Azure Dev Spaces Controller.
   * @param resourceGroupName Resource group to which the resource belongs.
   * @param name Name of the resource.
   * @param controller Controller create parameters.
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginCreate(resourceGroupName: string, name: string, controller: Models.Controller, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        resourceGroupName,
        name,
        controller,
        options
      },
      beginCreateOperationSpec,
      options);
  }

  /**
   * Deletes an existing Azure Dev Spaces Controller.
   * @summary Deletes an Azure Dev Spaces Controller.
   * @param resourceGroupName Resource group to which the resource belongs.
   * @param name Name of the resource.
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginDeleteMethod(resourceGroupName: string, name: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        resourceGroupName,
        name,
        options
      },
      beginDeleteMethodOperationSpec,
      options);
  }

  /**
   * Lists all the Azure Dev Spaces Controllers with their properties in the specified resource group
   * and subscription.
   * @summary Lists the Azure Dev Spaces Controllers in a resource group.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.ControllersListByResourceGroupNextResponse>
   */
  listByResourceGroupNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.ControllersListByResourceGroupNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listByResourceGroupNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ControllerList>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByResourceGroupNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ControllerList>): void;
  listByResourceGroupNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ControllerList>, callback?: msRest.ServiceCallback<Models.ControllerList>): Promise<Models.ControllersListByResourceGroupNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listByResourceGroupNextOperationSpec,
      callback) as Promise<Models.ControllersListByResourceGroupNextResponse>;
  }

  /**
   * Lists all the Azure Dev Spaces Controllers with their properties in the subscription.
   * @summary Lists the Azure Dev Spaces Controllers in a subscription.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.ControllersListNextResponse>
   */
  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.ControllersListNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ControllerList>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ControllerList>): void;
  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ControllerList>, callback?: msRest.ServiceCallback<Models.ControllerList>): Promise<Models.ControllersListNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listNextOperationSpec,
      callback) as Promise<Models.ControllersListNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevSpaces/controllers/{name}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.name
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.Controller
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const updateOperationSpec: msRest.OperationSpec = {
  httpMethod: "PATCH",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevSpaces/controllers/{name}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.name
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "controllerUpdateParameters",
    mapper: {
      ...Mappers.ControllerUpdateParameters,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.Controller
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listByResourceGroupOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevSpaces/controllers",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ControllerList
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/providers/Microsoft.DevSpaces/controllers",
  urlParameters: [
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ControllerList
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listConnectionDetailsOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevSpaces/controllers/{name}/listConnectionDetails",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.name
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ControllerConnectionDetailsList
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const beginCreateOperationSpec: msRest.OperationSpec = {
  httpMethod: "PUT",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevSpaces/controllers/{name}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.name
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "controller",
    mapper: {
      ...Mappers.Controller,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.Controller
    },
    201: {
      bodyMapper: Mappers.Controller
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const beginDeleteMethodOperationSpec: msRest.OperationSpec = {
  httpMethod: "DELETE",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevSpaces/controllers/{name}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.name
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {},
    202: {},
    204: {},
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listByResourceGroupNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ControllerList
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ControllerList
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};
