/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as msRestAzure from "@azure/ms-rest-azure-js";
import * as Models from "../models";
import * as Mappers from "../models/replicationProtectionContainerMappingsMappers";
import * as Parameters from "../models/parameters";
import { SiteRecoveryManagementClientContext } from "../siteRecoveryManagementClientContext";

/** Class representing a ReplicationProtectionContainerMappings. */
export class ReplicationProtectionContainerMappings {
  private readonly client: SiteRecoveryManagementClientContext;

  /**
   * Create a ReplicationProtectionContainerMappings.
   * @param {SiteRecoveryManagementClientContext} client Reference to the service client.
   */
  constructor(client: SiteRecoveryManagementClientContext) {
    this.client = client;
  }

  /**
   * Lists the protection container mappings for a protection container.
   * @summary Gets the list of protection container mappings for a protection container.
   * @param fabricName Fabric name.
   * @param protectionContainerName Protection container name.
   * @param [options] The optional parameters
   * @returns
   * Promise<Models.ReplicationProtectionContainerMappingsListByReplicationProtectionContainersResponse>
   */
  listByReplicationProtectionContainers(fabricName: string, protectionContainerName: string, options?: msRest.RequestOptionsBase): Promise<Models.ReplicationProtectionContainerMappingsListByReplicationProtectionContainersResponse>;
  /**
   * @param fabricName Fabric name.
   * @param protectionContainerName Protection container name.
   * @param callback The callback
   */
  listByReplicationProtectionContainers(fabricName: string, protectionContainerName: string, callback: msRest.ServiceCallback<Models.ProtectionContainerMappingCollection>): void;
  /**
   * @param fabricName Fabric name.
   * @param protectionContainerName Protection container name.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByReplicationProtectionContainers(fabricName: string, protectionContainerName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ProtectionContainerMappingCollection>): void;
  listByReplicationProtectionContainers(fabricName: string, protectionContainerName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ProtectionContainerMappingCollection>, callback?: msRest.ServiceCallback<Models.ProtectionContainerMappingCollection>): Promise<Models.ReplicationProtectionContainerMappingsListByReplicationProtectionContainersResponse> {
    return this.client.sendOperationRequest(
      {
        fabricName,
        protectionContainerName,
        options
      },
      listByReplicationProtectionContainersOperationSpec,
      callback) as Promise<Models.ReplicationProtectionContainerMappingsListByReplicationProtectionContainersResponse>;
  }

  /**
   * Gets the details of a protection container mapping.
   * @summary Gets a protection container mapping/
   * @param fabricName Fabric name.
   * @param protectionContainerName Protection container name.
   * @param mappingName Protection Container mapping name.
   * @param [options] The optional parameters
   * @returns Promise<Models.ReplicationProtectionContainerMappingsGetResponse>
   */
  get(fabricName: string, protectionContainerName: string, mappingName: string, options?: msRest.RequestOptionsBase): Promise<Models.ReplicationProtectionContainerMappingsGetResponse>;
  /**
   * @param fabricName Fabric name.
   * @param protectionContainerName Protection container name.
   * @param mappingName Protection Container mapping name.
   * @param callback The callback
   */
  get(fabricName: string, protectionContainerName: string, mappingName: string, callback: msRest.ServiceCallback<Models.ProtectionContainerMapping>): void;
  /**
   * @param fabricName Fabric name.
   * @param protectionContainerName Protection container name.
   * @param mappingName Protection Container mapping name.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(fabricName: string, protectionContainerName: string, mappingName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ProtectionContainerMapping>): void;
  get(fabricName: string, protectionContainerName: string, mappingName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ProtectionContainerMapping>, callback?: msRest.ServiceCallback<Models.ProtectionContainerMapping>): Promise<Models.ReplicationProtectionContainerMappingsGetResponse> {
    return this.client.sendOperationRequest(
      {
        fabricName,
        protectionContainerName,
        mappingName,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.ReplicationProtectionContainerMappingsGetResponse>;
  }

  /**
   * The operation to create a protection container mapping.
   * @summary Create protection container mapping.
   * @param fabricName Fabric name.
   * @param protectionContainerName Protection container name.
   * @param mappingName Protection container mapping name.
   * @param creationInput Mapping creation input.
   * @param [options] The optional parameters
   * @returns Promise<Models.ReplicationProtectionContainerMappingsCreateResponse>
   */
  create(fabricName: string, protectionContainerName: string, mappingName: string, creationInput: Models.CreateProtectionContainerMappingInput, options?: msRest.RequestOptionsBase): Promise<Models.ReplicationProtectionContainerMappingsCreateResponse> {
    return this.beginCreate(fabricName,protectionContainerName,mappingName,creationInput,options)
      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.ReplicationProtectionContainerMappingsCreateResponse>;
  }

  /**
   * The operation to purge(force delete) a protection container mapping
   * @summary Purge protection container mapping.
   * @param fabricName Fabric name.
   * @param protectionContainerName Protection container name.
   * @param mappingName Protection container mapping name.
   * @param [options] The optional parameters
   * @returns Promise<msRest.RestResponse>
   */
  purge(fabricName: string, protectionContainerName: string, mappingName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse> {
    return this.beginPurge(fabricName,protectionContainerName,mappingName,options)
      .then(lroPoller => lroPoller.pollUntilFinished());
  }

  /**
   * The operation to update protection container mapping.
   * @summary Update protection container mapping.
   * @param fabricName Fabric name.
   * @param protectionContainerName Protection container name.
   * @param mappingName Protection container mapping name.
   * @param updateInput Mapping update input.
   * @param [options] The optional parameters
   * @returns Promise<Models.ReplicationProtectionContainerMappingsUpdateResponse>
   */
  update(fabricName: string, protectionContainerName: string, mappingName: string, updateInput: Models.UpdateProtectionContainerMappingInput, options?: msRest.RequestOptionsBase): Promise<Models.ReplicationProtectionContainerMappingsUpdateResponse> {
    return this.beginUpdate(fabricName,protectionContainerName,mappingName,updateInput,options)
      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.ReplicationProtectionContainerMappingsUpdateResponse>;
  }

  /**
   * The operation to delete or remove a protection container mapping.
   * @summary Remove protection container mapping.
   * @param fabricName Fabric name.
   * @param protectionContainerName Protection container name.
   * @param mappingName Protection container mapping name.
   * @param removalInput Removal input.
   * @param [options] The optional parameters
   * @returns Promise<msRest.RestResponse>
   */
  deleteMethod(fabricName: string, protectionContainerName: string, mappingName: string, removalInput: Models.RemoveProtectionContainerMappingInput, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse> {
    return this.beginDeleteMethod(fabricName,protectionContainerName,mappingName,removalInput,options)
      .then(lroPoller => lroPoller.pollUntilFinished());
  }

  /**
   * Lists the protection container mappings in the vault.
   * @summary Gets the list of all protection container mappings in a vault.
   * @param [options] The optional parameters
   * @returns Promise<Models.ReplicationProtectionContainerMappingsListResponse>
   */
  list(options?: msRest.RequestOptionsBase): Promise<Models.ReplicationProtectionContainerMappingsListResponse>;
  /**
   * @param callback The callback
   */
  list(callback: msRest.ServiceCallback<Models.ProtectionContainerMappingCollection>): void;
  /**
   * @param options The optional parameters
   * @param callback The callback
   */
  list(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ProtectionContainerMappingCollection>): void;
  list(options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ProtectionContainerMappingCollection>, callback?: msRest.ServiceCallback<Models.ProtectionContainerMappingCollection>): Promise<Models.ReplicationProtectionContainerMappingsListResponse> {
    return this.client.sendOperationRequest(
      {
        options
      },
      listOperationSpec,
      callback) as Promise<Models.ReplicationProtectionContainerMappingsListResponse>;
  }

  /**
   * The operation to create a protection container mapping.
   * @summary Create protection container mapping.
   * @param fabricName Fabric name.
   * @param protectionContainerName Protection container name.
   * @param mappingName Protection container mapping name.
   * @param creationInput Mapping creation input.
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginCreate(fabricName: string, protectionContainerName: string, mappingName: string, creationInput: Models.CreateProtectionContainerMappingInput, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        fabricName,
        protectionContainerName,
        mappingName,
        creationInput,
        options
      },
      beginCreateOperationSpec,
      options);
  }

  /**
   * The operation to purge(force delete) a protection container mapping
   * @summary Purge protection container mapping.
   * @param fabricName Fabric name.
   * @param protectionContainerName Protection container name.
   * @param mappingName Protection container mapping name.
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginPurge(fabricName: string, protectionContainerName: string, mappingName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        fabricName,
        protectionContainerName,
        mappingName,
        options
      },
      beginPurgeOperationSpec,
      options);
  }

  /**
   * The operation to update protection container mapping.
   * @summary Update protection container mapping.
   * @param fabricName Fabric name.
   * @param protectionContainerName Protection container name.
   * @param mappingName Protection container mapping name.
   * @param updateInput Mapping update input.
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginUpdate(fabricName: string, protectionContainerName: string, mappingName: string, updateInput: Models.UpdateProtectionContainerMappingInput, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        fabricName,
        protectionContainerName,
        mappingName,
        updateInput,
        options
      },
      beginUpdateOperationSpec,
      options);
  }

  /**
   * The operation to delete or remove a protection container mapping.
   * @summary Remove protection container mapping.
   * @param fabricName Fabric name.
   * @param protectionContainerName Protection container name.
   * @param mappingName Protection container mapping name.
   * @param removalInput Removal input.
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginDeleteMethod(fabricName: string, protectionContainerName: string, mappingName: string, removalInput: Models.RemoveProtectionContainerMappingInput, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        fabricName,
        protectionContainerName,
        mappingName,
        removalInput,
        options
      },
      beginDeleteMethodOperationSpec,
      options);
  }

  /**
   * Lists the protection container mappings for a protection container.
   * @summary Gets the list of protection container mappings for a protection container.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns
   * Promise<Models.ReplicationProtectionContainerMappingsListByReplicationProtectionContainersNextResponse>
   */
  listByReplicationProtectionContainersNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.ReplicationProtectionContainerMappingsListByReplicationProtectionContainersNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listByReplicationProtectionContainersNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ProtectionContainerMappingCollection>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByReplicationProtectionContainersNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ProtectionContainerMappingCollection>): void;
  listByReplicationProtectionContainersNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ProtectionContainerMappingCollection>, callback?: msRest.ServiceCallback<Models.ProtectionContainerMappingCollection>): Promise<Models.ReplicationProtectionContainerMappingsListByReplicationProtectionContainersNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listByReplicationProtectionContainersNextOperationSpec,
      callback) as Promise<Models.ReplicationProtectionContainerMappingsListByReplicationProtectionContainersNextResponse>;
  }

  /**
   * Lists the protection container mappings in the vault.
   * @summary Gets the list of all protection container mappings in a vault.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.ReplicationProtectionContainerMappingsListNextResponse>
   */
  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.ReplicationProtectionContainerMappingsListNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ProtectionContainerMappingCollection>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ProtectionContainerMappingCollection>): void;
  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ProtectionContainerMappingCollection>, callback?: msRest.ServiceCallback<Models.ProtectionContainerMappingCollection>): Promise<Models.ReplicationProtectionContainerMappingsListNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listNextOperationSpec,
      callback) as Promise<Models.ReplicationProtectionContainerMappingsListNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listByReplicationProtectionContainersOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationProtectionContainerMappings",
  urlParameters: [
    Parameters.resourceName,
    Parameters.resourceGroupName,
    Parameters.subscriptionId,
    Parameters.fabricName,
    Parameters.protectionContainerName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ProtectionContainerMappingCollection
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationProtectionContainerMappings/{mappingName}",
  urlParameters: [
    Parameters.resourceName,
    Parameters.resourceGroupName,
    Parameters.subscriptionId,
    Parameters.fabricName,
    Parameters.protectionContainerName,
    Parameters.mappingName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ProtectionContainerMapping
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationProtectionContainerMappings",
  urlParameters: [
    Parameters.resourceName,
    Parameters.resourceGroupName,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ProtectionContainerMappingCollection
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const beginCreateOperationSpec: msRest.OperationSpec = {
  httpMethod: "PUT",
  path: "Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationProtectionContainerMappings/{mappingName}",
  urlParameters: [
    Parameters.resourceName,
    Parameters.resourceGroupName,
    Parameters.subscriptionId,
    Parameters.fabricName,
    Parameters.protectionContainerName,
    Parameters.mappingName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "creationInput",
    mapper: {
      ...Mappers.CreateProtectionContainerMappingInput,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.ProtectionContainerMapping
    },
    202: {},
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const beginPurgeOperationSpec: msRest.OperationSpec = {
  httpMethod: "DELETE",
  path: "Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationProtectionContainerMappings/{mappingName}",
  urlParameters: [
    Parameters.resourceName,
    Parameters.resourceGroupName,
    Parameters.subscriptionId,
    Parameters.fabricName,
    Parameters.protectionContainerName,
    Parameters.mappingName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    202: {},
    204: {},
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const beginUpdateOperationSpec: msRest.OperationSpec = {
  httpMethod: "PATCH",
  path: "Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationProtectionContainerMappings/{mappingName}",
  urlParameters: [
    Parameters.resourceName,
    Parameters.resourceGroupName,
    Parameters.subscriptionId,
    Parameters.fabricName,
    Parameters.protectionContainerName,
    Parameters.mappingName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "updateInput",
    mapper: {
      ...Mappers.UpdateProtectionContainerMappingInput,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.ProtectionContainerMapping
    },
    202: {},
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const beginDeleteMethodOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationProtectionContainerMappings/{mappingName}/remove",
  urlParameters: [
    Parameters.resourceName,
    Parameters.resourceGroupName,
    Parameters.subscriptionId,
    Parameters.fabricName,
    Parameters.protectionContainerName,
    Parameters.mappingName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "removalInput",
    mapper: {
      ...Mappers.RemoveProtectionContainerMappingInput,
      required: true
    }
  },
  responses: {
    202: {},
    204: {},
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listByReplicationProtectionContainersNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ProtectionContainerMappingCollection
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ProtectionContainerMappingCollection
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};
