/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };


/**
 * @interface
 * An interface representing ServiceAccessPolicyEntry.
 * An access policy entry.
 *
 */
export interface ServiceAccessPolicyEntry {
  /**
   * @member {string} objectId An object ID that is allowed access to the FHIR
   * service.
   */
  objectId: string;
}

/**
 * @interface
 * An interface representing ServiceCosmosDbConfigurationInfo.
 * The settings for the Cosmos DB database backing the service.
 *
 */
export interface ServiceCosmosDbConfigurationInfo {
  /**
   * @member {number} [offerThroughput] The provisioned throughput for the
   * backing database.
   */
  offerThroughput?: number;
}

/**
 * @interface
 * An interface representing ServicesProperties.
 * The properties of a service instance.
 *
 */
export interface ServicesProperties {
  /**
   * @member {ProvisioningState} [provisioningState] The provisioning state.
   * Possible values include: 'Deleting', 'Succeeded', 'Creating', 'Accepted',
   * 'Verifying', 'Updating', 'Failed', 'Canceled', 'Deprovisioned'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * @member {ServiceAccessPolicyEntry[]} accessPolicies The access policies of
   * the service instance.
   */
  accessPolicies: ServiceAccessPolicyEntry[];
  /**
   * @member {ServiceCosmosDbConfigurationInfo} [cosmosDbConfiguration] The
   * settings for the Cosmos DB database backing the service.
   */
  cosmosDbConfiguration?: ServiceCosmosDbConfigurationInfo;
}

/**
 * @interface
 * An interface representing Resource.
 * The common properties of a service.
 *
 * @extends BaseResource
 */
export interface Resource extends BaseResource {
  /**
   * @member {string} [id] The resource identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [name] The resource name.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [type] The resource type.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: string;
  /**
   * @member {string} location The resource location.
   */
  location: string;
  /**
   * @member {{ [propertyName: string]: string }} [tags] The resource tags.
   */
  tags?: { [propertyName: string]: string };
  /**
   * @member {string} [etag] An etag associated with the resource, used for
   * optimistic concurrency when editing it.
   */
  etag?: string;
}

/**
 * @interface
 * An interface representing ServicesDescription.
 * The description of the service.
 *
 * @extends Resource
 */
export interface ServicesDescription extends Resource {
  /**
   * @member {ServicesProperties} [properties] The common properties of a
   * service.
   */
  properties?: ServicesProperties;
}

/**
 * @interface
 * An interface representing ServicesPatchDescription.
 * The description of the service.
 *
 */
export interface ServicesPatchDescription {
  /**
   * @member {{ [propertyName: string]: string }} [tags] Instance tags
   */
  tags?: { [propertyName: string]: string };
}

/**
 * @interface
 * An interface representing ErrorDetailsInternal.
 * Error details.
 *
 */
export interface ErrorDetailsInternal {
  /**
   * @member {string} [code] The error code.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly code?: string;
  /**
   * @member {string} [message] The error message.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly message?: string;
  /**
   * @member {string} [target] The target of the particular error.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly target?: string;
}

/**
 * @interface
 * An interface representing ErrorDetails.
 * Error details.
 *
 */
export interface ErrorDetails {
  /**
   * @member {ErrorDetailsInternal} [error] Object containing error details.
   */
  error?: ErrorDetailsInternal;
}

/**
 * @interface
 * An interface representing OperationDisplay.
 * The object that represents the operation.
 *
 */
export interface OperationDisplay {
  /**
   * @member {string} [provider] Service provider: Microsoft.HealthcareApis
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provider?: string;
  /**
   * @member {string} [resource] Resource Type: Services
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly resource?: string;
  /**
   * @member {string} [operation] Name of the operation
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly operation?: string;
  /**
   * @member {string} [description] Friendly description for the operation,
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
}

/**
 * @interface
 * An interface representing Operation.
 * Service REST API operation.
 *
 */
export interface Operation {
  /**
   * @member {string} [name] Operation name: {provider}/{resource}/{read |
   * write | action | delete}
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [origin] Default value is 'user,system'.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly origin?: string;
  /**
   * @member {OperationDisplay} [display] The information displayed about the
   * operation.
   */
  display?: OperationDisplay;
}

/**
 * @interface
 * An interface representing CheckNameAvailabilityParameters.
 * Input values.
 *
 */
export interface CheckNameAvailabilityParameters {
  /**
   * @member {string} name The name of the service instance to check.
   */
  name: string;
  /**
   * @member {string} type The fully qualified resource type which includes
   * provider namespace.
   */
  type: string;
}

/**
 * @interface
 * An interface representing ServicesNameAvailabilityInfo.
 * The properties indicating whether a given service name is available.
 *
 */
export interface ServicesNameAvailabilityInfo {
  /**
   * @member {boolean} [nameAvailable] The value which indicates whether the
   * provided name is available.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nameAvailable?: boolean;
  /**
   * @member {ServiceNameUnavailabilityReason} [reason] The reason for
   * unavailability. Possible values include: 'Invalid', 'AlreadyExists'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly reason?: ServiceNameUnavailabilityReason;
  /**
   * @member {string} [message] The detailed reason message.
   */
  message?: string;
}

/**
 * @interface
 * An interface representing MoveResourcesParameters.
 * Input values.
 *
 */
export interface MoveResourcesParameters {
  /**
   * @member {string} targetSubscriptionId The target subscription to move
   * resources to.
   */
  targetSubscriptionId: string;
  /**
   * @member {string} targetResourceGroupName The target resource group to move
   * resources to.
   */
  targetResourceGroupName: string;
  /**
   * @member {string[]} resourceIdsToMove The list of resources to move.
   */
  resourceIdsToMove: string[];
}

/**
 * @interface
 * An interface representing OperationResultsDescription.
 * The properties indicating the operation result of an operation on a service.
 *
 */
export interface OperationResultsDescription {
  /**
   * @member {string} [id] The ID of the operation returned.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [name] The name of the operation result.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {OperationResultStatus} [status] The status of the operation being
   * performed. Possible values include: 'Canceled', 'Succeeded', 'Failed',
   * 'Requested', 'Running'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly status?: OperationResultStatus;
  /**
   * @member {string} [startTime] The time that the operation was started.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly startTime?: string;
  /**
   * @member {any} [properties] Additional properties of the operation result.
   */
  properties?: any;
}

/**
 * @interface
 * An interface representing HealthcareApisManagementClientOptions.
 * @extends AzureServiceClientOptions
 */
export interface HealthcareApisManagementClientOptions extends AzureServiceClientOptions {
  /**
   * @member {string} [baseUri]
   */
  baseUri?: string;
}


/**
 * @interface
 * An interface representing the ServicesDescriptionListResult.
 * A list of service description objects with a next link.
 *
 * @extends Array<ServicesDescription>
 */
export interface ServicesDescriptionListResult extends Array<ServicesDescription> {
  /**
   * @member {string} [nextLink] The link used to get the next page of service
   * description objects.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the OperationListResult.
 * A list of service operations. It contains a list of operations and a URL
 * link to get the next set of results.
 *
 * @extends Array<Operation>
 */
export interface OperationListResult extends Array<Operation> {
  /**
   * @member {string} [nextLink] The link used to get the next page of service
   * description objects.
   */
  nextLink?: string;
}

/**
 * Defines values for ProvisioningState.
 * Possible values include: 'Deleting', 'Succeeded', 'Creating', 'Accepted', 'Verifying',
 * 'Updating', 'Failed', 'Canceled', 'Deprovisioned'
 * @readonly
 * @enum {string}
 */
export type ProvisioningState = 'Deleting' | 'Succeeded' | 'Creating' | 'Accepted' | 'Verifying' | 'Updating' | 'Failed' | 'Canceled' | 'Deprovisioned';

/**
 * Defines values for ServiceNameUnavailabilityReason.
 * Possible values include: 'Invalid', 'AlreadyExists'
 * @readonly
 * @enum {string}
 */
export type ServiceNameUnavailabilityReason = 'Invalid' | 'AlreadyExists';

/**
 * Defines values for OperationResultStatus.
 * Possible values include: 'Canceled', 'Succeeded', 'Failed', 'Requested', 'Running'
 * @readonly
 * @enum {string}
 */
export type OperationResultStatus = 'Canceled' | 'Succeeded' | 'Failed' | 'Requested' | 'Running';

/**
 * Contains response data for the get operation.
 */
export type ServicesGetResponse = ServicesDescription & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServicesDescription;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ServicesCreateOrUpdateResponse = ServicesDescription & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServicesDescription;
    };
};

/**
 * Contains response data for the update operation.
 */
export type ServicesUpdateResponse = ServicesDescription & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServicesDescription;
    };
};

/**
 * Contains response data for the list operation.
 */
export type ServicesListResponse = ServicesDescriptionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServicesDescriptionListResult;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type ServicesListByResourceGroupResponse = ServicesDescriptionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServicesDescriptionListResult;
    };
};

/**
 * Contains response data for the checkNameAvailability operation.
 */
export type ServicesCheckNameAvailabilityResponse = ServicesNameAvailabilityInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServicesNameAvailabilityInfo;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type ServicesBeginCreateOrUpdateResponse = ServicesDescription & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServicesDescription;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type ServicesBeginUpdateResponse = ServicesDescription & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServicesDescription;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type ServicesListNextResponse = ServicesDescriptionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServicesDescriptionListResult;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type ServicesListByResourceGroupNextResponse = ServicesDescriptionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServicesDescriptionListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type OperationsListNextResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type OperationResultsGetResponse = {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the get operation.
 */
export type MoveResourcesStatusGetResponse = {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};
