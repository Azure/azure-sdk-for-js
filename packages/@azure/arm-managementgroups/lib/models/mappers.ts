/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { CloudErrorMapper, BaseResourceMapper } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export const CloudError = CloudErrorMapper;
export const BaseResource = BaseResourceMapper;

export const ErrorDetails: msRest.CompositeMapper = {
  serializedName: "ErrorDetails",
  type: {
    name: "Composite",
    className: "ErrorDetails",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      details: {
        serializedName: "details",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorResponse: msRest.CompositeMapper = {
  serializedName: "ErrorResponse",
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorDetails"
        }
      }
    }
  }
};

export const OperationDisplayProperties: msRest.CompositeMapper = {
  serializedName: "OperationDisplayProperties",
  type: {
    name: "Composite",
    className: "OperationDisplayProperties",
    modelProperties: {
      provider: {
        readOnly: true,
        serializedName: "provider",
        type: {
          name: "String"
        }
      },
      resource: {
        readOnly: true,
        serializedName: "resource",
        type: {
          name: "String"
        }
      },
      operation: {
        readOnly: true,
        serializedName: "operation",
        type: {
          name: "String"
        }
      },
      description: {
        readOnly: true,
        serializedName: "description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Operation: msRest.CompositeMapper = {
  serializedName: "Operation",
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplayProperties"
        }
      }
    }
  }
};

export const CheckNameAvailabilityResult: msRest.CompositeMapper = {
  serializedName: "CheckNameAvailabilityResult",
  type: {
    name: "Composite",
    className: "CheckNameAvailabilityResult",
    modelProperties: {
      nameAvailable: {
        readOnly: true,
        serializedName: "nameAvailable",
        type: {
          name: "Boolean"
        }
      },
      reason: {
        readOnly: true,
        serializedName: "reason",
        type: {
          name: "Enum",
          allowedValues: [
            "Invalid",
            "AlreadyExists"
          ]
        }
      },
      message: {
        readOnly: true,
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TenantBackfillStatusResult: msRest.CompositeMapper = {
  serializedName: "TenantBackfillStatusResult",
  type: {
    name: "Composite",
    className: "TenantBackfillStatusResult",
    modelProperties: {
      tenantId: {
        readOnly: true,
        serializedName: "tenantId",
        type: {
          name: "String"
        }
      },
      status: {
        readOnly: true,
        serializedName: "status",
        type: {
          name: "Enum",
          allowedValues: [
            "NotStarted",
            "NotStartedButGroupsExist",
            "Started",
            "Failed",
            "Cancelled",
            "Completed"
          ]
        }
      }
    }
  }
};

export const ManagementGroupInfo: msRest.CompositeMapper = {
  serializedName: "ManagementGroupInfo",
  type: {
    name: "Composite",
    className: "ManagementGroupInfo",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      tenantId: {
        serializedName: "properties.tenantId",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ParentGroupInfo: msRest.CompositeMapper = {
  serializedName: "ParentGroupInfo",
  type: {
    name: "Composite",
    className: "ParentGroupInfo",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ManagementGroupDetails: msRest.CompositeMapper = {
  serializedName: "ManagementGroupDetails",
  type: {
    name: "Composite",
    className: "ManagementGroupDetails",
    modelProperties: {
      version: {
        serializedName: "version",
        type: {
          name: "Number"
        }
      },
      updatedTime: {
        serializedName: "updatedTime",
        type: {
          name: "DateTime"
        }
      },
      updatedBy: {
        serializedName: "updatedBy",
        type: {
          name: "String"
        }
      },
      parent: {
        serializedName: "parent",
        type: {
          name: "Composite",
          className: "ParentGroupInfo"
        }
      }
    }
  }
};

export const ManagementGroupChildInfo: msRest.CompositeMapper = {
  serializedName: "ManagementGroupChildInfo",
  type: {
    name: "Composite",
    className: "ManagementGroupChildInfo",
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      roles: {
        serializedName: "roles",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      children: {
        serializedName: "children",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ManagementGroupChildInfo"
            }
          }
        }
      }
    }
  }
};

export const ManagementGroup: msRest.CompositeMapper = {
  serializedName: "ManagementGroup",
  type: {
    name: "Composite",
    className: "ManagementGroup",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      tenantId: {
        serializedName: "properties.tenantId",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      roles: {
        nullable: true,
        serializedName: "properties.roles",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      details: {
        serializedName: "properties.details",
        type: {
          name: "Composite",
          className: "ManagementGroupDetails"
        }
      },
      children: {
        nullable: true,
        serializedName: "properties.children",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ManagementGroupChildInfo"
            }
          }
        }
      }
    }
  }
};

export const OperationResults: msRest.CompositeMapper = {
  serializedName: "OperationResults",
  type: {
    name: "Composite",
    className: "OperationResults",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EntityParentGroupInfo: msRest.CompositeMapper = {
  serializedName: "EntityParentGroupInfo",
  type: {
    name: "Composite",
    className: "EntityParentGroupInfo",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EntityInfo: msRest.CompositeMapper = {
  serializedName: "EntityInfo",
  type: {
    name: "Composite",
    className: "EntityInfo",
    modelProperties: {
      id: {
        nullable: true,
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      type: {
        nullable: true,
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      tenantId: {
        nullable: true,
        serializedName: "properties.tenantId",
        type: {
          name: "String"
        }
      },
      displayName: {
        nullable: true,
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      parent: {
        nullable: true,
        serializedName: "properties.parent",
        type: {
          name: "Composite",
          className: "EntityParentGroupInfo"
        }
      },
      permissions: {
        serializedName: "properties.permissions",
        type: {
          name: "String"
        }
      },
      inheritedPermissions: {
        serializedName: "properties.inheritedPermissions",
        type: {
          name: "String"
        }
      },
      numberOfDescendants: {
        nullable: true,
        serializedName: "properties.numberOfDescendants",
        type: {
          name: "Number"
        }
      },
      numberOfChildren: {
        nullable: true,
        serializedName: "properties.numberOfChildren",
        type: {
          name: "Number"
        }
      },
      numberOfChildGroups: {
        nullable: true,
        serializedName: "properties.numberOfChildGroups",
        type: {
          name: "Number"
        }
      },
      parentDisplayNameChain: {
        nullable: true,
        serializedName: "properties.parentDisplayNameChain",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      parentNameChain: {
        nullable: true,
        serializedName: "properties.parentNameChain",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const EntityHierarchyItem: msRest.CompositeMapper = {
  serializedName: "EntityHierarchyItem",
  type: {
    name: "Composite",
    className: "EntityHierarchyItem",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      permissions: {
        serializedName: "properties.permissions",
        type: {
          name: "String"
        }
      },
      children: {
        nullable: true,
        serializedName: "properties.children",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EntityHierarchyItem"
            }
          }
        }
      }
    }
  }
};

export const PatchManagementGroupRequest: msRest.CompositeMapper = {
  serializedName: "PatchManagementGroupRequest",
  type: {
    name: "Composite",
    className: "PatchManagementGroupRequest",
    modelProperties: {
      displayName: {
        nullable: true,
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      parentId: {
        nullable: true,
        serializedName: "parentId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CreateParentGroupInfo: msRest.CompositeMapper = {
  serializedName: "CreateParentGroupInfo",
  type: {
    name: "Composite",
    className: "CreateParentGroupInfo",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      displayName: {
        readOnly: true,
        serializedName: "displayName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CreateManagementGroupDetails: msRest.CompositeMapper = {
  serializedName: "CreateManagementGroupDetails",
  type: {
    name: "Composite",
    className: "CreateManagementGroupDetails",
    modelProperties: {
      version: {
        readOnly: true,
        serializedName: "version",
        type: {
          name: "Number"
        }
      },
      updatedTime: {
        readOnly: true,
        serializedName: "updatedTime",
        type: {
          name: "DateTime"
        }
      },
      updatedBy: {
        readOnly: true,
        serializedName: "updatedBy",
        type: {
          name: "String"
        }
      },
      parent: {
        serializedName: "parent",
        type: {
          name: "Composite",
          className: "CreateParentGroupInfo"
        }
      }
    }
  }
};

export const CreateManagementGroupChildInfo: msRest.CompositeMapper = {
  serializedName: "CreateManagementGroupChildInfo",
  type: {
    name: "Composite",
    className: "CreateManagementGroupChildInfo",
    modelProperties: {
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      displayName: {
        readOnly: true,
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      roles: {
        readOnly: true,
        serializedName: "roles",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      children: {
        readOnly: true,
        serializedName: "children",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CreateManagementGroupChildInfo"
            }
          }
        }
      }
    }
  }
};

export const CreateManagementGroupRequest: msRest.CompositeMapper = {
  serializedName: "CreateManagementGroupRequest",
  type: {
    name: "Composite",
    className: "CreateManagementGroupRequest",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      tenantId: {
        readOnly: true,
        serializedName: "properties.tenantId",
        type: {
          name: "String"
        }
      },
      displayName: {
        nullable: true,
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      roles: {
        nullable: true,
        readOnly: true,
        serializedName: "properties.roles",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      details: {
        serializedName: "properties.details",
        type: {
          name: "Composite",
          className: "CreateManagementGroupDetails"
        }
      },
      children: {
        nullable: true,
        readOnly: true,
        serializedName: "properties.children",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CreateManagementGroupChildInfo"
            }
          }
        }
      }
    }
  }
};

export const CheckNameAvailabilityRequest: msRest.CompositeMapper = {
  serializedName: "CheckNameAvailabilityRequest",
  type: {
    name: "Composite",
    className: "CheckNameAvailabilityRequest",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "Enum",
          allowedValues: [
            "/providers/Microsoft.Management/managementGroups"
          ]
        }
      }
    }
  }
};

export const ManagementGroupListResult: msRest.CompositeMapper = {
  serializedName: "ManagementGroupListResult",
  type: {
    name: "Composite",
    className: "ManagementGroupListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ManagementGroupInfo"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationListResult: msRest.CompositeMapper = {
  serializedName: "OperationListResult",
  type: {
    name: "Composite",
    className: "OperationListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EntityListResult: msRest.CompositeMapper = {
  serializedName: "EntityListResult",
  type: {
    name: "Composite",
    className: "EntityListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EntityInfo"
            }
          }
        }
      },
      count: {
        readOnly: true,
        serializedName: "count",
        type: {
          name: "Number"
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};
