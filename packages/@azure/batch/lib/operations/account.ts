/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/accountMappers";
import * as Parameters from "../models/parameters";
import { BatchServiceClientContext } from "../batchServiceClientContext";

/** Class representing a Account. */
export class Account {
  private readonly client: BatchServiceClientContext;

  /**
   * Create a Account.
   * @param {BatchServiceClientContext} client Reference to the service client.
   */
  constructor(client: BatchServiceClientContext) {
    this.client = client;
  }

  /**
   * @summary Lists all node agent SKUs supported by the Azure Batch service.
   * @param [options] The optional parameters
   * @returns Promise<Models.AccountListNodeAgentSkusResponse>
   */
  listNodeAgentSkus(options?: Models.AccountListNodeAgentSkusOptionalParams): Promise<Models.AccountListNodeAgentSkusResponse>;
  /**
   * @param callback The callback
   */
  listNodeAgentSkus(callback: msRest.ServiceCallback<Models.AccountListNodeAgentSkusResult>): void;
  /**
   * @param options The optional parameters
   * @param callback The callback
   */
  listNodeAgentSkus(options: Models.AccountListNodeAgentSkusOptionalParams, callback: msRest.ServiceCallback<Models.AccountListNodeAgentSkusResult>): void;
  listNodeAgentSkus(options?: Models.AccountListNodeAgentSkusOptionalParams, callback?: msRest.ServiceCallback<Models.AccountListNodeAgentSkusResult>): Promise<Models.AccountListNodeAgentSkusResponse> {
    return this.client.sendOperationRequest(
      {
        options
      },
      listNodeAgentSkusOperationSpec,
      callback) as Promise<Models.AccountListNodeAgentSkusResponse>;
  }

  /**
   * Gets the number of nodes in each state, grouped by pool.
   * @param [options] The optional parameters
   * @returns Promise<Models.AccountListPoolNodeCountsResponse>
   */
  listPoolNodeCounts(options?: Models.AccountListPoolNodeCountsOptionalParams): Promise<Models.AccountListPoolNodeCountsResponse>;
  /**
   * @param callback The callback
   */
  listPoolNodeCounts(callback: msRest.ServiceCallback<Models.PoolNodeCountsListResult>): void;
  /**
   * @param options The optional parameters
   * @param callback The callback
   */
  listPoolNodeCounts(options: Models.AccountListPoolNodeCountsOptionalParams, callback: msRest.ServiceCallback<Models.PoolNodeCountsListResult>): void;
  listPoolNodeCounts(options?: Models.AccountListPoolNodeCountsOptionalParams, callback?: msRest.ServiceCallback<Models.PoolNodeCountsListResult>): Promise<Models.AccountListPoolNodeCountsResponse> {
    return this.client.sendOperationRequest(
      {
        options
      },
      listPoolNodeCountsOperationSpec,
      callback) as Promise<Models.AccountListPoolNodeCountsResponse>;
  }

  /**
   * @summary Lists all node agent SKUs supported by the Azure Batch service.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.AccountListNodeAgentSkusResponse>
   */
  listNodeAgentSkusNext(nextPageLink: string, options?: Models.AccountListNodeAgentSkusNextOptionalParams): Promise<Models.AccountListNodeAgentSkusResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listNodeAgentSkusNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.AccountListNodeAgentSkusResult>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listNodeAgentSkusNext(nextPageLink: string, options: Models.AccountListNodeAgentSkusNextOptionalParams, callback: msRest.ServiceCallback<Models.AccountListNodeAgentSkusResult>): void;
  listNodeAgentSkusNext(nextPageLink: string, options?: Models.AccountListNodeAgentSkusNextOptionalParams, callback?: msRest.ServiceCallback<Models.AccountListNodeAgentSkusResult>): Promise<Models.AccountListNodeAgentSkusResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listNodeAgentSkusNextOperationSpec,
      callback) as Promise<Models.AccountListNodeAgentSkusResponse>;
  }

  /**
   * Gets the number of nodes in each state, grouped by pool.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.AccountListPoolNodeCountsResponse>
   */
  listPoolNodeCountsNext(nextPageLink: string, options?: Models.AccountListPoolNodeCountsNextOptionalParams): Promise<Models.AccountListPoolNodeCountsResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listPoolNodeCountsNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.PoolNodeCountsListResult>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listPoolNodeCountsNext(nextPageLink: string, options: Models.AccountListPoolNodeCountsNextOptionalParams, callback: msRest.ServiceCallback<Models.PoolNodeCountsListResult>): void;
  listPoolNodeCountsNext(nextPageLink: string, options?: Models.AccountListPoolNodeCountsNextOptionalParams, callback?: msRest.ServiceCallback<Models.PoolNodeCountsListResult>): Promise<Models.AccountListPoolNodeCountsResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listPoolNodeCountsNextOperationSpec,
      callback) as Promise<Models.AccountListPoolNodeCountsResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listNodeAgentSkusOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "nodeagentskus",
  queryParameters: [
    Parameters.apiVersion,
    Parameters.filter2,
    Parameters.maxResults3,
    Parameters.timeout18
  ],
  headerParameters: [
    Parameters.acceptLanguage,
    Parameters.clientRequestId21,
    Parameters.returnClientRequestId21,
    Parameters.ocpDate21
  ],
  responses: {
    200: {
      bodyMapper: Mappers.AccountListNodeAgentSkusResult,
      headersMapper: Mappers.AccountListNodeAgentSkusHeaders
    },
    default: {
      bodyMapper: Mappers.BatchError
    }
  },
  serializer
};

const listPoolNodeCountsOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "nodecounts",
  queryParameters: [
    Parameters.apiVersion,
    Parameters.filter3,
    Parameters.maxResults4,
    Parameters.timeout19
  ],
  headerParameters: [
    Parameters.acceptLanguage,
    Parameters.clientRequestId22,
    Parameters.returnClientRequestId22,
    Parameters.ocpDate22
  ],
  responses: {
    200: {
      bodyMapper: Mappers.PoolNodeCountsListResult,
      headersMapper: Mappers.AccountListPoolNodeCountsHeaders
    },
    default: {
      bodyMapper: Mappers.BatchError
    }
  },
  serializer
};

const listNodeAgentSkusNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://batch.core.windows.net",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  headerParameters: [
    Parameters.acceptLanguage,
    Parameters.clientRequestId23,
    Parameters.returnClientRequestId23,
    Parameters.ocpDate23
  ],
  responses: {
    200: {
      bodyMapper: Mappers.AccountListNodeAgentSkusResult,
      headersMapper: Mappers.AccountListNodeAgentSkusHeaders
    },
    default: {
      bodyMapper: Mappers.BatchError
    }
  },
  serializer
};

const listPoolNodeCountsNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://batch.core.windows.net",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  headerParameters: [
    Parameters.acceptLanguage,
    Parameters.clientRequestId24,
    Parameters.returnClientRequestId24,
    Parameters.ocpDate24
  ],
  responses: {
    200: {
      bodyMapper: Mappers.PoolNodeCountsListResult,
      headersMapper: Mappers.AccountListPoolNodeCountsHeaders
    },
    default: {
      bodyMapper: Mappers.BatchError
    }
  },
  serializer
};
