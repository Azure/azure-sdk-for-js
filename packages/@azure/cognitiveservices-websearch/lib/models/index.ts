/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { ServiceClientOptions } from "@azure/ms-rest-js";
import * as msRest from "@azure/ms-rest-js";


/**
 * @interface
 * An interface representing QueryContext.
 * Defines the query context that Bing used for the request.
 *
 */
export interface QueryContext {
  /**
   * @member {string} originalQuery The query string as specified in the
   * request.
   */
  originalQuery: string;
  /**
   * @member {string} [alteredQuery] The query string used by Bing to perform
   * the query. Bing uses the altered query string if the original query string
   * contained spelling mistakes. For example, if the query string is "saling
   * downwind", the altered query string will be "sailing downwind". This field
   * is included only if the original query string contains a spelling mistake.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly alteredQuery?: string;
  /**
   * @member {string} [alterationOverrideQuery] The query string to use to
   * force Bing to use the original string. For example, if the query string is
   * "saling downwind", the override query string will be "+saling downwind".
   * Remember to encode the query string which results in "%2Bsaling+downwind".
   * This field is included only if the original query string contains a
   * spelling mistake.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly alterationOverrideQuery?: string;
  /**
   * @member {boolean} [adultIntent] A Boolean value that indicates whether the
   * specified query has adult intent. The value is true if the query has adult
   * intent; otherwise, false.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly adultIntent?: boolean;
  /**
   * @member {boolean} [askUserForLocation] A Boolean value that indicates
   * whether Bing requires the user's location to provide accurate results. If
   * you specified the user's location by using the X-MSEdge-ClientIP and
   * X-Search-Location headers, you can ignore this field. For location aware
   * queries, such as "today's weather" or "restaurants near me" that need the
   * user's location to provide accurate results, this field is set to true.
   * For location aware queries that include the location (for example,
   * "Seattle weather"), this field is set to false. This field is also set to
   * false for queries that are not location aware, such as "best sellers".
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly askUserForLocation?: boolean;
  /**
   * @member {boolean} [isTransactional] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly isTransactional?: boolean;
}

/**
 * @interface
 * An interface representing WebMetaTag.
 * Defines a webpage's metadata.
 *
 */
export interface WebMetaTag {
  /**
   * @member {string} [name] The metadata.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [content] The name of the metadata.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly content?: string;
}

/**
 * Contains the possible cases for ResponseBase.
 */
export type ResponseBaseUnion = ResponseBase | IdentifiableUnion;

/**
 * @interface
 * An interface representing ResponseBase.
 */
export interface ResponseBase {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "ResponseBase";
}

/**
 * Contains the possible cases for Identifiable.
 */
export type IdentifiableUnion = Identifiable | ResponseUnion;

/**
 * @interface
 * An interface representing Identifiable.
 * Defines the identity of a resource.
 *
 */
export interface Identifiable {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "Identifiable";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
}

/**
 * Contains the possible cases for Response.
 */
export type ResponseUnion = Response | SearchResponse | ThingUnion | AnswerUnion | ErrorResponse;

/**
 * @interface
 * An interface representing Response.
 * Defines a response. All schemas that could be returned at the root of a
 * response should inherit from this
 *
 */
export interface Response {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "Response";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [webSearchUrl] The URL To Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
}

/**
 * Contains the possible cases for Thing.
 */
export type ThingUnion = Thing | CreativeWorkUnion | IntangibleUnion;

/**
 * @interface
 * An interface representing Thing.
 */
export interface Thing {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "Thing";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [webSearchUrl] The URL To Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {string} [name] The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [url] The URL to get more information about the thing
   * represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly url?: string;
  /**
   * @member {ImageObject} [image] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * @member {string} [description] A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
  /**
   * @member {string} [bingId] An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly bingId?: string;
}

/**
 * Contains the possible cases for CreativeWork.
 */
export type CreativeWorkUnion = CreativeWork | WebPage | MediaObjectUnion | ArticleUnion;

/**
 * @interface
 * An interface representing CreativeWork.
 */
export interface CreativeWork {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "CreativeWork";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [webSearchUrl] The URL To Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {string} [name] The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [url] The URL to get more information about the thing
   * represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly url?: string;
  /**
   * @member {ImageObject} [image] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * @member {string} [description] A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
  /**
   * @member {string} [bingId] An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly bingId?: string;
  /**
   * @member {string} [thumbnailUrl] The URL to a thumbnail of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly thumbnailUrl?: string;
  /**
   * @member {ThingUnion[]} [provider] The source of the creative work.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provider?: ThingUnion[];
  /**
   * @member {string} [text] **NOTE: This property will not be serialized. It
   * can only be populated by the server.**
   */
  readonly text?: string;
}

/**
 * Contains the possible cases for MediaObject.
 */
export type MediaObjectUnion = MediaObject | ImageObject | VideoObject;

/**
 * @interface
 * An interface representing MediaObject.
 */
export interface MediaObject {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "MediaObject";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [webSearchUrl] The URL To Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {string} [name] The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [url] The URL to get more information about the thing
   * represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly url?: string;
  /**
   * @member {ImageObject} [image] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * @member {string} [description] A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
  /**
   * @member {string} [bingId] An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly bingId?: string;
  /**
   * @member {string} [thumbnailUrl] The URL to a thumbnail of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly thumbnailUrl?: string;
  /**
   * @member {ThingUnion[]} [provider] The source of the creative work.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provider?: ThingUnion[];
  /**
   * @member {string} [text] **NOTE: This property will not be serialized. It
   * can only be populated by the server.**
   */
  readonly text?: string;
  /**
   * @member {string} [contentUrl] Original URL to retrieve the source (file)
   * for the media object (e.g the source URL for the image).
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly contentUrl?: string;
  /**
   * @member {string} [hostPageUrl] URL of the page that hosts the media
   * object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly hostPageUrl?: string;
  /**
   * @member {number} [width] The width of the source media object, in pixels.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly width?: number;
  /**
   * @member {number} [height] The height of the source media object, in
   * pixels.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly height?: number;
}

/**
 * @interface
 * An interface representing ImageObject.
 * Defines an image
 *
 */
export interface ImageObject {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "ImageObject";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [webSearchUrl] The URL To Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {string} [name] The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [url] The URL to get more information about the thing
   * represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly url?: string;
  /**
   * @member {ImageObject} [image] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * @member {string} [description] A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
  /**
   * @member {string} [bingId] An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly bingId?: string;
  /**
   * @member {string} [thumbnailUrl] The URL to a thumbnail of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly thumbnailUrl?: string;
  /**
   * @member {ThingUnion[]} [provider] The source of the creative work.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provider?: ThingUnion[];
  /**
   * @member {string} [text] **NOTE: This property will not be serialized. It
   * can only be populated by the server.**
   */
  readonly text?: string;
  /**
   * @member {string} [contentUrl] Original URL to retrieve the source (file)
   * for the media object (e.g the source URL for the image).
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly contentUrl?: string;
  /**
   * @member {string} [hostPageUrl] URL of the page that hosts the media
   * object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly hostPageUrl?: string;
  /**
   * @member {number} [width] The width of the source media object, in pixels.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly width?: number;
  /**
   * @member {number} [height] The height of the source media object, in
   * pixels.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly height?: number;
  /**
   * @member {ImageObject} [thumbnail] The URL to a thumbnail of the image
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly thumbnail?: ImageObject;
}

/**
 * @interface
 * An interface representing WebPage.
 * Defines a webpage that is relevant to the query.
 *
 */
export interface WebPage {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "WebPage";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [webSearchUrl] The URL To Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {string} [name] The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [url] The URL to get more information about the thing
   * represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly url?: string;
  /**
   * @member {ImageObject} [image] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * @member {string} [description] A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
  /**
   * @member {string} [bingId] An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly bingId?: string;
  /**
   * @member {string} [thumbnailUrl] The URL to a thumbnail of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly thumbnailUrl?: string;
  /**
   * @member {ThingUnion[]} [provider] The source of the creative work.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provider?: ThingUnion[];
  /**
   * @member {string} [text] **NOTE: This property will not be serialized. It
   * can only be populated by the server.**
   */
  readonly text?: string;
  /**
   * @member {string} [displayUrl] The display URL of the webpage. The URL is
   * meant for display purposes only and is not well formed.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly displayUrl?: string;
  /**
   * @member {string} [snippet] A snippet of text from the webpage that
   * describes its contents.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly snippet?: string;
  /**
   * @member {WebPage[]} [deepLinks] A list of links to related content that
   * Bing found in the website that contains this webpage. The Webpage object
   * in this context includes only the name, url, urlPingSuffix, and snippet
   * fields.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly deepLinks?: WebPage[];
  /**
   * @member {string} [dateLastCrawled] The last time that Bing crawled the
   * webpage. The date is in the form, YYYY-MM-DDTHH:MM:SS. For example,
   * 2015-04-13T05:23:39.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly dateLastCrawled?: string;
  /**
   * @member {WebMetaTag[]} [searchTags] A list of search tags that the webpage
   * owner specified on the webpage. The API returns only indexed search tags.
   * The name field of the MetaTag object contains the indexed search tag.
   * Search tags begin with search.* (for example, search.assetId). The content
   * field contains the tag's value.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly searchTags?: WebMetaTag[];
  /**
   * @member {ImageObject} [primaryImageOfPage] **NOTE: This property will not
   * be serialized. It can only be populated by the server.**
   */
  readonly primaryImageOfPage?: ImageObject;
}

/**
 * Contains the possible cases for Answer.
 */
export type AnswerUnion = Answer | Computation | SearchResultsAnswerUnion;

/**
 * @interface
 * An interface representing Answer.
 */
export interface Answer {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "Answer";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [webSearchUrl] The URL To Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {Query[]} [followUpQueries] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly followUpQueries?: Query[];
}

/**
 * Contains the possible cases for SearchResultsAnswer.
 */
export type SearchResultsAnswerUnion = SearchResultsAnswer | WebWebAnswer | Images | News | RelatedSearchesRelatedSearchAnswer | SpellSuggestions | TimeZone | Videos | Places;

/**
 * @interface
 * An interface representing SearchResultsAnswer.
 */
export interface SearchResultsAnswer {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "SearchResultsAnswer";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [webSearchUrl] The URL To Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {Query[]} [followUpQueries] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly followUpQueries?: Query[];
  /**
   * @member {QueryContext} [queryContext] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly queryContext?: QueryContext;
  /**
   * @member {number} [totalEstimatedMatches] The estimated number of webpages
   * that are relevant to the query. Use this number along with the count and
   * offset query parameters to page the results.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly totalEstimatedMatches?: number;
  /**
   * @member {boolean} [isFamilyFriendly] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly isFamilyFriendly?: boolean;
}

/**
 * @interface
 * An interface representing WebWebAnswer.
 * Defines a list of relevant webpage links.
 *
 */
export interface WebWebAnswer {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "Web/WebAnswer";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [webSearchUrl] The URL To Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {Query[]} [followUpQueries] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly followUpQueries?: Query[];
  /**
   * @member {QueryContext} [queryContext] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly queryContext?: QueryContext;
  /**
   * @member {number} [totalEstimatedMatches] The estimated number of webpages
   * that are relevant to the query. Use this number along with the count and
   * offset query parameters to page the results.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly totalEstimatedMatches?: number;
  /**
   * @member {boolean} [isFamilyFriendly] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly isFamilyFriendly?: boolean;
  /**
   * @member {WebPage[]} value A list of webpages that are relevant to the
   * query.
   */
  value: WebPage[];
  /**
   * @member {boolean} [someResultsRemoved] A Boolean value that indicates
   * whether the response excluded some results from the answer. If Bing
   * excluded some results, the value is true.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly someResultsRemoved?: boolean;
}

/**
 * @interface
 * An interface representing Query.
 * Defines a search query.
 *
 */
export interface Query {
  /**
   * @member {string} text The query string. Use this string as the query term
   * in a new search request.
   */
  text: string;
  /**
   * @member {string} [displayText] The display version of the query term. This
   * version of the query term may contain special characters that highlight
   * the search term found in the query string. The string contains the
   * highlighting characters only if the query enabled hit highlighting
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly displayText?: string;
  /**
   * @member {string} [webSearchUrl] The URL that takes the user to the Bing
   * search results page for the query.Only related search results include this
   * field.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {string} [searchLink] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly searchLink?: string;
  /**
   * @member {ImageObject} [thumbnail] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly thumbnail?: ImageObject;
}

/**
 * @interface
 * An interface representing Images.
 * Defines an image answer
 *
 */
export interface Images {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "Images";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [webSearchUrl] The URL To Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {Query[]} [followUpQueries] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly followUpQueries?: Query[];
  /**
   * @member {QueryContext} [queryContext] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly queryContext?: QueryContext;
  /**
   * @member {number} [totalEstimatedMatches] The estimated number of webpages
   * that are relevant to the query. Use this number along with the count and
   * offset query parameters to page the results.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly totalEstimatedMatches?: number;
  /**
   * @member {boolean} [isFamilyFriendly] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly isFamilyFriendly?: boolean;
  /**
   * @member {number} [nextOffset] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly nextOffset?: number;
  /**
   * @member {ImageObject[]} value A list of image objects that are relevant to
   * the query. If there are no results, the List is empty.
   */
  value: ImageObject[];
  /**
   * @member {Query[]} [queryExpansions] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly queryExpansions?: Query[];
  /**
   * @member {Query[]} [similarTerms] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly similarTerms?: Query[];
  /**
   * @member {Query[]} [relatedSearches] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly relatedSearches?: Query[];
}

/**
 * Contains the possible cases for Article.
 */
export type ArticleUnion = Article | NewsArticle;

/**
 * @interface
 * An interface representing Article.
 */
export interface Article {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "Article";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [webSearchUrl] The URL To Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {string} [name] The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [url] The URL to get more information about the thing
   * represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly url?: string;
  /**
   * @member {ImageObject} [image] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * @member {string} [description] A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
  /**
   * @member {string} [bingId] An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly bingId?: string;
  /**
   * @member {string} [thumbnailUrl] The URL to a thumbnail of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly thumbnailUrl?: string;
  /**
   * @member {ThingUnion[]} [provider] The source of the creative work.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provider?: ThingUnion[];
  /**
   * @member {string} [text] **NOTE: This property will not be serialized. It
   * can only be populated by the server.**
   */
  readonly text?: string;
  /**
   * @member {number} [wordCount] The number of words in the text of the
   * Article.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly wordCount?: number;
}

/**
 * @interface
 * An interface representing NewsArticle.
 * Defines a news article.
 *
 */
export interface NewsArticle {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "NewsArticle";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [webSearchUrl] The URL To Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {string} [name] The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [url] The URL to get more information about the thing
   * represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly url?: string;
  /**
   * @member {ImageObject} [image] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * @member {string} [description] A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
  /**
   * @member {string} [bingId] An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly bingId?: string;
  /**
   * @member {string} [thumbnailUrl] The URL to a thumbnail of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly thumbnailUrl?: string;
  /**
   * @member {ThingUnion[]} [provider] The source of the creative work.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provider?: ThingUnion[];
  /**
   * @member {string} [text] **NOTE: This property will not be serialized. It
   * can only be populated by the server.**
   */
  readonly text?: string;
  /**
   * @member {number} [wordCount] The number of words in the text of the
   * Article.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly wordCount?: number;
}

/**
 * @interface
 * An interface representing News.
 * Defines a news answer.
 *
 */
export interface News {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "News";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [webSearchUrl] The URL To Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {Query[]} [followUpQueries] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly followUpQueries?: Query[];
  /**
   * @member {QueryContext} [queryContext] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly queryContext?: QueryContext;
  /**
   * @member {number} [totalEstimatedMatches] The estimated number of webpages
   * that are relevant to the query. Use this number along with the count and
   * offset query parameters to page the results.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly totalEstimatedMatches?: number;
  /**
   * @member {boolean} [isFamilyFriendly] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly isFamilyFriendly?: boolean;
  /**
   * @member {NewsArticle[]} value An array of NewsArticle objects that contain
   * information about news articles that are relevant to the query. If there
   * are no results to return for the request, the array is empty.
   */
  value: NewsArticle[];
  /**
   * @member {string} [location] **NOTE: This property will not be serialized.
   * It can only be populated by the server.**
   */
  readonly location?: string;
}

/**
 * @interface
 * An interface representing RelatedSearchesRelatedSearchAnswer.
 * Defines a list of related queries made by others.
 *
 */
export interface RelatedSearchesRelatedSearchAnswer {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "RelatedSearches/RelatedSearchAnswer";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [webSearchUrl] The URL To Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {Query[]} [followUpQueries] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly followUpQueries?: Query[];
  /**
   * @member {QueryContext} [queryContext] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly queryContext?: QueryContext;
  /**
   * @member {number} [totalEstimatedMatches] The estimated number of webpages
   * that are relevant to the query. Use this number along with the count and
   * offset query parameters to page the results.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly totalEstimatedMatches?: number;
  /**
   * @member {boolean} [isFamilyFriendly] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly isFamilyFriendly?: boolean;
  /**
   * @member {Query[]} value A list of related queries that were made by
   * others.
   */
  value: Query[];
}

/**
 * @interface
 * An interface representing SpellSuggestions.
 * Defines a suggested query string that likely represents the user's intent.
 * The search results include this response if Bing determines that the user
 * may have intended to search for something different. For example, if the
 * user searches for alon brown, Bing may determine that the user likely
 * intended to search for Alton Brown instead (based on past searches by others
 * of Alon Brown).
 *
 */
export interface SpellSuggestions {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "SpellSuggestions";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [webSearchUrl] The URL To Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {Query[]} [followUpQueries] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly followUpQueries?: Query[];
  /**
   * @member {QueryContext} [queryContext] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly queryContext?: QueryContext;
  /**
   * @member {number} [totalEstimatedMatches] The estimated number of webpages
   * that are relevant to the query. Use this number along with the count and
   * offset query parameters to page the results.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly totalEstimatedMatches?: number;
  /**
   * @member {boolean} [isFamilyFriendly] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly isFamilyFriendly?: boolean;
  /**
   * @member {Query[]} value A list of suggested query strings that may
   * represent the user's intention. The list contains only one Query object.
   */
  value: Query[];
}

/**
 * @interface
 * An interface representing TimeZoneTimeZoneInformation.
 * Defines a date and time for a geographical location.
 *
 */
export interface TimeZoneTimeZoneInformation {
  /**
   * @member {string} location The name of the geographical location.For
   * example, County; City; City, State; City, State, Country; or Time Zone.
   */
  location: string;
  /**
   * @member {string} time The data and time specified in the form,
   * YYYY-MM-DDThh;mm:ss.ssssssZ.
   */
  time: string;
  /**
   * @member {string} utcOffset The offset from UTC. For example, UTC-7.
   */
  utcOffset: string;
}

/**
 * @interface
 * An interface representing TimeZone.
 * Defines the data and time of one or more geographic locations.
 *
 */
export interface TimeZone {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "TimeZone";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [webSearchUrl] The URL To Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {Query[]} [followUpQueries] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly followUpQueries?: Query[];
  /**
   * @member {QueryContext} [queryContext] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly queryContext?: QueryContext;
  /**
   * @member {number} [totalEstimatedMatches] The estimated number of webpages
   * that are relevant to the query. Use this number along with the count and
   * offset query parameters to page the results.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly totalEstimatedMatches?: number;
  /**
   * @member {boolean} [isFamilyFriendly] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly isFamilyFriendly?: boolean;
  /**
   * @member {TimeZoneTimeZoneInformation} primaryCityTime The data and time,
   * in UTC, of the geographic location specified in the query. If the query
   * specified a specific geographic location (for example, a city), this
   * object contains the name of the geographic location and the current date
   * and time of the location, in UTC. If the query specified a general
   * geographic location, such as a state or country, this object contains the
   * date and time of the primary city or state found in the specified state or
   * country. If the location contains additional time zones, the
   * otherCityTimes field contains the data and time of cities or states
   * located in the other time zones.
   */
  primaryCityTime: TimeZoneTimeZoneInformation;
  /**
   * @member {TimeZoneTimeZoneInformation[]} [otherCityTimes] A list of dates
   * and times of nearby time zones.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly otherCityTimes?: TimeZoneTimeZoneInformation[];
}

/**
 * @interface
 * An interface representing VideoObject.
 * Defines a video object that is relevant to the query.
 *
 */
export interface VideoObject {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "VideoObject";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [webSearchUrl] The URL To Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {string} [name] The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [url] The URL to get more information about the thing
   * represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly url?: string;
  /**
   * @member {ImageObject} [image] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * @member {string} [description] A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
  /**
   * @member {string} [bingId] An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly bingId?: string;
  /**
   * @member {string} [thumbnailUrl] The URL to a thumbnail of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly thumbnailUrl?: string;
  /**
   * @member {ThingUnion[]} [provider] The source of the creative work.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provider?: ThingUnion[];
  /**
   * @member {string} [text] **NOTE: This property will not be serialized. It
   * can only be populated by the server.**
   */
  readonly text?: string;
  /**
   * @member {string} [contentUrl] Original URL to retrieve the source (file)
   * for the media object (e.g the source URL for the image).
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly contentUrl?: string;
  /**
   * @member {string} [hostPageUrl] URL of the page that hosts the media
   * object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly hostPageUrl?: string;
  /**
   * @member {number} [width] The width of the source media object, in pixels.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly width?: number;
  /**
   * @member {number} [height] The height of the source media object, in
   * pixels.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly height?: number;
  /**
   * @member {string} [motionThumbnailUrl] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly motionThumbnailUrl?: string;
  /**
   * @member {string} [motionThumbnailId] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly motionThumbnailId?: string;
  /**
   * @member {string} [embedHtml] **NOTE: This property will not be serialized.
   * It can only be populated by the server.**
   */
  readonly embedHtml?: string;
  /**
   * @member {boolean} [allowHttpsEmbed] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly allowHttpsEmbed?: boolean;
  /**
   * @member {number} [viewCount] **NOTE: This property will not be serialized.
   * It can only be populated by the server.**
   */
  readonly viewCount?: number;
  /**
   * @member {ImageObject} [thumbnail] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly thumbnail?: ImageObject;
  /**
   * @member {string} [videoId] **NOTE: This property will not be serialized.
   * It can only be populated by the server.**
   */
  readonly videoId?: string;
  /**
   * @member {boolean} [allowMobileEmbed] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly allowMobileEmbed?: boolean;
  /**
   * @member {boolean} [isSuperfresh] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly isSuperfresh?: boolean;
}

/**
 * @interface
 * An interface representing Videos.
 * Defines a video answer.
 *
 */
export interface Videos {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "Videos";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [webSearchUrl] The URL To Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {Query[]} [followUpQueries] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly followUpQueries?: Query[];
  /**
   * @member {QueryContext} [queryContext] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly queryContext?: QueryContext;
  /**
   * @member {number} [totalEstimatedMatches] The estimated number of webpages
   * that are relevant to the query. Use this number along with the count and
   * offset query parameters to page the results.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly totalEstimatedMatches?: number;
  /**
   * @member {boolean} [isFamilyFriendly] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly isFamilyFriendly?: boolean;
  /**
   * @member {VideoObject[]} value A list of video objects that are relevant to
   * the query.
   */
  value: VideoObject[];
  /**
   * @member {number} [nextOffset] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly nextOffset?: number;
  /**
   * @member {Query[]} [queryExpansions] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly queryExpansions?: Query[];
  /**
   * @member {Query[]} [relatedSearches] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly relatedSearches?: Query[];
}

/**
 * @interface
 * An interface representing Computation.
 * Defines an expression and its answer
 *
 */
export interface Computation {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "Computation";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [webSearchUrl] The URL To Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {Query[]} [followUpQueries] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly followUpQueries?: Query[];
  /**
   * @member {string} expression The math or conversion expression. If the
   * query contains a request to convert units of measure (for example, meters
   * to feet), this field contains the from units and value contains the to
   * units. If the query contains a mathematical expression such as 2+2, this
   * field contains the expression and value contains the answer. Note that
   * mathematical expressions may be normalized. For example, if the query was
   * sqrt(4^2+8^2), the normalized expression may be sqrt((4^2)+(8^2)). If the
   * user's query is a math question and the textDecorations query parameter is
   * set to true, the expression string may include formatting markers. For
   * example, if the user's query is log(2), the normalized expression includes
   * the subscript markers. For more information, see Hit Highlighting.
   */
  expression: string;
  /**
   * @member {string} value The expression's answer.
   */
  value: string;
}

/**
 * @interface
 * An interface representing RankingRankingItem.
 * Defines a search result item to display
 *
 */
export interface RankingRankingItem {
  /**
   * @member {AnswerType} answerType The answer that contains the item to
   * display. Use the type to find the answer in the SearchResponse object. The
   * type is the name of a SearchResponse field. Possible values include:
   * 'WebPages', 'Images', 'SpellSuggestions', 'News', 'RelatedSearches',
   * 'Videos', 'Computation', 'TimeZone'. Default value: 'WebPages' .
   */
  answerType: AnswerType;
  /**
   * @member {number} [resultIndex] A zero-based index of the item in the
   * answer.If the item does not include this field, display all items in the
   * answer. For example, display all news articles in the News answer.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly resultIndex?: number;
  /**
   * @member {IdentifiableUnion} [value] The ID that identifies either an
   * answer to display or an item of an answer to display. If the ID identifies
   * an answer, display all items of the answer.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly value?: IdentifiableUnion;
  /**
   * @member {number} [htmlIndex] **NOTE: This property will not be serialized.
   * It can only be populated by the server.**
   */
  readonly htmlIndex?: number;
  /**
   * @member {number} [textualIndex] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly textualIndex?: number;
  /**
   * @member {number} [screenshotIndex] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly screenshotIndex?: number;
}

/**
 * @interface
 * An interface representing RankingRankingGroup.
 * Defines a search results group, such as mainline.
 *
 */
export interface RankingRankingGroup {
  /**
   * @member {RankingRankingItem[]} items A list of search result items to
   * display in the group.
   */
  items: RankingRankingItem[];
}

/**
 * @interface
 * An interface representing RankingRankingResponse.
 * Defines where on the search results page content should be placed and in
 * what order.
 *
 */
export interface RankingRankingResponse {
  /**
   * @member {RankingRankingGroup} [pole] The search results that should be
   * afforded the most visible treatment (for example, displayed above the
   * mainline and sidebar).
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly pole?: RankingRankingGroup;
  /**
   * @member {RankingRankingGroup} [mainline] The search results to display in
   * the mainline.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly mainline?: RankingRankingGroup;
  /**
   * @member {RankingRankingGroup} [sidebar] The search results to display in
   * the sidebar.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly sidebar?: RankingRankingGroup;
}

/**
 * @interface
 * An interface representing SearchResponse.
 * Defines the top-level object that the response includes when the request
 * succeeds.
 *
 */
export interface SearchResponse {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "SearchResponse";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [webSearchUrl] The URL To Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {QueryContext} [queryContext] An object that contains the query
   * string that Bing used for the request. This object contains the query
   * string as entered by the user. It may also contain an altered query string
   * that Bing used for the query if the query string contained a spelling
   * mistake.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly queryContext?: QueryContext;
  /**
   * @member {WebWebAnswer} [webPages] A list of webpages that are relevant to
   * the search query.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webPages?: WebWebAnswer;
  /**
   * @member {Images} [images] A list of images that are relevant to the search
   * query.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly images?: Images;
  /**
   * @member {News} [news] A list of news articles that are relevant to the
   * search query.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly news?: News;
  /**
   * @member {RelatedSearchesRelatedSearchAnswer} [relatedSearches] A list of
   * related queries made by others.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly relatedSearches?: RelatedSearchesRelatedSearchAnswer;
  /**
   * @member {SpellSuggestions} [spellSuggestions] The query string that likely
   * represents the user's intent.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly spellSuggestions?: SpellSuggestions;
  /**
   * @member {TimeZone} [timeZone] The date and time of one or more geographic
   * locations.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly timeZone?: TimeZone;
  /**
   * @member {Videos} [videos] A list of videos that are relevant to the search
   * query.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly videos?: Videos;
  /**
   * @member {Computation} [computation] The answer to a math expression or
   * units conversion expression.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly computation?: Computation;
  /**
   * @member {RankingRankingResponse} [rankingResponse] The order that Bing
   * suggests that you display the search results in.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly rankingResponse?: RankingRankingResponse;
}

/**
 * @interface
 * An interface representing Places.
 * Defines a local entity answer.
 *
 */
export interface Places {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "Places";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [webSearchUrl] The URL To Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {Query[]} [followUpQueries] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly followUpQueries?: Query[];
  /**
   * @member {QueryContext} [queryContext] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly queryContext?: QueryContext;
  /**
   * @member {number} [totalEstimatedMatches] The estimated number of webpages
   * that are relevant to the query. Use this number along with the count and
   * offset query parameters to page the results.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly totalEstimatedMatches?: number;
  /**
   * @member {boolean} [isFamilyFriendly] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly isFamilyFriendly?: boolean;
  /**
   * @member {ThingUnion[]} value A list of local entities, such as restaurants
   * or hotels.
   */
  value: ThingUnion[];
}

/**
 * @interface
 * An interface representing ErrorModel.
 * Defines the error that occurred.
 *
 */
export interface ErrorModel {
  /**
   * @member {ErrorCode} code The error code that identifies the category of
   * error. Possible values include: 'None', 'ServerError', 'InvalidRequest',
   * 'RateLimitExceeded', 'InvalidAuthorization', 'InsufficientAuthorization'.
   * Default value: 'None' .
   */
  code: ErrorCode;
  /**
   * @member {ErrorSubCode} [subCode] The error code that further helps to
   * identify the error. Possible values include: 'UnexpectedError',
   * 'ResourceError', 'NotImplemented', 'ParameterMissing',
   * 'ParameterInvalidValue', 'HttpNotAllowed', 'Blocked',
   * 'AuthorizationMissing', 'AuthorizationRedundancy',
   * 'AuthorizationDisabled', 'AuthorizationExpired'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly subCode?: ErrorSubCode;
  /**
   * @member {string} message A description of the error.
   */
  message: string;
  /**
   * @member {string} [moreDetails] A description that provides additional
   * information about the error.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly moreDetails?: string;
  /**
   * @member {string} [parameter] The parameter in the request that caused the
   * error.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly parameter?: string;
  /**
   * @member {string} [value] The parameter's value in the request that was not
   * valid.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly value?: string;
}

/**
 * @interface
 * An interface representing ErrorResponse.
 * The top-level response that represents a failed request.
 *
 */
export interface ErrorResponse {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "ErrorResponse";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [webSearchUrl] The URL To Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {ErrorModel[]} errors A list of errors that describe the reasons
   * why the request failed.
   */
  errors: ErrorModel[];
}

/**
 * @interface
 * An interface representing WebWebGrouping.
 */
export interface WebWebGrouping {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "Web/WebGrouping";
  /**
   * @member {WebPage[]} webPages
   */
  webPages: WebPage[];
}

/**
 * Contains the possible cases for Intangible.
 */
export type IntangibleUnion = Intangible | StructuredValue;

/**
 * @interface
 * An interface representing Intangible.
 */
export interface Intangible {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "Intangible";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [webSearchUrl] The URL To Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {string} [name] The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [url] The URL to get more information about the thing
   * represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly url?: string;
  /**
   * @member {ImageObject} [image] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * @member {string} [description] A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
  /**
   * @member {string} [bingId] An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly bingId?: string;
}

/**
 * @interface
 * An interface representing StructuredValue.
 */
export interface StructuredValue {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "StructuredValue";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [webSearchUrl] The URL To Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {string} [name] The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [url] The URL to get more information about the thing
   * represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly url?: string;
  /**
   * @member {ImageObject} [image] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * @member {string} [description] A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
  /**
   * @member {string} [bingId] An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly bingId?: string;
}

/**
 * @interface
 * An interface representing WebSearchAPIClientOptions.
 * @extends ServiceClientOptions
 */
export interface WebSearchAPIClientOptions extends ServiceClientOptions {
  /**
   * @member {string} [endpoint] Supported Cognitive Services endpoints
   * (protocol and hostname, for example:
   * "https://westus.api.cognitive.microsoft.com",
   * "https://api.cognitive.microsoft.com"). Default value:
   * 'https://api.cognitive.microsoft.com' .
   */
  endpoint?: string;
}

/**
 * @interface
 * An interface representing WebSearchOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface WebSearchOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [acceptLanguage] A comma-delimited list of one or more
   * languages to use for user interface strings. The list is in decreasing
   * order of preference. For additional information, including expected
   * format, see
   * [RFC2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html). This
   * header and the setLang query parameter are mutually exclusive; do not
   * specify both. If you set this header, you must also specify the cc query
   * parameter. Bing will use the first supported language it finds from the
   * list, and combine that language with the cc parameter value to determine
   * the market to return results for. If the list does not include a supported
   * language, Bing will find the closest language and market that supports the
   * request, and may use an aggregated or default market for the results
   * instead of a specified one. You should use this header and the cc query
   * parameter only if you specify multiple languages; otherwise, you should
   * use the mkt and setLang query parameters. A user interface string is a
   * string that's used as a label in a user interface. There are very few user
   * interface strings in the JSON response objects. Any links in the response
   * objects to Bing.com properties will apply the specified language.
   */
  acceptLanguage?: string;
  /**
   * @member {string} [pragma] By default, Bing returns cached content, if
   * available. To prevent Bing from returning cached content, set the Pragma
   * header to no-cache (for example, Pragma: no-cache).
   */
  pragma?: string;
  /**
   * @member {string} [userAgent] The user agent originating the request. Bing
   * uses the user agent to provide mobile users with an optimized experience.
   * Although optional, you are strongly encouraged to always specify this
   * header. The user-agent should be the same string that any commonly used
   * browser would send. For information about user agents, see [RFC
   * 2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html).
   */
  userAgent?: string;
  /**
   * @member {string} [clientId] Bing uses this header to provide users with
   * consistent behavior across Bing API calls. Bing often flights new features
   * and improvements, and it uses the client ID as a key for assigning traffic
   * on different flights. If you do not use the same client ID for a user
   * across multiple requests, then Bing may assign the user to multiple
   * conflicting flights. Being assigned to multiple conflicting flights can
   * lead to an inconsistent user experience. For example, if the second
   * request has a different flight assignment than the first, the experience
   * may be unexpected. Also, Bing can use the client ID to tailor web results
   * to that client ID’s search history, providing a richer experience for the
   * user. Bing also uses this header to help improve result rankings by
   * analyzing the activity generated by a client ID. The relevance
   * improvements help with better quality of results delivered by Bing APIs
   * and in turn enables higher click-through rates for the API consumer.
   * IMPORTANT: Although optional, you should consider this header required.
   * Persisting the client ID across multiple requests for the same end user
   * and device combination enables 1) the API consumer to receive a consistent
   * user experience, and 2) higher click-through rates via better quality of
   * results from the Bing APIs. Each user that uses your application on the
   * device must have a unique, Bing generated client ID. If you do not include
   * this header in the request, Bing generates an ID and returns it in the
   * X-MSEdge-ClientID response header. The only time that you should NOT
   * include this header in a request is the first time the user uses your app
   * on that device. Use the client ID for each Bing API request that your app
   * makes for this user on the device. Persist the client ID. To persist the
   * ID in a browser app, use a persistent HTTP cookie to ensure the ID is used
   * across all sessions. Do not use a session cookie. For other apps such as
   * mobile apps, use the device's persistent storage to persist the ID. The
   * next time the user uses your app on that device, get the client ID that
   * you persisted. Bing responses may or may not include this header. If the
   * response includes this header, capture the client ID and use it for all
   * subsequent Bing requests for the user on that device. If you include the
   * X-MSEdge-ClientID, you must not include cookies in the request.
   */
  clientId?: string;
  /**
   * @member {string} [clientIp] The IPv4 or IPv6 address of the client device.
   * The IP address is used to discover the user's location. Bing uses the
   * location information to determine safe search behavior. Although optional,
   * you are encouraged to always specify this header and the X-Search-Location
   * header. Do not obfuscate the address (for example, by changing the last
   * octet to 0). Obfuscating the address results in the location not being
   * anywhere near the device's actual location, which may result in Bing
   * serving erroneous results.
   */
  clientIp?: string;
  /**
   * @member {string} [location] A semicolon-delimited list of key/value pairs
   * that describe the client's geographical location. Bing uses the location
   * information to determine safe search behavior and to return relevant local
   * content. Specify the key/value pair as <key>:<value>. The following are
   * the keys that you use to specify the user's location. lat (required): The
   * latitude of the client's location, in degrees. The latitude must be
   * greater than or equal to -90.0 and less than or equal to +90.0. Negative
   * values indicate southern latitudes and positive values indicate northern
   * latitudes. long (required): The longitude of the client's location, in
   * degrees. The longitude must be greater than or equal to -180.0 and less
   * than or equal to +180.0. Negative values indicate western longitudes and
   * positive values indicate eastern longitudes. re (required): The radius, in
   * meters, which specifies the horizontal accuracy of the coordinates. Pass
   * the value returned by the device's location service. Typical values might
   * be 22m for GPS/Wi-Fi, 380m for cell tower triangulation, and 18,000m for
   * reverse IP lookup. ts (optional): The UTC UNIX timestamp of when the
   * client was at the location. (The UNIX timestamp is the number of seconds
   * since January 1, 1970.) head (optional): The client's relative heading or
   * direction of travel. Specify the direction of travel as degrees from 0
   * through 360, counting clockwise relative to true north. Specify this key
   * only if the sp key is nonzero. sp (optional): The horizontal velocity
   * (speed), in meters per second, that the client device is traveling. alt
   * (optional): The altitude of the client device, in meters. are (optional):
   * The radius, in meters, that specifies the vertical accuracy of the
   * coordinates. Specify this key only if you specify the alt key. Although
   * many of the keys are optional, the more information that you provide, the
   * more accurate the location results are. Although optional, you are
   * encouraged to always specify the user's geographical location. Providing
   * the location is especially important if the client's IP address does not
   * accurately reflect the user's physical location (for example, if the
   * client uses VPN). For optimal results, you should include this header and
   * the X-MSEdge-ClientIP header, but at a minimum, you should include this
   * header.
   */
  location?: string;
  /**
   * @member {number} [answerCount] The number of answers that you want the
   * response to include. The answers that Bing returns are based on ranking.
   * For example, if Bing returns webpages, images, videos, and relatedSearches
   * for a request and you set this parameter to two (2), the response includes
   * webpages and images.If you included the responseFilter query parameter in
   * the same request and set it to webpages and news, the response would
   * include only webpages.
   */
  answerCount?: number;
  /**
   * @member {string} [countryCode] A 2-character country code of the country
   * where the results come from. This API supports only the United States
   * market. If you specify this query parameter, it must be set to us. If you
   * set this parameter, you must also specify the Accept-Language header. Bing
   * uses the first supported language it finds from the languages list, and
   * combine that language with the country code that you specify to determine
   * the market to return results for. If the languages list does not include a
   * supported language, Bing finds the closest language and market that
   * supports the request, or it may use an aggregated or default market for
   * the results instead of a specified one. You should use this query
   * parameter and the Accept-Language query parameter only if you specify
   * multiple languages; otherwise, you should use the mkt and setLang query
   * parameters. This parameter and the mkt query parameter are mutually
   * exclusive—do not specify both.
   */
  countryCode?: string;
  /**
   * @member {number} [count] The number of search results to return in the
   * response. The default is 10 and the maximum value is 50. The actual number
   * delivered may be less than requested.Use this parameter along with the
   * offset parameter to page results.For example, if your user interface
   * displays 10 search results per page, set count to 10 and offset to 0 to
   * get the first page of results. For each subsequent page, increment offset
   * by 10 (for example, 0, 10, 20). It is possible for multiple pages to
   * include some overlap in results.
   */
  count?: number;
  /**
   * @member {Freshness} [freshness] Filter search results by the following age
   * values: Day—Return webpages that Bing discovered within the last 24 hours.
   * Week—Return webpages that Bing discovered within the last 7 days.
   * Month—Return webpages that discovered within the last 30 days. This filter
   * applies only to webpage results and not to the other results such as news
   * and images. Possible values include: 'Day', 'Week', 'Month'
   */
  freshness?: Freshness;
  /**
   * @member {string} [market] The market where the results come from.
   * Typically, mkt is the country where the user is making the request from.
   * However, it could be a different country if the user is not located in a
   * country where Bing delivers results. The market must be in the form
   * <language code>-<country code>. For example, en-US. The string is case
   * insensitive. If known, you are encouraged to always specify the market.
   * Specifying the market helps Bing route the request and return an
   * appropriate and optimal response. If you specify a market that is not
   * listed in Market Codes, Bing uses a best fit market code based on an
   * internal mapping that is subject to change. This parameter and the cc
   * query parameter are mutually exclusive—do not specify both. Default value:
   * 'en-us' .
   */
  market?: string;
  /**
   * @member {number} [offset] The zero-based offset that indicates the number
   * of search results to skip before returning results. The default is 0. The
   * offset should be less than (totalEstimatedMatches - count). Use this
   * parameter along with the count parameter to page results. For example, if
   * your user interface displays 10 search results per page, set count to 10
   * and offset to 0 to get the first page of results. For each subsequent
   * page, increment offset by 10 (for example, 0, 10, 20). it is possible for
   * multiple pages to include some overlap in results.
   */
  offset?: number;
  /**
   * @member {AnswerType[]} [promote] A comma-delimited list of answers that
   * you want the response to include regardless of their ranking. For example,
   * if you set answerCount) to two (2) so Bing returns the top two ranked
   * answers, but you also want the response to include news, you'd set promote
   * to news. If the top ranked answers are webpages, images, videos, and
   * relatedSearches, the response includes webpages and images because news is
   * not a ranked answer. But if you set promote to video, Bing would promote
   * the video answer into the response and return webpages, images, and
   * videos. The answers that you want to promote do not count against the
   * answerCount limit. For example, if the ranked answers are news, images,
   * and videos, and you set answerCount to 1 and promote to news, the response
   * contains news and images. Or, if the ranked answers are videos, images,
   * and news, the response contains videos and news. Possible values are
   * Computation, Images, News, RelatedSearches, SpellSuggestions, TimeZone,
   * Videos, Webpages. Use only if you specify answerCount.
   */
  promote?: AnswerType[];
  /**
   * @member {AnswerType[]} [responseFilter] A comma-delimited list of answers
   * to include in the response. If you do not specify this parameter, the
   * response includes all search answers for which there's relevant data.
   * Possible filter values are Computation, Images, News, RelatedSearches,
   * SpellSuggestions, TimeZone, Videos, Webpages. Although you may use this
   * filter to get a single answer, you should instead use the answer-specific
   * endpoint in order to get richer results. For example, to receive only
   * images, send the request to one of the Image Search API endpoints. The
   * RelatedSearches and SpellSuggestions answers do not support a separate
   * endpoint like the Image Search API does (only the Web Search API returns
   * them). To include answers that would otherwise be excluded because of
   * ranking, see the promote query parameter.
   */
  responseFilter?: AnswerType[];
  /**
   * @member {SafeSearch} [safeSearch] A filter used to filter adult content.
   * Off: Return webpages with adult text, images, or videos. Moderate: Return
   * webpages with adult text, but not adult images or videos. Strict: Do not
   * return webpages with adult text, images, or videos. The default is
   * Moderate. If the request comes from a market that Bing's adult policy
   * requires that safeSearch is set to Strict, Bing ignores the safeSearch
   * value and uses Strict. If you use the site: query operator, there is the
   * chance that the response may contain adult content regardless of what the
   * safeSearch query parameter is set to. Use site: only if you are aware of
   * the content on the site and your scenario supports the possibility of
   * adult content. Possible values include: 'Off', 'Moderate', 'Strict'
   */
  safeSearch?: SafeSearch;
  /**
   * @member {string} [setLang] The language to use for user interface strings.
   * Specify the language using the ISO 639-1 2-letter language code. For
   * example, the language code for English is EN. The default is EN (English).
   * Although optional, you should always specify the language. Typically, you
   * set setLang to the same language specified by mkt unless the user wants
   * the user interface strings displayed in a different language. This
   * parameter and the Accept-Language header are mutually exclusive; do not
   * specify both. A user interface string is a string that's used as a label
   * in a user interface. There are few user interface strings in the JSON
   * response objects. Also, any links to Bing.com properties in the response
   * objects apply the specified language.
   */
  setLang?: string;
  /**
   * @member {boolean} [textDecorations] A Boolean value that determines
   * whether display strings should contain decoration markers such as hit
   * highlighting characters. If true, the strings may include markers. The
   * default is false. To specify whether to use Unicode characters or HTML
   * tags as the markers, see the textFormat query parameter.
   */
  textDecorations?: boolean;
  /**
   * @member {TextFormat} [textFormat] The type of markers to use for text
   * decorations (see the textDecorations query parameter). Possible values are
   * Raw—Use Unicode characters to mark content that needs special formatting.
   * The Unicode characters are in the range E000 through E019. For example,
   * Bing uses E000 and E001 to mark the beginning and end of query terms for
   * hit highlighting. HTML—Use HTML tags to mark content that needs special
   * formatting. For example, use <b> tags to highlight query terms in display
   * strings. The default is Raw. For display strings that contain escapable
   * HTML characters such as <, >, and &, if textFormat is set to HTML, Bing
   * escapes the characters as appropriate (for example, < is escaped to &lt;).
   * Possible values include: 'Raw', 'Html'
   */
  textFormat?: TextFormat;
}

/**
 * Defines values for AnswerType.
 * Possible values include: 'WebPages', 'Images', 'SpellSuggestions', 'News', 'RelatedSearches',
 * 'Videos', 'Computation', 'TimeZone'
 * @readonly
 * @enum {string}
 */
export type AnswerType = 'WebPages' | 'Images' | 'SpellSuggestions' | 'News' | 'RelatedSearches' | 'Videos' | 'Computation' | 'TimeZone';

/**
 * Defines values for ErrorCode.
 * Possible values include: 'None', 'ServerError', 'InvalidRequest', 'RateLimitExceeded',
 * 'InvalidAuthorization', 'InsufficientAuthorization'
 * @readonly
 * @enum {string}
 */
export type ErrorCode = 'None' | 'ServerError' | 'InvalidRequest' | 'RateLimitExceeded' | 'InvalidAuthorization' | 'InsufficientAuthorization';

/**
 * Defines values for ErrorSubCode.
 * Possible values include: 'UnexpectedError', 'ResourceError', 'NotImplemented',
 * 'ParameterMissing', 'ParameterInvalidValue', 'HttpNotAllowed', 'Blocked',
 * 'AuthorizationMissing', 'AuthorizationRedundancy', 'AuthorizationDisabled',
 * 'AuthorizationExpired'
 * @readonly
 * @enum {string}
 */
export type ErrorSubCode = 'UnexpectedError' | 'ResourceError' | 'NotImplemented' | 'ParameterMissing' | 'ParameterInvalidValue' | 'HttpNotAllowed' | 'Blocked' | 'AuthorizationMissing' | 'AuthorizationRedundancy' | 'AuthorizationDisabled' | 'AuthorizationExpired';

/**
 * Defines values for Freshness.
 * Possible values include: 'Day', 'Week', 'Month'
 * @readonly
 * @enum {string}
 */
export type Freshness = 'Day' | 'Week' | 'Month';

/**
 * Defines values for SafeSearch.
 * Possible values include: 'Off', 'Moderate', 'Strict'
 * @readonly
 * @enum {string}
 */
export type SafeSearch = 'Off' | 'Moderate' | 'Strict';

/**
 * Defines values for TextFormat.
 * Possible values include: 'Raw', 'Html'
 * @readonly
 * @enum {string}
 */
export type TextFormat = 'Raw' | 'Html';

/**
 * Contains response data for the search operation.
 */
export type WebSearchResponse = SearchResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SearchResponse;
    };
};
