/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "ms-rest-azure-js";
import * as msRest from "ms-rest-js";

export { BaseResource, CloudError };


/**
 * @interface
 * An interface representing ConsistencyPolicy.
 * The consistency policy for the Cosmos DB database account.
 *
 */
export interface ConsistencyPolicy {
  /**
   * @member {DefaultConsistencyLevel} defaultConsistencyLevel The default
   * consistency level and configuration settings of the Cosmos DB account.
   * Possible values include: 'Eventual', 'Session', 'BoundedStaleness',
   * 'Strong', 'ConsistentPrefix'
   */
  defaultConsistencyLevel: DefaultConsistencyLevel;
  /**
   * @member {number} [maxStalenessPrefix] When used with the Bounded Staleness
   * consistency level, this value represents the number of stale requests
   * tolerated. Accepted range for this value is 1 â€“ 2,147,483,647. Required
   * when defaultConsistencyPolicy is set to 'BoundedStaleness'.
   */
  maxStalenessPrefix?: number;
  /**
   * @member {number} [maxIntervalInSeconds] When used with the Bounded
   * Staleness consistency level, this value represents the time amount of
   * staleness (in seconds) tolerated. Accepted range for this value is 5 -
   * 86400. Required when defaultConsistencyPolicy is set to
   * 'BoundedStaleness'.
   */
  maxIntervalInSeconds?: number;
}

/**
 * @interface
 * An interface representing Capability.
 * Cosmos DB capability object
 *
 */
export interface Capability {
  /**
   * @member {string} [name] Name of the Cosmos DB capability. For example,
   * "name": "EnableCassandra". Current values also include "EnableTable" and
   * "EnableGremlin".
   */
  name?: string;
}

/**
 * @interface
 * An interface representing Location.
 * A region in which the Azure Cosmos DB database account is deployed.
 *
 */
export interface Location {
  /**
   * @member {string} [id] The unique identifier of the region within the
   * database account. Example: &lt;accountName&gt;-&lt;locationName&gt;.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [locationName] The name of the region.
   */
  locationName?: string;
  /**
   * @member {string} [documentEndpoint] The connection endpoint for the
   * specific region. Example:
   * https://&lt;accountName&gt;-&lt;locationName&gt;.documents.azure.com:443/
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly documentEndpoint?: string;
  /**
   * @member {string} [provisioningState]
   */
  provisioningState?: string;
  /**
   * @member {number} [failoverPriority] The failover priority of the region. A
   * failover priority of 0 indicates a write region. The maximum value for a
   * failover priority = (total number of regions - 1). Failover priority
   * values must be unique for each of the regions in which the database
   * account exists.
   */
  failoverPriority?: number;
}

/**
 * @interface
 * An interface representing FailoverPolicy.
 * The failover policy for a given region of a database account.
 *
 */
export interface FailoverPolicy {
  /**
   * @member {string} [id] The unique identifier of the region in which the
   * database account replicates to. Example:
   * &lt;accountName&gt;-&lt;locationName&gt;.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [locationName] The name of the region in which the
   * database account exists.
   */
  locationName?: string;
  /**
   * @member {number} [failoverPriority] The failover priority of the region. A
   * failover priority of 0 indicates a write region. The maximum value for a
   * failover priority = (total number of regions - 1). Failover priority
   * values must be unique for each of the regions in which the database
   * account exists.
   */
  failoverPriority?: number;
}

/**
 * @interface
 * An interface representing VirtualNetworkRule.
 * Virtual Network ACL Rule object
 *
 */
export interface VirtualNetworkRule {
  /**
   * @member {string} [id] Resource ID of a subnet, for example:
   * /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}.
   */
  id?: string;
}

/**
 * @interface
 * An interface representing Resource.
 * A database account resource.
 *
 * @extends BaseResource
 */
export interface Resource extends BaseResource {
  /**
   * @member {string} [id] The unique resource identifier of the database
   * account.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [name] The name of the database account.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [type] The type of Azure resource.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: string;
  /**
   * @member {string} location The location of the resource group to which the
   * resource belongs.
   */
  location: string;
  /**
   * @member {{ [propertyName: string]: string }} [tags]
   */
  tags?: { [propertyName: string]: string };
}

/**
 * @interface
 * An interface representing DatabaseAccount.
 * An Azure Cosmos DB database account.
 *
 * @extends Resource
 */
export interface DatabaseAccount extends Resource {
  /**
   * @member {DatabaseAccountKind} [kind] Indicates the type of database
   * account. This can only be set at database account creation. Possible
   * values include: 'GlobalDocumentDB', 'MongoDB', 'Parse'. Default value:
   * 'GlobalDocumentDB' .
   */
  kind?: DatabaseAccountKind;
  /**
   * @member {string} [provisioningState]
   */
  provisioningState?: string;
  /**
   * @member {string} [documentEndpoint] The connection endpoint for the Cosmos
   * DB database account.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly documentEndpoint?: string;
  /**
   * @member {DatabaseAccountOfferType} [databaseAccountOfferType] The offer
   * type for the Cosmos DB database account. Default value: Standard. Possible
   * values include: 'Standard'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly databaseAccountOfferType?: DatabaseAccountOfferType;
  /**
   * @member {string} [ipRangeFilter] Cosmos DB Firewall Support: This value
   * specifies the set of IP addresses or IP address ranges in CIDR form to be
   * included as the allowed list of client IPs for a given database account.
   * IP addresses/ranges must be comma separated and must not contain any
   * spaces.
   */
  ipRangeFilter?: string;
  /**
   * @member {boolean} [isVirtualNetworkFilterEnabled] Flag to indicate whether
   * to enable/disable Virtual Network ACL rules.
   */
  isVirtualNetworkFilterEnabled?: boolean;
  /**
   * @member {boolean} [enableAutomaticFailover] Enables automatic failover of
   * the write region in the rare event that the region is unavailable due to
   * an outage. Automatic failover will result in a new write region for the
   * account and is chosen based on the failover priorities configured for the
   * account.
   */
  enableAutomaticFailover?: boolean;
  /**
   * @member {ConsistencyPolicy} [consistencyPolicy] The consistency policy for
   * the Cosmos DB database account.
   */
  consistencyPolicy?: ConsistencyPolicy;
  /**
   * @member {Capability[]} [capabilities] List of Cosmos DB capabilities for
   * the account
   */
  capabilities?: Capability[];
  /**
   * @member {Location[]} [writeLocations] An array that contains the write
   * location for the Cosmos DB account.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly writeLocations?: Location[];
  /**
   * @member {Location[]} [readLocations] An array that contains of the read
   * locations enabled for the Cosmos DB account.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly readLocations?: Location[];
  /**
   * @member {FailoverPolicy[]} [failoverPolicies] An array that contains the
   * regions ordered by their failover priorities.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly failoverPolicies?: FailoverPolicy[];
  /**
   * @member {VirtualNetworkRule[]} [virtualNetworkRules] List of Virtual
   * Network ACL rules configured for the Cosmos DB account.
   */
  virtualNetworkRules?: VirtualNetworkRule[];
  /**
   * @member {boolean} [enableMultipleWriteLocations] Enables the account to
   * write in multiple locations
   */
  enableMultipleWriteLocations?: boolean;
}

/**
 * @interface
 * An interface representing ErrorResponse.
 * Error Response.
 *
 */
export interface ErrorResponse {
  /**
   * @member {string} [code] Error code.
   */
  code?: string;
  /**
   * @member {string} [message] Error message indicating why the operation
   * failed.
   */
  message?: string;
}

/**
 * @interface
 * An interface representing FailoverPolicies.
 * The list of new failover policies for the failover priority change.
 *
 */
export interface FailoverPolicies {
  /**
   * @member {FailoverPolicy[]} failoverPolicies List of failover policies.
   */
  failoverPolicies: FailoverPolicy[];
}

/**
 * @interface
 * An interface representing RegionForOnlineOffline.
 * Cosmos DB region to online or offline.
 *
 */
export interface RegionForOnlineOffline {
  /**
   * @member {string} region Cosmos DB region, with spaces between words and
   * each word capitalized.
   */
  region: string;
}

/**
 * @interface
 * An interface representing DatabaseAccountCreateUpdateParameters.
 * Parameters to create and update Cosmos DB database accounts.
 *
 * @extends Resource
 */
export interface DatabaseAccountCreateUpdateParameters extends Resource {
  /**
   * @member {DatabaseAccountKind} [kind] Indicates the type of database
   * account. This can only be set at database account creation. Possible
   * values include: 'GlobalDocumentDB', 'MongoDB', 'Parse'. Default value:
   * 'GlobalDocumentDB' .
   */
  kind?: DatabaseAccountKind;
  /**
   * @member {ConsistencyPolicy} [consistencyPolicy] The consistency policy for
   * the Cosmos DB account.
   */
  consistencyPolicy?: ConsistencyPolicy;
  /**
   * @member {Location[]} locations An array that contains the georeplication
   * locations enabled for the Cosmos DB account.
   */
  locations: Location[];
  /**
   * @member {string} [ipRangeFilter] Cosmos DB Firewall Support: This value
   * specifies the set of IP addresses or IP address ranges in CIDR form to be
   * included as the allowed list of client IPs for a given database account.
   * IP addresses/ranges must be comma separated and must not contain any
   * spaces.
   */
  ipRangeFilter?: string;
  /**
   * @member {boolean} [isVirtualNetworkFilterEnabled] Flag to indicate whether
   * to enable/disable Virtual Network ACL rules.
   */
  isVirtualNetworkFilterEnabled?: boolean;
  /**
   * @member {boolean} [enableAutomaticFailover] Enables automatic failover of
   * the write region in the rare event that the region is unavailable due to
   * an outage. Automatic failover will result in a new write region for the
   * account and is chosen based on the failover priorities configured for the
   * account.
   */
  enableAutomaticFailover?: boolean;
  /**
   * @member {Capability[]} [capabilities] List of Cosmos DB capabilities for
   * the account
   */
  capabilities?: Capability[];
  /**
   * @member {VirtualNetworkRule[]} [virtualNetworkRules] List of Virtual
   * Network ACL rules configured for the Cosmos DB account.
   */
  virtualNetworkRules?: VirtualNetworkRule[];
  /**
   * @member {boolean} [enableMultipleWriteLocations] Enables the account to
   * write in multiple locations
   */
  enableMultipleWriteLocations?: boolean;
}

/**
 * @interface
 * An interface representing DatabaseAccountPatchParameters.
 * Parameters for patching Azure Cosmos DB database account properties.
 *
 */
export interface DatabaseAccountPatchParameters {
  /**
   * @member {{ [propertyName: string]: string }} [tags]
   */
  tags?: { [propertyName: string]: string };
  /**
   * @member {Capability[]} [capabilities] List of Cosmos DB capabilities for
   * the account
   */
  capabilities?: Capability[];
}

/**
 * @interface
 * An interface representing DatabaseAccountListReadOnlyKeysResult.
 * The read-only access keys for the given database account.
 *
 */
export interface DatabaseAccountListReadOnlyKeysResult {
  /**
   * @member {string} [primaryReadonlyMasterKey] Base 64 encoded value of the
   * primary read-only key.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly primaryReadonlyMasterKey?: string;
  /**
   * @member {string} [secondaryReadonlyMasterKey] Base 64 encoded value of the
   * secondary read-only key.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly secondaryReadonlyMasterKey?: string;
}

/**
 * @interface
 * An interface representing DatabaseAccountListKeysResult.
 * The access keys for the given database account.
 *
 */
export interface DatabaseAccountListKeysResult {
  /**
   * @member {string} [primaryMasterKey] Base 64 encoded value of the primary
   * read-write key.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly primaryMasterKey?: string;
  /**
   * @member {string} [secondaryMasterKey] Base 64 encoded value of the
   * secondary read-write key.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly secondaryMasterKey?: string;
  /**
   * @member {string} [primaryReadonlyMasterKey] Base 64 encoded value of the
   * primary read-only key.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly primaryReadonlyMasterKey?: string;
  /**
   * @member {string} [secondaryReadonlyMasterKey] Base 64 encoded value of the
   * secondary read-only key.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly secondaryReadonlyMasterKey?: string;
}

/**
 * @interface
 * An interface representing DatabaseAccountConnectionString.
 * Connection string for the Cosmos DB account
 *
 */
export interface DatabaseAccountConnectionString {
  /**
   * @member {string} [connectionString] Value of the connection string
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly connectionString?: string;
  /**
   * @member {string} [description] Description of the connection string
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
}

/**
 * @interface
 * An interface representing DatabaseAccountListConnectionStringsResult.
 * The connection strings for the given database account.
 *
 */
export interface DatabaseAccountListConnectionStringsResult {
  /**
   * @member {DatabaseAccountConnectionString[]} [connectionStrings] An array
   * that contains the connection strings for the Cosmos DB account.
   */
  connectionStrings?: DatabaseAccountConnectionString[];
}

/**
 * @interface
 * An interface representing DatabaseAccountRegenerateKeyParameters.
 * Parameters to regenerate the keys within the database account.
 *
 */
export interface DatabaseAccountRegenerateKeyParameters {
  /**
   * @member {KeyKind} keyKind The access key to regenerate. Possible values
   * include: 'primary', 'secondary', 'primaryReadonly', 'secondaryReadonly'
   */
  keyKind: KeyKind;
}

/**
 * @interface
 * An interface representing OperationDisplay.
 * The object that represents the operation.
 *
 */
export interface OperationDisplay {
  /**
   * @member {string} [provider] Service provider: Microsoft.ResourceProvider
   */
  provider?: string;
  /**
   * @member {string} [resource] Resource on which the operation is performed:
   * Profile, endpoint, etc.
   */
  resource?: string;
  /**
   * @member {string} [operation] Operation type: Read, write, delete, etc.
   */
  operation?: string;
  /**
   * @member {string} [description] Description of operation
   */
  description?: string;
}

/**
 * @interface
 * An interface representing Operation.
 * REST API operation
 *
 */
export interface Operation {
  /**
   * @member {string} [name] Operation name: {provider}/{resource}/{operation}
   */
  name?: string;
  /**
   * @member {OperationDisplay} [display] The object that represents the
   * operation.
   */
  display?: OperationDisplay;
}

/**
 * @interface
 * An interface representing MetricName.
 * A metric name.
 *
 */
export interface MetricName {
  /**
   * @member {string} [value] The name of the metric.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly value?: string;
  /**
   * @member {string} [localizedValue] The friendly name of the metric.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly localizedValue?: string;
}

/**
 * @interface
 * An interface representing Usage.
 * The usage data for a usage request.
 *
 */
export interface Usage {
  /**
   * @member {UnitType} [unit] The unit of the metric. Possible values include:
   * 'Count', 'Bytes', 'Seconds', 'Percent', 'CountPerSecond',
   * 'BytesPerSecond', 'Milliseconds'
   */
  unit?: UnitType;
  /**
   * @member {MetricName} [name] The name information for the metric.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: MetricName;
  /**
   * @member {string} [quotaPeriod] The quota period used to summarize the
   * usage values.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly quotaPeriod?: string;
  /**
   * @member {number} [limit] Maximum value for this metric
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly limit?: number;
  /**
   * @member {number} [currentValue] Current value for this metric
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly currentValue?: number;
}

/**
 * @interface
 * An interface representing PartitionUsage.
 * The partition level usage data for a usage request.
 *
 * @extends Usage
 */
export interface PartitionUsage extends Usage {
  /**
   * @member {string} [partitionId] The parition id (GUID identifier) of the
   * usages.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly partitionId?: string;
  /**
   * @member {string} [partitionKeyRangeId] The partition key range id (integer
   * identifier) of the usages.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly partitionKeyRangeId?: string;
}

/**
 * @interface
 * An interface representing MetricAvailability.
 * The availability of the metric.
 *
 */
export interface MetricAvailability {
  /**
   * @member {string} [timeGrain] The time grain to be used to summarize the
   * metric values.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly timeGrain?: string;
  /**
   * @member {string} [retention] The retention for the metric values.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly retention?: string;
}

/**
 * @interface
 * An interface representing MetricDefinition.
 * The definition of a metric.
 *
 */
export interface MetricDefinition {
  /**
   * @member {MetricAvailability[]} [metricAvailabilities] The list of metric
   * availabilities for the account.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly metricAvailabilities?: MetricAvailability[];
  /**
   * @member {PrimaryAggregationType} [primaryAggregationType] The primary
   * aggregation type of the metric. Possible values include: 'None',
   * 'Average', 'Total', 'Minimimum', 'Maximum', 'Last'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly primaryAggregationType?: PrimaryAggregationType;
  /**
   * @member {UnitType} [unit] The unit of the metric. Possible values include:
   * 'Count', 'Bytes', 'Seconds', 'Percent', 'CountPerSecond',
   * 'BytesPerSecond', 'Milliseconds'
   */
  unit?: UnitType;
  /**
   * @member {string} [resourceUri] The resource uri of the database.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly resourceUri?: string;
  /**
   * @member {MetricName} [name] The name information for the metric.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: MetricName;
}

/**
 * @interface
 * An interface representing MetricValue.
 * Represents metrics values.
 *
 */
export interface MetricValue {
  /**
   * @member {number} [_count] The number of values for the metric.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly _count?: number;
  /**
   * @member {number} [average] The average value of the metric.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly average?: number;
  /**
   * @member {number} [maximum] The max value of the metric.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly maximum?: number;
  /**
   * @member {number} [minimum] The min value of the metric.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly minimum?: number;
  /**
   * @member {Date} [timestamp] The metric timestamp (ISO-8601 format).
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly timestamp?: Date;
  /**
   * @member {number} [total] The total value of the metric.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly total?: number;
}

/**
 * @interface
 * An interface representing Metric.
 * Metric data
 *
 */
export interface Metric {
  /**
   * @member {Date} [startTime] The start time for the metric (ISO-8601
   * format).
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly startTime?: Date;
  /**
   * @member {Date} [endTime] The end time for the metric (ISO-8601 format).
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly endTime?: Date;
  /**
   * @member {string} [timeGrain] The time grain to be used to summarize the
   * metric values.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly timeGrain?: string;
  /**
   * @member {UnitType} [unit] The unit of the metric. Possible values include:
   * 'Count', 'Bytes', 'Seconds', 'Percent', 'CountPerSecond',
   * 'BytesPerSecond', 'Milliseconds'
   */
  unit?: UnitType;
  /**
   * @member {MetricName} [name] The name information for the metric.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: MetricName;
  /**
   * @member {MetricValue[]} [metricValues] The metric values for the specified
   * time window and timestep.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly metricValues?: MetricValue[];
}

/**
 * @interface
 * An interface representing PercentileMetricValue.
 * Represents percentile metrics values.
 *
 * @extends MetricValue
 */
export interface PercentileMetricValue extends MetricValue {
  /**
   * @member {number} [p10] The 10th percentile value for the metric.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly p10?: number;
  /**
   * @member {number} [p25] The 25th percentile value for the metric.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly p25?: number;
  /**
   * @member {number} [p50] The 50th percentile value for the metric.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly p50?: number;
  /**
   * @member {number} [p75] The 75th percentile value for the metric.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly p75?: number;
  /**
   * @member {number} [p90] The 90th percentile value for the metric.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly p90?: number;
  /**
   * @member {number} [p95] The 95th percentile value for the metric.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly p95?: number;
  /**
   * @member {number} [p99] The 99th percentile value for the metric.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly p99?: number;
}

/**
 * @interface
 * An interface representing PercentileMetric.
 * Percentile Metric data
 *
 */
export interface PercentileMetric {
  /**
   * @member {Date} [startTime] The start time for the metric (ISO-8601
   * format).
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly startTime?: Date;
  /**
   * @member {Date} [endTime] The end time for the metric (ISO-8601 format).
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly endTime?: Date;
  /**
   * @member {string} [timeGrain] The time grain to be used to summarize the
   * metric values.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly timeGrain?: string;
  /**
   * @member {UnitType} [unit] The unit of the metric. Possible values include:
   * 'Count', 'Bytes', 'Seconds', 'Percent', 'CountPerSecond',
   * 'BytesPerSecond', 'Milliseconds'
   */
  unit?: UnitType;
  /**
   * @member {MetricName} [name] The name information for the metric.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: MetricName;
  /**
   * @member {PercentileMetricValue[]} [metricValues] The percentile metric
   * values for the specified time window and timestep.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly metricValues?: PercentileMetricValue[];
}

/**
 * @interface
 * An interface representing PartitionMetric.
 * The metric values for a single partition.
 *
 * @extends Metric
 */
export interface PartitionMetric extends Metric {
  /**
   * @member {string} [partitionId] The parition id (GUID identifier) of the
   * metric values.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly partitionId?: string;
  /**
   * @member {string} [partitionKeyRangeId] The partition key range id (integer
   * identifier) of the metric values.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly partitionKeyRangeId?: string;
}

/**
 * @interface
 * An interface representing DatabaseAccountsListUsagesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface DatabaseAccountsListUsagesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [filter] An OData filter expression that describes a
   * subset of usages to return. The supported parameter is name.value (name of
   * the metric, can have an or of multiple names).
   */
  filter?: string;
}

/**
 * @interface
 * An interface representing DatabaseListUsagesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface DatabaseListUsagesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [filter] An OData filter expression that describes a
   * subset of usages to return. The supported parameter is name.value (name of
   * the metric, can have an or of multiple names).
   */
  filter?: string;
}

/**
 * @interface
 * An interface representing CollectionListUsagesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface CollectionListUsagesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [filter] An OData filter expression that describes a
   * subset of usages to return. The supported parameter is name.value (name of
   * the metric, can have an or of multiple names).
   */
  filter?: string;
}

/**
 * @interface
 * An interface representing CollectionPartitionListUsagesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface CollectionPartitionListUsagesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [filter] An OData filter expression that describes a
   * subset of usages to return. The supported parameter is name.value (name of
   * the metric, can have an or of multiple names).
   */
  filter?: string;
}

/**
 * @interface
 * An interface representing CosmosDBManagementClientOptions.
 * @extends AzureServiceClientOptions
 */
export interface CosmosDBManagementClientOptions extends AzureServiceClientOptions {
  /**
   * @member {string} [baseUri]
   */
  baseUri?: string;
}


/**
 * @interface
 * An interface representing the DatabaseAccountsListResult.
 * The List operation response, that contains the database accounts and their
 * properties.
 *
 * @extends Array<DatabaseAccount>
 */
export interface DatabaseAccountsListResult extends Array<DatabaseAccount> {
}

/**
 * @interface
 * An interface representing the MetricListResult.
 * The response to a list metrics request.
 *
 * @extends Array<Metric>
 */
export interface MetricListResult extends Array<Metric> {
}

/**
 * @interface
 * An interface representing the UsagesResult.
 * The response to a list usage request.
 *
 * @extends Array<Usage>
 */
export interface UsagesResult extends Array<Usage> {
}

/**
 * @interface
 * An interface representing the MetricDefinitionsListResult.
 * The response to a list metric definitions request.
 *
 * @extends Array<MetricDefinition>
 */
export interface MetricDefinitionsListResult extends Array<MetricDefinition> {
}

/**
 * @interface
 * An interface representing the OperationListResult.
 * Result of the request to list Resource Provider operations. It contains a
 * list of operations and a URL link to get the next set of results.
 *
 * @extends Array<Operation>
 */
export interface OperationListResult extends Array<Operation> {
  /**
   * @member {string} [nextLink] URL to get the next set of operation list
   * results if there are any.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the PercentileMetricListResult.
 * The response to a list percentile metrics request.
 *
 * @extends Array<PercentileMetric>
 */
export interface PercentileMetricListResult extends Array<PercentileMetric> {
}

/**
 * @interface
 * An interface representing the PartitionMetricListResult.
 * The response to a list partition metrics request.
 *
 * @extends Array<PartitionMetric>
 */
export interface PartitionMetricListResult extends Array<PartitionMetric> {
}

/**
 * @interface
 * An interface representing the PartitionUsagesResult.
 * The response to a list partition level usage request.
 *
 * @extends Array<PartitionUsage>
 */
export interface PartitionUsagesResult extends Array<PartitionUsage> {
}

/**
 * Defines values for DatabaseAccountKind.
 * Possible values include: 'GlobalDocumentDB', 'MongoDB', 'Parse'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: DatabaseAccountKind =
 * <DatabaseAccountKind>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum DatabaseAccountKind {
  GlobalDocumentDB = 'GlobalDocumentDB',
  MongoDB = 'MongoDB',
  Parse = 'Parse',
}

/**
 * Defines values for DatabaseAccountOfferType.
 * Possible values include: 'Standard'
 * @readonly
 * @enum {string}
 */
export enum DatabaseAccountOfferType {
  Standard = 'Standard',
}

/**
 * Defines values for DefaultConsistencyLevel.
 * Possible values include: 'Eventual', 'Session', 'BoundedStaleness',
 * 'Strong', 'ConsistentPrefix'
 * @readonly
 * @enum {string}
 */
export enum DefaultConsistencyLevel {
  Eventual = 'Eventual',
  Session = 'Session',
  BoundedStaleness = 'BoundedStaleness',
  Strong = 'Strong',
  ConsistentPrefix = 'ConsistentPrefix',
}

/**
 * Defines values for KeyKind.
 * Possible values include: 'primary', 'secondary', 'primaryReadonly',
 * 'secondaryReadonly'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: KeyKind = <KeyKind>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum KeyKind {
  Primary = 'primary',
  Secondary = 'secondary',
  PrimaryReadonly = 'primaryReadonly',
  SecondaryReadonly = 'secondaryReadonly',
}

/**
 * Defines values for UnitType.
 * Possible values include: 'Count', 'Bytes', 'Seconds', 'Percent',
 * 'CountPerSecond', 'BytesPerSecond', 'Milliseconds'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: UnitType = <UnitType>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum UnitType {
  Count = 'Count',
  Bytes = 'Bytes',
  Seconds = 'Seconds',
  Percent = 'Percent',
  CountPerSecond = 'CountPerSecond',
  BytesPerSecond = 'BytesPerSecond',
  Milliseconds = 'Milliseconds',
}

/**
 * Defines values for PrimaryAggregationType.
 * Possible values include: 'None', 'Average', 'Total', 'Minimimum', 'Maximum',
 * 'Last'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: PrimaryAggregationType =
 * <PrimaryAggregationType>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum PrimaryAggregationType {
  None = 'None',
  Average = 'Average',
  Total = 'Total',
  Minimimum = 'Minimimum',
  Maximum = 'Maximum',
  Last = 'Last',
}

/**
 * Contains response data for the get operation.
 */
export type DatabaseAccountsGetResponse = DatabaseAccount & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseAccount;
    };
};

/**
 * Contains response data for the patch operation.
 */
export type DatabaseAccountsPatchResponse = DatabaseAccount & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseAccount;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type DatabaseAccountsCreateOrUpdateResponse = DatabaseAccount & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseAccount;
    };
};

/**
 * Contains response data for the list operation.
 */
export type DatabaseAccountsListResponse = DatabaseAccountsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseAccountsListResult;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type DatabaseAccountsListByResourceGroupResponse = DatabaseAccountsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseAccountsListResult;
    };
};

/**
 * Contains response data for the listKeys operation.
 */
export type DatabaseAccountsListKeysResponse = DatabaseAccountListKeysResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseAccountListKeysResult;
    };
};

/**
 * Contains response data for the listConnectionStrings operation.
 */
export type DatabaseAccountsListConnectionStringsResponse = DatabaseAccountListConnectionStringsResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseAccountListConnectionStringsResult;
    };
};

/**
 * Contains response data for the getReadOnlyKeys operation.
 */
export type DatabaseAccountsGetReadOnlyKeysResponse = DatabaseAccountListReadOnlyKeysResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseAccountListReadOnlyKeysResult;
    };
};

/**
 * Contains response data for the listReadOnlyKeys operation.
 */
export type DatabaseAccountsListReadOnlyKeysResponse = DatabaseAccountListReadOnlyKeysResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseAccountListReadOnlyKeysResult;
    };
};

/**
 * Contains response data for the checkNameExists operation.
 */
export type DatabaseAccountsCheckNameExistsResponse = {
  /**
   * The parsed response body.
   */
  body: boolean;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: boolean;
    };
};

/**
 * Contains response data for the listMetrics operation.
 */
export type DatabaseAccountsListMetricsResponse = MetricListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MetricListResult;
    };
};

/**
 * Contains response data for the listUsages operation.
 */
export type DatabaseAccountsListUsagesResponse = UsagesResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: UsagesResult;
    };
};

/**
 * Contains response data for the listMetricDefinitions operation.
 */
export type DatabaseAccountsListMetricDefinitionsResponse = MetricDefinitionsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MetricDefinitionsListResult;
    };
};

/**
 * Contains response data for the beginPatch operation.
 */
export type DatabaseAccountsBeginPatchResponse = DatabaseAccount & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseAccount;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type DatabaseAccountsBeginCreateOrUpdateResponse = DatabaseAccount & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseAccount;
    };
};

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type OperationsListNextResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationListResult;
    };
};

/**
 * Contains response data for the listMetrics operation.
 */
export type DatabaseListMetricsResponse = MetricListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MetricListResult;
    };
};

/**
 * Contains response data for the listUsages operation.
 */
export type DatabaseListUsagesResponse = UsagesResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: UsagesResult;
    };
};

/**
 * Contains response data for the listMetricDefinitions operation.
 */
export type DatabaseListMetricDefinitionsResponse = MetricDefinitionsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MetricDefinitionsListResult;
    };
};

/**
 * Contains response data for the listMetrics operation.
 */
export type CollectionListMetricsResponse = MetricListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MetricListResult;
    };
};

/**
 * Contains response data for the listUsages operation.
 */
export type CollectionListUsagesResponse = UsagesResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: UsagesResult;
    };
};

/**
 * Contains response data for the listMetricDefinitions operation.
 */
export type CollectionListMetricDefinitionsResponse = MetricDefinitionsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MetricDefinitionsListResult;
    };
};

/**
 * Contains response data for the listMetrics operation.
 */
export type CollectionRegionListMetricsResponse = MetricListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MetricListResult;
    };
};

/**
 * Contains response data for the listMetrics operation.
 */
export type DatabaseAccountRegionListMetricsResponse = MetricListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MetricListResult;
    };
};

/**
 * Contains response data for the listMetrics operation.
 */
export type PercentileSourceTargetListMetricsResponse = PercentileMetricListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PercentileMetricListResult;
    };
};

/**
 * Contains response data for the listMetrics operation.
 */
export type PercentileTargetListMetricsResponse = PercentileMetricListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PercentileMetricListResult;
    };
};

/**
 * Contains response data for the listMetrics operation.
 */
export type PercentileListMetricsResponse = PercentileMetricListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PercentileMetricListResult;
    };
};

/**
 * Contains response data for the listMetrics operation.
 */
export type CollectionPartitionRegionListMetricsResponse = PartitionMetricListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PartitionMetricListResult;
    };
};

/**
 * Contains response data for the listMetrics operation.
 */
export type CollectionPartitionListMetricsResponse = PartitionMetricListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PartitionMetricListResult;
    };
};

/**
 * Contains response data for the listUsages operation.
 */
export type CollectionPartitionListUsagesResponse = PartitionUsagesResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PartitionUsagesResult;
    };
};

/**
 * Contains response data for the listMetrics operation.
 */
export type PartitionKeyRangeIdListMetricsResponse = PartitionMetricListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PartitionMetricListResult;
    };
};

/**
 * Contains response data for the listMetrics operation.
 */
export type PartitionKeyRangeIdRegionListMetricsResponse = PartitionMetricListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PartitionMetricListResult;
    };
};
