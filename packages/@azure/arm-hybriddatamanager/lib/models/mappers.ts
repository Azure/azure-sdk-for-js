/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { CloudErrorMapper, BaseResourceMapper } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export const CloudError = CloudErrorMapper;
export const BaseResource = BaseResourceMapper;

export const AvailableProviderOperationDisplay: msRest.CompositeMapper = {
  serializedName: "AvailableProviderOperationDisplay",
  type: {
    name: "Composite",
    className: "AvailableProviderOperationDisplay",
    modelProperties: {
      provider: {
        serializedName: "provider",
        type: {
          name: "String"
        }
      },
      resource: {
        serializedName: "resource",
        type: {
          name: "String"
        }
      },
      operation: {
        serializedName: "operation",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AvailableProviderOperation: msRest.CompositeMapper = {
  serializedName: "AvailableProviderOperation",
  type: {
    name: "Composite",
    className: "AvailableProviderOperation",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "AvailableProviderOperationDisplay"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const CustomerSecret: msRest.CompositeMapper = {
  serializedName: "CustomerSecret",
  type: {
    name: "Composite",
    className: "CustomerSecret",
    modelProperties: {
      keyIdentifier: {
        required: true,
        serializedName: "keyIdentifier",
        type: {
          name: "String"
        }
      },
      keyValue: {
        required: true,
        serializedName: "keyValue",
        type: {
          name: "String"
        }
      },
      algorithm: {
        required: true,
        serializedName: "algorithm",
        type: {
          name: "Enum",
          allowedValues: [
            "None",
            "RSA1_5",
            "RSA_OAEP",
            "PlainText"
          ]
        }
      }
    }
  }
};

export const Resource: msRest.CompositeMapper = {
  serializedName: "Resource",
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      location: {
        required: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "Sku"
        }
      }
    }
  }
};

export const DataManager: msRest.CompositeMapper = {
  serializedName: "DataManager",
  type: {
    name: "Composite",
    className: "DataManager",
    modelProperties: {
      ...Resource.type.modelProperties,
      etag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DmsBaseObject: msRest.CompositeMapper = {
  serializedName: "DmsBaseObject",
  type: {
    name: "Composite",
    className: "DmsBaseObject",
    modelProperties: {
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DataService: msRest.CompositeMapper = {
  serializedName: "DataService",
  type: {
    name: "Composite",
    className: "DataService",
    modelProperties: {
      ...DmsBaseObject.type.modelProperties,
      state: {
        required: true,
        serializedName: "properties.state",
        type: {
          name: "Enum",
          allowedValues: [
            "Disabled",
            "Enabled",
            "Supported"
          ]
        }
      },
      supportedDataSinkTypes: {
        serializedName: "properties.supportedDataSinkTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      supportedDataSourceTypes: {
        serializedName: "properties.supportedDataSourceTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const DataStore: msRest.CompositeMapper = {
  serializedName: "DataStore",
  type: {
    name: "Composite",
    className: "DataStore",
    modelProperties: {
      ...DmsBaseObject.type.modelProperties,
      repositoryId: {
        serializedName: "properties.repositoryId",
        type: {
          name: "String"
        }
      },
      state: {
        required: true,
        serializedName: "properties.state",
        type: {
          name: "Enum",
          allowedValues: [
            "Disabled",
            "Enabled",
            "Supported"
          ]
        }
      },
      extendedProperties: {
        serializedName: "properties.extendedProperties",
        type: {
          name: "Object"
        }
      },
      dataStoreTypeId: {
        required: true,
        serializedName: "properties.dataStoreTypeId",
        type: {
          name: "String"
        }
      },
      customerSecrets: {
        serializedName: "properties.customerSecrets",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CustomerSecret"
            }
          }
        }
      }
    }
  }
};

export const DataStoreFilter: msRest.CompositeMapper = {
  serializedName: "DataStoreFilter",
  type: {
    name: "Composite",
    className: "DataStoreFilter",
    modelProperties: {
      dataStoreTypeId: {
        serializedName: "dataStoreTypeId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DataStoreType: msRest.CompositeMapper = {
  serializedName: "DataStoreType",
  type: {
    name: "Composite",
    className: "DataStoreType",
    modelProperties: {
      ...DmsBaseObject.type.modelProperties,
      repositoryType: {
        serializedName: "properties.repositoryType",
        type: {
          name: "String"
        }
      },
      state: {
        required: true,
        serializedName: "properties.state",
        type: {
          name: "Enum",
          allowedValues: [
            "Disabled",
            "Enabled",
            "Supported"
          ]
        }
      },
      supportedDataServicesAsSink: {
        serializedName: "properties.supportedDataServicesAsSink",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      supportedDataServicesAsSource: {
        serializedName: "properties.supportedDataServicesAsSource",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ErrorModel: msRest.CompositeMapper = {
  serializedName: "Error",
  type: {
    name: "Composite",
    className: "ErrorModel",
    modelProperties: {
      code: {
        required: true,
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorDetails: msRest.CompositeMapper = {
  serializedName: "ErrorDetails",
  type: {
    name: "Composite",
    className: "ErrorDetails",
    modelProperties: {
      errorMessage: {
        serializedName: "errorMessage",
        type: {
          name: "String"
        }
      },
      errorCode: {
        serializedName: "errorCode",
        type: {
          name: "Number"
        }
      },
      recommendedAction: {
        serializedName: "recommendedAction",
        type: {
          name: "String"
        }
      },
      exceptionMessage: {
        serializedName: "exceptionMessage",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const JobStages: msRest.CompositeMapper = {
  serializedName: "JobStages",
  type: {
    name: "Composite",
    className: "JobStages",
    modelProperties: {
      stageName: {
        serializedName: "stageName",
        type: {
          name: "String"
        }
      },
      stageStatus: {
        required: true,
        serializedName: "stageStatus",
        type: {
          name: "Enum",
          allowedValues: [
            "None",
            "InProgress",
            "Succeeded",
            "WaitingForAction",
            "Failed",
            "Cancelled",
            "Cancelling"
          ]
        }
      },
      jobStageDetails: {
        serializedName: "jobStageDetails",
        type: {
          name: "Object"
        }
      },
      errorDetails: {
        serializedName: "errorDetails",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorDetails"
            }
          }
        }
      }
    }
  }
};

export const Schedule: msRest.CompositeMapper = {
  serializedName: "Schedule",
  type: {
    name: "Composite",
    className: "Schedule",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      policyList: {
        serializedName: "policyList",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const JobDefinition: msRest.CompositeMapper = {
  serializedName: "JobDefinition",
  type: {
    name: "Composite",
    className: "JobDefinition",
    modelProperties: {
      ...DmsBaseObject.type.modelProperties,
      dataSourceId: {
        required: true,
        serializedName: "properties.dataSourceId",
        type: {
          name: "String"
        }
      },
      dataSinkId: {
        required: true,
        serializedName: "properties.dataSinkId",
        type: {
          name: "String"
        }
      },
      schedules: {
        serializedName: "properties.schedules",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Schedule"
            }
          }
        }
      },
      state: {
        required: true,
        serializedName: "properties.state",
        type: {
          name: "Enum",
          allowedValues: [
            "Disabled",
            "Enabled",
            "Supported"
          ]
        }
      },
      lastModifiedTime: {
        serializedName: "properties.lastModifiedTime",
        type: {
          name: "DateTime"
        }
      },
      runLocation: {
        serializedName: "properties.runLocation",
        type: {
          name: "Enum",
          allowedValues: [
            "none",
            "australiaeast",
            "australiasoutheast",
            "brazilsouth",
            "canadacentral",
            "canadaeast",
            "centralindia",
            "centralus",
            "eastasia",
            "eastus",
            "eastus2",
            "japaneast",
            "japanwest",
            "koreacentral",
            "koreasouth",
            "southeastasia",
            "southcentralus",
            "southindia",
            "northcentralus",
            "northeurope",
            "uksouth",
            "ukwest",
            "westcentralus",
            "westeurope",
            "westindia",
            "westus",
            "westus2"
          ]
        }
      },
      userConfirmation: {
        serializedName: "properties.userConfirmation",
        defaultValue: 'NotRequired',
        type: {
          name: "Enum",
          allowedValues: [
            "NotRequired",
            "Required"
          ]
        }
      },
      dataServiceInput: {
        serializedName: "properties.dataServiceInput",
        type: {
          name: "Object"
        }
      },
      customerSecrets: {
        serializedName: "properties.customerSecrets",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CustomerSecret"
            }
          }
        }
      }
    }
  }
};

export const JobDetails: msRest.CompositeMapper = {
  serializedName: "JobDetails",
  type: {
    name: "Composite",
    className: "JobDetails",
    modelProperties: {
      jobStages: {
        serializedName: "jobStages",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "JobStages"
            }
          }
        }
      },
      jobDefinition: {
        serializedName: "jobDefinition",
        type: {
          name: "Composite",
          className: "JobDefinition"
        }
      },
      errorDetails: {
        serializedName: "errorDetails",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorDetails"
            }
          }
        }
      },
      itemDetailsLink: {
        serializedName: "itemDetailsLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Job: msRest.CompositeMapper = {
  serializedName: "Job",
  type: {
    name: "Composite",
    className: "Job",
    modelProperties: {
      ...DmsBaseObject.type.modelProperties,
      status: {
        required: true,
        serializedName: "status",
        type: {
          name: "Enum",
          allowedValues: [
            "None",
            "InProgress",
            "Succeeded",
            "WaitingForAction",
            "Failed",
            "Cancelled",
            "Cancelling"
          ]
        }
      },
      startTime: {
        required: true,
        serializedName: "startTime",
        type: {
          name: "DateTime"
        }
      },
      endTime: {
        serializedName: "endTime",
        type: {
          name: "DateTime"
        }
      },
      isCancellable: {
        required: true,
        serializedName: "properties.isCancellable",
        type: {
          name: "Enum",
          allowedValues: [
            "NotCancellable",
            "Cancellable"
          ]
        }
      },
      bytesProcessed: {
        serializedName: "properties.bytesProcessed",
        type: {
          name: "Number"
        }
      },
      itemsProcessed: {
        serializedName: "properties.itemsProcessed",
        type: {
          name: "Number"
        }
      },
      totalBytesToProcess: {
        serializedName: "properties.totalBytesToProcess",
        type: {
          name: "Number"
        }
      },
      totalItemsToProcess: {
        serializedName: "properties.totalItemsToProcess",
        type: {
          name: "Number"
        }
      },
      details: {
        serializedName: "properties.details",
        type: {
          name: "Composite",
          className: "JobDetails"
        }
      },
      dataSourceName: {
        serializedName: "properties.dataSourceName",
        type: {
          name: "String"
        }
      },
      dataSinkName: {
        serializedName: "properties.dataSinkName",
        type: {
          name: "String"
        }
      },
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorModel"
        }
      }
    }
  }
};

export const JobDefinitionFilter: msRest.CompositeMapper = {
  serializedName: "JobDefinitionFilter",
  type: {
    name: "Composite",
    className: "JobDefinitionFilter",
    modelProperties: {
      state: {
        required: true,
        serializedName: "state",
        type: {
          name: "Enum",
          allowedValues: [
            "Disabled",
            "Enabled",
            "Supported"
          ]
        }
      },
      dataSource: {
        serializedName: "dataSource",
        type: {
          name: "String"
        }
      },
      lastModified: {
        serializedName: "lastModified",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const JobFilter: msRest.CompositeMapper = {
  serializedName: "JobFilter",
  type: {
    name: "Composite",
    className: "JobFilter",
    modelProperties: {
      status: {
        required: true,
        serializedName: "status",
        type: {
          name: "Enum",
          allowedValues: [
            "None",
            "InProgress",
            "Succeeded",
            "WaitingForAction",
            "Failed",
            "Cancelled",
            "Cancelling"
          ]
        }
      },
      startTime: {
        serializedName: "startTime",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const Key: msRest.CompositeMapper = {
  serializedName: "Key",
  type: {
    name: "Composite",
    className: "Key",
    modelProperties: {
      keyModulus: {
        required: true,
        serializedName: "keyModulus",
        type: {
          name: "String"
        }
      },
      keyExponent: {
        required: true,
        serializedName: "keyExponent",
        type: {
          name: "String"
        }
      },
      encryptionChunkSizeInBytes: {
        required: true,
        serializedName: "encryptionChunkSizeInBytes",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const PublicKey: msRest.CompositeMapper = {
  serializedName: "PublicKey",
  type: {
    name: "Composite",
    className: "PublicKey",
    modelProperties: {
      ...DmsBaseObject.type.modelProperties,
      dataServiceLevel1Key: {
        required: true,
        serializedName: "properties.dataServiceLevel1Key",
        type: {
          name: "Composite",
          className: "Key"
        }
      },
      dataServiceLevel2Key: {
        required: true,
        serializedName: "properties.dataServiceLevel2Key",
        type: {
          name: "Composite",
          className: "Key"
        }
      }
    }
  }
};

export const Sku: msRest.CompositeMapper = {
  serializedName: "Sku",
  type: {
    name: "Composite",
    className: "Sku",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      tier: {
        serializedName: "tier",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RunParameters: msRest.CompositeMapper = {
  serializedName: "RunParameters",
  type: {
    name: "Composite",
    className: "RunParameters",
    modelProperties: {
      userConfirmation: {
        serializedName: "userConfirmation",
        defaultValue: 'NotRequired',
        type: {
          name: "Enum",
          allowedValues: [
            "NotRequired",
            "Required"
          ]
        }
      },
      dataServiceInput: {
        serializedName: "dataServiceInput",
        type: {
          name: "Object"
        }
      },
      customerSecrets: {
        serializedName: "customerSecrets",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CustomerSecret"
            }
          }
        }
      }
    }
  }
};

export const AvailableProviderOperations: msRest.CompositeMapper = {
  serializedName: "AvailableProviderOperations",
  type: {
    name: "Composite",
    className: "AvailableProviderOperations",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AvailableProviderOperation"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DataManagerList: msRest.CompositeMapper = {
  serializedName: "DataManagerList",
  type: {
    name: "Composite",
    className: "DataManagerList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DataManager"
            }
          }
        }
      }
    }
  }
};

export const DataServiceList: msRest.CompositeMapper = {
  serializedName: "DataServiceList",
  type: {
    name: "Composite",
    className: "DataServiceList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DataService"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const JobDefinitionList: msRest.CompositeMapper = {
  serializedName: "JobDefinitionList",
  type: {
    name: "Composite",
    className: "JobDefinitionList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "JobDefinition"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const JobList: msRest.CompositeMapper = {
  serializedName: "JobList",
  type: {
    name: "Composite",
    className: "JobList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Job"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DataStoreList: msRest.CompositeMapper = {
  serializedName: "DataStoreList",
  type: {
    name: "Composite",
    className: "DataStoreList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DataStore"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DataStoreTypeList: msRest.CompositeMapper = {
  serializedName: "DataStoreTypeList",
  type: {
    name: "Composite",
    className: "DataStoreTypeList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DataStoreType"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PublicKeyList: msRest.CompositeMapper = {
  serializedName: "PublicKeyList",
  type: {
    name: "Composite",
    className: "PublicKeyList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PublicKey"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};
