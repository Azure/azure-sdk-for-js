/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "ms-rest-js";
import * as Models from "./models";
import * as Mappers from "./models/mappers";
import * as Parameters from "./models/parameters";
import { TextAnalyticsClientContext } from "./textAnalyticsClientContext";

class TextAnalyticsClient extends TextAnalyticsClientContext {
  /**
   * Initializes a new instance of the TextAnalyticsClient class.
   * @param endpoint Supported Cognitive Services endpoints (protocol and hostname, for example:
   * https://westus.api.cognitive.microsoft.com).
   * @param credentials Subscription credentials which uniquely identify client subscription.
   * @param [options] The parameter options
   */
  constructor(endpoint: string, credentials: msRest.ServiceClientCredentials, options?: msRest.ServiceClientOptions) {
    super(endpoint, credentials, options);
  }

  /**
   * The API returns the detected language and a numeric score between 0 and 1. Scores close to 1
   * indicate 100% certainty that the identified language is true. A total of 120 languages are
   * supported.
   * @summary Detect Language
   * @param [options] The optional parameters
   * @returns Promise<Models.56f30ceeeda5650db055a3c7Response>
   */
  56f30ceeeda5650db055a3c7(options?: Models.TextAnalyticsClient56f30ceeeda5650db055a3c7OptionalParams): Promise<Models.56f30ceeeda5650db055a3c7Response>;
  /**
   * @param callback The callback
   */
  56f30ceeeda5650db055a3c7(callback: msRest.ServiceCallback<Models.LanguageBatchResult>): void;
  /**
   * @param options The optional parameters
   * @param callback The callback
   */
  56f30ceeeda5650db055a3c7(options: Models.TextAnalyticsClient56f30ceeeda5650db055a3c7OptionalParams, callback: msRest.ServiceCallback<Models.LanguageBatchResult>): void;
  56f30ceeeda5650db055a3c7(options?: Models.TextAnalyticsClient56f30ceeeda5650db055a3c7OptionalParams, callback?: msRest.ServiceCallback<Models.LanguageBatchResult>): Promise<Models.56f30ceeeda5650db055a3c7Response> {
    return this.sendOperationRequest(
      {
        options
      },
      56f30ceeeda5650db055a3c7OperationSpec,
      callback) as Promise<Models.56f30ceeeda5650db055a3c7Response>;
  }

  /**
   * The API returns a list of known entities and general named entities (\"Person\", \"Location\",
   * \"Organization\" etc) in a given document. Known entities are returned with Wikipedia Id and
   * Wikipedia link, and also Bing Id which can be used in Bing Entity Search API. General named
   * entities are returned with entity types. If a general named entity is also a known entity, then
   * all information regarding it (Wikipedia Id, Bing Id, entity type etc) will be returned. See the
   * <a
   * href="https://docs.microsoft.com/en-us/azure/cognitive-services/text-analytics/how-tos/text-analytics-how-to-entity-linking#supported-types-for-named-entity-recognition">Supported
   * Entity Types in Text Analytics API</a> for the list of supported Entity Types. See the <a
   * href="https://docs.microsoft.com/en-us/azure/cognitive-services/text-analytics/text-analytics-supported-languages">Supported
   * languages in Text Analytics API</a> for the list of enabled languages.
   *
   * @summary Entities
   * @param [options] The optional parameters
   * @returns Promise<Models.5ac4251d5b4ccd1554da7634Response>
   */
  5ac4251d5b4ccd1554da7634(options?: Models.TextAnalyticsClient5ac4251d5b4ccd1554da7634OptionalParams): Promise<Models.5ac4251d5b4ccd1554da7634Response>;
  /**
   * @param callback The callback
   */
  5ac4251d5b4ccd1554da7634(callback: msRest.ServiceCallback<Models.EntitiesBatchResult>): void;
  /**
   * @param options The optional parameters
   * @param callback The callback
   */
  5ac4251d5b4ccd1554da7634(options: Models.TextAnalyticsClient5ac4251d5b4ccd1554da7634OptionalParams, callback: msRest.ServiceCallback<Models.EntitiesBatchResult>): void;
  5ac4251d5b4ccd1554da7634(options?: Models.TextAnalyticsClient5ac4251d5b4ccd1554da7634OptionalParams, callback?: msRest.ServiceCallback<Models.EntitiesBatchResult>): Promise<Models.5ac4251d5b4ccd1554da7634Response> {
    return this.sendOperationRequest(
      {
        options
      },
      5ac4251d5b4ccd1554da7634OperationSpec,
      callback) as Promise<Models.5ac4251d5b4ccd1554da7634Response>;
  }

  /**
   * The API returns a list of strings denoting the key talking points in the input text. See the <a
   * href="https://docs.microsoft.com/en-us/azure/cognitive-services/text-analytics/text-analytics-supported-languages">Supported
   * languages in Text Analytics API</a> for the list of enabled languages.
   * @summary Key Phrases
   * @param [options] The optional parameters
   * @returns Promise<Models.56f30ceeeda5650db055a3c6Response>
   */
  56f30ceeeda5650db055a3c6(options?: Models.TextAnalyticsClient56f30ceeeda5650db055a3c6OptionalParams): Promise<Models.56f30ceeeda5650db055a3c6Response>;
  /**
   * @param callback The callback
   */
  56f30ceeeda5650db055a3c6(callback: msRest.ServiceCallback<Models.KeyPhraseBatchResult>): void;
  /**
   * @param options The optional parameters
   * @param callback The callback
   */
  56f30ceeeda5650db055a3c6(options: Models.TextAnalyticsClient56f30ceeeda5650db055a3c6OptionalParams, callback: msRest.ServiceCallback<Models.KeyPhraseBatchResult>): void;
  56f30ceeeda5650db055a3c6(options?: Models.TextAnalyticsClient56f30ceeeda5650db055a3c6OptionalParams, callback?: msRest.ServiceCallback<Models.KeyPhraseBatchResult>): Promise<Models.56f30ceeeda5650db055a3c6Response> {
    return this.sendOperationRequest(
      {
        options
      },
      56f30ceeeda5650db055a3c6OperationSpec,
      callback) as Promise<Models.56f30ceeeda5650db055a3c6Response>;
  }

  /**
   * The API returns a numeric score between 0 and 1. Scores close to 1 indicate positive sentiment,
   * while scores close to 0 indicate negative sentiment. A score of 0.5 indicates the lack of
   * sentiment (e.g. a factoid statement). See the <a
   * href="https://docs.microsoft.com/en-us/azure/cognitive-services/text-analytics/text-analytics-supported-languages">Supported
   * languages in Text Analytics API</a> for the list of enabled languages.
   * @summary Sentiment
   * @param [options] The optional parameters
   * @returns Promise<Models.56f30ceeeda5650db055a3c9Response>
   */
  56f30ceeeda5650db055a3c9(options?: Models.TextAnalyticsClient56f30ceeeda5650db055a3c9OptionalParams): Promise<Models.56f30ceeeda5650db055a3c9Response>;
  /**
   * @param callback The callback
   */
  56f30ceeeda5650db055a3c9(callback: msRest.ServiceCallback<any>): void;
  /**
   * @param options The optional parameters
   * @param callback The callback
   */
  56f30ceeeda5650db055a3c9(options: Models.TextAnalyticsClient56f30ceeeda5650db055a3c9OptionalParams, callback: msRest.ServiceCallback<any>): void;
  56f30ceeeda5650db055a3c9(options?: Models.TextAnalyticsClient56f30ceeeda5650db055a3c9OptionalParams, callback?: msRest.ServiceCallback<any>): Promise<Models.56f30ceeeda5650db055a3c9Response> {
    return this.sendOperationRequest(
      {
        options
      },
      56f30ceeeda5650db055a3c9OperationSpec,
      callback) as Promise<Models.56f30ceeeda5650db055a3c9Response>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const 56f30ceeeda5650db055a3c7OperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "languages",
  urlParameters: [
    Parameters.endpoint
  ],
  queryParameters: [
    Parameters.showStats
  ],
  requestBody: {
    parameterPath: [
      "options",
      "languageBatchInput"
    ],
    mapper: Mappers.LanguageBatchInput
  },
  responses: {
    200: {
      bodyMapper: Mappers.LanguageBatchResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const 5ac4251d5b4ccd1554da7634OperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "entities",
  urlParameters: [
    Parameters.endpoint
  ],
  queryParameters: [
    Parameters.showStats
  ],
  requestBody: {
    parameterPath: [
      "options",
      "multiLanguageBatchInput"
    ],
    mapper: Mappers.MultiLanguageBatchInput
  },
  responses: {
    200: {
      bodyMapper: Mappers.EntitiesBatchResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const 56f30ceeeda5650db055a3c6OperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "keyPhrases",
  urlParameters: [
    Parameters.endpoint
  ],
  queryParameters: [
    Parameters.showStats
  ],
  requestBody: {
    parameterPath: [
      "options",
      "multiLanguageBatchInput"
    ],
    mapper: Mappers.MultiLanguageBatchInput
  },
  responses: {
    200: {
      bodyMapper: Mappers.KeyPhraseBatchResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const 56f30ceeeda5650db055a3c9OperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "sentiment",
  urlParameters: [
    Parameters.endpoint
  ],
  queryParameters: [
    Parameters.showStats
  ],
  requestBody: {
    parameterPath: [
      "options",
      "multiLanguageBatchInput"
    ],
    mapper: Mappers.MultiLanguageBatchInput
  },
  responses: {
    200: {
      bodyMapper: Mappers.SentimentBatchResult
    },
    500: {
      bodyMapper: Mappers.ErrorResponse
    },
    default: {}
  },
  serializer
};

export {
  TextAnalyticsClient,
  TextAnalyticsClientContext,
  Models as TextAnalyticsModels,
  Mappers as TextAnalyticsMappers
};
