/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };


/**
 * @interface
 * An interface representing ErrorResponseErrorDetailsItem.
 */
export interface ErrorResponseErrorDetailsItem {
  /**
   * @member {string} [code] Provides information about the error code.
   */
  code?: string;
  /**
   * @member {string} [target] Provides information about the error target.
   */
  target?: string;
  /**
   * @member {string} [message] Provides information about the error message.
   */
  message?: string;
}

/**
 * @interface
 * An interface representing ErrorResponse.
 * Response when errors occurred
 *
 */
export interface ErrorResponse {
  /**
   * @member {string} [code] Provides information about the error code.
   */
  code?: string;
  /**
   * @member {string} [message] Provides information about the error message.
   */
  message?: string;
  /**
   * @member {string} [target] Provides information about the error target.
   */
  target?: string;
  /**
   * @member {ErrorResponseErrorDetailsItem[]} [details] Describes the error
   * details if present.
   */
  details?: ErrorResponseErrorDetailsItem[];
  /**
   * @member {any} [innererror] Inner error object if present.
   */
  innererror?: any;
}

/**
 * @interface
 * An interface representing ReturnAddress.
 * Specifies the return address information for the job.
 *
 */
export interface ReturnAddress {
  /**
   * @member {string} recipientName The name of the recipient who will receive
   * the hard drives when they are returned.
   */
  recipientName: string;
  /**
   * @member {string} streetAddress1 The first line of the street address to
   * use when returning the drives.
   */
  streetAddress1: string;
  /**
   * @member {string} [streetAddress2] The second line of the street address to
   * use when returning the drives.
   */
  streetAddress2?: string;
  /**
   * @member {string} city The city name to use when returning the drives.
   */
  city: string;
  /**
   * @member {string} [stateOrProvince] The state or province to use when
   * returning the drives.
   */
  stateOrProvince?: string;
  /**
   * @member {string} postalCode The postal code to use when returning the
   * drives.
   */
  postalCode: string;
  /**
   * @member {string} countryOrRegion The country or region to use when
   * returning the drives.
   */
  countryOrRegion: string;
  /**
   * @member {string} phone Phone number of the recipient of the returned
   * drives.
   */
  phone: string;
  /**
   * @member {string} email Email address of the recipient of the returned
   * drives.
   */
  email: string;
}

/**
 * @interface
 * An interface representing ReturnShipping.
 * Specifies the return carrier and customer's account with the carrier.
 *
 */
export interface ReturnShipping {
  /**
   * @member {string} carrierName The carrier's name.
   */
  carrierName: string;
  /**
   * @member {string} carrierAccountNumber The customer's account number with
   * the carrier.
   */
  carrierAccountNumber: string;
}

/**
 * @interface
 * An interface representing ShippingInformation.
 * Contains information about the Microsoft datacenter to which the drives
 * should be shipped.
 *
 */
export interface ShippingInformation {
  /**
   * @member {string} recipientName The name of the recipient who will receive
   * the hard drives when they are returned.
   */
  recipientName: string;
  /**
   * @member {string} streetAddress1 The first line of the street address to
   * use when returning the drives.
   */
  streetAddress1: string;
  /**
   * @member {string} [streetAddress2] The second line of the street address to
   * use when returning the drives.
   */
  streetAddress2?: string;
  /**
   * @member {string} city The city name to use when returning the drives.
   */
  city: string;
  /**
   * @member {string} stateOrProvince The state or province to use when
   * returning the drives.
   */
  stateOrProvince: string;
  /**
   * @member {string} postalCode The postal code to use when returning the
   * drives.
   */
  postalCode: string;
  /**
   * @member {string} countryOrRegion The country or region to use when
   * returning the drives.
   */
  countryOrRegion: string;
  /**
   * @member {string} [phone] Phone number of the recipient of the returned
   * drives.
   */
  phone?: string;
}

/**
 * @interface
 * An interface representing PackageInfomation.
 * Contains information about the package being shipped by the customer to the
 * Microsoft data center.
 *
 */
export interface PackageInfomation {
  /**
   * @member {string} carrierName The name of the carrier that is used to ship
   * the import or export drives.
   */
  carrierName: string;
  /**
   * @member {string} trackingNumber The tracking number of the package.
   */
  trackingNumber: string;
  /**
   * @member {number} driveCount The number of drives included in the package.
   */
  driveCount: number;
  /**
   * @member {string} shipDate The date when the package is shipped.
   */
  shipDate: string;
}

/**
 * @interface
 * An interface representing DriveStatus.
 * Provides information about the drive's status
 *
 */
export interface DriveStatus {
  /**
   * @member {string} [driveId] The drive's hardware serial number, without
   * spaces.
   */
  driveId?: string;
  /**
   * @member {string} [bitLockerKey] The BitLocker key used to encrypt the
   * drive.
   */
  bitLockerKey?: string;
  /**
   * @member {string} [manifestFile] The relative path of the manifest file on
   * the drive.
   */
  manifestFile?: string;
  /**
   * @member {string} [manifestHash] The Base16-encoded MD5 hash of the
   * manifest file on the drive.
   */
  manifestHash?: string;
  /**
   * @member {string} [driveHeaderHash] The drive header hash value.
   */
  driveHeaderHash?: string;
  /**
   * @member {DriveState} [state] The drive's current state. Possible values
   * include: 'Specified', 'Received', 'NeverReceived', 'Transferring',
   * 'Completed', 'CompletedMoreInfo', 'ShippedBack'
   */
  state?: DriveState;
  /**
   * @member {string} [copyStatus] Detailed status about the data transfer
   * process. This field is not returned in the response until the drive is in
   * the Transferring state.
   */
  copyStatus?: string;
  /**
   * @member {number} [percentComplete] Percentage completed for the drive.
   */
  percentComplete?: number;
  /**
   * @member {string} [verboseLogUri] A URI that points to the blob containing
   * the verbose log for the data transfer operation.
   */
  verboseLogUri?: string;
  /**
   * @member {string} [errorLogUri] A URI that points to the blob containing
   * the error log for the data transfer operation.
   */
  errorLogUri?: string;
  /**
   * @member {string} [manifestUri] A URI that points to the blob containing
   * the drive manifest file.
   */
  manifestUri?: string;
  /**
   * @member {number} [bytesSucceeded] Bytes successfully transferred for the
   * drive.
   */
  bytesSucceeded?: number;
}

/**
 * @interface
 * An interface representing ExportModel.
 * A property containing information about the blobs to be exported for an
 * export job. This property is required for export jobs, but must not be
 * specified for import jobs.
 *
 */
export interface ExportModel {
  /**
   * @member {string[]} [blobPath] A collection of blob-path strings.
   */
  blobPath?: string[];
  /**
   * @member {string[]} [blobPathPrefix] A collection of blob-prefix strings.
   */
  blobPathPrefix?: string[];
  /**
   * @member {string} [blobListblobPath] The relative URI to the block blob
   * that contains the list of blob paths or blob path prefixes as defined
   * above, beginning with the container name. If the blob is in root
   * container, the URI must begin with $root.
   */
  blobListblobPath?: string;
}

/**
 * @interface
 * An interface representing JobDetails.
 * Specifies the job properties
 *
 */
export interface JobDetails {
  /**
   * @member {string} [storageAccountId] The resource identifier of the storage
   * account where data will be imported to or exported from.
   */
  storageAccountId?: string;
  /**
   * @member {string} [jobType] The type of job
   */
  jobType?: string;
  /**
   * @member {ReturnAddress} [returnAddress] Specifies the return address
   * information for the job.
   */
  returnAddress?: ReturnAddress;
  /**
   * @member {ReturnShipping} [returnShipping] Specifies the return carrier and
   * customer's account with the carrier.
   */
  returnShipping?: ReturnShipping;
  /**
   * @member {ShippingInformation} [shippingInformation] Contains information
   * about the Microsoft datacenter to which the drives should be shipped.
   */
  shippingInformation?: ShippingInformation;
  /**
   * @member {PackageInfomation} [deliveryPackage] Contains information about
   * the package being shipped by the customer to the Microsoft data center.
   */
  deliveryPackage?: PackageInfomation;
  /**
   * @member {PackageInfomation} [returnPackage] Contains information about the
   * package being shipped from the Microsoft data center to the customer to
   * return the drives. The format is the same as the deliveryPackage property
   * above. This property is not included if the drives have not yet been
   * returned.
   */
  returnPackage?: PackageInfomation;
  /**
   * @member {string} [diagnosticsPath] The virtual blob directory to which the
   * copy logs and backups of drive manifest files (if enabled) will be stored.
   */
  diagnosticsPath?: string;
  /**
   * @member {string} [logLevel] Default value is Error. Indicates whether
   * error logging or verbose logging will be enabled.
   */
  logLevel?: string;
  /**
   * @member {boolean} [backupDriveManifest] Default value is false. Indicates
   * whether the manifest files on the drives should be copied to block blobs.
   */
  backupDriveManifest?: boolean;
  /**
   * @member {string} [state] Current state of the job.
   */
  state?: string;
  /**
   * @member {boolean} [cancelRequested] Indicates whether a request has been
   * submitted to cancel the job.
   */
  cancelRequested?: boolean;
  /**
   * @member {number} [percentComplete] Overall percentage completed for the
   * job.
   */
  percentComplete?: number;
  /**
   * @member {string} [incompleteBlobListUri] A blob path that points to a
   * block blob containing a list of blob names that were not exported due to
   * insufficient drive space. If all blobs were exported successfully, then
   * this element is not included in the response.
   */
  incompleteBlobListUri?: string;
  /**
   * @member {DriveStatus[]} [driveList] List of up to ten drives that comprise
   * the job. The drive list is a required element for an import job; it is not
   * specified for export jobs.
   */
  driveList?: DriveStatus[];
  /**
   * @member {ExportModel} [exportProperty] A property containing information
   * about the blobs to be exported for an export job. This property is
   * included for export jobs only.
   */
  exportProperty?: ExportModel;
  /**
   * @member {string} [provisioningState] Specifies the provisioning state of
   * the job.
   */
  provisioningState?: string;
}

/**
 * @interface
 * An interface representing PutJobParameters.
 * Put Job parameters
 *
 */
export interface PutJobParameters {
  /**
   * @member {string} [location] Specifies the supported Azure location where
   * the job should be created
   */
  location?: string;
  /**
   * @member {any} [tags] Specifies the tags that will be assigned to the job.
   */
  tags?: any;
  /**
   * @member {JobDetails} [properties] Specifies the job properties
   */
  properties?: JobDetails;
}

/**
 * @interface
 * An interface representing UpdateJobParameters.
 * Update Job parameters
 *
 */
export interface UpdateJobParameters {
  /**
   * @member {any} [tags] Specifies the tags that will be assigned to the job
   */
  tags?: any;
  /**
   * @member {boolean} [cancelRequested] If specified, the value must be true.
   * The service will attempt to cancel the job.
   */
  cancelRequested?: boolean;
  /**
   * @member {string} [state] If specified, the value must be Shipping, which
   * tells the Import/Export service that the package for the job has been
   * shipped. The ReturnAddress and DeliveryPackage properties must have been
   * set either in this request or in a previous request, otherwise the request
   * will fail.
   */
  state?: string;
  /**
   * @member {ReturnAddress} [returnAddress] Specifies the return address
   * information for the job.
   */
  returnAddress?: ReturnAddress;
  /**
   * @member {ReturnShipping} [returnShipping] Specifies the return carrier and
   * customer's account with the carrier.
   */
  returnShipping?: ReturnShipping;
  /**
   * @member {PackageInfomation} [deliveryPackage] Contains information about
   * the package being shipped by the customer to the Microsoft data center.
   */
  deliveryPackage?: PackageInfomation;
  /**
   * @member {string} [logLevel] Indicates whether error logging or verbose
   * logging is enabled.
   */
  logLevel?: string;
  /**
   * @member {boolean} [backupDriveManifest] Indicates whether the manifest
   * files on the drives should be copied to block blobs.
   */
  backupDriveManifest?: boolean;
  /**
   * @member {DriveStatus[]} [driveList] List of drives that comprise the job.
   */
  driveList?: DriveStatus[];
}

/**
 * @interface
 * An interface representing JobResponse.
 * Contains the job information.
 *
 * @extends BaseResource
 */
export interface JobResponse extends BaseResource {
  /**
   * @member {string} [id] Specifies the resource identifier of the job.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [name] Specifies the name of the job.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [type] Specifies the type of the job resource.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: string;
  /**
   * @member {string} [location] Specifies the Azure location where the job is
   * created.
   */
  location?: string;
  /**
   * @member {any} [tags] Specifies the tags that are assigned to the job.
   */
  tags?: any;
  /**
   * @member {JobDetails} [properties] Specifies the job properties
   */
  properties?: JobDetails;
}

/**
 * @interface
 * An interface representing Operation.
 * Describes a supported operation by the Storage Import/Export job API.
 *
 */
export interface Operation {
  /**
   * @member {string} name Name of the operation.
   */
  name: string;
  /**
   * @member {string} [provider] The resource provider name to which the
   * operation belongs.
   */
  provider?: string;
  /**
   * @member {string} [resource] The name of the resource to which the
   * operation belongs.
   */
  resource?: string;
  /**
   * @member {string} [operation] The display name of the operation.
   */
  operation?: string;
  /**
   * @member {string} [description] Short description of the operation.
   */
  description?: string;
}

/**
 * @interface
 * An interface representing Location.
 * Provides information about an Azure data center location.
 *
 */
export interface Location {
  /**
   * @member {string} [id] Specifies the resource identifier of the location.
   */
  id?: string;
  /**
   * @member {string} [name] Specifies the name of the location. Use List
   * Locations to get all supported locations.
   */
  name?: string;
  /**
   * @member {string} [type] Specifies the type of the location.
   */
  type?: string;
  /**
   * @member {string} [recipientName] The recipient name to use when shipping
   * the drives to the Azure data center.
   */
  recipientName?: string;
  /**
   * @member {string} [streetAddress1] The first line of the street address to
   * use when shipping the drives to the Azure data center.
   */
  streetAddress1?: string;
  /**
   * @member {string} [streetAddress2] The second line of the street address to
   * use when shipping the drives to the Azure data center.
   */
  streetAddress2?: string;
  /**
   * @member {string} [city] The city name to use when shipping the drives to
   * the Azure data center.
   */
  city?: string;
  /**
   * @member {string} [stateOrProvince] The state or province to use when
   * shipping the drives to the Azure data center.
   */
  stateOrProvince?: string;
  /**
   * @member {string} [postalCode] The postal code to use when shipping the
   * drives to the Azure data center.
   */
  postalCode?: string;
  /**
   * @member {string} [countryOrRegion] The country or region to use when
   * shipping the drives to the Azure data center.
   */
  countryOrRegion?: string;
  /**
   * @member {string} [phone] The phone number for the Azure data center.
   */
  phone?: string;
  /**
   * @member {string[]} [supportedCarriers] A list of carriers that are
   * supported at this location.
   */
  supportedCarriers?: string[];
  /**
   * @member {string[]} [alternateLocations] A list of location IDs that should
   * be used to ship shipping drives to for jobs created against the current
   * location. If the current location is active, it will be part of the list.
   * If it is temporarily closed due to maintenance, this list may contain
   * other locations.
   */
  alternateLocations?: string[];
}

/**
 * @interface
 * An interface representing DriveBitLockerKey.
 * BitLocker recovery key or password to the specified drive
 *
 */
export interface DriveBitLockerKey {
  /**
   * @member {string} [bitLockerKey] BitLocker recovery key or password
   */
  bitLockerKey?: string;
  /**
   * @member {string} [driveId] Drive ID
   */
  driveId?: string;
}

/**
 * @interface
 * An interface representing JobsListBySubscriptionOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface JobsListBySubscriptionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [top] An integer value that specifies how many jobs at
   * most should be returned. The value cannot exceed 100.
   */
  top?: number;
  /**
   * @member {string} [filter] Can be used to restrict the results to certain
   * conditions.
   */
  filter?: string;
}

/**
 * @interface
 * An interface representing JobsListByResourceGroupOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface JobsListByResourceGroupOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [top] An integer value that specifies how many jobs at
   * most should be returned. The value cannot exceed 100.
   */
  top?: number;
  /**
   * @member {string} [filter] Can be used to restrict the results to certain
   * conditions.
   */
  filter?: string;
}

/**
 * @interface
 * An interface representing JobsCreateOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface JobsCreateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [clientTenantId] The tenant ID of the client making the
   * request.
   */
  clientTenantId?: string;
}

/**
 * @interface
 * An interface representing StorageImportExportManagementClientOptions.
 * @extends AzureServiceClientOptions
 */
export interface StorageImportExportManagementClientOptions extends AzureServiceClientOptions {
  /**
   * @member {string} [baseUri]
   */
  baseUri?: string;
}


/**
 * @interface
 * An interface representing the LocationsResponse.
 * Locations response
 *
 * @extends Array<Location>
 */
export interface LocationsResponse extends Array<Location> {
}

/**
 * @interface
 * An interface representing the ListJobsResponse.
 * List jobs response
 *
 * @extends Array<JobResponse>
 */
export interface ListJobsResponse extends Array<JobResponse> {
  /**
   * @member {string} [nextLink] link to next batch of jobs
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the GetBitLockerKeysResponse.
 * GetBitLockerKeys response
 *
 * @extends Array<DriveBitLockerKey>
 */
export interface GetBitLockerKeysResponse extends Array<DriveBitLockerKey> {
}

/**
 * @interface
 * An interface representing the ListOperationsResponse.
 * List operations response
 *
 * @extends Array<Operation>
 */
export interface ListOperationsResponse extends Array<Operation> {
}

/**
 * Defines values for DriveState.
 * Possible values include: 'Specified', 'Received', 'NeverReceived', 'Transferring', 'Completed',
 * 'CompletedMoreInfo', 'ShippedBack'
 * @readonly
 * @enum {string}
 */
export type DriveState = 'Specified' | 'Received' | 'NeverReceived' | 'Transferring' | 'Completed' | 'CompletedMoreInfo' | 'ShippedBack';

/**
 * Contains response data for the list operation.
 */
export type LocationsListResponse = LocationsResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LocationsResponse;
    };
};

/**
 * Contains response data for the get operation.
 */
export type LocationsGetResponse = Location & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Location;
    };
};

/**
 * Contains response data for the listBySubscription operation.
 */
export type JobsListBySubscriptionResponse = ListJobsResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ListJobsResponse;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type JobsListByResourceGroupResponse = ListJobsResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ListJobsResponse;
    };
};

/**
 * Contains response data for the get operation.
 */
export type JobsGetResponse = JobResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobResponse;
    };
};

/**
 * Contains response data for the update operation.
 */
export type JobsUpdateResponse = JobResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobResponse;
    };
};

/**
 * Contains response data for the create operation.
 */
export type JobsCreateResponse = JobResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobResponse;
    };
};

/**
 * Contains response data for the listBySubscriptionNext operation.
 */
export type JobsListBySubscriptionNextResponse = ListJobsResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ListJobsResponse;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type JobsListByResourceGroupNextResponse = ListJobsResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ListJobsResponse;
    };
};

/**
 * Contains response data for the list operation.
 */
export type BitLockerKeysListResponse = GetBitLockerKeysResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GetBitLockerKeysResponse;
    };
};

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = ListOperationsResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ListOperationsResponse;
    };
};
