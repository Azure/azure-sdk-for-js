/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { CloudErrorMapper, BaseResourceMapper } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export const CloudError = CloudErrorMapper;
export const BaseResource = BaseResourceMapper;

export const OperationDisplay: msRest.CompositeMapper = {
  serializedName: "operation_display",
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        serializedName: "provider",
        type: {
          name: "String"
        }
      },
      resource: {
        serializedName: "resource",
        type: {
          name: "String"
        }
      },
      operation: {
        serializedName: "operation",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Operation: msRest.CompositeMapper = {
  serializedName: "operation",
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay"
        }
      }
    }
  }
};

export const AlertRule: msRest.CompositeMapper = {
  serializedName: "AlertRule",
  type: {
    name: "Composite",
    polymorphicDiscriminator: {
      serializedName: "kind",
      clientName: "kind"
    },
    uberParent: "AlertRule",
    className: "AlertRule",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      etag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      },
      kind: {
        required: true,
        serializedName: "kind",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AlertRuleKind1: msRest.CompositeMapper = {
  serializedName: "AlertRuleKind",
  type: {
    name: "Composite",
    className: "AlertRuleKind1",
    modelProperties: {
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ScheduledAlertRule: msRest.CompositeMapper = {
  serializedName: "Scheduled",
  type: {
    name: "Composite",
    polymorphicDiscriminator: AlertRule.type.polymorphicDiscriminator,
    uberParent: "AlertRule",
    className: "ScheduledAlertRule",
    modelProperties: {
      ...AlertRule.type.modelProperties,
      displayName: {
        required: true,
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      description: {
        required: true,
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      severity: {
        required: true,
        serializedName: "properties.severity",
        type: {
          name: "Enum",
          allowedValues: [
            "High",
            "Medium",
            "Low",
            "Informational"
          ]
        }
      },
      enabled: {
        required: true,
        serializedName: "properties.enabled",
        type: {
          name: "Boolean"
        }
      },
      query: {
        required: true,
        serializedName: "properties.query",
        type: {
          name: "String"
        }
      },
      queryFrequency: {
        required: true,
        serializedName: "properties.queryFrequency",
        type: {
          name: "TimeSpan"
        }
      },
      queryPeriod: {
        required: true,
        serializedName: "properties.queryPeriod",
        type: {
          name: "TimeSpan"
        }
      },
      triggerOperator: {
        required: true,
        serializedName: "properties.triggerOperator",
        type: {
          name: "Enum",
          allowedValues: [
            "GreaterThan",
            "LessThan",
            "Equal",
            "NotEqual"
          ]
        }
      },
      triggerThreshold: {
        required: true,
        serializedName: "properties.triggerThreshold",
        type: {
          name: "Number"
        }
      },
      suppressionEnabled: {
        required: true,
        serializedName: "properties.suppressionEnabled",
        type: {
          name: "Boolean"
        }
      },
      suppressionDuration: {
        required: true,
        serializedName: "properties.suppressionDuration",
        type: {
          name: "TimeSpan"
        }
      },
      lastModifiedUtc: {
        readOnly: true,
        serializedName: "properties.lastModifiedUtc",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Resource: msRest.CompositeMapper = {
  serializedName: "Resource",
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Action: msRest.CompositeMapper = {
  serializedName: "Action",
  type: {
    name: "Composite",
    className: "Action",
    modelProperties: {
      ...Resource.type.modelProperties,
      etag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      },
      triggerUri: {
        serializedName: "properties.triggerUri",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UserInfo: msRest.CompositeMapper = {
  serializedName: "UserInfo",
  type: {
    name: "Composite",
    className: "UserInfo",
    modelProperties: {
      objectId: {
        serializedName: "objectId",
        type: {
          name: "Uuid"
        }
      },
      email: {
        serializedName: "email",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CaseModel: msRest.CompositeMapper = {
  serializedName: "Case",
  type: {
    name: "Composite",
    className: "CaseModel",
    modelProperties: {
      ...Resource.type.modelProperties,
      etag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      },
      lastUpdatedTimeUtc: {
        serializedName: "properties.lastUpdatedTimeUtc",
        type: {
          name: "DateTime"
        }
      },
      createdTimeUtc: {
        serializedName: "properties.createdTimeUtc",
        type: {
          name: "DateTime"
        }
      },
      endTimeUtc: {
        serializedName: "properties.endTimeUtc",
        type: {
          name: "DateTime"
        }
      },
      startTimeUtc: {
        serializedName: "properties.startTimeUtc",
        type: {
          name: "DateTime"
        }
      },
      labels: {
        serializedName: "properties.labels",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      title: {
        required: true,
        serializedName: "properties.title",
        type: {
          name: "String"
        }
      },
      assignedTo: {
        serializedName: "properties.assignedTo",
        type: {
          name: "Composite",
          className: "UserInfo"
        }
      },
      severity: {
        required: true,
        serializedName: "properties.severity",
        type: {
          name: "String"
        }
      },
      status: {
        required: true,
        serializedName: "properties.status",
        type: {
          name: "String"
        }
      },
      closeReason: {
        serializedName: "properties.closeReason",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Bookmark: msRest.CompositeMapper = {
  serializedName: "Bookmark",
  type: {
    name: "Composite",
    className: "Bookmark",
    modelProperties: {
      ...Resource.type.modelProperties,
      etag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      },
      displayName: {
        required: true,
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      lastUpdatedTimeUtc: {
        serializedName: "properties.lastUpdatedTimeUtc",
        type: {
          name: "DateTime"
        }
      },
      createdTimeUtc: {
        serializedName: "properties.createdTimeUtc",
        type: {
          name: "DateTime"
        }
      },
      createdBy: {
        serializedName: "properties.createdBy",
        type: {
          name: "Composite",
          className: "UserInfo"
        }
      },
      updatedBy: {
        serializedName: "properties.updatedBy",
        type: {
          name: "Composite",
          className: "UserInfo"
        }
      },
      notes: {
        serializedName: "properties.notes",
        type: {
          name: "String"
        }
      },
      labels: {
        serializedName: "properties.labels",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      query: {
        required: true,
        serializedName: "properties.query",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DataConnector: msRest.CompositeMapper = {
  serializedName: "DataConnector",
  type: {
    name: "Composite",
    polymorphicDiscriminator: {
      serializedName: "kind",
      clientName: "kind"
    },
    uberParent: "DataConnector",
    className: "DataConnector",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      etag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      },
      kind: {
        required: true,
        serializedName: "kind",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DataConnectorKind1: msRest.CompositeMapper = {
  serializedName: "DataConnectorKind",
  type: {
    name: "Composite",
    className: "DataConnectorKind1",
    modelProperties: {
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DataConnectorTenantId: msRest.CompositeMapper = {
  serializedName: "DataConnectorTenantId",
  type: {
    name: "Composite",
    className: "DataConnectorTenantId",
    modelProperties: {
      tenantId: {
        serializedName: "tenantId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DataConnectorDataTypeCommon: msRest.CompositeMapper = {
  serializedName: "DataConnectorDataTypeCommon",
  type: {
    name: "Composite",
    className: "DataConnectorDataTypeCommon",
    modelProperties: {
      state: {
        serializedName: "state",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OfficeDataConnectorDataTypesSharePoint: msRest.CompositeMapper = {
  serializedName: "OfficeDataConnectorDataTypes_sharePoint",
  type: {
    name: "Composite",
    className: "OfficeDataConnectorDataTypesSharePoint",
    modelProperties: {
      ...DataConnectorDataTypeCommon.type.modelProperties
    }
  }
};

export const OfficeDataConnectorDataTypesExchange: msRest.CompositeMapper = {
  serializedName: "OfficeDataConnectorDataTypes_exchange",
  type: {
    name: "Composite",
    className: "OfficeDataConnectorDataTypesExchange",
    modelProperties: {
      ...DataConnectorDataTypeCommon.type.modelProperties
    }
  }
};

export const OfficeDataConnectorDataTypes: msRest.CompositeMapper = {
  serializedName: "OfficeDataConnectorDataTypes",
  type: {
    name: "Composite",
    className: "OfficeDataConnectorDataTypes",
    modelProperties: {
      sharePoint: {
        serializedName: "sharePoint",
        type: {
          name: "Composite",
          className: "OfficeDataConnectorDataTypesSharePoint"
        }
      },
      exchange: {
        serializedName: "exchange",
        type: {
          name: "Composite",
          className: "OfficeDataConnectorDataTypesExchange"
        }
      }
    }
  }
};

export const OfficeDataConnector: msRest.CompositeMapper = {
  serializedName: "Office365",
  type: {
    name: "Composite",
    polymorphicDiscriminator: DataConnector.type.polymorphicDiscriminator,
    uberParent: "DataConnector",
    className: "OfficeDataConnector",
    modelProperties: {
      ...DataConnector.type.modelProperties,
      tenantId: {
        serializedName: "properties.tenantId",
        type: {
          name: "String"
        }
      },
      dataTypes: {
        serializedName: "properties.dataTypes",
        type: {
          name: "Composite",
          className: "OfficeDataConnectorDataTypes"
        }
      }
    }
  }
};

export const TIDataConnectorDataTypesIndicators: msRest.CompositeMapper = {
  serializedName: "TIDataConnectorDataTypes_indicators",
  type: {
    name: "Composite",
    className: "TIDataConnectorDataTypesIndicators",
    modelProperties: {
      ...DataConnectorDataTypeCommon.type.modelProperties
    }
  }
};

export const TIDataConnectorDataTypes: msRest.CompositeMapper = {
  serializedName: "TIDataConnectorDataTypes",
  type: {
    name: "Composite",
    className: "TIDataConnectorDataTypes",
    modelProperties: {
      indicators: {
        serializedName: "indicators",
        type: {
          name: "Composite",
          className: "TIDataConnectorDataTypesIndicators"
        }
      }
    }
  }
};

export const TIDataConnector: msRest.CompositeMapper = {
  serializedName: "ThreatIntelligence",
  type: {
    name: "Composite",
    polymorphicDiscriminator: DataConnector.type.polymorphicDiscriminator,
    uberParent: "DataConnector",
    className: "TIDataConnector",
    modelProperties: {
      ...DataConnector.type.modelProperties,
      tenantId: {
        serializedName: "properties.tenantId",
        type: {
          name: "String"
        }
      },
      dataTypes: {
        serializedName: "properties.dataTypes",
        type: {
          name: "Composite",
          className: "TIDataConnectorDataTypes"
        }
      }
    }
  }
};

export const AlertsDataTypeOfDataConnectorAlerts: msRest.CompositeMapper = {
  serializedName: "AlertsDataTypeOfDataConnector_alerts",
  type: {
    name: "Composite",
    className: "AlertsDataTypeOfDataConnectorAlerts",
    modelProperties: {
      ...DataConnectorDataTypeCommon.type.modelProperties
    }
  }
};

export const AlertsDataTypeOfDataConnector: msRest.CompositeMapper = {
  serializedName: "AlertsDataTypeOfDataConnector",
  type: {
    name: "Composite",
    className: "AlertsDataTypeOfDataConnector",
    modelProperties: {
      alerts: {
        serializedName: "alerts",
        type: {
          name: "Composite",
          className: "AlertsDataTypeOfDataConnectorAlerts"
        }
      }
    }
  }
};

export const AADDataConnector: msRest.CompositeMapper = {
  serializedName: "AzureActiveDirectory",
  type: {
    name: "Composite",
    polymorphicDiscriminator: DataConnector.type.polymorphicDiscriminator,
    uberParent: "DataConnector",
    className: "AADDataConnector",
    modelProperties: {
      ...DataConnector.type.modelProperties,
      tenantId: {
        serializedName: "properties.tenantId",
        type: {
          name: "String"
        }
      },
      dataTypes: {
        serializedName: "properties.dataTypes",
        type: {
          name: "Composite",
          className: "AlertsDataTypeOfDataConnector"
        }
      }
    }
  }
};

export const ASCDataConnector: msRest.CompositeMapper = {
  serializedName: "AzureSecurityCenter",
  type: {
    name: "Composite",
    polymorphicDiscriminator: DataConnector.type.polymorphicDiscriminator,
    uberParent: "DataConnector",
    className: "ASCDataConnector",
    modelProperties: {
      ...DataConnector.type.modelProperties,
      dataTypes: {
        serializedName: "properties.dataTypes",
        type: {
          name: "Composite",
          className: "AlertsDataTypeOfDataConnector"
        }
      },
      subscriptionId: {
        serializedName: "properties.subscriptionId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MCASDataConnector: msRest.CompositeMapper = {
  serializedName: "MicrosoftCloudAppSecurity",
  type: {
    name: "Composite",
    polymorphicDiscriminator: DataConnector.type.polymorphicDiscriminator,
    uberParent: "DataConnector",
    className: "MCASDataConnector",
    modelProperties: {
      ...DataConnector.type.modelProperties,
      tenantId: {
        serializedName: "properties.tenantId",
        type: {
          name: "String"
        }
      },
      dataTypes: {
        serializedName: "properties.dataTypes",
        type: {
          name: "Composite",
          className: "AlertsDataTypeOfDataConnector"
        }
      }
    }
  }
};

export const DataConnectorWithAlertsProperties: msRest.CompositeMapper = {
  serializedName: "DataConnectorWithAlertsProperties",
  type: {
    name: "Composite",
    className: "DataConnectorWithAlertsProperties",
    modelProperties: {
      dataTypes: {
        serializedName: "dataTypes",
        type: {
          name: "Composite",
          className: "AlertsDataTypeOfDataConnector"
        }
      }
    }
  }
};

export const Entity: msRest.CompositeMapper = {
  serializedName: "Entity",
  type: {
    name: "Composite",
    polymorphicDiscriminator: {
      serializedName: "kind",
      clientName: "kind"
    },
    uberParent: "Entity",
    className: "Entity",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      kind: {
        required: true,
        serializedName: "kind",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EntityKind1: msRest.CompositeMapper = {
  serializedName: "EntityKind",
  type: {
    name: "Composite",
    className: "EntityKind1",
    modelProperties: {
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AccountEntity: msRest.CompositeMapper = {
  serializedName: "Account",
  type: {
    name: "Composite",
    polymorphicDiscriminator: Entity.type.polymorphicDiscriminator,
    uberParent: "Entity",
    className: "AccountEntity",
    modelProperties: {
      ...Entity.type.modelProperties,
      accountName: {
        readOnly: true,
        serializedName: "properties.accountName",
        type: {
          name: "String"
        }
      },
      ntDomain: {
        readOnly: true,
        serializedName: "properties.ntDomain",
        type: {
          name: "String"
        }
      },
      upnSuffix: {
        readOnly: true,
        serializedName: "properties.upnSuffix",
        type: {
          name: "String"
        }
      },
      sid: {
        readOnly: true,
        serializedName: "properties.sid",
        type: {
          name: "String"
        }
      },
      aadTenantId: {
        readOnly: true,
        serializedName: "properties.aadTenantId",
        type: {
          name: "String"
        }
      },
      aadUserId: {
        readOnly: true,
        serializedName: "properties.aadUserId",
        type: {
          name: "String"
        }
      },
      puid: {
        readOnly: true,
        serializedName: "properties.puid",
        type: {
          name: "String"
        }
      },
      isDomainJoined: {
        readOnly: true,
        serializedName: "properties.isDomainJoined",
        type: {
          name: "Boolean"
        }
      },
      objectGuid: {
        readOnly: true,
        serializedName: "properties.objectGuid",
        type: {
          name: "Uuid"
        }
      }
    }
  }
};

export const HostEntity: msRest.CompositeMapper = {
  serializedName: "Host",
  type: {
    name: "Composite",
    polymorphicDiscriminator: Entity.type.polymorphicDiscriminator,
    uberParent: "Entity",
    className: "HostEntity",
    modelProperties: {
      ...Entity.type.modelProperties,
      dnsDomain: {
        readOnly: true,
        serializedName: "properties.dnsDomain",
        type: {
          name: "String"
        }
      },
      ntDomain: {
        readOnly: true,
        serializedName: "properties.ntDomain",
        type: {
          name: "String"
        }
      },
      hostName: {
        readOnly: true,
        serializedName: "properties.hostName",
        type: {
          name: "String"
        }
      },
      netBiosName: {
        readOnly: true,
        serializedName: "properties.netBiosName",
        type: {
          name: "String"
        }
      },
      azureID: {
        readOnly: true,
        serializedName: "properties.azureID",
        type: {
          name: "String"
        }
      },
      omsAgentID: {
        readOnly: true,
        serializedName: "properties.omsAgentID",
        type: {
          name: "String"
        }
      },
      osFamily: {
        serializedName: "properties.osFamily",
        type: {
          name: "Enum",
          allowedValues: [
            "Linux",
            "Windows",
            "Android",
            "IOS"
          ]
        }
      },
      osVersion: {
        readOnly: true,
        serializedName: "properties.osVersion",
        type: {
          name: "String"
        }
      },
      isDomainJoined: {
        readOnly: true,
        serializedName: "properties.isDomainJoined",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const FileEntity: msRest.CompositeMapper = {
  serializedName: "File",
  type: {
    name: "Composite",
    polymorphicDiscriminator: Entity.type.polymorphicDiscriminator,
    uberParent: "Entity",
    className: "FileEntity",
    modelProperties: {
      ...Entity.type.modelProperties,
      directory: {
        readOnly: true,
        serializedName: "properties.directory",
        type: {
          name: "String"
        }
      },
      fileName: {
        readOnly: true,
        serializedName: "properties.fileName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OfficeConsent: msRest.CompositeMapper = {
  serializedName: "OfficeConsent",
  type: {
    name: "Composite",
    className: "OfficeConsent",
    modelProperties: {
      ...Resource.type.modelProperties,
      tenantId: {
        serializedName: "properties.tenantId",
        type: {
          name: "String"
        }
      },
      tenantName: {
        readOnly: true,
        serializedName: "properties.tenantName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Settings: msRest.CompositeMapper = {
  serializedName: "Settings",
  type: {
    name: "Composite",
    polymorphicDiscriminator: {
      serializedName: "kind",
      clientName: "kind"
    },
    uberParent: "Settings",
    className: "Settings",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      kind: {
        required: true,
        serializedName: "kind",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SettingsKind: msRest.CompositeMapper = {
  serializedName: "SettingsKind",
  type: {
    name: "Composite",
    className: "SettingsKind",
    modelProperties: {
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UebaSettings: msRest.CompositeMapper = {
  serializedName: "UebaSettings",
  type: {
    name: "Composite",
    polymorphicDiscriminator: Settings.type.polymorphicDiscriminator,
    uberParent: "Settings",
    className: "UebaSettings",
    modelProperties: {
      ...Settings.type.modelProperties,
      isEnabled: {
        serializedName: "properties.isEnabled",
        type: {
          name: "Boolean"
        }
      },
      statusInMcas: {
        readOnly: true,
        serializedName: "properties.statusInMcas",
        type: {
          name: "String"
        }
      },
      atpLicenseStatus: {
        readOnly: true,
        serializedName: "properties.atpLicenseStatus",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const ToggleSettings: msRest.CompositeMapper = {
  serializedName: "ToggleSettings",
  type: {
    name: "Composite",
    polymorphicDiscriminator: Settings.type.polymorphicDiscriminator,
    uberParent: "Settings",
    className: "ToggleSettings",
    modelProperties: {
      ...Settings.type.modelProperties,
      isEnabled: {
        serializedName: "properties.isEnabled",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Aggregations: msRest.CompositeMapper = {
  serializedName: "Aggregations",
  type: {
    name: "Composite",
    polymorphicDiscriminator: {
      serializedName: "kind",
      clientName: "kind"
    },
    uberParent: "Aggregations",
    className: "Aggregations",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      kind: {
        required: true,
        serializedName: "kind",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AggregationsKind1: msRest.CompositeMapper = {
  serializedName: "AggregationsKind",
  type: {
    name: "Composite",
    className: "AggregationsKind1",
    modelProperties: {
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EntityQuery: msRest.CompositeMapper = {
  serializedName: "EntityQuery",
  type: {
    name: "Composite",
    className: "EntityQuery",
    modelProperties: {
      ...Resource.type.modelProperties
    }
  }
};

export const OperationsList: msRest.CompositeMapper = {
  serializedName: "operationsList",
  type: {
    name: "Composite",
    className: "OperationsList",
    modelProperties: {
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      },
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation"
            }
          }
        }
      }
    }
  }
};

export const AlertRulesList: msRest.CompositeMapper = {
  serializedName: "AlertRulesList",
  type: {
    name: "Composite",
    className: "AlertRulesList",
    modelProperties: {
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      },
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AlertRule"
            }
          }
        }
      }
    }
  }
};

export const ActionsList: msRest.CompositeMapper = {
  serializedName: "ActionsList",
  type: {
    name: "Composite",
    className: "ActionsList",
    modelProperties: {
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      },
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Action"
            }
          }
        }
      }
    }
  }
};

export const CaseList: msRest.CompositeMapper = {
  serializedName: "CaseList",
  type: {
    name: "Composite",
    className: "CaseList",
    modelProperties: {
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      },
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CaseModel"
            }
          }
        }
      }
    }
  }
};

export const BookmarkList: msRest.CompositeMapper = {
  serializedName: "BookmarkList",
  type: {
    name: "Composite",
    className: "BookmarkList",
    modelProperties: {
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      },
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Bookmark"
            }
          }
        }
      }
    }
  }
};

export const DataConnectorList: msRest.CompositeMapper = {
  serializedName: "DataConnectorList",
  type: {
    name: "Composite",
    className: "DataConnectorList",
    modelProperties: {
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      },
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DataConnector"
            }
          }
        }
      }
    }
  }
};

export const EntityList: msRest.CompositeMapper = {
  serializedName: "EntityList",
  type: {
    name: "Composite",
    className: "EntityList",
    modelProperties: {
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      },
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Entity"
            }
          }
        }
      }
    }
  }
};

export const OfficeConsentList: msRest.CompositeMapper = {
  serializedName: "OfficeConsentList",
  type: {
    name: "Composite",
    className: "OfficeConsentList",
    modelProperties: {
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      },
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "OfficeConsent"
            }
          }
        }
      }
    }
  }
};

export const EntityQueryList: msRest.CompositeMapper = {
  serializedName: "EntityQueryList",
  type: {
    name: "Composite",
    className: "EntityQueryList",
    modelProperties: {
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      },
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EntityQuery"
            }
          }
        }
      }
    }
  }
};

export const discriminators = {
  'AlertRule' : AlertRule,
  'AlertRule.Scheduled' : ScheduledAlertRule,
  'DataConnector' : DataConnector,
  'DataConnector.Office365' : OfficeDataConnector,
  'DataConnector.ThreatIntelligence' : TIDataConnector,
  'DataConnector.AzureActiveDirectory' : AADDataConnector,
  'DataConnector.AzureSecurityCenter' : ASCDataConnector,
  'DataConnector.MicrosoftCloudAppSecurity' : MCASDataConnector,
  'Entity' : Entity,
  'Entity.Account' : AccountEntity,
  'Entity.Host' : HostEntity,
  'Entity.File' : FileEntity,
  'Settings' : Settings,
  'Settings.UebaSettings' : UebaSettings,
  'Settings.ToggleSettings' : ToggleSettings,
  'Aggregations' : Aggregations
};
