/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };


/**
 * @interface
 * An interface representing AzureResourceBase.
 * Common properties for all Azure resources.
 *
 * @extends BaseResource
 */
export interface AzureResourceBase extends BaseResource {
  /**
   * @member {string} [id] String Id used to locate any resource on Azure.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [type] Type of this resource.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: string;
  /**
   * @member {string} [name] Name of this resource.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
}

/**
 * @interface
 * An interface representing Blueprint.
 * Represents a Blueprint definition.
 *
 * @extends AzureResourceBase
 */
export interface Blueprint extends AzureResourceBase {
  /**
   * @member {string} [displayName] One-liner string explain this resource.
   */
  displayName?: string;
  /**
   * @member {string} [description] Multi-line explain this resource.
   */
  description?: string;
  /**
   * @member {BlueprintStatus} [status] Status of the blueprint. This field is
   * readonly.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly status?: BlueprintStatus;
  /**
   * @member {BlueprintTargetScope} [targetScope] The scope where this
   * blueprint definition can be assigned. Management group is reserved for
   * future use. Possible values include: 'subscription', 'managementGroup'
   */
  targetScope?: BlueprintTargetScope;
  /**
   * @member {{ [propertyName: string]: ParameterDefinition }} [parameters]
   * Parameters required by this blueprint definition.
   */
  parameters?: { [propertyName: string]: ParameterDefinition };
  /**
   * @member {{ [propertyName: string]: ResourceGroupDefinition }}
   * [resourceGroups] Resource group placeholders defined by this blueprint
   * definition.
   */
  resourceGroups?: { [propertyName: string]: ResourceGroupDefinition };
  /**
   * @member {any} [versions] Published versions of this blueprint definition.
   */
  versions?: any;
  /**
   * @member {any} [layout] Layout view of the blueprint definition for UI
   * reference.
   */
  layout?: any;
}

/**
 * Contains the possible cases for Artifact.
 */
export type ArtifactUnion = Artifact | TemplateArtifact | RoleAssignmentArtifact | PolicyAssignmentArtifact;

/**
 * @interface
 * An interface representing Artifact.
 * Represents a blueprint artifact.
 *
 */
export interface Artifact {
  /**
   * @member {string} kind Polymorphic Discriminator
   */
  kind: "Artifact";
  /**
   * @member {string} [id] String Id used to locate any resource on Azure.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [type] Type of this resource.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: string;
  /**
   * @member {string} [name] Name of this resource.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
}

/**
 * @interface
 * An interface representing PublishedBlueprint.
 * Represents a published blueprint.
 *
 * @extends AzureResourceBase
 */
export interface PublishedBlueprint extends AzureResourceBase {
  /**
   * @member {string} [displayName] One-liner string explain this resource.
   */
  displayName?: string;
  /**
   * @member {string} [description] Multi-line explain this resource.
   */
  description?: string;
  /**
   * @member {BlueprintStatus} [status] Status of the blueprint. This field is
   * readonly.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly status?: BlueprintStatus;
  /**
   * @member {BlueprintTargetScope} [targetScope] The scope where this
   * blueprint definition can be assigned. Management group is reserved for
   * future use. Possible values include: 'subscription', 'managementGroup'
   */
  targetScope?: BlueprintTargetScope;
  /**
   * @member {{ [propertyName: string]: ParameterDefinition }} [parameters]
   * Parameters required by this blueprint definition.
   */
  parameters?: { [propertyName: string]: ParameterDefinition };
  /**
   * @member {{ [propertyName: string]: ResourceGroupDefinition }}
   * [resourceGroups] Resource group placeholders defined by this blueprint
   * definition.
   */
  resourceGroups?: { [propertyName: string]: ResourceGroupDefinition };
  /**
   * @member {string} [blueprintName] Name of the published blueprint
   * definition.
   */
  blueprintName?: string;
  /**
   * @member {string} [changeNotes] Version-specific change notes.
   */
  changeNotes?: string;
}

/**
 * @interface
 * An interface representing ResourceProviderOperationDisplay.
 * Display metadata associated with the operation.
 *
 */
export interface ResourceProviderOperationDisplay {
  /**
   * @member {string} [provider] Resource provider: Microsoft Blueprint.
   */
  provider?: string;
  /**
   * @member {string} [resource] Resource on which the operation is performed.
   */
  resource?: string;
  /**
   * @member {string} [operation] Type of operation: get, read, delete, etc.
   */
  operation?: string;
  /**
   * @member {string} [description] Description of this operation.
   */
  description?: string;
}

/**
 * @interface
 * An interface representing ResourceProviderOperation.
 * Supported operations of this resource provider.
 *
 */
export interface ResourceProviderOperation {
  /**
   * @member {string} [name] Operation name, in format of
   * {provider}/{resource}/{operation}
   */
  name?: string;
  /**
   * @member {ResourceProviderOperationDisplay} [display] Display metadata
   * associated with the operation.
   */
  display?: ResourceProviderOperationDisplay;
}

/**
 * @interface
 * An interface representing ResourceProviderOperationList.
 * Results of the request to list operations.
 *
 */
export interface ResourceProviderOperationList {
  /**
   * @member {ResourceProviderOperation[]} [value] List of operations supported
   * by this resource provider.
   */
  value?: ResourceProviderOperation[];
}

/**
 * @interface
 * An interface representing BlueprintResourceStatusBase.
 * Shared status properties between all blueprint resources.
 *
 */
export interface BlueprintResourceStatusBase {
  /**
   * @member {string} [timeCreated] Creation time of this blueprint definition.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly timeCreated?: string;
  /**
   * @member {string} [lastModified] Last modified time of this blueprint
   * definition.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly lastModified?: string;
}

/**
 * @interface
 * An interface representing BlueprintStatus.
 * The status of the blueprint. This field is readonly.
 *
 * @extends BlueprintResourceStatusBase
 */
export interface BlueprintStatus extends BlueprintResourceStatusBase {
}

/**
 * @interface
 * An interface representing ParameterDefinitionMetadata.
 * User-friendly properties for this parameter.
 *
 */
export interface ParameterDefinitionMetadata {
  /**
   * @member {string} [displayName] DisplayName of this
   * parameter/resourceGroup.
   */
  displayName?: string;
  /**
   * @member {string} [description] Description of this
   * parameter/resourceGroup.
   */
  description?: string;
  /**
   * @member {string} [strongType] StrongType for UI to render rich experience
   * during blueprint assignment.
   */
  strongType?: string;
}

/**
 * @interface
 * An interface representing ParameterDefinition.
 * Represent a parameter with constrains and metadata.
 *
 */
export interface ParameterDefinition {
  /**
   * @member {TemplateParameterType} type Allowed data types for Resource
   * Manager template parameters. Possible values include: 'string', 'array',
   * 'bool', 'int', 'object', 'secureObject', 'secureString'
   */
  type: TemplateParameterType;
  /**
   * @member {string} [displayName] DisplayName of this
   * parameter/resourceGroup.
   */
  displayName?: string;
  /**
   * @member {string} [description] Description of this
   * parameter/resourceGroup.
   */
  description?: string;
  /**
   * @member {string} [strongType] StrongType for UI to render rich experience
   * during blueprint assignment.
   */
  strongType?: string;
  /**
   * @member {any} [defaultValue] Default Value for this parameter.
   */
  defaultValue?: any;
  /**
   * @member {any[]} [allowedValues] Array of allowed values for this
   * parameter.
   */
  allowedValues?: any[];
}

/**
 * @interface
 * An interface representing ResourceGroupDefinition.
 * Represents an Azure resource group in a blueprint definition.
 *
 */
export interface ResourceGroupDefinition {
  /**
   * @member {string} [name] Name of this resourceGroup. Leave empty if the
   * resource group name will be specified during the blueprint assignment.
   */
  name?: string;
  /**
   * @member {string} [location] Location of this resourceGroup. Leave empty if
   * the resource group location will be specified during the blueprint
   * assignment.
   */
  location?: string;
  /**
   * @member {string} [displayName] DisplayName of this
   * parameter/resourceGroup.
   */
  displayName?: string;
  /**
   * @member {string} [description] Description of this
   * parameter/resourceGroup.
   */
  description?: string;
  /**
   * @member {string} [strongType] StrongType for UI to render rich experience
   * during blueprint assignment.
   */
  strongType?: string;
  /**
   * @member {string[]} [dependsOn] Artifacts which need to be deployed before
   * this resource group.
   */
  dependsOn?: string[];
  /**
   * @member {{ [propertyName: string]: string }} [tags] Tags to be assigned to
   * this resource group.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * @interface
 * An interface representing ParameterValueBase.
 * Base class for ParameterValue.
 *
 */
export interface ParameterValueBase {
  /**
   * @member {string} [description] Optional property. Establishes
   * ParameterValueBase as a BaseClass.
   */
  description?: string;
}

/**
 * @interface
 * An interface representing TemplateArtifactProperties.
 * Properties of a Resource Manager template blueprint artifact.
 *
 */
export interface TemplateArtifactProperties {
  /**
   * @member {string} [displayName] One-liner string explain this resource.
   */
  displayName?: string;
  /**
   * @member {string} [description] Multi-line explain this resource.
   */
  description?: string;
  /**
   * @member {string[]} [dependsOn] Artifacts which need to be deployed before
   * the specified artifact.
   */
  dependsOn?: string[];
  /**
   * @member {any} template The Resource Manager template blueprint artifact
   * body.
   */
  template: any;
  /**
   * @member {string} [resourceGroup] If applicable, the name of the resource
   * group placeholder to which the Resource Manager template blueprint
   * artifact will be deployed.
   */
  resourceGroup?: string;
  /**
   * @member {{ [propertyName: string]: ParameterValueBase }} parameters
   * Resource Manager template blueprint artifact parameter values.
   */
  parameters: { [propertyName: string]: ParameterValueBase };
}

/**
 * @interface
 * An interface representing TemplateArtifact.
 * Blueprint artifact that deploys a Resource Manager template.
 *
 */
export interface TemplateArtifact {
  /**
   * @member {string} kind Polymorphic Discriminator
   */
  kind: "template";
  /**
   * @member {string} [id] String Id used to locate any resource on Azure.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [type] Type of this resource.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: string;
  /**
   * @member {string} [name] Name of this resource.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [displayName] One-liner string explain this resource.
   */
  displayName?: string;
  /**
   * @member {string} [description] Multi-line explain this resource.
   */
  description?: string;
  /**
   * @member {string[]} [dependsOn] Artifacts which need to be deployed before
   * the specified artifact.
   */
  dependsOn?: string[];
  /**
   * @member {any} template The Resource Manager template blueprint artifact
   * body.
   */
  template: any;
  /**
   * @member {string} [resourceGroup] If applicable, the name of the resource
   * group placeholder to which the Resource Manager template blueprint
   * artifact will be deployed.
   */
  resourceGroup?: string;
  /**
   * @member {{ [propertyName: string]: ParameterValueBase }} parameters
   * Resource Manager template blueprint artifact parameter values.
   */
  parameters: { [propertyName: string]: ParameterValueBase };
}

/**
 * @interface
 * An interface representing RoleAssignmentArtifactProperties.
 * Properties of a Role assignment blueprint artifact.
 *
 */
export interface RoleAssignmentArtifactProperties {
  /**
   * @member {string} [displayName] One-liner string explain this resource.
   */
  displayName?: string;
  /**
   * @member {string} [description] Multi-line explain this resource.
   */
  description?: string;
  /**
   * @member {string[]} [dependsOn] Artifacts which need to be deployed before
   * the specified artifact.
   */
  dependsOn?: string[];
  /**
   * @member {string} roleDefinitionId Azure resource ID of the RoleDefinition.
   */
  roleDefinitionId: string;
  /**
   * @member {any} principalIds Array of user or group identities in Azure
   * Active Directory. The roleDefinition will apply to each identity.
   */
  principalIds: any;
  /**
   * @member {string} [resourceGroup] RoleAssignment will be scope to this
   * resourceGroup. If empty, it scopes to the subscription.
   */
  resourceGroup?: string;
}

/**
 * @interface
 * An interface representing RoleAssignmentArtifact.
 * Blueprint artifact that applies a Role assignment.
 *
 */
export interface RoleAssignmentArtifact {
  /**
   * @member {string} kind Polymorphic Discriminator
   */
  kind: "roleAssignment";
  /**
   * @member {string} [id] String Id used to locate any resource on Azure.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [type] Type of this resource.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: string;
  /**
   * @member {string} [name] Name of this resource.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [displayName] One-liner string explain this resource.
   */
  displayName?: string;
  /**
   * @member {string} [description] Multi-line explain this resource.
   */
  description?: string;
  /**
   * @member {string[]} [dependsOn] Artifacts which need to be deployed before
   * the specified artifact.
   */
  dependsOn?: string[];
  /**
   * @member {string} roleDefinitionId Azure resource ID of the RoleDefinition.
   */
  roleDefinitionId: string;
  /**
   * @member {any} principalIds Array of user or group identities in Azure
   * Active Directory. The roleDefinition will apply to each identity.
   */
  principalIds: any;
  /**
   * @member {string} [resourceGroup] RoleAssignment will be scope to this
   * resourceGroup. If empty, it scopes to the subscription.
   */
  resourceGroup?: string;
}

/**
 * @interface
 * An interface representing PolicyAssignmentArtifactProperties.
 * Properties of a Policy assignment blueprint artifact.
 *
 */
export interface PolicyAssignmentArtifactProperties {
  /**
   * @member {string} [displayName] One-liner string explain this resource.
   */
  displayName?: string;
  /**
   * @member {string} [description] Multi-line explain this resource.
   */
  description?: string;
  /**
   * @member {string[]} [dependsOn] Artifacts which need to be deployed before
   * the specified artifact.
   */
  dependsOn?: string[];
  /**
   * @member {string} policyDefinitionId Azure resource ID of the policy
   * definition.
   */
  policyDefinitionId: string;
  /**
   * @member {{ [propertyName: string]: ParameterValueBase }} parameters
   * Parameter values for the policy definition.
   */
  parameters: { [propertyName: string]: ParameterValueBase };
  /**
   * @member {string} [resourceGroup] Name of the resource group placeholder to
   * which the policy will be assigned.
   */
  resourceGroup?: string;
}

/**
 * @interface
 * An interface representing PolicyAssignmentArtifact.
 * Blueprint artifact that applies a Policy assignment.
 *
 */
export interface PolicyAssignmentArtifact {
  /**
   * @member {string} kind Polymorphic Discriminator
   */
  kind: "policyAssignment";
  /**
   * @member {string} [id] String Id used to locate any resource on Azure.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [type] Type of this resource.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: string;
  /**
   * @member {string} [name] Name of this resource.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [displayName] One-liner string explain this resource.
   */
  displayName?: string;
  /**
   * @member {string} [description] Multi-line explain this resource.
   */
  description?: string;
  /**
   * @member {string[]} [dependsOn] Artifacts which need to be deployed before
   * the specified artifact.
   */
  dependsOn?: string[];
  /**
   * @member {string} policyDefinitionId Azure resource ID of the policy
   * definition.
   */
  policyDefinitionId: string;
  /**
   * @member {{ [propertyName: string]: ParameterValueBase }} parameters
   * Parameter values for the policy definition.
   */
  parameters: { [propertyName: string]: ParameterValueBase };
  /**
   * @member {string} [resourceGroup] Name of the resource group placeholder to
   * which the policy will be assigned.
   */
  resourceGroup?: string;
}

/**
 * @interface
 * An interface representing ParameterValue.
 * Value for the specified parameter.
 *
 * @extends ParameterValueBase
 */
export interface ParameterValue extends ParameterValueBase {
  /**
   * @member {any} value Actual value.
   */
  value: any;
}

/**
 * @interface
 * An interface representing KeyVaultReference.
 * Specifies the link to a Key Vault.
 *
 */
export interface KeyVaultReference {
  /**
   * @member {string} id Azure resource ID of the Key Vault.
   */
  id: string;
}

/**
 * @interface
 * An interface representing SecretValueReference.
 * Reference to a Key Vault secret.
 *
 */
export interface SecretValueReference {
  /**
   * @member {KeyVaultReference} keyVault Specifies the reference to a given
   * Azure Key Vault.
   */
  keyVault: KeyVaultReference;
  /**
   * @member {string} secretName Name of the secret.
   */
  secretName: string;
  /**
   * @member {string} [secretVersion] The version of the secret to use. If left
   * blank, the latest version of the secret is used.
   */
  secretVersion?: string;
}

/**
 * @interface
 * An interface representing SecretReferenceParameterValue.
 * The reference to a secret, if the parameter should be protected.
 *
 * @extends ParameterValueBase
 */
export interface SecretReferenceParameterValue extends ParameterValueBase {
  /**
   * @member {SecretValueReference} reference Specifies the reference.
   */
  reference: SecretValueReference;
}

/**
 * @interface
 * An interface representing ResourceGroupValue.
 * Represents an Azure resource group.
 *
 */
export interface ResourceGroupValue {
  /**
   * @member {string} [name] Name of the resource group.
   */
  name?: string;
  /**
   * @member {string} [location] Location of the resource group.
   */
  location?: string;
}

/**
 * @interface
 * An interface representing UserAssignedIdentity.
 * User-assigned managed identity.
 *
 */
export interface UserAssignedIdentity {
  /**
   * @member {string} [principalId] Azure Active Directory principal ID
   * associated with this Identity.
   */
  principalId?: string;
  /**
   * @member {string} [clientId] Client App Id associated with this identity.
   */
  clientId?: string;
}

/**
 * @interface
 * An interface representing ManagedServiceIdentity.
 * Managed identity generic object.
 *
 */
export interface ManagedServiceIdentity {
  /**
   * @member {ManagedServiceIdentityType} type Type of the managed identity.
   * Possible values include: 'None', 'SystemAssigned', 'UserAssigned'
   */
  type: ManagedServiceIdentityType;
  /**
   * @member {string} [principalId] Azure Active Directory principal ID
   * associated with this Identity.
   */
  principalId?: string;
  /**
   * @member {string} [tenantId] ID of the Azure Active Directory.
   */
  tenantId?: string;
  /**
   * @member {{ [propertyName: string]: UserAssignedIdentity }}
   * [userAssignedIdentities] The list of user-assigned managed identities
   * associated with the resource. Key is the Azure resource Id of the managed
   * identity.
   */
  userAssignedIdentities?: { [propertyName: string]: UserAssignedIdentity };
}

/**
 * @interface
 * An interface representing AssignmentStatus.
 * The status of a blueprint assignment. This field is readonly.
 *
 * @extends BlueprintResourceStatusBase
 */
export interface AssignmentStatus extends BlueprintResourceStatusBase {
}

/**
 * @interface
 * An interface representing AssignmentLockSettings.
 * Defines how resources deployed by a blueprint assignment are locked.
 *
 */
export interface AssignmentLockSettings {
  /**
   * @member {AssignmentLockMode} [mode] Lock mode. Possible values include:
   * 'None', 'AllResourcesReadOnly', 'AllResourcesDoNotDelete'
   */
  mode?: AssignmentLockMode;
  /**
   * @member {string[]} [excludedPrincipals] List of AAD principals excluded
   * from blueprint locks. Up to 5 principals are permitted.
   */
  excludedPrincipals?: string[];
}

/**
 * @interface
 * An interface representing AssignmentProperties.
 * Detailed properties for a blueprint assignment.
 *
 * @extends BlueprintResourcePropertiesBase
 */
export interface AssignmentProperties extends BlueprintResourcePropertiesBase {
  /**
   * @member {string} [blueprintId] ID of the published version of a blueprint
   * definition.
   */
  blueprintId?: string;
  /**
   * @member {{ [propertyName: string]: ParameterValueBase }} parameters
   * Blueprint assignment parameter values.
   */
  parameters: { [propertyName: string]: ParameterValueBase };
  /**
   * @member {{ [propertyName: string]: ResourceGroupValue }} resourceGroups
   * Names and locations of resource group placeholders.
   */
  resourceGroups: { [propertyName: string]: ResourceGroupValue };
  /**
   * @member {AssignmentStatus} [status] Status of blueprint assignment. This
   * field is readonly.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly status?: AssignmentStatus;
  /**
   * @member {AssignmentLockSettings} [locks] Defines how resources deployed by
   * a blueprint assignment are locked.
   */
  locks?: AssignmentLockSettings;
  /**
   * @member {AssignmentProvisioningState} [provisioningState] State of the
   * blueprint assignment. Possible values include: 'creating', 'validating',
   * 'waiting', 'deploying', 'cancelling', 'locking', 'succeeded', 'failed',
   * 'canceled', 'deleting'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provisioningState?: AssignmentProvisioningState;
}

/**
 * @interface
 * An interface representing TrackedResource.
 * Common properties for all Azure tracked resources.
 *
 * @extends AzureResourceBase
 */
export interface TrackedResource extends AzureResourceBase {
  /**
   * @member {string} location The location of this blueprint assignment.
   */
  location: string;
}

/**
 * @interface
 * An interface representing Assignment.
 * Represents a blueprint assignment.
 *
 * @extends TrackedResource
 */
export interface Assignment extends TrackedResource {
  /**
   * @member {ManagedServiceIdentity} identity Managed identity for this
   * blueprint assignment.
   */
  identity: ManagedServiceIdentity;
  /**
   * @member {string} [displayName] One-liner string explain this resource.
   */
  displayName?: string;
  /**
   * @member {string} [description] Multi-line explain this resource.
   */
  description?: string;
  /**
   * @member {string} [blueprintId] ID of the published version of a blueprint
   * definition.
   */
  blueprintId?: string;
  /**
   * @member {{ [propertyName: string]: ParameterValueBase }} parameters
   * Blueprint assignment parameter values.
   */
  parameters: { [propertyName: string]: ParameterValueBase };
  /**
   * @member {{ [propertyName: string]: ResourceGroupValue }} resourceGroups
   * Names and locations of resource group placeholders.
   */
  resourceGroups: { [propertyName: string]: ResourceGroupValue };
  /**
   * @member {AssignmentStatus} [status] Status of blueprint assignment. This
   * field is readonly.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly status?: AssignmentStatus;
  /**
   * @member {AssignmentLockSettings} [locks] Defines how resources deployed by
   * a blueprint assignment are locked.
   */
  locks?: AssignmentLockSettings;
  /**
   * @member {AssignmentProvisioningState} [provisioningState] State of the
   * blueprint assignment. Possible values include: 'creating', 'validating',
   * 'waiting', 'deploying', 'cancelling', 'locking', 'succeeded', 'failed',
   * 'canceled', 'deleting'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provisioningState?: AssignmentProvisioningState;
}

/**
 * @interface
 * An interface representing WhoIsBlueprintContract.
 * Response schema for querying the Azure Blueprints service principal in the
 * tenant.
 *
 */
export interface WhoIsBlueprintContract {
  /**
   * @member {string} [objectId] AAD object Id of the Azure Blueprints service
   * principal in the tenant.
   */
  objectId?: string;
}

/**
 * @interface
 * An interface representing AzureResourceManagerError.
 * Error code and message
 *
 */
export interface AzureResourceManagerError {
  /**
   * @member {string} [code] Error code.
   */
  code?: string;
  /**
   * @member {string} [message] Error message.
   */
  message?: string;
}

/**
 * @interface
 * An interface representing AssignmentJobCreatedResource.
 * Azure resource created from deployment job.
 *
 * @extends AzureResourceBase
 */
export interface AssignmentJobCreatedResource extends AzureResourceBase {
  /**
   * @member {{ [propertyName: string]: string }} [properties] Additional
   * properties in a dictionary.
   */
  properties?: { [propertyName: string]: string };
}

/**
 * @interface
 * An interface representing AssignmentDeploymentJobResult.
 * Result of each individual deployment in a blueprint assignment.
 *
 */
export interface AssignmentDeploymentJobResult {
  /**
   * @member {AzureResourceManagerError} [error] Contains error details if
   * deployment job failed.
   */
  error?: AzureResourceManagerError;
  /**
   * @member {AssignmentJobCreatedResource[]} [resources] Resources created as
   * result of the deployment job.
   */
  resources?: AssignmentJobCreatedResource[];
}

/**
 * @interface
 * An interface representing AssignmentDeploymentJob.
 * Represents individual job in given blueprint assignment operation.
 *
 */
export interface AssignmentDeploymentJob {
  /**
   * @member {string} [kind] Kind of job.
   */
  kind?: string;
  /**
   * @member {string} [action] Name of the action performed in this job.
   */
  action?: string;
  /**
   * @member {string} [jobId] Id of this job.
   */
  jobId?: string;
  /**
   * @member {string} [jobState] State of this job.
   */
  jobState?: string;
  /**
   * @member {AssignmentDeploymentJobResult} [result] Deployment job result.
   */
  result?: AssignmentDeploymentJobResult;
  /**
   * @member {AssignmentDeploymentJobResult[]} [history] Result of this
   * deployment job for each retry.
   */
  history?: AssignmentDeploymentJobResult[];
  /**
   * @member {string} [requestUri] Reference to deployment job resource id.
   */
  requestUri?: string;
}

/**
 * @interface
 * An interface representing AssignmentOperationProperties.
 * Properties of AssignmentOperation.
 *
 */
export interface AssignmentOperationProperties {
  /**
   * @member {string} [blueprintVersion] The published version of the blueprint
   * definition used for the blueprint assignment operation.
   */
  blueprintVersion?: string;
  /**
   * @member {string} [assignmentState] State of this blueprint assignment
   * operation.
   */
  assignmentState?: string;
  /**
   * @member {string} [timeCreated] Create time of this blueprint assignment
   * operation.
   */
  timeCreated?: string;
  /**
   * @member {string} [timeStarted] Start time of the underlying deployment.
   */
  timeStarted?: string;
  /**
   * @member {string} [timeFinished] Finish time of the overall underlying
   * deployments.
   */
  timeFinished?: string;
  /**
   * @member {AssignmentDeploymentJob[]} [deployments] List of jobs in this
   * blueprint assignment operation.
   */
  deployments?: AssignmentDeploymentJob[];
}

/**
 * @interface
 * An interface representing AssignmentOperation.
 * Represents underlying deployment detail for each update to the blueprint
 * assignment.
 *
 * @extends AzureResourceBase
 */
export interface AssignmentOperation extends AzureResourceBase {
  /**
   * @member {string} [blueprintVersion] The published version of the blueprint
   * definition used for the blueprint assignment operation.
   */
  blueprintVersion?: string;
  /**
   * @member {string} [assignmentState] State of this blueprint assignment
   * operation.
   */
  assignmentState?: string;
  /**
   * @member {string} [timeCreated] Create time of this blueprint assignment
   * operation.
   */
  timeCreated?: string;
  /**
   * @member {string} [timeStarted] Start time of the underlying deployment.
   */
  timeStarted?: string;
  /**
   * @member {string} [timeFinished] Finish time of the overall underlying
   * deployments.
   */
  timeFinished?: string;
  /**
   * @member {AssignmentDeploymentJob[]} [deployments] List of jobs in this
   * blueprint assignment operation.
   */
  deployments?: AssignmentDeploymentJob[];
}

/**
 * @interface
 * An interface representing BlueprintManagementClientOptions.
 * @extends AzureServiceClientOptions
 */
export interface BlueprintManagementClientOptions extends AzureServiceClientOptions {
  /**
   * @member {string} [baseUri]
   */
  baseUri?: string;
}


/**
 * @interface
 * An interface representing the BlueprintList.
 * @summary BlueprintList
 *
 * List of blueprint definitions.
 *
 * @extends Array<Blueprint>
 */
export interface BlueprintList extends Array<Blueprint> {
  /**
   * @member {string} [nextLink] Link to the next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the ArtifactList.
 * List of blueprint artifacts.
 *
 * @extends Array<ArtifactUnion>
 */
export interface ArtifactList extends Array<ArtifactUnion> {
  /**
   * @member {string} [nextLink] Link to the next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the PublishedBlueprintList.
 * @summary BlueprintList
 *
 * List of published blueprint definitions.
 *
 * @extends Array<PublishedBlueprint>
 */
export interface PublishedBlueprintList extends Array<PublishedBlueprint> {
  /**
   * @member {string} [nextLink] Link to the next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the AssignmentList.
 * List of blueprint assignments
 *
 * @extends Array<Assignment>
 */
export interface AssignmentList extends Array<Assignment> {
  /**
   * @member {string} [nextLink] Link to the next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the AssignmentOperationList.
 * List of AssignmentOperation.
 *
 * @extends Array<AssignmentOperation>
 */
export interface AssignmentOperationList extends Array<AssignmentOperation> {
  /**
   * @member {string} [nextLink] Link to the next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * Defines values for BlueprintTargetScope.
 * Possible values include: 'subscription', 'managementGroup'
 * @readonly
 * @enum {string}
 */
export type BlueprintTargetScope = 'subscription' | 'managementGroup';

/**
 * Defines values for TemplateParameterType.
 * Possible values include: 'string', 'array', 'bool', 'int', 'object', 'secureObject',
 * 'secureString'
 * @readonly
 * @enum {string}
 */
export type TemplateParameterType = 'string' | 'array' | 'bool' | 'int' | 'object' | 'secureObject' | 'secureString';

/**
 * Defines values for ManagedServiceIdentityType.
 * Possible values include: 'None', 'SystemAssigned', 'UserAssigned'
 * @readonly
 * @enum {string}
 */
export type ManagedServiceIdentityType = 'None' | 'SystemAssigned' | 'UserAssigned';

/**
 * Defines values for AssignmentLockMode.
 * Possible values include: 'None', 'AllResourcesReadOnly', 'AllResourcesDoNotDelete'
 * @readonly
 * @enum {string}
 */
export type AssignmentLockMode = 'None' | 'AllResourcesReadOnly' | 'AllResourcesDoNotDelete';

/**
 * Defines values for AssignmentProvisioningState.
 * Possible values include: 'creating', 'validating', 'waiting', 'deploying', 'cancelling',
 * 'locking', 'succeeded', 'failed', 'canceled', 'deleting'
 * @readonly
 * @enum {string}
 */
export type AssignmentProvisioningState = 'creating' | 'validating' | 'waiting' | 'deploying' | 'cancelling' | 'locking' | 'succeeded' | 'failed' | 'canceled' | 'deleting';

/**
 * Contains response data for the createOrUpdate operation.
 */
export type BlueprintsCreateOrUpdateResponse = Blueprint & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Blueprint;
    };
};

/**
 * Contains response data for the get operation.
 */
export type BlueprintsGetResponse = Blueprint & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Blueprint;
    };
};

/**
 * Contains response data for the deleteMethod operation.
 */
export type BlueprintsDeleteMethodResponse = Blueprint & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Blueprint;
    };
};

/**
 * Contains response data for the list operation.
 */
export type BlueprintsListResponse = BlueprintList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BlueprintList;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type BlueprintsListNextResponse = BlueprintList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BlueprintList;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ArtifactsCreateOrUpdateResponse = ArtifactUnion & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ArtifactUnion;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ArtifactsGetResponse = ArtifactUnion & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ArtifactUnion;
    };
};

/**
 * Contains response data for the deleteMethod operation.
 */
export type ArtifactsDeleteMethodResponse = ArtifactUnion & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ArtifactUnion;
    };
};

/**
 * Contains response data for the list operation.
 */
export type ArtifactsListResponse = ArtifactList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ArtifactList;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type ArtifactsListNextResponse = ArtifactList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ArtifactList;
    };
};

/**
 * Contains response data for the create operation.
 */
export type PublishedBlueprintsCreateResponse = PublishedBlueprint & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PublishedBlueprint;
    };
};

/**
 * Contains response data for the get operation.
 */
export type PublishedBlueprintsGetResponse = PublishedBlueprint & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PublishedBlueprint;
    };
};

/**
 * Contains response data for the deleteMethod operation.
 */
export type PublishedBlueprintsDeleteMethodResponse = PublishedBlueprint & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PublishedBlueprint;
    };
};

/**
 * Contains response data for the list operation.
 */
export type PublishedBlueprintsListResponse = PublishedBlueprintList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PublishedBlueprintList;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type PublishedBlueprintsListNextResponse = PublishedBlueprintList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PublishedBlueprintList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type PublishedArtifactsGetResponse = ArtifactUnion & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ArtifactUnion;
    };
};

/**
 * Contains response data for the list operation.
 */
export type PublishedArtifactsListResponse = ArtifactList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ArtifactList;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type PublishedArtifactsListNextResponse = ArtifactList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ArtifactList;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type AssignmentsCreateOrUpdateResponse = Assignment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Assignment;
    };
};

/**
 * Contains response data for the get operation.
 */
export type AssignmentsGetResponse = Assignment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Assignment;
    };
};

/**
 * Contains response data for the deleteMethod operation.
 */
export type AssignmentsDeleteMethodResponse = Assignment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Assignment;
    };
};

/**
 * Contains response data for the whoIsBlueprint operation.
 */
export type AssignmentsWhoIsBlueprintResponse = WhoIsBlueprintContract & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WhoIsBlueprintContract;
    };
};

/**
 * Contains response data for the list operation.
 */
export type AssignmentsListResponse = AssignmentList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AssignmentList;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type AssignmentsListNextResponse = AssignmentList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AssignmentList;
    };
};

/**
 * Contains response data for the list operation.
 */
export type AssignmentOperationsListResponse = AssignmentOperationList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AssignmentOperationList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type AssignmentOperationsGetResponse = AssignmentOperation & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AssignmentOperation;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type AssignmentOperationsListNextResponse = AssignmentOperationList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AssignmentOperationList;
    };
};
