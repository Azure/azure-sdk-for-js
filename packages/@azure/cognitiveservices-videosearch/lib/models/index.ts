/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { ServiceClientOptions } from "ms-rest-js";
import * as msRest from "ms-rest-js";


/**
 * Contains the possible cases for ResponseBase.
 */
export type ResponseBaseUnion = ResponseBase | IdentifiableUnion;

/**
 * @interface
 * An interface representing ResponseBase.
 */
export interface ResponseBase {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "ResponseBase";
}

/**
 * Contains the possible cases for Identifiable.
 */
export type IdentifiableUnion = Identifiable | ResponseUnion;

/**
 * @interface
 * An interface representing Identifiable.
 * Defines the identity of a resource.
 *
 */
export interface Identifiable {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "Identifiable";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
}

/**
 * Contains the possible cases for Response.
 */
export type ResponseUnion = Response | AnswerUnion | ThingUnion | ErrorResponse | TrendingVideos | VideoDetails;

/**
 * @interface
 * An interface representing Response.
 * Defines a response. All schemas that could be returned at the root of a
 * response should inherit from this
 *
 */
export interface Response {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "Response";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [webSearchUrl] The URL To Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
}

/**
 * Contains the possible cases for Thing.
 */
export type ThingUnion = Thing | CreativeWorkUnion;

/**
 * @interface
 * An interface representing Thing.
 */
export interface Thing {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "Thing";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [webSearchUrl] The URL To Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {string} [name] The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [url] The URL to get more information about the thing
   * represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly url?: string;
  /**
   * @member {ImageObject} [image] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * @member {string} [description] A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
  /**
   * @member {string} [alternateName] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly alternateName?: string;
  /**
   * @member {string} [bingId] An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly bingId?: string;
}

/**
 * Contains the possible cases for CreativeWork.
 */
export type CreativeWorkUnion = CreativeWork | MediaObjectUnion;

/**
 * @interface
 * An interface representing CreativeWork.
 */
export interface CreativeWork {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "CreativeWork";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [webSearchUrl] The URL To Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {string} [name] The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [url] The URL to get more information about the thing
   * represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly url?: string;
  /**
   * @member {ImageObject} [image] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * @member {string} [description] A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
  /**
   * @member {string} [alternateName] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly alternateName?: string;
  /**
   * @member {string} [bingId] An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly bingId?: string;
  /**
   * @member {string} [thumbnailUrl] The URL to a thumbnail of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly thumbnailUrl?: string;
  /**
   * @member {ThingUnion[]} [provider] The source of the creative work.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provider?: ThingUnion[];
  /**
   * @member {string} [text] **NOTE: This property will not be serialized. It
   * can only be populated by the server.**
   */
  readonly text?: string;
}

/**
 * Contains the possible cases for MediaObject.
 */
export type MediaObjectUnion = MediaObject | ImageObject | VideoObject;

/**
 * @interface
 * An interface representing MediaObject.
 */
export interface MediaObject {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "MediaObject";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [webSearchUrl] The URL To Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {string} [name] The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [url] The URL to get more information about the thing
   * represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly url?: string;
  /**
   * @member {ImageObject} [image] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * @member {string} [description] A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
  /**
   * @member {string} [alternateName] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly alternateName?: string;
  /**
   * @member {string} [bingId] An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly bingId?: string;
  /**
   * @member {string} [thumbnailUrl] The URL to a thumbnail of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly thumbnailUrl?: string;
  /**
   * @member {ThingUnion[]} [provider] The source of the creative work.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provider?: ThingUnion[];
  /**
   * @member {string} [text] **NOTE: This property will not be serialized. It
   * can only be populated by the server.**
   */
  readonly text?: string;
  /**
   * @member {string} [contentUrl] Original URL to retrieve the source (file)
   * for the media object (e.g the source URL for the image).
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly contentUrl?: string;
  /**
   * @member {string} [hostPageUrl] URL of the page that hosts the media
   * object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly hostPageUrl?: string;
  /**
   * @member {number} [width] The width of the source media object, in pixels.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly width?: number;
  /**
   * @member {number} [height] The height of the source media object, in
   * pixels.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly height?: number;
}

/**
 * @interface
 * An interface representing ImageObject.
 * Defines an image
 *
 */
export interface ImageObject {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "ImageObject";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [webSearchUrl] The URL To Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {string} [name] The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [url] The URL to get more information about the thing
   * represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly url?: string;
  /**
   * @member {ImageObject} [image] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * @member {string} [description] A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
  /**
   * @member {string} [alternateName] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly alternateName?: string;
  /**
   * @member {string} [bingId] An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly bingId?: string;
  /**
   * @member {string} [thumbnailUrl] The URL to a thumbnail of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly thumbnailUrl?: string;
  /**
   * @member {ThingUnion[]} [provider] The source of the creative work.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provider?: ThingUnion[];
  /**
   * @member {string} [text] **NOTE: This property will not be serialized. It
   * can only be populated by the server.**
   */
  readonly text?: string;
  /**
   * @member {string} [contentUrl] Original URL to retrieve the source (file)
   * for the media object (e.g the source URL for the image).
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly contentUrl?: string;
  /**
   * @member {string} [hostPageUrl] URL of the page that hosts the media
   * object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly hostPageUrl?: string;
  /**
   * @member {number} [width] The width of the source media object, in pixels.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly width?: number;
  /**
   * @member {number} [height] The height of the source media object, in
   * pixels.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly height?: number;
  /**
   * @member {ImageObject} [thumbnail] The URL to a thumbnail of the image
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly thumbnail?: ImageObject;
}

/**
 * @interface
 * An interface representing VideoObject.
 * Defines a video object that is relevant to the query.
 *
 */
export interface VideoObject {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "VideoObject";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [webSearchUrl] The URL To Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {string} [name] The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [url] The URL to get more information about the thing
   * represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly url?: string;
  /**
   * @member {ImageObject} [image] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * @member {string} [description] A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
  /**
   * @member {string} [alternateName] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly alternateName?: string;
  /**
   * @member {string} [bingId] An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly bingId?: string;
  /**
   * @member {string} [thumbnailUrl] The URL to a thumbnail of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly thumbnailUrl?: string;
  /**
   * @member {ThingUnion[]} [provider] The source of the creative work.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provider?: ThingUnion[];
  /**
   * @member {string} [text] **NOTE: This property will not be serialized. It
   * can only be populated by the server.**
   */
  readonly text?: string;
  /**
   * @member {string} [contentUrl] Original URL to retrieve the source (file)
   * for the media object (e.g the source URL for the image).
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly contentUrl?: string;
  /**
   * @member {string} [hostPageUrl] URL of the page that hosts the media
   * object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly hostPageUrl?: string;
  /**
   * @member {number} [width] The width of the source media object, in pixels.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly width?: number;
  /**
   * @member {number} [height] The height of the source media object, in
   * pixels.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly height?: number;
  /**
   * @member {string} [motionThumbnailUrl] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly motionThumbnailUrl?: string;
  /**
   * @member {string} [motionThumbnailId] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly motionThumbnailId?: string;
  /**
   * @member {string} [embedHtml] **NOTE: This property will not be serialized.
   * It can only be populated by the server.**
   */
  readonly embedHtml?: string;
  /**
   * @member {boolean} [allowHttpsEmbed] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly allowHttpsEmbed?: boolean;
  /**
   * @member {number} [viewCount] **NOTE: This property will not be serialized.
   * It can only be populated by the server.**
   */
  readonly viewCount?: number;
  /**
   * @member {ImageObject} [thumbnail] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly thumbnail?: ImageObject;
  /**
   * @member {string} [videoId] **NOTE: This property will not be serialized.
   * It can only be populated by the server.**
   */
  readonly videoId?: string;
  /**
   * @member {boolean} [allowMobileEmbed] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly allowMobileEmbed?: boolean;
  /**
   * @member {boolean} [isSuperfresh] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly isSuperfresh?: boolean;
}

/**
 * @interface
 * An interface representing Query.
 * Defines a search query.
 *
 */
export interface Query {
  /**
   * @member {string} text The query string. Use this string as the query term
   * in a new search request.
   */
  text: string;
  /**
   * @member {string} [displayText] The display version of the query term. This
   * version of the query term may contain special characters that highlight
   * the search term found in the query string. The string contains the
   * highlighting characters only if the query enabled hit highlighting
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly displayText?: string;
  /**
   * @member {string} [webSearchUrl] The URL that takes the user to the Bing
   * search results page for the query.Only related search results include this
   * field.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {string} [searchLink] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly searchLink?: string;
  /**
   * @member {ImageObject} [thumbnail] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly thumbnail?: ImageObject;
}

/**
 * @interface
 * An interface representing PivotSuggestions.
 */
export interface PivotSuggestions {
  /**
   * @member {string} pivot
   */
  pivot: string;
  /**
   * @member {Query[]} suggestions
   */
  suggestions: Query[];
}

/**
 * Contains the possible cases for Answer.
 */
export type AnswerUnion = Answer | SearchResultsAnswerUnion;

/**
 * @interface
 * An interface representing Answer.
 */
export interface Answer {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "Answer";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [webSearchUrl] The URL To Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {Query[]} [followUpQueries] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly followUpQueries?: Query[];
}

/**
 * Contains the possible cases for SearchResultsAnswer.
 */
export type SearchResultsAnswerUnion = SearchResultsAnswer | Videos;

/**
 * @interface
 * An interface representing SearchResultsAnswer.
 */
export interface SearchResultsAnswer {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "SearchResultsAnswer";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [webSearchUrl] The URL To Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {Query[]} [followUpQueries] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly followUpQueries?: Query[];
  /**
   * @member {number} [totalEstimatedMatches] The estimated number of webpages
   * that are relevant to the query. Use this number along with the count and
   * offset query parameters to page the results.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly totalEstimatedMatches?: number;
  /**
   * @member {boolean} [isFamilyFriendly] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly isFamilyFriendly?: boolean;
}

/**
 * @interface
 * An interface representing Videos.
 * Defines a video answer.
 *
 */
export interface Videos {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "Videos";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [webSearchUrl] The URL To Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {Query[]} [followUpQueries] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly followUpQueries?: Query[];
  /**
   * @member {number} [totalEstimatedMatches] The estimated number of webpages
   * that are relevant to the query. Use this number along with the count and
   * offset query parameters to page the results.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly totalEstimatedMatches?: number;
  /**
   * @member {boolean} [isFamilyFriendly] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly isFamilyFriendly?: boolean;
  /**
   * @member {VideoObject[]} value A list of video objects that are relevant to
   * the query.
   */
  value: VideoObject[];
  /**
   * @member {number} [nextOffset] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly nextOffset?: number;
  /**
   * @member {VideoQueryScenario} [scenario] Possible values include: 'List',
   * 'SingleDominantVideo'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly scenario?: VideoQueryScenario;
  /**
   * @member {Query[]} [queryExpansions] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly queryExpansions?: Query[];
  /**
   * @member {PivotSuggestions[]} [pivotSuggestions] **NOTE: This property will
   * not be serialized. It can only be populated by the server.**
   */
  readonly pivotSuggestions?: PivotSuggestions[];
}

/**
 * @interface
 * An interface representing QueryContext.
 * Defines the query context that Bing used for the request.
 *
 */
export interface QueryContext {
  /**
   * @member {string} originalQuery The query string as specified in the
   * request.
   */
  originalQuery: string;
  /**
   * @member {string} [alteredQuery] The query string used by Bing to perform
   * the query. Bing uses the altered query string if the original query string
   * contained spelling mistakes. For example, if the query string is "saling
   * downwind", the altered query string will be "sailing downwind". This field
   * is included only if the original query string contains a spelling mistake.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly alteredQuery?: string;
  /**
   * @member {string} [alterationOverrideQuery] The query string to use to
   * force Bing to use the original string. For example, if the query string is
   * "saling downwind", the override query string will be "+saling downwind".
   * Remember to encode the query string which results in "%2Bsaling+downwind".
   * This field is included only if the original query string contains a
   * spelling mistake.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly alterationOverrideQuery?: string;
  /**
   * @member {boolean} [adultIntent] A Boolean value that indicates whether the
   * specified query has adult intent. The value is true if the query has adult
   * intent; otherwise, false.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly adultIntent?: boolean;
  /**
   * @member {boolean} [askUserForLocation] A Boolean value that indicates
   * whether Bing requires the user's location to provide accurate results. If
   * you specified the user's location by using the X-MSEdge-ClientIP and
   * X-Search-Location headers, you can ignore this field. For location aware
   * queries, such as "today's weather" or "restaurants near me" that need the
   * user's location to provide accurate results, this field is set to true.
   * For location aware queries that include the location (for example,
   * "Seattle weather"), this field is set to false. This field is also set to
   * false for queries that are not location aware, such as "best sellers".
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly askUserForLocation?: boolean;
  /**
   * @member {boolean} [isTransactional] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly isTransactional?: boolean;
}

/**
 * @interface
 * An interface representing ErrorModel.
 * Defines the error that occurred.
 *
 */
export interface ErrorModel {
  /**
   * @member {ErrorCode} code The error code that identifies the category of
   * error. Possible values include: 'None', 'ServerError', 'InvalidRequest',
   * 'RateLimitExceeded', 'InvalidAuthorization', 'InsufficientAuthorization'.
   * Default value: 'None' .
   */
  code: ErrorCode;
  /**
   * @member {ErrorSubCode} [subCode] The error code that further helps to
   * identify the error. Possible values include: 'UnexpectedError',
   * 'ResourceError', 'NotImplemented', 'ParameterMissing',
   * 'ParameterInvalidValue', 'HttpNotAllowed', 'Blocked',
   * 'AuthorizationMissing', 'AuthorizationRedundancy',
   * 'AuthorizationDisabled', 'AuthorizationExpired'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly subCode?: ErrorSubCode;
  /**
   * @member {string} message A description of the error.
   */
  message: string;
  /**
   * @member {string} [moreDetails] A description that provides additional
   * information about the error.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly moreDetails?: string;
  /**
   * @member {string} [parameter] The parameter in the request that caused the
   * error.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly parameter?: string;
  /**
   * @member {string} [value] The parameter's value in the request that was not
   * valid.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly value?: string;
}

/**
 * @interface
 * An interface representing ErrorResponse.
 * The top-level response that represents a failed request.
 *
 */
export interface ErrorResponse {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "ErrorResponse";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [webSearchUrl] The URL To Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {ErrorModel[]} errors A list of errors that describe the reasons
   * why the request failed.
   */
  errors: ErrorModel[];
}

/**
 * @interface
 * An interface representing TrendingVideosTile.
 */
export interface TrendingVideosTile {
  /**
   * @member {Query} query
   */
  query: Query;
  /**
   * @member {ImageObject} image
   */
  image: ImageObject;
}

/**
 * @interface
 * An interface representing TrendingVideosSubcategory.
 */
export interface TrendingVideosSubcategory {
  /**
   * @member {string} title
   */
  title: string;
  /**
   * @member {TrendingVideosTile[]} tiles
   */
  tiles: TrendingVideosTile[];
}

/**
 * @interface
 * An interface representing TrendingVideosCategory.
 */
export interface TrendingVideosCategory {
  /**
   * @member {string} title
   */
  title: string;
  /**
   * @member {TrendingVideosSubcategory[]} subcategories
   */
  subcategories: TrendingVideosSubcategory[];
}

/**
 * @interface
 * An interface representing TrendingVideos.
 */
export interface TrendingVideos {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "TrendingVideos";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [webSearchUrl] The URL To Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {TrendingVideosTile[]} bannerTiles
   */
  bannerTiles: TrendingVideosTile[];
  /**
   * @member {TrendingVideosCategory[]} categories
   */
  categories: TrendingVideosCategory[];
}

/**
 * @interface
 * An interface representing VideosModule.
 */
export interface VideosModule {
  /**
   * @member {VideoObject[]} [value] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly value?: VideoObject[];
}

/**
 * @interface
 * An interface representing VideoDetails.
 */
export interface VideoDetails {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "VideoDetails";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [webSearchUrl] The URL To Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {VideosModule} [relatedVideos] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly relatedVideos?: VideosModule;
  /**
   * @member {VideoObject} [videoResult] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly videoResult?: VideoObject;
}

/**
 * @interface
 * An interface representing VideoSearchAPIClientOptions.
 * @extends ServiceClientOptions
 */
export interface VideoSearchAPIClientOptions extends ServiceClientOptions {
  /**
   * @member {string} [baseUri]
   */
  baseUri?: string;
}

/**
 * @interface
 * An interface representing VideosSearchOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface VideosSearchOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [acceptLanguage] A comma-delimited list of one or more
   * languages to use for user interface strings. The list is in decreasing
   * order of preference. For additional information, including expected
   * format, see
   * [RFC2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html). This
   * header and the
   * [setLang](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-video-api-v7-reference#setlang)
   * query parameter are mutually exclusive; do not specify both. If you set
   * this header, you must also specify the
   * [cc](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-video-api-v7-reference#cc)
   * query parameter. To determine the market to return results for, Bing uses
   * the first supported language it finds from the list and combines it with
   * the cc parameter value. If the list does not include a supported language,
   * Bing finds the closest language and market that supports the request or it
   * uses an aggregated or default market for the results. To determine the
   * market that Bing used, see the BingAPIs-Market header. Use this header and
   * the cc query parameter only if you specify multiple languages. Otherwise,
   * use the
   * [mkt](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-video-api-v7-reference#mkt)
   * and
   * [setLang](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-video-api-v7-reference#setlang)
   * query parameters. A user interface string is a string that's used as a
   * label in a user interface. There are few user interface strings in the
   * JSON response objects. Any links to Bing.com properties in the response
   * objects apply the specified language.
   */
  acceptLanguage?: string;
  /**
   * @member {string} [userAgent] The user agent originating the request. Bing
   * uses the user agent to provide mobile users with an optimized experience.
   * Although optional, you are encouraged to always specify this header. The
   * user-agent should be the same string that any commonly used browser sends.
   * For information about user agents, see [RFC
   * 2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html). The
   * following are examples of user-agent strings. Windows Phone: Mozilla/5.0
   * (compatible; MSIE 10.0; Windows Phone 8.0; Trident/6.0; IEMobile/10.0;
   * ARM; Touch; NOKIA; Lumia 822). Android: Mozilla / 5.0 (Linux; U; Android
   * 2.3.5; en - us; SCH - I500 Build / GINGERBREAD) AppleWebKit / 533.1
   * (KHTML; like Gecko) Version / 4.0 Mobile Safari / 533.1. iPhone: Mozilla /
   * 5.0 (iPhone; CPU iPhone OS 6_1 like Mac OS X) AppleWebKit / 536.26 (KHTML;
   * like Gecko) Mobile / 10B142 iPhone4; 1 BingWeb / 3.03.1428.20120423. PC:
   * Mozilla / 5.0 (Windows NT 6.3; WOW64; Trident / 7.0; Touch; rv:11.0) like
   * Gecko. iPad: Mozilla / 5.0 (iPad; CPU OS 7_0 like Mac OS X) AppleWebKit /
   * 537.51.1 (KHTML, like Gecko) Version / 7.0 Mobile / 11A465 Safari /
   * 9537.53
   */
  userAgent?: string;
  /**
   * @member {string} [clientId] Bing uses this header to provide users with
   * consistent behavior across Bing API calls. Bing often flights new features
   * and improvements, and it uses the client ID as a key for assigning traffic
   * on different flights. If you do not use the same client ID for a user
   * across multiple requests, then Bing may assign the user to multiple
   * conflicting flights. Being assigned to multiple conflicting flights can
   * lead to an inconsistent user experience. For example, if the second
   * request has a different flight assignment than the first, the experience
   * may be unexpected. Also, Bing can use the client ID to tailor web results
   * to that client ID’s search history, providing a richer experience for the
   * user. Bing also uses this header to help improve result rankings by
   * analyzing the activity generated by a client ID. The relevance
   * improvements help with better quality of results delivered by Bing APIs
   * and in turn enables higher click-through rates for the API consumer.
   * IMPORTANT: Although optional, you should consider this header required.
   * Persisting the client ID across multiple requests for the same end user
   * and device combination enables 1) the API consumer to receive a consistent
   * user experience, and 2) higher click-through rates via better quality of
   * results from the Bing APIs. Each user that uses your application on the
   * device must have a unique, Bing generated client ID. If you do not include
   * this header in the request, Bing generates an ID and returns it in the
   * X-MSEdge-ClientID response header. The only time that you should NOT
   * include this header in a request is the first time the user uses your app
   * on that device. Use the client ID for each Bing API request that your app
   * makes for this user on the device. Persist the client ID. To persist the
   * ID in a browser app, use a persistent HTTP cookie to ensure the ID is used
   * across all sessions. Do not use a session cookie. For other apps such as
   * mobile apps, use the device's persistent storage to persist the ID. The
   * next time the user uses your app on that device, get the client ID that
   * you persisted. Bing responses may or may not include this header. If the
   * response includes this header, capture the client ID and use it for all
   * subsequent Bing requests for the user on that device. If you include the
   * X-MSEdge-ClientID, you must not include cookies in the request.
   */
  clientId?: string;
  /**
   * @member {string} [clientIp] The IPv4 or IPv6 address of the client device.
   * The IP address is used to discover the user's location. Bing uses the
   * location information to determine safe search behavior. Although optional,
   * you are encouraged to always specify this header and the X-Search-Location
   * header. Do not obfuscate the address (for example, by changing the last
   * octet to 0). Obfuscating the address results in the location not being
   * anywhere near the device's actual location, which may result in Bing
   * serving erroneous results.
   */
  clientIp?: string;
  /**
   * @member {string} [location] A semicolon-delimited list of key/value pairs
   * that describe the client's geographical location. Bing uses the location
   * information to determine safe search behavior and to return relevant local
   * content. Specify the key/value pair as <key>:<value>. The following are
   * the keys that you use to specify the user's location. lat (required): The
   * latitude of the client's location, in degrees. The latitude must be
   * greater than or equal to -90.0 and less than or equal to +90.0. Negative
   * values indicate southern latitudes and positive values indicate northern
   * latitudes. long (required): The longitude of the client's location, in
   * degrees. The longitude must be greater than or equal to -180.0 and less
   * than or equal to +180.0. Negative values indicate western longitudes and
   * positive values indicate eastern longitudes. re (required): The radius, in
   * meters, which specifies the horizontal accuracy of the coordinates. Pass
   * the value returned by the device's location service. Typical values might
   * be 22m for GPS/Wi-Fi, 380m for cell tower triangulation, and 18,000m for
   * reverse IP lookup. ts (optional): The UTC UNIX timestamp of when the
   * client was at the location. (The UNIX timestamp is the number of seconds
   * since January 1, 1970.) head (optional): The client's relative heading or
   * direction of travel. Specify the direction of travel as degrees from 0
   * through 360, counting clockwise relative to true north. Specify this key
   * only if the sp key is nonzero. sp (optional): The horizontal velocity
   * (speed), in meters per second, that the client device is traveling. alt
   * (optional): The altitude of the client device, in meters. are (optional):
   * The radius, in meters, that specifies the vertical accuracy of the
   * coordinates. Specify this key only if you specify the alt key. Although
   * many of the keys are optional, the more information that you provide, the
   * more accurate the location results are. Although optional, you are
   * encouraged to always specify the user's geographical location. Providing
   * the location is especially important if the client's IP address does not
   * accurately reflect the user's physical location (for example, if the
   * client uses VPN). For optimal results, you should include this header and
   * the X-MSEdge-ClientIP header, but at a minimum, you should include this
   * header.
   */
  location?: string;
  /**
   * @member {string} [countryCode] A 2-character country code of the country
   * where the results come from. This API supports only the United States
   * market. If you specify this query parameter, it must be set to us. If you
   * set this parameter, you must also specify the Accept-Language header. Bing
   * uses the first supported language it finds from the languages list, and
   * combine that language with the country code that you specify to determine
   * the market to return results for. If the languages list does not include a
   * supported language, Bing finds the closest language and market that
   * supports the request, or it may use an aggregated or default market for
   * the results instead of a specified one. You should use this query
   * parameter and the Accept-Language query parameter only if you specify
   * multiple languages; otherwise, you should use the mkt and setLang query
   * parameters. This parameter and the mkt query parameter are mutually
   * exclusive—do not specify both.
   */
  countryCode?: string;
  /**
   * @member {number} [count] The number of videos to return in the response.
   * The actual number delivered may be less than requested. The default is 35.
   * The maximum is 105. You may use this parameter along with the offset
   * parameter to page results. For example, if your user interface presents 20
   * videos per page, set count to 20 and offset to 0 to get the first page of
   * results. For each subsequent page, increment offset by 20 (for example, 0,
   * 20, 40). Use this parameter only with the Video Search API. Do not specify
   * this parameter when calling the Trending Videos API or the Web Search API.
   */
  count?: number;
  /**
   * @member {Freshness} [freshness] Filter videos by the date and time that
   * Bing discovered the video. The following are the possible filter values.
   * Day: Return videos discovered within the last 24 hours. Week: Return
   * videos discovered within the last 7 days. Month: Return videos discovered
   * within the last 30 days. Possible values include: 'Day', 'Week', 'Month'
   */
  freshness?: Freshness;
  /**
   * @member {string} [id] An ID that uniquely identifies a video. The
   * [Video](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-video-api-v7-reference#video)
   * object's videoId field contains the ID that you set this parameter to. You
   * use this parameter to ensure that the specified video is the first video
   * in the list of videos that Bing returns.
   */
  id?: string;
  /**
   * @member {VideoLength} [length] Filter videos by the following lengths:
   * Short: Return videos that are less than 5 minutes. Medium: Return videos
   * that are between 5 and 20 minutes, inclusive. Long: Return videos that are
   * longer than 20 minutes. All: Do not filter by length.Specifying this value
   * is the same as not specifying the videoLength parameter. Possible values
   * include: 'All', 'Short', 'Medium', 'Long'
   */
  length?: VideoLength;
  /**
   * @member {string} [market] The market where the results come from.
   * Typically, mkt is the country where the user is making the request from.
   * However, it could be a different country if the user is not located in a
   * country where Bing delivers results. The market must be in the form
   * <language code>-<country code>. For example, en-US. The string is case
   * insensitive. For a list of possible market values, see [Market
   * Codes](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-video-api-v7-reference#market-codes).
   * NOTE: If known, you are encouraged to always specify the market.
   * Specifying the market helps Bing route the request and return an
   * appropriate and optimal response. If you specify a market that is not
   * listed in [Market
   * Codes](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-video-api-v7-reference#market-codes),
   * Bing uses a best fit market code based on an internal mapping that is
   * subject to change. This parameter and the
   * [cc](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-video-api-v7-reference#cc)
   * query parameter are mutually exclusive—do not specify both.
   */
  market?: string;
  /**
   * @member {number} [offset] The zero-based offset that indicates the number
   * of videos to skip before returning videos. The default is 0. The offset
   * should be less than
   * ([totalEstimatedMatches](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-video-api-v7-reference#videos-totalmatches)
   * - count). Use this parameter along with the count parameter to page
   * results. For example, if your user interface displays 20 videos per page,
   * set count to 20 and offset to 0 to get the first page of results. For each
   * subsequent page, increment offset by 20 (for example, 0, 20, 40). It is
   * possible for multiple pages to include some overlap in results. To prevent
   * duplicates, see
   * [nextOffset](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-video-api-v7-reference#videos-nextoffset).
   * Use this parameter only with the Video Search API.
   */
  offset?: number;
  /**
   * @member {VideoPricing} [pricing] Filter videos by the following pricing
   * options: Free: Return videos that are free to view. Paid: Return videos
   * that require a subscription or payment to view. All: Do not filter by
   * pricing.Specifying this value is the same as not specifying the pricing
   * parameter. Possible values include: 'All', 'Free', 'Paid'
   */
  pricing?: VideoPricing;
  /**
   * @member {VideoResolution} [resolution] Filter videos by the following
   * resolutions: SD480p: Return videos with a 480p or higher resolution.
   * HD720p: Return videos with a 720p or higher resolution. HD1080p: Return
   * videos with a 1080p or higher resolution. All: Do not filter by
   * resolution.Specifying this value is the same as not specifying the
   * resolution parameter. Possible values include: 'All', 'SD480p', 'HD720p',
   * 'HD1080p'
   */
  resolution?: VideoResolution;
  /**
   * @member {SafeSearch} [safeSearch] Filter videos for adult content. The
   * following are the possible filter values. Off: If the request is through
   * the Video Search API, the response includes adult videos and the thumbnail
   * images of the videos are clear (non-fuzzy). If the request is through the
   * Web Search API, the response includes adult videos but the thumbnail
   * images of the videos are pixelated (fuzzy). Moderate: If the request is
   * through the Video Search API, the response does not include videos with
   * adult content. If the request is through the Web Search API, the response
   * may include videos with adult content but the thumbnail images of the
   * videos are pixelated (fuzzy). Strict: Does not return videos with adult
   * content. The default is Moderate. If the request comes from a market that
   * Bing's adult policy requires that safeSearch is set to Strict, Bing
   * ignores the safeSearch value and uses Strict. If you use the site: query
   * operator, there is the chance that the response may contain adult content
   * regardless of what the safeSearch query parameter is set to. Use site:
   * only if you are aware of the content on the site and your scenario
   * supports the possibility of adult content. Possible values include: 'Off',
   * 'Moderate', 'Strict'
   */
  safeSearch?: SafeSearch;
  /**
   * @member {string} [setLang] The language to use for user interface strings.
   * Specify the language using the ISO 639-1 2-letter language code. For
   * example, the language code for English is EN. The default is EN (English).
   * Although optional, you should always specify the language. Typically, you
   * set setLang to the same language specified by mkt unless the user wants
   * the user interface strings displayed in a different language. This
   * parameter and the
   * [Accept-Language](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-video-api-v7-reference#acceptlanguage)
   * header are mutually exclusive; do not specify both. A user interface
   * string is a string that's used as a label in a user interface. There are
   * few user interface strings in the JSON response objects. Also, any links
   * to Bing.com properties in the response objects apply the specified
   * language.
   */
  setLang?: string;
  /**
   * @member {boolean} [textDecorations] A Boolean value that determines
   * whether display strings contain decoration markers such as hit
   * highlighting characters. If true, the strings may include markers. The
   * default is false. To specify whether to use Unicode characters or HTML
   * tags as the markers, see the
   * [textFormat](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-video-api-v7-reference#textformat)
   * query parameter. For information about hit highlighting, see [Hit
   * Highlighting](https://docs.microsoft.com/azure/cognitive-services/bing-news-search/hit-highlighting).
   */
  textDecorations?: boolean;
  /**
   * @member {TextFormat} [textFormat] The type of markers to use for text
   * decorations (see the textDecorations query parameter). Possible values are
   * Raw—Use Unicode characters to mark content that needs special formatting.
   * The Unicode characters are in the range E000 through E019. For example,
   * Bing uses E000 and E001 to mark the beginning and end of query terms for
   * hit highlighting. HTML—Use HTML tags to mark content that needs special
   * formatting. For example, use <b> tags to highlight query terms in display
   * strings. The default is Raw. For display strings that contain escapable
   * HTML characters such as <, >, and &, if textFormat is set to HTML, Bing
   * escapes the characters as appropriate (for example, < is escaped to &lt;).
   * Possible values include: 'Raw', 'Html'
   */
  textFormat?: TextFormat;
}

/**
 * @interface
 * An interface representing VideosDetailsOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface VideosDetailsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [acceptLanguage] A comma-delimited list of one or more
   * languages to use for user interface strings. The list is in decreasing
   * order of preference. For additional information, including expected
   * format, see
   * [RFC2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html). This
   * header and the
   * [setLang](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-video-api-v7-reference#setlang)
   * query parameter are mutually exclusive; do not specify both. If you set
   * this header, you must also specify the
   * [cc](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-video-api-v7-reference#cc)
   * query parameter. To determine the market to return results for, Bing uses
   * the first supported language it finds from the list and combines it with
   * the cc parameter value. If the list does not include a supported language,
   * Bing finds the closest language and market that supports the request or it
   * uses an aggregated or default market for the results. To determine the
   * market that Bing used, see the BingAPIs-Market header. Use this header and
   * the cc query parameter only if you specify multiple languages. Otherwise,
   * use the
   * [mkt](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-video-api-v7-reference#mkt)
   * and
   * [setLang](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-video-api-v7-reference#setlang)
   * query parameters. A user interface string is a string that's used as a
   * label in a user interface. There are few user interface strings in the
   * JSON response objects. Any links to Bing.com properties in the response
   * objects apply the specified language.
   */
  acceptLanguage?: string;
  /**
   * @member {string} [userAgent] The user agent originating the request. Bing
   * uses the user agent to provide mobile users with an optimized experience.
   * Although optional, you are encouraged to always specify this header. The
   * user-agent should be the same string that any commonly used browser sends.
   * For information about user agents, see [RFC
   * 2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html). The
   * following are examples of user-agent strings. Windows Phone: Mozilla/5.0
   * (compatible; MSIE 10.0; Windows Phone 8.0; Trident/6.0; IEMobile/10.0;
   * ARM; Touch; NOKIA; Lumia 822). Android: Mozilla / 5.0 (Linux; U; Android
   * 2.3.5; en - us; SCH - I500 Build / GINGERBREAD) AppleWebKit / 533.1
   * (KHTML; like Gecko) Version / 4.0 Mobile Safari / 533.1. iPhone: Mozilla /
   * 5.0 (iPhone; CPU iPhone OS 6_1 like Mac OS X) AppleWebKit / 536.26 (KHTML;
   * like Gecko) Mobile / 10B142 iPhone4; 1 BingWeb / 3.03.1428.20120423. PC:
   * Mozilla / 5.0 (Windows NT 6.3; WOW64; Trident / 7.0; Touch; rv:11.0) like
   * Gecko. iPad: Mozilla / 5.0 (iPad; CPU OS 7_0 like Mac OS X) AppleWebKit /
   * 537.51.1 (KHTML, like Gecko) Version / 7.0 Mobile / 11A465 Safari /
   * 9537.53
   */
  userAgent?: string;
  /**
   * @member {string} [clientId] Bing uses this header to provide users with
   * consistent behavior across Bing API calls. Bing often flights new features
   * and improvements, and it uses the client ID as a key for assigning traffic
   * on different flights. If you do not use the same client ID for a user
   * across multiple requests, then Bing may assign the user to multiple
   * conflicting flights. Being assigned to multiple conflicting flights can
   * lead to an inconsistent user experience. For example, if the second
   * request has a different flight assignment than the first, the experience
   * may be unexpected. Also, Bing can use the client ID to tailor web results
   * to that client ID’s search history, providing a richer experience for the
   * user. Bing also uses this header to help improve result rankings by
   * analyzing the activity generated by a client ID. The relevance
   * improvements help with better quality of results delivered by Bing APIs
   * and in turn enables higher click-through rates for the API consumer.
   * IMPORTANT: Although optional, you should consider this header required.
   * Persisting the client ID across multiple requests for the same end user
   * and device combination enables 1) the API consumer to receive a consistent
   * user experience, and 2) higher click-through rates via better quality of
   * results from the Bing APIs. Each user that uses your application on the
   * device must have a unique, Bing generated client ID. If you do not include
   * this header in the request, Bing generates an ID and returns it in the
   * X-MSEdge-ClientID response header. The only time that you should NOT
   * include this header in a request is the first time the user uses your app
   * on that device. Use the client ID for each Bing API request that your app
   * makes for this user on the device. Persist the client ID. To persist the
   * ID in a browser app, use a persistent HTTP cookie to ensure the ID is used
   * across all sessions. Do not use a session cookie. For other apps such as
   * mobile apps, use the device's persistent storage to persist the ID. The
   * next time the user uses your app on that device, get the client ID that
   * you persisted. Bing responses may or may not include this header. If the
   * response includes this header, capture the client ID and use it for all
   * subsequent Bing requests for the user on that device. If you include the
   * X-MSEdge-ClientID, you must not include cookies in the request.
   */
  clientId?: string;
  /**
   * @member {string} [clientIp] The IPv4 or IPv6 address of the client device.
   * The IP address is used to discover the user's location. Bing uses the
   * location information to determine safe search behavior. Although optional,
   * you are encouraged to always specify this header and the X-Search-Location
   * header. Do not obfuscate the address (for example, by changing the last
   * octet to 0). Obfuscating the address results in the location not being
   * anywhere near the device's actual location, which may result in Bing
   * serving erroneous results.
   */
  clientIp?: string;
  /**
   * @member {string} [location] A semicolon-delimited list of key/value pairs
   * that describe the client's geographical location. Bing uses the location
   * information to determine safe search behavior and to return relevant local
   * content. Specify the key/value pair as <key>:<value>. The following are
   * the keys that you use to specify the user's location. lat (required): The
   * latitude of the client's location, in degrees. The latitude must be
   * greater than or equal to -90.0 and less than or equal to +90.0. Negative
   * values indicate southern latitudes and positive values indicate northern
   * latitudes. long (required): The longitude of the client's location, in
   * degrees. The longitude must be greater than or equal to -180.0 and less
   * than or equal to +180.0. Negative values indicate western longitudes and
   * positive values indicate eastern longitudes. re (required): The radius, in
   * meters, which specifies the horizontal accuracy of the coordinates. Pass
   * the value returned by the device's location service. Typical values might
   * be 22m for GPS/Wi-Fi, 380m for cell tower triangulation, and 18,000m for
   * reverse IP lookup. ts (optional): The UTC UNIX timestamp of when the
   * client was at the location. (The UNIX timestamp is the number of seconds
   * since January 1, 1970.) head (optional): The client's relative heading or
   * direction of travel. Specify the direction of travel as degrees from 0
   * through 360, counting clockwise relative to true north. Specify this key
   * only if the sp key is nonzero. sp (optional): The horizontal velocity
   * (speed), in meters per second, that the client device is traveling. alt
   * (optional): The altitude of the client device, in meters. are (optional):
   * The radius, in meters, that specifies the vertical accuracy of the
   * coordinates. Specify this key only if you specify the alt key. Although
   * many of the keys are optional, the more information that you provide, the
   * more accurate the location results are. Although optional, you are
   * encouraged to always specify the user's geographical location. Providing
   * the location is especially important if the client's IP address does not
   * accurately reflect the user's physical location (for example, if the
   * client uses VPN). For optimal results, you should include this header and
   * the X-MSEdge-ClientIP header, but at a minimum, you should include this
   * header.
   */
  location?: string;
  /**
   * @member {string} [countryCode] A 2-character country code of the country
   * where the results come from. This API supports only the United States
   * market. If you specify this query parameter, it must be set to us. If you
   * set this parameter, you must also specify the Accept-Language header. Bing
   * uses the first supported language it finds from the languages list, and
   * combine that language with the country code that you specify to determine
   * the market to return results for. If the languages list does not include a
   * supported language, Bing finds the closest language and market that
   * supports the request, or it may use an aggregated or default market for
   * the results instead of a specified one. You should use this query
   * parameter and the Accept-Language query parameter only if you specify
   * multiple languages; otherwise, you should use the mkt and setLang query
   * parameters. This parameter and the mkt query parameter are mutually
   * exclusive—do not specify both.
   */
  countryCode?: string;
  /**
   * @member {string} [id] An ID that uniquely identifies a video. The
   * [Video](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-video-api-v7-reference#video)
   * object's videoId field contains the ID that you set this parameter to. You
   * use this parameter to identify the video to get insights of.
   */
  id?: string;
  /**
   * @member {VideoInsightModule[]} [modules] A comma-delimited list of
   * insights to request. The following are the possible case-insensitive
   * values. All: Return all available insights. RelatedVideos: Return a list
   * of videos that are similar to the video specified by the id query
   * parameter. VideoResult: Return the video that you're requesting insights
   * of (this is the video that you set the id query parameter to in your
   * insights request). If you specify an insight and there is no data for it,
   * the response object does not include the related field. For example, if
   * you specify RelatedVideos and none exist, the response does not include
   * the relatedVideos field. Although the user's query term is not required,
   * you should always include it because it helps to improve relevance and the
   * results.
   */
  modules?: VideoInsightModule[];
  /**
   * @member {string} [market] The market where the results come from.
   * Typically, mkt is the country where the user is making the request from.
   * However, it could be a different country if the user is not located in a
   * country where Bing delivers results. The market must be in the form
   * <language code>-<country code>. For example, en-US. The string is case
   * insensitive. For a list of possible market values, see [Market
   * Codes](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-video-api-v7-reference#market-codes).
   * NOTE: If known, you are encouraged to always specify the market.
   * Specifying the market helps Bing route the request and return an
   * appropriate and optimal response. If you specify a market that is not
   * listed in [Market
   * Codes](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-video-api-v7-reference#market-codes),
   * Bing uses a best fit market code based on an internal mapping that is
   * subject to change. This parameter and the
   * [cc](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-video-api-v7-reference#cc)
   * query parameter are mutually exclusive—do not specify both.
   */
  market?: string;
  /**
   * @member {VideoResolution} [resolution] Filter videos by the following
   * resolutions: SD480p: Return videos with a 480p or higher resolution.
   * HD720p: Return videos with a 720p or higher resolution. HD1080p: Return
   * videos with a 1080p or higher resolution. All: Do not filter by
   * resolution.Specifying this value is the same as not specifying the
   * resolution parameter. Possible values include: 'All', 'SD480p', 'HD720p',
   * 'HD1080p'
   */
  resolution?: VideoResolution;
  /**
   * @member {SafeSearch} [safeSearch] Filter videos for adult content. The
   * following are the possible filter values. Off: If the request is through
   * the Video Search API, the response includes adult videos and the thumbnail
   * images of the videos are clear (non-fuzzy). If the request is through the
   * Web Search API, the response includes adult videos but the thumbnail
   * images of the videos are pixelated (fuzzy). Moderate: If the request is
   * through the Video Search API, the response does not include videos with
   * adult content. If the request is through the Web Search API, the response
   * may include videos with adult content but the thumbnail images of the
   * videos are pixelated (fuzzy). Strict: Does not return videos with adult
   * content. The default is Moderate. If the request comes from a market that
   * Bing's adult policy requires that safeSearch is set to Strict, Bing
   * ignores the safeSearch value and uses Strict. If you use the site: query
   * operator, there is the chance that the response may contain adult content
   * regardless of what the safeSearch query parameter is set to. Use site:
   * only if you are aware of the content on the site and your scenario
   * supports the possibility of adult content. Possible values include: 'Off',
   * 'Moderate', 'Strict'
   */
  safeSearch?: SafeSearch;
  /**
   * @member {string} [setLang] The language to use for user interface strings.
   * Specify the language using the ISO 639-1 2-letter language code. For
   * example, the language code for English is EN. The default is EN (English).
   * Although optional, you should always specify the language. Typically, you
   * set setLang to the same language specified by mkt unless the user wants
   * the user interface strings displayed in a different language. This
   * parameter and the
   * [Accept-Language](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-video-api-v7-reference#acceptlanguage)
   * header are mutually exclusive; do not specify both. A user interface
   * string is a string that's used as a label in a user interface. There are
   * few user interface strings in the JSON response objects. Also, any links
   * to Bing.com properties in the response objects apply the specified
   * language.
   */
  setLang?: string;
  /**
   * @member {boolean} [textDecorations] A Boolean value that determines
   * whether display strings contain decoration markers such as hit
   * highlighting characters. If true, the strings may include markers. The
   * default is false. To specify whether to use Unicode characters or HTML
   * tags as the markers, see the
   * [textFormat](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-video-api-v7-reference#textformat)
   * query parameter. For information about hit highlighting, see [Hit
   * Highlighting](https://docs.microsoft.com/azure/cognitive-services/bing-news-search/hit-highlighting).
   */
  textDecorations?: boolean;
  /**
   * @member {TextFormat} [textFormat] The type of markers to use for text
   * decorations (see the textDecorations query parameter). Possible values are
   * Raw—Use Unicode characters to mark content that needs special formatting.
   * The Unicode characters are in the range E000 through E019. For example,
   * Bing uses E000 and E001 to mark the beginning and end of query terms for
   * hit highlighting. HTML—Use HTML tags to mark content that needs special
   * formatting. For example, use <b> tags to highlight query terms in display
   * strings. The default is Raw. For display strings that contain escapable
   * HTML characters such as <, >, and &, if textFormat is set to HTML, Bing
   * escapes the characters as appropriate (for example, < is escaped to &lt;).
   * Possible values include: 'Raw', 'Html'
   */
  textFormat?: TextFormat;
}

/**
 * @interface
 * An interface representing VideosTrendingOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface VideosTrendingOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [acceptLanguage] A comma-delimited list of one or more
   * languages to use for user interface strings. The list is in decreasing
   * order of preference. For additional information, including expected
   * format, see
   * [RFC2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html). This
   * header and the
   * [setLang](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-video-api-v7-reference#setlang)
   * query parameter are mutually exclusive; do not specify both. If you set
   * this header, you must also specify the
   * [cc](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-video-api-v7-reference#cc)
   * query parameter. To determine the market to return results for, Bing uses
   * the first supported language it finds from the list and combines it with
   * the cc parameter value. If the list does not include a supported language,
   * Bing finds the closest language and market that supports the request or it
   * uses an aggregated or default market for the results. To determine the
   * market that Bing used, see the BingAPIs-Market header. Use this header and
   * the cc query parameter only if you specify multiple languages. Otherwise,
   * use the
   * [mkt](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-video-api-v7-reference#mkt)
   * and
   * [setLang](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-video-api-v7-reference#setlang)
   * query parameters. A user interface string is a string that's used as a
   * label in a user interface. There are few user interface strings in the
   * JSON response objects. Any links to Bing.com properties in the response
   * objects apply the specified language.
   */
  acceptLanguage?: string;
  /**
   * @member {string} [userAgent] The user agent originating the request. Bing
   * uses the user agent to provide mobile users with an optimized experience.
   * Although optional, you are encouraged to always specify this header. The
   * user-agent should be the same string that any commonly used browser sends.
   * For information about user agents, see [RFC
   * 2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html). The
   * following are examples of user-agent strings. Windows Phone: Mozilla/5.0
   * (compatible; MSIE 10.0; Windows Phone 8.0; Trident/6.0; IEMobile/10.0;
   * ARM; Touch; NOKIA; Lumia 822). Android: Mozilla / 5.0 (Linux; U; Android
   * 2.3.5; en - us; SCH - I500 Build / GINGERBREAD) AppleWebKit / 533.1
   * (KHTML; like Gecko) Version / 4.0 Mobile Safari / 533.1. iPhone: Mozilla /
   * 5.0 (iPhone; CPU iPhone OS 6_1 like Mac OS X) AppleWebKit / 536.26 (KHTML;
   * like Gecko) Mobile / 10B142 iPhone4; 1 BingWeb / 3.03.1428.20120423. PC:
   * Mozilla / 5.0 (Windows NT 6.3; WOW64; Trident / 7.0; Touch; rv:11.0) like
   * Gecko. iPad: Mozilla / 5.0 (iPad; CPU OS 7_0 like Mac OS X) AppleWebKit /
   * 537.51.1 (KHTML, like Gecko) Version / 7.0 Mobile / 11A465 Safari /
   * 9537.53
   */
  userAgent?: string;
  /**
   * @member {string} [clientId] Bing uses this header to provide users with
   * consistent behavior across Bing API calls. Bing often flights new features
   * and improvements, and it uses the client ID as a key for assigning traffic
   * on different flights. If you do not use the same client ID for a user
   * across multiple requests, then Bing may assign the user to multiple
   * conflicting flights. Being assigned to multiple conflicting flights can
   * lead to an inconsistent user experience. For example, if the second
   * request has a different flight assignment than the first, the experience
   * may be unexpected. Also, Bing can use the client ID to tailor web results
   * to that client ID’s search history, providing a richer experience for the
   * user. Bing also uses this header to help improve result rankings by
   * analyzing the activity generated by a client ID. The relevance
   * improvements help with better quality of results delivered by Bing APIs
   * and in turn enables higher click-through rates for the API consumer.
   * IMPORTANT: Although optional, you should consider this header required.
   * Persisting the client ID across multiple requests for the same end user
   * and device combination enables 1) the API consumer to receive a consistent
   * user experience, and 2) higher click-through rates via better quality of
   * results from the Bing APIs. Each user that uses your application on the
   * device must have a unique, Bing generated client ID. If you do not include
   * this header in the request, Bing generates an ID and returns it in the
   * X-MSEdge-ClientID response header. The only time that you should NOT
   * include this header in a request is the first time the user uses your app
   * on that device. Use the client ID for each Bing API request that your app
   * makes for this user on the device. Persist the client ID. To persist the
   * ID in a browser app, use a persistent HTTP cookie to ensure the ID is used
   * across all sessions. Do not use a session cookie. For other apps such as
   * mobile apps, use the device's persistent storage to persist the ID. The
   * next time the user uses your app on that device, get the client ID that
   * you persisted. Bing responses may or may not include this header. If the
   * response includes this header, capture the client ID and use it for all
   * subsequent Bing requests for the user on that device. If you include the
   * X-MSEdge-ClientID, you must not include cookies in the request.
   */
  clientId?: string;
  /**
   * @member {string} [clientIp] The IPv4 or IPv6 address of the client device.
   * The IP address is used to discover the user's location. Bing uses the
   * location information to determine safe search behavior. Although optional,
   * you are encouraged to always specify this header and the X-Search-Location
   * header. Do not obfuscate the address (for example, by changing the last
   * octet to 0). Obfuscating the address results in the location not being
   * anywhere near the device's actual location, which may result in Bing
   * serving erroneous results.
   */
  clientIp?: string;
  /**
   * @member {string} [location] A semicolon-delimited list of key/value pairs
   * that describe the client's geographical location. Bing uses the location
   * information to determine safe search behavior and to return relevant local
   * content. Specify the key/value pair as <key>:<value>. The following are
   * the keys that you use to specify the user's location. lat (required): The
   * latitude of the client's location, in degrees. The latitude must be
   * greater than or equal to -90.0 and less than or equal to +90.0. Negative
   * values indicate southern latitudes and positive values indicate northern
   * latitudes. long (required): The longitude of the client's location, in
   * degrees. The longitude must be greater than or equal to -180.0 and less
   * than or equal to +180.0. Negative values indicate western longitudes and
   * positive values indicate eastern longitudes. re (required): The radius, in
   * meters, which specifies the horizontal accuracy of the coordinates. Pass
   * the value returned by the device's location service. Typical values might
   * be 22m for GPS/Wi-Fi, 380m for cell tower triangulation, and 18,000m for
   * reverse IP lookup. ts (optional): The UTC UNIX timestamp of when the
   * client was at the location. (The UNIX timestamp is the number of seconds
   * since January 1, 1970.) head (optional): The client's relative heading or
   * direction of travel. Specify the direction of travel as degrees from 0
   * through 360, counting clockwise relative to true north. Specify this key
   * only if the sp key is nonzero. sp (optional): The horizontal velocity
   * (speed), in meters per second, that the client device is traveling. alt
   * (optional): The altitude of the client device, in meters. are (optional):
   * The radius, in meters, that specifies the vertical accuracy of the
   * coordinates. Specify this key only if you specify the alt key. Although
   * many of the keys are optional, the more information that you provide, the
   * more accurate the location results are. Although optional, you are
   * encouraged to always specify the user's geographical location. Providing
   * the location is especially important if the client's IP address does not
   * accurately reflect the user's physical location (for example, if the
   * client uses VPN). For optimal results, you should include this header and
   * the X-MSEdge-ClientIP header, but at a minimum, you should include this
   * header.
   */
  location?: string;
  /**
   * @member {string} [countryCode] A 2-character country code of the country
   * where the results come from. This API supports only the United States
   * market. If you specify this query parameter, it must be set to us. If you
   * set this parameter, you must also specify the Accept-Language header. Bing
   * uses the first supported language it finds from the languages list, and
   * combine that language with the country code that you specify to determine
   * the market to return results for. If the languages list does not include a
   * supported language, Bing finds the closest language and market that
   * supports the request, or it may use an aggregated or default market for
   * the results instead of a specified one. You should use this query
   * parameter and the Accept-Language query parameter only if you specify
   * multiple languages; otherwise, you should use the mkt and setLang query
   * parameters. This parameter and the mkt query parameter are mutually
   * exclusive—do not specify both.
   */
  countryCode?: string;
  /**
   * @member {string} [market] The market where the results come from.
   * Typically, mkt is the country where the user is making the request from.
   * However, it could be a different country if the user is not located in a
   * country where Bing delivers results. The market must be in the form
   * <language code>-<country code>. For example, en-US. The string is case
   * insensitive. For a list of possible market values, see [Market
   * Codes](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-video-api-v7-reference#market-codes).
   * NOTE: If known, you are encouraged to always specify the market.
   * Specifying the market helps Bing route the request and return an
   * appropriate and optimal response. If you specify a market that is not
   * listed in [Market
   * Codes](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-video-api-v7-reference#market-codes),
   * Bing uses a best fit market code based on an internal mapping that is
   * subject to change. This parameter and the
   * [cc](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-video-api-v7-reference#cc)
   * query parameter are mutually exclusive—do not specify both.
   */
  market?: string;
  /**
   * @member {SafeSearch} [safeSearch] Filter videos for adult content. The
   * following are the possible filter values. Off: If the request is through
   * the Video Search API, the response includes adult videos and the thumbnail
   * images of the videos are clear (non-fuzzy). If the request is through the
   * Web Search API, the response includes adult videos but the thumbnail
   * images of the videos are pixelated (fuzzy). Moderate: If the request is
   * through the Video Search API, the response does not include videos with
   * adult content. If the request is through the Web Search API, the response
   * may include videos with adult content but the thumbnail images of the
   * videos are pixelated (fuzzy). Strict: Does not return videos with adult
   * content. The default is Moderate. If the request comes from a market that
   * Bing's adult policy requires that safeSearch is set to Strict, Bing
   * ignores the safeSearch value and uses Strict. If you use the site: query
   * operator, there is the chance that the response may contain adult content
   * regardless of what the safeSearch query parameter is set to. Use site:
   * only if you are aware of the content on the site and your scenario
   * supports the possibility of adult content. Possible values include: 'Off',
   * 'Moderate', 'Strict'
   */
  safeSearch?: SafeSearch;
  /**
   * @member {string} [setLang] The language to use for user interface strings.
   * Specify the language using the ISO 639-1 2-letter language code. For
   * example, the language code for English is EN. The default is EN (English).
   * Although optional, you should always specify the language. Typically, you
   * set setLang to the same language specified by mkt unless the user wants
   * the user interface strings displayed in a different language. This
   * parameter and the
   * [Accept-Language](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-video-api-v7-reference#acceptlanguage)
   * header are mutually exclusive; do not specify both. A user interface
   * string is a string that's used as a label in a user interface. There are
   * few user interface strings in the JSON response objects. Also, any links
   * to Bing.com properties in the response objects apply the specified
   * language.
   */
  setLang?: string;
  /**
   * @member {boolean} [textDecorations] A Boolean value that determines
   * whether display strings contain decoration markers such as hit
   * highlighting characters. If true, the strings may include markers. The
   * default is false. To specify whether to use Unicode characters or HTML
   * tags as the markers, see the
   * [textFormat](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-video-api-v7-reference#textformat)
   * query parameter. For information about hit highlighting, see [Hit
   * Highlighting](https://docs.microsoft.com/azure/cognitive-services/bing-news-search/hit-highlighting).
   */
  textDecorations?: boolean;
  /**
   * @member {TextFormat} [textFormat] The type of markers to use for text
   * decorations (see the textDecorations query parameter). Possible values are
   * Raw—Use Unicode characters to mark content that needs special formatting.
   * The Unicode characters are in the range E000 through E019. For example,
   * Bing uses E000 and E001 to mark the beginning and end of query terms for
   * hit highlighting. HTML—Use HTML tags to mark content that needs special
   * formatting. For example, use <b> tags to highlight query terms in display
   * strings. The default is Raw. For display strings that contain escapable
   * HTML characters such as <, >, and &, if textFormat is set to HTML, Bing
   * escapes the characters as appropriate (for example, < is escaped to &lt;).
   * Possible values include: 'Raw', 'Html'
   */
  textFormat?: TextFormat;
}

/**
 * Defines values for VideoQueryScenario.
 * Possible values include: 'List', 'SingleDominantVideo'
 * @readonly
 * @enum {string}
 */
export enum VideoQueryScenario {
  List = 'List',
  SingleDominantVideo = 'SingleDominantVideo',
}

/**
 * Defines values for ErrorCode.
 * Possible values include: 'None', 'ServerError', 'InvalidRequest',
 * 'RateLimitExceeded', 'InvalidAuthorization', 'InsufficientAuthorization'
 * @readonly
 * @enum {string}
 */
export enum ErrorCode {
  None = 'None',
  ServerError = 'ServerError',
  InvalidRequest = 'InvalidRequest',
  RateLimitExceeded = 'RateLimitExceeded',
  InvalidAuthorization = 'InvalidAuthorization',
  InsufficientAuthorization = 'InsufficientAuthorization',
}

/**
 * Defines values for ErrorSubCode.
 * Possible values include: 'UnexpectedError', 'ResourceError',
 * 'NotImplemented', 'ParameterMissing', 'ParameterInvalidValue',
 * 'HttpNotAllowed', 'Blocked', 'AuthorizationMissing',
 * 'AuthorizationRedundancy', 'AuthorizationDisabled', 'AuthorizationExpired'
 * @readonly
 * @enum {string}
 */
export enum ErrorSubCode {
  UnexpectedError = 'UnexpectedError',
  ResourceError = 'ResourceError',
  NotImplemented = 'NotImplemented',
  ParameterMissing = 'ParameterMissing',
  ParameterInvalidValue = 'ParameterInvalidValue',
  HttpNotAllowed = 'HttpNotAllowed',
  Blocked = 'Blocked',
  AuthorizationMissing = 'AuthorizationMissing',
  AuthorizationRedundancy = 'AuthorizationRedundancy',
  AuthorizationDisabled = 'AuthorizationDisabled',
  AuthorizationExpired = 'AuthorizationExpired',
}

/**
 * Defines values for Freshness.
 * Possible values include: 'Day', 'Week', 'Month'
 * @readonly
 * @enum {string}
 */
export enum Freshness {
  Day = 'Day',
  Week = 'Week',
  Month = 'Month',
}

/**
 * Defines values for VideoLength.
 * Possible values include: 'All', 'Short', 'Medium', 'Long'
 * @readonly
 * @enum {string}
 */
export enum VideoLength {
  All = 'All',
  Short = 'Short',
  Medium = 'Medium',
  Long = 'Long',
}

/**
 * Defines values for VideoPricing.
 * Possible values include: 'All', 'Free', 'Paid'
 * @readonly
 * @enum {string}
 */
export enum VideoPricing {
  All = 'All',
  Free = 'Free',
  Paid = 'Paid',
}

/**
 * Defines values for VideoResolution.
 * Possible values include: 'All', 'SD480p', 'HD720p', 'HD1080p'
 * @readonly
 * @enum {string}
 */
export enum VideoResolution {
  All = 'All',
  SD480p = 'SD480p',
  HD720p = 'HD720p',
  HD1080p = 'HD1080p',
}

/**
 * Defines values for SafeSearch.
 * Possible values include: 'Off', 'Moderate', 'Strict'
 * @readonly
 * @enum {string}
 */
export enum SafeSearch {
  Off = 'Off',
  Moderate = 'Moderate',
  Strict = 'Strict',
}

/**
 * Defines values for TextFormat.
 * Possible values include: 'Raw', 'Html'
 * @readonly
 * @enum {string}
 */
export enum TextFormat {
  Raw = 'Raw',
  Html = 'Html',
}

/**
 * Defines values for VideoInsightModule.
 * Possible values include: 'All', 'RelatedVideos', 'VideoResult'
 * @readonly
 * @enum {string}
 */
export enum VideoInsightModule {
  All = 'All',
  RelatedVideos = 'RelatedVideos',
  VideoResult = 'VideoResult',
}

/**
 * Contains response data for the search operation.
 */
export type VideosSearchResponse = Videos & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Videos;
    };
};

/**
 * Contains response data for the details operation.
 */
export type VideosDetailsResponse = VideoDetails & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VideoDetails;
    };
};

/**
 * Contains response data for the trending operation.
 */
export type VideosTrendingResponse = TrendingVideos & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TrendingVideos;
    };
};
