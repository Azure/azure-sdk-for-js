/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/publishedArtifactsMappers";
import * as Parameters from "../models/parameters";
import { BlueprintManagementClientContext } from "../blueprintManagementClientContext";

/** Class representing a PublishedArtifacts. */
export class PublishedArtifacts {
  private readonly client: BlueprintManagementClientContext;

  /**
   * Create a PublishedArtifacts.
   * @param {BlueprintManagementClientContext} client Reference to the service client.
   */
  constructor(client: BlueprintManagementClientContext) {
    this.client = client;
  }

  /**
   * Get an artifact for a published blueprint definition.
   * @param scope The scope of the resource. Valid scopes are: management group (format:
   * '/providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format:
   * '/subscriptions/{subscriptionId}'). For blueprint assignments management group scope is reserved
   * for future use.
   * @param blueprintName Name of the blueprint definition.
   * @param versionId Version of the published blueprint definition.
   * @param artifactName Name of the blueprint artifact.
   * @param [options] The optional parameters
   * @returns Promise<Models.PublishedArtifactsGetResponse>
   */
  get(scope: string, blueprintName: string, versionId: string, artifactName: string, options?: msRest.RequestOptionsBase): Promise<Models.PublishedArtifactsGetResponse>;
  /**
   * @param scope The scope of the resource. Valid scopes are: management group (format:
   * '/providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format:
   * '/subscriptions/{subscriptionId}'). For blueprint assignments management group scope is reserved
   * for future use.
   * @param blueprintName Name of the blueprint definition.
   * @param versionId Version of the published blueprint definition.
   * @param artifactName Name of the blueprint artifact.
   * @param callback The callback
   */
  get(scope: string, blueprintName: string, versionId: string, artifactName: string, callback: msRest.ServiceCallback<Models.ArtifactUnion>): void;
  /**
   * @param scope The scope of the resource. Valid scopes are: management group (format:
   * '/providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format:
   * '/subscriptions/{subscriptionId}'). For blueprint assignments management group scope is reserved
   * for future use.
   * @param blueprintName Name of the blueprint definition.
   * @param versionId Version of the published blueprint definition.
   * @param artifactName Name of the blueprint artifact.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(scope: string, blueprintName: string, versionId: string, artifactName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ArtifactUnion>): void;
  get(scope: string, blueprintName: string, versionId: string, artifactName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ArtifactUnion>, callback?: msRest.ServiceCallback<Models.ArtifactUnion>): Promise<Models.PublishedArtifactsGetResponse> {
    return this.client.sendOperationRequest(
      {
        scope,
        blueprintName,
        versionId,
        artifactName,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.PublishedArtifactsGetResponse>;
  }

  /**
   * List artifacts for a version of a published blueprint definition.
   * @param scope The scope of the resource. Valid scopes are: management group (format:
   * '/providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format:
   * '/subscriptions/{subscriptionId}'). For blueprint assignments management group scope is reserved
   * for future use.
   * @param blueprintName Name of the blueprint definition.
   * @param versionId Version of the published blueprint definition.
   * @param [options] The optional parameters
   * @returns Promise<Models.PublishedArtifactsListResponse>
   */
  list(scope: string, blueprintName: string, versionId: string, options?: msRest.RequestOptionsBase): Promise<Models.PublishedArtifactsListResponse>;
  /**
   * @param scope The scope of the resource. Valid scopes are: management group (format:
   * '/providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format:
   * '/subscriptions/{subscriptionId}'). For blueprint assignments management group scope is reserved
   * for future use.
   * @param blueprintName Name of the blueprint definition.
   * @param versionId Version of the published blueprint definition.
   * @param callback The callback
   */
  list(scope: string, blueprintName: string, versionId: string, callback: msRest.ServiceCallback<Models.ArtifactList>): void;
  /**
   * @param scope The scope of the resource. Valid scopes are: management group (format:
   * '/providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format:
   * '/subscriptions/{subscriptionId}'). For blueprint assignments management group scope is reserved
   * for future use.
   * @param blueprintName Name of the blueprint definition.
   * @param versionId Version of the published blueprint definition.
   * @param options The optional parameters
   * @param callback The callback
   */
  list(scope: string, blueprintName: string, versionId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ArtifactList>): void;
  list(scope: string, blueprintName: string, versionId: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ArtifactList>, callback?: msRest.ServiceCallback<Models.ArtifactList>): Promise<Models.PublishedArtifactsListResponse> {
    return this.client.sendOperationRequest(
      {
        scope,
        blueprintName,
        versionId,
        options
      },
      listOperationSpec,
      callback) as Promise<Models.PublishedArtifactsListResponse>;
  }

  /**
   * List artifacts for a version of a published blueprint definition.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.PublishedArtifactsListNextResponse>
   */
  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.PublishedArtifactsListNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ArtifactList>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ArtifactList>): void;
  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ArtifactList>, callback?: msRest.ServiceCallback<Models.ArtifactList>): Promise<Models.PublishedArtifactsListNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listNextOperationSpec,
      callback) as Promise<Models.PublishedArtifactsListNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "{scope}/providers/Microsoft.Blueprint/blueprints/{blueprintName}/versions/{versionId}/artifacts/{artifactName}",
  urlParameters: [
    Parameters.scope,
    Parameters.blueprintName,
    Parameters.versionId,
    Parameters.artifactName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.Artifact
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "{scope}/providers/Microsoft.Blueprint/blueprints/{blueprintName}/versions/{versionId}/artifacts",
  urlParameters: [
    Parameters.scope,
    Parameters.blueprintName,
    Parameters.versionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ArtifactList
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ArtifactList
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};
