/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/assignmentOperationsMappers";
import * as Parameters from "../models/parameters";
import { BlueprintManagementClientContext } from "../blueprintManagementClientContext";

/** Class representing a AssignmentOperations. */
export class AssignmentOperations {
  private readonly client: BlueprintManagementClientContext;

  /**
   * Create a AssignmentOperations.
   * @param {BlueprintManagementClientContext} client Reference to the service client.
   */
  constructor(client: BlueprintManagementClientContext) {
    this.client = client;
  }

  /**
   * List operations for given blueprint assignment within a subscription.
   * @param scope The scope of the resource. Valid scopes are: management group (format:
   * '/providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format:
   * '/subscriptions/{subscriptionId}'). For blueprint assignments management group scope is reserved
   * for future use.
   * @param assignmentName Name of the blueprint assignment.
   * @param [options] The optional parameters
   * @returns Promise<Models.AssignmentOperationsListResponse>
   */
  list(scope: string, assignmentName: string, options?: msRest.RequestOptionsBase): Promise<Models.AssignmentOperationsListResponse>;
  /**
   * @param scope The scope of the resource. Valid scopes are: management group (format:
   * '/providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format:
   * '/subscriptions/{subscriptionId}'). For blueprint assignments management group scope is reserved
   * for future use.
   * @param assignmentName Name of the blueprint assignment.
   * @param callback The callback
   */
  list(scope: string, assignmentName: string, callback: msRest.ServiceCallback<Models.AssignmentOperationList>): void;
  /**
   * @param scope The scope of the resource. Valid scopes are: management group (format:
   * '/providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format:
   * '/subscriptions/{subscriptionId}'). For blueprint assignments management group scope is reserved
   * for future use.
   * @param assignmentName Name of the blueprint assignment.
   * @param options The optional parameters
   * @param callback The callback
   */
  list(scope: string, assignmentName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.AssignmentOperationList>): void;
  list(scope: string, assignmentName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.AssignmentOperationList>, callback?: msRest.ServiceCallback<Models.AssignmentOperationList>): Promise<Models.AssignmentOperationsListResponse> {
    return this.client.sendOperationRequest(
      {
        scope,
        assignmentName,
        options
      },
      listOperationSpec,
      callback) as Promise<Models.AssignmentOperationsListResponse>;
  }

  /**
   * Get a blueprint assignment operation.
   * @param scope The scope of the resource. Valid scopes are: management group (format:
   * '/providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format:
   * '/subscriptions/{subscriptionId}'). For blueprint assignments management group scope is reserved
   * for future use.
   * @param assignmentName Name of the blueprint assignment.
   * @param assignmentOperationName Name of the blueprint assignment operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.AssignmentOperationsGetResponse>
   */
  get(scope: string, assignmentName: string, assignmentOperationName: string, options?: msRest.RequestOptionsBase): Promise<Models.AssignmentOperationsGetResponse>;
  /**
   * @param scope The scope of the resource. Valid scopes are: management group (format:
   * '/providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format:
   * '/subscriptions/{subscriptionId}'). For blueprint assignments management group scope is reserved
   * for future use.
   * @param assignmentName Name of the blueprint assignment.
   * @param assignmentOperationName Name of the blueprint assignment operation.
   * @param callback The callback
   */
  get(scope: string, assignmentName: string, assignmentOperationName: string, callback: msRest.ServiceCallback<Models.AssignmentOperation>): void;
  /**
   * @param scope The scope of the resource. Valid scopes are: management group (format:
   * '/providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format:
   * '/subscriptions/{subscriptionId}'). For blueprint assignments management group scope is reserved
   * for future use.
   * @param assignmentName Name of the blueprint assignment.
   * @param assignmentOperationName Name of the blueprint assignment operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(scope: string, assignmentName: string, assignmentOperationName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.AssignmentOperation>): void;
  get(scope: string, assignmentName: string, assignmentOperationName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.AssignmentOperation>, callback?: msRest.ServiceCallback<Models.AssignmentOperation>): Promise<Models.AssignmentOperationsGetResponse> {
    return this.client.sendOperationRequest(
      {
        scope,
        assignmentName,
        assignmentOperationName,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.AssignmentOperationsGetResponse>;
  }

  /**
   * List operations for given blueprint assignment within a subscription.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.AssignmentOperationsListNextResponse>
   */
  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.AssignmentOperationsListNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.AssignmentOperationList>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.AssignmentOperationList>): void;
  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.AssignmentOperationList>, callback?: msRest.ServiceCallback<Models.AssignmentOperationList>): Promise<Models.AssignmentOperationsListNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listNextOperationSpec,
      callback) as Promise<Models.AssignmentOperationsListNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "{scope}/providers/Microsoft.Blueprint/blueprintAssignments/{assignmentName}/assignmentOperations",
  urlParameters: [
    Parameters.scope,
    Parameters.assignmentName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.AssignmentOperationList
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "{scope}/providers/Microsoft.Blueprint/blueprintAssignments/{assignmentName}/assignmentOperations/{assignmentOperationName}",
  urlParameters: [
    Parameters.scope,
    Parameters.assignmentName,
    Parameters.assignmentOperationName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.AssignmentOperation
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.AssignmentOperationList
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};
