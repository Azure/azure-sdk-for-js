/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('ms-rest-js')) :
    typeof define === 'function' && define.amd ? define(['exports', 'ms-rest-js'], factory) :
    (factory((global.Azure = global.Azure || {}, global.Azure.Loganalytics = {}),global.msRest));
}(this, (function (exports,msRest) { 'use strict';

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */
    /* global Reflect, Promise */

    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };

    function __extends(d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }

    var __assign = function() {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */

    var index = /*#__PURE__*/Object.freeze({

    });

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    var QueryBody = {
        serializedName: "queryBody",
        type: {
            name: "Composite",
            className: "QueryBody",
            modelProperties: {
                query: {
                    required: true,
                    serializedName: "query",
                    type: {
                        name: "String"
                    }
                },
                timespan: {
                    serializedName: "timespan",
                    type: {
                        name: "String"
                    }
                },
                workspaces: {
                    serializedName: "workspaces",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                }
            }
        }
    };
    var Column = {
        serializedName: "column",
        type: {
            name: "Composite",
            className: "Column",
            modelProperties: {
                name: {
                    serializedName: "name",
                    type: {
                        name: "String"
                    }
                },
                type: {
                    serializedName: "type",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var Table = {
        serializedName: "table",
        type: {
            name: "Composite",
            className: "Table",
            modelProperties: {
                name: {
                    required: true,
                    serializedName: "name",
                    type: {
                        name: "String"
                    }
                },
                columns: {
                    required: true,
                    serializedName: "columns",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "Column"
                            }
                        }
                    }
                },
                rows: {
                    required: true,
                    serializedName: "rows",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Sequence",
                                element: {
                                    type: {
                                        name: "String"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    };
    var QueryResults = {
        serializedName: "queryResults",
        type: {
            name: "Composite",
            className: "QueryResults",
            modelProperties: {
                tables: {
                    required: true,
                    serializedName: "tables",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "Table"
                            }
                        }
                    }
                }
            }
        }
    };
    var ErrorDetail = {
        serializedName: "errorDetail",
        type: {
            name: "Composite",
            className: "ErrorDetail",
            modelProperties: {
                code: {
                    required: true,
                    serializedName: "code",
                    type: {
                        name: "String"
                    }
                },
                message: {
                    required: true,
                    serializedName: "message",
                    type: {
                        name: "String"
                    }
                },
                target: {
                    serializedName: "target",
                    type: {
                        name: "String"
                    }
                },
                value: {
                    serializedName: "value",
                    type: {
                        name: "String"
                    }
                },
                resources: {
                    serializedName: "resources",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                },
                additionalProperties: {
                    serializedName: "additionalProperties",
                    type: {
                        name: "Object"
                    }
                }
            }
        }
    };
    var ErrorInfo = {
        serializedName: "errorInfo",
        type: {
            name: "Composite",
            className: "ErrorInfo",
            modelProperties: {
                code: {
                    required: true,
                    serializedName: "code",
                    type: {
                        name: "String"
                    }
                },
                message: {
                    required: true,
                    serializedName: "message",
                    type: {
                        name: "String"
                    }
                },
                details: {
                    serializedName: "details",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "ErrorDetail"
                            }
                        }
                    }
                },
                innererror: {
                    serializedName: "innererror",
                    type: {
                        name: "Composite",
                        className: "ErrorInfo"
                    }
                },
                additionalProperties: {
                    serializedName: "additionalProperties",
                    type: {
                        name: "Object"
                    }
                }
            }
        }
    };
    var ErrorResponse = {
        serializedName: "errorResponse",
        type: {
            name: "Composite",
            className: "ErrorResponse",
            modelProperties: {
                error: {
                    required: true,
                    serializedName: "error",
                    type: {
                        name: "Composite",
                        className: "ErrorInfo"
                    }
                }
            }
        }
    };

    var mappers = /*#__PURE__*/Object.freeze({
        QueryBody: QueryBody,
        Column: Column,
        Table: Table,
        QueryResults: QueryResults,
        ErrorDetail: ErrorDetail,
        ErrorInfo: ErrorInfo,
        ErrorResponse: ErrorResponse
    });

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */

    var Mappers = /*#__PURE__*/Object.freeze({
        QueryBody: QueryBody,
        QueryResults: QueryResults,
        Table: Table,
        Column: Column,
        ErrorResponse: ErrorResponse,
        ErrorInfo: ErrorInfo,
        ErrorDetail: ErrorDetail
    });

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    var workspaceId = {
        parameterPath: "workspaceId",
        mapper: {
            required: true,
            serializedName: "workspaceId",
            type: {
                name: "String"
            }
        }
    };

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    /** Class representing a Query. */
    var Query = /** @class */ (function () {
        /**
         * Create a Query.
         * @param {LogAnalyticsClientContext} client Reference to the service client.
         */
        function Query(client) {
            this.client = client;
        }
        Query.prototype.execute = function (workspaceId$$1, body, options, callback) {
            return this.client.sendOperationRequest({
                workspaceId: workspaceId$$1,
                body: body,
                options: options
            }, executeOperationSpec, callback);
        };
        return Query;
    }());
    // Operation Specifications
    var serializer = new msRest.Serializer(Mappers);
    var executeOperationSpec = {
        httpMethod: "POST",
        path: "v1/workspaces/{workspaceId}/query",
        urlParameters: [
            workspaceId
        ],
        requestBody: {
            parameterPath: "body",
            mapper: __assign({}, QueryBody, { required: true })
        },
        responses: {
            200: {
                bodyMapper: QueryResults
            },
            default: {
                bodyMapper: ErrorResponse
            }
        },
        serializer: serializer
    };

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    var packageName = "@azure/loganalytics";
    var packageVersion = "1.0.0";
    var LogAnalyticsClientContext = /** @class */ (function (_super) {
        __extends(LogAnalyticsClientContext, _super);
        /**
         * Initializes a new instance of the LogAnalyticsClientContext class.
         * @param credentials Subscription credentials which uniquely identify client subscription.
         * @param [options] The parameter options
         */
        function LogAnalyticsClientContext(credentials, options) {
            var _this = this;
            if (credentials === null || credentials === undefined) {
                throw new Error('\'credentials\' cannot be null.');
            }
            if (!options) {
                options = {};
            }
            _this = _super.call(this, credentials, options) || this;
            _this.baseUri = options.baseUri || _this.baseUri || "https://api.loganalytics.io";
            _this.requestContentType = "application/json; charset=utf-8";
            _this.credentials = credentials;
            _this.addUserAgentInfo(packageName + "/" + packageVersion);
            return _this;
        }
        return LogAnalyticsClientContext;
    }(msRest.ServiceClient));

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    var LogAnalyticsClient = /** @class */ (function (_super) {
        __extends(LogAnalyticsClient, _super);
        /**
         * Initializes a new instance of the LogAnalyticsClient class.
         * @param credentials Subscription credentials which uniquely identify client subscription.
         * @param [options] The parameter options
         */
        function LogAnalyticsClient(credentials, options) {
            var _this = _super.call(this, credentials, options) || this;
            _this.query = new Query(_this);
            return _this;
        }
        return LogAnalyticsClient;
    }(LogAnalyticsClientContext));

    exports.LogAnalyticsClient = LogAnalyticsClient;
    exports.LogAnalyticsClientContext = LogAnalyticsClientContext;
    exports.LogAnalyticsModels = index;
    exports.LogAnalyticsMappers = mappers;
    exports.Query = Query;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=loganalytics.js.map
