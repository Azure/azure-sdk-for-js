/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { CloudErrorMapper, BaseResourceMapper } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export const CloudError = CloudErrorMapper;
export const BaseResource = BaseResourceMapper;

export const OperationDisplay: msRest.CompositeMapper = {
  serializedName: "Operation_display",
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        serializedName: "provider",
        type: {
          name: "String"
        }
      },
      resource: {
        serializedName: "resource",
        type: {
          name: "String"
        }
      },
      operation: {
        serializedName: "operation",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Operation: msRest.CompositeMapper = {
  serializedName: "Operation",
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay"
        }
      }
    }
  }
};

export const SolutionProperties: msRest.CompositeMapper = {
  serializedName: "SolutionProperties",
  type: {
    name: "Composite",
    className: "SolutionProperties",
    modelProperties: {
      workspaceResourceId: {
        required: true,
        serializedName: "workspaceResourceId",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "provisioningState",
        type: {
          name: "String"
        }
      },
      containedResources: {
        serializedName: "containedResources",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      referencedResources: {
        serializedName: "referencedResources",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ManagementAssociationProperties: msRest.CompositeMapper = {
  serializedName: "ManagementAssociationProperties",
  type: {
    name: "Composite",
    className: "ManagementAssociationProperties",
    modelProperties: {
      applicationId: {
        required: true,
        serializedName: "applicationId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ArmTemplateParameter: msRest.CompositeMapper = {
  serializedName: "ArmTemplateParameter",
  type: {
    name: "Composite",
    className: "ArmTemplateParameter",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ManagementConfigurationProperties: msRest.CompositeMapper = {
  serializedName: "ManagementConfigurationProperties",
  type: {
    name: "Composite",
    className: "ManagementConfigurationProperties",
    modelProperties: {
      applicationId: {
        serializedName: "applicationId",
        type: {
          name: "String"
        }
      },
      parentResourceType: {
        required: true,
        serializedName: "parentResourceType",
        type: {
          name: "String"
        }
      },
      parameters: {
        required: true,
        serializedName: "parameters",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ArmTemplateParameter"
            }
          }
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "provisioningState",
        type: {
          name: "String"
        }
      },
      template: {
        required: true,
        serializedName: "template",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const SolutionPlan: msRest.CompositeMapper = {
  serializedName: "SolutionPlan",
  type: {
    name: "Composite",
    className: "SolutionPlan",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      publisher: {
        serializedName: "publisher",
        type: {
          name: "String"
        }
      },
      promotionCode: {
        serializedName: "promotionCode",
        type: {
          name: "String"
        }
      },
      product: {
        serializedName: "product",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Solution: msRest.CompositeMapper = {
  serializedName: "Solution",
  type: {
    name: "Composite",
    className: "Solution",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      plan: {
        serializedName: "plan",
        type: {
          name: "Composite",
          className: "SolutionPlan"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "SolutionProperties"
        }
      }
    }
  }
};

export const SolutionPropertiesList: msRest.CompositeMapper = {
  serializedName: "SolutionPropertiesList",
  type: {
    name: "Composite",
    className: "SolutionPropertiesList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Solution"
            }
          }
        }
      }
    }
  }
};

export const ManagementAssociation: msRest.CompositeMapper = {
  serializedName: "ManagementAssociation",
  type: {
    name: "Composite",
    className: "ManagementAssociation",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "ManagementAssociationProperties"
        }
      }
    }
  }
};

export const ManagementAssociationPropertiesList: msRest.CompositeMapper = {
  serializedName: "ManagementAssociationPropertiesList",
  type: {
    name: "Composite",
    className: "ManagementAssociationPropertiesList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ManagementAssociation"
            }
          }
        }
      }
    }
  }
};

export const ManagementConfiguration: msRest.CompositeMapper = {
  serializedName: "ManagementConfiguration",
  type: {
    name: "Composite",
    className: "ManagementConfiguration",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "ManagementConfigurationProperties"
        }
      }
    }
  }
};

export const ManagementConfigurationPropertiesList: msRest.CompositeMapper = {
  serializedName: "ManagementConfigurationPropertiesList",
  type: {
    name: "Composite",
    className: "ManagementConfigurationPropertiesList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ManagementConfiguration"
            }
          }
        }
      }
    }
  }
};

export const CodeMessageErrorError: msRest.CompositeMapper = {
  serializedName: "CodeMessageError_error",
  type: {
    name: "Composite",
    className: "CodeMessageErrorError",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CodeMessageError: msRest.CompositeMapper = {
  serializedName: "CodeMessageError",
  type: {
    name: "Composite",
    className: "CodeMessageError",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "CodeMessageErrorError"
        }
      }
    }
  }
};

export const OperationListResult: msRest.CompositeMapper = {
  serializedName: "OperationListResult",
  type: {
    name: "Composite",
    className: "OperationListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation"
            }
          }
        }
      }
    }
  }
};
