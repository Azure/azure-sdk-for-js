/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "ms-rest-azure-js";
import * as msRest from "ms-rest-js";

export { BaseResource, CloudError };


/**
 * @interface
 * An interface representing Resource.
 * The Resource definition for other than namespace.
 *
 * @extends BaseResource
 */
export interface Resource extends BaseResource {
  /**
   * @member {string} [id] Resource Id
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [name] Resource name
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [type] Resource type
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: string;
}

/**
 * @interface
 * An interface representing TrackedResource.
 * The Resource definition.
 *
 * @extends Resource
 */
export interface TrackedResource extends Resource {
  /**
   * @member {string} location The Geo-location where the resource lives
   */
  location: string;
  /**
   * @member {{ [propertyName: string]: string }} [tags] Resource tags
   */
  tags?: { [propertyName: string]: string };
}

/**
 * @interface
 * An interface representing ResourceNamespacePatch.
 * The Resource definition.
 *
 * @extends Resource
 */
export interface ResourceNamespacePatch extends Resource {
  /**
   * @member {string} [location] Resource location
   */
  location?: string;
  /**
   * @member {{ [propertyName: string]: string }} [tags] Resource tags
   */
  tags?: { [propertyName: string]: string };
}

/**
 * @interface
 * An interface representing SBSku.
 * SKU of the namespace.
 *
 */
export interface SBSku {
  /**
   * @member {SkuName} name Name of this SKU. Possible values include: 'Basic',
   * 'Standard', 'Premium'
   */
  name: SkuName;
  /**
   * @member {SkuTier} [tier] The billing tier of this particular SKU. Possible
   * values include: 'Basic', 'Standard', 'Premium'
   */
  tier?: SkuTier;
  /**
   * @member {number} [capacity] The specified messaging units for the tier.
   * For Premium tier, capacity are 1,2 and 4.
   */
  capacity?: number;
}

/**
 * @interface
 * An interface representing SBNamespace.
 * Description of a namespace resource.
 *
 * @extends TrackedResource
 */
export interface SBNamespace extends TrackedResource {
  /**
   * @member {SBSku} [sku] Porperties of Sku
   */
  sku?: SBSku;
  /**
   * @member {string} [provisioningState] Provisioning state of the namespace.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provisioningState?: string;
  /**
   * @member {Date} [createdAt] The time the namespace was created.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly createdAt?: Date;
  /**
   * @member {Date} [updatedAt] The time the namespace was updated.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly updatedAt?: Date;
  /**
   * @member {string} [serviceBusEndpoint] Endpoint you can use to perform
   * Service Bus operations.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly serviceBusEndpoint?: string;
  /**
   * @member {string} [metricId] Identifier for Azure Insights metrics
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly metricId?: string;
}

/**
 * @interface
 * An interface representing SBNamespaceUpdateParameters.
 * Description of a namespace resource.
 *
 * @extends ResourceNamespacePatch
 */
export interface SBNamespaceUpdateParameters extends ResourceNamespacePatch {
  /**
   * @member {SBSku} [sku] Porperties of Sku
   */
  sku?: SBSku;
  /**
   * @member {string} [provisioningState] Provisioning state of the namespace.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provisioningState?: string;
  /**
   * @member {Date} [createdAt] The time the namespace was created.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly createdAt?: Date;
  /**
   * @member {Date} [updatedAt] The time the namespace was updated.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly updatedAt?: Date;
  /**
   * @member {string} [serviceBusEndpoint] Endpoint you can use to perform
   * Service Bus operations.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly serviceBusEndpoint?: string;
  /**
   * @member {string} [metricId] Identifier for Azure Insights metrics
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly metricId?: string;
}

/**
 * @interface
 * An interface representing SBAuthorizationRule.
 * Description of a namespace authorization rule.
 *
 * @extends Resource
 */
export interface SBAuthorizationRule extends Resource {
  /**
   * @member {AccessRights[]} rights The rights associated with the rule.
   */
  rights: AccessRights[];
}

/**
 * @interface
 * An interface representing AuthorizationRuleProperties.
 * AuthorizationRule properties.
 *
 */
export interface AuthorizationRuleProperties {
  /**
   * @member {AccessRights[]} rights The rights associated with the rule.
   */
  rights: AccessRights[];
}

/**
 * @interface
 * An interface representing AccessKeys.
 * Namespace/ServiceBus Connection String
 *
 */
export interface AccessKeys {
  /**
   * @member {string} [primaryConnectionString] Primary connection string of
   * the created namespace authorization rule.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly primaryConnectionString?: string;
  /**
   * @member {string} [secondaryConnectionString] Secondary connection string
   * of the created namespace authorization rule.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly secondaryConnectionString?: string;
  /**
   * @member {string} [aliasPrimaryConnectionString] Primary connection string
   * of the alias if GEO DR is enabled
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly aliasPrimaryConnectionString?: string;
  /**
   * @member {string} [aliasSecondaryConnectionString] Secondary  connection
   * string of the alias if GEO DR is enabled
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly aliasSecondaryConnectionString?: string;
  /**
   * @member {string} [primaryKey] A base64-encoded 256-bit primary key for
   * signing and validating the SAS token.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly primaryKey?: string;
  /**
   * @member {string} [secondaryKey] A base64-encoded 256-bit primary key for
   * signing and validating the SAS token.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly secondaryKey?: string;
  /**
   * @member {string} [keyName] A string that describes the authorization rule.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly keyName?: string;
}

/**
 * @interface
 * An interface representing RegenerateAccessKeyParameters.
 * Parameters supplied to the Regenerate Authorization Rule operation,
 * specifies which key neeeds to be reset.
 *
 */
export interface RegenerateAccessKeyParameters {
  /**
   * @member {KeyType} keyType The access key to regenerate. Possible values
   * include: 'PrimaryKey', 'SecondaryKey'
   */
  keyType: KeyType;
  /**
   * @member {string} [key] Optional, if the key value provided, is reset for
   * KeyType value or autogenerate Key value set for keyType
   */
  key?: string;
}

/**
 * @interface
 * An interface representing MessageCountDetails.
 * Message Count Details.
 *
 */
export interface MessageCountDetails {
  /**
   * @member {number} [activeMessageCount] Number of active messages in the
   * queue, topic, or subscription.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly activeMessageCount?: number;
  /**
   * @member {number} [deadLetterMessageCount] Number of messages that are dead
   * lettered.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly deadLetterMessageCount?: number;
  /**
   * @member {number} [scheduledMessageCount] Number of scheduled messages.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly scheduledMessageCount?: number;
  /**
   * @member {number} [transferMessageCount] Number of messages transferred to
   * another queue, topic, or subscription.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly transferMessageCount?: number;
  /**
   * @member {number} [transferDeadLetterMessageCount] Number of messages
   * transferred into dead letters.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly transferDeadLetterMessageCount?: number;
}

/**
 * @interface
 * An interface representing SBQueue.
 * Description of queue Resource.
 *
 * @extends Resource
 */
export interface SBQueue extends Resource {
  /**
   * @member {MessageCountDetails} [countDetails] Message Count Details.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly countDetails?: MessageCountDetails;
  /**
   * @member {Date} [createdAt] The exact time the message was created.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly createdAt?: Date;
  /**
   * @member {Date} [updatedAt] The exact time the message was updated.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly updatedAt?: Date;
  /**
   * @member {Date} [accessedAt] Last time a message was sent, or the last time
   * there was a receive request to this queue.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly accessedAt?: Date;
  /**
   * @member {number} [sizeInBytes] The size of the queue, in bytes.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly sizeInBytes?: number;
  /**
   * @member {number} [messageCount] The number of messages in the queue.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly messageCount?: number;
  /**
   * @member {string} [lockDuration] ISO 8601 timespan duration of a peek-lock;
   * that is, the amount of time that the message is locked for other
   * receivers. The maximum value for LockDuration is 5 minutes; the default
   * value is 1 minute.
   */
  lockDuration?: string;
  /**
   * @member {number} [maxSizeInMegabytes] The maximum size of the queue in
   * megabytes, which is the size of memory allocated for the queue. Default is
   * 1024.
   */
  maxSizeInMegabytes?: number;
  /**
   * @member {boolean} [requiresDuplicateDetection] A value indicating if this
   * queue requires duplicate detection.
   */
  requiresDuplicateDetection?: boolean;
  /**
   * @member {boolean} [requiresSession] A value that indicates whether the
   * queue supports the concept of sessions.
   */
  requiresSession?: boolean;
  /**
   * @member {string} [defaultMessageTimeToLive] ISO 8601 default message
   * timespan to live value. This is the duration after which the message
   * expires, starting from when the message is sent to Service Bus. This is
   * the default value used when TimeToLive is not set on a message itself.
   */
  defaultMessageTimeToLive?: string;
  /**
   * @member {boolean} [deadLetteringOnMessageExpiration] A value that
   * indicates whether this queue has dead letter support when a message
   * expires.
   */
  deadLetteringOnMessageExpiration?: boolean;
  /**
   * @member {string} [duplicateDetectionHistoryTimeWindow] ISO 8601 timeSpan
   * structure that defines the duration of the duplicate detection history.
   * The default value is 10 minutes.
   */
  duplicateDetectionHistoryTimeWindow?: string;
  /**
   * @member {number} [maxDeliveryCount] The maximum delivery count. A message
   * is automatically deadlettered after this number of deliveries. default
   * value is 10.
   */
  maxDeliveryCount?: number;
  /**
   * @member {EntityStatus} [status] Enumerates the possible values for the
   * status of a messaging entity. Possible values include: 'Active',
   * 'Disabled', 'Restoring', 'SendDisabled', 'ReceiveDisabled', 'Creating',
   * 'Deleting', 'Renaming', 'Unknown'
   */
  status?: EntityStatus;
  /**
   * @member {boolean} [enableBatchedOperations] Value that indicates whether
   * server-side batched operations are enabled.
   */
  enableBatchedOperations?: boolean;
  /**
   * @member {string} [autoDeleteOnIdle] ISO 8061 timeSpan idle interval after
   * which the queue is automatically deleted. The minimum duration is 5
   * minutes.
   */
  autoDeleteOnIdle?: string;
  /**
   * @member {boolean} [enablePartitioning] A value that indicates whether the
   * queue is to be partitioned across multiple message brokers.
   */
  enablePartitioning?: boolean;
  /**
   * @member {boolean} [enableExpress] A value that indicates whether Express
   * Entities are enabled. An express queue holds a message in memory
   * temporarily before writing it to persistent storage.
   */
  enableExpress?: boolean;
  /**
   * @member {string} [forwardTo] Queue/Topic name to forward the messages
   */
  forwardTo?: string;
  /**
   * @member {string} [forwardDeadLetteredMessagesTo] Queue/Topic name to
   * forward the Dead Letter message
   */
  forwardDeadLetteredMessagesTo?: string;
}

/**
 * @interface
 * An interface representing SBTopic.
 * Description of topic resource.
 *
 * @extends Resource
 */
export interface SBTopic extends Resource {
  /**
   * @member {number} [sizeInBytes] Size of the topic, in bytes.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly sizeInBytes?: number;
  /**
   * @member {Date} [createdAt] Exact time the message was created.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly createdAt?: Date;
  /**
   * @member {Date} [updatedAt] The exact time the message was updated.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly updatedAt?: Date;
  /**
   * @member {Date} [accessedAt] Last time the message was sent, or a request
   * was received, for this topic.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly accessedAt?: Date;
  /**
   * @member {number} [subscriptionCount] Number of subscriptions.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly subscriptionCount?: number;
  /**
   * @member {MessageCountDetails} [countDetails] Message count deatils
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly countDetails?: MessageCountDetails;
  /**
   * @member {string} [defaultMessageTimeToLive] ISO 8601 Default message
   * timespan to live value. This is the duration after which the message
   * expires, starting from when the message is sent to Service Bus. This is
   * the default value used when TimeToLive is not set on a message itself.
   */
  defaultMessageTimeToLive?: string;
  /**
   * @member {number} [maxSizeInMegabytes] Maximum size of the topic in
   * megabytes, which is the size of the memory allocated for the topic.
   * Default is 1024.
   */
  maxSizeInMegabytes?: number;
  /**
   * @member {boolean} [requiresDuplicateDetection] Value indicating if this
   * topic requires duplicate detection.
   */
  requiresDuplicateDetection?: boolean;
  /**
   * @member {string} [duplicateDetectionHistoryTimeWindow] ISO8601 timespan
   * structure that defines the duration of the duplicate detection history.
   * The default value is 10 minutes.
   */
  duplicateDetectionHistoryTimeWindow?: string;
  /**
   * @member {boolean} [enableBatchedOperations] Value that indicates whether
   * server-side batched operations are enabled.
   */
  enableBatchedOperations?: boolean;
  /**
   * @member {EntityStatus} [status] Enumerates the possible values for the
   * status of a messaging entity. Possible values include: 'Active',
   * 'Disabled', 'Restoring', 'SendDisabled', 'ReceiveDisabled', 'Creating',
   * 'Deleting', 'Renaming', 'Unknown'
   */
  status?: EntityStatus;
  /**
   * @member {boolean} [supportOrdering] Value that indicates whether the topic
   * supports ordering.
   */
  supportOrdering?: boolean;
  /**
   * @member {string} [autoDeleteOnIdle] ISO 8601 timespan idle interval after
   * which the topic is automatically deleted. The minimum duration is 5
   * minutes.
   */
  autoDeleteOnIdle?: string;
  /**
   * @member {boolean} [enablePartitioning] Value that indicates whether the
   * topic to be partitioned across multiple message brokers is enabled.
   */
  enablePartitioning?: boolean;
  /**
   * @member {boolean} [enableExpress] Value that indicates whether Express
   * Entities are enabled. An express topic holds a message in memory
   * temporarily before writing it to persistent storage.
   */
  enableExpress?: boolean;
}

/**
 * @interface
 * An interface representing SBSubscription.
 * Description of subscription resource.
 *
 * @extends Resource
 */
export interface SBSubscription extends Resource {
  /**
   * @member {number} [messageCount] Number of messages.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly messageCount?: number;
  /**
   * @member {Date} [createdAt] Exact time the message was created.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly createdAt?: Date;
  /**
   * @member {Date} [accessedAt] Last time there was a receive request to this
   * subscription.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly accessedAt?: Date;
  /**
   * @member {Date} [updatedAt] The exact time the message was updated.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly updatedAt?: Date;
  /**
   * @member {MessageCountDetails} [countDetails] Message count details
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly countDetails?: MessageCountDetails;
  /**
   * @member {string} [lockDuration] ISO 8061 lock duration timespan for the
   * subscription. The default value is 1 minute.
   */
  lockDuration?: string;
  /**
   * @member {boolean} [requiresSession] Value indicating if a subscription
   * supports the concept of sessions.
   */
  requiresSession?: boolean;
  /**
   * @member {string} [defaultMessageTimeToLive] ISO 8061 Default message
   * timespan to live value. This is the duration after which the message
   * expires, starting from when the message is sent to Service Bus. This is
   * the default value used when TimeToLive is not set on a message itself.
   */
  defaultMessageTimeToLive?: string;
  /**
   * @member {boolean} [deadLetteringOnFilterEvaluationExceptions] Value that
   * indicates whether a subscription has dead letter support on filter
   * evaluation exceptions.
   */
  deadLetteringOnFilterEvaluationExceptions?: boolean;
  /**
   * @member {boolean} [deadLetteringOnMessageExpiration] Value that indicates
   * whether a subscription has dead letter support when a message expires.
   */
  deadLetteringOnMessageExpiration?: boolean;
  /**
   * @member {string} [duplicateDetectionHistoryTimeWindow] ISO 8601 timeSpan
   * structure that defines the duration of the duplicate detection history.
   * The default value is 10 minutes.
   */
  duplicateDetectionHistoryTimeWindow?: string;
  /**
   * @member {number} [maxDeliveryCount] Number of maximum deliveries.
   */
  maxDeliveryCount?: number;
  /**
   * @member {EntityStatus} [status] Enumerates the possible values for the
   * status of a messaging entity. Possible values include: 'Active',
   * 'Disabled', 'Restoring', 'SendDisabled', 'ReceiveDisabled', 'Creating',
   * 'Deleting', 'Renaming', 'Unknown'
   */
  status?: EntityStatus;
  /**
   * @member {boolean} [enableBatchedOperations] Value that indicates whether
   * server-side batched operations are enabled.
   */
  enableBatchedOperations?: boolean;
  /**
   * @member {string} [autoDeleteOnIdle] ISO 8061 timeSpan idle interval after
   * which the topic is automatically deleted. The minimum duration is 5
   * minutes.
   */
  autoDeleteOnIdle?: string;
  /**
   * @member {string} [forwardTo] Queue/Topic name to forward the messages
   */
  forwardTo?: string;
  /**
   * @member {string} [forwardDeadLetteredMessagesTo] Queue/Topic name to
   * forward the Dead Letter message
   */
  forwardDeadLetteredMessagesTo?: string;
}

/**
 * @interface
 * An interface representing CheckNameAvailability.
 * Description of a Check Name availability request properties.
 *
 */
export interface CheckNameAvailability {
  /**
   * @member {string} name The Name to check the namespce name availability and
   * The namespace name can contain only letters, numbers, and hyphens. The
   * namespace must start with a letter, and it must end with a letter or
   * number.
   */
  name: string;
}

/**
 * @interface
 * An interface representing CheckNameAvailabilityResult.
 * Description of a Check Name availability request properties.
 *
 */
export interface CheckNameAvailabilityResult {
  /**
   * @member {string} [message] The detailed info regarding the reason
   * associated with the namespace.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly message?: string;
  /**
   * @member {boolean} [nameAvailable] Value indicating namespace is
   * availability, true if the namespace is available; otherwise, false.
   */
  nameAvailable?: boolean;
  /**
   * @member {UnavailableReason} [reason] The reason for unavailability of a
   * namespace. Possible values include: 'None', 'InvalidName',
   * 'SubscriptionIsDisabled', 'NameInUse', 'NameInLockdown',
   * 'TooManyNamespaceInCurrentSubscription'
   */
  reason?: UnavailableReason;
}

/**
 * @interface
 * An interface representing OperationDisplay.
 * The object that represents the operation.
 *
 */
export interface OperationDisplay {
  /**
   * @member {string} [provider] Service provider: Microsoft.ServiceBus
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provider?: string;
  /**
   * @member {string} [resource] Resource on which the operation is performed:
   * Invoice, etc.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly resource?: string;
  /**
   * @member {string} [operation] Operation type: Read, write, delete, etc.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly operation?: string;
}

/**
 * @interface
 * An interface representing Operation.
 * A ServiceBus REST API operation
 *
 */
export interface Operation {
  /**
   * @member {string} [name] Operation name: {provider}/{resource}/{operation}
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {OperationDisplay} [display] The object that represents the
   * operation.
   */
  display?: OperationDisplay;
}

/**
 * @interface
 * An interface representing ErrorResponse.
 * Error reponse indicates ServiceBus service is not able to process the
 * incoming request. The reason is provided in the error message.
 *
 */
export interface ErrorResponse {
  /**
   * @member {string} [code] Error code.
   */
  code?: string;
  /**
   * @member {string} [message] Error message indicating why the operation
   * failed.
   */
  message?: string;
}

/**
 * @interface
 * An interface representing Action.
 * Represents the filter actions which are allowed for the transformation of a
 * message that have been matched by a filter expression.
 *
 */
export interface Action {
  /**
   * @member {string} [sqlExpression] SQL expression. e.g. MyProperty='ABC'
   */
  sqlExpression?: string;
  /**
   * @member {number} [compatibilityLevel] This property is reserved for future
   * use. An integer value showing the compatibility level, currently
   * hard-coded to 20.
   */
  compatibilityLevel?: number;
  /**
   * @member {boolean} [requiresPreprocessing] Value that indicates whether the
   * rule action requires preprocessing. Default value: true .
   */
  requiresPreprocessing?: boolean;
}

/**
 * @interface
 * An interface representing SqlFilter.
 * Represents a filter which is a composition of an expression and an action
 * that is executed in the pub/sub pipeline.
 *
 */
export interface SqlFilter {
  /**
   * @member {string} [sqlExpression] The SQL expression. e.g. MyProperty='ABC'
   */
  sqlExpression?: string;
  /**
   * @member {number} [compatibilityLevel] This property is reserved for future
   * use. An integer value showing the compatibility level, currently
   * hard-coded to 20.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**. Default value: 20 .
   */
  readonly compatibilityLevel?: number;
  /**
   * @member {boolean} [requiresPreprocessing] Value that indicates whether the
   * rule action requires preprocessing. Default value: true .
   */
  requiresPreprocessing?: boolean;
}

/**
 * @interface
 * An interface representing CorrelationFilter.
 * Represents the correlation filter expression.
 *
 */
export interface CorrelationFilter {
  /**
   * @member {{ [propertyName: string]: string }} [properties] dictionary
   * object for custom filters
   */
  properties?: { [propertyName: string]: string };
  /**
   * @member {string} [correlationId] Identifier of the correlation.
   */
  correlationId?: string;
  /**
   * @member {string} [messageId] Identifier of the message.
   */
  messageId?: string;
  /**
   * @member {string} [to] Address to send to.
   */
  to?: string;
  /**
   * @member {string} [replyTo] Address of the queue to reply to.
   */
  replyTo?: string;
  /**
   * @member {string} [label] Application specific label.
   */
  label?: string;
  /**
   * @member {string} [sessionId] Session identifier.
   */
  sessionId?: string;
  /**
   * @member {string} [replyToSessionId] Session identifier to reply to.
   */
  replyToSessionId?: string;
  /**
   * @member {string} [contentType] Content type of the message.
   */
  contentType?: string;
  /**
   * @member {boolean} [requiresPreprocessing] Value that indicates whether the
   * rule action requires preprocessing. Default value: true .
   */
  requiresPreprocessing?: boolean;
}

/**
 * @interface
 * An interface representing Rule.
 * Description of Rule Resource.
 *
 * @extends Resource
 */
export interface Rule extends Resource {
  /**
   * @member {Action} [action] Represents the filter actions which are allowed
   * for the transformation of a message that have been matched by a filter
   * expression.
   */
  action?: Action;
  /**
   * @member {FilterType} [filterType] Filter type that is evaluated against a
   * BrokeredMessage. Possible values include: 'SqlFilter', 'CorrelationFilter'
   */
  filterType?: FilterType;
  /**
   * @member {SqlFilter} [sqlFilter] Properties of sqlFilter
   */
  sqlFilter?: SqlFilter;
  /**
   * @member {CorrelationFilter} [correlationFilter] Properties of
   * correlationFilter
   */
  correlationFilter?: CorrelationFilter;
}

/**
 * @interface
 * An interface representing SqlRuleAction.
 * Represents set of actions written in SQL language-based syntax that is
 * performed against a ServiceBus.Messaging.BrokeredMessage
 *
 * @extends Action
 */
export interface SqlRuleAction extends Action {
}

/**
 * @interface
 * An interface representing PremiumMessagingRegionsProperties.
 */
export interface PremiumMessagingRegionsProperties {
  /**
   * @member {string} [code] Region code
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly code?: string;
  /**
   * @member {string} [fullName] Full name of the region
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly fullName?: string;
}

/**
 * @interface
 * An interface representing PremiumMessagingRegions.
 * Premium Messaging Region
 *
 * @extends ResourceNamespacePatch
 */
export interface PremiumMessagingRegions extends ResourceNamespacePatch {
  /**
   * @member {PremiumMessagingRegionsProperties} [properties]
   */
  properties?: PremiumMessagingRegionsProperties;
}

/**
 * @interface
 * An interface representing Destination.
 * Capture storage details for capture description
 *
 */
export interface Destination {
  /**
   * @member {string} [name] Name for capture destination
   */
  name?: string;
  /**
   * @member {string} [storageAccountResourceId] Resource id of the storage
   * account to be used to create the blobs
   */
  storageAccountResourceId?: string;
  /**
   * @member {string} [blobContainer] Blob container Name
   */
  blobContainer?: string;
  /**
   * @member {string} [archiveNameFormat] Blob naming convention for archive,
   * e.g.
   * {Namespace}/{EventHub}/{PartitionId}/{Year}/{Month}/{Day}/{Hour}/{Minute}/{Second}.
   * Here all the parameters (Namespace,EventHub .. etc) are mandatory
   * irrespective of order
   */
  archiveNameFormat?: string;
}

/**
 * @interface
 * An interface representing CaptureDescription.
 * Properties to configure capture description for eventhub
 *
 */
export interface CaptureDescription {
  /**
   * @member {boolean} [enabled] A value that indicates whether capture
   * description is enabled.
   */
  enabled?: boolean;
  /**
   * @member {EncodingCaptureDescription} [encoding] Enumerates the possible
   * values for the encoding format of capture description. Possible values
   * include: 'Avro', 'AvroDeflate'
   */
  encoding?: EncodingCaptureDescription;
  /**
   * @member {number} [intervalInSeconds] The time window allows you to set the
   * frequency with which the capture to Azure Blobs will happen, value should
   * between 60 to 900 seconds
   */
  intervalInSeconds?: number;
  /**
   * @member {number} [sizeLimitInBytes] The size window defines the amount of
   * data built up in your Event Hub before an capture operation, value should
   * be between 10485760 and 524288000 bytes
   */
  sizeLimitInBytes?: number;
  /**
   * @member {Destination} [destination] Properties of Destination where
   * capture will be stored. (Storage Account, Blob Names)
   */
  destination?: Destination;
}

/**
 * @interface
 * An interface representing Eventhub.
 * Single item in List or Get Event Hub operation
 *
 * @extends Resource
 */
export interface Eventhub extends Resource {
  /**
   * @member {string[]} [partitionIds] Current number of shards on the Event
   * Hub.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly partitionIds?: string[];
  /**
   * @member {Date} [createdAt] Exact time the Event Hub was created.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly createdAt?: Date;
  /**
   * @member {Date} [updatedAt] The exact time the message was updated.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly updatedAt?: Date;
  /**
   * @member {number} [messageRetentionInDays] Number of days to retain the
   * events for this Event Hub, value should be 1 to 7 days
   */
  messageRetentionInDays?: number;
  /**
   * @member {number} [partitionCount] Number of partitions created for the
   * Event Hub, allowed values are from 1 to 32 partitions.
   */
  partitionCount?: number;
  /**
   * @member {EntityStatus} [status] Enumerates the possible values for the
   * status of the Event Hub. Possible values include: 'Active', 'Disabled',
   * 'Restoring', 'SendDisabled', 'ReceiveDisabled', 'Creating', 'Deleting',
   * 'Renaming', 'Unknown'
   */
  status?: EntityStatus;
  /**
   * @member {CaptureDescription} [captureDescription] Properties of capture
   * description
   */
  captureDescription?: CaptureDescription;
}

/**
 * @interface
 * An interface representing ArmDisasterRecovery.
 * Single item in List or Get Alias(Disaster Recovery configuration) operation
 *
 * @extends Resource
 */
export interface ArmDisasterRecovery extends Resource {
  /**
   * @member {ProvisioningStateDR} [provisioningState] Provisioning state of
   * the Alias(Disaster Recovery configuration) - possible values 'Accepted' or
   * 'Succeeded' or 'Failed'. Possible values include: 'Accepted', 'Succeeded',
   * 'Failed'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provisioningState?: ProvisioningStateDR;
  /**
   * @member {number} [pendingReplicationOperationsCount] Number of entities
   * pending to be replicated.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly pendingReplicationOperationsCount?: number;
  /**
   * @member {string} [partnerNamespace] ARM Id of the Primary/Secondary
   * eventhub namespace name, which is part of GEO DR pairning
   */
  partnerNamespace?: string;
  /**
   * @member {string} [alternateName] Primary/Secondary eventhub namespace
   * name, which is part of GEO DR pairning
   */
  alternateName?: string;
  /**
   * @member {RoleDisasterRecovery} [role] role of namespace in GEO DR -
   * possible values 'Primary' or 'PrimaryNotReplicating' or 'Secondary'.
   * Possible values include: 'Primary', 'PrimaryNotReplicating', 'Secondary'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly role?: RoleDisasterRecovery;
}

/**
 * @interface
 * An interface representing MigrationConfigProperties.
 * Single item in List or Get Migration Config operation
 *
 * @extends Resource
 */
export interface MigrationConfigProperties extends Resource {
  /**
   * @member {string} [provisioningState] Provisioning state of Migration
   * Configuration
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provisioningState?: string;
  /**
   * @member {number} [pendingReplicationOperationsCount] Number of entities
   * pending to be replicated.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly pendingReplicationOperationsCount?: number;
  /**
   * @member {string} targetNamespace Existing premium Namespace ARM Id name
   * which has no entities, will be used for migration
   */
  targetNamespace: string;
  /**
   * @member {string} postMigrationName Name to access Standard Namespace after
   * migration
   */
  postMigrationName: string;
  /**
   * @member {string} [migrationState] State in which Standard to Premium
   * Migration is, possible values : Unknown, Reverting, Completing,
   * Initiating, Syncing, Active
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly migrationState?: string;
}

/**
 * @interface
 * An interface representing IpFilterRule.
 * Single item in a List or Get IpFilterRules operation
 *
 * @extends Resource
 */
export interface IpFilterRule extends Resource {
  /**
   * @member {string} [ipMask] IP Mask
   */
  ipMask?: string;
  /**
   * @member {IPAction} [action] The IP Filter Action. Possible values include:
   * 'Accept', 'Reject'
   */
  action?: IPAction;
  /**
   * @member {string} [filterName] IP Filter name
   */
  filterName?: string;
}

/**
 * @interface
 * An interface representing VirtualNetworkRule.
 * Single item in a List or Get VirtualNetworkRules operation
 *
 * @extends Resource
 */
export interface VirtualNetworkRule extends Resource {
  /**
   * @member {string} [virtualNetworkSubnetId] Resource ID of Virtual Network
   * Subnet
   */
  virtualNetworkSubnetId?: string;
}

/**
 * @interface
 * An interface representing QueuesListByNamespaceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface QueuesListByNamespaceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [skip] Skip is only used if a previous operation returned
   * a partial result. If a previous response contains a nextLink element, the
   * value of the nextLink element will include a skip parameter that specifies
   * a starting point to use for subsequent calls.
   */
  skip?: number;
  /**
   * @member {number} [top] May be used to limit the number of results to the
   * most recent N usageDetails.
   */
  top?: number;
}

/**
 * @interface
 * An interface representing TopicsListByNamespaceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface TopicsListByNamespaceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [skip] Skip is only used if a previous operation returned
   * a partial result. If a previous response contains a nextLink element, the
   * value of the nextLink element will include a skip parameter that specifies
   * a starting point to use for subsequent calls.
   */
  skip?: number;
  /**
   * @member {number} [top] May be used to limit the number of results to the
   * most recent N usageDetails.
   */
  top?: number;
}

/**
 * @interface
 * An interface representing SubscriptionsListByTopicOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface SubscriptionsListByTopicOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [skip] Skip is only used if a previous operation returned
   * a partial result. If a previous response contains a nextLink element, the
   * value of the nextLink element will include a skip parameter that specifies
   * a starting point to use for subsequent calls.
   */
  skip?: number;
  /**
   * @member {number} [top] May be used to limit the number of results to the
   * most recent N usageDetails.
   */
  top?: number;
}

/**
 * @interface
 * An interface representing RulesListBySubscriptionsOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface RulesListBySubscriptionsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [skip] Skip is only used if a previous operation returned
   * a partial result. If a previous response contains a nextLink element, the
   * value of the nextLink element will include a skip parameter that specifies
   * a starting point to use for subsequent calls.
   */
  skip?: number;
  /**
   * @member {number} [top] May be used to limit the number of results to the
   * most recent N usageDetails.
   */
  top?: number;
}

/**
 * @interface
 * An interface representing ServiceBusManagementClientOptions.
 * @extends AzureServiceClientOptions
 */
export interface ServiceBusManagementClientOptions extends AzureServiceClientOptions {
  /**
   * @member {string} [baseUri]
   */
  baseUri?: string;
}


/**
 * @interface
 * An interface representing the OperationListResult.
 * Result of the request to list ServiceBus operations. It contains a list of
 * operations and a URL link to get the next set of results.
 *
 * @extends Array<Operation>
 */
export interface OperationListResult extends Array<Operation> {
  /**
   * @member {string} [nextLink] URL to get the next set of operation list
   * results if there are any.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the SBNamespaceListResult.
 * The response of the List Namespace operation.
 *
 * @extends Array<SBNamespace>
 */
export interface SBNamespaceListResult extends Array<SBNamespace> {
  /**
   * @member {string} [nextLink] Link to the next set of results. Not empty if
   * Value contains incomplete list of Namespaces.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the SBAuthorizationRuleListResult.
 * The response to the List Namespace operation.
 *
 * @extends Array<SBAuthorizationRule>
 */
export interface SBAuthorizationRuleListResult extends Array<SBAuthorizationRule> {
  /**
   * @member {string} [nextLink] Link to the next set of results. Not empty if
   * Value contains incomplete list of Authorization Rules.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the IpFilterRuleListResult.
 * The response from the List namespace operation.
 *
 * @extends Array<IpFilterRule>
 */
export interface IpFilterRuleListResult extends Array<IpFilterRule> {
  /**
   * @member {string} [nextLink] Link to the next set of results. Not empty if
   * Value contains an incomplete list of IpFilter Rules
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the VirtualNetworkRuleListResult.
 * The response from the List namespace operation.
 *
 * @extends Array<VirtualNetworkRule>
 */
export interface VirtualNetworkRuleListResult extends Array<VirtualNetworkRule> {
  /**
   * @member {string} [nextLink] Link to the next set of results. Not empty if
   * Value contains an incomplete list of VirtualNetwork Rules
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the ArmDisasterRecoveryListResult.
 * The result of the List Alias(Disaster Recovery configuration) operation.
 *
 * @extends Array<ArmDisasterRecovery>
 */
export interface ArmDisasterRecoveryListResult extends Array<ArmDisasterRecovery> {
  /**
   * @member {string} [nextLink] Link to the next set of results. Not empty if
   * Value contains incomplete list of Alias(Disaster Recovery configuration)
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the MigrationConfigListResult.
 * The result of the List migrationConfigurations operation.
 *
 * @extends Array<MigrationConfigProperties>
 */
export interface MigrationConfigListResult extends Array<MigrationConfigProperties> {
  /**
   * @member {string} [nextLink] Link to the next set of results. Not empty if
   * Value contains incomplete list of migrationConfigurations
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the SBQueueListResult.
 * The response to the List Queues operation.
 *
 * @extends Array<SBQueue>
 */
export interface SBQueueListResult extends Array<SBQueue> {
  /**
   * @member {string} [nextLink] Link to the next set of results. Not empty if
   * Value contains incomplete list of queues.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the SBTopicListResult.
 * The response to the List Topics operation.
 *
 * @extends Array<SBTopic>
 */
export interface SBTopicListResult extends Array<SBTopic> {
  /**
   * @member {string} [nextLink] Link to the next set of results. Not empty if
   * Value contains incomplete list of topics.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the SBSubscriptionListResult.
 * The response to the List Subscriptions operation.
 *
 * @extends Array<SBSubscription>
 */
export interface SBSubscriptionListResult extends Array<SBSubscription> {
  /**
   * @member {string} [nextLink] Link to the next set of results. Not empty if
   * Value contains incomplete list of subscriptions.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the RuleListResult.
 * The response of the List rule operation.
 *
 * @extends Array<Rule>
 */
export interface RuleListResult extends Array<Rule> {
  /**
   * @member {string} [nextLink] Link to the next set of results. Not empty if
   * Value contains incomplete list of rules
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the PremiumMessagingRegionsListResult.
 * The response of the List PremiumMessagingRegions operation.
 *
 * @extends Array<PremiumMessagingRegions>
 */
export interface PremiumMessagingRegionsListResult extends Array<PremiumMessagingRegions> {
  /**
   * @member {string} [nextLink] Link to the next set of results. Not empty if
   * Value contains incomplete list of PremiumMessagingRegions.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the EventHubListResult.
 * The result of the List EventHubs operation.
 *
 * @extends Array<Eventhub>
 */
export interface EventHubListResult extends Array<Eventhub> {
  /**
   * @member {string} [nextLink] Link to the next set of results. Not empty if
   * Value contains incomplete list of EventHubs.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * Defines values for SkuName.
 * Possible values include: 'Basic', 'Standard', 'Premium'
 * @readonly
 * @enum {string}
 */
export enum SkuName {
  Basic = 'Basic',
  Standard = 'Standard',
  Premium = 'Premium',
}

/**
 * Defines values for SkuTier.
 * Possible values include: 'Basic', 'Standard', 'Premium'
 * @readonly
 * @enum {string}
 */
export enum SkuTier {
  Basic = 'Basic',
  Standard = 'Standard',
  Premium = 'Premium',
}

/**
 * Defines values for AccessRights.
 * Possible values include: 'Manage', 'Send', 'Listen'
 * @readonly
 * @enum {string}
 */
export enum AccessRights {
  Manage = 'Manage',
  Send = 'Send',
  Listen = 'Listen',
}

/**
 * Defines values for KeyType.
 * Possible values include: 'PrimaryKey', 'SecondaryKey'
 * @readonly
 * @enum {string}
 */
export enum KeyType {
  PrimaryKey = 'PrimaryKey',
  SecondaryKey = 'SecondaryKey',
}

/**
 * Defines values for EntityStatus.
 * Possible values include: 'Active', 'Disabled', 'Restoring', 'SendDisabled',
 * 'ReceiveDisabled', 'Creating', 'Deleting', 'Renaming', 'Unknown'
 * @readonly
 * @enum {string}
 */
export enum EntityStatus {
  Active = 'Active',
  Disabled = 'Disabled',
  Restoring = 'Restoring',
  SendDisabled = 'SendDisabled',
  ReceiveDisabled = 'ReceiveDisabled',
  Creating = 'Creating',
  Deleting = 'Deleting',
  Renaming = 'Renaming',
  Unknown = 'Unknown',
}

/**
 * Defines values for UnavailableReason.
 * Possible values include: 'None', 'InvalidName', 'SubscriptionIsDisabled',
 * 'NameInUse', 'NameInLockdown', 'TooManyNamespaceInCurrentSubscription'
 * @readonly
 * @enum {string}
 */
export enum UnavailableReason {
  None = 'None',
  InvalidName = 'InvalidName',
  SubscriptionIsDisabled = 'SubscriptionIsDisabled',
  NameInUse = 'NameInUse',
  NameInLockdown = 'NameInLockdown',
  TooManyNamespaceInCurrentSubscription = 'TooManyNamespaceInCurrentSubscription',
}

/**
 * Defines values for FilterType.
 * Possible values include: 'SqlFilter', 'CorrelationFilter'
 * @readonly
 * @enum {string}
 */
export enum FilterType {
  SqlFilter = 'SqlFilter',
  CorrelationFilter = 'CorrelationFilter',
}

/**
 * Defines values for EncodingCaptureDescription.
 * Possible values include: 'Avro', 'AvroDeflate'
 * @readonly
 * @enum {string}
 */
export enum EncodingCaptureDescription {
  Avro = 'Avro',
  AvroDeflate = 'AvroDeflate',
}

/**
 * Defines values for ProvisioningStateDR.
 * Possible values include: 'Accepted', 'Succeeded', 'Failed'
 * @readonly
 * @enum {string}
 */
export enum ProvisioningStateDR {
  Accepted = 'Accepted',
  Succeeded = 'Succeeded',
  Failed = 'Failed',
}

/**
 * Defines values for RoleDisasterRecovery.
 * Possible values include: 'Primary', 'PrimaryNotReplicating', 'Secondary'
 * @readonly
 * @enum {string}
 */
export enum RoleDisasterRecovery {
  Primary = 'Primary',
  PrimaryNotReplicating = 'PrimaryNotReplicating',
  Secondary = 'Secondary',
}

/**
 * Defines values for IPAction.
 * Possible values include: 'Accept', 'Reject'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: IPAction = <IPAction>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum IPAction {
  Accept = 'Accept',
  Reject = 'Reject',
}

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type OperationsListNextResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationListResult;
    };
};

/**
 * Contains response data for the checkNameAvailabilityMethod operation.
 */
export type NamespacesCheckNameAvailabilityMethodResponse = CheckNameAvailabilityResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CheckNameAvailabilityResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type NamespacesListResponse = SBNamespaceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SBNamespaceListResult;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type NamespacesListByResourceGroupResponse = SBNamespaceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SBNamespaceListResult;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type NamespacesCreateOrUpdateResponse = SBNamespace & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SBNamespace;
    };
};

/**
 * Contains response data for the get operation.
 */
export type NamespacesGetResponse = SBNamespace & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SBNamespace;
    };
};

/**
 * Contains response data for the update operation.
 */
export type NamespacesUpdateResponse = SBNamespace & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SBNamespace;
    };
};

/**
 * Contains response data for the listAuthorizationRules operation.
 */
export type NamespacesListAuthorizationRulesResponse = SBAuthorizationRuleListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SBAuthorizationRuleListResult;
    };
};

/**
 * Contains response data for the createOrUpdateAuthorizationRule operation.
 */
export type NamespacesCreateOrUpdateAuthorizationRuleResponse = SBAuthorizationRule & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SBAuthorizationRule;
    };
};

/**
 * Contains response data for the getAuthorizationRule operation.
 */
export type NamespacesGetAuthorizationRuleResponse = SBAuthorizationRule & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SBAuthorizationRule;
    };
};

/**
 * Contains response data for the listKeys operation.
 */
export type NamespacesListKeysResponse = AccessKeys & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AccessKeys;
    };
};

/**
 * Contains response data for the regenerateKeys operation.
 */
export type NamespacesRegenerateKeysResponse = AccessKeys & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AccessKeys;
    };
};

/**
 * Contains response data for the listIpFilterRules operation.
 */
export type NamespacesListIpFilterRulesResponse = IpFilterRuleListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IpFilterRuleListResult;
    };
};

/**
 * Contains response data for the createOrUpdateIpFilterRule operation.
 */
export type NamespacesCreateOrUpdateIpFilterRuleResponse = IpFilterRule & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IpFilterRule;
    };
};

/**
 * Contains response data for the getIpFilterRule operation.
 */
export type NamespacesGetIpFilterRuleResponse = IpFilterRule & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IpFilterRule;
    };
};

/**
 * Contains response data for the listVirtualNetworkRules operation.
 */
export type NamespacesListVirtualNetworkRulesResponse = VirtualNetworkRuleListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualNetworkRuleListResult;
    };
};

/**
 * Contains response data for the createOrUpdateVirtualNetworkRule operation.
 */
export type NamespacesCreateOrUpdateVirtualNetworkRuleResponse = VirtualNetworkRule & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualNetworkRule;
    };
};

/**
 * Contains response data for the getVirtualNetworkRule operation.
 */
export type NamespacesGetVirtualNetworkRuleResponse = VirtualNetworkRule & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualNetworkRule;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type NamespacesBeginCreateOrUpdateResponse = SBNamespace & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SBNamespace;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type NamespacesListNextResponse = SBNamespaceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SBNamespaceListResult;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type NamespacesListByResourceGroupNextResponse = SBNamespaceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SBNamespaceListResult;
    };
};

/**
 * Contains response data for the listAuthorizationRulesNext operation.
 */
export type NamespacesListAuthorizationRulesNextResponse = SBAuthorizationRuleListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SBAuthorizationRuleListResult;
    };
};

/**
 * Contains response data for the listIpFilterRulesNext operation.
 */
export type NamespacesListIpFilterRulesNextResponse = IpFilterRuleListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IpFilterRuleListResult;
    };
};

/**
 * Contains response data for the listVirtualNetworkRulesNext operation.
 */
export type NamespacesListVirtualNetworkRulesNextResponse = VirtualNetworkRuleListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualNetworkRuleListResult;
    };
};

/**
 * Contains response data for the checkNameAvailabilityMethod operation.
 */
export type DisasterRecoveryConfigsCheckNameAvailabilityMethodResponse = CheckNameAvailabilityResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CheckNameAvailabilityResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type DisasterRecoveryConfigsListResponse = ArmDisasterRecoveryListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ArmDisasterRecoveryListResult;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type DisasterRecoveryConfigsCreateOrUpdateResponse = ArmDisasterRecovery & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ArmDisasterRecovery;
    };
};

/**
 * Contains response data for the get operation.
 */
export type DisasterRecoveryConfigsGetResponse = ArmDisasterRecovery & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ArmDisasterRecovery;
    };
};

/**
 * Contains response data for the listAuthorizationRules operation.
 */
export type DisasterRecoveryConfigsListAuthorizationRulesResponse = SBAuthorizationRuleListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SBAuthorizationRuleListResult;
    };
};

/**
 * Contains response data for the getAuthorizationRule operation.
 */
export type DisasterRecoveryConfigsGetAuthorizationRuleResponse = SBAuthorizationRule & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SBAuthorizationRule;
    };
};

/**
 * Contains response data for the listKeys operation.
 */
export type DisasterRecoveryConfigsListKeysResponse = AccessKeys & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AccessKeys;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type DisasterRecoveryConfigsListNextResponse = ArmDisasterRecoveryListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ArmDisasterRecoveryListResult;
    };
};

/**
 * Contains response data for the listAuthorizationRulesNext operation.
 */
export type DisasterRecoveryConfigsListAuthorizationRulesNextResponse = SBAuthorizationRuleListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SBAuthorizationRuleListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type MigrationConfigsListResponse = MigrationConfigListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MigrationConfigListResult;
    };
};

/**
 * Contains response data for the createAndStartMigration operation.
 */
export type MigrationConfigsCreateAndStartMigrationResponse = MigrationConfigProperties & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MigrationConfigProperties;
    };
};

/**
 * Contains response data for the get operation.
 */
export type MigrationConfigsGetResponse = MigrationConfigProperties & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MigrationConfigProperties;
    };
};

/**
 * Contains response data for the beginCreateAndStartMigration operation.
 */
export type MigrationConfigsBeginCreateAndStartMigrationResponse = MigrationConfigProperties & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MigrationConfigProperties;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type MigrationConfigsListNextResponse = MigrationConfigListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MigrationConfigListResult;
    };
};

/**
 * Contains response data for the listByNamespace operation.
 */
export type QueuesListByNamespaceResponse = SBQueueListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SBQueueListResult;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type QueuesCreateOrUpdateResponse = SBQueue & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SBQueue;
    };
};

/**
 * Contains response data for the get operation.
 */
export type QueuesGetResponse = SBQueue & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SBQueue;
    };
};

/**
 * Contains response data for the listAuthorizationRules operation.
 */
export type QueuesListAuthorizationRulesResponse = SBAuthorizationRuleListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SBAuthorizationRuleListResult;
    };
};

/**
 * Contains response data for the createOrUpdateAuthorizationRule operation.
 */
export type QueuesCreateOrUpdateAuthorizationRuleResponse = SBAuthorizationRule & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SBAuthorizationRule;
    };
};

/**
 * Contains response data for the getAuthorizationRule operation.
 */
export type QueuesGetAuthorizationRuleResponse = SBAuthorizationRule & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SBAuthorizationRule;
    };
};

/**
 * Contains response data for the listKeys operation.
 */
export type QueuesListKeysResponse = AccessKeys & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AccessKeys;
    };
};

/**
 * Contains response data for the regenerateKeys operation.
 */
export type QueuesRegenerateKeysResponse = AccessKeys & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AccessKeys;
    };
};

/**
 * Contains response data for the listByNamespaceNext operation.
 */
export type QueuesListByNamespaceNextResponse = SBQueueListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SBQueueListResult;
    };
};

/**
 * Contains response data for the listAuthorizationRulesNext operation.
 */
export type QueuesListAuthorizationRulesNextResponse = SBAuthorizationRuleListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SBAuthorizationRuleListResult;
    };
};

/**
 * Contains response data for the listByNamespace operation.
 */
export type TopicsListByNamespaceResponse = SBTopicListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SBTopicListResult;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type TopicsCreateOrUpdateResponse = SBTopic & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SBTopic;
    };
};

/**
 * Contains response data for the get operation.
 */
export type TopicsGetResponse = SBTopic & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SBTopic;
    };
};

/**
 * Contains response data for the listAuthorizationRules operation.
 */
export type TopicsListAuthorizationRulesResponse = SBAuthorizationRuleListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SBAuthorizationRuleListResult;
    };
};

/**
 * Contains response data for the createOrUpdateAuthorizationRule operation.
 */
export type TopicsCreateOrUpdateAuthorizationRuleResponse = SBAuthorizationRule & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SBAuthorizationRule;
    };
};

/**
 * Contains response data for the getAuthorizationRule operation.
 */
export type TopicsGetAuthorizationRuleResponse = SBAuthorizationRule & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SBAuthorizationRule;
    };
};

/**
 * Contains response data for the listKeys operation.
 */
export type TopicsListKeysResponse = AccessKeys & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AccessKeys;
    };
};

/**
 * Contains response data for the regenerateKeys operation.
 */
export type TopicsRegenerateKeysResponse = AccessKeys & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AccessKeys;
    };
};

/**
 * Contains response data for the listByNamespaceNext operation.
 */
export type TopicsListByNamespaceNextResponse = SBTopicListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SBTopicListResult;
    };
};

/**
 * Contains response data for the listAuthorizationRulesNext operation.
 */
export type TopicsListAuthorizationRulesNextResponse = SBAuthorizationRuleListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SBAuthorizationRuleListResult;
    };
};

/**
 * Contains response data for the listByTopic operation.
 */
export type SubscriptionsListByTopicResponse = SBSubscriptionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SBSubscriptionListResult;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type SubscriptionsCreateOrUpdateResponse = SBSubscription & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SBSubscription;
    };
};

/**
 * Contains response data for the get operation.
 */
export type SubscriptionsGetResponse = SBSubscription & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SBSubscription;
    };
};

/**
 * Contains response data for the listByTopicNext operation.
 */
export type SubscriptionsListByTopicNextResponse = SBSubscriptionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SBSubscriptionListResult;
    };
};

/**
 * Contains response data for the listBySubscriptions operation.
 */
export type RulesListBySubscriptionsResponse = RuleListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RuleListResult;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type RulesCreateOrUpdateResponse = Rule & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Rule;
    };
};

/**
 * Contains response data for the get operation.
 */
export type RulesGetResponse = Rule & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Rule;
    };
};

/**
 * Contains response data for the listBySubscriptionsNext operation.
 */
export type RulesListBySubscriptionsNextResponse = RuleListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RuleListResult;
    };
};

/**
 * Contains response data for the listBySku operation.
 */
export type RegionsListBySkuResponse = PremiumMessagingRegionsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PremiumMessagingRegionsListResult;
    };
};

/**
 * Contains response data for the listBySkuNext operation.
 */
export type RegionsListBySkuNextResponse = PremiumMessagingRegionsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PremiumMessagingRegionsListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type PremiumMessagingRegionsListResponse = PremiumMessagingRegionsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PremiumMessagingRegionsListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type PremiumMessagingRegionsListNextResponse = PremiumMessagingRegionsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PremiumMessagingRegionsListResult;
    };
};

/**
 * Contains response data for the listByNamespace operation.
 */
export type EventHubsListByNamespaceResponse = EventHubListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventHubListResult;
    };
};

/**
 * Contains response data for the listByNamespaceNext operation.
 */
export type EventHubsListByNamespaceNextResponse = EventHubListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventHubListResult;
    };
};
