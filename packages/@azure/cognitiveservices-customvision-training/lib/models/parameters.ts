/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";

export const apiKey: msRest.OperationParameter = {
  parameterPath: "apiKey",
  mapper: {
    required: true,
    serializedName: "Training-Key",
    type: {
      name: "String"
    }
  }
};
export const classificationType: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "classificationType"
  ],
  mapper: {
    nullable: false,
    serializedName: "classificationType",
    type: {
      name: "String"
    }
  }
};
export const description: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "description"
  ],
  mapper: {
    nullable: true,
    serializedName: "description",
    type: {
      name: "String"
    }
  }
};
export const domainId0: msRest.OperationURLParameter = {
  parameterPath: "domainId",
  mapper: {
    required: true,
    nullable: false,
    serializedName: "domainId",
    type: {
      name: "Uuid"
    }
  }
};
export const domainId1: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "domainId"
  ],
  mapper: {
    nullable: true,
    serializedName: "domainId",
    type: {
      name: "Uuid"
    }
  }
};
export const endpoint: msRest.OperationURLParameter = {
  parameterPath: "endpoint",
  mapper: {
    required: true,
    serializedName: "Endpoint",
    defaultValue: '',
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};
export const flavor: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "flavor"
  ],
  mapper: {
    nullable: true,
    serializedName: "flavor",
    type: {
      name: "String"
    }
  }
};
export const ids: msRest.OperationQueryParameter = {
  parameterPath: "ids",
  mapper: {
    required: true,
    nullable: true,
    serializedName: "ids",
    type: {
      name: "Sequence",
      element: {
        type: {
          name: "String"
        }
      }
    }
  },
  collectionFormat: msRest.QueryCollectionFormat.Csv
};
export const imageData: msRest.OperationParameter = {
  parameterPath: "imageData",
  mapper: {
    required: true,
    serializedName: "imageData",
    type: {
      name: "Stream"
    }
  }
};
export const imageId: msRest.OperationURLParameter = {
  parameterPath: "imageId",
  mapper: {
    required: true,
    nullable: false,
    serializedName: "imageId",
    type: {
      name: "Uuid"
    }
  }
};
export const imageIds0: msRest.OperationQueryParameter = {
  parameterPath: "imageIds",
  mapper: {
    required: true,
    nullable: true,
    serializedName: "imageIds",
    type: {
      name: "Sequence",
      element: {
        type: {
          name: "String"
        }
      }
    }
  },
  collectionFormat: msRest.QueryCollectionFormat.Csv
};
export const imageIds1: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "imageIds"
  ],
  mapper: {
    nullable: true,
    serializedName: "imageIds",
    type: {
      name: "Sequence",
      element: {
        type: {
          name: "String"
        }
      }
    }
  },
  collectionFormat: msRest.QueryCollectionFormat.Csv
};
export const iterationId0: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "iterationId"
  ],
  mapper: {
    nullable: true,
    serializedName: "iterationId",
    type: {
      name: "Uuid"
    }
  }
};
export const iterationId1: msRest.OperationURLParameter = {
  parameterPath: "iterationId",
  mapper: {
    required: true,
    nullable: false,
    serializedName: "iterationId",
    type: {
      name: "Uuid"
    }
  }
};
export const name: msRest.OperationQueryParameter = {
  parameterPath: "name",
  mapper: {
    required: true,
    nullable: true,
    serializedName: "name",
    type: {
      name: "String"
    }
  }
};
export const orderBy: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "orderBy"
  ],
  mapper: {
    nullable: false,
    serializedName: "orderBy",
    type: {
      name: "String"
    }
  }
};
export const overlapThreshold: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "overlapThreshold"
  ],
  mapper: {
    serializedName: "overlapThreshold",
    type: {
      name: "Number"
    }
  }
};
export const platform: msRest.OperationQueryParameter = {
  parameterPath: "platform",
  mapper: {
    required: true,
    nullable: true,
    serializedName: "platform",
    type: {
      name: "String"
    }
  }
};
export const projectId: msRest.OperationURLParameter = {
  parameterPath: "projectId",
  mapper: {
    required: true,
    nullable: false,
    serializedName: "projectId",
    type: {
      name: "Uuid"
    }
  }
};
export const regionIds: msRest.OperationQueryParameter = {
  parameterPath: "regionIds",
  mapper: {
    required: true,
    nullable: true,
    serializedName: "regionIds",
    type: {
      name: "Sequence",
      element: {
        type: {
          name: "String"
        }
      }
    }
  },
  collectionFormat: msRest.QueryCollectionFormat.Csv
};
export const skip: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "skip"
  ],
  mapper: {
    serializedName: "skip",
    defaultValue: 0,
    type: {
      name: "Number"
    }
  }
};
export const tagId: msRest.OperationURLParameter = {
  parameterPath: "tagId",
  mapper: {
    required: true,
    nullable: false,
    serializedName: "tagId",
    type: {
      name: "Uuid"
    }
  }
};
export const tagIds0: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "tagIds"
  ],
  mapper: {
    nullable: true,
    serializedName: "tagIds",
    type: {
      name: "Sequence",
      element: {
        type: {
          name: "String"
        }
      }
    }
  },
  collectionFormat: msRest.QueryCollectionFormat.Csv
};
export const tagIds1: msRest.OperationQueryParameter = {
  parameterPath: "tagIds",
  mapper: {
    required: true,
    nullable: true,
    serializedName: "tagIds",
    type: {
      name: "Sequence",
      element: {
        type: {
          name: "String"
        }
      }
    }
  },
  collectionFormat: msRest.QueryCollectionFormat.Csv
};
export const take: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "take"
  ],
  mapper: {
    serializedName: "take",
    defaultValue: 50,
    type: {
      name: "Number"
    }
  }
};
export const threshold: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "threshold"
  ],
  mapper: {
    serializedName: "threshold",
    type: {
      name: "Number"
    }
  }
};
export const type: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "type"
  ],
  mapper: {
    nullable: false,
    serializedName: "type",
    type: {
      name: "String"
    }
  }
};
