/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "ms-rest-azure-js";
import * as msRest from "ms-rest-js";

export { BaseResource, CloudError };


/**
 * @interface
 * An interface representing ErrorDetailsItem.
 */
export interface ErrorDetailsItem {
  /**
   * @member {string} [code] Error code.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly code?: string;
  /**
   * @member {string} [message] If available, a human readable description of
   * the error.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly message?: string;
  /**
   * @member {string} [target] If available, the component generating the
   * error.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly target?: string;
}

/**
 * @interface
 * An interface representing ErrorModel.
 * This object is returned when an error occurs in the Maps API
 *
 */
export interface ErrorModel {
  /**
   * @member {string} [code] Error code.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly code?: string;
  /**
   * @member {string} [message] If available, a human readable description of
   * the error.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly message?: string;
  /**
   * @member {string} [target] If available, the component generating the
   * error.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly target?: string;
  /**
   * @member {ErrorDetailsItem[]} [details] If available, a list of additional
   * details about the error.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly details?: ErrorDetailsItem[];
}

/**
 * @interface
 * An interface representing Resource.
 * An Azure resource
 *
 * @extends BaseResource
 */
export interface Resource extends BaseResource {
  /**
   * @member {string} [id] The fully qualified Maps Account resource
   * identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [name] The name of the Maps Account, which is unique
   * within a Resource Group.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [type] Azure resource type.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: string;
}

/**
 * @interface
 * An interface representing Sku.
 * The SKU of the Maps Account.
 *
 */
export interface Sku {
  /**
   * @member {string} name The name of the SKU, in standard format (such as
   * S0).
   */
  name: string;
  /**
   * @member {string} [tier] Gets the sku tier. This is based on the SKU name.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly tier?: string;
}

/**
 * @interface
 * An interface representing MapsAccount.
 * An Azure resource which represents access to a suite of Maps REST APIs.
 *
 * @extends Resource
 */
export interface MapsAccount extends Resource {
  /**
   * @member {string} [location] The location of the resource.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly location?: string;
  /**
   * @member {{ [propertyName: string]: string }} [tags] Gets a list of key
   * value pairs that describe the resource. These tags can be used in viewing
   * and grouping this resource (across resource groups). A maximum of 15 tags
   * can be provided for a resource. Each tag must have a key no greater than
   * 128 characters and value no greater than 256 characters.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly tags?: { [propertyName: string]: string };
  /**
   * @member {Sku} [sku] The SKU of this account.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly sku?: Sku;
}

/**
 * @interface
 * An interface representing MapsAccountCreateParameters.
 * Parameters used to create a new Maps Account.
 *
 */
export interface MapsAccountCreateParameters {
  /**
   * @member {string} location The location of the resource.
   */
  location: string;
  /**
   * @member {{ [propertyName: string]: string }} [tags] Gets or sets a list of
   * key value pairs that describe the resource. These tags can be used in
   * viewing and grouping this resource (across resource groups). A maximum of
   * 15 tags can be provided for a resource. Each tag must have a key no
   * greater than 128 characters and value no greater than 256 characters.
   */
  tags?: { [propertyName: string]: string };
  /**
   * @member {Sku} sku The SKU of this account.
   */
  sku: Sku;
}

/**
 * @interface
 * An interface representing MapsAccountUpdateParameters.
 * Parameters used to update an existing Maps Account.
 *
 */
export interface MapsAccountUpdateParameters {
  /**
   * @member {{ [propertyName: string]: string }} [tags] Gets or sets a list of
   * key value pairs that describe the resource. These tags can be used in
   * viewing and grouping this resource (across resource groups). A maximum of
   * 15 tags can be provided for a resource. Each tag must have a key no
   * greater than 128 characters and value no greater than 256 characters.
   */
  tags?: { [propertyName: string]: string };
  /**
   * @member {Sku} [sku] The SKU of this account.
   */
  sku?: Sku;
}

/**
 * @interface
 * An interface representing MapsAccountsMoveRequest.
 * The description of what resources to move between resource groups.
 *
 */
export interface MapsAccountsMoveRequest {
  /**
   * @member {string} targetResourceGroup The name of the destination resource
   * group.
   */
  targetResourceGroup: string;
  /**
   * @member {string[]} resourceIds A list of resource names to move from the
   * source resource group.
   */
  resourceIds: string[];
}

/**
 * @interface
 * An interface representing MapsKeySpecification.
 * Whether the operation refers to the primary or secondary key.
 *
 */
export interface MapsKeySpecification {
  /**
   * @member {KeyType} keyType Whether the operation refers to the primary or
   * secondary key. Possible values include: 'primary', 'secondary'
   */
  keyType: KeyType;
}

/**
 * @interface
 * An interface representing MapsAccountKeys.
 * The set of keys which can be used to access the Maps REST APIs. Two keys are
 * provided for key rotation without interruption.
 *
 */
export interface MapsAccountKeys {
  /**
   * @member {string} [id] The full Azure resource identifier of the Maps
   * Account.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [primaryKey] The primary key for accessing the Maps REST
   * APIs.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly primaryKey?: string;
  /**
   * @member {string} [secondaryKey] The secondary key for accessing the Maps
   * REST APIs.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly secondaryKey?: string;
}

/**
 * @interface
 * An interface representing MapsOperationsValueItemDisplay.
 * The human-readable description of the operation.
 *
 */
export interface MapsOperationsValueItemDisplay {
  /**
   * @member {string} [provider] Service provider: Microsoft Maps.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provider?: string;
  /**
   * @member {string} [resource] Resource on which the operation is performed.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly resource?: string;
  /**
   * @member {string} [operation] The action that users can perform, based on
   * their permission level.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly operation?: string;
  /**
   * @member {string} [description] The description of the operation.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
}

/**
 * @interface
 * An interface representing MapsOperationsValueItem.
 */
export interface MapsOperationsValueItem {
  /**
   * @member {string} [name] Operation name: {provider}/{resource}/{operation}.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {MapsOperationsValueItemDisplay} [display] The human-readable
   * description of the operation.
   */
  display?: MapsOperationsValueItemDisplay;
  /**
   * @member {string} [origin] The origin of the operation.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly origin?: string;
}

/**
 * @interface
 * An interface representing MapsManagementClientOptions.
 * @extends AzureServiceClientOptions
 */
export interface MapsManagementClientOptions extends AzureServiceClientOptions {
  /**
   * @member {string} [baseUri]
   */
  baseUri?: string;
}


/**
 * @interface
 * An interface representing the MapsAccounts.
 * A list of Maps Accounts.
 *
 * @extends Array<MapsAccount>
 */
export interface MapsAccounts extends Array<MapsAccount> {
}

/**
 * @interface
 * An interface representing the MapsOperations.
 * The set of operations available for Maps.
 *
 * @extends Array<MapsOperationsValueItem>
 */
export interface MapsOperations extends Array<MapsOperationsValueItem> {
}

/**
 * Defines values for KeyType.
 * Possible values include: 'primary', 'secondary'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: KeyType = <KeyType>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum KeyType {
  Primary = 'primary',
  Secondary = 'secondary',
}

/**
 * Contains response data for the createOrUpdate operation.
 */
export type AccountsCreateOrUpdateResponse = MapsAccount & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MapsAccount;
    };
};

/**
 * Contains response data for the update operation.
 */
export type AccountsUpdateResponse = MapsAccount & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MapsAccount;
    };
};

/**
 * Contains response data for the get operation.
 */
export type AccountsGetResponse = MapsAccount & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MapsAccount;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type AccountsListByResourceGroupResponse = MapsAccounts & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MapsAccounts;
    };
};

/**
 * Contains response data for the listBySubscription operation.
 */
export type AccountsListBySubscriptionResponse = MapsAccounts & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MapsAccounts;
    };
};

/**
 * Contains response data for the listKeys operation.
 */
export type AccountsListKeysResponse = MapsAccountKeys & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MapsAccountKeys;
    };
};

/**
 * Contains response data for the regenerateKeys operation.
 */
export type AccountsRegenerateKeysResponse = MapsAccountKeys & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MapsAccountKeys;
    };
};

/**
 * Contains response data for the listOperations operation.
 */
export type AccountsListOperationsResponse = MapsOperations & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MapsOperations;
    };
};
