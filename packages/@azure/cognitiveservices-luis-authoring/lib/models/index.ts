/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";


/**
 * @interface
 * An interface representing EntityLabelObject.
 * Defines the entity type and position of the extracted entity within the
 * example.
 *
 */
export interface EntityLabelObject {
  /**
   * @member {string} entityName The entity type.
   */
  entityName: string;
  /**
   * @member {number} startCharIndex The index within the utterance where the
   * extracted entity starts.
   */
  startCharIndex: number;
  /**
   * @member {number} endCharIndex The index within the utterance where the
   * extracted entity ends.
   */
  endCharIndex: number;
}

/**
 * @interface
 * An interface representing ApplicationCreateObject.
 * Properties for creating a new LUIS Application
 *
 */
export interface ApplicationCreateObject {
  /**
   * @member {string} culture The culture for the new application. It is the
   * language that your app understands and speaks. E.g.: "en-us". Note: the
   * culture cannot be changed after the app is created.
   */
  culture: string;
  /**
   * @member {string} [domain] The domain for the new application. Optional.
   * E.g.: Comics.
   */
  domain?: string;
  /**
   * @member {string} [description] Description of the new application.
   * Optional.
   */
  description?: string;
  /**
   * @member {string} [initialVersionId] The initial version ID. Optional.
   * Default value is: "0.1"
   */
  initialVersionId?: string;
  /**
   * @member {string} [usageScenario] Defines the scenario for the new
   * application. Optional. E.g.: IoT.
   */
  usageScenario?: string;
  /**
   * @member {string} name The name for the new application.
   */
  name: string;
}

/**
 * @interface
 * An interface representing PrebuiltDomainCreateBaseObject.
 * A model object containing the name of the custom prebuilt entity and the
 * name of the domain to which this model belongs.
 *
 */
export interface PrebuiltDomainCreateBaseObject {
  /**
   * @member {string} [domainName] The domain name.
   */
  domainName?: string;
}

/**
 * @interface
 * An interface representing PrebuiltDomainCreateObject.
 * A prebuilt domain create object containing the name and culture of the
 * domain.
 *
 */
export interface PrebuiltDomainCreateObject {
  /**
   * @member {string} [domainName] The domain name.
   */
  domainName?: string;
  /**
   * @member {string} [culture] The culture of the new domain.
   */
  culture?: string;
}

/**
 * @interface
 * An interface representing PrebuiltDomainModelCreateObject.
 * A model object containing the name of the custom prebuilt intent or entity
 * and the name of the domain to which this model belongs.
 *
 */
export interface PrebuiltDomainModelCreateObject {
  /**
   * @member {string} [domainName] The domain name.
   */
  domainName?: string;
  /**
   * @member {string} [modelName] The intent name or entity name.
   */
  modelName?: string;
}

/**
 * @interface
 * An interface representing HierarchicalEntityModel.
 * A Hierarchical Entity Extractor.
 *
 */
export interface HierarchicalEntityModel {
  /**
   * @member {string[]} [children] Child entities.
   */
  children?: string[];
  /**
   * @member {string} [name] Entity name.
   */
  name?: string;
}

/**
 * @interface
 * An interface representing CompositeEntityModel.
 * A composite entity.
 *
 */
export interface CompositeEntityModel {
  /**
   * @member {string[]} [children] Child entities.
   */
  children?: string[];
  /**
   * @member {string} [name] Entity name.
   */
  name?: string;
}

/**
 * @interface
 * An interface representing JSONEntity.
 * Exported Model - Extracted Entity from utterance.
 *
 */
export interface JSONEntity {
  /**
   * @member {number} startPos The index within the utterance where the
   * extracted entity starts.
   */
  startPos: number;
  /**
   * @member {number} endPos The index within the utterance where the extracted
   * entity ends.
   */
  endPos: number;
  /**
   * @member {string} entity The entity name.
   */
  entity: string;
}

/**
 * @interface
 * An interface representing ApplicationSettingUpdateObject.
 * Object model for updating an application's settings.
 *
 */
export interface ApplicationSettingUpdateObject {
  /**
   * @member {boolean} [publicProperty] Setting your application as public
   * allows other people to use your application's endpoint using their own
   * keys.
   */
  publicProperty?: boolean;
}

/**
 * @interface
 * An interface representing PublishSettingUpdateObject.
 * Object model for updating an application's publish settings.
 *
 */
export interface PublishSettingUpdateObject {
  /**
   * @member {boolean} [sentimentAnalysis] Setting sentiment analysis as true
   * returns the Sentiment of the input utterance along with the resopnse
   */
  sentimentAnalysis?: boolean;
  /**
   * @member {boolean} [speech] Setting speech as public enables speech priming
   * in your app
   */
  speech?: boolean;
  /**
   * @member {boolean} [spellChecker] Setting spell checker as public enables
   * spell checking the input utterance.
   */
  spellChecker?: boolean;
}

/**
 * @interface
 * An interface representing ExampleLabelObject.
 * A labeled example.
 *
 */
export interface ExampleLabelObject {
  /**
   * @member {string} [text] The sample's utterance.
   */
  text?: string;
  /**
   * @member {EntityLabelObject[]} [entityLabels] The idenfied entities within
   * the utterance.
   */
  entityLabels?: EntityLabelObject[];
  /**
   * @member {string} [intentName] The idenfitied intent representing the
   * utterance.
   */
  intentName?: string;
}

/**
 * @interface
 * An interface representing PhraselistCreateObject.
 * Object model for creating a phraselist model.
 *
 */
export interface PhraselistCreateObject {
  /**
   * @member {string} [phrases] List of comma-separated phrases that represent
   * the Phraselist.
   */
  phrases?: string;
  /**
   * @member {string} [name] The Phraselist name.
   */
  name?: string;
  /**
   * @member {boolean} [isExchangeable] An exchangeable phrase list feature are
   * serves as single feature to the LUIS underlying training algorithm. It is
   * used as a lexicon lookup feature where its value is 1 if the lexicon
   * contains a given word or 0 if it doesnâ€™t. Think of an exchangeable as a
   * synonyms list. A non-exchangeable phrase list feature has all the phrases
   * in the list serve as separate features to the underlying training
   * algorithm. So, if you your phrase list feature contains 5 phrases, they
   * will be mapped to 5 separate features. You can think of the
   * non-exchangeable phrase list feature as an additional bag of words that
   * you are willing to add to LUIS existing vocabulary features. Think of a
   * non-exchangeable as set of different words. Default value is true. Default
   * value: true .
   */
  isExchangeable?: boolean;
}

/**
 * @interface
 * An interface representing SubClosedList.
 * Sublist of items for a Closed list.
 *
 */
export interface SubClosedList {
  /**
   * @member {string} [canonicalForm] The standard form that the list
   * represents.
   */
  canonicalForm?: string;
  /**
   * @member {string[]} [list] List of synonym words.
   */
  list?: string[];
}

/**
 * @interface
 * An interface representing SubClosedListResponse.
 * Sublist of items for a Closed list.
 *
 * @extends SubClosedList
 */
export interface SubClosedListResponse extends SubClosedList {
  /**
   * @member {number} [id] The sublist ID
   */
  id?: number;
}

/**
 * @interface
 * An interface representing ApplicationUpdateObject.
 * Object model for updating the name or description of an application.
 *
 */
export interface ApplicationUpdateObject {
  /**
   * @member {string} [name] The application's new name.
   */
  name?: string;
  /**
   * @member {string} [description] The application's new description.
   */
  description?: string;
}

/**
 * @interface
 * An interface representing JSONRegexFeature.
 * Exported Model - A Pattern feature.
 *
 */
export interface JSONRegexFeature {
  /**
   * @member {string} [pattern] The Regular Expression to match.
   */
  pattern?: string;
  /**
   * @member {boolean} [activated] Indicates if the Pattern feature is enabled.
   */
  activated?: boolean;
  /**
   * @member {string} [name] Name of the feature.
   */
  name?: string;
}

/**
 * @interface
 * An interface representing PatternUpdateObject.
 * Object model for updating an existing Pattern feature.
 *
 */
export interface PatternUpdateObject {
  /**
   * @member {string} [pattern] The Regular Expression to match.
   */
  pattern?: string;
  /**
   * @member {string} [name] Name of the feature.
   */
  name?: string;
  /**
   * @member {boolean} [isActive] Indicates if the Pattern feature is enabled.
   * Default value: true .
   */
  isActive?: boolean;
}

/**
 * @interface
 * An interface representing ClosedList.
 * Exported Model - A Closed List.
 *
 */
export interface ClosedList {
  /**
   * @member {string} [name] Name of the closed list feature.
   */
  name?: string;
  /**
   * @member {SubClosedList[]} [subLists] Sublists for the feature.
   */
  subLists?: SubClosedList[];
  /**
   * @member {string[]} [roles]
   */
  roles?: string[];
}

/**
 * @interface
 * An interface representing WordListObject.
 * Sublist of items for a Closed list.
 *
 */
export interface WordListObject {
  /**
   * @member {string} [canonicalForm] The standard form that the list
   * represents.
   */
  canonicalForm?: string;
  /**
   * @member {string[]} [list] List of synonym words.
   */
  list?: string[];
}

/**
 * @interface
 * An interface representing ClosedListModelPatchObject.
 * Object model for adding a batch of sublists to an existing closedlist.
 *
 */
export interface ClosedListModelPatchObject {
  /**
   * @member {WordListObject[]} [subLists] Sublists to add.
   */
  subLists?: WordListObject[];
}

/**
 * @interface
 * An interface representing JSONModelFeature.
 * Exported Model - Phraselist Model Feature.
 *
 */
export interface JSONModelFeature {
  /**
   * @member {boolean} [activated] Indicates if the feature is enabled.
   */
  activated?: boolean;
  /**
   * @member {string} [name] The Phraselist name.
   */
  name?: string;
  /**
   * @member {string} [words] List of comma-separated phrases that represent
   * the Phraselist.
   */
  words?: string;
  /**
   * @member {boolean} [mode] An exchangeable phrase list feature are serves as
   * single feature to the LUIS underlying training algorithm. It is used as a
   * lexicon lookup feature where its value is 1 if the lexicon contains a
   * given word or 0 if it doesnâ€™t. Think of an exchangeable as a synonyms
   * list. A non-exchangeable phrase list feature has all the phrases in the
   * list serve as separate features to the underlying training algorithm. So,
   * if you your phrase list feature contains 5 phrases, they will be mapped to
   * 5 separate features. You can think of the non-exchangeable phrase list
   * feature as an additional bag of words that you are willing to add to LUIS
   * existing vocabulary features. Think of a non-exchangeable as set of
   * different words. Default value is true.
   */
  mode?: boolean;
}

/**
 * @interface
 * An interface representing ModelCreateObject.
 * Object model for creating a new entity extractor.
 *
 */
export interface ModelCreateObject {
  /**
   * @member {string} [name] Name of the new entity extractor.
   */
  name?: string;
}

/**
 * @interface
 * An interface representing PatternCreateObject.
 * Object model for creating a Pattern feature.
 *
 */
export interface PatternCreateObject {
  /**
   * @member {string} [pattern] The Regular Expression to match.
   */
  pattern?: string;
  /**
   * @member {string} [name] Name of the feature.
   */
  name?: string;
}

/**
 * @interface
 * An interface representing WordListBaseUpdateObject.
 * Object model for updating one of the closed list's sublists.
 *
 */
export interface WordListBaseUpdateObject {
  /**
   * @member {string} [canonicalForm] The standard form that the list
   * represents.
   */
  canonicalForm?: string;
  /**
   * @member {string[]} [list] List of synonym words.
   */
  list?: string[];
}

/**
 * @interface
 * An interface representing JSONUtterance.
 * Exported Model - Utterance that was used to train the model.
 *
 */
export interface JSONUtterance {
  /**
   * @member {string} [text] The utterance.
   */
  text?: string;
  /**
   * @member {string} [intent] The matched intent.
   */
  intent?: string;
  /**
   * @member {JSONEntity[]} [entities] The matched entities.
   */
  entities?: JSONEntity[];
}

/**
 * @interface
 * An interface representing ModelUpdateObject.
 * Object model for updating an intent classifier.
 *
 */
export interface ModelUpdateObject {
  /**
   * @member {string} [name] The entity's new name.
   */
  name?: string;
}

/**
 * @interface
 * An interface representing ClosedListModelUpdateObject.
 * Object model for updating a closed list.
 *
 */
export interface ClosedListModelUpdateObject {
  /**
   * @member {WordListObject[]} [subLists] The new sublists for the feature.
   */
  subLists?: WordListObject[];
  /**
   * @member {string} [name] The new name of the closed list feature.
   */
  name?: string;
}

/**
 * @interface
 * An interface representing ClosedListModelCreateObject.
 * Object model for creating a closed list.
 *
 */
export interface ClosedListModelCreateObject {
  /**
   * @member {WordListObject[]} [subLists] Sublists for the feature.
   */
  subLists?: WordListObject[];
  /**
   * @member {string} [name] Name of the closed list feature.
   */
  name?: string;
}

/**
 * @interface
 * An interface representing VersionInfo.
 * Object model of an application version.
 *
 */
export interface VersionInfo {
  /**
   * @member {string} version The version ID. E.g.: "0.1"
   */
  version: string;
  /**
   * @member {Date} [createdDateTime] The version's creation timestamp.
   */
  createdDateTime?: Date;
  /**
   * @member {Date} [lastModifiedDateTime] Timestamp of the last update.
   */
  lastModifiedDateTime?: Date;
  /**
   * @member {Date} [lastTrainedDateTime] Timestamp of the last time the model
   * was trained.
   */
  lastTrainedDateTime?: Date;
  /**
   * @member {Date} [lastPublishedDateTime] Timestamp when was last published.
   */
  lastPublishedDateTime?: Date;
  /**
   * @member {string} [endpointUrl] The Runtime endpoint URL for this model
   * version.
   */
  endpointUrl?: string;
  /**
   * @member {{ [propertyName: string]: string }} [assignedEndpointKey] The
   * endpoint key.
   */
  assignedEndpointKey?: { [propertyName: string]: string };
  /**
   * @member {any} [externalApiKeys] External keys.
   */
  externalApiKeys?: any;
  /**
   * @member {number} [intentsCount] Number of intents in this model.
   */
  intentsCount?: number;
  /**
   * @member {number} [entitiesCount] Number of entities in this model.
   */
  entitiesCount?: number;
  /**
   * @member {number} [endpointHitsCount] Number of calls made to this
   * endpoint.
   */
  endpointHitsCount?: number;
  /**
   * @member {TrainingStatus} trainingStatus The current training status.
   * Possible values include: 'NeedsTraining', 'InProgress', 'Trained'
   */
  trainingStatus: TrainingStatus;
}

/**
 * @interface
 * An interface representing TaskUpdateObject.
 * Object model for cloning an application's version.
 *
 */
export interface TaskUpdateObject {
  /**
   * @member {string} [version] The new version for the cloned model.
   */
  version?: string;
}

/**
 * @interface
 * An interface representing PhraselistUpdateObject.
 * Object model for updating a Phraselist.
 *
 */
export interface PhraselistUpdateObject {
  /**
   * @member {string} [phrases] List of comma-separated phrases that represent
   * the Phraselist.
   */
  phrases?: string;
  /**
   * @member {string} [name] The Phraselist name.
   */
  name?: string;
  /**
   * @member {boolean} [isActive] Indicates if the Phraselist is enabled.
   * Default value: true .
   */
  isActive?: boolean;
  /**
   * @member {boolean} [isExchangeable] An exchangeable phrase list feature are
   * serves as single feature to the LUIS underlying training algorithm. It is
   * used as a lexicon lookup feature where its value is 1 if the lexicon
   * contains a given word or 0 if it doesnâ€™t. Think of an exchangeable as a
   * synonyms list. A non-exchangeable phrase list feature has all the phrases
   * in the list serve as separate features to the underlying training
   * algorithm. So, if you your phrase list feature contains 5 phrases, they
   * will be mapped to 5 separate features. You can think of the
   * non-exchangeable phrase list feature as an additional bag of words that
   * you are willing to add to LUIS existing vocabulary features. Think of a
   * non-exchangeable as set of different words. Default value is true. Default
   * value: true .
   */
  isExchangeable?: boolean;
}

/**
 * @interface
 * An interface representing PrebuiltDomainObject.
 */
export interface PrebuiltDomainObject {
  /**
   * @member {string} [domainName]
   */
  domainName?: string;
  /**
   * @member {string} [modelName]
   */
  modelName?: string;
}

/**
 * @interface
 * An interface representing HierarchicalModel.
 */
export interface HierarchicalModel {
  /**
   * @member {string} [name]
   */
  name?: string;
  /**
   * @member {string[]} [children]
   */
  children?: string[];
  /**
   * @member {PrebuiltDomainObject} [inherits]
   */
  inherits?: PrebuiltDomainObject;
  /**
   * @member {string[]} [roles]
   */
  roles?: string[];
}

/**
 * @interface
 * An interface representing ApplicationPublishObject.
 * Object model for publishing a specific application version.
 *
 */
export interface ApplicationPublishObject {
  /**
   * @member {string} [versionId] The version ID to publish.
   */
  versionId?: string;
  /**
   * @member {boolean} [isStaging] Indicates if the staging slot should be
   * used, instead of the Production one. Default value: false .
   */
  isStaging?: boolean;
}

/**
 * @interface
 * An interface representing PatternAny.
 * Pattern.Any Entity Extractor.
 *
 */
export interface PatternAny {
  /**
   * @member {string} [name]
   */
  name?: string;
  /**
   * @member {string[]} [explicitList]
   */
  explicitList?: string[];
  /**
   * @member {string[]} [roles]
   */
  roles?: string[];
}

/**
 * @interface
 * An interface representing RegexEntity.
 * Regular Expression Entity Extractor.
 *
 */
export interface RegexEntity {
  /**
   * @member {string} [name]
   */
  name?: string;
  /**
   * @member {string} [regexPattern]
   */
  regexPattern?: string;
  /**
   * @member {string[]} [roles]
   */
  roles?: string[];
}

/**
 * @interface
 * An interface representing PrebuiltEntity.
 * Prebuilt Entity Extractor.
 *
 */
export interface PrebuiltEntity {
  /**
   * @member {string} [name]
   */
  name?: string;
  /**
   * @member {string[]} [roles]
   */
  roles?: string[];
}

/**
 * @interface
 * An interface representing PatternRule.
 * Pattern
 *
 */
export interface PatternRule {
  /**
   * @member {string} [pattern] The pattern text.
   */
  pattern?: string;
  /**
   * @member {string} [intent] The intent's name where the pattern belongs to.
   */
  intent?: string;
}

/**
 * @interface
 * An interface representing LuisApp.
 * Exported Model - An exported LUIS Application.
 *
 */
export interface LuisApp {
  /**
   * @member {string} [name] The name of the application.
   */
  name?: string;
  /**
   * @member {string} [versionId] The version ID of the application that was
   * exported.
   */
  versionId?: string;
  /**
   * @member {string} [desc] The description of the application.
   */
  desc?: string;
  /**
   * @member {string} [culture] The culture of the application. E.g.: en-us.
   */
  culture?: string;
  /**
   * @member {HierarchicalModel[]} [intents] List of intents.
   */
  intents?: HierarchicalModel[];
  /**
   * @member {HierarchicalModel[]} [entities] List of entities.
   */
  entities?: HierarchicalModel[];
  /**
   * @member {ClosedList[]} [closedLists] List of closed lists.
   */
  closedLists?: ClosedList[];
  /**
   * @member {HierarchicalModel[]} [composites] List of composite entities.
   */
  composites?: HierarchicalModel[];
  /**
   * @member {PatternAny[]} [patternAnyEntities] List of Pattern.Any entities.
   */
  patternAnyEntities?: PatternAny[];
  /**
   * @member {RegexEntity[]} [regexEntities] List of regular expression
   * entities.
   */
  regexEntities?: RegexEntity[];
  /**
   * @member {PrebuiltEntity[]} [prebuiltEntities] List of prebuilt entities.
   */
  prebuiltEntities?: PrebuiltEntity[];
  /**
   * @member {JSONRegexFeature[]} [regexFeatures] List of pattern features.
   */
  regexFeatures?: JSONRegexFeature[];
  /**
   * @member {JSONModelFeature[]} [modelFeatures] List of model features.
   */
  modelFeatures?: JSONModelFeature[];
  /**
   * @member {PatternRule[]} [patterns] List of patterns.
   */
  patterns?: PatternRule[];
  /**
   * @member {JSONUtterance[]} [utterances] List of sample utterances.
   */
  utterances?: JSONUtterance[];
  /**
   * @property Describes unknown properties. The value of an unknown property
   * can be of "any" type.
   */
  [property: string]: any;
}

/**
 * @interface
 * An interface representing EntityLabel.
 * Defines the entity type and position of the extracted entity within the
 * example.
 *
 */
export interface EntityLabel {
  /**
   * @member {string} entityName The entity type.
   */
  entityName: string;
  /**
   * @member {number} startTokenIndex The index within the utterance where the
   * extracted entity starts.
   */
  startTokenIndex: number;
  /**
   * @member {number} endTokenIndex The index within the utterance where the
   * extracted entity ends.
   */
  endTokenIndex: number;
}

/**
 * @interface
 * An interface representing IntentPrediction.
 * A suggested intent.
 *
 */
export interface IntentPrediction {
  /**
   * @member {string} [name] The intent's name
   */
  name?: string;
  /**
   * @member {number} [score] The intent's score, based on the prediction
   * model.
   */
  score?: number;
}

/**
 * @interface
 * An interface representing EntityPrediction.
 * A suggested entity.
 *
 */
export interface EntityPrediction {
  /**
   * @member {string} entityName The entity's name
   */
  entityName: string;
  /**
   * @member {number} startTokenIndex The index within the utterance where the
   * extracted entity starts.
   */
  startTokenIndex: number;
  /**
   * @member {number} endTokenIndex The index within the utterance where the
   * extracted entity ends.
   */
  endTokenIndex: number;
  /**
   * @member {string} phrase The actual token(s) that comprise the entity.
   */
  phrase: string;
}

/**
 * @interface
 * An interface representing LabeledUtterance.
 * A prediction and label pair of an example.
 *
 */
export interface LabeledUtterance {
  /**
   * @member {number} [id] ID of Labeled Utterance.
   */
  id?: number;
  /**
   * @member {string} [text] The utterance. E.g.: what's the weather like in
   * seattle?
   */
  text?: string;
  /**
   * @member {string[]} [tokenizedText] The utterance tokenized.
   */
  tokenizedText?: string[];
  /**
   * @member {string} [intentLabel] The intent matching the example.
   */
  intentLabel?: string;
  /**
   * @member {EntityLabel[]} [entityLabels] The entities matching the example.
   */
  entityLabels?: EntityLabel[];
  /**
   * @member {IntentPrediction[]} [intentPredictions] List of suggested
   * intents.
   */
  intentPredictions?: IntentPrediction[];
  /**
   * @member {EntityPrediction[]} [entityPredictions] List of suggested
   * entities.
   */
  entityPredictions?: EntityPrediction[];
}

/**
 * @interface
 * An interface representing IntentsSuggestionExample.
 * Predicted/suggested intent.
 *
 */
export interface IntentsSuggestionExample {
  /**
   * @member {string} [text] The utterance. E.g.: what's the weather like in
   * seattle?
   */
  text?: string;
  /**
   * @member {string[]} [tokenizedText] The utterance tokenized.
   */
  tokenizedText?: string[];
  /**
   * @member {IntentPrediction[]} [intentPredictions] Predicted/suggested
   * intents.
   */
  intentPredictions?: IntentPrediction[];
  /**
   * @member {EntityPrediction[]} [entityPredictions] Predicted/suggested
   * entities.
   */
  entityPredictions?: EntityPrediction[];
}

/**
 * @interface
 * An interface representing EntitiesSuggestionExample.
 * Predicted/suggested entity.
 *
 */
export interface EntitiesSuggestionExample {
  /**
   * @member {string} [text] The utterance. E.g.: what's the weather like in
   * seattle?
   */
  text?: string;
  /**
   * @member {string[]} [tokenizedText] The utterance tokenized.
   */
  tokenizedText?: string[];
  /**
   * @member {IntentPrediction[]} [intentPredictions] Predicted/suggested
   * intents.
   */
  intentPredictions?: IntentPrediction[];
  /**
   * @member {EntityPrediction[]} [entityPredictions] Predicted/suggested
   * entities.
   */
  entityPredictions?: EntityPrediction[];
}

/**
 * @interface
 * An interface representing PersonalAssistantsResponse.
 * Response containing user's endpoint keys and the endpoint URLs of the
 * prebuilt Cortana applications.
 *
 */
export interface PersonalAssistantsResponse {
  /**
   * @member {string[]} [endpointKeys]
   */
  endpointKeys?: string[];
  /**
   * @member {{ [propertyName: string]: string }} [endpointUrls]
   */
  endpointUrls?: { [propertyName: string]: string };
}

/**
 * @interface
 * An interface representing ModelInfo.
 * Base type used in entity types.
 *
 */
export interface ModelInfo {
  /**
   * @member {string} id The ID of the Entity Model.
   */
  id: string;
  /**
   * @member {string} [name] Name of the Entity Model.
   */
  name?: string;
  /**
   * @member {number} [typeId] The type ID of the Entity Model.
   */
  typeId?: number;
  /**
   * @member {ReadableType} readableType Possible values include: 'Entity
   * Extractor', 'Hierarchical Entity Extractor', 'Hierarchical Child Entity
   * Extractor', 'Composite Entity Extractor', 'Closed List Entity Extractor',
   * 'Prebuilt Entity Extractor', 'Intent Classifier', 'Pattern.Any Entity
   * Extractor', 'Regex Entity Extractor'
   */
  readableType: ReadableType;
}

/**
 * @interface
 * An interface representing EntityRole.
 * Entity extractor role
 *
 */
export interface EntityRole {
  /**
   * @member {string} [id] The entity role ID.
   */
  id?: string;
  /**
   * @member {string} [name] The entity role name.
   */
  name?: string;
}

/**
 * @interface
 * An interface representing ChildEntity.
 * The base child entity type.
 *
 */
export interface ChildEntity {
  /**
   * @member {string} id The ID (GUID) belonging to a child entity.
   */
  id: string;
  /**
   * @member {string} [name] The name of a child entity.
   */
  name?: string;
}

/**
 * @interface
 * An interface representing ExplicitListItem.
 * Explicit list item
 *
 */
export interface ExplicitListItem {
  /**
   * @member {number} [id] The explicit list item ID.
   */
  id?: number;
  /**
   * @member {string} [explicitListItem] The explicit list item value.
   */
  explicitListItem?: string;
}

/**
 * @interface
 * An interface representing ModelInfoResponse.
 * An application model info.
 *
 */
export interface ModelInfoResponse {
  /**
   * @member {string} id The ID of the Entity Model.
   */
  id: string;
  /**
   * @member {string} [name] Name of the Entity Model.
   */
  name?: string;
  /**
   * @member {number} [typeId] The type ID of the Entity Model.
   */
  typeId?: number;
  /**
   * @member {ReadableType1} readableType Possible values include: 'Entity
   * Extractor', 'Hierarchical Entity Extractor', 'Hierarchical Child Entity
   * Extractor', 'Composite Entity Extractor', 'Closed List Entity Extractor',
   * 'Prebuilt Entity Extractor', 'Intent Classifier', 'Pattern.Any Entity
   * Extractor', 'Regex Entity Extractor'
   */
  readableType: ReadableType1;
  /**
   * @member {EntityRole[]} [roles]
   */
  roles?: EntityRole[];
  /**
   * @member {ChildEntity[]} [children] List of child entities.
   */
  children?: ChildEntity[];
  /**
   * @member {SubClosedListResponse[]} [subLists] List of sub-lists.
   */
  subLists?: SubClosedListResponse[];
  /**
   * @member {string} [customPrebuiltDomainName] The domain name.
   */
  customPrebuiltDomainName?: string;
  /**
   * @member {string} [customPrebuiltModelName] The intent name or entity name.
   */
  customPrebuiltModelName?: string;
  /**
   * @member {string} [regexPattern] The Regex entity pattern.
   */
  regexPattern?: string;
  /**
   * @member {ExplicitListItem[]} [explicitList]
   */
  explicitList?: ExplicitListItem[];
}

/**
 * @interface
 * An interface representing EntityModelInfo.
 * An Entity Extractor model info.
 *
 * @extends ModelInfo
 */
export interface EntityModelInfo extends ModelInfo {
  /**
   * @member {EntityRole[]} [roles]
   */
  roles?: EntityRole[];
}

/**
 * @interface
 * An interface representing HierarchicalEntityExtractor.
 * Hierarchical Entity Extractor.
 *
 */
export interface HierarchicalEntityExtractor {
  /**
   * @member {string} id The ID of the Entity Model.
   */
  id: string;
  /**
   * @member {string} [name] Name of the Entity Model.
   */
  name?: string;
  /**
   * @member {number} [typeId] The type ID of the Entity Model.
   */
  typeId?: number;
  /**
   * @member {ReadableType2} readableType Possible values include: 'Entity
   * Extractor', 'Hierarchical Entity Extractor', 'Hierarchical Child Entity
   * Extractor', 'Composite Entity Extractor', 'Closed List Entity Extractor',
   * 'Prebuilt Entity Extractor', 'Intent Classifier', 'Pattern.Any Entity
   * Extractor', 'Regex Entity Extractor'
   */
  readableType: ReadableType2;
  /**
   * @member {EntityRole[]} [roles]
   */
  roles?: EntityRole[];
  /**
   * @member {ChildEntity[]} [children] List of child entities.
   */
  children?: ChildEntity[];
}

/**
 * @interface
 * An interface representing CompositeEntityExtractor.
 * A Composite Entity Extractor.
 *
 */
export interface CompositeEntityExtractor {
  /**
   * @member {string} id The ID of the Entity Model.
   */
  id: string;
  /**
   * @member {string} [name] Name of the Entity Model.
   */
  name?: string;
  /**
   * @member {number} [typeId] The type ID of the Entity Model.
   */
  typeId?: number;
  /**
   * @member {ReadableType3} readableType Possible values include: 'Entity
   * Extractor', 'Hierarchical Entity Extractor', 'Hierarchical Child Entity
   * Extractor', 'Composite Entity Extractor', 'Closed List Entity Extractor',
   * 'Prebuilt Entity Extractor', 'Intent Classifier', 'Pattern.Any Entity
   * Extractor', 'Regex Entity Extractor'
   */
  readableType: ReadableType3;
  /**
   * @member {EntityRole[]} [roles]
   */
  roles?: EntityRole[];
  /**
   * @member {ChildEntity[]} [children] List of child entities.
   */
  children?: ChildEntity[];
}

/**
 * @interface
 * An interface representing ClosedListEntityExtractor.
 * Closed List Entity Extractor.
 *
 */
export interface ClosedListEntityExtractor {
  /**
   * @member {string} id The ID of the Entity Model.
   */
  id: string;
  /**
   * @member {string} [name] Name of the Entity Model.
   */
  name?: string;
  /**
   * @member {number} [typeId] The type ID of the Entity Model.
   */
  typeId?: number;
  /**
   * @member {ReadableType4} readableType Possible values include: 'Entity
   * Extractor', 'Hierarchical Entity Extractor', 'Hierarchical Child Entity
   * Extractor', 'Composite Entity Extractor', 'Closed List Entity Extractor',
   * 'Prebuilt Entity Extractor', 'Intent Classifier', 'Pattern.Any Entity
   * Extractor', 'Regex Entity Extractor'
   */
  readableType: ReadableType4;
  /**
   * @member {EntityRole[]} [roles]
   */
  roles?: EntityRole[];
  /**
   * @member {SubClosedListResponse[]} [subLists] List of sub-lists.
   */
  subLists?: SubClosedListResponse[];
}

/**
 * @interface
 * An interface representing PrebuiltEntityExtractor.
 * Prebuilt Entity Extractor.
 *
 */
export interface PrebuiltEntityExtractor {
  /**
   * @member {string} id The ID of the Entity Model.
   */
  id: string;
  /**
   * @member {string} [name] Name of the Entity Model.
   */
  name?: string;
  /**
   * @member {number} [typeId] The type ID of the Entity Model.
   */
  typeId?: number;
  /**
   * @member {ReadableType5} readableType Possible values include: 'Entity
   * Extractor', 'Hierarchical Entity Extractor', 'Hierarchical Child Entity
   * Extractor', 'Composite Entity Extractor', 'Closed List Entity Extractor',
   * 'Prebuilt Entity Extractor', 'Intent Classifier', 'Pattern.Any Entity
   * Extractor', 'Regex Entity Extractor'
   */
  readableType: ReadableType5;
  /**
   * @member {EntityRole[]} [roles]
   */
  roles?: EntityRole[];
}

/**
 * @interface
 * An interface representing HierarchicalChildEntity.
 * A Hierarchical Child Entity.
 *
 * @extends ChildEntity
 */
export interface HierarchicalChildEntity extends ChildEntity {
  /**
   * @member {number} [typeId] The type ID of the Entity Model.
   */
  typeId?: number;
  /**
   * @member {ReadableType6} [readableType] Possible values include: 'Entity
   * Extractor', 'Hierarchical Entity Extractor', 'Hierarchical Child Entity
   * Extractor', 'Composite Entity Extractor', 'Closed List Entity Extractor',
   * 'Prebuilt Entity Extractor', 'Intent Classifier', 'Pattern.Any Entity
   * Extractor', 'Regex Entity Extractor'
   */
  readableType?: ReadableType6;
}

/**
 * @interface
 * An interface representing CustomPrebuiltModel.
 * A Custom Prebuilt model.
 *
 */
export interface CustomPrebuiltModel {
  /**
   * @member {string} id The ID of the Entity Model.
   */
  id: string;
  /**
   * @member {string} [name] Name of the Entity Model.
   */
  name?: string;
  /**
   * @member {number} [typeId] The type ID of the Entity Model.
   */
  typeId?: number;
  /**
   * @member {ReadableType7} readableType Possible values include: 'Entity
   * Extractor', 'Hierarchical Entity Extractor', 'Hierarchical Child Entity
   * Extractor', 'Composite Entity Extractor', 'Closed List Entity Extractor',
   * 'Prebuilt Entity Extractor', 'Intent Classifier', 'Pattern.Any Entity
   * Extractor', 'Regex Entity Extractor'
   */
  readableType: ReadableType7;
  /**
   * @member {string} [customPrebuiltDomainName] The domain name.
   */
  customPrebuiltDomainName?: string;
  /**
   * @member {string} [customPrebuiltModelName] The intent name or entity name.
   */
  customPrebuiltModelName?: string;
  /**
   * @member {EntityRole[]} [roles]
   */
  roles?: EntityRole[];
}

/**
 * @interface
 * An interface representing IntentClassifier.
 * Intent Classifier.
 *
 * @extends ModelInfo
 */
export interface IntentClassifier extends ModelInfo {
  /**
   * @member {string} [customPrebuiltDomainName] The domain name.
   */
  customPrebuiltDomainName?: string;
  /**
   * @member {string} [customPrebuiltModelName] The intent name or entity name.
   */
  customPrebuiltModelName?: string;
}

/**
 * @interface
 * An interface representing EntityExtractor.
 * Entity Extractor.
 *
 */
export interface EntityExtractor {
  /**
   * @member {string} id The ID of the Entity Model.
   */
  id: string;
  /**
   * @member {string} [name] Name of the Entity Model.
   */
  name?: string;
  /**
   * @member {number} [typeId] The type ID of the Entity Model.
   */
  typeId?: number;
  /**
   * @member {ReadableType8} readableType Possible values include: 'Entity
   * Extractor', 'Hierarchical Entity Extractor', 'Hierarchical Child Entity
   * Extractor', 'Composite Entity Extractor', 'Closed List Entity Extractor',
   * 'Prebuilt Entity Extractor', 'Intent Classifier', 'Pattern.Any Entity
   * Extractor', 'Regex Entity Extractor'
   */
  readableType: ReadableType8;
  /**
   * @member {EntityRole[]} [roles]
   */
  roles?: EntityRole[];
  /**
   * @member {string} [customPrebuiltDomainName] The domain name.
   */
  customPrebuiltDomainName?: string;
  /**
   * @member {string} [customPrebuiltModelName] The intent name or entity name.
   */
  customPrebuiltModelName?: string;
}

/**
 * @interface
 * An interface representing FeatureInfoObject.
 * The base class Features-related response objects inherit from.
 *
 */
export interface FeatureInfoObject {
  /**
   * @member {number} [id] A six-digit ID used for Features.
   */
  id?: number;
  /**
   * @member {string} [name] The name of the Feature.
   */
  name?: string;
  /**
   * @member {boolean} [isActive] Indicates if the feature is enabled.
   */
  isActive?: boolean;
}

/**
 * @interface
 * An interface representing PhraseListFeatureInfo.
 * Phraselist Feature.
 *
 * @extends FeatureInfoObject
 */
export interface PhraseListFeatureInfo extends FeatureInfoObject {
  /**
   * @member {string} [phrases] A list of comma-separated values.
   */
  phrases?: string;
  /**
   * @member {boolean} [isExchangeable] An exchangeable phrase list feature are
   * serves as single feature to the LUIS underlying training algorithm. It is
   * used as a lexicon lookup feature where its value is 1 if the lexicon
   * contains a given word or 0 if it doesnâ€™t. Think of an exchangeable as a
   * synonyms list. A non-exchangeable phrase list feature has all the phrases
   * in the list serve as separate features to the underlying training
   * algorithm. So, if you your phrase list feature contains 5 phrases, they
   * will be mapped to 5 separate features. You can think of the
   * non-exchangeable phrase list feature as an additional bag of words that
   * you are willing to add to LUIS existing vocabulary features. Think of a
   * non-exchangeable as set of different words. Default value is true.
   */
  isExchangeable?: boolean;
}

/**
 * @interface
 * An interface representing PatternFeatureInfo.
 * Pattern feature.
 *
 * @extends FeatureInfoObject
 */
export interface PatternFeatureInfo extends FeatureInfoObject {
  /**
   * @member {string} [pattern] The Regular Expression to match.
   */
  pattern?: string;
}

/**
 * @interface
 * An interface representing FeaturesResponseObject.
 * Model Features, including Patterns and Phraselists.
 *
 */
export interface FeaturesResponseObject {
  /**
   * @member {PhraseListFeatureInfo[]} [phraselistFeatures]
   */
  phraselistFeatures?: PhraseListFeatureInfo[];
  /**
   * @member {PatternFeatureInfo[]} [patternFeatures]
   */
  patternFeatures?: PatternFeatureInfo[];
}

/**
 * @interface
 * An interface representing LabelExampleResponse.
 * Response when adding a labeled example.
 *
 */
export interface LabelExampleResponse {
  /**
   * @member {string} [utteranceText] The sample's utterance.
   */
  utteranceText?: string;
  /**
   * @member {number} [exampleId] The newly created sample ID.
   */
  exampleId?: number;
}

/**
 * @interface
 * An interface representing OperationStatus.
 * Response of an Operation status.
 *
 */
export interface OperationStatus {
  /**
   * @member {OperationStatusType} [code] Status Code. Possible values include:
   * 'Failed', 'FAILED', 'Success'
   */
  code?: OperationStatusType;
  /**
   * @member {string} [message] Status details.
   */
  message?: string;
}

/**
 * @interface
 * An interface representing BatchLabelExample.
 * Response when adding a batch of labeled examples.
 *
 */
export interface BatchLabelExample {
  /**
   * @member {LabelExampleResponse} [value]
   */
  value?: LabelExampleResponse;
  /**
   * @member {boolean} [hasError]
   */
  hasError?: boolean;
  /**
   * @member {OperationStatus} [error]
   */
  error?: OperationStatus;
}

/**
 * @interface
 * An interface representing ApplicationInfoResponse.
 * Response containing the Application Info.
 *
 */
export interface ApplicationInfoResponse {
  /**
   * @member {string} [id] The ID (GUID) of the application.
   */
  id?: string;
  /**
   * @member {string} [name] The name of the application.
   */
  name?: string;
  /**
   * @member {string} [description] The description of the application.
   */
  description?: string;
  /**
   * @member {string} [culture] The culture of the application. E.g.: en-us.
   */
  culture?: string;
  /**
   * @member {string} [usageScenario] Defines the scenario for the new
   * application. Optional. E.g.: IoT.
   */
  usageScenario?: string;
  /**
   * @member {string} [domain] The domain for the new application. Optional.
   * E.g.: Comics.
   */
  domain?: string;
  /**
   * @member {number} [versionsCount] Amount of model versions within the
   * application.
   */
  versionsCount?: number;
  /**
   * @member {string} [createdDateTime] The version's creation timestamp.
   */
  createdDateTime?: string;
  /**
   * @member {any} [endpoints] The Runtime endpoint URL for this model version.
   */
  endpoints?: any;
  /**
   * @member {number} [endpointHitsCount] Number of calls made to this
   * endpoint.
   */
  endpointHitsCount?: number;
  /**
   * @member {string} [activeVersion] The version ID currently marked as
   * active.
   */
  activeVersion?: string;
}

/**
 * @interface
 * An interface representing EndpointInfo.
 * The base class "ProductionOrStagingEndpointInfo" inherits from.
 *
 */
export interface EndpointInfo {
  /**
   * @member {string} [versionId] The version ID to publish.
   */
  versionId?: string;
  /**
   * @member {boolean} [isStaging] Indicates if the staging slot should be
   * used, instead of the Production one.
   */
  isStaging?: boolean;
  /**
   * @member {string} [endpointUrl] The Runtime endpoint URL for this model
   * version.
   */
  endpointUrl?: string;
  /**
   * @member {string} [region] The target region that the application is
   * published to.
   */
  region?: string;
  /**
   * @member {string} [assignedEndpointKey] The endpoint key.
   */
  assignedEndpointKey?: string;
  /**
   * @member {string} [endpointRegion] The endpoint's region.
   */
  endpointRegion?: string;
  /**
   * @member {string} [publishedDateTime] Timestamp when was last published.
   */
  publishedDateTime?: string;
}

/**
 * @interface
 * An interface representing ProductionOrStagingEndpointInfo.
 * @extends EndpointInfo
 */
export interface ProductionOrStagingEndpointInfo extends EndpointInfo {
}

/**
 * @interface
 * An interface representing AvailableCulture.
 * Available culture for using in a new application.
 *
 */
export interface AvailableCulture {
  /**
   * @member {string} [name] The language name.
   */
  name?: string;
  /**
   * @member {string} [code] The ISO value for the language.
   */
  code?: string;
}

/**
 * @interface
 * An interface representing ApplicationSettings.
 * The application settings.
 *
 */
export interface ApplicationSettings {
  /**
   * @member {string} id The application ID.
   */
  id: string;
  /**
   * @member {boolean} isPublic Setting your application as public allows other
   * people to use your application's endpoint using their own keys.
   */
  isPublic: boolean;
}

/**
 * @interface
 * An interface representing PublishSettings.
 * The application publish settings.
 *
 */
export interface PublishSettings {
  /**
   * @member {string} id The application ID.
   */
  id: string;
  /**
   * @member {boolean} isSentimentAnalysisEnabled Setting sentiment analysis as
   * true returns the Sentiment of the input utterance along with the resopnse
   */
  isSentimentAnalysisEnabled: boolean;
  /**
   * @member {boolean} isSpeechEnabled Setting speech as public enables speech
   * priming in your app
   */
  isSpeechEnabled: boolean;
  /**
   * @member {boolean} isSpellCheckerEnabled Setting spell checker as public
   * enables spell checking the input utterance.
   */
  isSpellCheckerEnabled: boolean;
}

/**
 * @interface
 * An interface representing AvailablePrebuiltEntityModel.
 * Available Prebuilt entity model for using in an application.
 *
 */
export interface AvailablePrebuiltEntityModel {
  /**
   * @member {string} [name] The entity name.
   */
  name?: string;
  /**
   * @member {string} [description] The entity description and usage
   * information.
   */
  description?: string;
  /**
   * @member {string} [examples] Usage examples.
   */
  examples?: string;
}

/**
 * @interface
 * An interface representing EnqueueTrainingResponse.
 * Response model when requesting to train the model.
 *
 */
export interface EnqueueTrainingResponse {
  /**
   * @member {number} [statusId] The train request status ID.
   */
  statusId?: number;
  /**
   * @member {Status} [status] Possible values include: 'Queued', 'InProgress',
   * 'UpToDate', 'Fail', 'Success'
   */
  status?: Status;
}

/**
 * @interface
 * An interface representing ModelTrainingDetails.
 * Model Training Details.
 *
 */
export interface ModelTrainingDetails {
  /**
   * @member {number} [statusId] The train request status ID.
   */
  statusId?: number;
  /**
   * @member {Status1} [status] Possible values include: 'Queued',
   * 'InProgress', 'UpToDate', 'Fail', 'Success'
   */
  status?: Status1;
  /**
   * @member {number} [exampleCount] The count of examples used to train the
   * model.
   */
  exampleCount?: number;
  /**
   * @member {Date} [trainingDateTime] When the model was trained.
   */
  trainingDateTime?: Date;
  /**
   * @member {string} [failureReason] Reason for the training failure.
   */
  failureReason?: string;
}

/**
 * @interface
 * An interface representing ModelTrainingInfo.
 * Model Training Info.
 *
 */
export interface ModelTrainingInfo {
  /**
   * @member {string} [modelId] The ID (GUID) of the model.
   */
  modelId?: string;
  /**
   * @member {ModelTrainingDetails} [details]
   */
  details?: ModelTrainingDetails;
}

/**
 * @interface
 * An interface representing UserAccessList.
 * List of user permissions.
 *
 */
export interface UserAccessList {
  /**
   * @member {string} [owner] The email address of owner of the application.
   */
  owner?: string;
  /**
   * @member {string[]} [emails]
   */
  emails?: string[];
}

/**
 * @interface
 * An interface representing UserCollaborator.
 */
export interface UserCollaborator {
  /**
   * @member {string} [email] The email address of the user.
   */
  email?: string;
}

/**
 * @interface
 * An interface representing CollaboratorsArray.
 */
export interface CollaboratorsArray {
  /**
   * @member {string[]} [emails] The email address of the users.
   */
  emails?: string[];
}

/**
 * @interface
 * An interface representing ErrorResponse.
 * Error response when invoking an operation on the API.
 *
 */
export interface ErrorResponse {
  /**
   * @member {string} [errorType]
   */
  errorType?: string;
  /**
   * @property Describes unknown properties. The value of an unknown property
   * can be of "any" type.
   */
  [property: string]: any;
}

/**
 * @interface
 * An interface representing OperationError.
 * Operation error details when invoking an operation on the API.
 *
 */
export interface OperationError {
  /**
   * @member {string} [code]
   */
  code?: string;
  /**
   * @member {string} [message]
   */
  message?: string;
}

/**
 * @interface
 * An interface representing PrebuiltDomainItem.
 */
export interface PrebuiltDomainItem {
  /**
   * @member {string} [name]
   */
  name?: string;
  /**
   * @member {string} [description]
   */
  description?: string;
  /**
   * @member {string} [examples]
   */
  examples?: string;
}

/**
 * @interface
 * An interface representing PrebuiltDomain.
 * Prebuilt Domain.
 *
 */
export interface PrebuiltDomain {
  /**
   * @member {string} [name]
   */
  name?: string;
  /**
   * @member {string} [culture]
   */
  culture?: string;
  /**
   * @member {string} [description]
   */
  description?: string;
  /**
   * @member {string} [examples]
   */
  examples?: string;
  /**
   * @member {PrebuiltDomainItem[]} [intents]
   */
  intents?: PrebuiltDomainItem[];
  /**
   * @member {PrebuiltDomainItem[]} [entities]
   */
  entities?: PrebuiltDomainItem[];
}

/**
 * @interface
 * An interface representing EntityRoleCreateObject.
 * Object model for creating an entity role.
 *
 */
export interface EntityRoleCreateObject {
  /**
   * @member {string} [name] The entity role name.
   */
  name?: string;
}

/**
 * @interface
 * An interface representing RegexModelCreateObject.
 * Model object for creating a regex entity model.
 *
 */
export interface RegexModelCreateObject {
  /**
   * @member {string} [regexPattern] The regex entity pattern.
   */
  regexPattern?: string;
  /**
   * @member {string} [name] The model name.
   */
  name?: string;
}

/**
 * @interface
 * An interface representing PatternAnyModelCreateObject.
 * Model object for creating a Pattern.Any entity model.
 *
 */
export interface PatternAnyModelCreateObject {
  /**
   * @member {string} [name] The model name.
   */
  name?: string;
  /**
   * @member {string[]} [explicitList] The Pattern.Any explicit list.
   */
  explicitList?: string[];
}

/**
 * @interface
 * An interface representing ExplicitListItemCreateObject.
 * Object model for creating an explicit list item.
 *
 */
export interface ExplicitListItemCreateObject {
  /**
   * @member {string} [explicitListItem] The explicit list item.
   */
  explicitListItem?: string;
}

/**
 * @interface
 * An interface representing RegexModelUpdateObject.
 * Model object for updating a regex entity model.
 *
 */
export interface RegexModelUpdateObject {
  /**
   * @member {string} [regexPattern] The regex entity pattern.
   */
  regexPattern?: string;
  /**
   * @member {string} [name] The model name.
   */
  name?: string;
}

/**
 * @interface
 * An interface representing PatternAnyModelUpdateObject.
 * Model object for updating a Pattern.Any entity model.
 *
 */
export interface PatternAnyModelUpdateObject {
  /**
   * @member {string} [name] The model name.
   */
  name?: string;
  /**
   * @member {string[]} [explicitList] The Pattern.Any explicit list.
   */
  explicitList?: string[];
}

/**
 * @interface
 * An interface representing EntityRoleUpdateObject.
 * Object model for updating an entity role.
 *
 */
export interface EntityRoleUpdateObject {
  /**
   * @member {string} [name] The entity role name.
   */
  name?: string;
}

/**
 * @interface
 * An interface representing ExplicitListItemUpdateObject.
 * Model object for updating an explicit list item.
 *
 */
export interface ExplicitListItemUpdateObject {
  /**
   * @member {string} [explicitListItem] The explicit list item.
   */
  explicitListItem?: string;
}

/**
 * @interface
 * An interface representing PatternRuleCreateObject.
 * Object model for creating a pattern
 *
 */
export interface PatternRuleCreateObject {
  /**
   * @member {string} [pattern] The pattern text.
   */
  pattern?: string;
  /**
   * @member {string} [intent] The intent's name which the pattern belongs to.
   */
  intent?: string;
}

/**
 * @interface
 * An interface representing PatternRuleUpdateObject.
 * Object model for updating a pattern.
 *
 */
export interface PatternRuleUpdateObject {
  /**
   * @member {string} [id] The pattern ID.
   */
  id?: string;
  /**
   * @member {string} [pattern] The pattern text.
   */
  pattern?: string;
  /**
   * @member {string} [intent] The intent's name which the pattern belongs to.
   */
  intent?: string;
}

/**
 * @interface
 * An interface representing RegexEntityExtractor.
 * Regex Entity Extractor.
 *
 */
export interface RegexEntityExtractor {
  /**
   * @member {string} id The ID of the Entity Model.
   */
  id: string;
  /**
   * @member {string} [name] Name of the Entity Model.
   */
  name?: string;
  /**
   * @member {number} [typeId] The type ID of the Entity Model.
   */
  typeId?: number;
  /**
   * @member {ReadableType9} readableType Possible values include: 'Entity
   * Extractor', 'Hierarchical Entity Extractor', 'Hierarchical Child Entity
   * Extractor', 'Composite Entity Extractor', 'Closed List Entity Extractor',
   * 'Prebuilt Entity Extractor', 'Intent Classifier', 'Pattern.Any Entity
   * Extractor', 'Regex Entity Extractor'
   */
  readableType: ReadableType9;
  /**
   * @member {EntityRole[]} [roles]
   */
  roles?: EntityRole[];
  /**
   * @member {string} [regexPattern] The Regex entity pattern.
   */
  regexPattern?: string;
}

/**
 * @interface
 * An interface representing PatternAnyEntityExtractor.
 * Pattern.Any Entity Extractor.
 *
 */
export interface PatternAnyEntityExtractor {
  /**
   * @member {string} id The ID of the Entity Model.
   */
  id: string;
  /**
   * @member {string} [name] Name of the Entity Model.
   */
  name?: string;
  /**
   * @member {number} [typeId] The type ID of the Entity Model.
   */
  typeId?: number;
  /**
   * @member {ReadableType10} readableType Possible values include: 'Entity
   * Extractor', 'Hierarchical Entity Extractor', 'Hierarchical Child Entity
   * Extractor', 'Composite Entity Extractor', 'Closed List Entity Extractor',
   * 'Prebuilt Entity Extractor', 'Intent Classifier', 'Pattern.Any Entity
   * Extractor', 'Regex Entity Extractor'
   */
  readableType: ReadableType10;
  /**
   * @member {EntityRole[]} [roles]
   */
  roles?: EntityRole[];
  /**
   * @member {ExplicitListItem[]} [explicitList]
   */
  explicitList?: ExplicitListItem[];
}

/**
 * @interface
 * An interface representing PatternRuleInfo.
 * Pattern rule
 *
 */
export interface PatternRuleInfo {
  /**
   * @member {string} [id] The pattern ID.
   */
  id?: string;
  /**
   * @member {string} [pattern] The pattern text.
   */
  pattern?: string;
  /**
   * @member {string} [intent] The intent's name where the pattern belongs to.
   */
  intent?: string;
}

/**
 * @interface
 * An interface representing LabelTextObject.
 * An object containing the example's text.
 *
 */
export interface LabelTextObject {
  /**
   * @member {number} [id] The ID of the Label.
   */
  id?: number;
  /**
   * @member {string} [text] The text of the label.
   */
  text?: string;
}

/**
 * @interface
 * An interface representing AppVersionSettingObject.
 * Object model of an application version setting.
 *
 */
export interface AppVersionSettingObject {
  /**
   * @member {string} [name] The application version setting name.
   */
  name?: string;
  /**
   * @member {string} [value] The application version setting value.
   */
  value?: string;
}

/**
 * @interface
 * An interface representing HierarchicalChildModelUpdateObject.
 */
export interface HierarchicalChildModelUpdateObject {
  /**
   * @member {string} [name]
   */
  name?: string;
}

/**
 * @interface
 * An interface representing HierarchicalChildModelCreateObject.
 */
export interface HierarchicalChildModelCreateObject {
  /**
   * @member {string} [name]
   */
  name?: string;
}

/**
 * @interface
 * An interface representing CompositeChildModelCreateObject.
 */
export interface CompositeChildModelCreateObject {
  /**
   * @member {string} [name]
   */
  name?: string;
}

/**
 * @interface
 * An interface representing FeaturesListPhraseListsOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface FeaturesListPhraseListsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [skip] The number of entries to skip. Default value is 0.
   * Default value: 0 .
   */
  skip?: number;
  /**
   * @member {number} [take] The number of entries to return. Maximum page size
   * is 500. Default is 100. Default value: 100 .
   */
  take?: number;
}

/**
 * @interface
 * An interface representing FeaturesListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface FeaturesListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [skip] The number of entries to skip. Default value is 0.
   * Default value: 0 .
   */
  skip?: number;
  /**
   * @member {number} [take] The number of entries to return. Maximum page size
   * is 500. Default is 100. Default value: 100 .
   */
  take?: number;
}

/**
 * @interface
 * An interface representing FeaturesUpdatePhraseListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface FeaturesUpdatePhraseListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {PhraselistUpdateObject} [phraselistUpdateObject] The new values
   * for: - Just a boolean called IsActive, in which case the status of the
   * feature will be changed. - Name, Pattern, Mode, and a boolean called
   * IsActive to update the feature.
   */
  phraselistUpdateObject?: PhraselistUpdateObject;
}

/**
 * @interface
 * An interface representing ExamplesListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ExamplesListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [skip] The number of entries to skip. Default value is 0.
   * Default value: 0 .
   */
  skip?: number;
  /**
   * @member {number} [take] The number of entries to return. Maximum page size
   * is 500. Default is 100. Default value: 100 .
   */
  take?: number;
}

/**
 * @interface
 * An interface representing ModelListIntentsOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ModelListIntentsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [skip] The number of entries to skip. Default value is 0.
   * Default value: 0 .
   */
  skip?: number;
  /**
   * @member {number} [take] The number of entries to return. Maximum page size
   * is 500. Default is 100. Default value: 100 .
   */
  take?: number;
}

/**
 * @interface
 * An interface representing ModelListEntitiesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ModelListEntitiesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [skip] The number of entries to skip. Default value is 0.
   * Default value: 0 .
   */
  skip?: number;
  /**
   * @member {number} [take] The number of entries to return. Maximum page size
   * is 500. Default is 100. Default value: 100 .
   */
  take?: number;
}

/**
 * @interface
 * An interface representing ModelListHierarchicalEntitiesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ModelListHierarchicalEntitiesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [skip] The number of entries to skip. Default value is 0.
   * Default value: 0 .
   */
  skip?: number;
  /**
   * @member {number} [take] The number of entries to return. Maximum page size
   * is 500. Default is 100. Default value: 100 .
   */
  take?: number;
}

/**
 * @interface
 * An interface representing ModelListCompositeEntitiesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ModelListCompositeEntitiesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [skip] The number of entries to skip. Default value is 0.
   * Default value: 0 .
   */
  skip?: number;
  /**
   * @member {number} [take] The number of entries to return. Maximum page size
   * is 500. Default is 100. Default value: 100 .
   */
  take?: number;
}

/**
 * @interface
 * An interface representing ModelListClosedListsOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ModelListClosedListsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [skip] The number of entries to skip. Default value is 0.
   * Default value: 0 .
   */
  skip?: number;
  /**
   * @member {number} [take] The number of entries to return. Maximum page size
   * is 500. Default is 100. Default value: 100 .
   */
  take?: number;
}

/**
 * @interface
 * An interface representing ModelListPrebuiltsOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ModelListPrebuiltsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [skip] The number of entries to skip. Default value is 0.
   * Default value: 0 .
   */
  skip?: number;
  /**
   * @member {number} [take] The number of entries to return. Maximum page size
   * is 500. Default is 100. Default value: 100 .
   */
  take?: number;
}

/**
 * @interface
 * An interface representing ModelListModelsOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ModelListModelsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [skip] The number of entries to skip. Default value is 0.
   * Default value: 0 .
   */
  skip?: number;
  /**
   * @member {number} [take] The number of entries to return. Maximum page size
   * is 500. Default is 100. Default value: 100 .
   */
  take?: number;
}

/**
 * @interface
 * An interface representing ModelExamplesMethodOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ModelExamplesMethodOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [skip] The number of entries to skip. Default value is 0.
   * Default value: 0 .
   */
  skip?: number;
  /**
   * @member {number} [take] The number of entries to return. Maximum page size
   * is 500. Default is 100. Default value: 100 .
   */
  take?: number;
}

/**
 * @interface
 * An interface representing ModelDeleteIntentOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ModelDeleteIntentOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [deleteUtterances] Also delete the intent's utterances
   * (true). Or move the utterances to the None intent (false - the default
   * value). Default value: false .
   */
  deleteUtterances?: boolean;
}

/**
 * @interface
 * An interface representing ModelGetIntentSuggestionsOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ModelGetIntentSuggestionsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [take] The number of entries to return. Maximum page size
   * is 500. Default is 100. Default value: 100 .
   */
  take?: number;
}

/**
 * @interface
 * An interface representing ModelGetEntitySuggestionsOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ModelGetEntitySuggestionsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [take] The number of entries to return. Maximum page size
   * is 500. Default is 100. Default value: 100 .
   */
  take?: number;
}

/**
 * @interface
 * An interface representing ModelGetRegexEntityInfosOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ModelGetRegexEntityInfosOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [skip] The number of entries to skip. Default value is 0.
   * Default value: 0 .
   */
  skip?: number;
  /**
   * @member {number} [take] The number of entries to return. Maximum page size
   * is 500. Default is 100. Default value: 100 .
   */
  take?: number;
}

/**
 * @interface
 * An interface representing ModelGetPatternAnyEntityInfosOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ModelGetPatternAnyEntityInfosOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [skip] The number of entries to skip. Default value is 0.
   * Default value: 0 .
   */
  skip?: number;
  /**
   * @member {number} [take] The number of entries to return. Maximum page size
   * is 500. Default is 100. Default value: 100 .
   */
  take?: number;
}

/**
 * @interface
 * An interface representing AppsListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface AppsListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [skip] The number of entries to skip. Default value is 0.
   * Default value: 0 .
   */
  skip?: number;
  /**
   * @member {number} [take] The number of entries to return. Maximum page size
   * is 500. Default is 100. Default value: 100 .
   */
  take?: number;
}

/**
 * @interface
 * An interface representing AppsImportMethodOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface AppsImportMethodOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [appName] The application name to create. If not
   * specified, the application name will be read from the imported object.
   */
  appName?: string;
}

/**
 * @interface
 * An interface representing VersionsCloneOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface VersionsCloneOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {TaskUpdateObject} [versionCloneObject] A model containing the new
   * version ID.
   */
  versionCloneObject?: TaskUpdateObject;
}

/**
 * @interface
 * An interface representing VersionsListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface VersionsListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [skip] The number of entries to skip. Default value is 0.
   * Default value: 0 .
   */
  skip?: number;
  /**
   * @member {number} [take] The number of entries to return. Maximum page size
   * is 500. Default is 100. Default value: 100 .
   */
  take?: number;
}

/**
 * @interface
 * An interface representing VersionsImportMethodOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface VersionsImportMethodOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [versionId] The new versionId to import. If not
   * specified, the versionId will be read from the imported object.
   */
  versionId?: string;
}

/**
 * @interface
 * An interface representing PatternGetPatternsOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface PatternGetPatternsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [skip] The number of entries to skip. Default value is 0.
   * Default value: 0 .
   */
  skip?: number;
  /**
   * @member {number} [take] The number of entries to return. Maximum page size
   * is 500. Default is 100. Default value: 100 .
   */
  take?: number;
}

/**
 * @interface
 * An interface representing PatternGetIntentPatternsOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface PatternGetIntentPatternsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [skip] The number of entries to skip. Default value is 0.
   * Default value: 0 .
   */
  skip?: number;
  /**
   * @member {number} [take] The number of entries to return. Maximum page size
   * is 500. Default is 100. Default value: 100 .
   */
  take?: number;
}

/**
 * Defines values for TrainingStatus.
 * Possible values include: 'NeedsTraining', 'InProgress', 'Trained'
 * @readonly
 * @enum {string}
 */
export type TrainingStatus = 'NeedsTraining' | 'InProgress' | 'Trained';

/**
 * Defines values for OperationStatusType.
 * Possible values include: 'Failed', 'FAILED', 'Success'
 * @readonly
 * @enum {string}
 */
export type OperationStatusType = 'Failed' | 'FAILED' | 'Success';

/**
 * Defines values for ReadableType.
 * Possible values include: 'Entity Extractor', 'Hierarchical Entity Extractor', 'Hierarchical
 * Child Entity Extractor', 'Composite Entity Extractor', 'Closed List Entity Extractor', 'Prebuilt
 * Entity Extractor', 'Intent Classifier', 'Pattern.Any Entity Extractor', 'Regex Entity Extractor'
 * @readonly
 * @enum {string}
 */
export type ReadableType = 'Entity Extractor' | 'Hierarchical Entity Extractor' | 'Hierarchical Child Entity Extractor' | 'Composite Entity Extractor' | 'Closed List Entity Extractor' | 'Prebuilt Entity Extractor' | 'Intent Classifier' | 'Pattern.Any Entity Extractor' | 'Regex Entity Extractor';

/**
 * Defines values for ReadableType1.
 * Possible values include: 'Entity Extractor', 'Hierarchical Entity Extractor', 'Hierarchical
 * Child Entity Extractor', 'Composite Entity Extractor', 'Closed List Entity Extractor', 'Prebuilt
 * Entity Extractor', 'Intent Classifier', 'Pattern.Any Entity Extractor', 'Regex Entity Extractor'
 * @readonly
 * @enum {string}
 */
export type ReadableType1 = 'Entity Extractor' | 'Hierarchical Entity Extractor' | 'Hierarchical Child Entity Extractor' | 'Composite Entity Extractor' | 'Closed List Entity Extractor' | 'Prebuilt Entity Extractor' | 'Intent Classifier' | 'Pattern.Any Entity Extractor' | 'Regex Entity Extractor';

/**
 * Defines values for ReadableType2.
 * Possible values include: 'Entity Extractor', 'Hierarchical Entity Extractor', 'Hierarchical
 * Child Entity Extractor', 'Composite Entity Extractor', 'Closed List Entity Extractor', 'Prebuilt
 * Entity Extractor', 'Intent Classifier', 'Pattern.Any Entity Extractor', 'Regex Entity Extractor'
 * @readonly
 * @enum {string}
 */
export type ReadableType2 = 'Entity Extractor' | 'Hierarchical Entity Extractor' | 'Hierarchical Child Entity Extractor' | 'Composite Entity Extractor' | 'Closed List Entity Extractor' | 'Prebuilt Entity Extractor' | 'Intent Classifier' | 'Pattern.Any Entity Extractor' | 'Regex Entity Extractor';

/**
 * Defines values for ReadableType3.
 * Possible values include: 'Entity Extractor', 'Hierarchical Entity Extractor', 'Hierarchical
 * Child Entity Extractor', 'Composite Entity Extractor', 'Closed List Entity Extractor', 'Prebuilt
 * Entity Extractor', 'Intent Classifier', 'Pattern.Any Entity Extractor', 'Regex Entity Extractor'
 * @readonly
 * @enum {string}
 */
export type ReadableType3 = 'Entity Extractor' | 'Hierarchical Entity Extractor' | 'Hierarchical Child Entity Extractor' | 'Composite Entity Extractor' | 'Closed List Entity Extractor' | 'Prebuilt Entity Extractor' | 'Intent Classifier' | 'Pattern.Any Entity Extractor' | 'Regex Entity Extractor';

/**
 * Defines values for ReadableType4.
 * Possible values include: 'Entity Extractor', 'Hierarchical Entity Extractor', 'Hierarchical
 * Child Entity Extractor', 'Composite Entity Extractor', 'Closed List Entity Extractor', 'Prebuilt
 * Entity Extractor', 'Intent Classifier', 'Pattern.Any Entity Extractor', 'Regex Entity Extractor'
 * @readonly
 * @enum {string}
 */
export type ReadableType4 = 'Entity Extractor' | 'Hierarchical Entity Extractor' | 'Hierarchical Child Entity Extractor' | 'Composite Entity Extractor' | 'Closed List Entity Extractor' | 'Prebuilt Entity Extractor' | 'Intent Classifier' | 'Pattern.Any Entity Extractor' | 'Regex Entity Extractor';

/**
 * Defines values for ReadableType5.
 * Possible values include: 'Entity Extractor', 'Hierarchical Entity Extractor', 'Hierarchical
 * Child Entity Extractor', 'Composite Entity Extractor', 'Closed List Entity Extractor', 'Prebuilt
 * Entity Extractor', 'Intent Classifier', 'Pattern.Any Entity Extractor', 'Regex Entity Extractor'
 * @readonly
 * @enum {string}
 */
export type ReadableType5 = 'Entity Extractor' | 'Hierarchical Entity Extractor' | 'Hierarchical Child Entity Extractor' | 'Composite Entity Extractor' | 'Closed List Entity Extractor' | 'Prebuilt Entity Extractor' | 'Intent Classifier' | 'Pattern.Any Entity Extractor' | 'Regex Entity Extractor';

/**
 * Defines values for ReadableType6.
 * Possible values include: 'Entity Extractor', 'Hierarchical Entity Extractor', 'Hierarchical
 * Child Entity Extractor', 'Composite Entity Extractor', 'Closed List Entity Extractor', 'Prebuilt
 * Entity Extractor', 'Intent Classifier', 'Pattern.Any Entity Extractor', 'Regex Entity Extractor'
 * @readonly
 * @enum {string}
 */
export type ReadableType6 = 'Entity Extractor' | 'Hierarchical Entity Extractor' | 'Hierarchical Child Entity Extractor' | 'Composite Entity Extractor' | 'Closed List Entity Extractor' | 'Prebuilt Entity Extractor' | 'Intent Classifier' | 'Pattern.Any Entity Extractor' | 'Regex Entity Extractor';

/**
 * Defines values for ReadableType7.
 * Possible values include: 'Entity Extractor', 'Hierarchical Entity Extractor', 'Hierarchical
 * Child Entity Extractor', 'Composite Entity Extractor', 'Closed List Entity Extractor', 'Prebuilt
 * Entity Extractor', 'Intent Classifier', 'Pattern.Any Entity Extractor', 'Regex Entity Extractor'
 * @readonly
 * @enum {string}
 */
export type ReadableType7 = 'Entity Extractor' | 'Hierarchical Entity Extractor' | 'Hierarchical Child Entity Extractor' | 'Composite Entity Extractor' | 'Closed List Entity Extractor' | 'Prebuilt Entity Extractor' | 'Intent Classifier' | 'Pattern.Any Entity Extractor' | 'Regex Entity Extractor';

/**
 * Defines values for ReadableType8.
 * Possible values include: 'Entity Extractor', 'Hierarchical Entity Extractor', 'Hierarchical
 * Child Entity Extractor', 'Composite Entity Extractor', 'Closed List Entity Extractor', 'Prebuilt
 * Entity Extractor', 'Intent Classifier', 'Pattern.Any Entity Extractor', 'Regex Entity Extractor'
 * @readonly
 * @enum {string}
 */
export type ReadableType8 = 'Entity Extractor' | 'Hierarchical Entity Extractor' | 'Hierarchical Child Entity Extractor' | 'Composite Entity Extractor' | 'Closed List Entity Extractor' | 'Prebuilt Entity Extractor' | 'Intent Classifier' | 'Pattern.Any Entity Extractor' | 'Regex Entity Extractor';

/**
 * Defines values for Status.
 * Possible values include: 'Queued', 'InProgress', 'UpToDate', 'Fail', 'Success'
 * @readonly
 * @enum {string}
 */
export type Status = 'Queued' | 'InProgress' | 'UpToDate' | 'Fail' | 'Success';

/**
 * Defines values for Status1.
 * Possible values include: 'Queued', 'InProgress', 'UpToDate', 'Fail', 'Success'
 * @readonly
 * @enum {string}
 */
export type Status1 = 'Queued' | 'InProgress' | 'UpToDate' | 'Fail' | 'Success';

/**
 * Defines values for ReadableType9.
 * Possible values include: 'Entity Extractor', 'Hierarchical Entity Extractor', 'Hierarchical
 * Child Entity Extractor', 'Composite Entity Extractor', 'Closed List Entity Extractor', 'Prebuilt
 * Entity Extractor', 'Intent Classifier', 'Pattern.Any Entity Extractor', 'Regex Entity Extractor'
 * @readonly
 * @enum {string}
 */
export type ReadableType9 = 'Entity Extractor' | 'Hierarchical Entity Extractor' | 'Hierarchical Child Entity Extractor' | 'Composite Entity Extractor' | 'Closed List Entity Extractor' | 'Prebuilt Entity Extractor' | 'Intent Classifier' | 'Pattern.Any Entity Extractor' | 'Regex Entity Extractor';

/**
 * Defines values for ReadableType10.
 * Possible values include: 'Entity Extractor', 'Hierarchical Entity Extractor', 'Hierarchical
 * Child Entity Extractor', 'Composite Entity Extractor', 'Closed List Entity Extractor', 'Prebuilt
 * Entity Extractor', 'Intent Classifier', 'Pattern.Any Entity Extractor', 'Regex Entity Extractor'
 * @readonly
 * @enum {string}
 */
export type ReadableType10 = 'Entity Extractor' | 'Hierarchical Entity Extractor' | 'Hierarchical Child Entity Extractor' | 'Composite Entity Extractor' | 'Closed List Entity Extractor' | 'Prebuilt Entity Extractor' | 'Intent Classifier' | 'Pattern.Any Entity Extractor' | 'Regex Entity Extractor';

/**
 * Contains response data for the addPhraseList operation.
 */
export type FeaturesAddPhraseListResponse = {
  /**
   * The parsed response body.
   */
  body: number;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: number;
    };
};

/**
 * Contains response data for the listPhraseLists operation.
 */
export type FeaturesListPhraseListsResponse = Array<PhraseListFeatureInfo> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PhraseListFeatureInfo[];
    };
};

/**
 * Contains response data for the list operation.
 */
export type FeaturesListResponse = FeaturesResponseObject & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FeaturesResponseObject;
    };
};

/**
 * Contains response data for the getPhraseList operation.
 */
export type FeaturesGetPhraseListResponse = PhraseListFeatureInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PhraseListFeatureInfo;
    };
};

/**
 * Contains response data for the updatePhraseList operation.
 */
export type FeaturesUpdatePhraseListResponse = OperationStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationStatus;
    };
};

/**
 * Contains response data for the deletePhraseList operation.
 */
export type FeaturesDeletePhraseListResponse = OperationStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationStatus;
    };
};

/**
 * Contains response data for the add operation.
 */
export type ExamplesAddResponse = LabelExampleResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LabelExampleResponse;
    };
};

/**
 * Contains response data for the batch operation.
 */
export type ExamplesBatchResponse = Array<BatchLabelExample> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BatchLabelExample[];
    };
};

/**
 * Contains response data for the list operation.
 */
export type ExamplesListResponse = Array<LabeledUtterance> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LabeledUtterance[];
    };
};

/**
 * Contains response data for the deleteMethod operation.
 */
export type ExamplesDeleteMethodResponse = OperationStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationStatus;
    };
};

/**
 * Contains response data for the addIntent operation.
 */
export type ModelAddIntentResponse = {
  /**
   * The parsed response body.
   */
  body: string;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the listIntents operation.
 */
export type ModelListIntentsResponse = Array<IntentClassifier> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IntentClassifier[];
    };
};

/**
 * Contains response data for the addEntity operation.
 */
export type ModelAddEntityResponse = {
  /**
   * The parsed response body.
   */
  body: string;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the listEntities operation.
 */
export type ModelListEntitiesResponse = Array<EntityExtractor> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EntityExtractor[];
    };
};

/**
 * Contains response data for the addHierarchicalEntity operation.
 */
export type ModelAddHierarchicalEntityResponse = {
  /**
   * The parsed response body.
   */
  body: string;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the listHierarchicalEntities operation.
 */
export type ModelListHierarchicalEntitiesResponse = Array<HierarchicalEntityExtractor> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HierarchicalEntityExtractor[];
    };
};

/**
 * Contains response data for the addCompositeEntity operation.
 */
export type ModelAddCompositeEntityResponse = {
  /**
   * The parsed response body.
   */
  body: string;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the listCompositeEntities operation.
 */
export type ModelListCompositeEntitiesResponse = Array<CompositeEntityExtractor> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CompositeEntityExtractor[];
    };
};

/**
 * Contains response data for the listClosedLists operation.
 */
export type ModelListClosedListsResponse = Array<ClosedListEntityExtractor> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ClosedListEntityExtractor[];
    };
};

/**
 * Contains response data for the addClosedList operation.
 */
export type ModelAddClosedListResponse = {
  /**
   * The parsed response body.
   */
  body: string;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the addPrebuilt operation.
 */
export type ModelAddPrebuiltResponse = Array<PrebuiltEntityExtractor> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrebuiltEntityExtractor[];
    };
};

/**
 * Contains response data for the listPrebuilts operation.
 */
export type ModelListPrebuiltsResponse = Array<PrebuiltEntityExtractor> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrebuiltEntityExtractor[];
    };
};

/**
 * Contains response data for the listPrebuiltEntities operation.
 */
export type ModelListPrebuiltEntitiesResponse = Array<AvailablePrebuiltEntityModel> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AvailablePrebuiltEntityModel[];
    };
};

/**
 * Contains response data for the listModels operation.
 */
export type ModelListModelsResponse = Array<ModelInfoResponse> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ModelInfoResponse[];
    };
};

/**
 * Contains response data for the examplesMethod operation.
 */
export type ModelExamplesMethodResponse = Array<LabelTextObject> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LabelTextObject[];
    };
};

/**
 * Contains response data for the getIntent operation.
 */
export type ModelGetIntentResponse = IntentClassifier & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IntentClassifier;
    };
};

/**
 * Contains response data for the updateIntent operation.
 */
export type ModelUpdateIntentResponse = OperationStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationStatus;
    };
};

/**
 * Contains response data for the deleteIntent operation.
 */
export type ModelDeleteIntentResponse = OperationStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationStatus;
    };
};

/**
 * Contains response data for the getEntity operation.
 */
export type ModelGetEntityResponse = EntityExtractor & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EntityExtractor;
    };
};

/**
 * Contains response data for the updateEntity operation.
 */
export type ModelUpdateEntityResponse = OperationStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationStatus;
    };
};

/**
 * Contains response data for the deleteEntity operation.
 */
export type ModelDeleteEntityResponse = OperationStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationStatus;
    };
};

/**
 * Contains response data for the getHierarchicalEntity operation.
 */
export type ModelGetHierarchicalEntityResponse = HierarchicalEntityExtractor & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HierarchicalEntityExtractor;
    };
};

/**
 * Contains response data for the updateHierarchicalEntity operation.
 */
export type ModelUpdateHierarchicalEntityResponse = OperationStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationStatus;
    };
};

/**
 * Contains response data for the deleteHierarchicalEntity operation.
 */
export type ModelDeleteHierarchicalEntityResponse = OperationStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationStatus;
    };
};

/**
 * Contains response data for the getCompositeEntity operation.
 */
export type ModelGetCompositeEntityResponse = CompositeEntityExtractor & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CompositeEntityExtractor;
    };
};

/**
 * Contains response data for the updateCompositeEntity operation.
 */
export type ModelUpdateCompositeEntityResponse = OperationStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationStatus;
    };
};

/**
 * Contains response data for the deleteCompositeEntity operation.
 */
export type ModelDeleteCompositeEntityResponse = OperationStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationStatus;
    };
};

/**
 * Contains response data for the getClosedList operation.
 */
export type ModelGetClosedListResponse = ClosedListEntityExtractor & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ClosedListEntityExtractor;
    };
};

/**
 * Contains response data for the updateClosedList operation.
 */
export type ModelUpdateClosedListResponse = OperationStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationStatus;
    };
};

/**
 * Contains response data for the patchClosedList operation.
 */
export type ModelPatchClosedListResponse = OperationStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationStatus;
    };
};

/**
 * Contains response data for the deleteClosedList operation.
 */
export type ModelDeleteClosedListResponse = OperationStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationStatus;
    };
};

/**
 * Contains response data for the getPrebuilt operation.
 */
export type ModelGetPrebuiltResponse = PrebuiltEntityExtractor & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrebuiltEntityExtractor;
    };
};

/**
 * Contains response data for the deletePrebuilt operation.
 */
export type ModelDeletePrebuiltResponse = OperationStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationStatus;
    };
};

/**
 * Contains response data for the deleteSubList operation.
 */
export type ModelDeleteSubListResponse = OperationStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationStatus;
    };
};

/**
 * Contains response data for the updateSubList operation.
 */
export type ModelUpdateSubListResponse = OperationStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationStatus;
    };
};

/**
 * Contains response data for the getIntentSuggestions operation.
 */
export type ModelGetIntentSuggestionsResponse = Array<IntentsSuggestionExample> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IntentsSuggestionExample[];
    };
};

/**
 * Contains response data for the getEntitySuggestions operation.
 */
export type ModelGetEntitySuggestionsResponse = Array<EntitiesSuggestionExample> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EntitiesSuggestionExample[];
    };
};

/**
 * Contains response data for the addSubList operation.
 */
export type ModelAddSubListResponse = {
  /**
   * The parsed response body.
   */
  body: number;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: number;
    };
};

/**
 * Contains response data for the addCustomPrebuiltDomain operation.
 */
export type ModelAddCustomPrebuiltDomainResponse = Array<string> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string[];
    };
};

/**
 * Contains response data for the addCustomPrebuiltIntent operation.
 */
export type ModelAddCustomPrebuiltIntentResponse = {
  /**
   * The parsed response body.
   */
  body: string;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the listCustomPrebuiltIntents operation.
 */
export type ModelListCustomPrebuiltIntentsResponse = Array<IntentClassifier> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IntentClassifier[];
    };
};

/**
 * Contains response data for the addCustomPrebuiltEntity operation.
 */
export type ModelAddCustomPrebuiltEntityResponse = {
  /**
   * The parsed response body.
   */
  body: string;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the listCustomPrebuiltEntities operation.
 */
export type ModelListCustomPrebuiltEntitiesResponse = Array<EntityExtractor> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EntityExtractor[];
    };
};

/**
 * Contains response data for the listCustomPrebuiltModels operation.
 */
export type ModelListCustomPrebuiltModelsResponse = Array<CustomPrebuiltModel> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CustomPrebuiltModel[];
    };
};

/**
 * Contains response data for the deleteCustomPrebuiltDomain operation.
 */
export type ModelDeleteCustomPrebuiltDomainResponse = OperationStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationStatus;
    };
};

/**
 * Contains response data for the getHierarchicalEntityChild operation.
 */
export type ModelGetHierarchicalEntityChildResponse = HierarchicalChildEntity & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HierarchicalChildEntity;
    };
};

/**
 * Contains response data for the updateHierarchicalEntityChild operation.
 */
export type ModelUpdateHierarchicalEntityChildResponse = OperationStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationStatus;
    };
};

/**
 * Contains response data for the deleteHierarchicalEntityChild operation.
 */
export type ModelDeleteHierarchicalEntityChildResponse = OperationStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationStatus;
    };
};

/**
 * Contains response data for the addHierarchicalEntityChild operation.
 */
export type ModelAddHierarchicalEntityChildResponse = {
  /**
   * The parsed response body.
   */
  body: string;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the addCompositeEntityChild operation.
 */
export type ModelAddCompositeEntityChildResponse = {
  /**
   * The parsed response body.
   */
  body: string;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the deleteCompositeEntityChild operation.
 */
export type ModelDeleteCompositeEntityChildResponse = OperationStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationStatus;
    };
};

/**
 * Contains response data for the getRegexEntityInfos operation.
 */
export type ModelGetRegexEntityInfosResponse = Array<RegexEntityExtractor> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RegexEntityExtractor[];
    };
};

/**
 * Contains response data for the createRegexEntityModel operation.
 */
export type ModelCreateRegexEntityModelResponse = {
  /**
   * The parsed response body.
   */
  body: string;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the getPatternAnyEntityInfos operation.
 */
export type ModelGetPatternAnyEntityInfosResponse = Array<PatternAnyEntityExtractor> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PatternAnyEntityExtractor[];
    };
};

/**
 * Contains response data for the createPatternAnyEntityModel operation.
 */
export type ModelCreatePatternAnyEntityModelResponse = {
  /**
   * The parsed response body.
   */
  body: string;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the getEntityRoles operation.
 */
export type ModelGetEntityRolesResponse = Array<EntityRole> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EntityRole[];
    };
};

/**
 * Contains response data for the createEntityRole operation.
 */
export type ModelCreateEntityRoleResponse = {
  /**
   * The parsed response body.
   */
  body: string;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the getPrebuiltEntityRoles operation.
 */
export type ModelGetPrebuiltEntityRolesResponse = Array<EntityRole> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EntityRole[];
    };
};

/**
 * Contains response data for the createPrebuiltEntityRole operation.
 */
export type ModelCreatePrebuiltEntityRoleResponse = {
  /**
   * The parsed response body.
   */
  body: string;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the getClosedListEntityRoles operation.
 */
export type ModelGetClosedListEntityRolesResponse = Array<EntityRole> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EntityRole[];
    };
};

/**
 * Contains response data for the createClosedListEntityRole operation.
 */
export type ModelCreateClosedListEntityRoleResponse = {
  /**
   * The parsed response body.
   */
  body: string;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the getRegexEntityRoles operation.
 */
export type ModelGetRegexEntityRolesResponse = Array<EntityRole> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EntityRole[];
    };
};

/**
 * Contains response data for the createRegexEntityRole operation.
 */
export type ModelCreateRegexEntityRoleResponse = {
  /**
   * The parsed response body.
   */
  body: string;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the getCompositeEntityRoles operation.
 */
export type ModelGetCompositeEntityRolesResponse = Array<EntityRole> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EntityRole[];
    };
};

/**
 * Contains response data for the createCompositeEntityRole operation.
 */
export type ModelCreateCompositeEntityRoleResponse = {
  /**
   * The parsed response body.
   */
  body: string;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the getPatternAnyEntityRoles operation.
 */
export type ModelGetPatternAnyEntityRolesResponse = Array<EntityRole> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EntityRole[];
    };
};

/**
 * Contains response data for the createPatternAnyEntityRole operation.
 */
export type ModelCreatePatternAnyEntityRoleResponse = {
  /**
   * The parsed response body.
   */
  body: string;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the getHierarchicalEntityRoles operation.
 */
export type ModelGetHierarchicalEntityRolesResponse = Array<EntityRole> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EntityRole[];
    };
};

/**
 * Contains response data for the createHierarchicalEntityRole operation.
 */
export type ModelCreateHierarchicalEntityRoleResponse = {
  /**
   * The parsed response body.
   */
  body: string;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the getCustomPrebuiltEntityRoles operation.
 */
export type ModelGetCustomPrebuiltEntityRolesResponse = Array<EntityRole> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EntityRole[];
    };
};

/**
 * Contains response data for the createCustomPrebuiltEntityRole operation.
 */
export type ModelCreateCustomPrebuiltEntityRoleResponse = {
  /**
   * The parsed response body.
   */
  body: string;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the getExplicitList operation.
 */
export type ModelGetExplicitListResponse = Array<ExplicitListItem> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ExplicitListItem[];
    };
};

/**
 * Contains response data for the addExplicitListItem operation.
 */
export type ModelAddExplicitListItemResponse = {
  /**
   * The parsed response body.
   */
  body: number;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: number;
    };
};

/**
 * Contains response data for the getRegexEntityEntityInfo operation.
 */
export type ModelGetRegexEntityEntityInfoResponse = RegexEntityExtractor & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RegexEntityExtractor;
    };
};

/**
 * Contains response data for the updateRegexEntityModel operation.
 */
export type ModelUpdateRegexEntityModelResponse = OperationStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationStatus;
    };
};

/**
 * Contains response data for the deleteRegexEntityModel operation.
 */
export type ModelDeleteRegexEntityModelResponse = OperationStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationStatus;
    };
};

/**
 * Contains response data for the getPatternAnyEntityInfo operation.
 */
export type ModelGetPatternAnyEntityInfoResponse = PatternAnyEntityExtractor & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PatternAnyEntityExtractor;
    };
};

/**
 * Contains response data for the updatePatternAnyEntityModel operation.
 */
export type ModelUpdatePatternAnyEntityModelResponse = OperationStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationStatus;
    };
};

/**
 * Contains response data for the deletePatternAnyEntityModel operation.
 */
export type ModelDeletePatternAnyEntityModelResponse = OperationStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationStatus;
    };
};

/**
 * Contains response data for the getEntityRole operation.
 */
export type ModelGetEntityRoleResponse = EntityRole & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EntityRole;
    };
};

/**
 * Contains response data for the updateEntityRole operation.
 */
export type ModelUpdateEntityRoleResponse = OperationStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationStatus;
    };
};

/**
 * Contains response data for the deleteEntityRole operation.
 */
export type ModelDeleteEntityRoleResponse = OperationStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationStatus;
    };
};

/**
 * Contains response data for the getPrebuiltEntityRole operation.
 */
export type ModelGetPrebuiltEntityRoleResponse = EntityRole & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EntityRole;
    };
};

/**
 * Contains response data for the updatePrebuiltEntityRole operation.
 */
export type ModelUpdatePrebuiltEntityRoleResponse = OperationStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationStatus;
    };
};

/**
 * Contains response data for the deletePrebuiltEntityRole operation.
 */
export type ModelDeletePrebuiltEntityRoleResponse = OperationStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationStatus;
    };
};

/**
 * Contains response data for the getClosedListEntityRole operation.
 */
export type ModelGetClosedListEntityRoleResponse = EntityRole & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EntityRole;
    };
};

/**
 * Contains response data for the updateClosedListEntityRole operation.
 */
export type ModelUpdateClosedListEntityRoleResponse = OperationStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationStatus;
    };
};

/**
 * Contains response data for the deleteClosedListEntityRole operation.
 */
export type ModelDeleteClosedListEntityRoleResponse = OperationStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationStatus;
    };
};

/**
 * Contains response data for the getRegexEntityRole operation.
 */
export type ModelGetRegexEntityRoleResponse = EntityRole & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EntityRole;
    };
};

/**
 * Contains response data for the updateRegexEntityRole operation.
 */
export type ModelUpdateRegexEntityRoleResponse = OperationStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationStatus;
    };
};

/**
 * Contains response data for the deleteRegexEntityRole operation.
 */
export type ModelDeleteRegexEntityRoleResponse = OperationStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationStatus;
    };
};

/**
 * Contains response data for the getCompositeEntityRole operation.
 */
export type ModelGetCompositeEntityRoleResponse = EntityRole & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EntityRole;
    };
};

/**
 * Contains response data for the updateCompositeEntityRole operation.
 */
export type ModelUpdateCompositeEntityRoleResponse = OperationStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationStatus;
    };
};

/**
 * Contains response data for the deleteCompositeEntityRole operation.
 */
export type ModelDeleteCompositeEntityRoleResponse = OperationStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationStatus;
    };
};

/**
 * Contains response data for the getPatternAnyEntityRole operation.
 */
export type ModelGetPatternAnyEntityRoleResponse = EntityRole & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EntityRole;
    };
};

/**
 * Contains response data for the updatePatternAnyEntityRole operation.
 */
export type ModelUpdatePatternAnyEntityRoleResponse = OperationStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationStatus;
    };
};

/**
 * Contains response data for the deletePatternAnyEntityRole operation.
 */
export type ModelDeletePatternAnyEntityRoleResponse = OperationStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationStatus;
    };
};

/**
 * Contains response data for the getHierarchicalEntityRole operation.
 */
export type ModelGetHierarchicalEntityRoleResponse = EntityRole & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EntityRole;
    };
};

/**
 * Contains response data for the updateHierarchicalEntityRole operation.
 */
export type ModelUpdateHierarchicalEntityRoleResponse = OperationStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationStatus;
    };
};

/**
 * Contains response data for the deleteHierarchicalEntityRole operation.
 */
export type ModelDeleteHierarchicalEntityRoleResponse = OperationStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationStatus;
    };
};

/**
 * Contains response data for the getCustomEntityRole operation.
 */
export type ModelGetCustomEntityRoleResponse = EntityRole & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EntityRole;
    };
};

/**
 * Contains response data for the updateCustomPrebuiltEntityRole operation.
 */
export type ModelUpdateCustomPrebuiltEntityRoleResponse = OperationStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationStatus;
    };
};

/**
 * Contains response data for the deleteCustomEntityRole operation.
 */
export type ModelDeleteCustomEntityRoleResponse = OperationStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationStatus;
    };
};

/**
 * Contains response data for the getExplicitListItem operation.
 */
export type ModelGetExplicitListItemResponse = ExplicitListItem & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ExplicitListItem;
    };
};

/**
 * Contains response data for the updateExplicitListItem operation.
 */
export type ModelUpdateExplicitListItemResponse = OperationStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationStatus;
    };
};

/**
 * Contains response data for the deleteExplicitListItem operation.
 */
export type ModelDeleteExplicitListItemResponse = OperationStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationStatus;
    };
};

/**
 * Contains response data for the add operation.
 */
export type AppsAddResponse = {
  /**
   * The parsed response body.
   */
  body: string;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the list operation.
 */
export type AppsListResponse = Array<ApplicationInfoResponse> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApplicationInfoResponse[];
    };
};

/**
 * Contains response data for the importMethod operation.
 */
export type AppsImportMethodResponse = {
  /**
   * The parsed response body.
   */
  body: string;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the listCortanaEndpoints operation.
 */
export type AppsListCortanaEndpointsResponse = PersonalAssistantsResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PersonalAssistantsResponse;
    };
};

/**
 * Contains response data for the listDomains operation.
 */
export type AppsListDomainsResponse = Array<string> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string[];
    };
};

/**
 * Contains response data for the listUsageScenarios operation.
 */
export type AppsListUsageScenariosResponse = Array<string> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string[];
    };
};

/**
 * Contains response data for the listSupportedCultures operation.
 */
export type AppsListSupportedCulturesResponse = Array<AvailableCulture> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AvailableCulture[];
    };
};

/**
 * Contains response data for the downloadQueryLogs operation.
 */
export type AppsDownloadQueryLogsResponse = {
  /**
   * BROWSER ONLY
   *
   * The response body as a browser Blob.
   * Always undefined in node.js.
   */
  blobBody?: Promise<Blob>;
  /**
   * NODEJS ONLY
   *
   * The response body as a node.js Readable stream.
   * Always undefined in the browser.
   */
  readableStreamBody?: NodeJS.ReadableStream;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse;
};

/**
 * Contains response data for the get operation.
 */
export type AppsGetResponse = ApplicationInfoResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApplicationInfoResponse;
    };
};

/**
 * Contains response data for the update operation.
 */
export type AppsUpdateResponse = OperationStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationStatus;
    };
};

/**
 * Contains response data for the deleteMethod operation.
 */
export type AppsDeleteMethodResponse = OperationStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationStatus;
    };
};

/**
 * Contains response data for the publish operation.
 */
export type AppsPublishResponse = ProductionOrStagingEndpointInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProductionOrStagingEndpointInfo;
    };
};

/**
 * Contains response data for the getSettings operation.
 */
export type AppsGetSettingsResponse = ApplicationSettings & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApplicationSettings;
    };
};

/**
 * Contains response data for the updateSettings operation.
 */
export type AppsUpdateSettingsResponse = OperationStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationStatus;
    };
};

/**
 * Contains response data for the getPublishSettings operation.
 */
export type AppsGetPublishSettingsResponse = PublishSettings & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PublishSettings;
    };
};

/**
 * Contains response data for the updatePublishSettings operation.
 */
export type AppsUpdatePublishSettingsResponse = OperationStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationStatus;
    };
};

/**
 * Contains response data for the listEndpoints operation.
 */
export type AppsListEndpointsResponse = {
  /**
   * The response body properties.
   */
  [propertyName: string]: string;
} & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: { [propertyName: string]: string };
    };
};

/**
 * Contains response data for the listAvailableCustomPrebuiltDomains operation.
 */
export type AppsListAvailableCustomPrebuiltDomainsResponse = Array<PrebuiltDomain> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrebuiltDomain[];
    };
};

/**
 * Contains response data for the addCustomPrebuiltDomain operation.
 */
export type AppsAddCustomPrebuiltDomainResponse = {
  /**
   * The parsed response body.
   */
  body: string;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the listAvailableCustomPrebuiltDomainsForCulture operation.
 */
export type AppsListAvailableCustomPrebuiltDomainsForCultureResponse = Array<PrebuiltDomain> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrebuiltDomain[];
    };
};

/**
 * Contains response data for the clone operation.
 */
export type VersionsCloneResponse = {
  /**
   * The parsed response body.
   */
  body: string;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the list operation.
 */
export type VersionsListResponse = Array<VersionInfo> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VersionInfo[];
    };
};

/**
 * Contains response data for the get operation.
 */
export type VersionsGetResponse = VersionInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VersionInfo;
    };
};

/**
 * Contains response data for the update operation.
 */
export type VersionsUpdateResponse = OperationStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationStatus;
    };
};

/**
 * Contains response data for the deleteMethod operation.
 */
export type VersionsDeleteMethodResponse = OperationStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationStatus;
    };
};

/**
 * Contains response data for the exportMethod operation.
 */
export type VersionsExportMethodResponse = LuisApp & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LuisApp;
    };
};

/**
 * Contains response data for the importMethod operation.
 */
export type VersionsImportMethodResponse = {
  /**
   * The parsed response body.
   */
  body: string;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the deleteUnlabelledUtterance operation.
 */
export type VersionsDeleteUnlabelledUtteranceResponse = OperationStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationStatus;
    };
};

/**
 * Contains response data for the trainVersion operation.
 */
export type TrainTrainVersionResponse = EnqueueTrainingResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EnqueueTrainingResponse;
    };
};

/**
 * Contains response data for the getStatus operation.
 */
export type TrainGetStatusResponse = Array<ModelTrainingInfo> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ModelTrainingInfo[];
    };
};

/**
 * Contains response data for the list operation.
 */
export type PermissionsListResponse = UserAccessList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: UserAccessList;
    };
};

/**
 * Contains response data for the add operation.
 */
export type PermissionsAddResponse = OperationStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationStatus;
    };
};

/**
 * Contains response data for the deleteMethod operation.
 */
export type PermissionsDeleteMethodResponse = OperationStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationStatus;
    };
};

/**
 * Contains response data for the update operation.
 */
export type PermissionsUpdateResponse = OperationStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationStatus;
    };
};

/**
 * Contains response data for the addPattern operation.
 */
export type PatternAddPatternResponse = PatternRuleInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PatternRuleInfo;
    };
};

/**
 * Contains response data for the getPatterns operation.
 */
export type PatternGetPatternsResponse = Array<PatternRuleInfo> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PatternRuleInfo[];
    };
};

/**
 * Contains response data for the updatePatterns operation.
 */
export type PatternUpdatePatternsResponse = Array<PatternRuleInfo> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PatternRuleInfo[];
    };
};

/**
 * Contains response data for the batchAddPatterns operation.
 */
export type PatternBatchAddPatternsResponse = Array<PatternRuleInfo> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PatternRuleInfo[];
    };
};

/**
 * Contains response data for the deletePatterns operation.
 */
export type PatternDeletePatternsResponse = OperationStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationStatus;
    };
};

/**
 * Contains response data for the updatePattern operation.
 */
export type PatternUpdatePatternResponse = PatternRuleInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PatternRuleInfo;
    };
};

/**
 * Contains response data for the deletePattern operation.
 */
export type PatternDeletePatternResponse = OperationStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationStatus;
    };
};

/**
 * Contains response data for the getIntentPatterns operation.
 */
export type PatternGetIntentPatternsResponse = Array<PatternRuleInfo> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PatternRuleInfo[];
    };
};

/**
 * Contains response data for the list operation.
 */
export type SettingsListResponse = Array<AppVersionSettingObject> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AppVersionSettingObject[];
    };
};

/**
 * Contains response data for the update operation.
 */
export type SettingsUpdateResponse = OperationStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationStatus;
    };
};
