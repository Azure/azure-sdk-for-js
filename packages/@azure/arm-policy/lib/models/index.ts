/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };


/**
 * @interface
 * An interface representing PolicySku.
 * The policy sku. This property is optional, obsolete, and will be ignored.
 *
 */
export interface PolicySku {
  /**
   * @member {string} name The name of the policy sku. Possible values are A0
   * and A1.
   */
  name: string;
  /**
   * @member {string} [tier] The policy sku tier. Possible values are Free and
   * Standard.
   */
  tier?: string;
}

/**
 * @interface
 * An interface representing Identity.
 * Identity for the resource.
 *
 */
export interface Identity {
  /**
   * @member {string} [principalId] The principal ID of the resource identity.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly principalId?: string;
  /**
   * @member {string} [tenantId] The tenant ID of the resource identity.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly tenantId?: string;
  /**
   * @member {ResourceIdentityType} [type] The identity type. Possible values
   * include: 'SystemAssigned', 'None'
   */
  type?: ResourceIdentityType;
}

/**
 * @interface
 * An interface representing PolicyAssignment.
 * The policy assignment.
 *
 * @extends BaseResource
 */
export interface PolicyAssignment extends BaseResource {
  /**
   * @member {string} [displayName] The display name of the policy assignment.
   */
  displayName?: string;
  /**
   * @member {string} [policyDefinitionId] The ID of the policy definition or
   * policy set definition being assigned.
   */
  policyDefinitionId?: string;
  /**
   * @member {string} [scope] The scope for the policy assignment.
   */
  scope?: string;
  /**
   * @member {string[]} [notScopes] The policy's excluded scopes.
   */
  notScopes?: string[];
  /**
   * @member {any} [parameters] Required if a parameter is used in policy rule.
   */
  parameters?: any;
  /**
   * @member {string} [description] This message will be part of response in
   * case of policy violation.
   */
  description?: string;
  /**
   * @member {any} [metadata] The policy assignment metadata.
   */
  metadata?: any;
  /**
   * @member {string} [id] The ID of the policy assignment.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [type] The type of the policy assignment.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: string;
  /**
   * @member {string} [name] The name of the policy assignment.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {PolicySku} [sku] The policy sku. This property is optional,
   * obsolete, and will be ignored.
   */
  sku?: PolicySku;
  /**
   * @member {string} [location] The location of the policy assignment. Only
   * required when utilizing managed identity.
   */
  location?: string;
  /**
   * @member {Identity} [identity] The managed identity associated with the
   * policy assignment.
   */
  identity?: Identity;
}

/**
 * @interface
 * An interface representing ErrorResponse.
 * Error reponse indicates Azure Resource Manager is not able to process the
 * incoming request. The reason is provided in the error message.
 *
 */
export interface ErrorResponse {
  /**
   * @member {string} [httpStatus] Http status code.
   */
  httpStatus?: string;
  /**
   * @member {string} [errorCode] Error code.
   */
  errorCode?: string;
  /**
   * @member {string} [errorMessage] Error message indicating why the operation
   * failed.
   */
  errorMessage?: string;
}

/**
 * @interface
 * An interface representing PolicyDefinition.
 * The policy definition.
 *
 * @extends BaseResource
 */
export interface PolicyDefinition extends BaseResource {
  /**
   * @member {PolicyType} [policyType] The type of policy definition. Possible
   * values are NotSpecified, BuiltIn, and Custom. Possible values include:
   * 'NotSpecified', 'BuiltIn', 'Custom'
   */
  policyType?: PolicyType;
  /**
   * @member {PolicyMode} [mode] The policy definition mode. Possible values
   * are NotSpecified, Indexed, and All. Possible values include:
   * 'NotSpecified', 'Indexed', 'All'
   */
  mode?: PolicyMode;
  /**
   * @member {string} [displayName] The display name of the policy definition.
   */
  displayName?: string;
  /**
   * @member {string} [description] The policy definition description.
   */
  description?: string;
  /**
   * @member {any} [policyRule] The policy rule.
   */
  policyRule?: any;
  /**
   * @member {any} [metadata] The policy definition metadata.
   */
  metadata?: any;
  /**
   * @member {any} [parameters] Required if a parameter is used in policy rule.
   */
  parameters?: any;
  /**
   * @member {string} [id] The ID of the policy definition.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [name] The name of the policy definition.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [type] The type of the resource
   * (Microsoft.Authorization/policyDefinitions).
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: string;
}

/**
 * @interface
 * An interface representing PolicyDefinitionReference.
 * The policy definition reference.
 *
 */
export interface PolicyDefinitionReference {
  /**
   * @member {string} [policyDefinitionId] The ID of the policy definition or
   * policy set definition.
   */
  policyDefinitionId?: string;
  /**
   * @member {any} [parameters] Required if a parameter is used in policy rule.
   */
  parameters?: any;
}

/**
 * @interface
 * An interface representing PolicySetDefinition.
 * The policy set definition.
 *
 * @extends BaseResource
 */
export interface PolicySetDefinition extends BaseResource {
  /**
   * @member {PolicyType} [policyType] The type of policy definition. Possible
   * values are NotSpecified, BuiltIn, and Custom. Possible values include:
   * 'NotSpecified', 'BuiltIn', 'Custom'
   */
  policyType?: PolicyType;
  /**
   * @member {string} [displayName] The display name of the policy set
   * definition.
   */
  displayName?: string;
  /**
   * @member {string} [description] The policy set definition description.
   */
  description?: string;
  /**
   * @member {any} [metadata] The policy set definition metadata.
   */
  metadata?: any;
  /**
   * @member {any} [parameters] The policy set definition parameters that can
   * be used in policy definition references.
   */
  parameters?: any;
  /**
   * @member {PolicyDefinitionReference[]} policyDefinitions An array of policy
   * definition references.
   */
  policyDefinitions: PolicyDefinitionReference[];
  /**
   * @member {string} [id] The ID of the policy set definition.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [name] The name of the policy set definition.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [type] The type of the resource
   * (Microsoft.Authorization/policySetDefinitions).
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: string;
}

/**
 * @interface
 * An interface representing PolicyAssignmentsListForResourceGroupOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface PolicyAssignmentsListForResourceGroupOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [filter] The filter to apply on the operation. Valid
   * values for $filter are: 'atScope()' or 'policyDefinitionId eq '{value}''.
   * If $filter is not provided, no filtering is performed.
   */
  filter?: string;
}

/**
 * @interface
 * An interface representing PolicyAssignmentsListForResourceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface PolicyAssignmentsListForResourceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [filter] The filter to apply on the operation. Valid
   * values for $filter are: 'atScope()' or 'policyDefinitionId eq '{value}''.
   * If $filter is not provided, no filtering is performed.
   */
  filter?: string;
}

/**
 * @interface
 * An interface representing PolicyAssignmentsListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface PolicyAssignmentsListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [filter] The filter to apply on the operation. Valid
   * values for $filter are: 'atScope()' or 'policyDefinitionId eq '{value}''.
   * If $filter is not provided, no filtering is performed.
   */
  filter?: string;
}

/**
 * @interface
 * An interface representing PolicyClientOptions.
 * @extends AzureServiceClientOptions
 */
export interface PolicyClientOptions extends AzureServiceClientOptions {
  /**
   * @member {string} [baseUri]
   */
  baseUri?: string;
}


/**
 * @interface
 * An interface representing the PolicyAssignmentListResult.
 * List of policy assignments.
 *
 * @extends Array<PolicyAssignment>
 */
export interface PolicyAssignmentListResult extends Array<PolicyAssignment> {
  /**
   * @member {string} [nextLink] The URL to use for getting the next set of
   * results.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the PolicyDefinitionListResult.
 * List of policy definitions.
 *
 * @extends Array<PolicyDefinition>
 */
export interface PolicyDefinitionListResult extends Array<PolicyDefinition> {
  /**
   * @member {string} [nextLink] The URL to use for getting the next set of
   * results.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the PolicySetDefinitionListResult.
 * List of policy set definitions.
 *
 * @extends Array<PolicySetDefinition>
 */
export interface PolicySetDefinitionListResult extends Array<PolicySetDefinition> {
  /**
   * @member {string} [nextLink] The URL to use for getting the next set of
   * results.
   */
  nextLink?: string;
}

/**
 * Defines values for ResourceIdentityType.
 * Possible values include: 'SystemAssigned', 'None'
 * @readonly
 * @enum {string}
 */
export type ResourceIdentityType = 'SystemAssigned' | 'None';

/**
 * Defines values for PolicyType.
 * Possible values include: 'NotSpecified', 'BuiltIn', 'Custom'
 * @readonly
 * @enum {string}
 */
export type PolicyType = 'NotSpecified' | 'BuiltIn' | 'Custom';

/**
 * Defines values for PolicyMode.
 * Possible values include: 'NotSpecified', 'Indexed', 'All'
 * @readonly
 * @enum {string}
 */
export type PolicyMode = 'NotSpecified' | 'Indexed' | 'All';

/**
 * Contains response data for the deleteMethod operation.
 */
export type PolicyAssignmentsDeleteMethodResponse = PolicyAssignment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyAssignment;
    };
};

/**
 * Contains response data for the create operation.
 */
export type PolicyAssignmentsCreateResponse = PolicyAssignment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyAssignment;
    };
};

/**
 * Contains response data for the get operation.
 */
export type PolicyAssignmentsGetResponse = PolicyAssignment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyAssignment;
    };
};

/**
 * Contains response data for the listForResourceGroup operation.
 */
export type PolicyAssignmentsListForResourceGroupResponse = PolicyAssignmentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyAssignmentListResult;
    };
};

/**
 * Contains response data for the listForResource operation.
 */
export type PolicyAssignmentsListForResourceResponse = PolicyAssignmentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyAssignmentListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type PolicyAssignmentsListResponse = PolicyAssignmentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyAssignmentListResult;
    };
};

/**
 * Contains response data for the deleteById operation.
 */
export type PolicyAssignmentsDeleteByIdResponse = PolicyAssignment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyAssignment;
    };
};

/**
 * Contains response data for the createById operation.
 */
export type PolicyAssignmentsCreateByIdResponse = PolicyAssignment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyAssignment;
    };
};

/**
 * Contains response data for the getById operation.
 */
export type PolicyAssignmentsGetByIdResponse = PolicyAssignment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyAssignment;
    };
};

/**
 * Contains response data for the listForResourceGroupNext operation.
 */
export type PolicyAssignmentsListForResourceGroupNextResponse = PolicyAssignmentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyAssignmentListResult;
    };
};

/**
 * Contains response data for the listForResourceNext operation.
 */
export type PolicyAssignmentsListForResourceNextResponse = PolicyAssignmentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyAssignmentListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type PolicyAssignmentsListNextResponse = PolicyAssignmentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyAssignmentListResult;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type PolicyDefinitionsCreateOrUpdateResponse = PolicyDefinition & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyDefinition;
    };
};

/**
 * Contains response data for the get operation.
 */
export type PolicyDefinitionsGetResponse = PolicyDefinition & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyDefinition;
    };
};

/**
 * Contains response data for the getBuiltIn operation.
 */
export type PolicyDefinitionsGetBuiltInResponse = PolicyDefinition & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyDefinition;
    };
};

/**
 * Contains response data for the createOrUpdateAtManagementGroup operation.
 */
export type PolicyDefinitionsCreateOrUpdateAtManagementGroupResponse = PolicyDefinition & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyDefinition;
    };
};

/**
 * Contains response data for the getAtManagementGroup operation.
 */
export type PolicyDefinitionsGetAtManagementGroupResponse = PolicyDefinition & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyDefinition;
    };
};

/**
 * Contains response data for the list operation.
 */
export type PolicyDefinitionsListResponse = PolicyDefinitionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyDefinitionListResult;
    };
};

/**
 * Contains response data for the listBuiltIn operation.
 */
export type PolicyDefinitionsListBuiltInResponse = PolicyDefinitionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyDefinitionListResult;
    };
};

/**
 * Contains response data for the listByManagementGroup operation.
 */
export type PolicyDefinitionsListByManagementGroupResponse = PolicyDefinitionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyDefinitionListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type PolicyDefinitionsListNextResponse = PolicyDefinitionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyDefinitionListResult;
    };
};

/**
 * Contains response data for the listBuiltInNext operation.
 */
export type PolicyDefinitionsListBuiltInNextResponse = PolicyDefinitionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyDefinitionListResult;
    };
};

/**
 * Contains response data for the listByManagementGroupNext operation.
 */
export type PolicyDefinitionsListByManagementGroupNextResponse = PolicyDefinitionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyDefinitionListResult;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type PolicySetDefinitionsCreateOrUpdateResponse = PolicySetDefinition & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicySetDefinition;
    };
};

/**
 * Contains response data for the get operation.
 */
export type PolicySetDefinitionsGetResponse = PolicySetDefinition & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicySetDefinition;
    };
};

/**
 * Contains response data for the getBuiltIn operation.
 */
export type PolicySetDefinitionsGetBuiltInResponse = PolicySetDefinition & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicySetDefinition;
    };
};

/**
 * Contains response data for the list operation.
 */
export type PolicySetDefinitionsListResponse = PolicySetDefinitionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicySetDefinitionListResult;
    };
};

/**
 * Contains response data for the listBuiltIn operation.
 */
export type PolicySetDefinitionsListBuiltInResponse = PolicySetDefinitionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicySetDefinitionListResult;
    };
};

/**
 * Contains response data for the createOrUpdateAtManagementGroup operation.
 */
export type PolicySetDefinitionsCreateOrUpdateAtManagementGroupResponse = PolicySetDefinition & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicySetDefinition;
    };
};

/**
 * Contains response data for the getAtManagementGroup operation.
 */
export type PolicySetDefinitionsGetAtManagementGroupResponse = PolicySetDefinition & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicySetDefinition;
    };
};

/**
 * Contains response data for the listByManagementGroup operation.
 */
export type PolicySetDefinitionsListByManagementGroupResponse = PolicySetDefinitionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicySetDefinitionListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type PolicySetDefinitionsListNextResponse = PolicySetDefinitionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicySetDefinitionListResult;
    };
};

/**
 * Contains response data for the listBuiltInNext operation.
 */
export type PolicySetDefinitionsListBuiltInNextResponse = PolicySetDefinitionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicySetDefinitionListResult;
    };
};

/**
 * Contains response data for the listByManagementGroupNext operation.
 */
export type PolicySetDefinitionsListByManagementGroupNextResponse = PolicySetDefinitionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicySetDefinitionListResult;
    };
};
