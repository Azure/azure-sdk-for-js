/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { CloudErrorMapper, BaseResourceMapper } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export const CloudError = CloudErrorMapper;
export const BaseResource = BaseResourceMapper;

export const StorageBlobCreatedEventData: msRest.CompositeMapper = {
  serializedName: "StorageBlobCreatedEventData",
  type: {
    name: "Composite",
    className: "StorageBlobCreatedEventData",
    modelProperties: {
      api: {
        serializedName: "api",
        type: {
          name: "String"
        }
      },
      clientRequestId: {
        serializedName: "clientRequestId",
        type: {
          name: "String"
        }
      },
      requestId: {
        serializedName: "requestId",
        type: {
          name: "String"
        }
      },
      eTag: {
        serializedName: "eTag",
        type: {
          name: "String"
        }
      },
      contentType: {
        serializedName: "contentType",
        type: {
          name: "String"
        }
      },
      contentLength: {
        serializedName: "contentLength",
        type: {
          name: "Number"
        }
      },
      blobType: {
        serializedName: "blobType",
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        type: {
          name: "String"
        }
      },
      sequencer: {
        serializedName: "sequencer",
        type: {
          name: "String"
        }
      },
      storageDiagnostics: {
        serializedName: "storageDiagnostics",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const StorageBlobDeletedEventData: msRest.CompositeMapper = {
  serializedName: "StorageBlobDeletedEventData",
  type: {
    name: "Composite",
    className: "StorageBlobDeletedEventData",
    modelProperties: {
      api: {
        serializedName: "api",
        type: {
          name: "String"
        }
      },
      clientRequestId: {
        serializedName: "clientRequestId",
        type: {
          name: "String"
        }
      },
      requestId: {
        serializedName: "requestId",
        type: {
          name: "String"
        }
      },
      contentType: {
        serializedName: "contentType",
        type: {
          name: "String"
        }
      },
      blobType: {
        serializedName: "blobType",
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        type: {
          name: "String"
        }
      },
      sequencer: {
        serializedName: "sequencer",
        type: {
          name: "String"
        }
      },
      storageDiagnostics: {
        serializedName: "storageDiagnostics",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const EventHubCaptureFileCreatedEventData: msRest.CompositeMapper = {
  serializedName: "EventHubCaptureFileCreatedEventData",
  type: {
    name: "Composite",
    className: "EventHubCaptureFileCreatedEventData",
    modelProperties: {
      fileurl: {
        serializedName: "fileurl",
        type: {
          name: "String"
        }
      },
      fileType: {
        serializedName: "fileType",
        type: {
          name: "String"
        }
      },
      partitionId: {
        serializedName: "partitionId",
        type: {
          name: "String"
        }
      },
      sizeInBytes: {
        serializedName: "sizeInBytes",
        type: {
          name: "Number"
        }
      },
      eventCount: {
        serializedName: "eventCount",
        type: {
          name: "Number"
        }
      },
      firstSequenceNumber: {
        serializedName: "firstSequenceNumber",
        type: {
          name: "Number"
        }
      },
      lastSequenceNumber: {
        serializedName: "lastSequenceNumber",
        type: {
          name: "Number"
        }
      },
      firstEnqueueTime: {
        serializedName: "firstEnqueueTime",
        type: {
          name: "DateTime"
        }
      },
      lastEnqueueTime: {
        serializedName: "lastEnqueueTime",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const ResourceWriteSuccessData: msRest.CompositeMapper = {
  serializedName: "ResourceWriteSuccessData",
  type: {
    name: "Composite",
    className: "ResourceWriteSuccessData",
    modelProperties: {
      tenantId: {
        serializedName: "tenantId",
        type: {
          name: "String"
        }
      },
      subscriptionId: {
        serializedName: "subscriptionId",
        type: {
          name: "String"
        }
      },
      resourceGroup: {
        serializedName: "resourceGroup",
        type: {
          name: "String"
        }
      },
      resourceProvider: {
        serializedName: "resourceProvider",
        type: {
          name: "String"
        }
      },
      resourceUri: {
        serializedName: "resourceUri",
        type: {
          name: "String"
        }
      },
      operationName: {
        serializedName: "operationName",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      authorization: {
        serializedName: "authorization",
        type: {
          name: "String"
        }
      },
      claims: {
        serializedName: "claims",
        type: {
          name: "String"
        }
      },
      correlationId: {
        serializedName: "correlationId",
        type: {
          name: "String"
        }
      },
      httpRequest: {
        serializedName: "httpRequest",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceWriteFailureData: msRest.CompositeMapper = {
  serializedName: "ResourceWriteFailureData",
  type: {
    name: "Composite",
    className: "ResourceWriteFailureData",
    modelProperties: {
      tenantId: {
        serializedName: "tenantId",
        type: {
          name: "String"
        }
      },
      subscriptionId: {
        serializedName: "subscriptionId",
        type: {
          name: "String"
        }
      },
      resourceGroup: {
        serializedName: "resourceGroup",
        type: {
          name: "String"
        }
      },
      resourceProvider: {
        serializedName: "resourceProvider",
        type: {
          name: "String"
        }
      },
      resourceUri: {
        serializedName: "resourceUri",
        type: {
          name: "String"
        }
      },
      operationName: {
        serializedName: "operationName",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      authorization: {
        serializedName: "authorization",
        type: {
          name: "String"
        }
      },
      claims: {
        serializedName: "claims",
        type: {
          name: "String"
        }
      },
      correlationId: {
        serializedName: "correlationId",
        type: {
          name: "String"
        }
      },
      httpRequest: {
        serializedName: "httpRequest",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceWriteCancelData: msRest.CompositeMapper = {
  serializedName: "ResourceWriteCancelData",
  type: {
    name: "Composite",
    className: "ResourceWriteCancelData",
    modelProperties: {
      tenantId: {
        serializedName: "tenantId",
        type: {
          name: "String"
        }
      },
      subscriptionId: {
        serializedName: "subscriptionId",
        type: {
          name: "String"
        }
      },
      resourceGroup: {
        serializedName: "resourceGroup",
        type: {
          name: "String"
        }
      },
      resourceProvider: {
        serializedName: "resourceProvider",
        type: {
          name: "String"
        }
      },
      resourceUri: {
        serializedName: "resourceUri",
        type: {
          name: "String"
        }
      },
      operationName: {
        serializedName: "operationName",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      authorization: {
        serializedName: "authorization",
        type: {
          name: "String"
        }
      },
      claims: {
        serializedName: "claims",
        type: {
          name: "String"
        }
      },
      correlationId: {
        serializedName: "correlationId",
        type: {
          name: "String"
        }
      },
      httpRequest: {
        serializedName: "httpRequest",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceDeleteSuccessData: msRest.CompositeMapper = {
  serializedName: "ResourceDeleteSuccessData",
  type: {
    name: "Composite",
    className: "ResourceDeleteSuccessData",
    modelProperties: {
      tenantId: {
        serializedName: "tenantId",
        type: {
          name: "String"
        }
      },
      subscriptionId: {
        serializedName: "subscriptionId",
        type: {
          name: "String"
        }
      },
      resourceGroup: {
        serializedName: "resourceGroup",
        type: {
          name: "String"
        }
      },
      resourceProvider: {
        serializedName: "resourceProvider",
        type: {
          name: "String"
        }
      },
      resourceUri: {
        serializedName: "resourceUri",
        type: {
          name: "String"
        }
      },
      operationName: {
        serializedName: "operationName",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      authorization: {
        serializedName: "authorization",
        type: {
          name: "String"
        }
      },
      claims: {
        serializedName: "claims",
        type: {
          name: "String"
        }
      },
      correlationId: {
        serializedName: "correlationId",
        type: {
          name: "String"
        }
      },
      httpRequest: {
        serializedName: "httpRequest",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceDeleteFailureData: msRest.CompositeMapper = {
  serializedName: "ResourceDeleteFailureData",
  type: {
    name: "Composite",
    className: "ResourceDeleteFailureData",
    modelProperties: {
      tenantId: {
        serializedName: "tenantId",
        type: {
          name: "String"
        }
      },
      subscriptionId: {
        serializedName: "subscriptionId",
        type: {
          name: "String"
        }
      },
      resourceGroup: {
        serializedName: "resourceGroup",
        type: {
          name: "String"
        }
      },
      resourceProvider: {
        serializedName: "resourceProvider",
        type: {
          name: "String"
        }
      },
      resourceUri: {
        serializedName: "resourceUri",
        type: {
          name: "String"
        }
      },
      operationName: {
        serializedName: "operationName",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      authorization: {
        serializedName: "authorization",
        type: {
          name: "String"
        }
      },
      claims: {
        serializedName: "claims",
        type: {
          name: "String"
        }
      },
      correlationId: {
        serializedName: "correlationId",
        type: {
          name: "String"
        }
      },
      httpRequest: {
        serializedName: "httpRequest",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceDeleteCancelData: msRest.CompositeMapper = {
  serializedName: "ResourceDeleteCancelData",
  type: {
    name: "Composite",
    className: "ResourceDeleteCancelData",
    modelProperties: {
      tenantId: {
        serializedName: "tenantId",
        type: {
          name: "String"
        }
      },
      subscriptionId: {
        serializedName: "subscriptionId",
        type: {
          name: "String"
        }
      },
      resourceGroup: {
        serializedName: "resourceGroup",
        type: {
          name: "String"
        }
      },
      resourceProvider: {
        serializedName: "resourceProvider",
        type: {
          name: "String"
        }
      },
      resourceUri: {
        serializedName: "resourceUri",
        type: {
          name: "String"
        }
      },
      operationName: {
        serializedName: "operationName",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      authorization: {
        serializedName: "authorization",
        type: {
          name: "String"
        }
      },
      claims: {
        serializedName: "claims",
        type: {
          name: "String"
        }
      },
      correlationId: {
        serializedName: "correlationId",
        type: {
          name: "String"
        }
      },
      httpRequest: {
        serializedName: "httpRequest",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceActionSuccessData: msRest.CompositeMapper = {
  serializedName: "ResourceActionSuccessData",
  type: {
    name: "Composite",
    className: "ResourceActionSuccessData",
    modelProperties: {
      tenantId: {
        serializedName: "tenantId",
        type: {
          name: "String"
        }
      },
      subscriptionId: {
        serializedName: "subscriptionId",
        type: {
          name: "String"
        }
      },
      resourceGroup: {
        serializedName: "resourceGroup",
        type: {
          name: "String"
        }
      },
      resourceProvider: {
        serializedName: "resourceProvider",
        type: {
          name: "String"
        }
      },
      resourceUri: {
        serializedName: "resourceUri",
        type: {
          name: "String"
        }
      },
      operationName: {
        serializedName: "operationName",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      authorization: {
        serializedName: "authorization",
        type: {
          name: "String"
        }
      },
      claims: {
        serializedName: "claims",
        type: {
          name: "String"
        }
      },
      correlationId: {
        serializedName: "correlationId",
        type: {
          name: "String"
        }
      },
      httpRequest: {
        serializedName: "httpRequest",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceActionFailureData: msRest.CompositeMapper = {
  serializedName: "ResourceActionFailureData",
  type: {
    name: "Composite",
    className: "ResourceActionFailureData",
    modelProperties: {
      tenantId: {
        serializedName: "tenantId",
        type: {
          name: "String"
        }
      },
      subscriptionId: {
        serializedName: "subscriptionId",
        type: {
          name: "String"
        }
      },
      resourceGroup: {
        serializedName: "resourceGroup",
        type: {
          name: "String"
        }
      },
      resourceProvider: {
        serializedName: "resourceProvider",
        type: {
          name: "String"
        }
      },
      resourceUri: {
        serializedName: "resourceUri",
        type: {
          name: "String"
        }
      },
      operationName: {
        serializedName: "operationName",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      authorization: {
        serializedName: "authorization",
        type: {
          name: "String"
        }
      },
      claims: {
        serializedName: "claims",
        type: {
          name: "String"
        }
      },
      correlationId: {
        serializedName: "correlationId",
        type: {
          name: "String"
        }
      },
      httpRequest: {
        serializedName: "httpRequest",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceActionCancelData: msRest.CompositeMapper = {
  serializedName: "ResourceActionCancelData",
  type: {
    name: "Composite",
    className: "ResourceActionCancelData",
    modelProperties: {
      tenantId: {
        serializedName: "tenantId",
        type: {
          name: "String"
        }
      },
      subscriptionId: {
        serializedName: "subscriptionId",
        type: {
          name: "String"
        }
      },
      resourceGroup: {
        serializedName: "resourceGroup",
        type: {
          name: "String"
        }
      },
      resourceProvider: {
        serializedName: "resourceProvider",
        type: {
          name: "String"
        }
      },
      resourceUri: {
        serializedName: "resourceUri",
        type: {
          name: "String"
        }
      },
      operationName: {
        serializedName: "operationName",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      authorization: {
        serializedName: "authorization",
        type: {
          name: "String"
        }
      },
      claims: {
        serializedName: "claims",
        type: {
          name: "String"
        }
      },
      correlationId: {
        serializedName: "correlationId",
        type: {
          name: "String"
        }
      },
      httpRequest: {
        serializedName: "httpRequest",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EventGridEvent: msRest.CompositeMapper = {
  serializedName: "EventGridEvent",
  type: {
    name: "Composite",
    className: "EventGridEvent",
    modelProperties: {
      id: {
        required: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      topic: {
        serializedName: "topic",
        type: {
          name: "String"
        }
      },
      subject: {
        required: true,
        serializedName: "subject",
        type: {
          name: "String"
        }
      },
      data: {
        required: true,
        serializedName: "data",
        type: {
          name: "Object"
        }
      },
      eventType: {
        required: true,
        serializedName: "eventType",
        type: {
          name: "String"
        }
      },
      eventTime: {
        required: true,
        serializedName: "eventTime",
        type: {
          name: "DateTime"
        }
      },
      metadataVersion: {
        readOnly: true,
        serializedName: "metadataVersion",
        type: {
          name: "String"
        }
      },
      dataVersion: {
        required: true,
        serializedName: "dataVersion",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SubscriptionValidationEventData: msRest.CompositeMapper = {
  serializedName: "SubscriptionValidationEventData",
  type: {
    name: "Composite",
    className: "SubscriptionValidationEventData",
    modelProperties: {
      validationCode: {
        readOnly: true,
        serializedName: "validationCode",
        type: {
          name: "String"
        }
      },
      validationUrl: {
        readOnly: true,
        serializedName: "validationUrl",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SubscriptionValidationResponse: msRest.CompositeMapper = {
  serializedName: "SubscriptionValidationResponse",
  type: {
    name: "Composite",
    className: "SubscriptionValidationResponse",
    modelProperties: {
      validationResponse: {
        serializedName: "validationResponse",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SubscriptionDeletedEventData: msRest.CompositeMapper = {
  serializedName: "SubscriptionDeletedEventData",
  type: {
    name: "Composite",
    className: "SubscriptionDeletedEventData",
    modelProperties: {
      eventSubscriptionId: {
        readOnly: true,
        serializedName: "eventSubscriptionId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DeviceLifeCycleEventProperties: msRest.CompositeMapper = {
  serializedName: "DeviceLifeCycleEventProperties",
  type: {
    name: "Composite",
    className: "DeviceLifeCycleEventProperties",
    modelProperties: {
      deviceId: {
        serializedName: "deviceId",
        type: {
          name: "String"
        }
      },
      hubName: {
        serializedName: "hubName",
        type: {
          name: "String"
        }
      },
      twin: {
        serializedName: "twin",
        type: {
          name: "Composite",
          className: "DeviceTwinInfo"
        }
      }
    }
  }
};

export const IotHubDeviceCreatedEventData: msRest.CompositeMapper = {
  serializedName: "IotHubDeviceCreatedEventData",
  type: {
    name: "Composite",
    className: "IotHubDeviceCreatedEventData",
    modelProperties: {
      ...DeviceLifeCycleEventProperties.type.modelProperties
    }
  }
};

export const IotHubDeviceDeletedEventData: msRest.CompositeMapper = {
  serializedName: "IotHubDeviceDeletedEventData",
  type: {
    name: "Composite",
    className: "IotHubDeviceDeletedEventData",
    modelProperties: {
      ...DeviceLifeCycleEventProperties.type.modelProperties
    }
  }
};

export const DeviceConnectionStateEventProperties: msRest.CompositeMapper = {
  serializedName: "DeviceConnectionStateEventProperties",
  type: {
    name: "Composite",
    className: "DeviceConnectionStateEventProperties",
    modelProperties: {
      deviceId: {
        serializedName: "deviceId",
        type: {
          name: "String"
        }
      },
      moduleId: {
        serializedName: "moduleId",
        type: {
          name: "String"
        }
      },
      hubName: {
        serializedName: "hubName",
        type: {
          name: "String"
        }
      },
      deviceConnectionStateEventInfo: {
        serializedName: "deviceConnectionStateEventInfo",
        type: {
          name: "Composite",
          className: "DeviceConnectionStateEventInfo"
        }
      }
    }
  }
};

export const IotHubDeviceConnectedEventData: msRest.CompositeMapper = {
  serializedName: "IotHubDeviceConnectedEventData",
  type: {
    name: "Composite",
    className: "IotHubDeviceConnectedEventData",
    modelProperties: {
      ...DeviceConnectionStateEventProperties.type.modelProperties
    }
  }
};

export const IotHubDeviceDisconnectedEventData: msRest.CompositeMapper = {
  serializedName: "IotHubDeviceDisconnectedEventData",
  type: {
    name: "Composite",
    className: "IotHubDeviceDisconnectedEventData",
    modelProperties: {
      ...DeviceConnectionStateEventProperties.type.modelProperties
    }
  }
};

export const DeviceTwinMetadata: msRest.CompositeMapper = {
  serializedName: "DeviceTwinMetadata",
  type: {
    name: "Composite",
    className: "DeviceTwinMetadata",
    modelProperties: {
      lastUpdated: {
        serializedName: "lastUpdated",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DeviceTwinProperties: msRest.CompositeMapper = {
  serializedName: "DeviceTwinProperties",
  type: {
    name: "Composite",
    className: "DeviceTwinProperties",
    modelProperties: {
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Composite",
          className: "DeviceTwinMetadata"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const DeviceTwinInfoProperties: msRest.CompositeMapper = {
  serializedName: "DeviceTwinInfo_properties",
  type: {
    name: "Composite",
    className: "DeviceTwinInfoProperties",
    modelProperties: {
      desired: {
        serializedName: "desired",
        type: {
          name: "Composite",
          className: "DeviceTwinProperties"
        }
      },
      reported: {
        serializedName: "reported",
        type: {
          name: "Composite",
          className: "DeviceTwinProperties"
        }
      }
    }
  }
};

export const DeviceTwinInfoX509Thumbprint: msRest.CompositeMapper = {
  serializedName: "DeviceTwinInfo_x509Thumbprint",
  type: {
    name: "Composite",
    className: "DeviceTwinInfoX509Thumbprint",
    modelProperties: {
      primaryThumbprint: {
        serializedName: "primaryThumbprint",
        type: {
          name: "String"
        }
      },
      secondaryThumbprint: {
        serializedName: "secondaryThumbprint",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DeviceTwinInfo: msRest.CompositeMapper = {
  serializedName: "DeviceTwinInfo",
  type: {
    name: "Composite",
    className: "DeviceTwinInfo",
    modelProperties: {
      authenticationType: {
        serializedName: "authenticationType",
        type: {
          name: "String"
        }
      },
      cloudToDeviceMessageCount: {
        serializedName: "cloudToDeviceMessageCount",
        type: {
          name: "Number"
        }
      },
      connectionState: {
        serializedName: "connectionState",
        type: {
          name: "String"
        }
      },
      deviceId: {
        serializedName: "deviceId",
        type: {
          name: "String"
        }
      },
      etag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      },
      lastActivityTime: {
        serializedName: "lastActivityTime",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "DeviceTwinInfoProperties"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      statusUpdateTime: {
        serializedName: "statusUpdateTime",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "Number"
        }
      },
      x509Thumbprint: {
        serializedName: "x509Thumbprint",
        type: {
          name: "Composite",
          className: "DeviceTwinInfoX509Thumbprint"
        }
      }
    }
  }
};

export const DeviceConnectionStateEventInfo: msRest.CompositeMapper = {
  serializedName: "DeviceConnectionStateEventInfo",
  type: {
    name: "Composite",
    className: "DeviceConnectionStateEventInfo",
    modelProperties: {
      sequenceNumber: {
        serializedName: "sequenceNumber",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ContainerRegistryEventData: msRest.CompositeMapper = {
  serializedName: "ContainerRegistryEventData",
  type: {
    name: "Composite",
    className: "ContainerRegistryEventData",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        type: {
          name: "DateTime"
        }
      },
      action: {
        serializedName: "action",
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        type: {
          name: "Composite",
          className: "ContainerRegistryEventTarget"
        }
      },
      request: {
        serializedName: "request",
        type: {
          name: "Composite",
          className: "ContainerRegistryEventRequest"
        }
      },
      actor: {
        serializedName: "actor",
        type: {
          name: "Composite",
          className: "ContainerRegistryEventActor"
        }
      },
      source: {
        serializedName: "source",
        type: {
          name: "Composite",
          className: "ContainerRegistryEventSource"
        }
      }
    }
  }
};

export const ContainerRegistryImagePushedEventData: msRest.CompositeMapper = {
  serializedName: "ContainerRegistryImagePushedEventData",
  type: {
    name: "Composite",
    className: "ContainerRegistryImagePushedEventData",
    modelProperties: {
      ...ContainerRegistryEventData.type.modelProperties
    }
  }
};

export const ContainerRegistryImageDeletedEventData: msRest.CompositeMapper = {
  serializedName: "ContainerRegistryImageDeletedEventData",
  type: {
    name: "Composite",
    className: "ContainerRegistryImageDeletedEventData",
    modelProperties: {
      ...ContainerRegistryEventData.type.modelProperties
    }
  }
};

export const ContainerRegistryArtifactEventData: msRest.CompositeMapper = {
  serializedName: "ContainerRegistryArtifactEventData",
  type: {
    name: "Composite",
    className: "ContainerRegistryArtifactEventData",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        type: {
          name: "DateTime"
        }
      },
      action: {
        serializedName: "action",
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        type: {
          name: "Composite",
          className: "ContainerRegistryArtifactEventTarget"
        }
      }
    }
  }
};

export const ContainerRegistryChartPushedEventData: msRest.CompositeMapper = {
  serializedName: "ContainerRegistryChartPushedEventData",
  type: {
    name: "Composite",
    className: "ContainerRegistryChartPushedEventData",
    modelProperties: {
      ...ContainerRegistryArtifactEventData.type.modelProperties
    }
  }
};

export const ContainerRegistryChartDeletedEventData: msRest.CompositeMapper = {
  serializedName: "ContainerRegistryChartDeletedEventData",
  type: {
    name: "Composite",
    className: "ContainerRegistryChartDeletedEventData",
    modelProperties: {
      ...ContainerRegistryArtifactEventData.type.modelProperties
    }
  }
};

export const ContainerRegistryEventTarget: msRest.CompositeMapper = {
  serializedName: "ContainerRegistryEventTarget",
  type: {
    name: "Composite",
    className: "ContainerRegistryEventTarget",
    modelProperties: {
      mediaType: {
        serializedName: "mediaType",
        type: {
          name: "String"
        }
      },
      size: {
        serializedName: "size",
        type: {
          name: "Number"
        }
      },
      digest: {
        serializedName: "digest",
        type: {
          name: "String"
        }
      },
      length: {
        serializedName: "length",
        type: {
          name: "Number"
        }
      },
      repository: {
        serializedName: "repository",
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        type: {
          name: "String"
        }
      },
      tag: {
        serializedName: "tag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ContainerRegistryEventRequest: msRest.CompositeMapper = {
  serializedName: "ContainerRegistryEventRequest",
  type: {
    name: "Composite",
    className: "ContainerRegistryEventRequest",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      addr: {
        serializedName: "addr",
        type: {
          name: "String"
        }
      },
      host: {
        serializedName: "host",
        type: {
          name: "String"
        }
      },
      method: {
        serializedName: "method",
        type: {
          name: "String"
        }
      },
      useragent: {
        serializedName: "useragent",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ContainerRegistryEventActor: msRest.CompositeMapper = {
  serializedName: "ContainerRegistryEventActor",
  type: {
    name: "Composite",
    className: "ContainerRegistryEventActor",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ContainerRegistryEventSource: msRest.CompositeMapper = {
  serializedName: "ContainerRegistryEventSource",
  type: {
    name: "Composite",
    className: "ContainerRegistryEventSource",
    modelProperties: {
      addr: {
        serializedName: "addr",
        type: {
          name: "String"
        }
      },
      instanceID: {
        serializedName: "instanceID",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ContainerRegistryArtifactEventTarget: msRest.CompositeMapper = {
  serializedName: "ContainerRegistryArtifactEventTarget",
  type: {
    name: "Composite",
    className: "ContainerRegistryArtifactEventTarget",
    modelProperties: {
      mediaType: {
        serializedName: "mediaType",
        type: {
          name: "String"
        }
      },
      size: {
        serializedName: "size",
        type: {
          name: "Number"
        }
      },
      digest: {
        serializedName: "digest",
        type: {
          name: "String"
        }
      },
      repository: {
        serializedName: "repository",
        type: {
          name: "String"
        }
      },
      tag: {
        serializedName: "tag",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServiceBusActiveMessagesAvailableWithNoListenersEventData: msRest.CompositeMapper = {
  serializedName: "ServiceBusActiveMessagesAvailableWithNoListenersEventData",
  type: {
    name: "Composite",
    className: "ServiceBusActiveMessagesAvailableWithNoListenersEventData",
    modelProperties: {
      namespaceName: {
        serializedName: "namespaceName",
        type: {
          name: "String"
        }
      },
      requestUri: {
        serializedName: "requestUri",
        type: {
          name: "String"
        }
      },
      entityType: {
        serializedName: "entityType",
        type: {
          name: "String"
        }
      },
      queueName: {
        serializedName: "queueName",
        type: {
          name: "String"
        }
      },
      topicName: {
        serializedName: "topicName",
        type: {
          name: "String"
        }
      },
      subscriptionName: {
        serializedName: "subscriptionName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServiceBusDeadletterMessagesAvailableWithNoListenersEventData: msRest.CompositeMapper = {
  serializedName: "ServiceBusDeadletterMessagesAvailableWithNoListenersEventData",
  type: {
    name: "Composite",
    className: "ServiceBusDeadletterMessagesAvailableWithNoListenersEventData",
    modelProperties: {
      namespaceName: {
        serializedName: "namespaceName",
        type: {
          name: "String"
        }
      },
      requestUri: {
        serializedName: "requestUri",
        type: {
          name: "String"
        }
      },
      entityType: {
        serializedName: "entityType",
        type: {
          name: "String"
        }
      },
      queueName: {
        serializedName: "queueName",
        type: {
          name: "String"
        }
      },
      topicName: {
        serializedName: "topicName",
        type: {
          name: "String"
        }
      },
      subscriptionName: {
        serializedName: "subscriptionName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MediaJobStateChangeEventData: msRest.CompositeMapper = {
  serializedName: "MediaJobStateChangeEventData",
  type: {
    name: "Composite",
    className: "MediaJobStateChangeEventData",
    modelProperties: {
      previousState: {
        nullable: false,
        readOnly: true,
        serializedName: "previousState",
        type: {
          name: "Enum",
          allowedValues: [
            "Canceled",
            "Canceling",
            "Error",
            "Finished",
            "Processing",
            "Queued",
            "Scheduled"
          ]
        }
      },
      state: {
        nullable: false,
        readOnly: true,
        serializedName: "state",
        type: {
          name: "Enum",
          allowedValues: [
            "Canceled",
            "Canceling",
            "Error",
            "Finished",
            "Processing",
            "Queued",
            "Scheduled"
          ]
        }
      },
      correlationData: {
        serializedName: "correlationData",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const MediaJobErrorDetail: msRest.CompositeMapper = {
  serializedName: "MediaJobErrorDetail",
  type: {
    name: "Composite",
    className: "MediaJobErrorDetail",
    modelProperties: {
      code: {
        readOnly: true,
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        readOnly: true,
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MediaJobError: msRest.CompositeMapper = {
  serializedName: "MediaJobError",
  type: {
    name: "Composite",
    className: "MediaJobError",
    modelProperties: {
      code: {
        nullable: false,
        readOnly: true,
        serializedName: "code",
        type: {
          name: "Enum",
          allowedValues: [
            "ServiceError",
            "ServiceTransientError",
            "DownloadNotAccessible",
            "DownloadTransientError",
            "UploadNotAccessible",
            "UploadTransientError",
            "ConfigurationUnsupported",
            "ContentMalformed",
            "ContentUnsupported"
          ]
        }
      },
      message: {
        readOnly: true,
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      category: {
        nullable: false,
        readOnly: true,
        serializedName: "category",
        type: {
          name: "Enum",
          allowedValues: [
            "Service",
            "Download",
            "Upload",
            "Configuration",
            "Content"
          ]
        }
      },
      retry: {
        nullable: false,
        readOnly: true,
        serializedName: "retry",
        type: {
          name: "Enum",
          allowedValues: [
            "DoNotRetry",
            "MayRetry"
          ]
        }
      },
      details: {
        readOnly: true,
        serializedName: "details",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MediaJobErrorDetail"
            }
          }
        }
      }
    }
  }
};

export const MediaJobOutput: msRest.CompositeMapper = {
  serializedName: "MediaJobOutput",
  type: {
    name: "Composite",
    polymorphicDiscriminator: {
      serializedName: "@odata.type",
      clientName: "odatatype"
    },
    uberParent: "MediaJobOutput",
    className: "MediaJobOutput",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "MediaJobError"
        }
      },
      label: {
        serializedName: "label",
        type: {
          name: "String"
        }
      },
      progress: {
        required: true,
        serializedName: "progress",
        type: {
          name: "Number"
        }
      },
      state: {
        required: true,
        serializedName: "state",
        type: {
          name: "Enum",
          allowedValues: [
            "Canceled",
            "Canceling",
            "Error",
            "Finished",
            "Processing",
            "Queued",
            "Scheduled"
          ]
        }
      },
      odatatype: {
        required: true,
        serializedName: "@odata\\.type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MediaJobOutputAsset: msRest.CompositeMapper = {
  serializedName: "#Microsoft.Media.JobOutputAsset",
  type: {
    name: "Composite",
    polymorphicDiscriminator: MediaJobOutput.type.polymorphicDiscriminator,
    uberParent: "MediaJobOutput",
    className: "MediaJobOutputAsset",
    modelProperties: {
      ...MediaJobOutput.type.modelProperties,
      assetName: {
        serializedName: "assetName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MediaJobOutputProgressEventData: msRest.CompositeMapper = {
  serializedName: "#Microsoft.Media.JobOutputProgress",
  type: {
    name: "Composite",
    className: "MediaJobOutputProgressEventData",
    modelProperties: {
      label: {
        serializedName: "label",
        type: {
          name: "String"
        }
      },
      progress: {
        serializedName: "progress",
        type: {
          name: "Number"
        }
      },
      jobCorrelationData: {
        serializedName: "jobCorrelationData",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const MediaJobOutputStateChangeEventData: msRest.CompositeMapper = {
  serializedName: "MediaJobOutputStateChangeEventData",
  type: {
    name: "Composite",
    className: "MediaJobOutputStateChangeEventData",
    modelProperties: {
      previousState: {
        nullable: false,
        readOnly: true,
        serializedName: "previousState",
        type: {
          name: "Enum",
          allowedValues: [
            "Canceled",
            "Canceling",
            "Error",
            "Finished",
            "Processing",
            "Queued",
            "Scheduled"
          ]
        }
      },
      output: {
        serializedName: "output",
        type: {
          name: "Composite",
          className: "MediaJobOutput"
        }
      },
      jobCorrelationData: {
        serializedName: "jobCorrelationData",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const MediaJobScheduledEventData: msRest.CompositeMapper = {
  serializedName: "#Microsoft.Media.JobScheduled",
  type: {
    name: "Composite",
    className: "MediaJobScheduledEventData",
    modelProperties: {
      ...MediaJobStateChangeEventData.type.modelProperties
    }
  }
};

export const MediaJobProcessingEventData: msRest.CompositeMapper = {
  serializedName: "#Microsoft.Media.JobProcessing",
  type: {
    name: "Composite",
    className: "MediaJobProcessingEventData",
    modelProperties: {
      ...MediaJobStateChangeEventData.type.modelProperties
    }
  }
};

export const MediaJobCancelingEventData: msRest.CompositeMapper = {
  serializedName: "#Microsoft.Media.JobCanceling",
  type: {
    name: "Composite",
    className: "MediaJobCancelingEventData",
    modelProperties: {
      ...MediaJobStateChangeEventData.type.modelProperties
    }
  }
};

export const MediaJobFinishedEventData: msRest.CompositeMapper = {
  serializedName: "#Microsoft.Media.JobFinished",
  type: {
    name: "Composite",
    className: "MediaJobFinishedEventData",
    modelProperties: {
      ...MediaJobStateChangeEventData.type.modelProperties,
      outputs: {
        serializedName: "outputs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MediaJobOutput"
            }
          }
        }
      }
    }
  }
};

export const MediaJobCanceledEventData: msRest.CompositeMapper = {
  serializedName: "#Microsoft.Media.JobCanceled",
  type: {
    name: "Composite",
    className: "MediaJobCanceledEventData",
    modelProperties: {
      ...MediaJobStateChangeEventData.type.modelProperties,
      outputs: {
        serializedName: "outputs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MediaJobOutput"
            }
          }
        }
      }
    }
  }
};

export const MediaJobErroredEventData: msRest.CompositeMapper = {
  serializedName: "#Microsoft.Media.JobErrored",
  type: {
    name: "Composite",
    className: "MediaJobErroredEventData",
    modelProperties: {
      ...MediaJobStateChangeEventData.type.modelProperties,
      outputs: {
        serializedName: "outputs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MediaJobOutput"
            }
          }
        }
      }
    }
  }
};

export const MediaJobOutputCanceledEventData: msRest.CompositeMapper = {
  serializedName: "#Microsoft.Media.JobOutputCanceled",
  type: {
    name: "Composite",
    className: "MediaJobOutputCanceledEventData",
    modelProperties: {
      ...MediaJobOutputStateChangeEventData.type.modelProperties
    }
  }
};

export const MediaJobOutputCancelingEventData: msRest.CompositeMapper = {
  serializedName: "#Microsoft.Media.JobOutputCanceling",
  type: {
    name: "Composite",
    className: "MediaJobOutputCancelingEventData",
    modelProperties: {
      ...MediaJobOutputStateChangeEventData.type.modelProperties
    }
  }
};

export const MediaJobOutputErroredEventData: msRest.CompositeMapper = {
  serializedName: "#Microsoft.Media.JobOutputErrored",
  type: {
    name: "Composite",
    className: "MediaJobOutputErroredEventData",
    modelProperties: {
      ...MediaJobOutputStateChangeEventData.type.modelProperties
    }
  }
};

export const MediaJobOutputFinishedEventData: msRest.CompositeMapper = {
  serializedName: "#Microsoft.Media.JobOutputFinished",
  type: {
    name: "Composite",
    className: "MediaJobOutputFinishedEventData",
    modelProperties: {
      ...MediaJobOutputStateChangeEventData.type.modelProperties
    }
  }
};

export const MediaJobOutputProcessingEventData: msRest.CompositeMapper = {
  serializedName: "#Microsoft.Media.JobOutputProcessing",
  type: {
    name: "Composite",
    className: "MediaJobOutputProcessingEventData",
    modelProperties: {
      ...MediaJobOutputStateChangeEventData.type.modelProperties
    }
  }
};

export const MediaJobOutputScheduledEventData: msRest.CompositeMapper = {
  serializedName: "#Microsoft.Media.JobOutputScheduled",
  type: {
    name: "Composite",
    className: "MediaJobOutputScheduledEventData",
    modelProperties: {
      ...MediaJobOutputStateChangeEventData.type.modelProperties
    }
  }
};

export const MediaLiveEventEncoderConnectedEventData: msRest.CompositeMapper = {
  serializedName: "MediaLiveEventEncoderConnectedEventData",
  type: {
    name: "Composite",
    className: "MediaLiveEventEncoderConnectedEventData",
    modelProperties: {
      ingestUrl: {
        readOnly: true,
        serializedName: "ingestUrl",
        type: {
          name: "String"
        }
      },
      streamId: {
        readOnly: true,
        serializedName: "streamId",
        type: {
          name: "String"
        }
      },
      encoderIp: {
        readOnly: true,
        serializedName: "encoderIp",
        type: {
          name: "String"
        }
      },
      encoderPort: {
        readOnly: true,
        serializedName: "encoderPort",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MediaLiveEventConnectionRejectedEventData: msRest.CompositeMapper = {
  serializedName: "MediaLiveEventConnectionRejectedEventData",
  type: {
    name: "Composite",
    className: "MediaLiveEventConnectionRejectedEventData",
    modelProperties: {
      ingestUrl: {
        readOnly: true,
        serializedName: "ingestUrl",
        type: {
          name: "String"
        }
      },
      streamId: {
        readOnly: true,
        serializedName: "streamId",
        type: {
          name: "String"
        }
      },
      encoderIp: {
        readOnly: true,
        serializedName: "encoderIp",
        type: {
          name: "String"
        }
      },
      encoderPort: {
        readOnly: true,
        serializedName: "encoderPort",
        type: {
          name: "String"
        }
      },
      resultCode: {
        readOnly: true,
        serializedName: "resultCode",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MediaLiveEventEncoderDisconnectedEventData: msRest.CompositeMapper = {
  serializedName: "MediaLiveEventEncoderDisconnectedEventData",
  type: {
    name: "Composite",
    className: "MediaLiveEventEncoderDisconnectedEventData",
    modelProperties: {
      ingestUrl: {
        readOnly: true,
        serializedName: "ingestUrl",
        type: {
          name: "String"
        }
      },
      streamId: {
        readOnly: true,
        serializedName: "streamId",
        type: {
          name: "String"
        }
      },
      encoderIp: {
        readOnly: true,
        serializedName: "encoderIp",
        type: {
          name: "String"
        }
      },
      encoderPort: {
        readOnly: true,
        serializedName: "encoderPort",
        type: {
          name: "String"
        }
      },
      resultCode: {
        readOnly: true,
        serializedName: "resultCode",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MediaLiveEventIncomingStreamReceivedEventData: msRest.CompositeMapper = {
  serializedName: "MediaLiveEventIncomingStreamReceivedEventData",
  type: {
    name: "Composite",
    className: "MediaLiveEventIncomingStreamReceivedEventData",
    modelProperties: {
      ingestUrl: {
        readOnly: true,
        serializedName: "ingestUrl",
        type: {
          name: "String"
        }
      },
      trackType: {
        readOnly: true,
        serializedName: "trackType",
        type: {
          name: "String"
        }
      },
      trackName: {
        readOnly: true,
        serializedName: "trackName",
        type: {
          name: "String"
        }
      },
      bitrate: {
        readOnly: true,
        serializedName: "bitrate",
        type: {
          name: "Number"
        }
      },
      encoderIp: {
        readOnly: true,
        serializedName: "encoderIp",
        type: {
          name: "String"
        }
      },
      encoderPort: {
        readOnly: true,
        serializedName: "encoderPort",
        type: {
          name: "String"
        }
      },
      timestamp: {
        readOnly: true,
        serializedName: "timestamp",
        type: {
          name: "String"
        }
      },
      duration: {
        readOnly: true,
        serializedName: "duration",
        type: {
          name: "String"
        }
      },
      timescale: {
        readOnly: true,
        serializedName: "timescale",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MediaLiveEventIncomingStreamsOutOfSyncEventData: msRest.CompositeMapper = {
  serializedName: "MediaLiveEventIncomingStreamsOutOfSyncEventData",
  type: {
    name: "Composite",
    className: "MediaLiveEventIncomingStreamsOutOfSyncEventData",
    modelProperties: {
      minLastTimestamp: {
        readOnly: true,
        serializedName: "minLastTimestamp",
        type: {
          name: "String"
        }
      },
      typeOfStreamWithMinLastTimestamp: {
        readOnly: true,
        serializedName: "typeOfStreamWithMinLastTimestamp",
        type: {
          name: "String"
        }
      },
      maxLastTimestamp: {
        readOnly: true,
        serializedName: "maxLastTimestamp",
        type: {
          name: "String"
        }
      },
      typeOfStreamWithMaxLastTimestamp: {
        readOnly: true,
        serializedName: "typeOfStreamWithMaxLastTimestamp",
        type: {
          name: "String"
        }
      },
      timescaleOfMinLastTimestamp: {
        readOnly: true,
        serializedName: "timescaleOfMinLastTimestamp",
        type: {
          name: "String"
        }
      },
      timescaleOfMaxLastTimestamp: {
        readOnly: true,
        serializedName: "timescaleOfMaxLastTimestamp",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MediaLiveEventIncomingVideoStreamsOutOfSyncEventData: msRest.CompositeMapper = {
  serializedName: "MediaLiveEventIncomingVideoStreamsOutOfSyncEventData",
  type: {
    name: "Composite",
    className: "MediaLiveEventIncomingVideoStreamsOutOfSyncEventData",
    modelProperties: {
      firstTimestamp: {
        readOnly: true,
        serializedName: "firstTimestamp",
        type: {
          name: "String"
        }
      },
      firstDuration: {
        readOnly: true,
        serializedName: "firstDuration",
        type: {
          name: "String"
        }
      },
      secondTimestamp: {
        readOnly: true,
        serializedName: "secondTimestamp",
        type: {
          name: "String"
        }
      },
      secondDuration: {
        readOnly: true,
        serializedName: "secondDuration",
        type: {
          name: "String"
        }
      },
      timescale: {
        readOnly: true,
        serializedName: "timescale",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MediaLiveEventIncomingDataChunkDroppedEventData: msRest.CompositeMapper = {
  serializedName: "MediaLiveEventIncomingDataChunkDroppedEventData",
  type: {
    name: "Composite",
    className: "MediaLiveEventIncomingDataChunkDroppedEventData",
    modelProperties: {
      timestamp: {
        readOnly: true,
        serializedName: "timestamp",
        type: {
          name: "String"
        }
      },
      trackType: {
        readOnly: true,
        serializedName: "trackType",
        type: {
          name: "String"
        }
      },
      bitrate: {
        readOnly: true,
        serializedName: "bitrate",
        type: {
          name: "Number"
        }
      },
      timescale: {
        readOnly: true,
        serializedName: "timescale",
        type: {
          name: "String"
        }
      },
      resultCode: {
        readOnly: true,
        serializedName: "resultCode",
        type: {
          name: "String"
        }
      },
      trackName: {
        readOnly: true,
        serializedName: "trackName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MediaLiveEventIngestHeartbeatEventData: msRest.CompositeMapper = {
  serializedName: "MediaLiveEventIngestHeartbeatEventData",
  type: {
    name: "Composite",
    className: "MediaLiveEventIngestHeartbeatEventData",
    modelProperties: {
      trackType: {
        readOnly: true,
        serializedName: "trackType",
        type: {
          name: "String"
        }
      },
      trackName: {
        readOnly: true,
        serializedName: "trackName",
        type: {
          name: "String"
        }
      },
      bitrate: {
        readOnly: true,
        serializedName: "bitrate",
        type: {
          name: "Number"
        }
      },
      incomingBitrate: {
        readOnly: true,
        serializedName: "incomingBitrate",
        type: {
          name: "Number"
        }
      },
      lastTimestamp: {
        readOnly: true,
        serializedName: "lastTimestamp",
        type: {
          name: "String"
        }
      },
      timescale: {
        readOnly: true,
        serializedName: "timescale",
        type: {
          name: "String"
        }
      },
      overlapCount: {
        readOnly: true,
        serializedName: "overlapCount",
        type: {
          name: "Number"
        }
      },
      discontinuityCount: {
        readOnly: true,
        serializedName: "discontinuityCount",
        type: {
          name: "Number"
        }
      },
      nonincreasingCount: {
        readOnly: true,
        serializedName: "nonincreasingCount",
        type: {
          name: "Number"
        }
      },
      unexpectedBitrate: {
        readOnly: true,
        serializedName: "unexpectedBitrate",
        type: {
          name: "Boolean"
        }
      },
      state: {
        readOnly: true,
        serializedName: "state",
        type: {
          name: "String"
        }
      },
      healthy: {
        readOnly: true,
        serializedName: "healthy",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const MediaLiveEventTrackDiscontinuityDetectedEventData: msRest.CompositeMapper = {
  serializedName: "MediaLiveEventTrackDiscontinuityDetectedEventData",
  type: {
    name: "Composite",
    className: "MediaLiveEventTrackDiscontinuityDetectedEventData",
    modelProperties: {
      trackType: {
        readOnly: true,
        serializedName: "trackType",
        type: {
          name: "String"
        }
      },
      trackName: {
        readOnly: true,
        serializedName: "trackName",
        type: {
          name: "String"
        }
      },
      bitrate: {
        readOnly: true,
        serializedName: "bitrate",
        type: {
          name: "Number"
        }
      },
      previousTimestamp: {
        readOnly: true,
        serializedName: "previousTimestamp",
        type: {
          name: "String"
        }
      },
      newTimestamp: {
        readOnly: true,
        serializedName: "newTimestamp",
        type: {
          name: "String"
        }
      },
      timescale: {
        readOnly: true,
        serializedName: "timescale",
        type: {
          name: "String"
        }
      },
      discontinuityGap: {
        readOnly: true,
        serializedName: "discontinuityGap",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MapsGeofenceEventProperties: msRest.CompositeMapper = {
  serializedName: "MapsGeofenceEventProperties",
  type: {
    name: "Composite",
    className: "MapsGeofenceEventProperties",
    modelProperties: {
      expiredGeofenceGeometryId: {
        serializedName: "expiredGeofenceGeometryId",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      geometries: {
        serializedName: "geometries",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MapsGeofenceGeometry"
            }
          }
        }
      },
      invalidPeriodGeofenceGeometryId: {
        serializedName: "invalidPeriodGeofenceGeometryId",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      isEventPublished: {
        serializedName: "isEventPublished",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const MapsGeofenceEnteredEventData: msRest.CompositeMapper = {
  serializedName: "MapsGeofenceEnteredEventData",
  type: {
    name: "Composite",
    className: "MapsGeofenceEnteredEventData",
    modelProperties: {
      ...MapsGeofenceEventProperties.type.modelProperties
    }
  }
};

export const MapsGeofenceExitedEventData: msRest.CompositeMapper = {
  serializedName: "MapsGeofenceExitedEventData",
  type: {
    name: "Composite",
    className: "MapsGeofenceExitedEventData",
    modelProperties: {
      ...MapsGeofenceEventProperties.type.modelProperties
    }
  }
};

export const MapsGeofenceResultEventData: msRest.CompositeMapper = {
  serializedName: "MapsGeofenceResultEventData",
  type: {
    name: "Composite",
    className: "MapsGeofenceResultEventData",
    modelProperties: {
      ...MapsGeofenceEventProperties.type.modelProperties
    }
  }
};

export const MapsGeofenceGeometry: msRest.CompositeMapper = {
  serializedName: "MapsGeofenceGeometry",
  type: {
    name: "Composite",
    className: "MapsGeofenceGeometry",
    modelProperties: {
      deviceId: {
        serializedName: "deviceId",
        type: {
          name: "String"
        }
      },
      distance: {
        serializedName: "distance",
        type: {
          name: "Number"
        }
      },
      geometryId: {
        serializedName: "geometryId",
        type: {
          name: "String"
        }
      },
      nearestLat: {
        serializedName: "nearestLat",
        type: {
          name: "Number"
        }
      },
      nearestLon: {
        serializedName: "nearestLon",
        type: {
          name: "Number"
        }
      },
      udId: {
        serializedName: "udId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AppConfigurationKeyValueModifiedEventData: msRest.CompositeMapper = {
  serializedName: "AppConfigurationKeyValueModifiedEventData",
  type: {
    name: "Composite",
    className: "AppConfigurationKeyValueModifiedEventData",
    modelProperties: {
      key: {
        serializedName: "key",
        type: {
          name: "String"
        }
      },
      label: {
        serializedName: "label",
        type: {
          name: "String"
        }
      },
      etag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AppConfigurationKeyValueDeletedEventData: msRest.CompositeMapper = {
  serializedName: "AppConfigurationKeyValueDeletedEventData",
  type: {
    name: "Composite",
    className: "AppConfigurationKeyValueDeletedEventData",
    modelProperties: {
      key: {
        serializedName: "key",
        type: {
          name: "String"
        }
      },
      label: {
        serializedName: "label",
        type: {
          name: "String"
        }
      },
      etag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const discriminators = {
  'MediaJobOutput' : MediaJobOutput,
  'MediaJobOutput.#Microsoft.Media.JobOutputAsset' : MediaJobOutputAsset
};
