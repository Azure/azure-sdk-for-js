/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/customInstanceMappers";
import * as Parameters from "../models/parameters";
import { CustomSearchClientContext } from "../customSearchClientContext";

/** Class representing a CustomInstance. */
export class CustomInstance {
  private readonly client: CustomSearchClientContext;

  /**
   * Create a CustomInstance.
   * @param {CustomSearchClientContext} client Reference to the service client.
   */
  constructor(client: CustomSearchClientContext) {
    this.client = client;
  }

  /**
   * @summary The Custom Search API lets you send a search query to Bing and get back web pages found
   * in your custom view of the web.
   * @param customConfig The identifier for the custom search configuration
   * @param query The user's search query term. The term may not be empty. The term may contain Bing
   * Advanced Operators. For example, to limit results to a specific domain, use the site: operator.
   * @param [options] The optional parameters
   * @returns Promise<Models.CustomInstanceSearchResponse>
   */
  search(customConfig: string, query: string, options?: Models.CustomInstanceSearchOptionalParams): Promise<Models.CustomInstanceSearchResponse>;
  /**
   * @param customConfig The identifier for the custom search configuration
   * @param query The user's search query term. The term may not be empty. The term may contain Bing
   * Advanced Operators. For example, to limit results to a specific domain, use the site: operator.
   * @param callback The callback
   */
  search(customConfig: string, query: string, callback: msRest.ServiceCallback<Models.SearchResponse>): void;
  /**
   * @param customConfig The identifier for the custom search configuration
   * @param query The user's search query term. The term may not be empty. The term may contain Bing
   * Advanced Operators. For example, to limit results to a specific domain, use the site: operator.
   * @param options The optional parameters
   * @param callback The callback
   */
  search(customConfig: string, query: string, options: Models.CustomInstanceSearchOptionalParams, callback: msRest.ServiceCallback<Models.SearchResponse>): void;
  search(customConfig: string, query: string, options?: Models.CustomInstanceSearchOptionalParams | msRest.ServiceCallback<Models.SearchResponse>, callback?: msRest.ServiceCallback<Models.SearchResponse>): Promise<Models.CustomInstanceSearchResponse> {
    return this.client.sendOperationRequest(
      {
        customConfig,
        query,
        options
      },
      searchOperationSpec,
      callback) as Promise<Models.CustomInstanceSearchResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const searchOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "search",
  urlParameters: [
    Parameters.endpoint
  ],
  queryParameters: [
    Parameters.customConfig,
    Parameters.countryCode,
    Parameters.count,
    Parameters.market,
    Parameters.offset,
    Parameters.query,
    Parameters.safeSearch,
    Parameters.setLang,
    Parameters.textDecorations,
    Parameters.textFormat
  ],
  headerParameters: [
    Parameters.xBingApisSDK,
    Parameters.acceptLanguage,
    Parameters.userAgent,
    Parameters.clientId,
    Parameters.clientIp,
    Parameters.location
  ],
  responses: {
    200: {
      bodyMapper: Mappers.SearchResponse
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};
