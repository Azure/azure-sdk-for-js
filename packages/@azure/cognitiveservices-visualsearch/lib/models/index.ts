/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { ServiceClientOptions } from "ms-rest-js";
import * as msRest from "ms-rest-js";


/**
 * Contains the possible cases for ResponseBase.
 */
export type ResponseBaseUnion = ResponseBase | IdentifiableUnion;

/**
 * @interface
 * An interface representing ResponseBase.
 * Response base.
 *
 */
export interface ResponseBase {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "ResponseBase";
}

/**
 * Contains the possible cases for Identifiable.
 */
export type IdentifiableUnion = Identifiable | ResponseUnion;

/**
 * @interface
 * An interface representing Identifiable.
 * Defines the identity of a resource.
 *
 */
export interface Identifiable {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "Identifiable";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
}

/**
 * Contains the possible cases for Response.
 */
export type ResponseUnion = Response | ImageKnowledge | ErrorResponse | ThingUnion;

/**
 * @interface
 * An interface representing Response.
 * Defines a response. All schemas that return at the root of the response must
 * inherit from this object.
 *
 */
export interface Response {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "Response";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [readLink] The URL that returns this resource. To use the
   * URL, append query parameters as appropriate and include the
   * Ocp-Apim-Subscription-Key header.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly readLink?: string;
  /**
   * @member {string} [webSearchUrl] The URL to Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
}

/**
 * Contains the possible cases for Thing.
 */
export type ThingUnion = Thing | ImageTag | Organization | OfferUnion | CreativeWorkUnion | Person | IntangibleUnion;

/**
 * @interface
 * An interface representing Thing.
 * Defines a thing.
 *
 */
export interface Thing {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "Thing";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [readLink] The URL that returns this resource. To use the
   * URL, append query parameters as appropriate and include the
   * Ocp-Apim-Subscription-Key header.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly readLink?: string;
  /**
   * @member {string} [webSearchUrl] The URL to Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {string} [name] The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [url] The URL to get more information about the thing
   * represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly url?: string;
  /**
   * @member {ImageObject} [image] An image of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly image?: ImageObject;
  /**
   * @member {string} [description] A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
  /**
   * @member {string} [alternateName] An alias for the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly alternateName?: string;
  /**
   * @member {string} [bingId] An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly bingId?: string;
}

/**
 * Contains the possible cases for Intangible.
 */
export type IntangibleUnion = Intangible | StructuredValueUnion;

/**
 * @interface
 * An interface representing Intangible.
 * A utility class that serves as the umbrella for a number of 'intangible'
 * things such as quantities, structured values, etc.
 *
 */
export interface Intangible {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "Intangible";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [readLink] The URL that returns this resource. To use the
   * URL, append query parameters as appropriate and include the
   * Ocp-Apim-Subscription-Key header.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly readLink?: string;
  /**
   * @member {string} [webSearchUrl] The URL to Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {string} [name] The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [url] The URL to get more information about the thing
   * represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly url?: string;
  /**
   * @member {ImageObject} [image] An image of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly image?: ImageObject;
  /**
   * @member {string} [description] A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
  /**
   * @member {string} [alternateName] An alias for the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly alternateName?: string;
  /**
   * @member {string} [bingId] An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly bingId?: string;
}

/**
 * Contains the possible cases for StructuredValue.
 */
export type StructuredValueUnion = StructuredValue | Point2D | NormalizedQuadrilateral;

/**
 * @interface
 * An interface representing StructuredValue.
 */
export interface StructuredValue {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "StructuredValue";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [readLink] The URL that returns this resource. To use the
   * URL, append query parameters as appropriate and include the
   * Ocp-Apim-Subscription-Key header.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly readLink?: string;
  /**
   * @member {string} [webSearchUrl] The URL to Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {string} [name] The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [url] The URL to get more information about the thing
   * represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly url?: string;
  /**
   * @member {ImageObject} [image] An image of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly image?: ImageObject;
  /**
   * @member {string} [description] A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
  /**
   * @member {string} [alternateName] An alias for the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly alternateName?: string;
  /**
   * @member {string} [bingId] An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly bingId?: string;
}

/**
 * @interface
 * An interface representing Point2D.
 * Defines a 2D point with X and Y coordinates.
 *
 */
export interface Point2D {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "Point2D";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [readLink] The URL that returns this resource. To use the
   * URL, append query parameters as appropriate and include the
   * Ocp-Apim-Subscription-Key header.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly readLink?: string;
  /**
   * @member {string} [webSearchUrl] The URL to Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {string} [name] The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [url] The URL to get more information about the thing
   * represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly url?: string;
  /**
   * @member {ImageObject} [image] An image of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly image?: ImageObject;
  /**
   * @member {string} [description] A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
  /**
   * @member {string} [alternateName] An alias for the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly alternateName?: string;
  /**
   * @member {string} [bingId] An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly bingId?: string;
  /**
   * @member {number} x The x-coordinate of the point.
   */
  x: number;
  /**
   * @member {number} y The y-coordinate of the point.
   */
  y: number;
}

/**
 * @interface
 * An interface representing NormalizedQuadrilateral.
 * Defines a region of an image. The region is a convex quadrilateral defined
 * by coordinates of its top left, top right, bottom left, and bottom right
 * points. The coordinates are fractional values of the original image's width
 * and height in the range 0.0 through 1.0.
 *
 */
export interface NormalizedQuadrilateral {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "NormalizedQuadrilateral";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [readLink] The URL that returns this resource. To use the
   * URL, append query parameters as appropriate and include the
   * Ocp-Apim-Subscription-Key header.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly readLink?: string;
  /**
   * @member {string} [webSearchUrl] The URL to Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {string} [name] The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [url] The URL to get more information about the thing
   * represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly url?: string;
  /**
   * @member {ImageObject} [image] An image of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly image?: ImageObject;
  /**
   * @member {string} [description] A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
  /**
   * @member {string} [alternateName] An alias for the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly alternateName?: string;
  /**
   * @member {string} [bingId] An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly bingId?: string;
  /**
   * @member {Point2D} topLeft The top left corner coordinate.
   */
  topLeft: Point2D;
  /**
   * @member {Point2D} topRight The top right corner coordinate.
   */
  topRight: Point2D;
  /**
   * @member {Point2D} bottomRight The bottom right corner coordinate.
   */
  bottomRight: Point2D;
  /**
   * @member {Point2D} bottomLeft The bottom left corner coordinate.
   */
  bottomLeft: Point2D;
}

/**
 * @interface
 * An interface representing ImageTagRegion.
 * Defines an image region relevant to the ImageTag.
 *
 */
export interface ImageTagRegion {
  /**
   * @member {NormalizedQuadrilateral} queryRectangle A rectangle that outlines
   * the area of interest for this tag.
   */
  queryRectangle: NormalizedQuadrilateral;
  /**
   * @member {NormalizedQuadrilateral} displayRectangle A recommended rectangle
   * to show to the user.
   */
  displayRectangle: NormalizedQuadrilateral;
}

/**
 * Contains the possible cases for CreativeWork.
 */
export type CreativeWorkUnion = CreativeWork | ActionUnion | MediaObjectUnion | Recipe;

/**
 * @interface
 * An interface representing CreativeWork.
 * The most generic kind of creative work, including books, movies,
 * photographs, software programs, etc.
 *
 */
export interface CreativeWork {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "CreativeWork";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [readLink] The URL that returns this resource. To use the
   * URL, append query parameters as appropriate and include the
   * Ocp-Apim-Subscription-Key header.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly readLink?: string;
  /**
   * @member {string} [webSearchUrl] The URL to Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {string} [name] The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [url] The URL to get more information about the thing
   * represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly url?: string;
  /**
   * @member {ImageObject} [image] An image of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly image?: ImageObject;
  /**
   * @member {string} [description] A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
  /**
   * @member {string} [alternateName] An alias for the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly alternateName?: string;
  /**
   * @member {string} [bingId] An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly bingId?: string;
  /**
   * @member {string} [thumbnailUrl] The URL to a thumbnail of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly thumbnailUrl?: string;
  /**
   * @member {ThingUnion[]} [provider] The source of the creative work.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provider?: ThingUnion[];
  /**
   * @member {string} [datePublished] The date on which the CreativeWork was
   * published.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly datePublished?: string;
  /**
   * @member {string} [text] Text content of this creative work.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly text?: string;
}

/**
 * Contains the possible cases for Action.
 */
export type ActionUnion = Action | ImageActionUnion;

/**
 * @interface
 * An interface representing Action.
 * Defines an action.
 *
 */
export interface Action {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "Action";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [readLink] The URL that returns this resource. To use the
   * URL, append query parameters as appropriate and include the
   * Ocp-Apim-Subscription-Key header.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly readLink?: string;
  /**
   * @member {string} [webSearchUrl] The URL to Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {string} [name] The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [url] The URL to get more information about the thing
   * represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly url?: string;
  /**
   * @member {ImageObject} [image] An image of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly image?: ImageObject;
  /**
   * @member {string} [description] A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
  /**
   * @member {string} [alternateName] An alias for the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly alternateName?: string;
  /**
   * @member {string} [bingId] An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly bingId?: string;
  /**
   * @member {string} [thumbnailUrl] The URL to a thumbnail of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly thumbnailUrl?: string;
  /**
   * @member {ThingUnion[]} [provider] The source of the creative work.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provider?: ThingUnion[];
  /**
   * @member {string} [datePublished] The date on which the CreativeWork was
   * published.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly datePublished?: string;
  /**
   * @member {string} [text] Text content of this creative work.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly text?: string;
  /**
   * @member {ThingUnion[]} [result] The result produced in the action.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly result?: ThingUnion[];
  /**
   * @member {string} [displayName] A display name for the action.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly displayName?: string;
  /**
   * @member {boolean} [isTopAction] A Boolean representing whether this result
   * is the top action.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly isTopAction?: boolean;
  /**
   * @member {string} [serviceUrl] Use this URL to get additional data to
   * determine how to take the appropriate action. For example, the serviceUrl
   * might return JSON along with an image URL.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly serviceUrl?: string;
}

/**
 * Contains the possible cases for ImageAction.
 */
export type ImageActionUnion = ImageAction | ImageEntityAction | ImageModuleAction | ImageRecipesAction | ImageRelatedSearchesAction | ImageShoppingSourcesAction;

/**
 * @interface
 * An interface representing ImageAction.
 * Defines an image action.
 *
 */
export interface ImageAction {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "ImageAction";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [readLink] The URL that returns this resource. To use the
   * URL, append query parameters as appropriate and include the
   * Ocp-Apim-Subscription-Key header.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly readLink?: string;
  /**
   * @member {string} [webSearchUrl] The URL to Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {string} [name] The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [url] The URL to get more information about the thing
   * represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly url?: string;
  /**
   * @member {ImageObject} [image] An image of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly image?: ImageObject;
  /**
   * @member {string} [description] A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
  /**
   * @member {string} [alternateName] An alias for the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly alternateName?: string;
  /**
   * @member {string} [bingId] An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly bingId?: string;
  /**
   * @member {string} [thumbnailUrl] The URL to a thumbnail of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly thumbnailUrl?: string;
  /**
   * @member {ThingUnion[]} [provider] The source of the creative work.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provider?: ThingUnion[];
  /**
   * @member {string} [datePublished] The date on which the CreativeWork was
   * published.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly datePublished?: string;
  /**
   * @member {string} [text] Text content of this creative work.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly text?: string;
  /**
   * @member {ThingUnion[]} [result] The result produced in the action.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly result?: ThingUnion[];
  /**
   * @member {string} [displayName] A display name for the action.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly displayName?: string;
  /**
   * @member {boolean} [isTopAction] A Boolean representing whether this result
   * is the top action.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly isTopAction?: boolean;
  /**
   * @member {string} [serviceUrl] Use this URL to get additional data to
   * determine how to take the appropriate action. For example, the serviceUrl
   * might return JSON along with an image URL.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly serviceUrl?: string;
  /**
   * @member {string} [actionType] A string representing the type of action.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly actionType?: string;
}

/**
 * @interface
 * An interface representing ImageTag.
 * A visual search tag.
 *
 */
export interface ImageTag {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "ImageTag";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [readLink] The URL that returns this resource. To use the
   * URL, append query parameters as appropriate and include the
   * Ocp-Apim-Subscription-Key header.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly readLink?: string;
  /**
   * @member {string} [webSearchUrl] The URL to Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {string} [name] The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [url] The URL to get more information about the thing
   * represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly url?: string;
  /**
   * @member {ImageObject} [image] An image of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly image?: ImageObject;
  /**
   * @member {string} [description] A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
  /**
   * @member {string} [alternateName] An alias for the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly alternateName?: string;
  /**
   * @member {string} [bingId] An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly bingId?: string;
  /**
   * @member {string} [displayName] Display name for this tag. For the default
   * tag, the display name is empty.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly displayName?: string;
  /**
   * @member {ImageTagRegion} [boundingBox] The bounding box for this tag. For
   * the default tag, there is no bounding box.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly boundingBox?: ImageTagRegion;
  /**
   * @member {ImageActionUnion[]} [actions] Actions within this tag. The order
   * of the items denotes the default ranking order of these actions, with the
   * first action being the most likely user intent.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly actions?: ImageActionUnion[];
}

/**
 * @interface
 * An interface representing Organization.
 * Defines an organization.
 *
 */
export interface Organization {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "Organization";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [readLink] The URL that returns this resource. To use the
   * URL, append query parameters as appropriate and include the
   * Ocp-Apim-Subscription-Key header.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly readLink?: string;
  /**
   * @member {string} [webSearchUrl] The URL to Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {string} [name] The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [url] The URL to get more information about the thing
   * represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly url?: string;
  /**
   * @member {ImageObject} [image] An image of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly image?: ImageObject;
  /**
   * @member {string} [description] A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
  /**
   * @member {string} [alternateName] An alias for the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly alternateName?: string;
  /**
   * @member {string} [bingId] An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly bingId?: string;
}

/**
 * Contains the possible cases for PropertiesItem.
 */
export type PropertiesItemUnion = PropertiesItem | RatingUnion;

/**
 * @interface
 * An interface representing PropertiesItem.
 * Defines an item.
 *
 */
export interface PropertiesItem {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "Properties/Item";
  /**
   * @member {string} [text] Text representation of an item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly text?: string;
}

/**
 * Contains the possible cases for Rating.
 */
export type RatingUnion = Rating | AggregateRating;

/**
 * @interface
 * An interface representing Rating.
 * Defines a rating.
 *
 */
export interface Rating {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "Rating";
  /**
   * @member {string} [text] Text representation of an item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly text?: string;
  /**
   * @member {number} ratingValue The mean (average) rating. The possible
   * values are 1.0 through 5.0.
   */
  ratingValue: number;
  /**
   * @member {number} [bestRating] The highest rated review. The possible
   * values are 1.0 through 5.0.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly bestRating?: number;
}

/**
 * @interface
 * An interface representing AggregateRating.
 * Defines the metrics that indicate how well an item was rated by others.
 *
 */
export interface AggregateRating {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "AggregateRating";
  /**
   * @member {string} [text] Text representation of an item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly text?: string;
  /**
   * @member {number} ratingValue The mean (average) rating. The possible
   * values are 1.0 through 5.0.
   */
  ratingValue: number;
  /**
   * @member {number} [bestRating] The highest rated review. The possible
   * values are 1.0 through 5.0.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly bestRating?: number;
  /**
   * @member {number} [reviewCount] The number of times the recipe has been
   * rated or reviewed.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly reviewCount?: number;
}

/**
 * Contains the possible cases for Offer.
 */
export type OfferUnion = Offer | AggregateOffer;

/**
 * @interface
 * An interface representing Offer.
 * Defines a merchant's offer.
 *
 */
export interface Offer {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "Offer";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [readLink] The URL that returns this resource. To use the
   * URL, append query parameters as appropriate and include the
   * Ocp-Apim-Subscription-Key header.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly readLink?: string;
  /**
   * @member {string} [webSearchUrl] The URL to Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {string} [name] The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [url] The URL to get more information about the thing
   * represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly url?: string;
  /**
   * @member {ImageObject} [image] An image of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly image?: ImageObject;
  /**
   * @member {string} [description] A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
  /**
   * @member {string} [alternateName] An alias for the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly alternateName?: string;
  /**
   * @member {string} [bingId] An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly bingId?: string;
  /**
   * @member {Organization} [seller] Seller for this offer.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly seller?: Organization;
  /**
   * @member {number} [price] The item's price.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly price?: number;
  /**
   * @member {Currency} [priceCurrency] The monetary currency. For example,
   * USD. Possible values include: 'USD', 'CAD', 'GBP', 'EUR', 'COP', 'JPY',
   * 'CNY', 'AUD', 'INR', 'AED', 'AFN', 'ALL', 'AMD', 'ANG', 'AOA', 'ARS',
   * 'AWG', 'AZN', 'BAM', 'BBD', 'BDT', 'BGN', 'BHD', 'BIF', 'BMD', 'BND',
   * 'BOB', 'BOV', 'BRL', 'BSD', 'BTN', 'BWP', 'BYR', 'BZD', 'CDF', 'CHE',
   * 'CHF', 'CHW', 'CLF', 'CLP', 'COU', 'CRC', 'CUC', 'CUP', 'CVE', 'CZK',
   * 'DJF', 'DKK', 'DOP', 'DZD', 'EGP', 'ERN', 'ETB', 'FJD', 'FKP', 'GEL',
   * 'GHS', 'GIP', 'GMD', 'GNF', 'GTQ', 'GYD', 'HKD', 'HNL', 'HRK', 'HTG',
   * 'HUF', 'IDR', 'ILS', 'IQD', 'IRR', 'ISK', 'JMD', 'JOD', 'KES', 'KGS',
   * 'KHR', 'KMF', 'KPW', 'KRW', 'KWD', 'KYD', 'KZT', 'LAK', 'LBP', 'LKR',
   * 'LRD', 'LSL', 'LYD', 'MAD', 'MDL', 'MGA', 'MKD', 'MMK', 'MNT', 'MOP',
   * 'MRO', 'MUR', 'MVR', 'MWK', 'MXN', 'MXV', 'MYR', 'MZN', 'NAD', 'NGN',
   * 'NIO', 'NOK', 'NPR', 'NZD', 'OMR', 'PAB', 'PEN', 'PGK', 'PHP', 'PKR',
   * 'PLN', 'PYG', 'QAR', 'RON', 'RSD', 'RUB', 'RWF', 'SAR', 'SBD', 'SCR',
   * 'SDG', 'SEK', 'SGD', 'SHP', 'SLL', 'SOS', 'SRD', 'SSP', 'STD', 'SYP',
   * 'SZL', 'THB', 'TJS', 'TMT', 'TND', 'TOP', 'TRY', 'TTD', 'TWD', 'TZS',
   * 'UAH', 'UGX', 'UYU', 'UZS', 'VEF', 'VND', 'VUV', 'WST', 'XAF', 'XCD',
   * 'XOF', 'XPF', 'YER', 'ZAR', 'ZMW'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**. Default value: 'USD' .
   */
  readonly priceCurrency?: Currency;
  /**
   * @member {ItemAvailability} [availability] The item's availability. The
   * following are the possible values: Discontinued, InStock, InStoreOnly,
   * LimitedAvailability, OnlineOnly, OutOfStock, PreOrder, SoldOut. Possible
   * values include: 'Discontinued', 'InStock', 'InStoreOnly',
   * 'LimitedAvailability', 'OnlineOnly', 'OutOfStock', 'PreOrder', 'SoldOut'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly availability?: ItemAvailability;
  /**
   * @member {AggregateRating} [aggregateRating] An aggregated rating that
   * indicates how well the product has been rated by others.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly aggregateRating?: AggregateRating;
  /**
   * @member {string} [lastUpdated] The last date that the offer was updated.
   * The date is in the form YYYY-MM-DD.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly lastUpdated?: string;
}

/**
 * @interface
 * An interface representing AggregateOffer.
 * Defines a list of offers from merchants that are related to the image.
 *
 */
export interface AggregateOffer {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "AggregateOffer";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [readLink] The URL that returns this resource. To use the
   * URL, append query parameters as appropriate and include the
   * Ocp-Apim-Subscription-Key header.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly readLink?: string;
  /**
   * @member {string} [webSearchUrl] The URL to Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {string} [name] The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [url] The URL to get more information about the thing
   * represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly url?: string;
  /**
   * @member {ImageObject} [image] An image of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly image?: ImageObject;
  /**
   * @member {string} [description] A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
  /**
   * @member {string} [alternateName] An alias for the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly alternateName?: string;
  /**
   * @member {string} [bingId] An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly bingId?: string;
  /**
   * @member {Organization} [seller] Seller for this offer.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly seller?: Organization;
  /**
   * @member {number} [price] The item's price.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly price?: number;
  /**
   * @member {Currency} [priceCurrency] The monetary currency. For example,
   * USD. Possible values include: 'USD', 'CAD', 'GBP', 'EUR', 'COP', 'JPY',
   * 'CNY', 'AUD', 'INR', 'AED', 'AFN', 'ALL', 'AMD', 'ANG', 'AOA', 'ARS',
   * 'AWG', 'AZN', 'BAM', 'BBD', 'BDT', 'BGN', 'BHD', 'BIF', 'BMD', 'BND',
   * 'BOB', 'BOV', 'BRL', 'BSD', 'BTN', 'BWP', 'BYR', 'BZD', 'CDF', 'CHE',
   * 'CHF', 'CHW', 'CLF', 'CLP', 'COU', 'CRC', 'CUC', 'CUP', 'CVE', 'CZK',
   * 'DJF', 'DKK', 'DOP', 'DZD', 'EGP', 'ERN', 'ETB', 'FJD', 'FKP', 'GEL',
   * 'GHS', 'GIP', 'GMD', 'GNF', 'GTQ', 'GYD', 'HKD', 'HNL', 'HRK', 'HTG',
   * 'HUF', 'IDR', 'ILS', 'IQD', 'IRR', 'ISK', 'JMD', 'JOD', 'KES', 'KGS',
   * 'KHR', 'KMF', 'KPW', 'KRW', 'KWD', 'KYD', 'KZT', 'LAK', 'LBP', 'LKR',
   * 'LRD', 'LSL', 'LYD', 'MAD', 'MDL', 'MGA', 'MKD', 'MMK', 'MNT', 'MOP',
   * 'MRO', 'MUR', 'MVR', 'MWK', 'MXN', 'MXV', 'MYR', 'MZN', 'NAD', 'NGN',
   * 'NIO', 'NOK', 'NPR', 'NZD', 'OMR', 'PAB', 'PEN', 'PGK', 'PHP', 'PKR',
   * 'PLN', 'PYG', 'QAR', 'RON', 'RSD', 'RUB', 'RWF', 'SAR', 'SBD', 'SCR',
   * 'SDG', 'SEK', 'SGD', 'SHP', 'SLL', 'SOS', 'SRD', 'SSP', 'STD', 'SYP',
   * 'SZL', 'THB', 'TJS', 'TMT', 'TND', 'TOP', 'TRY', 'TTD', 'TWD', 'TZS',
   * 'UAH', 'UGX', 'UYU', 'UZS', 'VEF', 'VND', 'VUV', 'WST', 'XAF', 'XCD',
   * 'XOF', 'XPF', 'YER', 'ZAR', 'ZMW'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**. Default value: 'USD' .
   */
  readonly priceCurrency?: Currency;
  /**
   * @member {ItemAvailability} [availability] The item's availability. The
   * following are the possible values: Discontinued, InStock, InStoreOnly,
   * LimitedAvailability, OnlineOnly, OutOfStock, PreOrder, SoldOut. Possible
   * values include: 'Discontinued', 'InStock', 'InStoreOnly',
   * 'LimitedAvailability', 'OnlineOnly', 'OutOfStock', 'PreOrder', 'SoldOut'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly availability?: ItemAvailability;
  /**
   * @member {AggregateRating} [aggregateRating] An aggregated rating that
   * indicates how well the product has been rated by others.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly aggregateRating?: AggregateRating;
  /**
   * @member {string} [lastUpdated] The last date that the offer was updated.
   * The date is in the form YYYY-MM-DD.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly lastUpdated?: string;
  /**
   * @member {OfferUnion[]} [offers] A list of offers from merchants that have
   * offerings related to the image.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly offers?: OfferUnion[];
}

/**
 * @interface
 * An interface representing ImagesImageMetadata.
 * Defines a count of the number of websites where you can shop or perform
 * other actions related to the image.
 *
 */
export interface ImagesImageMetadata {
  /**
   * @member {number} [shoppingSourcesCount] The number of websites that sell
   * the products seen in the image.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly shoppingSourcesCount?: number;
  /**
   * @member {number} [recipeSourcesCount] The number of websites that offer
   * recipes of the food seen in the image.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly recipeSourcesCount?: number;
  /**
   * @member {AggregateOffer} [aggregateOffer] A summary of the online offers
   * of products found in the image. For example, if the image is of a dress,
   * the offer might identify the lowest price and the number of offers found.
   * Only visually similar products insights include this field. The offer
   * includes the following fields: Name, AggregateRating, OfferCount, and
   * LowPrice.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly aggregateOffer?: AggregateOffer;
}

/**
 * Contains the possible cases for MediaObject.
 */
export type MediaObjectUnion = MediaObject | ImageObject;

/**
 * @interface
 * An interface representing MediaObject.
 * Defines a media object.
 *
 */
export interface MediaObject {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "MediaObject";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [readLink] The URL that returns this resource. To use the
   * URL, append query parameters as appropriate and include the
   * Ocp-Apim-Subscription-Key header.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly readLink?: string;
  /**
   * @member {string} [webSearchUrl] The URL to Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {string} [name] The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [url] The URL to get more information about the thing
   * represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly url?: string;
  /**
   * @member {ImageObject} [image] An image of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly image?: ImageObject;
  /**
   * @member {string} [description] A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
  /**
   * @member {string} [alternateName] An alias for the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly alternateName?: string;
  /**
   * @member {string} [bingId] An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly bingId?: string;
  /**
   * @member {string} [thumbnailUrl] The URL to a thumbnail of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly thumbnailUrl?: string;
  /**
   * @member {ThingUnion[]} [provider] The source of the creative work.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provider?: ThingUnion[];
  /**
   * @member {string} [datePublished] The date on which the CreativeWork was
   * published.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly datePublished?: string;
  /**
   * @member {string} [text] Text content of this creative work.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly text?: string;
  /**
   * @member {string} [contentUrl] Original URL to retrieve the source (file)
   * for the media object (e.g., the source URL for the image).
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly contentUrl?: string;
  /**
   * @member {string} [hostPageUrl] URL of the page that hosts the media
   * object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly hostPageUrl?: string;
  /**
   * @member {string} [contentSize] Size of the media object content. Use
   * format "value unit" (e.g., "1024 B").
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly contentSize?: string;
  /**
   * @member {string} [encodingFormat] Encoding format (e.g., png, gif, jpeg,
   * etc).
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly encodingFormat?: string;
  /**
   * @member {string} [hostPageDisplayUrl] Display URL of the page that hosts
   * the media object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly hostPageDisplayUrl?: string;
  /**
   * @member {number} [width] The width of the media object, in pixels.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly width?: number;
  /**
   * @member {number} [height] The height of the media object, in pixels.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly height?: number;
}

/**
 * @interface
 * An interface representing ImageObject.
 * Defines an image.
 *
 */
export interface ImageObject {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "ImageObject";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [readLink] The URL that returns this resource. To use the
   * URL, append query parameters as appropriate and include the
   * Ocp-Apim-Subscription-Key header.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly readLink?: string;
  /**
   * @member {string} [webSearchUrl] The URL to Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {string} [name] The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [url] The URL to get more information about the thing
   * represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly url?: string;
  /**
   * @member {ImageObject} [image] An image of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly image?: ImageObject;
  /**
   * @member {string} [description] A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
  /**
   * @member {string} [alternateName] An alias for the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly alternateName?: string;
  /**
   * @member {string} [bingId] An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly bingId?: string;
  /**
   * @member {string} [thumbnailUrl] The URL to a thumbnail of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly thumbnailUrl?: string;
  /**
   * @member {ThingUnion[]} [provider] The source of the creative work.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provider?: ThingUnion[];
  /**
   * @member {string} [datePublished] The date on which the CreativeWork was
   * published.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly datePublished?: string;
  /**
   * @member {string} [text] Text content of this creative work.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly text?: string;
  /**
   * @member {string} [contentUrl] Original URL to retrieve the source (file)
   * for the media object (e.g., the source URL for the image).
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly contentUrl?: string;
  /**
   * @member {string} [hostPageUrl] URL of the page that hosts the media
   * object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly hostPageUrl?: string;
  /**
   * @member {string} [contentSize] Size of the media object content. Use
   * format "value unit" (e.g., "1024 B").
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly contentSize?: string;
  /**
   * @member {string} [encodingFormat] Encoding format (e.g., png, gif, jpeg,
   * etc).
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly encodingFormat?: string;
  /**
   * @member {string} [hostPageDisplayUrl] Display URL of the page that hosts
   * the media object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly hostPageDisplayUrl?: string;
  /**
   * @member {number} [width] The width of the media object, in pixels.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly width?: number;
  /**
   * @member {number} [height] The height of the media object, in pixels.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly height?: number;
  /**
   * @member {ImageObject} [thumbnail] The URL to a thumbnail of the image.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly thumbnail?: ImageObject;
  /**
   * @member {string} [imageInsightsToken] The token that you use in a
   * subsequent call to Visual Search API to get additional information about
   * the image. For information about using this token, see the
   * imageInsightsToken field inside the knowledgeRequest request parameter.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly imageInsightsToken?: string;
  /**
   * @member {ImagesImageMetadata} [insightsMetadata] A count of the number of
   * websites where you can shop or perform other actions related to the image.
   * For example, if the image is of an apple pie, this object includes a count
   * of the number of websites where you can buy an apple pie. To indicate the
   * number of offers in your UX, include badging such as a shopping cart icon
   * that contains the count. When the user clicks on the icon, use
   * imageInisghtsToken in a subsequent Visual Search API call to get the list
   * of shopping websites.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly insightsMetadata?: ImagesImageMetadata;
  /**
   * @member {string} [imageId] Unique Id for the image.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly imageId?: string;
  /**
   * @member {string} [accentColor] A three-byte hexadecimal number that
   * represents the color that dominates the image. Use the color as the
   * temporary background in your client until the image is loaded.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly accentColor?: string;
  /**
   * @member {string} [visualWords] For interal use only.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly visualWords?: string;
}

/**
 * @interface
 * An interface representing ImageKnowledge.
 * Defines a visual search API response.
 *
 */
export interface ImageKnowledge {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "ImageKnowledge";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [readLink] The URL that returns this resource. To use the
   * URL, append query parameters as appropriate and include the
   * Ocp-Apim-Subscription-Key header.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly readLink?: string;
  /**
   * @member {string} [webSearchUrl] The URL to Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {ImageTag[]} [tags] A list of visual search tags.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly tags?: ImageTag[];
  /**
   * @member {ImageObject} [image] Image object containing metadata about the
   * requested image.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly image?: ImageObject;
}

/**
 * @interface
 * An interface representing ErrorModel.
 * Defines the error that occurred.
 *
 */
export interface ErrorModel {
  /**
   * @member {ErrorCode} code The error code that identifies the category of
   * error. Possible values include: 'None', 'ServerError', 'InvalidRequest',
   * 'RateLimitExceeded', 'InvalidAuthorization', 'InsufficientAuthorization'.
   * Default value: 'None' .
   */
  code: ErrorCode;
  /**
   * @member {ErrorSubCode} [subCode] The error code that further helps to
   * identify the error. Possible values include: 'UnexpectedError',
   * 'ResourceError', 'NotImplemented', 'ParameterMissing',
   * 'ParameterInvalidValue', 'HttpNotAllowed', 'Blocked',
   * 'AuthorizationMissing', 'AuthorizationRedundancy',
   * 'AuthorizationDisabled', 'AuthorizationExpired'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly subCode?: ErrorSubCode;
  /**
   * @member {string} message A description of the error.
   */
  message: string;
  /**
   * @member {string} [moreDetails] A description that provides additional
   * information about the error.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly moreDetails?: string;
  /**
   * @member {string} [parameter] The parameter in the request that caused the
   * error.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly parameter?: string;
  /**
   * @member {string} [value] The parameter's value in the request that was not
   * valid.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly value?: string;
}

/**
 * @interface
 * An interface representing ErrorResponse.
 * The top-level response that represents a failed request.
 *
 */
export interface ErrorResponse {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "ErrorResponse";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [readLink] The URL that returns this resource. To use the
   * URL, append query parameters as appropriate and include the
   * Ocp-Apim-Subscription-Key header.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly readLink?: string;
  /**
   * @member {string} [webSearchUrl] The URL to Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {ErrorModel[]} errors A list of errors that describe the reasons
   * why the request failed.
   */
  errors: ErrorModel[];
}

/**
 * @interface
 * An interface representing Person.
 * Defines a person.
 *
 */
export interface Person {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "Person";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [readLink] The URL that returns this resource. To use the
   * URL, append query parameters as appropriate and include the
   * Ocp-Apim-Subscription-Key header.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly readLink?: string;
  /**
   * @member {string} [webSearchUrl] The URL to Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {string} [name] The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [url] The URL to get more information about the thing
   * represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly url?: string;
  /**
   * @member {ImageObject} [image] An image of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly image?: ImageObject;
  /**
   * @member {string} [description] A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
  /**
   * @member {string} [alternateName] An alias for the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly alternateName?: string;
  /**
   * @member {string} [bingId] An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly bingId?: string;
  /**
   * @member {string} [jobTitle] The person's job title.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly jobTitle?: string;
  /**
   * @member {string} [twitterProfile] The URL of the person's twitter profile.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly twitterProfile?: string;
}

/**
 * @interface
 * An interface representing ImageEntityAction.
 * Defines an entity action.
 *
 */
export interface ImageEntityAction {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "ImageEntityAction";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [readLink] The URL that returns this resource. To use the
   * URL, append query parameters as appropriate and include the
   * Ocp-Apim-Subscription-Key header.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly readLink?: string;
  /**
   * @member {string} [webSearchUrl] The URL to Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {string} [name] The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [url] The URL to get more information about the thing
   * represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly url?: string;
  /**
   * @member {ImageObject} [image] An image of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly image?: ImageObject;
  /**
   * @member {string} [description] A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
  /**
   * @member {string} [alternateName] An alias for the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly alternateName?: string;
  /**
   * @member {string} [bingId] An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly bingId?: string;
  /**
   * @member {string} [thumbnailUrl] The URL to a thumbnail of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly thumbnailUrl?: string;
  /**
   * @member {ThingUnion[]} [provider] The source of the creative work.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provider?: ThingUnion[];
  /**
   * @member {string} [datePublished] The date on which the CreativeWork was
   * published.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly datePublished?: string;
  /**
   * @member {string} [text] Text content of this creative work.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly text?: string;
  /**
   * @member {ThingUnion[]} [result] The result produced in the action.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly result?: ThingUnion[];
  /**
   * @member {string} [displayName] A display name for the action.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly displayName?: string;
  /**
   * @member {boolean} [isTopAction] A Boolean representing whether this result
   * is the top action.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly isTopAction?: boolean;
  /**
   * @member {string} [serviceUrl] Use this URL to get additional data to
   * determine how to take the appropriate action. For example, the serviceUrl
   * might return JSON along with an image URL.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly serviceUrl?: string;
  /**
   * @member {string} [actionType] A string representing the type of action.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly actionType?: string;
}

/**
 * @interface
 * An interface representing ImagesModule.
 * Defines a list of images.
 *
 */
export interface ImagesModule {
  /**
   * @member {ImageObject[]} [value] A list of images.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly value?: ImageObject[];
}

/**
 * @interface
 * An interface representing ImageModuleAction.
 * Defines an image list action.
 *
 */
export interface ImageModuleAction {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "ImageModuleAction";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [readLink] The URL that returns this resource. To use the
   * URL, append query parameters as appropriate and include the
   * Ocp-Apim-Subscription-Key header.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly readLink?: string;
  /**
   * @member {string} [webSearchUrl] The URL to Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {string} [name] The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [url] The URL to get more information about the thing
   * represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly url?: string;
  /**
   * @member {ImageObject} [image] An image of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly image?: ImageObject;
  /**
   * @member {string} [description] A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
  /**
   * @member {string} [alternateName] An alias for the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly alternateName?: string;
  /**
   * @member {string} [bingId] An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly bingId?: string;
  /**
   * @member {string} [thumbnailUrl] The URL to a thumbnail of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly thumbnailUrl?: string;
  /**
   * @member {ThingUnion[]} [provider] The source of the creative work.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provider?: ThingUnion[];
  /**
   * @member {string} [datePublished] The date on which the CreativeWork was
   * published.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly datePublished?: string;
  /**
   * @member {string} [text] Text content of this creative work.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly text?: string;
  /**
   * @member {ThingUnion[]} [result] The result produced in the action.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly result?: ThingUnion[];
  /**
   * @member {string} [displayName] A display name for the action.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly displayName?: string;
  /**
   * @member {boolean} [isTopAction] A Boolean representing whether this result
   * is the top action.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly isTopAction?: boolean;
  /**
   * @member {string} [serviceUrl] Use this URL to get additional data to
   * determine how to take the appropriate action. For example, the serviceUrl
   * might return JSON along with an image URL.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly serviceUrl?: string;
  /**
   * @member {string} [actionType] A string representing the type of action.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly actionType?: string;
  /**
   * @member {ImagesModule} [data] A list of images.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly data?: ImagesModule;
}

/**
 * @interface
 * An interface representing Recipe.
 * Defines a cooking recipe.
 *
 */
export interface Recipe {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "Recipe";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [readLink] The URL that returns this resource. To use the
   * URL, append query parameters as appropriate and include the
   * Ocp-Apim-Subscription-Key header.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly readLink?: string;
  /**
   * @member {string} [webSearchUrl] The URL to Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {string} [name] The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [url] The URL to get more information about the thing
   * represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly url?: string;
  /**
   * @member {ImageObject} [image] An image of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly image?: ImageObject;
  /**
   * @member {string} [description] A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
  /**
   * @member {string} [alternateName] An alias for the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly alternateName?: string;
  /**
   * @member {string} [bingId] An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly bingId?: string;
  /**
   * @member {string} [thumbnailUrl] The URL to a thumbnail of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly thumbnailUrl?: string;
  /**
   * @member {ThingUnion[]} [provider] The source of the creative work.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provider?: ThingUnion[];
  /**
   * @member {string} [datePublished] The date on which the CreativeWork was
   * published.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly datePublished?: string;
  /**
   * @member {string} [text] Text content of this creative work.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly text?: string;
  /**
   * @member {string} [cookTime] The amount of time the food takes to cook. For
   * example, PT25M. For information about the time format, see
   * http://en.wikipedia.org/wiki/ISO_8601#Durations.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly cookTime?: string;
  /**
   * @member {string} [prepTime] The amount of time required to prepare the
   * ingredients. For example, PT15M. For information about the time format,
   * see http://en.wikipedia.org/wiki/ISO_8601#Durations.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly prepTime?: string;
  /**
   * @member {string} [totalTime] The total amount of time it takes to prepare
   * and cook the recipe. For example, PT45M. For information about the time
   * format, see http://en.wikipedia.org/wiki/ISO_8601#Durations.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly totalTime?: string;
}

/**
 * @interface
 * An interface representing RecipesModule.
 * Defines a list of recipes.
 *
 */
export interface RecipesModule {
  /**
   * @member {Recipe[]} [value] A list of recipes.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly value?: Recipe[];
}

/**
 * @interface
 * An interface representing ImageRecipesAction.
 * Defines an recipe action.
 *
 */
export interface ImageRecipesAction {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "ImageRecipesAction";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [readLink] The URL that returns this resource. To use the
   * URL, append query parameters as appropriate and include the
   * Ocp-Apim-Subscription-Key header.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly readLink?: string;
  /**
   * @member {string} [webSearchUrl] The URL to Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {string} [name] The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [url] The URL to get more information about the thing
   * represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly url?: string;
  /**
   * @member {ImageObject} [image] An image of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly image?: ImageObject;
  /**
   * @member {string} [description] A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
  /**
   * @member {string} [alternateName] An alias for the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly alternateName?: string;
  /**
   * @member {string} [bingId] An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly bingId?: string;
  /**
   * @member {string} [thumbnailUrl] The URL to a thumbnail of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly thumbnailUrl?: string;
  /**
   * @member {ThingUnion[]} [provider] The source of the creative work.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provider?: ThingUnion[];
  /**
   * @member {string} [datePublished] The date on which the CreativeWork was
   * published.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly datePublished?: string;
  /**
   * @member {string} [text] Text content of this creative work.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly text?: string;
  /**
   * @member {ThingUnion[]} [result] The result produced in the action.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly result?: ThingUnion[];
  /**
   * @member {string} [displayName] A display name for the action.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly displayName?: string;
  /**
   * @member {boolean} [isTopAction] A Boolean representing whether this result
   * is the top action.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly isTopAction?: boolean;
  /**
   * @member {string} [serviceUrl] Use this URL to get additional data to
   * determine how to take the appropriate action. For example, the serviceUrl
   * might return JSON along with an image URL.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly serviceUrl?: string;
  /**
   * @member {string} [actionType] A string representing the type of action.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly actionType?: string;
  /**
   * @member {RecipesModule} [data] A list of recipes related to the image.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly data?: RecipesModule;
}

/**
 * @interface
 * An interface representing Query.
 * Defines a search query.
 *
 */
export interface Query {
  /**
   * @member {string} text The query string. Use this string as the query term
   * in a new search request.
   */
  text: string;
  /**
   * @member {string} [displayText] The display version of the query term.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly displayText?: string;
  /**
   * @member {string} [webSearchUrl] The URL that takes the user to the Bing
   * search results page for the query.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {string} [searchLink] The URL that you use to get the results of
   * the related search. Before using the URL, you must append query parameters
   * as appropriate and include the Ocp-Apim-Subscription-Key header. Use this
   * URL if you're displaying the results in your own user interface.
   * Otherwise, use the webSearchUrl URL.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly searchLink?: string;
  /**
   * @member {ImageObject} [thumbnail] The URL to a thumbnail of a related
   * image.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly thumbnail?: ImageObject;
}

/**
 * @interface
 * An interface representing RelatedSearchesModule.
 * Defines a list of related searches.
 *
 */
export interface RelatedSearchesModule {
  /**
   * @member {Query[]} [value] A list of related searches.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly value?: Query[];
}

/**
 * @interface
 * An interface representing ImageRelatedSearchesAction.
 * Defines an related search action.
 *
 */
export interface ImageRelatedSearchesAction {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "ImageRelatedSearchesAction";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [readLink] The URL that returns this resource. To use the
   * URL, append query parameters as appropriate and include the
   * Ocp-Apim-Subscription-Key header.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly readLink?: string;
  /**
   * @member {string} [webSearchUrl] The URL to Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {string} [name] The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [url] The URL to get more information about the thing
   * represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly url?: string;
  /**
   * @member {ImageObject} [image] An image of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly image?: ImageObject;
  /**
   * @member {string} [description] A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
  /**
   * @member {string} [alternateName] An alias for the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly alternateName?: string;
  /**
   * @member {string} [bingId] An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly bingId?: string;
  /**
   * @member {string} [thumbnailUrl] The URL to a thumbnail of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly thumbnailUrl?: string;
  /**
   * @member {ThingUnion[]} [provider] The source of the creative work.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provider?: ThingUnion[];
  /**
   * @member {string} [datePublished] The date on which the CreativeWork was
   * published.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly datePublished?: string;
  /**
   * @member {string} [text] Text content of this creative work.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly text?: string;
  /**
   * @member {ThingUnion[]} [result] The result produced in the action.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly result?: ThingUnion[];
  /**
   * @member {string} [displayName] A display name for the action.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly displayName?: string;
  /**
   * @member {boolean} [isTopAction] A Boolean representing whether this result
   * is the top action.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly isTopAction?: boolean;
  /**
   * @member {string} [serviceUrl] Use this URL to get additional data to
   * determine how to take the appropriate action. For example, the serviceUrl
   * might return JSON along with an image URL.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly serviceUrl?: string;
  /**
   * @member {string} [actionType] A string representing the type of action.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly actionType?: string;
  /**
   * @member {RelatedSearchesModule} [data] A list of queries related to the
   * image.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly data?: RelatedSearchesModule;
}

/**
 * @interface
 * An interface representing ImageShoppingSourcesAction.
 * Defines a shopping sources action.
 *
 */
export interface ImageShoppingSourcesAction {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "ImageShoppingSourcesAction";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [readLink] The URL that returns this resource. To use the
   * URL, append query parameters as appropriate and include the
   * Ocp-Apim-Subscription-Key header.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly readLink?: string;
  /**
   * @member {string} [webSearchUrl] The URL to Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {string} [name] The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [url] The URL to get more information about the thing
   * represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly url?: string;
  /**
   * @member {ImageObject} [image] An image of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly image?: ImageObject;
  /**
   * @member {string} [description] A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
  /**
   * @member {string} [alternateName] An alias for the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly alternateName?: string;
  /**
   * @member {string} [bingId] An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly bingId?: string;
  /**
   * @member {string} [thumbnailUrl] The URL to a thumbnail of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly thumbnailUrl?: string;
  /**
   * @member {ThingUnion[]} [provider] The source of the creative work.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provider?: ThingUnion[];
  /**
   * @member {string} [datePublished] The date on which the CreativeWork was
   * published.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly datePublished?: string;
  /**
   * @member {string} [text] Text content of this creative work.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly text?: string;
  /**
   * @member {ThingUnion[]} [result] The result produced in the action.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly result?: ThingUnion[];
  /**
   * @member {string} [displayName] A display name for the action.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly displayName?: string;
  /**
   * @member {boolean} [isTopAction] A Boolean representing whether this result
   * is the top action.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly isTopAction?: boolean;
  /**
   * @member {string} [serviceUrl] Use this URL to get additional data to
   * determine how to take the appropriate action. For example, the serviceUrl
   * might return JSON along with an image URL.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly serviceUrl?: string;
  /**
   * @member {string} [actionType] A string representing the type of action.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly actionType?: string;
  /**
   * @member {AggregateOffer} [data] A list of merchants that offer items
   * related to the image.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly data?: AggregateOffer;
}

/**
 * @interface
 * An interface representing CropArea.
 * A JSON object consisting of coordinates specifying the four corners of a
 * cropped rectangle within the input image.
 *
 */
export interface CropArea {
  /**
   * @member {number} top The top coordinate of the region to be cropped. The
   * coordinate is a fractional value of the original image's height and is
   * measured from the top edge of the image. Specify the coordinate as a value
   * from 0.0 through 1.0.
   */
  top: number;
  /**
   * @member {number} bottom The bottom coordinate of the region to be cropped.
   * The coordinate is a fractional value of the original image's height and is
   * measured from the top edge of the image. Specify the coordinate as a value
   * from 0.0 through 1.0.
   */
  bottom: number;
  /**
   * @member {number} left The left coordinate of the region to be cropped. The
   * coordinate is a fractional value of the original image's width and is
   * measured from the left edge of the image. Specify the coordinate as a
   * value from 0.0 through 1.0.
   */
  left: number;
  /**
   * @member {number} right The right coordinate of the region to be cropped.
   * The coordinate is a fractional value of the original image's width and is
   * measured from the left edge of the image. Specify the coordinate as a
   * value from 0.0 through 1.0.
   */
  right: number;
}

/**
 * @interface
 * An interface representing ImageInfo.
 * A JSON object that identities the image to get insights of . It also
 * includes the optional crop area that you use to identify the region of
 * interest in the image.
 *
 */
export interface ImageInfo {
  /**
   * @member {string} [imageInsightsToken] An image insights token. To get the
   * insights token, call one of the Image Search APIs (for example,
   * /images/search). In the search results, the
   * [Image](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#image)
   * object's
   * [imageInsightsToken](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#image-imageinsightstoken)
   * field contains the token. The imageInsightsToken and url fields mutually
   * exclusive; do not specify both. Do not specify an insights token if the
   * request includes the image form data.
   */
  imageInsightsToken?: string;
  /**
   * @member {string} [url] The URL of the input image. The imageInsightsToken
   * and url fields are mutually exclusive; do not specify both. Do not specify
   * the URL if the request includes the image form data.
   */
  url?: string;
  /**
   * @member {CropArea} [cropArea] A JSON object consisting of coordinates
   * specifying the four corners of a cropped rectangle within the input image.
   * Use the crop area to identify the region of interest in the image. You can
   * apply the crop area to the images specified using the imageInsightsToken
   * or url fields, or an image binary specified in an image form data.
   */
  cropArea?: CropArea;
}

/**
 * @interface
 * An interface representing Filters.
 * A key-value object consisting of filters that may be specified to limit the
 * results returned by the API. Current available filters: site.
 *
 */
export interface Filters {
  /**
   * @member {string} [site] The URL of the site to return similar images and
   * similar products from. (e.g., "www.bing.com", "bing.com").
   */
  site?: string;
}

/**
 * @interface
 * An interface representing KnowledgeRequest.
 * A JSON object containing information about the request, such as filters for
 * the resulting actions.
 *
 */
export interface KnowledgeRequest {
  /**
   * @member {Filters} [filters] A key-value object consisting of filters that
   * may be specified to limit the results returned by the API.
   */
  filters?: Filters;
}

/**
 * @interface
 * An interface representing VisualSearchRequest.
 * A JSON object that contains information about the image to get insights of.
 * Specify this object only in a knowledgeRequest form data.
 *
 */
export interface VisualSearchRequest {
  /**
   * @member {ImageInfo} [imageInfo] A JSON object that identities the image to
   * get insights of.
   */
  imageInfo?: ImageInfo;
  /**
   * @member {KnowledgeRequest} [knowledgeRequest] A JSON object containing
   * information about the request, such as filters, or a description.
   */
  knowledgeRequest?: KnowledgeRequest;
}

/**
 * @interface
 * An interface representing VisualSearchAPIClientOptions.
 * @extends ServiceClientOptions
 */
export interface VisualSearchAPIClientOptions extends ServiceClientOptions {
  /**
   * @member {string} [baseUri]
   */
  baseUri?: string;
}

/**
 * @interface
 * An interface representing ImagesVisualSearchOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ImagesVisualSearchOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [acceptLanguage] A comma-delimited list of one or more
   * languages to use for user interface strings. The list is in decreasing
   * order of preference. For additional information, including expected
   * format, see
   * [RFC2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html). This
   * header and the
   * [setLang](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-visual-search-api-v7-reference#setlang)
   * query parameter are mutually exclusive; do not specify both. If you set
   * this header, you must also specify the
   * [cc](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-visual-search-api-v7-reference#cc)
   * query parameter. To determine the market to return results for, Bing uses
   * the first supported language it finds from the list and combines it with
   * the cc parameter value. If the list does not include a supported language,
   * Bing finds the closest language and market that supports the request or it
   * uses an aggregated or default market for the results. To determine the
   * market that Bing used, see the BingAPIs-Market header. Use this header and
   * the cc query parameter only if you specify multiple languages. Otherwise,
   * use the
   * [mkt](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-visual-search-api-v7-reference#mkt)
   * and
   * [setLang](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-visual-search-api-v7-reference#setlang)
   * query parameters. A user interface string is a string that's used as a
   * label in a user interface. There are few user interface strings in the
   * JSON response objects. Any links to Bing.com properties in the response
   * objects apply the specified language.
   */
  acceptLanguage?: string;
  /**
   * @member {string} [contentType] Must be set to multipart/form-data and
   * include a boundary parameter (for example, multipart/form-data;
   * boundary=<boundary string>). For more details, see [Content form types](
   * https://docs.microsoft.com/en-us/azure/cognitive-services/bing-visual-search/overview#content-form-types).
   */
  contentType?: string;
  /**
   * @member {string} [userAgent] The user agent originating the request. Bing
   * uses the user agent to provide mobile users with an optimized experience.
   * Although optional, you are encouraged to always specify this header. The
   * user-agent should be the same string that any commonly used browser sends.
   * For information about user agents, see [RFC
   * 2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html). The
   * following are examples of user-agent strings. Windows Phone: Mozilla/5.0
   * (compatible; MSIE 10.0; Windows Phone 8.0; Trident/6.0; IEMobile/10.0;
   * ARM; Touch; NOKIA; Lumia 822). Android: Mozilla / 5.0 (Linux; U; Android
   * 2.3.5; en - us; SCH - I500 Build / GINGERBREAD) AppleWebKit / 533.1
   * (KHTML; like Gecko) Version / 4.0 Mobile Safari / 533.1. iPhone: Mozilla /
   * 5.0 (iPhone; CPU iPhone OS 6_1 like Mac OS X) AppleWebKit / 536.26 (KHTML;
   * like Gecko) Mobile / 10B142 iPhone4; 1 BingWeb / 3.03.1428.20120423. PC:
   * Mozilla / 5.0 (Windows NT 6.3; WOW64; Trident / 7.0; Touch; rv:11.0) like
   * Gecko. iPad: Mozilla / 5.0 (iPad; CPU OS 7_0 like Mac OS X) AppleWebKit /
   * 537.51.1 (KHTML, like Gecko) Version / 7.0 Mobile / 11A465 Safari /
   * 9537.53.
   */
  userAgent?: string;
  /**
   * @member {string} [clientId] Bing uses this header to provide users with
   * consistent behavior across Bing API calls. Bing often flights new features
   * and improvements, and it uses the client ID as a key for assigning traffic
   * on different flights. If you do not use the same client ID for a user
   * across multiple requests, then Bing may assign the user to multiple
   * conflicting flights. Being assigned to multiple conflicting flights can
   * lead to an inconsistent user experience. For example, if the second
   * request has a different flight assignment than the first, the experience
   * may be unexpected. Also, Bing can use the client ID to tailor web results
   * to that client ID’s search history, providing a richer experience for the
   * user. Bing also uses this header to help improve result rankings by
   * analyzing the activity generated by a client ID. The relevance
   * improvements help with better quality of results delivered by Bing APIs
   * and in turn enables higher click-through rates for the API consumer.
   * IMPORTANT: Although optional, you should consider this header required.
   * Persisting the client ID across multiple requests for the same end user
   * and device combination enables 1) the API consumer to receive a consistent
   * user experience, and 2) higher click-through rates via better quality of
   * results from the Bing APIs. Each user that uses your application on the
   * device must have a unique, Bing generated client ID. If you do not include
   * this header in the request, Bing generates an ID and returns it in the
   * X-MSEdge-ClientID response header. The only time that you should NOT
   * include this header in a request is the first time the user uses your app
   * on that device. Use the client ID for each Bing API request that your app
   * makes for this user on the device. Persist the client ID. To persist the
   * ID in a browser app, use a persistent HTTP cookie to ensure the ID is used
   * across all sessions. Do not use a session cookie. For other apps such as
   * mobile apps, use the device's persistent storage to persist the ID. The
   * next time the user uses your app on that device, get the client ID that
   * you persisted. Bing responses may or may not include this header. If the
   * response includes this header, capture the client ID and use it for all
   * subsequent Bing requests for the user on that device. ATTENTION: You must
   * ensure that this Client ID is not linkable to any authenticatable user
   * account information. If you include the X-MSEdge-ClientID, you must not
   * include cookies in the request.
   */
  clientId?: string;
  /**
   * @member {string} [clientIp] The IPv4 or IPv6 address of the client device.
   * The IP address is used to discover the user's location. Bing uses the
   * location information to determine safe search behavior. Although optional,
   * you are encouraged to always specify this header and the X-Search-Location
   * header. Do not obfuscate the address (for example, by changing the last
   * octet to 0). Obfuscating the address results in the location not being
   * anywhere near the device's actual location, which may result in Bing
   * serving erroneous results.
   */
  clientIp?: string;
  /**
   * @member {string} [location] A semicolon-delimited list of key/value pairs
   * that describe the client's geographical location. Bing uses the location
   * information to determine safe search behavior and to return relevant local
   * content. Specify the key/value pair as <key>:<value>. The following are
   * the keys that you use to specify the user's location. lat (required): The
   * latitude of the client's location, in degrees. The latitude must be
   * greater than or equal to -90.0 and less than or equal to +90.0. Negative
   * values indicate southern latitudes and positive values indicate northern
   * latitudes. long (required): The longitude of the client's location, in
   * degrees. The longitude must be greater than or equal to -180.0 and less
   * than or equal to +180.0. Negative values indicate western longitudes and
   * positive values indicate eastern longitudes. re (required): The radius, in
   * meters, which specifies the horizontal accuracy of the coordinates. Pass
   * the value returned by the device's location service. Typical values might
   * be 22m for GPS/Wi-Fi, 380m for cell tower triangulation, and 18,000m for
   * reverse IP lookup. ts (optional): The UTC UNIX timestamp of when the
   * client was at the location. (The UNIX timestamp is the number of seconds
   * since January 1, 1970.) head (optional): The client's relative heading or
   * direction of travel. Specify the direction of travel as degrees from 0
   * through 360, counting clockwise relative to true north. Specify this key
   * only if the sp key is nonzero. sp (optional): The horizontal velocity
   * (speed), in meters per second, that the client device is traveling. alt
   * (optional): The altitude of the client device, in meters. are (optional):
   * The radius, in meters, that specifies the vertical accuracy of the
   * coordinates. Specify this key only if you specify the alt key. Although
   * many of the keys are optional, the more information that you provide, the
   * more accurate the location results are. Although optional, you are
   * encouraged to always specify the user's geographical location. Providing
   * the location is especially important if the client's IP address does not
   * accurately reflect the user's physical location (for example, if the
   * client uses VPN). For optimal results, you should include this header and
   * the X-MSEdge-ClientIP header, but at a minimum, you should include this
   * header.
   */
  location?: string;
  /**
   * @member {string} [market] The market where the results come from.
   * Typically, mkt is the country where the user is making the request from.
   * However, it could be a different country if the user is not located in a
   * country where Bing delivers results. The market must be in the form
   * <language code>-<country code>. For example, en-US. The string is case
   * insensitive. For a list of possible market values, see [Market
   * Codes](https://docs.microsoft.com/en-us/azure/cognitive-services/bing-visual-search/supported-countries-markets).
   * NOTE: If known, you are encouraged to always specify the market.
   * Specifying the market helps Bing route the request and return an
   * appropriate and optimal response. If you specify a market that is not
   * listed in [Market
   * Codes](https://docs.microsoft.com/en-us/azure/cognitive-services/bing-visual-search/supported-countries-markets),
   * Bing uses a best fit market code based on an internal mapping that is
   * subject to change.
   */
  market?: string;
  /**
   * @member {SafeSearch} [safeSearch] Filter the image results in actions with
   * type 'VisualSearch' for adult content. The following are the possible
   * filter values. Off: May return images with adult content. Moderate: Do not
   * return images with adult content. Strict: Do not return images with adult
   * content. The default is Moderate. If the request comes from a market that
   * Bing's adult policy requires that safeSearch is set to Strict, Bing
   * ignores the safeSearch value and uses Strict. If you use the site: filter
   * in the knowledge request, there is the chance that the response may
   * contain adult content regardless of what the safeSearch query parameter is
   * set to. Use site: only if you are aware of the content on the site and
   * your scenario supports the possibility of adult content. Possible values
   * include: 'Off', 'Moderate', 'Strict'
   */
  safeSearch?: SafeSearch;
  /**
   * @member {string} [setLang] The language to use for user interface strings.
   * Specify the language using the ISO 639-1 2-letter language code. For
   * example, the language code for English is EN. The default is EN (English).
   * Although optional, you should always specify the language. Typically, you
   * set setLang to the same language specified by mkt unless the user wants
   * the user interface strings displayed in a different language. A user
   * interface string is a string that's used as a label in a user interface.
   * There are few user interface strings in the JSON response objects. Also,
   * any links to Bing.com properties in the response objects apply the
   * specified language.
   */
  setLang?: string;
  /**
   * @member {string} [knowledgeRequest] The form data is a JSON object that
   * identifies the image using an insights token or URL to the image. The
   * object may also include an optional crop area that identifies an area of
   * interest in the image. The insights token and URL are mutually exclusive –
   * do not specify both. You may specify knowledgeRequest form data and image
   * form data in the same request only if knowledgeRequest form data specifies
   * the cropArea field only (it must not include an insights token or URL).
   */
  knowledgeRequest?: string;
  /**
   * @member {msRest.HttpRequestBody} [image] The form data is an image binary.
   * The Content-Disposition header's name parameter must be set to "image".
   * You must specify an image binary if you do not use knowledgeRequest form
   * data to specify the image; you may not use both forms to specify an image.
   * You may specify knowledgeRequest form data and image form data in the same
   * request only if knowledgeRequest form data specifies the cropArea field
   * only  (it must not include an insights token or URL).
   */
  image?: msRest.HttpRequestBody;
}

/**
 * Defines values for Currency.
 * Possible values include: 'USD', 'CAD', 'GBP', 'EUR', 'COP', 'JPY', 'CNY',
 * 'AUD', 'INR', 'AED', 'AFN', 'ALL', 'AMD', 'ANG', 'AOA', 'ARS', 'AWG', 'AZN',
 * 'BAM', 'BBD', 'BDT', 'BGN', 'BHD', 'BIF', 'BMD', 'BND', 'BOB', 'BOV', 'BRL',
 * 'BSD', 'BTN', 'BWP', 'BYR', 'BZD', 'CDF', 'CHE', 'CHF', 'CHW', 'CLF', 'CLP',
 * 'COU', 'CRC', 'CUC', 'CUP', 'CVE', 'CZK', 'DJF', 'DKK', 'DOP', 'DZD', 'EGP',
 * 'ERN', 'ETB', 'FJD', 'FKP', 'GEL', 'GHS', 'GIP', 'GMD', 'GNF', 'GTQ', 'GYD',
 * 'HKD', 'HNL', 'HRK', 'HTG', 'HUF', 'IDR', 'ILS', 'IQD', 'IRR', 'ISK', 'JMD',
 * 'JOD', 'KES', 'KGS', 'KHR', 'KMF', 'KPW', 'KRW', 'KWD', 'KYD', 'KZT', 'LAK',
 * 'LBP', 'LKR', 'LRD', 'LSL', 'LYD', 'MAD', 'MDL', 'MGA', 'MKD', 'MMK', 'MNT',
 * 'MOP', 'MRO', 'MUR', 'MVR', 'MWK', 'MXN', 'MXV', 'MYR', 'MZN', 'NAD', 'NGN',
 * 'NIO', 'NOK', 'NPR', 'NZD', 'OMR', 'PAB', 'PEN', 'PGK', 'PHP', 'PKR', 'PLN',
 * 'PYG', 'QAR', 'RON', 'RSD', 'RUB', 'RWF', 'SAR', 'SBD', 'SCR', 'SDG', 'SEK',
 * 'SGD', 'SHP', 'SLL', 'SOS', 'SRD', 'SSP', 'STD', 'SYP', 'SZL', 'THB', 'TJS',
 * 'TMT', 'TND', 'TOP', 'TRY', 'TTD', 'TWD', 'TZS', 'UAH', 'UGX', 'UYU', 'UZS',
 * 'VEF', 'VND', 'VUV', 'WST', 'XAF', 'XCD', 'XOF', 'XPF', 'YER', 'ZAR', 'ZMW'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: Currency = <Currency>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum Currency {
  USD = 'USD',
  CAD = 'CAD',
  GBP = 'GBP',
  EUR = 'EUR',
  COP = 'COP',
  JPY = 'JPY',
  CNY = 'CNY',
  AUD = 'AUD',
  INR = 'INR',
  AED = 'AED',
  AFN = 'AFN',
  ALL = 'ALL',
  AMD = 'AMD',
  ANG = 'ANG',
  AOA = 'AOA',
  ARS = 'ARS',
  AWG = 'AWG',
  AZN = 'AZN',
  BAM = 'BAM',
  BBD = 'BBD',
  BDT = 'BDT',
  BGN = 'BGN',
  BHD = 'BHD',
  BIF = 'BIF',
  BMD = 'BMD',
  BND = 'BND',
  BOB = 'BOB',
  BOV = 'BOV',
  BRL = 'BRL',
  BSD = 'BSD',
  BTN = 'BTN',
  BWP = 'BWP',
  BYR = 'BYR',
  BZD = 'BZD',
  CDF = 'CDF',
  CHE = 'CHE',
  CHF = 'CHF',
  CHW = 'CHW',
  CLF = 'CLF',
  CLP = 'CLP',
  COU = 'COU',
  CRC = 'CRC',
  CUC = 'CUC',
  CUP = 'CUP',
  CVE = 'CVE',
  CZK = 'CZK',
  DJF = 'DJF',
  DKK = 'DKK',
  DOP = 'DOP',
  DZD = 'DZD',
  EGP = 'EGP',
  ERN = 'ERN',
  ETB = 'ETB',
  FJD = 'FJD',
  FKP = 'FKP',
  GEL = 'GEL',
  GHS = 'GHS',
  GIP = 'GIP',
  GMD = 'GMD',
  GNF = 'GNF',
  GTQ = 'GTQ',
  GYD = 'GYD',
  HKD = 'HKD',
  HNL = 'HNL',
  HRK = 'HRK',
  HTG = 'HTG',
  HUF = 'HUF',
  IDR = 'IDR',
  ILS = 'ILS',
  IQD = 'IQD',
  IRR = 'IRR',
  ISK = 'ISK',
  JMD = 'JMD',
  JOD = 'JOD',
  KES = 'KES',
  KGS = 'KGS',
  KHR = 'KHR',
  KMF = 'KMF',
  KPW = 'KPW',
  KRW = 'KRW',
  KWD = 'KWD',
  KYD = 'KYD',
  KZT = 'KZT',
  LAK = 'LAK',
  LBP = 'LBP',
  LKR = 'LKR',
  LRD = 'LRD',
  LSL = 'LSL',
  LYD = 'LYD',
  MAD = 'MAD',
  MDL = 'MDL',
  MGA = 'MGA',
  MKD = 'MKD',
  MMK = 'MMK',
  MNT = 'MNT',
  MOP = 'MOP',
  MRO = 'MRO',
  MUR = 'MUR',
  MVR = 'MVR',
  MWK = 'MWK',
  MXN = 'MXN',
  MXV = 'MXV',
  MYR = 'MYR',
  MZN = 'MZN',
  NAD = 'NAD',
  NGN = 'NGN',
  NIO = 'NIO',
  NOK = 'NOK',
  NPR = 'NPR',
  NZD = 'NZD',
  OMR = 'OMR',
  PAB = 'PAB',
  PEN = 'PEN',
  PGK = 'PGK',
  PHP = 'PHP',
  PKR = 'PKR',
  PLN = 'PLN',
  PYG = 'PYG',
  QAR = 'QAR',
  RON = 'RON',
  RSD = 'RSD',
  RUB = 'RUB',
  RWF = 'RWF',
  SAR = 'SAR',
  SBD = 'SBD',
  SCR = 'SCR',
  SDG = 'SDG',
  SEK = 'SEK',
  SGD = 'SGD',
  SHP = 'SHP',
  SLL = 'SLL',
  SOS = 'SOS',
  SRD = 'SRD',
  SSP = 'SSP',
  STD = 'STD',
  SYP = 'SYP',
  SZL = 'SZL',
  THB = 'THB',
  TJS = 'TJS',
  TMT = 'TMT',
  TND = 'TND',
  TOP = 'TOP',
  TRY = 'TRY',
  TTD = 'TTD',
  TWD = 'TWD',
  TZS = 'TZS',
  UAH = 'UAH',
  UGX = 'UGX',
  UYU = 'UYU',
  UZS = 'UZS',
  VEF = 'VEF',
  VND = 'VND',
  VUV = 'VUV',
  WST = 'WST',
  XAF = 'XAF',
  XCD = 'XCD',
  XOF = 'XOF',
  XPF = 'XPF',
  YER = 'YER',
  ZAR = 'ZAR',
  ZMW = 'ZMW',
}

/**
 * Defines values for ItemAvailability.
 * Possible values include: 'Discontinued', 'InStock', 'InStoreOnly',
 * 'LimitedAvailability', 'OnlineOnly', 'OutOfStock', 'PreOrder', 'SoldOut'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: ItemAvailability =
 * <ItemAvailability>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum ItemAvailability {
  Discontinued = 'Discontinued',
  InStock = 'InStock',
  InStoreOnly = 'InStoreOnly',
  LimitedAvailability = 'LimitedAvailability',
  OnlineOnly = 'OnlineOnly',
  OutOfStock = 'OutOfStock',
  PreOrder = 'PreOrder',
  SoldOut = 'SoldOut',
}

/**
 * Defines values for ErrorCode.
 * Possible values include: 'None', 'ServerError', 'InvalidRequest',
 * 'RateLimitExceeded', 'InvalidAuthorization', 'InsufficientAuthorization'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: ErrorCode = <ErrorCode>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum ErrorCode {
  None = 'None',
  ServerError = 'ServerError',
  InvalidRequest = 'InvalidRequest',
  RateLimitExceeded = 'RateLimitExceeded',
  InvalidAuthorization = 'InvalidAuthorization',
  InsufficientAuthorization = 'InsufficientAuthorization',
}

/**
 * Defines values for ErrorSubCode.
 * Possible values include: 'UnexpectedError', 'ResourceError',
 * 'NotImplemented', 'ParameterMissing', 'ParameterInvalidValue',
 * 'HttpNotAllowed', 'Blocked', 'AuthorizationMissing',
 * 'AuthorizationRedundancy', 'AuthorizationDisabled', 'AuthorizationExpired'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: ErrorSubCode =
 * <ErrorSubCode>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum ErrorSubCode {
  UnexpectedError = 'UnexpectedError',
  ResourceError = 'ResourceError',
  NotImplemented = 'NotImplemented',
  ParameterMissing = 'ParameterMissing',
  ParameterInvalidValue = 'ParameterInvalidValue',
  HttpNotAllowed = 'HttpNotAllowed',
  Blocked = 'Blocked',
  AuthorizationMissing = 'AuthorizationMissing',
  AuthorizationRedundancy = 'AuthorizationRedundancy',
  AuthorizationDisabled = 'AuthorizationDisabled',
  AuthorizationExpired = 'AuthorizationExpired',
}

/**
 * Defines values for SafeSearch.
 * Possible values include: 'Off', 'Moderate', 'Strict'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: SafeSearch = <SafeSearch>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum SafeSearch {
  Off = 'Off',
  Moderate = 'Moderate',
  Strict = 'Strict',
}

/**
 * Contains response data for the visualSearch operation.
 */
export type ImagesVisualSearchResponse = ImageKnowledge & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ImageKnowledge;
    };
};
