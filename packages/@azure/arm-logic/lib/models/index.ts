/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };


/**
 * @interface
 * An interface representing Resource.
 * The base resource type.
 *
 * @extends BaseResource
 */
export interface Resource extends BaseResource {
  /**
   * @member {string} [id] The resource id.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [name] Gets the resource name.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [type] Gets the resource type.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: string;
  /**
   * @member {string} [location] The resource location.
   */
  location?: string;
  /**
   * @member {{ [propertyName: string]: string }} [tags] The resource tags.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * @interface
 * An interface representing SubResource.
 * The sub resource type.
 *
 * @extends BaseResource
 */
export interface SubResource extends BaseResource {
  /**
   * @member {string} [id] The resource id.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
}

/**
 * @interface
 * An interface representing ResourceReference.
 * The resource reference.
 *
 */
export interface ResourceReference {
  /**
   * @member {string} [id] The resource id.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [name] Gets the resource name.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [type] Gets the resource type.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: string;
}

/**
 * @interface
 * An interface representing Sku.
 * The sku type.
 *
 */
export interface Sku {
  /**
   * @member {SkuName} name The name. Possible values include: 'NotSpecified',
   * 'Free', 'Shared', 'Basic', 'Standard', 'Premium'
   */
  name: SkuName;
  /**
   * @member {ResourceReference} [plan] The reference to plan.
   */
  plan?: ResourceReference;
}

/**
 * @interface
 * An interface representing WorkflowParameter.
 * The workflow parameters.
 *
 */
export interface WorkflowParameter {
  /**
   * @member {ParameterType} [type] The type. Possible values include:
   * 'NotSpecified', 'String', 'SecureString', 'Int', 'Float', 'Bool', 'Array',
   * 'Object', 'SecureObject'
   */
  type?: ParameterType;
  /**
   * @member {any} [value] The value.
   */
  value?: any;
  /**
   * @member {any} [metadata] The metadata.
   */
  metadata?: any;
  /**
   * @member {string} [description] The description.
   */
  description?: string;
}

/**
 * @interface
 * An interface representing Workflow.
 * The workflow type.
 *
 * @extends Resource
 */
export interface Workflow extends Resource {
  /**
   * @member {WorkflowProvisioningState} [provisioningState] Gets the
   * provisioning state. Possible values include: 'NotSpecified', 'Accepted',
   * 'Running', 'Ready', 'Creating', 'Created', 'Deleting', 'Deleted',
   * 'Canceled', 'Failed', 'Succeeded', 'Moving', 'Updating', 'Registering',
   * 'Registered', 'Unregistering', 'Unregistered', 'Completed'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provisioningState?: WorkflowProvisioningState;
  /**
   * @member {Date} [createdTime] Gets the created time.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly createdTime?: Date;
  /**
   * @member {Date} [changedTime] Gets the changed time.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly changedTime?: Date;
  /**
   * @member {WorkflowState} [state] The state. Possible values include:
   * 'NotSpecified', 'Completed', 'Enabled', 'Disabled', 'Deleted', 'Suspended'
   */
  state?: WorkflowState;
  /**
   * @member {string} [version] Gets the version.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly version?: string;
  /**
   * @member {string} [accessEndpoint] Gets the access endpoint.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly accessEndpoint?: string;
  /**
   * @member {Sku} [sku] The sku.
   */
  sku?: Sku;
  /**
   * @member {ResourceReference} [integrationAccount] The integration account.
   */
  integrationAccount?: ResourceReference;
  /**
   * @member {any} [definition] The definition.
   */
  definition?: any;
  /**
   * @member {{ [propertyName: string]: WorkflowParameter }} [parameters] The
   * parameters.
   */
  parameters?: { [propertyName: string]: WorkflowParameter };
}

/**
 * @interface
 * An interface representing WorkflowFilter.
 * The workflow filter.
 *
 */
export interface WorkflowFilter {
  /**
   * @member {WorkflowState} [state] The state of workflows. Possible values
   * include: 'NotSpecified', 'Completed', 'Enabled', 'Disabled', 'Deleted',
   * 'Suspended'
   */
  state?: WorkflowState;
}

/**
 * @interface
 * An interface representing WorkflowVersion.
 * The workflow version.
 *
 * @extends Resource
 */
export interface WorkflowVersion extends Resource {
  /**
   * @member {Date} [createdTime] Gets the created time.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly createdTime?: Date;
  /**
   * @member {Date} [changedTime] Gets the changed time.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly changedTime?: Date;
  /**
   * @member {WorkflowState} [state] The state. Possible values include:
   * 'NotSpecified', 'Completed', 'Enabled', 'Disabled', 'Deleted', 'Suspended'
   */
  state?: WorkflowState;
  /**
   * @member {string} [version] Gets the version.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly version?: string;
  /**
   * @member {string} [accessEndpoint] Gets the access endpoint.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly accessEndpoint?: string;
  /**
   * @member {Sku} [sku] The sku.
   */
  sku?: Sku;
  /**
   * @member {ResourceReference} [integrationAccount] The integration account.
   */
  integrationAccount?: ResourceReference;
  /**
   * @member {any} [definition] The definition.
   */
  definition?: any;
  /**
   * @member {{ [propertyName: string]: WorkflowParameter }} [parameters] The
   * parameters.
   */
  parameters?: { [propertyName: string]: WorkflowParameter };
}

/**
 * @interface
 * An interface representing RecurrenceScheduleOccurrence.
 * The recurrence schedule occurrence.
 *
 */
export interface RecurrenceScheduleOccurrence {
  /**
   * @member {DayOfWeek} [day] The day of the week. Possible values include:
   * 'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday',
   * 'Saturday'
   */
  day?: DayOfWeek;
  /**
   * @member {number} [occurrence] The occurrence.
   */
  occurrence?: number;
}

/**
 * @interface
 * An interface representing RecurrenceSchedule.
 * The recurrence schedule.
 *
 */
export interface RecurrenceSchedule {
  /**
   * @member {number[]} [minutes] The minutes.
   */
  minutes?: number[];
  /**
   * @member {number[]} [hours] The hours.
   */
  hours?: number[];
  /**
   * @member {DaysOfWeek[]} [weekDays] The days of the week.
   */
  weekDays?: DaysOfWeek[];
  /**
   * @member {number[]} [monthDays] The month days.
   */
  monthDays?: number[];
  /**
   * @member {RecurrenceScheduleOccurrence[]} [monthlyOccurrences] The monthly
   * occurrences.
   */
  monthlyOccurrences?: RecurrenceScheduleOccurrence[];
}

/**
 * @interface
 * An interface representing WorkflowTriggerRecurrence.
 * The workflow trigger recurrence.
 *
 */
export interface WorkflowTriggerRecurrence {
  /**
   * @member {RecurrenceFrequency} [frequency] The frequency. Possible values
   * include: 'NotSpecified', 'Second', 'Minute', 'Hour', 'Day', 'Week',
   * 'Month', 'Year'
   */
  frequency?: RecurrenceFrequency;
  /**
   * @member {number} [interval] The interval.
   */
  interval?: number;
  /**
   * @member {string} [startTime] The start time.
   */
  startTime?: string;
  /**
   * @member {string} [endTime] The end time.
   */
  endTime?: string;
  /**
   * @member {string} [timeZone] The time zone.
   */
  timeZone?: string;
  /**
   * @member {RecurrenceSchedule} [schedule] The recurrence schedule.
   */
  schedule?: RecurrenceSchedule;
}

/**
 * @interface
 * An interface representing WorkflowTrigger.
 * The workflow trigger.
 *
 * @extends SubResource
 */
export interface WorkflowTrigger extends SubResource {
  /**
   * @member {WorkflowTriggerProvisioningState} [provisioningState] Gets the
   * provisioning state. Possible values include: 'NotSpecified', 'Accepted',
   * 'Running', 'Ready', 'Creating', 'Created', 'Deleting', 'Deleted',
   * 'Canceled', 'Failed', 'Succeeded', 'Moving', 'Updating', 'Registering',
   * 'Registered', 'Unregistering', 'Unregistered', 'Completed'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provisioningState?: WorkflowTriggerProvisioningState;
  /**
   * @member {Date} [createdTime] Gets the created time.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly createdTime?: Date;
  /**
   * @member {Date} [changedTime] Gets the changed time.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly changedTime?: Date;
  /**
   * @member {WorkflowState} [state] Gets the state. Possible values include:
   * 'NotSpecified', 'Completed', 'Enabled', 'Disabled', 'Deleted', 'Suspended'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly state?: WorkflowState;
  /**
   * @member {WorkflowStatus} [status] Gets the status. Possible values
   * include: 'NotSpecified', 'Paused', 'Running', 'Waiting', 'Succeeded',
   * 'Skipped', 'Suspended', 'Cancelled', 'Failed', 'Faulted', 'TimedOut',
   * 'Aborted', 'Ignored'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly status?: WorkflowStatus;
  /**
   * @member {Date} [lastExecutionTime] Gets the last execution time.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly lastExecutionTime?: Date;
  /**
   * @member {Date} [nextExecutionTime] Gets the next execution time.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextExecutionTime?: Date;
  /**
   * @member {WorkflowTriggerRecurrence} [recurrence] Gets the workflow trigger
   * recurrence.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly recurrence?: WorkflowTriggerRecurrence;
  /**
   * @member {ResourceReference} [workflow] Gets the reference to workflow.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly workflow?: ResourceReference;
  /**
   * @member {string} [name] Gets the workflow trigger name.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [type] Gets the workflow trigger type.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: string;
}

/**
 * @interface
 * An interface representing WorkflowTriggerFilter.
 * The workflow trigger filter.
 *
 */
export interface WorkflowTriggerFilter {
  /**
   * @member {WorkflowState} [state] The state of workflow trigger. Possible
   * values include: 'NotSpecified', 'Completed', 'Enabled', 'Disabled',
   * 'Deleted', 'Suspended'
   */
  state?: WorkflowState;
}

/**
 * @interface
 * An interface representing WorkflowTriggerListCallbackUrlQueries.
 * Gets the workflow trigger callback URL query parameters.
 *
 */
export interface WorkflowTriggerListCallbackUrlQueries {
  /**
   * @member {string} [apiVersion] The api version.
   */
  apiVersion?: string;
  /**
   * @member {string} [sp] The SAS permissions.
   */
  sp?: string;
  /**
   * @member {string} [sv] The SAS version.
   */
  sv?: string;
  /**
   * @member {string} [sig] The SAS signature.
   */
  sig?: string;
  /**
   * @member {string} [se] The SAS timestamp.
   */
  se?: string;
}

/**
 * @interface
 * An interface representing WorkflowTriggerCallbackUrl.
 * The workflow trigger callback URL.
 *
 */
export interface WorkflowTriggerCallbackUrl {
  /**
   * @member {string} [value] Gets the workflow trigger callback URL.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly value?: string;
  /**
   * @member {string} [method] Gets the workflow trigger callback URL HTTP
   * method.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly method?: string;
  /**
   * @member {string} [basePath] Gets the workflow trigger callback URL base
   * path.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly basePath?: string;
  /**
   * @member {string} [relativePath] Gets the workflow trigger callback URL
   * relative path.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly relativePath?: string;
  /**
   * @member {string[]} [relativePathParameters] Gets the workflow trigger
   * callback URL relative path parameters.
   */
  relativePathParameters?: string[];
  /**
   * @member {WorkflowTriggerListCallbackUrlQueries} [queries] Gets the
   * workflow trigger callback URL query parameters.
   */
  queries?: WorkflowTriggerListCallbackUrlQueries;
}

/**
 * @interface
 * An interface representing Correlation.
 * The correlation property.
 *
 */
export interface Correlation {
  /**
   * @member {string} [clientTrackingId] The client tracking id.
   */
  clientTrackingId?: string;
}

/**
 * @interface
 * An interface representing ContentHash.
 * The content hash.
 *
 */
export interface ContentHash {
  /**
   * @member {string} [algorithm] The algorithm of the content hash.
   */
  algorithm?: string;
  /**
   * @member {string} [value] The value of the content hash.
   */
  value?: string;
}

/**
 * @interface
 * An interface representing ContentLink.
 * The content link.
 *
 */
export interface ContentLink {
  /**
   * @member {string} [uri] The content link URI.
   */
  uri?: string;
  /**
   * @member {string} [contentVersion] The content version.
   */
  contentVersion?: string;
  /**
   * @member {number} [contentSize] The content size.
   */
  contentSize?: number;
  /**
   * @member {ContentHash} [contentHash] The content hash.
   */
  contentHash?: ContentHash;
  /**
   * @member {any} [metadata] The metadata.
   */
  metadata?: any;
}

/**
 * @interface
 * An interface representing WorkflowTriggerHistory.
 * The workflow trigger history.
 *
 * @extends SubResource
 */
export interface WorkflowTriggerHistory extends SubResource {
  /**
   * @member {Date} [startTime] Gets the start time.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly startTime?: Date;
  /**
   * @member {Date} [endTime] Gets the end time.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly endTime?: Date;
  /**
   * @member {WorkflowStatus} [status] Gets the status. Possible values
   * include: 'NotSpecified', 'Paused', 'Running', 'Waiting', 'Succeeded',
   * 'Skipped', 'Suspended', 'Cancelled', 'Failed', 'Faulted', 'TimedOut',
   * 'Aborted', 'Ignored'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly status?: WorkflowStatus;
  /**
   * @member {string} [code] Gets the code.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly code?: string;
  /**
   * @member {any} [error] Gets the error.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly error?: any;
  /**
   * @member {string} [trackingId] Gets the tracking id.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly trackingId?: string;
  /**
   * @member {Correlation} [correlation] The run correlation.
   */
  correlation?: Correlation;
  /**
   * @member {ContentLink} [inputsLink] Gets the link to input parameters.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly inputsLink?: ContentLink;
  /**
   * @member {ContentLink} [outputsLink] Gets the link to output parameters.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly outputsLink?: ContentLink;
  /**
   * @member {boolean} [fired] Gets a value indicating whether trigger was
   * fired.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly fired?: boolean;
  /**
   * @member {ResourceReference} [run] Gets the reference to workflow run.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly run?: ResourceReference;
  /**
   * @member {string} [name] Gets the workflow trigger history name.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [type] Gets the workflow trigger history type.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: string;
}

/**
 * @interface
 * An interface representing WorkflowTriggerHistoryFilter.
 * The workflow trigger history filter.
 *
 */
export interface WorkflowTriggerHistoryFilter {
  /**
   * @member {WorkflowStatus} [status] The status of workflow trigger history.
   * Possible values include: 'NotSpecified', 'Paused', 'Running', 'Waiting',
   * 'Succeeded', 'Skipped', 'Suspended', 'Cancelled', 'Failed', 'Faulted',
   * 'TimedOut', 'Aborted', 'Ignored'
   */
  status?: WorkflowStatus;
}

/**
 * @interface
 * An interface representing WorkflowRunTrigger.
 * The workflow run trigger.
 *
 */
export interface WorkflowRunTrigger {
  /**
   * @member {string} [name] Gets the name.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {any} [inputs] Gets the inputs.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly inputs?: any;
  /**
   * @member {ContentLink} [inputsLink] Gets the link to inputs.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly inputsLink?: ContentLink;
  /**
   * @member {any} [outputs] Gets the outputs.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly outputs?: any;
  /**
   * @member {ContentLink} [outputsLink] Gets the link to outputs.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly outputsLink?: ContentLink;
  /**
   * @member {Date} [scheduledTime] Gets the scheduled time.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly scheduledTime?: Date;
  /**
   * @member {Date} [startTime] Gets the start time.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly startTime?: Date;
  /**
   * @member {Date} [endTime] Gets the end time.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly endTime?: Date;
  /**
   * @member {string} [trackingId] Gets the tracking id.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly trackingId?: string;
  /**
   * @member {Correlation} [correlation] The run correlation.
   */
  correlation?: Correlation;
  /**
   * @member {string} [code] Gets the code.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly code?: string;
  /**
   * @member {WorkflowStatus} [status] Gets the status. Possible values
   * include: 'NotSpecified', 'Paused', 'Running', 'Waiting', 'Succeeded',
   * 'Skipped', 'Suspended', 'Cancelled', 'Failed', 'Faulted', 'TimedOut',
   * 'Aborted', 'Ignored'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly status?: WorkflowStatus;
  /**
   * @member {any} [error] Gets the error.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly error?: any;
  /**
   * @member {any} [trackedProperties] Gets the tracked properties.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly trackedProperties?: any;
}

/**
 * @interface
 * An interface representing WorkflowOutputParameter.
 * The workflow output parameter.
 *
 * @extends WorkflowParameter
 */
export interface WorkflowOutputParameter extends WorkflowParameter {
  /**
   * @member {any} [error] Gets the error.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly error?: any;
}

/**
 * @interface
 * An interface representing WorkflowRun.
 * The workflow run.
 *
 * @extends SubResource
 */
export interface WorkflowRun extends SubResource {
  /**
   * @member {Date} [waitEndTime] Gets the wait end time.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly waitEndTime?: Date;
  /**
   * @member {Date} [startTime] Gets the start time.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly startTime?: Date;
  /**
   * @member {Date} [endTime] Gets the end time.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly endTime?: Date;
  /**
   * @member {WorkflowStatus} [status] Gets the status. Possible values
   * include: 'NotSpecified', 'Paused', 'Running', 'Waiting', 'Succeeded',
   * 'Skipped', 'Suspended', 'Cancelled', 'Failed', 'Faulted', 'TimedOut',
   * 'Aborted', 'Ignored'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly status?: WorkflowStatus;
  /**
   * @member {string} [code] Gets the code.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly code?: string;
  /**
   * @member {any} [error] Gets the error.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly error?: any;
  /**
   * @member {string} [correlationId] Gets the correlation id.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly correlationId?: string;
  /**
   * @member {Correlation} [correlation] The run correlation.
   */
  correlation?: Correlation;
  /**
   * @member {ResourceReference} [workflow] Gets the reference to workflow
   * version.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly workflow?: ResourceReference;
  /**
   * @member {WorkflowRunTrigger} [trigger] Gets the fired trigger.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly trigger?: WorkflowRunTrigger;
  /**
   * @member {{ [propertyName: string]: WorkflowOutputParameter }} [outputs]
   * Gets the outputs.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly outputs?: { [propertyName: string]: WorkflowOutputParameter };
  /**
   * @member {WorkflowRunTrigger} [response] Gets the response of the flow run.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly response?: WorkflowRunTrigger;
  /**
   * @member {string} [name] Gets the workflow run name.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [type] Gets the workflow run type.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: string;
}

/**
 * @interface
 * An interface representing WorkflowRunFilter.
 * The workflow run filter.
 *
 */
export interface WorkflowRunFilter {
  /**
   * @member {WorkflowStatus} [status] The status of workflow run. Possible
   * values include: 'NotSpecified', 'Paused', 'Running', 'Waiting',
   * 'Succeeded', 'Skipped', 'Suspended', 'Cancelled', 'Failed', 'Faulted',
   * 'TimedOut', 'Aborted', 'Ignored'
   */
  status?: WorkflowStatus;
}

/**
 * @interface
 * An interface representing ErrorProperties.
 * Error properties indicate why the Logic service was not able to process the
 * incoming request. The reason is provided in the error message.
 *
 */
export interface ErrorProperties {
  /**
   * @member {string} [code] Error code.
   */
  code?: string;
  /**
   * @member {string} [message] Error message indicating why the operation
   * failed.
   */
  message?: string;
}

/**
 * @interface
 * An interface representing ErrorResponse.
 * Error response indicates Logic service is not able to process the incoming
 * request. The error property contains the error details.
 *
 */
export interface ErrorResponse {
  /**
   * @member {ErrorProperties} [error] The error properties.
   */
  error?: ErrorProperties;
}

/**
 * @interface
 * An interface representing RetryHistory.
 * The retry history.
 *
 */
export interface RetryHistory {
  /**
   * @member {Date} [startTime] Gets the start time.
   */
  startTime?: Date;
  /**
   * @member {Date} [endTime] Gets the end time.
   */
  endTime?: Date;
  /**
   * @member {string} [code] Gets the status code.
   */
  code?: string;
  /**
   * @member {string} [clientRequestId] Gets the client request Id.
   */
  clientRequestId?: string;
  /**
   * @member {string} [serviceRequestId] Gets the service request Id.
   */
  serviceRequestId?: string;
  /**
   * @member {ErrorResponse} [error] Gets the error response.
   */
  error?: ErrorResponse;
}

/**
 * @interface
 * An interface representing WorkflowRunAction.
 * The workflow run action.
 *
 * @extends SubResource
 */
export interface WorkflowRunAction extends SubResource {
  /**
   * @member {Date} [startTime] Gets the start time.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly startTime?: Date;
  /**
   * @member {Date} [endTime] Gets the end time.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly endTime?: Date;
  /**
   * @member {WorkflowStatus} [status] Gets the status. Possible values
   * include: 'NotSpecified', 'Paused', 'Running', 'Waiting', 'Succeeded',
   * 'Skipped', 'Suspended', 'Cancelled', 'Failed', 'Faulted', 'TimedOut',
   * 'Aborted', 'Ignored'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly status?: WorkflowStatus;
  /**
   * @member {string} [code] Gets the code.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly code?: string;
  /**
   * @member {any} [error] Gets the error.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly error?: any;
  /**
   * @member {string} [trackingId] Gets the tracking id.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly trackingId?: string;
  /**
   * @member {Correlation} [correlation] The correlation properties.
   */
  correlation?: Correlation;
  /**
   * @member {ContentLink} [inputsLink] Gets the link to inputs.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly inputsLink?: ContentLink;
  /**
   * @member {ContentLink} [outputsLink] Gets the link to outputs.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly outputsLink?: ContentLink;
  /**
   * @member {any} [trackedProperties] Gets the tracked properties.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly trackedProperties?: any;
  /**
   * @member {RetryHistory[]} [retryHistory] Gets the retry histories.
   */
  retryHistory?: RetryHistory[];
  /**
   * @member {string} [name] Gets the workflow run action name.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [type] Gets the workflow run action type.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: string;
}

/**
 * @interface
 * An interface representing WorkflowRunActionFilter.
 * The workflow run action filter.
 *
 */
export interface WorkflowRunActionFilter {
  /**
   * @member {WorkflowStatus} [status] The status of workflow run action.
   * Possible values include: 'NotSpecified', 'Paused', 'Running', 'Waiting',
   * 'Succeeded', 'Skipped', 'Suspended', 'Cancelled', 'Failed', 'Faulted',
   * 'TimedOut', 'Aborted', 'Ignored'
   */
  status?: WorkflowStatus;
}

/**
 * @interface
 * An interface representing RegenerateActionParameter.
 * The access key regenerate action content.
 *
 */
export interface RegenerateActionParameter {
  /**
   * @member {KeyType} [keyType] The key type. Possible values include:
   * 'NotSpecified', 'Primary', 'Secondary'
   */
  keyType?: KeyType;
}

/**
 * @interface
 * An interface representing GenerateUpgradedDefinitionParameters.
 * The parameters to generate upgraded definition.
 *
 */
export interface GenerateUpgradedDefinitionParameters {
  /**
   * @member {string} [targetSchemaVersion] The target schema version.
   */
  targetSchemaVersion?: string;
}

/**
 * @interface
 * An interface representing IntegrationAccountSku.
 * The integration account sku.
 *
 */
export interface IntegrationAccountSku {
  /**
   * @member {IntegrationAccountSkuName} name The sku name. Possible values
   * include: 'NotSpecified', 'Free', 'Basic', 'Standard'
   */
  name: IntegrationAccountSkuName;
}

/**
 * @interface
 * An interface representing IntegrationAccount.
 * The integration account.
 *
 * @extends Resource
 */
export interface IntegrationAccount extends Resource {
  /**
   * @member {any} [properties] The integration account properties.
   */
  properties?: any;
  /**
   * @member {IntegrationAccountSku} [sku] The sku.
   */
  sku?: IntegrationAccountSku;
}

/**
 * @interface
 * An interface representing GetCallbackUrlParameters.
 * The callback url parameters.
 *
 */
export interface GetCallbackUrlParameters {
  /**
   * @member {Date} [notAfter] The expiry time.
   */
  notAfter?: Date;
  /**
   * @member {KeyType} [keyType] The key type. Possible values include:
   * 'NotSpecified', 'Primary', 'Secondary'
   */
  keyType?: KeyType;
}

/**
 * @interface
 * An interface representing CallbackUrl.
 * The callback url.
 *
 */
export interface CallbackUrl {
  /**
   * @member {string} [value] The URL value.
   */
  value?: string;
}

/**
 * @interface
 * An interface representing IntegrationAccountSchema.
 * The integration account schema.
 *
 * @extends Resource
 */
export interface IntegrationAccountSchema extends Resource {
  /**
   * @member {SchemaType} schemaType The schema type. Possible values include:
   * 'NotSpecified', 'Xml'
   */
  schemaType: SchemaType;
  /**
   * @member {string} [targetNamespace] The target namespace of the schema.
   */
  targetNamespace?: string;
  /**
   * @member {string} [documentName] The document name.
   */
  documentName?: string;
  /**
   * @member {string} [fileName] The file name.
   */
  fileName?: string;
  /**
   * @member {Date} [createdTime] The created time.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly createdTime?: Date;
  /**
   * @member {Date} [changedTime] The changed time.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly changedTime?: Date;
  /**
   * @member {any} [metadata] The metadata.
   */
  metadata?: any;
  /**
   * @member {string} [content] The content.
   */
  content?: string;
  /**
   * @member {string} [contentType] The content type.
   */
  contentType?: string;
  /**
   * @member {ContentLink} [contentLink] The content link.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly contentLink?: ContentLink;
}

/**
 * @interface
 * An interface representing IntegrationAccountSchemaFilter.
 * The integration account schema filter for odata query.
 *
 */
export interface IntegrationAccountSchemaFilter {
  /**
   * @member {SchemaType} schemaType The schema type of integration account
   * schema. Possible values include: 'NotSpecified', 'Xml'
   */
  schemaType: SchemaType;
}

/**
 * @interface
 * An interface representing IntegrationAccountMapPropertiesParametersSchema.
 * The parameters schema of integration account map.
 *
 */
export interface IntegrationAccountMapPropertiesParametersSchema {
  /**
   * @member {string} [ref] The reference name.
   */
  ref?: string;
}

/**
 * @interface
 * An interface representing IntegrationAccountMap.
 * The integration account map.
 *
 * @extends Resource
 */
export interface IntegrationAccountMap extends Resource {
  /**
   * @member {MapType} mapType The map type. Possible values include:
   * 'NotSpecified', 'Xslt', 'Xslt20', 'Xslt30', 'Liquid'
   */
  mapType: MapType;
  /**
   * @member {IntegrationAccountMapPropertiesParametersSchema}
   * [parametersSchema] The parameters schema of integration account map.
   */
  parametersSchema?: IntegrationAccountMapPropertiesParametersSchema;
  /**
   * @member {Date} [createdTime] The created time.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly createdTime?: Date;
  /**
   * @member {Date} [changedTime] The changed time.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly changedTime?: Date;
  /**
   * @member {string} [content] The content.
   */
  content?: string;
  /**
   * @member {string} [contentType] The content type.
   */
  contentType?: string;
  /**
   * @member {ContentLink} [contentLink] The content link.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly contentLink?: ContentLink;
  /**
   * @member {any} [metadata] The metadata.
   */
  metadata?: any;
}

/**
 * @interface
 * An interface representing IntegrationAccountMapFilter.
 * The integration account map filter for odata query.
 *
 */
export interface IntegrationAccountMapFilter {
  /**
   * @member {MapType} mapType The map type of integration account map.
   * Possible values include: 'NotSpecified', 'Xslt', 'Xslt20', 'Xslt30',
   * 'Liquid'
   */
  mapType: MapType;
}

/**
 * @interface
 * An interface representing BusinessIdentity.
 * The integration account partner's business identity.
 *
 */
export interface BusinessIdentity {
  /**
   * @member {string} qualifier The business identity qualifier e.g.
   * as2identity, ZZ, ZZZ, 31, 32
   */
  qualifier: string;
  /**
   * @member {string} value The user defined business identity value.
   */
  value: string;
}

/**
 * @interface
 * An interface representing B2BPartnerContent.
 * The B2B partner content.
 *
 */
export interface B2BPartnerContent {
  /**
   * @member {BusinessIdentity[]} [businessIdentities] The list of partner
   * business identities.
   */
  businessIdentities?: BusinessIdentity[];
}

/**
 * @interface
 * An interface representing PartnerContent.
 * The integration account partner content.
 *
 */
export interface PartnerContent {
  /**
   * @member {B2BPartnerContent} [b2b] The B2B partner content.
   */
  b2b?: B2BPartnerContent;
}

/**
 * @interface
 * An interface representing IntegrationAccountPartner.
 * The integration account partner.
 *
 * @extends Resource
 */
export interface IntegrationAccountPartner extends Resource {
  /**
   * @member {PartnerType} partnerType The partner type. Possible values
   * include: 'NotSpecified', 'B2B'
   */
  partnerType: PartnerType;
  /**
   * @member {Date} [createdTime] The created time.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly createdTime?: Date;
  /**
   * @member {Date} [changedTime] The changed time.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly changedTime?: Date;
  /**
   * @member {any} [metadata] The metadata.
   */
  metadata?: any;
  /**
   * @member {PartnerContent} content The partner content.
   */
  content: PartnerContent;
}

/**
 * @interface
 * An interface representing IntegrationAccountPartnerFilter.
 * The integration account partner filter for odata query.
 *
 */
export interface IntegrationAccountPartnerFilter {
  /**
   * @member {PartnerType} partnerType The partner type of integration account
   * partner. Possible values include: 'NotSpecified', 'B2B'
   */
  partnerType: PartnerType;
}

/**
 * @interface
 * An interface representing AS2MessageConnectionSettings.
 * The AS2 agreement message connection settings.
 *
 */
export interface AS2MessageConnectionSettings {
  /**
   * @member {boolean} ignoreCertificateNameMismatch The value indicating
   * whether to ignore mismatch in certificate name.
   */
  ignoreCertificateNameMismatch: boolean;
  /**
   * @member {boolean} supportHttpStatusCodeContinue The value indicating
   * whether to support HTTP status code 'CONTINUE'.
   */
  supportHttpStatusCodeContinue: boolean;
  /**
   * @member {boolean} keepHttpConnectionAlive The value indicating whether to
   * keep the connection alive.
   */
  keepHttpConnectionAlive: boolean;
  /**
   * @member {boolean} unfoldHttpHeaders The value indicating whether to unfold
   * the HTTP headers.
   */
  unfoldHttpHeaders: boolean;
}

/**
 * @interface
 * An interface representing AS2AcknowledgementConnectionSettings.
 * The AS2 agreement acknowledgement connection settings.
 *
 */
export interface AS2AcknowledgementConnectionSettings {
  /**
   * @member {boolean} ignoreCertificateNameMismatch The value indicating
   * whether to ignore mismatch in certificate name.
   */
  ignoreCertificateNameMismatch: boolean;
  /**
   * @member {boolean} supportHttpStatusCodeContinue The value indicating
   * whether to support HTTP status code 'CONTINUE'.
   */
  supportHttpStatusCodeContinue: boolean;
  /**
   * @member {boolean} keepHttpConnectionAlive The value indicating whether to
   * keep the connection alive.
   */
  keepHttpConnectionAlive: boolean;
  /**
   * @member {boolean} unfoldHttpHeaders The value indicating whether to unfold
   * the HTTP headers.
   */
  unfoldHttpHeaders: boolean;
}

/**
 * @interface
 * An interface representing AS2MdnSettings.
 * The AS2 agreement mdn settings.
 *
 */
export interface AS2MdnSettings {
  /**
   * @member {boolean} needMdn The value indicating whether to send or request
   * a MDN.
   */
  needMdn: boolean;
  /**
   * @member {boolean} signMdn The value indicating whether the MDN needs to be
   * signed or not.
   */
  signMdn: boolean;
  /**
   * @member {boolean} sendMdnAsynchronously The value indicating whether to
   * send the asynchronous MDN.
   */
  sendMdnAsynchronously: boolean;
  /**
   * @member {string} [receiptDeliveryUrl] The receipt delivery URL.
   */
  receiptDeliveryUrl?: string;
  /**
   * @member {string} [dispositionNotificationTo] The disposition notification
   * to header value.
   */
  dispositionNotificationTo?: string;
  /**
   * @member {boolean} signOutboundMdnIfOptional The value indicating whether
   * to sign the outbound MDN if optional.
   */
  signOutboundMdnIfOptional: boolean;
  /**
   * @member {string} [mdnText] The MDN text.
   */
  mdnText?: string;
  /**
   * @member {boolean} sendInboundMdnToMessageBox The value indicating whether
   * to send inbound MDN to message box.
   */
  sendInboundMdnToMessageBox: boolean;
  /**
   * @member {HashingAlgorithm} micHashingAlgorithm The signing or hashing
   * algorithm. Possible values include: 'NotSpecified', 'None', 'MD5', 'SHA1',
   * 'SHA2256', 'SHA2384', 'SHA2512'
   */
  micHashingAlgorithm: HashingAlgorithm;
}

/**
 * @interface
 * An interface representing AS2SecuritySettings.
 * The AS2 agreement security settings.
 *
 */
export interface AS2SecuritySettings {
  /**
   * @member {boolean} overrideGroupSigningCertificate The value indicating
   * whether to send or request a MDN.
   */
  overrideGroupSigningCertificate: boolean;
  /**
   * @member {string} [signingCertificateName] The name of the signing
   * certificate.
   */
  signingCertificateName?: string;
  /**
   * @member {string} [encryptionCertificateName] The name of the encryption
   * certificate.
   */
  encryptionCertificateName?: string;
  /**
   * @member {boolean} enableNrrForInboundEncodedMessages The value indicating
   * whether to enable NRR for inbound encoded messages.
   */
  enableNrrForInboundEncodedMessages: boolean;
  /**
   * @member {boolean} enableNrrForInboundDecodedMessages The value indicating
   * whether to enable NRR for inbound decoded messages.
   */
  enableNrrForInboundDecodedMessages: boolean;
  /**
   * @member {boolean} enableNrrForOutboundMdn The value indicating whether to
   * enable NRR for outbound MDN.
   */
  enableNrrForOutboundMdn: boolean;
  /**
   * @member {boolean} enableNrrForOutboundEncodedMessages The value indicating
   * whether to enable NRR for outbound encoded messages.
   */
  enableNrrForOutboundEncodedMessages: boolean;
  /**
   * @member {boolean} enableNrrForOutboundDecodedMessages The value indicating
   * whether to enable NRR for outbound decoded messages.
   */
  enableNrrForOutboundDecodedMessages: boolean;
  /**
   * @member {boolean} enableNrrForInboundMdn The value indicating whether to
   * enable NRR for inbound MDN.
   */
  enableNrrForInboundMdn: boolean;
  /**
   * @member {string} [sha2AlgorithmFormat] The Sha2 algorithm format. Valid
   * values are Sha2, ShaHashSize, ShaHyphenHashSize, Sha2UnderscoreHashSize.
   */
  sha2AlgorithmFormat?: string;
}

/**
 * @interface
 * An interface representing AS2ValidationSettings.
 * The AS2 agreement validation settings.
 *
 */
export interface AS2ValidationSettings {
  /**
   * @member {boolean} overrideMessageProperties The value indicating whether
   * to override incoming message properties with those in agreement.
   */
  overrideMessageProperties: boolean;
  /**
   * @member {boolean} encryptMessage The value indicating whether the message
   * has to be encrypted.
   */
  encryptMessage: boolean;
  /**
   * @member {boolean} signMessage The value indicating whether the message has
   * to be signed.
   */
  signMessage: boolean;
  /**
   * @member {boolean} compressMessage The value indicating whether the message
   * has to be compressed.
   */
  compressMessage: boolean;
  /**
   * @member {boolean} checkDuplicateMessage The value indicating whether to
   * check for duplicate message.
   */
  checkDuplicateMessage: boolean;
  /**
   * @member {number} interchangeDuplicatesValidityDays The number of days to
   * look back for duplicate interchange.
   */
  interchangeDuplicatesValidityDays: number;
  /**
   * @member {boolean} checkCertificateRevocationListOnSend The value
   * indicating whether to check for certificate revocation list on send.
   */
  checkCertificateRevocationListOnSend: boolean;
  /**
   * @member {boolean} checkCertificateRevocationListOnReceive The value
   * indicating whether to check for certificate revocation list on receive.
   */
  checkCertificateRevocationListOnReceive: boolean;
  /**
   * @member {EncryptionAlgorithm} encryptionAlgorithm The encryption
   * algorithm. Possible values include: 'NotSpecified', 'None', 'DES3', 'RC2',
   * 'AES128', 'AES192', 'AES256'
   */
  encryptionAlgorithm: EncryptionAlgorithm;
  /**
   * @member {SigningAlgorithm} [signingAlgorithm] The signing algorithm.
   * Possible values include: 'NotSpecified', 'Default', 'SHA1', 'SHA2256',
   * 'SHA2384', 'SHA2512'
   */
  signingAlgorithm?: SigningAlgorithm;
}

/**
 * @interface
 * An interface representing AS2EnvelopeSettings.
 * The AS2 agreement envelope settings.
 *
 */
export interface AS2EnvelopeSettings {
  /**
   * @member {string} messageContentType The message content type.
   */
  messageContentType: string;
  /**
   * @member {boolean} transmitFileNameInMimeHeader The value indicating
   * whether to transmit file name in mime header.
   */
  transmitFileNameInMimeHeader: boolean;
  /**
   * @member {string} fileNameTemplate The template for file name.
   */
  fileNameTemplate: string;
  /**
   * @member {boolean} suspendMessageOnFileNameGenerationError The value
   * indicating whether to suspend message on file name generation error.
   */
  suspendMessageOnFileNameGenerationError: boolean;
  /**
   * @member {boolean} autogenerateFileName The value indicating whether to
   * auto generate file name.
   */
  autogenerateFileName: boolean;
}

/**
 * @interface
 * An interface representing AS2ErrorSettings.
 * The AS2 agreement error settings.
 *
 */
export interface AS2ErrorSettings {
  /**
   * @member {boolean} suspendDuplicateMessage The value indicating whether to
   * suspend duplicate message.
   */
  suspendDuplicateMessage: boolean;
  /**
   * @member {boolean} resendIfMdnNotReceived The value indicating whether to
   * resend message If MDN is not received.
   */
  resendIfMdnNotReceived: boolean;
}

/**
 * @interface
 * An interface representing AS2ProtocolSettings.
 * The AS2 agreement protocol settings.
 *
 */
export interface AS2ProtocolSettings {
  /**
   * @member {AS2MessageConnectionSettings} messageConnectionSettings The
   * message connection settings.
   */
  messageConnectionSettings: AS2MessageConnectionSettings;
  /**
   * @member {AS2AcknowledgementConnectionSettings}
   * acknowledgementConnectionSettings The acknowledgement connection settings.
   */
  acknowledgementConnectionSettings: AS2AcknowledgementConnectionSettings;
  /**
   * @member {AS2MdnSettings} mdnSettings The MDN settings.
   */
  mdnSettings: AS2MdnSettings;
  /**
   * @member {AS2SecuritySettings} securitySettings The security settings.
   */
  securitySettings: AS2SecuritySettings;
  /**
   * @member {AS2ValidationSettings} validationSettings The validation
   * settings.
   */
  validationSettings: AS2ValidationSettings;
  /**
   * @member {AS2EnvelopeSettings} envelopeSettings The envelope settings.
   */
  envelopeSettings: AS2EnvelopeSettings;
  /**
   * @member {AS2ErrorSettings} errorSettings The error settings.
   */
  errorSettings: AS2ErrorSettings;
}

/**
 * @interface
 * An interface representing AS2OneWayAgreement.
 * The integration account AS2 one-way agreement.
 *
 */
export interface AS2OneWayAgreement {
  /**
   * @member {BusinessIdentity} senderBusinessIdentity The sender business
   * identity
   */
  senderBusinessIdentity: BusinessIdentity;
  /**
   * @member {BusinessIdentity} receiverBusinessIdentity The receiver business
   * identity
   */
  receiverBusinessIdentity: BusinessIdentity;
  /**
   * @member {AS2ProtocolSettings} protocolSettings The AS2 protocol settings.
   */
  protocolSettings: AS2ProtocolSettings;
}

/**
 * @interface
 * An interface representing AS2AgreementContent.
 * The integration account AS2 agreement content.
 *
 */
export interface AS2AgreementContent {
  /**
   * @member {AS2OneWayAgreement} receiveAgreement The AS2 one-way receive
   * agreement.
   */
  receiveAgreement: AS2OneWayAgreement;
  /**
   * @member {AS2OneWayAgreement} sendAgreement The AS2 one-way send agreement.
   */
  sendAgreement: AS2OneWayAgreement;
}

/**
 * @interface
 * An interface representing X12ValidationSettings.
 * The X12 agreement validation settings.
 *
 */
export interface X12ValidationSettings {
  /**
   * @member {boolean} validateCharacterSet The value indicating whether to
   * validate character set in the message.
   */
  validateCharacterSet: boolean;
  /**
   * @member {boolean} checkDuplicateInterchangeControlNumber The value
   * indicating whether to check for duplicate interchange control number.
   */
  checkDuplicateInterchangeControlNumber: boolean;
  /**
   * @member {number} interchangeControlNumberValidityDays The validity period
   * of interchange control number.
   */
  interchangeControlNumberValidityDays: number;
  /**
   * @member {boolean} checkDuplicateGroupControlNumber The value indicating
   * whether to check for duplicate group control number.
   */
  checkDuplicateGroupControlNumber: boolean;
  /**
   * @member {boolean} checkDuplicateTransactionSetControlNumber The value
   * indicating whether to check for duplicate transaction set control number.
   */
  checkDuplicateTransactionSetControlNumber: boolean;
  /**
   * @member {boolean} validateEdiTypes The value indicating whether to Whether
   * to validate EDI types.
   */
  validateEdiTypes: boolean;
  /**
   * @member {boolean} validateXsdTypes The value indicating whether to Whether
   * to validate XSD types.
   */
  validateXsdTypes: boolean;
  /**
   * @member {boolean} allowLeadingAndTrailingSpacesAndZeroes The value
   * indicating whether to allow leading and trailing spaces and zeroes.
   */
  allowLeadingAndTrailingSpacesAndZeroes: boolean;
  /**
   * @member {boolean} trimLeadingAndTrailingSpacesAndZeroes The value
   * indicating whether to trim leading and trailing spaces and zeroes.
   */
  trimLeadingAndTrailingSpacesAndZeroes: boolean;
  /**
   * @member {TrailingSeparatorPolicy} trailingSeparatorPolicy The trailing
   * separator policy. Possible values include: 'NotSpecified', 'NotAllowed',
   * 'Optional', 'Mandatory'
   */
  trailingSeparatorPolicy: TrailingSeparatorPolicy;
}

/**
 * @interface
 * An interface representing X12FramingSettings.
 * The X12 agreement framing settings.
 *
 */
export interface X12FramingSettings {
  /**
   * @member {number} dataElementSeparator The data element separator.
   */
  dataElementSeparator: number;
  /**
   * @member {number} componentSeparator The component separator.
   */
  componentSeparator: number;
  /**
   * @member {boolean} replaceSeparatorsInPayload The value indicating whether
   * to replace separators in payload.
   */
  replaceSeparatorsInPayload: boolean;
  /**
   * @member {number} replaceCharacter The replacement character.
   */
  replaceCharacter: number;
  /**
   * @member {number} segmentTerminator The segment terminator.
   */
  segmentTerminator: number;
  /**
   * @member {X12CharacterSet} characterSet The X12 character set. Possible
   * values include: 'NotSpecified', 'Basic', 'Extended', 'UTF8'
   */
  characterSet: X12CharacterSet;
  /**
   * @member {SegmentTerminatorSuffix} segmentTerminatorSuffix The segment
   * terminator suffix. Possible values include: 'NotSpecified', 'None', 'CR',
   * 'LF', 'CRLF'
   */
  segmentTerminatorSuffix: SegmentTerminatorSuffix;
}

/**
 * @interface
 * An interface representing X12EnvelopeSettings.
 * The X12 agreement envelope settings.
 *
 */
export interface X12EnvelopeSettings {
  /**
   * @member {number} controlStandardsId The controls standards id.
   */
  controlStandardsId: number;
  /**
   * @member {boolean} useControlStandardsIdAsRepetitionCharacter The value
   * indicating whether to use control standards id as repetition character.
   */
  useControlStandardsIdAsRepetitionCharacter: boolean;
  /**
   * @member {string} senderApplicationId The sender application id.
   */
  senderApplicationId: string;
  /**
   * @member {string} receiverApplicationId The receiver application id.
   */
  receiverApplicationId: string;
  /**
   * @member {string} controlVersionNumber The control version number.
   */
  controlVersionNumber: string;
  /**
   * @member {number} interchangeControlNumberLowerBound The interchange
   * control number lower bound.
   */
  interchangeControlNumberLowerBound: number;
  /**
   * @member {number} interchangeControlNumberUpperBound The interchange
   * control number upper bound.
   */
  interchangeControlNumberUpperBound: number;
  /**
   * @member {boolean} rolloverInterchangeControlNumber The value indicating
   * whether to rollover interchange control number.
   */
  rolloverInterchangeControlNumber: boolean;
  /**
   * @member {boolean} enableDefaultGroupHeaders The value indicating whether
   * to enable default group headers.
   */
  enableDefaultGroupHeaders: boolean;
  /**
   * @member {string} [functionalGroupId] The functional group id.
   */
  functionalGroupId?: string;
  /**
   * @member {number} groupControlNumberLowerBound The group control number
   * lower bound.
   */
  groupControlNumberLowerBound: number;
  /**
   * @member {number} groupControlNumberUpperBound The group control number
   * upper bound.
   */
  groupControlNumberUpperBound: number;
  /**
   * @member {boolean} rolloverGroupControlNumber The value indicating whether
   * to rollover group control number.
   */
  rolloverGroupControlNumber: boolean;
  /**
   * @member {string} groupHeaderAgencyCode The group header agency code.
   */
  groupHeaderAgencyCode: string;
  /**
   * @member {string} groupHeaderVersion The group header version.
   */
  groupHeaderVersion: string;
  /**
   * @member {number} transactionSetControlNumberLowerBound The transaction set
   * control number lower bound.
   */
  transactionSetControlNumberLowerBound: number;
  /**
   * @member {number} transactionSetControlNumberUpperBound The transaction set
   * control number upper bound.
   */
  transactionSetControlNumberUpperBound: number;
  /**
   * @member {boolean} rolloverTransactionSetControlNumber The value indicating
   * whether to rollover transaction set control number.
   */
  rolloverTransactionSetControlNumber: boolean;
  /**
   * @member {string} [transactionSetControlNumberPrefix] The transaction set
   * control number prefix.
   */
  transactionSetControlNumberPrefix?: string;
  /**
   * @member {string} [transactionSetControlNumberSuffix] The transaction set
   * control number suffix.
   */
  transactionSetControlNumberSuffix?: string;
  /**
   * @member {boolean} overwriteExistingTransactionSetControlNumber The value
   * indicating whether to overwrite existing transaction set control number.
   */
  overwriteExistingTransactionSetControlNumber: boolean;
  /**
   * @member {X12DateFormat} groupHeaderDateFormat The group header date
   * format. Possible values include: 'NotSpecified', 'CCYYMMDD', 'YYMMDD'
   */
  groupHeaderDateFormat: X12DateFormat;
  /**
   * @member {X12TimeFormat} groupHeaderTimeFormat The group header time
   * format. Possible values include: 'NotSpecified', 'HHMM', 'HHMMSS',
   * 'HHMMSSdd', 'HHMMSSd'
   */
  groupHeaderTimeFormat: X12TimeFormat;
  /**
   * @member {UsageIndicator} usageIndicator The usage indicator. Possible
   * values include: 'NotSpecified', 'Test', 'Information', 'Production'
   */
  usageIndicator: UsageIndicator;
}

/**
 * @interface
 * An interface representing X12AcknowledgementSettings.
 * The X12 agreement acknowledgement settings.
 *
 */
export interface X12AcknowledgementSettings {
  /**
   * @member {boolean} needTechnicalAcknowledgement The value indicating
   * whether technical acknowledgement is needed.
   */
  needTechnicalAcknowledgement: boolean;
  /**
   * @member {boolean} batchTechnicalAcknowledgements The value indicating
   * whether to batch the technical acknowledgements.
   */
  batchTechnicalAcknowledgements: boolean;
  /**
   * @member {boolean} needFunctionalAcknowledgement The value indicating
   * whether functional acknowledgement is needed.
   */
  needFunctionalAcknowledgement: boolean;
  /**
   * @member {string} [functionalAcknowledgementVersion] The functional
   * acknowledgement version.
   */
  functionalAcknowledgementVersion?: string;
  /**
   * @member {boolean} batchFunctionalAcknowledgements The value indicating
   * whether to batch functional acknowledgements.
   */
  batchFunctionalAcknowledgements: boolean;
  /**
   * @member {boolean} needImplementationAcknowledgement The value indicating
   * whether implementation acknowledgement is needed.
   */
  needImplementationAcknowledgement: boolean;
  /**
   * @member {string} [implementationAcknowledgementVersion] The implementation
   * acknowledgement version.
   */
  implementationAcknowledgementVersion?: string;
  /**
   * @member {boolean} batchImplementationAcknowledgements The value indicating
   * whether to batch implementation acknowledgements.
   */
  batchImplementationAcknowledgements: boolean;
  /**
   * @member {boolean} needLoopForValidMessages The value indicating whether a
   * loop is needed for valid messages.
   */
  needLoopForValidMessages: boolean;
  /**
   * @member {boolean} sendSynchronousAcknowledgement The value indicating
   * whether to send synchronous acknowledgement.
   */
  sendSynchronousAcknowledgement: boolean;
  /**
   * @member {string} [acknowledgementControlNumberPrefix] The acknowledgement
   * control number prefix.
   */
  acknowledgementControlNumberPrefix?: string;
  /**
   * @member {string} [acknowledgementControlNumberSuffix] The acknowledgement
   * control number suffix.
   */
  acknowledgementControlNumberSuffix?: string;
  /**
   * @member {number} acknowledgementControlNumberLowerBound The
   * acknowledgement control number lower bound.
   */
  acknowledgementControlNumberLowerBound: number;
  /**
   * @member {number} acknowledgementControlNumberUpperBound The
   * acknowledgement control number upper bound.
   */
  acknowledgementControlNumberUpperBound: number;
  /**
   * @member {boolean} rolloverAcknowledgementControlNumber The value
   * indicating whether to rollover acknowledgement control number.
   */
  rolloverAcknowledgementControlNumber: boolean;
}

/**
 * @interface
 * An interface representing X12MessageFilter.
 * The X12 message filter for odata query.
 *
 */
export interface X12MessageFilter {
  /**
   * @member {MessageFilterType} messageFilterType The message filter type.
   * Possible values include: 'NotSpecified', 'Include', 'Exclude'
   */
  messageFilterType: MessageFilterType;
}

/**
 * @interface
 * An interface representing X12SecuritySettings.
 * The X12 agreement security settings.
 *
 */
export interface X12SecuritySettings {
  /**
   * @member {string} authorizationQualifier The authorization qualifier.
   */
  authorizationQualifier: string;
  /**
   * @member {string} [authorizationValue] The authorization value.
   */
  authorizationValue?: string;
  /**
   * @member {string} securityQualifier The security qualifier.
   */
  securityQualifier: string;
  /**
   * @member {string} [passwordValue] The password value.
   */
  passwordValue?: string;
}

/**
 * @interface
 * An interface representing X12ProcessingSettings.
 * The X12 processing settings.
 *
 */
export interface X12ProcessingSettings {
  /**
   * @member {boolean} maskSecurityInfo The value indicating whether to mask
   * security information.
   */
  maskSecurityInfo: boolean;
  /**
   * @member {boolean} convertImpliedDecimal The value indicating whether to
   * convert numerical type to implied decimal.
   */
  convertImpliedDecimal: boolean;
  /**
   * @member {boolean} preserveInterchange The value indicating whether to
   * preserve interchange.
   */
  preserveInterchange: boolean;
  /**
   * @member {boolean} suspendInterchangeOnError The value indicating whether
   * to suspend interchange on error.
   */
  suspendInterchangeOnError: boolean;
  /**
   * @member {boolean} createEmptyXmlTagsForTrailingSeparators The value
   * indicating whether to create empty xml tags for trailing separators.
   */
  createEmptyXmlTagsForTrailingSeparators: boolean;
  /**
   * @member {boolean} useDotAsDecimalSeparator The value indicating whether to
   * use dot as decimal separator.
   */
  useDotAsDecimalSeparator: boolean;
}

/**
 * @interface
 * An interface representing X12EnvelopeOverride.
 * The X12 envelope override settings.
 *
 */
export interface X12EnvelopeOverride {
  /**
   * @member {string} targetNamespace The target namespace on which this
   * envelope settings has to be applied.
   */
  targetNamespace: string;
  /**
   * @member {string} protocolVersion The protocol version on which this
   * envelope settings has to be applied.
   */
  protocolVersion: string;
  /**
   * @member {string} messageId The message id on which this envelope settings
   * has to be applied.
   */
  messageId: string;
  /**
   * @member {string} responsibleAgencyCode The responsible agency code.
   */
  responsibleAgencyCode: string;
  /**
   * @member {string} headerVersion The header version.
   */
  headerVersion: string;
  /**
   * @member {string} senderApplicationId The sender application id.
   */
  senderApplicationId: string;
  /**
   * @member {string} receiverApplicationId The receiver application id.
   */
  receiverApplicationId: string;
  /**
   * @member {string} [functionalIdentifierCode] The functional identifier
   * code.
   */
  functionalIdentifierCode?: string;
  /**
   * @member {X12DateFormat} dateFormat The date format. Possible values
   * include: 'NotSpecified', 'CCYYMMDD', 'YYMMDD'
   */
  dateFormat: X12DateFormat;
  /**
   * @member {X12TimeFormat} timeFormat The time format. Possible values
   * include: 'NotSpecified', 'HHMM', 'HHMMSS', 'HHMMSSdd', 'HHMMSSd'
   */
  timeFormat: X12TimeFormat;
}

/**
 * @interface
 * An interface representing X12ValidationOverride.
 * The X12 validation override settings.
 *
 */
export interface X12ValidationOverride {
  /**
   * @member {string} messageId The message id on which the validation settings
   * has to be applied.
   */
  messageId: string;
  /**
   * @member {boolean} validateEdiTypes The value indicating whether to
   * validate EDI types.
   */
  validateEdiTypes: boolean;
  /**
   * @member {boolean} validateXsdTypes The value indicating whether to
   * validate XSD types.
   */
  validateXsdTypes: boolean;
  /**
   * @member {boolean} allowLeadingAndTrailingSpacesAndZeroes The value
   * indicating whether to allow leading and trailing spaces and zeroes.
   */
  allowLeadingAndTrailingSpacesAndZeroes: boolean;
  /**
   * @member {boolean} validateCharacterSet The value indicating whether to
   * validate character Set.
   */
  validateCharacterSet: boolean;
  /**
   * @member {boolean} trimLeadingAndTrailingSpacesAndZeroes The value
   * indicating whether to trim leading and trailing spaces and zeroes.
   */
  trimLeadingAndTrailingSpacesAndZeroes: boolean;
  /**
   * @member {TrailingSeparatorPolicy} trailingSeparatorPolicy The trailing
   * separator policy. Possible values include: 'NotSpecified', 'NotAllowed',
   * 'Optional', 'Mandatory'
   */
  trailingSeparatorPolicy: TrailingSeparatorPolicy;
}

/**
 * @interface
 * An interface representing X12MessageIdentifier.
 * The X12 message identifier.
 *
 */
export interface X12MessageIdentifier {
  /**
   * @member {string} messageId The message id.
   */
  messageId: string;
}

/**
 * @interface
 * An interface representing X12SchemaReference.
 * The X12 schema reference.
 *
 */
export interface X12SchemaReference {
  /**
   * @member {string} messageId The message id.
   */
  messageId: string;
  /**
   * @member {string} [senderApplicationId] The sender application id.
   */
  senderApplicationId?: string;
  /**
   * @member {string} schemaVersion The schema version.
   */
  schemaVersion: string;
  /**
   * @member {string} schemaName The schema name.
   */
  schemaName: string;
}

/**
 * @interface
 * An interface representing X12DelimiterOverrides.
 * The X12 delimiter override settings.
 *
 */
export interface X12DelimiterOverrides {
  /**
   * @member {string} [protocolVersion] The protocol version.
   */
  protocolVersion?: string;
  /**
   * @member {string} [messageId] The message id.
   */
  messageId?: string;
  /**
   * @member {number} dataElementSeparator The data element separator.
   */
  dataElementSeparator: number;
  /**
   * @member {number} componentSeparator The component separator.
   */
  componentSeparator: number;
  /**
   * @member {number} segmentTerminator The segment terminator.
   */
  segmentTerminator: number;
  /**
   * @member {SegmentTerminatorSuffix} segmentTerminatorSuffix The segment
   * terminator suffix. Possible values include: 'NotSpecified', 'None', 'CR',
   * 'LF', 'CRLF'
   */
  segmentTerminatorSuffix: SegmentTerminatorSuffix;
  /**
   * @member {number} replaceCharacter The replacement character.
   */
  replaceCharacter: number;
  /**
   * @member {boolean} replaceSeparatorsInPayload The value indicating whether
   * to replace separators in payload.
   */
  replaceSeparatorsInPayload: boolean;
  /**
   * @member {string} [targetNamespace] The target namespace on which this
   * delimiter settings has to be applied.
   */
  targetNamespace?: string;
}

/**
 * @interface
 * An interface representing X12ProtocolSettings.
 * The X12 agreement protocol settings.
 *
 */
export interface X12ProtocolSettings {
  /**
   * @member {X12ValidationSettings} validationSettings The X12 validation
   * settings.
   */
  validationSettings: X12ValidationSettings;
  /**
   * @member {X12FramingSettings} framingSettings The X12 framing settings.
   */
  framingSettings: X12FramingSettings;
  /**
   * @member {X12EnvelopeSettings} envelopeSettings The X12 envelope settings.
   */
  envelopeSettings: X12EnvelopeSettings;
  /**
   * @member {X12AcknowledgementSettings} acknowledgementSettings The X12
   * acknowledgment settings.
   */
  acknowledgementSettings: X12AcknowledgementSettings;
  /**
   * @member {X12MessageFilter} messageFilter The X12 message filter.
   */
  messageFilter: X12MessageFilter;
  /**
   * @member {X12SecuritySettings} securitySettings The X12 security settings.
   */
  securitySettings: X12SecuritySettings;
  /**
   * @member {X12ProcessingSettings} processingSettings The X12 processing
   * settings.
   */
  processingSettings: X12ProcessingSettings;
  /**
   * @member {X12EnvelopeOverride[]} [envelopeOverrides] The X12 envelope
   * override settings.
   */
  envelopeOverrides?: X12EnvelopeOverride[];
  /**
   * @member {X12ValidationOverride[]} [validationOverrides] The X12 validation
   * override settings.
   */
  validationOverrides?: X12ValidationOverride[];
  /**
   * @member {X12MessageIdentifier[]} [messageFilterList] The X12 message
   * filter list.
   */
  messageFilterList?: X12MessageIdentifier[];
  /**
   * @member {X12SchemaReference[]} schemaReferences The X12 schema references.
   */
  schemaReferences: X12SchemaReference[];
  /**
   * @member {X12DelimiterOverrides[]} [x12DelimiterOverrides] The X12
   * delimiter override settings.
   */
  x12DelimiterOverrides?: X12DelimiterOverrides[];
}

/**
 * @interface
 * An interface representing X12OneWayAgreement.
 * The X12 one-way agreement.
 *
 */
export interface X12OneWayAgreement {
  /**
   * @member {BusinessIdentity} senderBusinessIdentity The sender business
   * identity
   */
  senderBusinessIdentity: BusinessIdentity;
  /**
   * @member {BusinessIdentity} receiverBusinessIdentity The receiver business
   * identity
   */
  receiverBusinessIdentity: BusinessIdentity;
  /**
   * @member {X12ProtocolSettings} protocolSettings The X12 protocol settings.
   */
  protocolSettings: X12ProtocolSettings;
}

/**
 * @interface
 * An interface representing X12AgreementContent.
 * The X12 agreement content.
 *
 */
export interface X12AgreementContent {
  /**
   * @member {X12OneWayAgreement} receiveAgreement The X12 one-way receive
   * agreement.
   */
  receiveAgreement: X12OneWayAgreement;
  /**
   * @member {X12OneWayAgreement} sendAgreement The X12 one-way send agreement.
   */
  sendAgreement: X12OneWayAgreement;
}

/**
 * @interface
 * An interface representing EdifactValidationSettings.
 * The Edifact agreement validation settings.
 *
 */
export interface EdifactValidationSettings {
  /**
   * @member {boolean} validateCharacterSet The value indicating whether to
   * validate character set in the message.
   */
  validateCharacterSet: boolean;
  /**
   * @member {boolean} checkDuplicateInterchangeControlNumber The value
   * indicating whether to check for duplicate interchange control number.
   */
  checkDuplicateInterchangeControlNumber: boolean;
  /**
   * @member {number} interchangeControlNumberValidityDays The validity period
   * of interchange control number.
   */
  interchangeControlNumberValidityDays: number;
  /**
   * @member {boolean} checkDuplicateGroupControlNumber The value indicating
   * whether to check for duplicate group control number.
   */
  checkDuplicateGroupControlNumber: boolean;
  /**
   * @member {boolean} checkDuplicateTransactionSetControlNumber The value
   * indicating whether to check for duplicate transaction set control number.
   */
  checkDuplicateTransactionSetControlNumber: boolean;
  /**
   * @member {boolean} validateEdiTypes The value indicating whether to Whether
   * to validate EDI types.
   */
  validateEdiTypes: boolean;
  /**
   * @member {boolean} validateXsdTypes The value indicating whether to Whether
   * to validate XSD types.
   */
  validateXsdTypes: boolean;
  /**
   * @member {boolean} allowLeadingAndTrailingSpacesAndZeroes The value
   * indicating whether to allow leading and trailing spaces and zeroes.
   */
  allowLeadingAndTrailingSpacesAndZeroes: boolean;
  /**
   * @member {boolean} trimLeadingAndTrailingSpacesAndZeroes The value
   * indicating whether to trim leading and trailing spaces and zeroes.
   */
  trimLeadingAndTrailingSpacesAndZeroes: boolean;
  /**
   * @member {TrailingSeparatorPolicy} trailingSeparatorPolicy The trailing
   * separator policy. Possible values include: 'NotSpecified', 'NotAllowed',
   * 'Optional', 'Mandatory'
   */
  trailingSeparatorPolicy: TrailingSeparatorPolicy;
}

/**
 * @interface
 * An interface representing EdifactFramingSettings.
 * The Edifact agreement framing settings.
 *
 */
export interface EdifactFramingSettings {
  /**
   * @member {string} [serviceCodeListDirectoryVersion] The service code list
   * directory version.
   */
  serviceCodeListDirectoryVersion?: string;
  /**
   * @member {string} [characterEncoding] The character encoding.
   */
  characterEncoding?: string;
  /**
   * @member {number} protocolVersion The protocol version.
   */
  protocolVersion: number;
  /**
   * @member {number} dataElementSeparator The data element separator.
   */
  dataElementSeparator: number;
  /**
   * @member {number} componentSeparator The component separator.
   */
  componentSeparator: number;
  /**
   * @member {number} segmentTerminator The segment terminator.
   */
  segmentTerminator: number;
  /**
   * @member {number} releaseIndicator The release indicator.
   */
  releaseIndicator: number;
  /**
   * @member {number} repetitionSeparator The repetition separator.
   */
  repetitionSeparator: number;
  /**
   * @member {EdifactCharacterSet} characterSet The EDIFACT frame setting
   * characterSet. Possible values include: 'NotSpecified', 'UNOB', 'UNOA',
   * 'UNOC', 'UNOD', 'UNOE', 'UNOF', 'UNOG', 'UNOH', 'UNOI', 'UNOJ', 'UNOK',
   * 'UNOX', 'UNOY', 'KECA'
   */
  characterSet: EdifactCharacterSet;
  /**
   * @member {EdifactDecimalIndicator} decimalPointIndicator The EDIFACT frame
   * setting decimal indicator. Possible values include: 'NotSpecified',
   * 'Comma', 'Decimal'
   */
  decimalPointIndicator: EdifactDecimalIndicator;
  /**
   * @member {SegmentTerminatorSuffix} segmentTerminatorSuffix The EDIFACT
   * frame setting segment terminator suffix. Possible values include:
   * 'NotSpecified', 'None', 'CR', 'LF', 'CRLF'
   */
  segmentTerminatorSuffix: SegmentTerminatorSuffix;
}

/**
 * @interface
 * An interface representing EdifactEnvelopeSettings.
 * The Edifact agreement envelope settings.
 *
 */
export interface EdifactEnvelopeSettings {
  /**
   * @member {string} [groupAssociationAssignedCode] The group association
   * assigned code.
   */
  groupAssociationAssignedCode?: string;
  /**
   * @member {string} [communicationAgreementId] The communication agreement
   * id.
   */
  communicationAgreementId?: string;
  /**
   * @member {boolean} applyDelimiterStringAdvice The value indicating whether
   * to apply delimiter string advice.
   */
  applyDelimiterStringAdvice: boolean;
  /**
   * @member {boolean} createGroupingSegments The value indicating whether to
   * create grouping segments.
   */
  createGroupingSegments: boolean;
  /**
   * @member {boolean} enableDefaultGroupHeaders The value indicating whether
   * to enable default group headers.
   */
  enableDefaultGroupHeaders: boolean;
  /**
   * @member {string} [recipientReferencePasswordValue] The recipient reference
   * password value.
   */
  recipientReferencePasswordValue?: string;
  /**
   * @member {string} [recipientReferencePasswordQualifier] The recipient
   * reference password qualifier.
   */
  recipientReferencePasswordQualifier?: string;
  /**
   * @member {string} [applicationReferenceId] The application reference id.
   */
  applicationReferenceId?: string;
  /**
   * @member {string} [processingPriorityCode] The processing priority code.
   */
  processingPriorityCode?: string;
  /**
   * @member {number} interchangeControlNumberLowerBound The interchange
   * control number lower bound.
   */
  interchangeControlNumberLowerBound: number;
  /**
   * @member {number} interchangeControlNumberUpperBound The interchange
   * control number upper bound.
   */
  interchangeControlNumberUpperBound: number;
  /**
   * @member {boolean} rolloverInterchangeControlNumber The value indicating
   * whether to rollover interchange control number.
   */
  rolloverInterchangeControlNumber: boolean;
  /**
   * @member {string} [interchangeControlNumberPrefix] The interchange control
   * number prefix.
   */
  interchangeControlNumberPrefix?: string;
  /**
   * @member {string} [interchangeControlNumberSuffix] The interchange control
   * number suffix.
   */
  interchangeControlNumberSuffix?: string;
  /**
   * @member {string} [senderReverseRoutingAddress] The sender reverse routing
   * address.
   */
  senderReverseRoutingAddress?: string;
  /**
   * @member {string} [receiverReverseRoutingAddress] The receiver reverse
   * routing address.
   */
  receiverReverseRoutingAddress?: string;
  /**
   * @member {string} [functionalGroupId] The functional group id.
   */
  functionalGroupId?: string;
  /**
   * @member {string} [groupControllingAgencyCode] The group controlling agency
   * code.
   */
  groupControllingAgencyCode?: string;
  /**
   * @member {string} [groupMessageVersion] The group message version.
   */
  groupMessageVersion?: string;
  /**
   * @member {string} [groupMessageRelease] The group message release.
   */
  groupMessageRelease?: string;
  /**
   * @member {number} groupControlNumberLowerBound The group control number
   * lower bound.
   */
  groupControlNumberLowerBound: number;
  /**
   * @member {number} groupControlNumberUpperBound The group control number
   * upper bound.
   */
  groupControlNumberUpperBound: number;
  /**
   * @member {boolean} rolloverGroupControlNumber The value indicating whether
   * to rollover group control number.
   */
  rolloverGroupControlNumber: boolean;
  /**
   * @member {string} [groupControlNumberPrefix] The group control number
   * prefix.
   */
  groupControlNumberPrefix?: string;
  /**
   * @member {string} [groupControlNumberSuffix] The group control number
   * suffix.
   */
  groupControlNumberSuffix?: string;
  /**
   * @member {string} [groupApplicationReceiverQualifier] The group application
   * receiver qualifier.
   */
  groupApplicationReceiverQualifier?: string;
  /**
   * @member {string} [groupApplicationReceiverId] The group application
   * receiver id.
   */
  groupApplicationReceiverId?: string;
  /**
   * @member {string} [groupApplicationSenderQualifier] The group application
   * sender qualifier.
   */
  groupApplicationSenderQualifier?: string;
  /**
   * @member {string} [groupApplicationSenderId] The group application sender
   * id.
   */
  groupApplicationSenderId?: string;
  /**
   * @member {string} [groupApplicationPassword] The group application
   * password.
   */
  groupApplicationPassword?: string;
  /**
   * @member {boolean} overwriteExistingTransactionSetControlNumber The value
   * indicating whether to overwrite existing transaction set control number.
   */
  overwriteExistingTransactionSetControlNumber: boolean;
  /**
   * @member {string} [transactionSetControlNumberPrefix] The transaction set
   * control number prefix.
   */
  transactionSetControlNumberPrefix?: string;
  /**
   * @member {string} [transactionSetControlNumberSuffix] The transaction set
   * control number suffix.
   */
  transactionSetControlNumberSuffix?: string;
  /**
   * @member {number} transactionSetControlNumberLowerBound The transaction set
   * control number lower bound.
   */
  transactionSetControlNumberLowerBound: number;
  /**
   * @member {number} transactionSetControlNumberUpperBound The transaction set
   * control number upper bound.
   */
  transactionSetControlNumberUpperBound: number;
  /**
   * @member {boolean} rolloverTransactionSetControlNumber The value indicating
   * whether to rollover transaction set control number.
   */
  rolloverTransactionSetControlNumber: boolean;
  /**
   * @member {boolean} isTestInterchange The value indicating whether the
   * message is a test interchange.
   */
  isTestInterchange: boolean;
  /**
   * @member {string} [senderInternalIdentification] The sender internal
   * identification.
   */
  senderInternalIdentification?: string;
  /**
   * @member {string} [senderInternalSubIdentification] The sender internal sub
   * identification.
   */
  senderInternalSubIdentification?: string;
  /**
   * @member {string} [receiverInternalIdentification] The receiver internal
   * identification.
   */
  receiverInternalIdentification?: string;
  /**
   * @member {string} [receiverInternalSubIdentification] The receiver internal
   * sub identification.
   */
  receiverInternalSubIdentification?: string;
}

/**
 * @interface
 * An interface representing EdifactAcknowledgementSettings.
 * The Edifact agreement acknowledgement settings.
 *
 */
export interface EdifactAcknowledgementSettings {
  /**
   * @member {boolean} needTechnicalAcknowledgement The value indicating
   * whether technical acknowledgement is needed.
   */
  needTechnicalAcknowledgement: boolean;
  /**
   * @member {boolean} batchTechnicalAcknowledgements The value indicating
   * whether to batch the technical acknowledgements.
   */
  batchTechnicalAcknowledgements: boolean;
  /**
   * @member {boolean} needFunctionalAcknowledgement The value indicating
   * whether functional acknowledgement is needed.
   */
  needFunctionalAcknowledgement: boolean;
  /**
   * @member {boolean} batchFunctionalAcknowledgements The value indicating
   * whether to batch functional acknowledgements.
   */
  batchFunctionalAcknowledgements: boolean;
  /**
   * @member {boolean} needLoopForValidMessages The value indicating whether a
   * loop is needed for valid messages.
   */
  needLoopForValidMessages: boolean;
  /**
   * @member {boolean} sendSynchronousAcknowledgement The value indicating
   * whether to send synchronous acknowledgement.
   */
  sendSynchronousAcknowledgement: boolean;
  /**
   * @member {string} [acknowledgementControlNumberPrefix] The acknowledgement
   * control number prefix.
   */
  acknowledgementControlNumberPrefix?: string;
  /**
   * @member {string} [acknowledgementControlNumberSuffix] The acknowledgement
   * control number suffix.
   */
  acknowledgementControlNumberSuffix?: string;
  /**
   * @member {number} acknowledgementControlNumberLowerBound The
   * acknowledgement control number lower bound.
   */
  acknowledgementControlNumberLowerBound: number;
  /**
   * @member {number} acknowledgementControlNumberUpperBound The
   * acknowledgement control number upper bound.
   */
  acknowledgementControlNumberUpperBound: number;
  /**
   * @member {boolean} rolloverAcknowledgementControlNumber The value
   * indicating whether to rollover acknowledgement control number.
   */
  rolloverAcknowledgementControlNumber: boolean;
}

/**
 * @interface
 * An interface representing EdifactMessageFilter.
 * The Edifact message filter for odata query.
 *
 */
export interface EdifactMessageFilter {
  /**
   * @member {MessageFilterType} messageFilterType The message filter type.
   * Possible values include: 'NotSpecified', 'Include', 'Exclude'
   */
  messageFilterType: MessageFilterType;
}

/**
 * @interface
 * An interface representing EdifactProcessingSettings.
 * The Edifact agreement protocol settings.
 *
 */
export interface EdifactProcessingSettings {
  /**
   * @member {boolean} maskSecurityInfo The value indicating whether to mask
   * security information.
   */
  maskSecurityInfo: boolean;
  /**
   * @member {boolean} preserveInterchange The value indicating whether to
   * preserve interchange.
   */
  preserveInterchange: boolean;
  /**
   * @member {boolean} suspendInterchangeOnError The value indicating whether
   * to suspend interchange on error.
   */
  suspendInterchangeOnError: boolean;
  /**
   * @member {boolean} createEmptyXmlTagsForTrailingSeparators The value
   * indicating whether to create empty xml tags for trailing separators.
   */
  createEmptyXmlTagsForTrailingSeparators: boolean;
  /**
   * @member {boolean} useDotAsDecimalSeparator The value indicating whether to
   * use dot as decimal separator.
   */
  useDotAsDecimalSeparator: boolean;
}

/**
 * @interface
 * An interface representing EdifactEnvelopeOverride.
 * The Edifact envelope override settings.
 *
 */
export interface EdifactEnvelopeOverride {
  /**
   * @member {string} [messageId] The message id on which this envelope
   * settings has to be applied.
   */
  messageId?: string;
  /**
   * @member {string} [messageVersion] The message version on which this
   * envelope settings has to be applied.
   */
  messageVersion?: string;
  /**
   * @member {string} [messageRelease] The message release version on which
   * this envelope settings has to be applied.
   */
  messageRelease?: string;
  /**
   * @member {string} [messageAssociationAssignedCode] The message association
   * assigned code.
   */
  messageAssociationAssignedCode?: string;
  /**
   * @member {string} [targetNamespace] The target namespace on which this
   * envelope settings has to be applied.
   */
  targetNamespace?: string;
  /**
   * @member {string} [functionalGroupId] The functional group id.
   */
  functionalGroupId?: string;
  /**
   * @member {string} [senderApplicationQualifier] The sender application
   * qualifier.
   */
  senderApplicationQualifier?: string;
  /**
   * @member {string} [senderApplicationId] The sender application id.
   */
  senderApplicationId?: string;
  /**
   * @member {string} [receiverApplicationQualifier] The receiver application
   * qualifier.
   */
  receiverApplicationQualifier?: string;
  /**
   * @member {string} [receiverApplicationId] The receiver application id.
   */
  receiverApplicationId?: string;
  /**
   * @member {string} [controllingAgencyCode] The controlling agency code.
   */
  controllingAgencyCode?: string;
  /**
   * @member {string} [groupHeaderMessageVersion] The group header message
   * version.
   */
  groupHeaderMessageVersion?: string;
  /**
   * @member {string} [groupHeaderMessageRelease] The group header message
   * release.
   */
  groupHeaderMessageRelease?: string;
  /**
   * @member {string} [associationAssignedCode] The association assigned code.
   */
  associationAssignedCode?: string;
  /**
   * @member {string} [applicationPassword] The application password.
   */
  applicationPassword?: string;
}

/**
 * @interface
 * An interface representing EdifactMessageIdentifier.
 * The Edifact message identifier.
 *
 */
export interface EdifactMessageIdentifier {
  /**
   * @member {string} messageId The message id on which this envelope settings
   * has to be applied.
   */
  messageId: string;
}

/**
 * @interface
 * An interface representing EdifactSchemaReference.
 * The Edifact schema reference.
 *
 */
export interface EdifactSchemaReference {
  /**
   * @member {string} messageId The message id.
   */
  messageId: string;
  /**
   * @member {string} messageVersion The message version.
   */
  messageVersion: string;
  /**
   * @member {string} messageRelease The message release version.
   */
  messageRelease: string;
  /**
   * @member {string} [senderApplicationId] The sender application id.
   */
  senderApplicationId?: string;
  /**
   * @member {string} [senderApplicationQualifier] The sender application
   * qualifier.
   */
  senderApplicationQualifier?: string;
  /**
   * @member {string} [associationAssignedCode] The association assigned code.
   */
  associationAssignedCode?: string;
  /**
   * @member {string} schemaName The schema name.
   */
  schemaName: string;
}

/**
 * @interface
 * An interface representing EdifactValidationOverride.
 * The Edifact validation override settings.
 *
 */
export interface EdifactValidationOverride {
  /**
   * @member {string} messageId The message id on which the validation settings
   * has to be applied.
   */
  messageId: string;
  /**
   * @member {boolean} enforceCharacterSet The value indicating whether to
   * validate character Set.
   */
  enforceCharacterSet: boolean;
  /**
   * @member {boolean} validateEdiTypes The value indicating whether to
   * validate EDI types.
   */
  validateEdiTypes: boolean;
  /**
   * @member {boolean} validateXsdTypes The value indicating whether to
   * validate XSD types.
   */
  validateXsdTypes: boolean;
  /**
   * @member {boolean} allowLeadingAndTrailingSpacesAndZeroes The value
   * indicating whether to allow leading and trailing spaces and zeroes.
   */
  allowLeadingAndTrailingSpacesAndZeroes: boolean;
  /**
   * @member {TrailingSeparatorPolicy} trailingSeparatorPolicy The trailing
   * separator policy. Possible values include: 'NotSpecified', 'NotAllowed',
   * 'Optional', 'Mandatory'
   */
  trailingSeparatorPolicy: TrailingSeparatorPolicy;
  /**
   * @member {boolean} trimLeadingAndTrailingSpacesAndZeroes The value
   * indicating whether to trim leading and trailing spaces and zeroes.
   */
  trimLeadingAndTrailingSpacesAndZeroes: boolean;
}

/**
 * @interface
 * An interface representing EdifactDelimiterOverride.
 * The Edifact delimiter override settings.
 *
 */
export interface EdifactDelimiterOverride {
  /**
   * @member {string} [messageId] The message id.
   */
  messageId?: string;
  /**
   * @member {string} [messageVersion] The message version.
   */
  messageVersion?: string;
  /**
   * @member {string} [messageRelease] The message release.
   */
  messageRelease?: string;
  /**
   * @member {number} dataElementSeparator The data element separator.
   */
  dataElementSeparator: number;
  /**
   * @member {number} componentSeparator The component separator.
   */
  componentSeparator: number;
  /**
   * @member {number} segmentTerminator The segment terminator.
   */
  segmentTerminator: number;
  /**
   * @member {number} repetitionSeparator The repetition separator.
   */
  repetitionSeparator: number;
  /**
   * @member {SegmentTerminatorSuffix} segmentTerminatorSuffix The segment
   * terminator suffix. Possible values include: 'NotSpecified', 'None', 'CR',
   * 'LF', 'CRLF'
   */
  segmentTerminatorSuffix: SegmentTerminatorSuffix;
  /**
   * @member {EdifactDecimalIndicator} decimalPointIndicator The decimal point
   * indicator. Possible values include: 'NotSpecified', 'Comma', 'Decimal'
   */
  decimalPointIndicator: EdifactDecimalIndicator;
  /**
   * @member {number} releaseIndicator The release indicator.
   */
  releaseIndicator: number;
  /**
   * @member {string} [messageAssociationAssignedCode] The message association
   * assigned code.
   */
  messageAssociationAssignedCode?: string;
  /**
   * @member {string} [targetNamespace] The target namespace on which this
   * delimiter settings has to be applied.
   */
  targetNamespace?: string;
}

/**
 * @interface
 * An interface representing EdifactProtocolSettings.
 * The Edifact agreement protocol settings.
 *
 */
export interface EdifactProtocolSettings {
  /**
   * @member {EdifactValidationSettings} validationSettings The EDIFACT
   * validation settings.
   */
  validationSettings: EdifactValidationSettings;
  /**
   * @member {EdifactFramingSettings} framingSettings The EDIFACT framing
   * settings.
   */
  framingSettings: EdifactFramingSettings;
  /**
   * @member {EdifactEnvelopeSettings} envelopeSettings The EDIFACT envelope
   * settings.
   */
  envelopeSettings: EdifactEnvelopeSettings;
  /**
   * @member {EdifactAcknowledgementSettings} acknowledgementSettings The
   * EDIFACT acknowledgement settings.
   */
  acknowledgementSettings: EdifactAcknowledgementSettings;
  /**
   * @member {EdifactMessageFilter} messageFilter The EDIFACT message filter.
   */
  messageFilter: EdifactMessageFilter;
  /**
   * @member {EdifactProcessingSettings} processingSettings The EDIFACT
   * processing Settings.
   */
  processingSettings: EdifactProcessingSettings;
  /**
   * @member {EdifactEnvelopeOverride[]} [envelopeOverrides] The EDIFACT
   * envelope override settings.
   */
  envelopeOverrides?: EdifactEnvelopeOverride[];
  /**
   * @member {EdifactMessageIdentifier[]} [messageFilterList] The EDIFACT
   * message filter list.
   */
  messageFilterList?: EdifactMessageIdentifier[];
  /**
   * @member {EdifactSchemaReference[]} schemaReferences The EDIFACT schema
   * references.
   */
  schemaReferences: EdifactSchemaReference[];
  /**
   * @member {EdifactValidationOverride[]} [validationOverrides] The EDIFACT
   * validation override settings.
   */
  validationOverrides?: EdifactValidationOverride[];
  /**
   * @member {EdifactDelimiterOverride[]} [edifactDelimiterOverrides] The
   * EDIFACT delimiter override settings.
   */
  edifactDelimiterOverrides?: EdifactDelimiterOverride[];
}

/**
 * @interface
 * An interface representing EdifactOneWayAgreement.
 * The Edifact one way agreement.
 *
 */
export interface EdifactOneWayAgreement {
  /**
   * @member {BusinessIdentity} senderBusinessIdentity The sender business
   * identity
   */
  senderBusinessIdentity: BusinessIdentity;
  /**
   * @member {BusinessIdentity} receiverBusinessIdentity The receiver business
   * identity
   */
  receiverBusinessIdentity: BusinessIdentity;
  /**
   * @member {EdifactProtocolSettings} protocolSettings The EDIFACT protocol
   * settings.
   */
  protocolSettings: EdifactProtocolSettings;
}

/**
 * @interface
 * An interface representing EdifactAgreementContent.
 * The Edifact agreement content.
 *
 */
export interface EdifactAgreementContent {
  /**
   * @member {EdifactOneWayAgreement} receiveAgreement The EDIFACT one-way
   * receive agreement.
   */
  receiveAgreement: EdifactOneWayAgreement;
  /**
   * @member {EdifactOneWayAgreement} sendAgreement The EDIFACT one-way send
   * agreement.
   */
  sendAgreement: EdifactOneWayAgreement;
}

/**
 * @interface
 * An interface representing AgreementContent.
 * The integration account agreement content.
 *
 */
export interface AgreementContent {
  /**
   * @member {AS2AgreementContent} [aS2] The AS2 agreement content.
   */
  aS2?: AS2AgreementContent;
  /**
   * @member {X12AgreementContent} [x12] The X12 agreement content.
   */
  x12?: X12AgreementContent;
  /**
   * @member {EdifactAgreementContent} [edifact] The EDIFACT agreement content.
   */
  edifact?: EdifactAgreementContent;
}

/**
 * @interface
 * An interface representing IntegrationAccountAgreement.
 * The integration account agreement.
 *
 * @extends Resource
 */
export interface IntegrationAccountAgreement extends Resource {
  /**
   * @member {Date} [createdTime] The created time.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly createdTime?: Date;
  /**
   * @member {Date} [changedTime] The changed time.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly changedTime?: Date;
  /**
   * @member {any} [metadata] The metadata.
   */
  metadata?: any;
  /**
   * @member {AgreementType} agreementType The agreement type. Possible values
   * include: 'NotSpecified', 'AS2', 'X12', 'Edifact'
   */
  agreementType: AgreementType;
  /**
   * @member {string} hostPartner The integration account partner that is set
   * as host partner for this agreement.
   */
  hostPartner: string;
  /**
   * @member {string} guestPartner The integration account partner that is set
   * as guest partner for this agreement.
   */
  guestPartner: string;
  /**
   * @member {BusinessIdentity} hostIdentity The business identity of the host
   * partner.
   */
  hostIdentity: BusinessIdentity;
  /**
   * @member {BusinessIdentity} guestIdentity The business identity of the
   * guest partner.
   */
  guestIdentity: BusinessIdentity;
  /**
   * @member {AgreementContent} content The agreement content.
   */
  content: AgreementContent;
}

/**
 * @interface
 * An interface representing IntegrationAccountAgreementFilter.
 * The integration account agreement filter for odata query.
 *
 */
export interface IntegrationAccountAgreementFilter {
  /**
   * @member {AgreementType} agreementType The agreement type of integration
   * account agreement. Possible values include: 'NotSpecified', 'AS2', 'X12',
   * 'Edifact'
   */
  agreementType: AgreementType;
}

/**
 * @interface
 * An interface representing KeyVaultKeyReferenceKeyVault.
 * The key vault reference.
 *
 */
export interface KeyVaultKeyReferenceKeyVault {
  /**
   * @member {string} [id] The resource id.
   */
  id?: string;
  /**
   * @member {string} [name] The resource name.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [type] The resource type.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: string;
}

/**
 * @interface
 * An interface representing KeyVaultKeyReference.
 * The reference to the key vault key.
 *
 */
export interface KeyVaultKeyReference {
  /**
   * @member {KeyVaultKeyReferenceKeyVault} keyVault The key vault reference.
   */
  keyVault: KeyVaultKeyReferenceKeyVault;
  /**
   * @member {string} keyName The private key name in key vault.
   */
  keyName: string;
  /**
   * @member {string} [keyVersion] The private key version in key vault.
   */
  keyVersion?: string;
}

/**
 * @interface
 * An interface representing IntegrationAccountCertificate.
 * The integration account certificate.
 *
 * @extends Resource
 */
export interface IntegrationAccountCertificate extends Resource {
  /**
   * @member {Date} [createdTime] The created time.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly createdTime?: Date;
  /**
   * @member {Date} [changedTime] The changed time.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly changedTime?: Date;
  /**
   * @member {any} [metadata] The metadata.
   */
  metadata?: any;
  /**
   * @member {KeyVaultKeyReference} [key] The key details in the key vault.
   */
  key?: KeyVaultKeyReference;
  /**
   * @member {string} [publicCertificate] The public certificate.
   */
  publicCertificate?: string;
}

/**
 * @interface
 * An interface representing IntegrationAccountSessionFilter.
 * The integration account session filter.
 *
 */
export interface IntegrationAccountSessionFilter {
  /**
   * @member {Date} changedTime The changed time of integration account
   * sessions.
   */
  changedTime: Date;
}

/**
 * @interface
 * An interface representing IntegrationAccountSession.
 * The integration account session.
 *
 * @extends Resource
 */
export interface IntegrationAccountSession extends Resource {
  /**
   * @member {Date} [createdTime] The created time.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly createdTime?: Date;
  /**
   * @member {Date} [changedTime] The changed time.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly changedTime?: Date;
  /**
   * @member {any} [content] The session content.
   */
  content?: any;
}

/**
 * @interface
 * An interface representing OperationDisplay.
 * The object that represents the operation.
 *
 */
export interface OperationDisplay {
  /**
   * @member {string} [provider] Service provider: Microsoft.Logic
   */
  provider?: string;
  /**
   * @member {string} [resource] Resource on which the operation is performed:
   * Profile, endpoint, etc.
   */
  resource?: string;
  /**
   * @member {string} [operation] Operation type: Read, write, delete, etc.
   */
  operation?: string;
}

/**
 * @interface
 * An interface representing Operation.
 * Logic REST API operation
 *
 */
export interface Operation {
  /**
   * @member {string} [name] Operation name: {provider}/{resource}/{operation}
   */
  name?: string;
  /**
   * @member {OperationDisplay} [display] The object that represents the
   * operation.
   */
  display?: OperationDisplay;
}

/**
 * @interface
 * An interface representing KeyVaultReference.
 * The key vault reference.
 *
 * @extends ResourceReference
 */
export interface KeyVaultReference extends ResourceReference {
}

/**
 * @interface
 * An interface representing ListKeyVaultKeysDefinition.
 * The list key vault keys definition.
 *
 */
export interface ListKeyVaultKeysDefinition {
  /**
   * @member {KeyVaultReference} keyVault The key vault reference.
   */
  keyVault: KeyVaultReference;
  /**
   * @member {string} [skipToken] The skip token.
   */
  skipToken?: string;
}

/**
 * @interface
 * An interface representing KeyVaultKeyAttributes.
 * The key attributes.
 *
 */
export interface KeyVaultKeyAttributes {
  /**
   * @member {boolean} [enabled] Whether the key is enabled or not.
   */
  enabled?: boolean;
  /**
   * @member {number} [created] When the key was created.
   */
  created?: number;
  /**
   * @member {number} [updated] When the key was updated.
   */
  updated?: number;
}

/**
 * @interface
 * An interface representing KeyVaultKey.
 * The key vault key.
 *
 */
export interface KeyVaultKey {
  /**
   * @member {string} [kid] The key id.
   */
  kid?: string;
  /**
   * @member {KeyVaultKeyAttributes} [attributes] The key attributes.
   */
  attributes?: KeyVaultKeyAttributes;
}

/**
 * @interface
 * An interface representing TrackingEventErrorInfo.
 */
export interface TrackingEventErrorInfo {
  /**
   * @member {string} [message]
   */
  message?: string;
  /**
   * @member {string} [code]
   */
  code?: string;
}

/**
 * @interface
 * An interface representing TrackingEvent.
 */
export interface TrackingEvent {
  /**
   * @member {EventLevel} eventLevel Possible values include: 'LogAlways',
   * 'Critical', 'Error', 'Warning', 'Informational', 'Verbose'
   */
  eventLevel: EventLevel;
  /**
   * @member {Date} eventTime
   */
  eventTime: Date;
  /**
   * @member {TrackingRecordType} recordType Possible values include:
   * 'NotSpecified', 'Custom', 'AS2Message', 'AS2MDN', 'X12Interchange',
   * 'X12FunctionalGroup', 'X12TransactionSet', 'X12InterchangeAcknowledgment',
   * 'X12FunctionalGroupAcknowledgment', 'X12TransactionSetAcknowledgment',
   * 'EdifactInterchange', 'EdifactFunctionalGroup', 'EdifactTransactionSet',
   * 'EdifactInterchangeAcknowledgment',
   * 'EdifactFunctionalGroupAcknowledgment',
   * 'EdifactTransactionSetAcknowledgment'
   */
  recordType: TrackingRecordType;
  /**
   * @member {TrackingEventErrorInfo} [error]
   */
  error?: TrackingEventErrorInfo;
}

/**
 * @interface
 * An interface representing TrackingEventsDefinition.
 */
export interface TrackingEventsDefinition {
  /**
   * @member {string} sourceType
   */
  sourceType: string;
  /**
   * @member {TrackEventsOperationOptions} [trackEventsOptions] Possible values
   * include: 'None', 'DisableSourceInfoEnrich'
   */
  trackEventsOptions?: TrackEventsOperationOptions;
  /**
   * @member {TrackingEvent[]} events
   */
  events: TrackingEvent[];
}

/**
 * @interface
 * An interface representing SetTriggerStateActionDefinition.
 */
export interface SetTriggerStateActionDefinition {
  /**
   * @member {WorkflowTrigger} source
   */
  source: WorkflowTrigger;
}

/**
 * @interface
 * An interface representing Expression.
 */
export interface Expression {
  /**
   * @member {string} [text]
   */
  text?: string;
  /**
   * @member {any} [value]
   */
  value?: any;
  /**
   * @member {Expression[]} [subexpressions]
   */
  subexpressions?: Expression[];
  /**
   * @member {AzureResourceErrorInfo} [error]
   */
  error?: AzureResourceErrorInfo;
}

/**
 * @interface
 * An interface representing ExpressionRoot.
 * @extends Expression
 */
export interface ExpressionRoot extends Expression {
  /**
   * @member {string} [path] The path.
   */
  path?: string;
}

/**
 * @interface
 * An interface representing ErrorInfo.
 * The error info.
 *
 */
export interface ErrorInfo {
  /**
   * @member {string} code The error code.
   */
  code: string;
}

/**
 * @interface
 * An interface representing AzureResourceErrorInfo.
 * The azure resource error info.
 *
 * @extends ErrorInfo
 */
export interface AzureResourceErrorInfo extends ErrorInfo {
  /**
   * @member {string} message The error message.
   */
  message: string;
  /**
   * @member {AzureResourceErrorInfo[]} [details] The error details.
   */
  details?: AzureResourceErrorInfo[];
}

/**
 * @interface
 * An interface representing RepetitionIndex.
 * The workflow run action repetition index.
 *
 */
export interface RepetitionIndex {
  /**
   * @member {string} [scopeName] The scope.
   */
  scopeName?: string;
  /**
   * @member {number} itemIndex The index.
   */
  itemIndex: number;
}

/**
 * @interface
 * An interface representing WorkflowRunActionRepetitionDefinition.
 * The workflow run action repetition definition.
 *
 * @extends Resource
 */
export interface WorkflowRunActionRepetitionDefinition extends Resource {
  /**
   * @member {Date} [startTime] The start time of the workflow scope
   * repetition.
   */
  startTime?: Date;
  /**
   * @member {Date} [endTime] The end time of the workflow scope repetition.
   */
  endTime?: Date;
  /**
   * @member {RunActionCorrelation} [correlation] The correlation properties.
   */
  correlation?: RunActionCorrelation;
  /**
   * @member {WorkflowStatus} [status] The status of the workflow scope
   * repetition. Possible values include: 'NotSpecified', 'Paused', 'Running',
   * 'Waiting', 'Succeeded', 'Skipped', 'Suspended', 'Cancelled', 'Failed',
   * 'Faulted', 'TimedOut', 'Aborted', 'Ignored'
   */
  status?: WorkflowStatus;
  /**
   * @member {string} [code] The workflow scope repetition code.
   */
  code?: string;
  /**
   * @member {any} [error]
   */
  error?: any;
  /**
   * @member {string} [trackingId] Gets the tracking id.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly trackingId?: string;
  /**
   * @member {any} [inputs] Gets the inputs.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly inputs?: any;
  /**
   * @member {ContentLink} [inputsLink] Gets the link to inputs.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly inputsLink?: ContentLink;
  /**
   * @member {any} [outputs] Gets the outputs.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly outputs?: any;
  /**
   * @member {ContentLink} [outputsLink] Gets the link to outputs.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly outputsLink?: ContentLink;
  /**
   * @member {any} [trackedProperties] Gets the tracked properties.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly trackedProperties?: any;
  /**
   * @member {RetryHistory[]} [retryHistory] Gets the retry histories.
   */
  retryHistory?: RetryHistory[];
  /**
   * @member {number} [iterationCount]
   */
  iterationCount?: number;
  /**
   * @member {RepetitionIndex[]} [repetitionIndexes] The repetition indexes.
   */
  repetitionIndexes?: RepetitionIndex[];
}

/**
 * @interface
 * An interface representing OperationResultProperties.
 * The run operation result properties.
 *
 */
export interface OperationResultProperties {
  /**
   * @member {Date} [startTime] The start time of the workflow scope
   * repetition.
   */
  startTime?: Date;
  /**
   * @member {Date} [endTime] The end time of the workflow scope repetition.
   */
  endTime?: Date;
  /**
   * @member {RunActionCorrelation} [correlation] The correlation properties.
   */
  correlation?: RunActionCorrelation;
  /**
   * @member {WorkflowStatus} [status] The status of the workflow scope
   * repetition. Possible values include: 'NotSpecified', 'Paused', 'Running',
   * 'Waiting', 'Succeeded', 'Skipped', 'Suspended', 'Cancelled', 'Failed',
   * 'Faulted', 'TimedOut', 'Aborted', 'Ignored'
   */
  status?: WorkflowStatus;
  /**
   * @member {string} [code] The workflow scope repetition code.
   */
  code?: string;
  /**
   * @member {any} [error]
   */
  error?: any;
}

/**
 * @interface
 * An interface representing OperationResult.
 * The operation result definition.
 *
 * @extends OperationResultProperties
 */
export interface OperationResult extends OperationResultProperties {
  /**
   * @member {string} [trackingId] Gets the tracking id.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly trackingId?: string;
  /**
   * @member {any} [inputs] Gets the inputs.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly inputs?: any;
  /**
   * @member {ContentLink} [inputsLink] Gets the link to inputs.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly inputsLink?: ContentLink;
  /**
   * @member {any} [outputs] Gets the outputs.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly outputs?: any;
  /**
   * @member {ContentLink} [outputsLink] Gets the link to outputs.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly outputsLink?: ContentLink;
  /**
   * @member {any} [trackedProperties] Gets the tracked properties.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly trackedProperties?: any;
  /**
   * @member {RetryHistory[]} [retryHistory] Gets the retry histories.
   */
  retryHistory?: RetryHistory[];
  /**
   * @member {number} [iterationCount]
   */
  iterationCount?: number;
}

/**
 * @interface
 * An interface representing RunCorrelation.
 * The correlation properties.
 *
 */
export interface RunCorrelation {
  /**
   * @member {string} [clientTrackingId] The client tracking identifier.
   */
  clientTrackingId?: string;
  /**
   * @member {string[]} [clientKeywords] The client keywords.
   */
  clientKeywords?: string[];
}

/**
 * @interface
 * An interface representing RunActionCorrelation.
 * The workflow run action correlation properties.
 *
 * @extends RunCorrelation
 */
export interface RunActionCorrelation extends RunCorrelation {
  /**
   * @member {string} [actionTrackingId] The action tracking identifier.
   */
  actionTrackingId?: string;
}

/**
 * @interface
 * An interface representing JsonSchema.
 * The JSON schema.
 *
 */
export interface JsonSchema {
  /**
   * @member {string} [title] The JSON title.
   */
  title?: string;
  /**
   * @member {string} [content] The JSON content.
   */
  content?: string;
}

/**
 * @interface
 * An interface representing ArtifactProperties.
 * The artifact properties definition.
 *
 */
export interface ArtifactProperties {
  /**
   * @member {Date} [createdTime] The artifact creation time.
   */
  createdTime?: Date;
  /**
   * @member {Date} [changedTime] The artifact changed time.
   */
  changedTime?: Date;
  /**
   * @member {any} [metadata]
   */
  metadata?: any;
}

/**
 * @interface
 * An interface representing ArtifactContentPropertiesDefinition.
 * The artifact content properties definition.
 *
 * @extends ArtifactProperties
 */
export interface ArtifactContentPropertiesDefinition extends ArtifactProperties {
  /**
   * @member {any} [content]
   */
  content?: any;
  /**
   * @member {string} [contentType] The content type.
   */
  contentType?: string;
  /**
   * @member {ContentLink} [contentLink] The content link.
   */
  contentLink?: ContentLink;
}

/**
 * @interface
 * An interface representing AssemblyProperties.
 * The assembly properties definition.
 *
 * @extends ArtifactContentPropertiesDefinition
 */
export interface AssemblyProperties extends ArtifactContentPropertiesDefinition {
  /**
   * @member {string} assemblyName The assembly name.
   */
  assemblyName: string;
  /**
   * @member {string} [assemblyVersion] The assembly version.
   */
  assemblyVersion?: string;
  /**
   * @member {string} [assemblyCulture] The assembly culture.
   */
  assemblyCulture?: string;
  /**
   * @member {string} [assemblyPublicKeyToken] The assembly public key token.
   */
  assemblyPublicKeyToken?: string;
}

/**
 * @interface
 * An interface representing AssemblyDefinition.
 * The assembly definition.
 *
 * @extends Resource
 */
export interface AssemblyDefinition extends Resource {
  /**
   * @member {AssemblyProperties} properties The assembly properties.
   */
  properties: AssemblyProperties;
}

/**
 * @interface
 * An interface representing BatchReleaseCriteria.
 * The batch release criteria.
 *
 */
export interface BatchReleaseCriteria {
  /**
   * @member {number} [messageCount] The message count.
   */
  messageCount?: number;
  /**
   * @member {number} [batchSize] The batch size in bytes.
   */
  batchSize?: number;
  /**
   * @member {WorkflowTriggerRecurrence} [recurrence] The recurrence.
   */
  recurrence?: WorkflowTriggerRecurrence;
}

/**
 * @interface
 * An interface representing BatchConfigurationProperties.
 * The batch configuration properties definition.
 *
 * @extends ArtifactProperties
 */
export interface BatchConfigurationProperties extends ArtifactProperties {
  /**
   * @member {string} batchGroupName The name of the batch group.
   */
  batchGroupName: string;
  /**
   * @member {BatchReleaseCriteria} releaseCriteria The batch release criteria.
   */
  releaseCriteria: BatchReleaseCriteria;
}

/**
 * @interface
 * An interface representing BatchConfiguration.
 * The batch configuration resource definition.
 *
 * @extends Resource
 */
export interface BatchConfiguration extends Resource {
  /**
   * @member {BatchConfigurationProperties} properties The batch configuration
   * properties.
   */
  properties: BatchConfigurationProperties;
}

/**
 * @interface
 * An interface representing WorkflowsListBySubscriptionOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface WorkflowsListBySubscriptionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [top] The number of items to be included in the result.
   */
  top?: number;
  /**
   * @member {string} [filter] The filter to apply on the operation. Options
   * for filters include: State, Trigger, and ReferencedResourceId.
   */
  filter?: string;
}

/**
 * @interface
 * An interface representing WorkflowsListByResourceGroupOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface WorkflowsListByResourceGroupOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [top] The number of items to be included in the result.
   */
  top?: number;
  /**
   * @member {string} [filter] The filter to apply on the operation. Options
   * for filters include: State, Trigger, and ReferencedResourceId.
   */
  filter?: string;
}

/**
 * @interface
 * An interface representing WorkflowVersionsListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface WorkflowVersionsListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [top] The number of items to be included in the result.
   */
  top?: number;
}

/**
 * @interface
 * An interface representing WorkflowTriggersListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface WorkflowTriggersListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [top] The number of items to be included in the result.
   */
  top?: number;
  /**
   * @member {string} [filter] The filter to apply on the operation.
   */
  filter?: string;
}

/**
 * @interface
 * An interface representing WorkflowVersionTriggersListCallbackUrlOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface WorkflowVersionTriggersListCallbackUrlOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {GetCallbackUrlParameters} [parameters] The callback URL
   * parameters.
   */
  parameters?: GetCallbackUrlParameters;
}

/**
 * @interface
 * An interface representing WorkflowTriggerHistoriesListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface WorkflowTriggerHistoriesListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [top] The number of items to be included in the result.
   */
  top?: number;
  /**
   * @member {string} [filter] The filter to apply on the operation. Options
   * for filters include: Status, StartTime, and ClientTrackingId.
   */
  filter?: string;
}

/**
 * @interface
 * An interface representing WorkflowRunsListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface WorkflowRunsListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [top] The number of items to be included in the result.
   */
  top?: number;
  /**
   * @member {string} [filter] The filter to apply on the operation. Options
   * for filters include: Status, StartTime, and ClientTrackingId.
   */
  filter?: string;
}

/**
 * @interface
 * An interface representing WorkflowRunActionsListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface WorkflowRunActionsListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [top] The number of items to be included in the result.
   */
  top?: number;
  /**
   * @member {string} [filter] The filter to apply on the operation. Options
   * for filters include: Status.
   */
  filter?: string;
}

/**
 * @interface
 * An interface representing IntegrationAccountsListBySubscriptionOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface IntegrationAccountsListBySubscriptionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [top] The number of items to be included in the result.
   */
  top?: number;
}

/**
 * @interface
 * An interface representing IntegrationAccountsListByResourceGroupOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface IntegrationAccountsListByResourceGroupOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [top] The number of items to be included in the result.
   */
  top?: number;
}

/**
 * @interface
 * An interface representing IntegrationAccountSchemasListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface IntegrationAccountSchemasListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [top] The number of items to be included in the result.
   */
  top?: number;
  /**
   * @member {string} [filter] The filter to apply on the operation. Options
   * for filters include: SchemaType.
   */
  filter?: string;
}

/**
 * @interface
 * An interface representing IntegrationAccountMapsListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface IntegrationAccountMapsListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [top] The number of items to be included in the result.
   */
  top?: number;
  /**
   * @member {string} [filter] The filter to apply on the operation. Options
   * for filters include: MapType.
   */
  filter?: string;
}

/**
 * @interface
 * An interface representing IntegrationAccountPartnersListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface IntegrationAccountPartnersListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [top] The number of items to be included in the result.
   */
  top?: number;
  /**
   * @member {string} [filter] The filter to apply on the operation. Options
   * for filters include: PartnerType.
   */
  filter?: string;
}

/**
 * @interface
 * An interface representing IntegrationAccountAgreementsListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface IntegrationAccountAgreementsListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [top] The number of items to be included in the result.
   */
  top?: number;
  /**
   * @member {string} [filter] The filter to apply on the operation. Options
   * for filters include: AgreementType.
   */
  filter?: string;
}

/**
 * @interface
 * An interface representing IntegrationAccountCertificatesListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface IntegrationAccountCertificatesListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [top] The number of items to be included in the result.
   */
  top?: number;
}

/**
 * @interface
 * An interface representing IntegrationAccountSessionsListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface IntegrationAccountSessionsListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [top] The number of items to be included in the result.
   */
  top?: number;
  /**
   * @member {string} [filter] The filter to apply on the operation. Options
   * for filters include: ChangedTime.
   */
  filter?: string;
}

/**
 * @interface
 * An interface representing LogicManagementClientOptions.
 * @extends AzureServiceClientOptions
 */
export interface LogicManagementClientOptions extends AzureServiceClientOptions {
  /**
   * @member {string} [baseUri]
   */
  baseUri?: string;
}


/**
 * @interface
 * An interface representing the WorkflowListResult.
 * The list of workflows.
 *
 * @extends Array<Workflow>
 */
export interface WorkflowListResult extends Array<Workflow> {
  /**
   * @member {string} [nextLink] The URL to get the next set of results.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the WorkflowVersionListResult.
 * The list of workflow versions.
 *
 * @extends Array<WorkflowVersion>
 */
export interface WorkflowVersionListResult extends Array<WorkflowVersion> {
  /**
   * @member {string} [nextLink] The URL to get the next set of results.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the WorkflowTriggerListResult.
 * The list of workflow triggers.
 *
 * @extends Array<WorkflowTrigger>
 */
export interface WorkflowTriggerListResult extends Array<WorkflowTrigger> {
  /**
   * @member {string} [nextLink] The URL to get the next set of results.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the WorkflowTriggerHistoryListResult.
 * The list of workflow trigger histories.
 *
 * @extends Array<WorkflowTriggerHistory>
 */
export interface WorkflowTriggerHistoryListResult extends Array<WorkflowTriggerHistory> {
  /**
   * @member {string} [nextLink] The URL to get the next set of results.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the WorkflowRunListResult.
 * The list of workflow runs.
 *
 * @extends Array<WorkflowRun>
 */
export interface WorkflowRunListResult extends Array<WorkflowRun> {
  /**
   * @member {string} [nextLink] The URL to get the next set of results.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the WorkflowRunActionListResult.
 * The list of workflow run actions.
 *
 * @extends Array<WorkflowRunAction>
 */
export interface WorkflowRunActionListResult extends Array<WorkflowRunAction> {
  /**
   * @member {string} [nextLink] The URL to get the next set of results.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the ExpressionTraces.
 * @extends Array<ExpressionRoot>
 */
export interface ExpressionTraces extends Array<ExpressionRoot> {
  /**
   * @member {ExpressionRoot[]} [inputs]
   */
  inputs?: ExpressionRoot[];
}

/**
 * @interface
 * An interface representing the WorkflowRunActionRepetitionDefinitionCollection.
 * A collection of workflow run action repetitions.
 *
 * @extends Array<WorkflowRunActionRepetitionDefinition>
 */
export interface WorkflowRunActionRepetitionDefinitionCollection extends Array<WorkflowRunActionRepetitionDefinition> {
}

/**
 * @interface
 * An interface representing the IntegrationAccountListResult.
 * The list of integration accounts.
 *
 * @extends Array<IntegrationAccount>
 */
export interface IntegrationAccountListResult extends Array<IntegrationAccount> {
  /**
   * @member {string} [nextLink] The URL to get the next set of results.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the KeyVaultKeyCollection.
 * Collection of key vault keys.
 *
 * @extends Array<KeyVaultKey>
 */
export interface KeyVaultKeyCollection extends Array<KeyVaultKey> {
  /**
   * @member {string} [skipToken] The skip token.
   */
  skipToken?: string;
}

/**
 * @interface
 * An interface representing the AssemblyCollection.
 * A collection of assembly definitions.
 *
 * @extends Array<AssemblyDefinition>
 */
export interface AssemblyCollection extends Array<AssemblyDefinition> {
}

/**
 * @interface
 * An interface representing the BatchConfigurationCollection.
 * A collection of batch configurations.
 *
 * @extends Array<BatchConfiguration>
 */
export interface BatchConfigurationCollection extends Array<BatchConfiguration> {
}

/**
 * @interface
 * An interface representing the IntegrationAccountSchemaListResult.
 * The list of integration account schemas.
 *
 * @extends Array<IntegrationAccountSchema>
 */
export interface IntegrationAccountSchemaListResult extends Array<IntegrationAccountSchema> {
  /**
   * @member {string} [nextLink] The URL to get the next set of results.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the IntegrationAccountMapListResult.
 * The list of integration account maps.
 *
 * @extends Array<IntegrationAccountMap>
 */
export interface IntegrationAccountMapListResult extends Array<IntegrationAccountMap> {
  /**
   * @member {string} [nextLink] The URL to get the next set of results.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the IntegrationAccountPartnerListResult.
 * The list of integration account partners.
 *
 * @extends Array<IntegrationAccountPartner>
 */
export interface IntegrationAccountPartnerListResult extends Array<IntegrationAccountPartner> {
  /**
   * @member {string} [nextLink] The URL to get the next set of results.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the IntegrationAccountAgreementListResult.
 * The list of integration account agreements.
 *
 * @extends Array<IntegrationAccountAgreement>
 */
export interface IntegrationAccountAgreementListResult extends Array<IntegrationAccountAgreement> {
  /**
   * @member {string} [nextLink] The URL to get the next set of results.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the IntegrationAccountCertificateListResult.
 * The list of integration account certificates.
 *
 * @extends Array<IntegrationAccountCertificate>
 */
export interface IntegrationAccountCertificateListResult extends Array<IntegrationAccountCertificate> {
  /**
   * @member {string} [nextLink] The URL to get the next set of results.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the IntegrationAccountSessionListResult.
 * The list of integration account sessions.
 *
 * @extends Array<IntegrationAccountSession>
 */
export interface IntegrationAccountSessionListResult extends Array<IntegrationAccountSession> {
  /**
   * @member {string} [nextLink] The URL to get the next set of results.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the OperationListResult.
 * Result of the request to list Logic operations. It contains a list of
 * operations and a URL link to get the next set of results.
 *
 * @extends Array<Operation>
 */
export interface OperationListResult extends Array<Operation> {
  /**
   * @member {string} [nextLink] URL to get the next set of operation list
   * results if there are any.
   */
  nextLink?: string;
}

/**
 * Defines values for WorkflowProvisioningState.
 * Possible values include: 'NotSpecified', 'Accepted', 'Running', 'Ready', 'Creating', 'Created',
 * 'Deleting', 'Deleted', 'Canceled', 'Failed', 'Succeeded', 'Moving', 'Updating', 'Registering',
 * 'Registered', 'Unregistering', 'Unregistered', 'Completed'
 * @readonly
 * @enum {string}
 */
export type WorkflowProvisioningState = 'NotSpecified' | 'Accepted' | 'Running' | 'Ready' | 'Creating' | 'Created' | 'Deleting' | 'Deleted' | 'Canceled' | 'Failed' | 'Succeeded' | 'Moving' | 'Updating' | 'Registering' | 'Registered' | 'Unregistering' | 'Unregistered' | 'Completed';

/**
 * Defines values for WorkflowState.
 * Possible values include: 'NotSpecified', 'Completed', 'Enabled', 'Disabled', 'Deleted',
 * 'Suspended'
 * @readonly
 * @enum {string}
 */
export type WorkflowState = 'NotSpecified' | 'Completed' | 'Enabled' | 'Disabled' | 'Deleted' | 'Suspended';

/**
 * Defines values for SkuName.
 * Possible values include: 'NotSpecified', 'Free', 'Shared', 'Basic', 'Standard', 'Premium'
 * @readonly
 * @enum {string}
 */
export type SkuName = 'NotSpecified' | 'Free' | 'Shared' | 'Basic' | 'Standard' | 'Premium';

/**
 * Defines values for ParameterType.
 * Possible values include: 'NotSpecified', 'String', 'SecureString', 'Int', 'Float', 'Bool',
 * 'Array', 'Object', 'SecureObject'
 * @readonly
 * @enum {string}
 */
export type ParameterType = 'NotSpecified' | 'String' | 'SecureString' | 'Int' | 'Float' | 'Bool' | 'Array' | 'Object' | 'SecureObject';

/**
 * Defines values for WorkflowTriggerProvisioningState.
 * Possible values include: 'NotSpecified', 'Accepted', 'Running', 'Ready', 'Creating', 'Created',
 * 'Deleting', 'Deleted', 'Canceled', 'Failed', 'Succeeded', 'Moving', 'Updating', 'Registering',
 * 'Registered', 'Unregistering', 'Unregistered', 'Completed'
 * @readonly
 * @enum {string}
 */
export type WorkflowTriggerProvisioningState = 'NotSpecified' | 'Accepted' | 'Running' | 'Ready' | 'Creating' | 'Created' | 'Deleting' | 'Deleted' | 'Canceled' | 'Failed' | 'Succeeded' | 'Moving' | 'Updating' | 'Registering' | 'Registered' | 'Unregistering' | 'Unregistered' | 'Completed';

/**
 * Defines values for WorkflowStatus.
 * Possible values include: 'NotSpecified', 'Paused', 'Running', 'Waiting', 'Succeeded', 'Skipped',
 * 'Suspended', 'Cancelled', 'Failed', 'Faulted', 'TimedOut', 'Aborted', 'Ignored'
 * @readonly
 * @enum {string}
 */
export type WorkflowStatus = 'NotSpecified' | 'Paused' | 'Running' | 'Waiting' | 'Succeeded' | 'Skipped' | 'Suspended' | 'Cancelled' | 'Failed' | 'Faulted' | 'TimedOut' | 'Aborted' | 'Ignored';

/**
 * Defines values for RecurrenceFrequency.
 * Possible values include: 'NotSpecified', 'Second', 'Minute', 'Hour', 'Day', 'Week', 'Month',
 * 'Year'
 * @readonly
 * @enum {string}
 */
export type RecurrenceFrequency = 'NotSpecified' | 'Second' | 'Minute' | 'Hour' | 'Day' | 'Week' | 'Month' | 'Year';

/**
 * Defines values for DaysOfWeek.
 * Possible values include: 'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday',
 * 'Saturday'
 * @readonly
 * @enum {string}
 */
export type DaysOfWeek = 'Sunday' | 'Monday' | 'Tuesday' | 'Wednesday' | 'Thursday' | 'Friday' | 'Saturday';

/**
 * Defines values for DayOfWeek.
 * Possible values include: 'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday',
 * 'Saturday'
 * @readonly
 * @enum {string}
 */
export type DayOfWeek = 'Sunday' | 'Monday' | 'Tuesday' | 'Wednesday' | 'Thursday' | 'Friday' | 'Saturday';

/**
 * Defines values for KeyType.
 * Possible values include: 'NotSpecified', 'Primary', 'Secondary'
 * @readonly
 * @enum {string}
 */
export type KeyType = 'NotSpecified' | 'Primary' | 'Secondary';

/**
 * Defines values for IntegrationAccountSkuName.
 * Possible values include: 'NotSpecified', 'Free', 'Basic', 'Standard'
 * @readonly
 * @enum {string}
 */
export type IntegrationAccountSkuName = 'NotSpecified' | 'Free' | 'Basic' | 'Standard';

/**
 * Defines values for SchemaType.
 * Possible values include: 'NotSpecified', 'Xml'
 * @readonly
 * @enum {string}
 */
export type SchemaType = 'NotSpecified' | 'Xml';

/**
 * Defines values for MapType.
 * Possible values include: 'NotSpecified', 'Xslt', 'Xslt20', 'Xslt30', 'Liquid'
 * @readonly
 * @enum {string}
 */
export type MapType = 'NotSpecified' | 'Xslt' | 'Xslt20' | 'Xslt30' | 'Liquid';

/**
 * Defines values for PartnerType.
 * Possible values include: 'NotSpecified', 'B2B'
 * @readonly
 * @enum {string}
 */
export type PartnerType = 'NotSpecified' | 'B2B';

/**
 * Defines values for AgreementType.
 * Possible values include: 'NotSpecified', 'AS2', 'X12', 'Edifact'
 * @readonly
 * @enum {string}
 */
export type AgreementType = 'NotSpecified' | 'AS2' | 'X12' | 'Edifact';

/**
 * Defines values for HashingAlgorithm.
 * Possible values include: 'NotSpecified', 'None', 'MD5', 'SHA1', 'SHA2256', 'SHA2384', 'SHA2512'
 * @readonly
 * @enum {string}
 */
export type HashingAlgorithm = 'NotSpecified' | 'None' | 'MD5' | 'SHA1' | 'SHA2256' | 'SHA2384' | 'SHA2512';

/**
 * Defines values for EncryptionAlgorithm.
 * Possible values include: 'NotSpecified', 'None', 'DES3', 'RC2', 'AES128', 'AES192', 'AES256'
 * @readonly
 * @enum {string}
 */
export type EncryptionAlgorithm = 'NotSpecified' | 'None' | 'DES3' | 'RC2' | 'AES128' | 'AES192' | 'AES256';

/**
 * Defines values for SigningAlgorithm.
 * Possible values include: 'NotSpecified', 'Default', 'SHA1', 'SHA2256', 'SHA2384', 'SHA2512'
 * @readonly
 * @enum {string}
 */
export type SigningAlgorithm = 'NotSpecified' | 'Default' | 'SHA1' | 'SHA2256' | 'SHA2384' | 'SHA2512';

/**
 * Defines values for TrailingSeparatorPolicy.
 * Possible values include: 'NotSpecified', 'NotAllowed', 'Optional', 'Mandatory'
 * @readonly
 * @enum {string}
 */
export type TrailingSeparatorPolicy = 'NotSpecified' | 'NotAllowed' | 'Optional' | 'Mandatory';

/**
 * Defines values for X12CharacterSet.
 * Possible values include: 'NotSpecified', 'Basic', 'Extended', 'UTF8'
 * @readonly
 * @enum {string}
 */
export type X12CharacterSet = 'NotSpecified' | 'Basic' | 'Extended' | 'UTF8';

/**
 * Defines values for SegmentTerminatorSuffix.
 * Possible values include: 'NotSpecified', 'None', 'CR', 'LF', 'CRLF'
 * @readonly
 * @enum {string}
 */
export type SegmentTerminatorSuffix = 'NotSpecified' | 'None' | 'CR' | 'LF' | 'CRLF';

/**
 * Defines values for X12DateFormat.
 * Possible values include: 'NotSpecified', 'CCYYMMDD', 'YYMMDD'
 * @readonly
 * @enum {string}
 */
export type X12DateFormat = 'NotSpecified' | 'CCYYMMDD' | 'YYMMDD';

/**
 * Defines values for X12TimeFormat.
 * Possible values include: 'NotSpecified', 'HHMM', 'HHMMSS', 'HHMMSSdd', 'HHMMSSd'
 * @readonly
 * @enum {string}
 */
export type X12TimeFormat = 'NotSpecified' | 'HHMM' | 'HHMMSS' | 'HHMMSSdd' | 'HHMMSSd';

/**
 * Defines values for UsageIndicator.
 * Possible values include: 'NotSpecified', 'Test', 'Information', 'Production'
 * @readonly
 * @enum {string}
 */
export type UsageIndicator = 'NotSpecified' | 'Test' | 'Information' | 'Production';

/**
 * Defines values for MessageFilterType.
 * Possible values include: 'NotSpecified', 'Include', 'Exclude'
 * @readonly
 * @enum {string}
 */
export type MessageFilterType = 'NotSpecified' | 'Include' | 'Exclude';

/**
 * Defines values for EdifactCharacterSet.
 * Possible values include: 'NotSpecified', 'UNOB', 'UNOA', 'UNOC', 'UNOD', 'UNOE', 'UNOF', 'UNOG',
 * 'UNOH', 'UNOI', 'UNOJ', 'UNOK', 'UNOX', 'UNOY', 'KECA'
 * @readonly
 * @enum {string}
 */
export type EdifactCharacterSet = 'NotSpecified' | 'UNOB' | 'UNOA' | 'UNOC' | 'UNOD' | 'UNOE' | 'UNOF' | 'UNOG' | 'UNOH' | 'UNOI' | 'UNOJ' | 'UNOK' | 'UNOX' | 'UNOY' | 'KECA';

/**
 * Defines values for EdifactDecimalIndicator.
 * Possible values include: 'NotSpecified', 'Comma', 'Decimal'
 * @readonly
 * @enum {string}
 */
export type EdifactDecimalIndicator = 'NotSpecified' | 'Comma' | 'Decimal';

/**
 * Defines values for TrackEventsOperationOptions.
 * Possible values include: 'None', 'DisableSourceInfoEnrich'
 * @readonly
 * @enum {string}
 */
export type TrackEventsOperationOptions = 'None' | 'DisableSourceInfoEnrich';

/**
 * Defines values for EventLevel.
 * Possible values include: 'LogAlways', 'Critical', 'Error', 'Warning', 'Informational', 'Verbose'
 * @readonly
 * @enum {string}
 */
export type EventLevel = 'LogAlways' | 'Critical' | 'Error' | 'Warning' | 'Informational' | 'Verbose';

/**
 * Defines values for TrackingRecordType.
 * Possible values include: 'NotSpecified', 'Custom', 'AS2Message', 'AS2MDN', 'X12Interchange',
 * 'X12FunctionalGroup', 'X12TransactionSet', 'X12InterchangeAcknowledgment',
 * 'X12FunctionalGroupAcknowledgment', 'X12TransactionSetAcknowledgment', 'EdifactInterchange',
 * 'EdifactFunctionalGroup', 'EdifactTransactionSet', 'EdifactInterchangeAcknowledgment',
 * 'EdifactFunctionalGroupAcknowledgment', 'EdifactTransactionSetAcknowledgment'
 * @readonly
 * @enum {string}
 */
export type TrackingRecordType = 'NotSpecified' | 'Custom' | 'AS2Message' | 'AS2MDN' | 'X12Interchange' | 'X12FunctionalGroup' | 'X12TransactionSet' | 'X12InterchangeAcknowledgment' | 'X12FunctionalGroupAcknowledgment' | 'X12TransactionSetAcknowledgment' | 'EdifactInterchange' | 'EdifactFunctionalGroup' | 'EdifactTransactionSet' | 'EdifactInterchangeAcknowledgment' | 'EdifactFunctionalGroupAcknowledgment' | 'EdifactTransactionSetAcknowledgment';

/**
 * Contains response data for the listBySubscription operation.
 */
export type WorkflowsListBySubscriptionResponse = WorkflowListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkflowListResult;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type WorkflowsListByResourceGroupResponse = WorkflowListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkflowListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type WorkflowsGetResponse = Workflow & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Workflow;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type WorkflowsCreateOrUpdateResponse = Workflow & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Workflow;
    };
};

/**
 * Contains response data for the update operation.
 */
export type WorkflowsUpdateResponse = Workflow & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Workflow;
    };
};

/**
 * Contains response data for the generateUpgradedDefinition operation.
 */
export type WorkflowsGenerateUpgradedDefinitionResponse = {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the listCallbackUrl operation.
 */
export type WorkflowsListCallbackUrlResponse = WorkflowTriggerCallbackUrl & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkflowTriggerCallbackUrl;
    };
};

/**
 * Contains response data for the listSwagger operation.
 */
export type WorkflowsListSwaggerResponse = {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the listBySubscriptionNext operation.
 */
export type WorkflowsListBySubscriptionNextResponse = WorkflowListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkflowListResult;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type WorkflowsListByResourceGroupNextResponse = WorkflowListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkflowListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type WorkflowVersionsListResponse = WorkflowVersionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkflowVersionListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type WorkflowVersionsGetResponse = WorkflowVersion & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkflowVersion;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type WorkflowVersionsListNextResponse = WorkflowVersionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkflowVersionListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type WorkflowTriggersListResponse = WorkflowTriggerListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkflowTriggerListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type WorkflowTriggersGetResponse = WorkflowTrigger & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkflowTrigger;
    };
};

/**
 * Contains response data for the run operation.
 */
export type WorkflowTriggersRunResponse = {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the getSchemaJson operation.
 */
export type WorkflowTriggersGetSchemaJsonResponse = JsonSchema & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JsonSchema;
    };
};

/**
 * Contains response data for the listCallbackUrl operation.
 */
export type WorkflowTriggersListCallbackUrlResponse = WorkflowTriggerCallbackUrl & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkflowTriggerCallbackUrl;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type WorkflowTriggersListNextResponse = WorkflowTriggerListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkflowTriggerListResult;
    };
};

/**
 * Contains response data for the listCallbackUrl operation.
 */
export type WorkflowVersionTriggersListCallbackUrlResponse = WorkflowTriggerCallbackUrl & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkflowTriggerCallbackUrl;
    };
};

/**
 * Contains response data for the list operation.
 */
export type WorkflowTriggerHistoriesListResponse = WorkflowTriggerHistoryListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkflowTriggerHistoryListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type WorkflowTriggerHistoriesGetResponse = WorkflowTriggerHistory & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkflowTriggerHistory;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type WorkflowTriggerHistoriesListNextResponse = WorkflowTriggerHistoryListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkflowTriggerHistoryListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type WorkflowRunsListResponse = WorkflowRunListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkflowRunListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type WorkflowRunsGetResponse = WorkflowRun & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkflowRun;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type WorkflowRunsListNextResponse = WorkflowRunListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkflowRunListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type WorkflowRunActionsListResponse = WorkflowRunActionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkflowRunActionListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type WorkflowRunActionsGetResponse = WorkflowRunAction & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkflowRunAction;
    };
};

/**
 * Contains response data for the listExpressionTraces operation.
 */
export type WorkflowRunActionsListExpressionTracesResponse = ExpressionTraces & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ExpressionTraces;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type WorkflowRunActionsListNextResponse = WorkflowRunActionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkflowRunActionListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type WorkflowRunActionRepetitionsListResponse = WorkflowRunActionRepetitionDefinitionCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkflowRunActionRepetitionDefinitionCollection;
    };
};

/**
 * Contains response data for the get operation.
 */
export type WorkflowRunActionRepetitionsGetResponse = WorkflowRunActionRepetitionDefinition & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkflowRunActionRepetitionDefinition;
    };
};

/**
 * Contains response data for the listExpressionTraces operation.
 */
export type WorkflowRunActionRepetitionsListExpressionTracesResponse = ExpressionTraces & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ExpressionTraces;
    };
};

/**
 * Contains response data for the list operation.
 */
export type WorkflowRunActionScopeRepetitionsListResponse = WorkflowRunActionRepetitionDefinitionCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkflowRunActionRepetitionDefinitionCollection;
    };
};

/**
 * Contains response data for the get operation.
 */
export type WorkflowRunActionScopeRepetitionsGetResponse = WorkflowRunActionRepetitionDefinition & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkflowRunActionRepetitionDefinition;
    };
};

/**
 * Contains response data for the get operation.
 */
export type WorkflowRunOperationsGetResponse = WorkflowRun & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkflowRun;
    };
};

/**
 * Contains response data for the listBySubscription operation.
 */
export type IntegrationAccountsListBySubscriptionResponse = IntegrationAccountListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IntegrationAccountListResult;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type IntegrationAccountsListByResourceGroupResponse = IntegrationAccountListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IntegrationAccountListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type IntegrationAccountsGetResponse = IntegrationAccount & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IntegrationAccount;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type IntegrationAccountsCreateOrUpdateResponse = IntegrationAccount & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IntegrationAccount;
    };
};

/**
 * Contains response data for the update operation.
 */
export type IntegrationAccountsUpdateResponse = IntegrationAccount & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IntegrationAccount;
    };
};

/**
 * Contains response data for the listCallbackUrl operation.
 */
export type IntegrationAccountsListCallbackUrlResponse = CallbackUrl & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CallbackUrl;
    };
};

/**
 * Contains response data for the listKeyVaultKeys operation.
 */
export type IntegrationAccountsListKeyVaultKeysResponse = KeyVaultKeyCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: KeyVaultKeyCollection;
    };
};

/**
 * Contains response data for the regenerateAccessKey operation.
 */
export type IntegrationAccountsRegenerateAccessKeyResponse = IntegrationAccount & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IntegrationAccount;
    };
};

/**
 * Contains response data for the listBySubscriptionNext operation.
 */
export type IntegrationAccountsListBySubscriptionNextResponse = IntegrationAccountListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IntegrationAccountListResult;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type IntegrationAccountsListByResourceGroupNextResponse = IntegrationAccountListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IntegrationAccountListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type IntegrationAccountAssembliesListResponse = AssemblyCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AssemblyCollection;
    };
};

/**
 * Contains response data for the get operation.
 */
export type IntegrationAccountAssembliesGetResponse = AssemblyDefinition & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AssemblyDefinition;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type IntegrationAccountAssembliesCreateOrUpdateResponse = AssemblyDefinition & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AssemblyDefinition;
    };
};

/**
 * Contains response data for the listContentCallbackUrl operation.
 */
export type IntegrationAccountAssembliesListContentCallbackUrlResponse = WorkflowTriggerCallbackUrl & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkflowTriggerCallbackUrl;
    };
};

/**
 * Contains response data for the list operation.
 */
export type IntegrationAccountBatchConfigurationsListResponse = BatchConfigurationCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BatchConfigurationCollection;
    };
};

/**
 * Contains response data for the get operation.
 */
export type IntegrationAccountBatchConfigurationsGetResponse = BatchConfiguration & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BatchConfiguration;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type IntegrationAccountBatchConfigurationsCreateOrUpdateResponse = BatchConfiguration & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BatchConfiguration;
    };
};

/**
 * Contains response data for the list operation.
 */
export type IntegrationAccountSchemasListResponse = IntegrationAccountSchemaListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IntegrationAccountSchemaListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type IntegrationAccountSchemasGetResponse = IntegrationAccountSchema & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IntegrationAccountSchema;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type IntegrationAccountSchemasCreateOrUpdateResponse = IntegrationAccountSchema & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IntegrationAccountSchema;
    };
};

/**
 * Contains response data for the listContentCallbackUrl operation.
 */
export type IntegrationAccountSchemasListContentCallbackUrlResponse = WorkflowTriggerCallbackUrl & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkflowTriggerCallbackUrl;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type IntegrationAccountSchemasListNextResponse = IntegrationAccountSchemaListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IntegrationAccountSchemaListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type IntegrationAccountMapsListResponse = IntegrationAccountMapListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IntegrationAccountMapListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type IntegrationAccountMapsGetResponse = IntegrationAccountMap & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IntegrationAccountMap;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type IntegrationAccountMapsCreateOrUpdateResponse = IntegrationAccountMap & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IntegrationAccountMap;
    };
};

/**
 * Contains response data for the listContentCallbackUrl operation.
 */
export type IntegrationAccountMapsListContentCallbackUrlResponse = WorkflowTriggerCallbackUrl & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkflowTriggerCallbackUrl;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type IntegrationAccountMapsListNextResponse = IntegrationAccountMapListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IntegrationAccountMapListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type IntegrationAccountPartnersListResponse = IntegrationAccountPartnerListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IntegrationAccountPartnerListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type IntegrationAccountPartnersGetResponse = IntegrationAccountPartner & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IntegrationAccountPartner;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type IntegrationAccountPartnersCreateOrUpdateResponse = IntegrationAccountPartner & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IntegrationAccountPartner;
    };
};

/**
 * Contains response data for the listContentCallbackUrl operation.
 */
export type IntegrationAccountPartnersListContentCallbackUrlResponse = WorkflowTriggerCallbackUrl & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkflowTriggerCallbackUrl;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type IntegrationAccountPartnersListNextResponse = IntegrationAccountPartnerListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IntegrationAccountPartnerListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type IntegrationAccountAgreementsListResponse = IntegrationAccountAgreementListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IntegrationAccountAgreementListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type IntegrationAccountAgreementsGetResponse = IntegrationAccountAgreement & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IntegrationAccountAgreement;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type IntegrationAccountAgreementsCreateOrUpdateResponse = IntegrationAccountAgreement & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IntegrationAccountAgreement;
    };
};

/**
 * Contains response data for the listContentCallbackUrl operation.
 */
export type IntegrationAccountAgreementsListContentCallbackUrlResponse = WorkflowTriggerCallbackUrl & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkflowTriggerCallbackUrl;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type IntegrationAccountAgreementsListNextResponse = IntegrationAccountAgreementListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IntegrationAccountAgreementListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type IntegrationAccountCertificatesListResponse = IntegrationAccountCertificateListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IntegrationAccountCertificateListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type IntegrationAccountCertificatesGetResponse = IntegrationAccountCertificate & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IntegrationAccountCertificate;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type IntegrationAccountCertificatesCreateOrUpdateResponse = IntegrationAccountCertificate & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IntegrationAccountCertificate;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type IntegrationAccountCertificatesListNextResponse = IntegrationAccountCertificateListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IntegrationAccountCertificateListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type IntegrationAccountSessionsListResponse = IntegrationAccountSessionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IntegrationAccountSessionListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type IntegrationAccountSessionsGetResponse = IntegrationAccountSession & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IntegrationAccountSession;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type IntegrationAccountSessionsCreateOrUpdateResponse = IntegrationAccountSession & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IntegrationAccountSession;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type IntegrationAccountSessionsListNextResponse = IntegrationAccountSessionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IntegrationAccountSessionListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type OperationsListNextResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationListResult;
    };
};
