/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { ServiceClientOptions } from "@azure/ms-rest-js";
import * as msRest from "@azure/ms-rest-js";


/**
 * @interface
 * An interface representing IReadOnlyDictionary.
 */
export interface IReadOnlyDictionary {
  /**
   * @member {string[]} [none]
   */
  none?: string[];
  /**
   * @member {string[]} [language] language data information
   */
  language?: string[];
  /**
   * @member {string[]} [acoustic] acoustic data information
   */
  acoustic?: string[];
  /**
   * @member {string[]} [pronunciation] pronunciation data information
   */
  pronunciation?: string[];
  /**
   * @member {string[]} [customVoice] voice data information
   */
  customVoice?: string[];
  /**
   * @member {string[]} [languageGeneration] language information
   */
  languageGeneration?: string[];
}

/**
 * @interface
 * An interface representing Dataset.
 * @summary Dataset
 *
 */
export interface Dataset {
  /**
   * @member {string} id The identifier of this entity
   */
  id: string;
  /**
   * @member {DataImportKind} dataImportKind The kind of the dataset (e.g.
   * acoustic data, language data ...). Possible values include: 'Acoustic',
   * 'Language', 'Pronunciation', 'None', 'CustomVoice', 'LanguageGeneration'
   */
  dataImportKind: DataImportKind;
  /**
   * @member {string} name The name of the object
   */
  name: string;
  /**
   * @member {string} [description] The description of the object
   */
  description?: string;
  /**
   * @member {{ [propertyName: string]: string }} [properties] The custom
   * properties of this entity
   */
  properties?: { [propertyName: string]: string };
  /**
   * @member {string} [locale] The locale of the contained data
   */
  locale?: string;
  /**
   * @member {Date} createdDateTime The time-stamp when the object was created
   */
  createdDateTime: Date;
  /**
   * @member {Date} lastActionDateTime The time-stamp when the current status
   * was entered
   */
  lastActionDateTime: Date;
  /**
   * @member {Status} status The status of the object. Possible values include:
   * 'Succeeded', 'Failed', 'NotStarted', 'Running'
   */
  status: Status;
}

/**
 * @interface
 * An interface representing Model.
 * @summary Model
 *
 */
export interface Model {
  /**
   * @member {string} id The identifier of this entity
   */
  id: string;
  /**
   * @member {Model} [baseModel] The base model used for adaptation
   */
  baseModel?: Model;
  /**
   * @member {Dataset[]} [datasets] Datasets used for adaptation
   */
  datasets?: Dataset[];
  /**
   * @member {ModelKind} modelKind The kind of this model (e.g. acoustic,
   * language ...). Possible values include: 'AcousticAndLanguage', 'None',
   * 'Acoustic', 'Language', 'CustomVoice', 'LanguageGeneration', 'Sentiment',
   * 'LanguageIdentification'
   */
  modelKind: ModelKind;
  /**
   * @member {string} name The name of the object
   */
  name: string;
  /**
   * @member {string} [description] The description of the object
   */
  description?: string;
  /**
   * @member {{ [propertyName: string]: string }} [properties] The custom
   * properties of this entity
   */
  properties?: { [propertyName: string]: string };
  /**
   * @member {string} [locale] The locale of the contained data
   */
  locale?: string;
  /**
   * @member {Date} createdDateTime The time-stamp when the object was created
   */
  createdDateTime: Date;
  /**
   * @member {Date} lastActionDateTime The time-stamp when the current status
   * was entered
   */
  lastActionDateTime: Date;
  /**
   * @member {Status1} status The status of the object. Possible values
   * include: 'Succeeded', 'Failed', 'NotStarted', 'Running'
   */
  status: Status1;
}

/**
 * @interface
 * An interface representing Test.
 * @summary Test
 *
 */
export interface Test {
  /**
   * @member {Dataset} [dataset] Information about the dataset used in the test
   */
  dataset?: Dataset;
  /**
   * @member {string} id The identifier of this entity
   */
  id: string;
  /**
   * @member {number} wordErrorRate The word error rate of the tested model
   */
  wordErrorRate: number;
  /**
   * @member {string} [resultsUrl] The URL that can be used to download the
   * test results.
   * Each line in the file represents a tab separated list of filename,
   * reference transcription and decoder output.
   *
   * The URL will only be valid, if the test completed successfully
   */
  resultsUrl?: string;
  /**
   * @member {Date} createdDateTime The time-stamp when the object was created
   */
  createdDateTime: Date;
  /**
   * @member {Date} lastActionDateTime The time-stamp when the current status
   * was entered
   */
  lastActionDateTime: Date;
  /**
   * @member {Status2} status The status of the object. Possible values
   * include: 'Succeeded', 'Failed', 'NotStarted', 'Running'
   */
  status: Status2;
  /**
   * @member {Model[]} modelsProperty Information about the models used for
   * this accuracy test
   */
  modelsProperty: Model[];
  /**
   * @member {string} name The name of the object
   */
  name: string;
  /**
   * @member {string} [description] The description of the object
   */
  description?: string;
  /**
   * @member {{ [propertyName: string]: string }} [properties] The custom
   * properties of this entity
   */
  properties?: { [propertyName: string]: string };
}

/**
 * @interface
 * An interface representing ErrorDetail.
 * @summary ErrorDetail
 *
 * An array of implementations of this interface can be used as details for an
 * error.
 *
 */
export interface ErrorDetail {
  /**
   * @member {string} code A service-defined error code that should be
   * human-readable.
   * This code serves as a more specific indicator of the error than
   * the HTTP error code specified in the response
   */
  code: string;
  /**
   * @member {string} message A human-readable representation of the error. It
   * is intended as
   * an aid to developers and is not suitable for exposure to end users
   */
  message: string;
  /**
   * @member {string} [target] The target of the particular error (e.g., the
   * name of the property in error)
   */
  target?: string;
}

/**
 * @interface
 * An interface representing InnerError.
 * @summary InnerError
 *
 * An implementation of this interface represents a stage in a stack trace.
 * If the error level is the root, the
 * {Microsoft.SpeechServices.Common.Client.IInnerError.Code} and the
 * {Microsoft.SpeechServices.Common.Client.IInnerError.InnerError}
 * property may be omitted.
 *
 */
export interface InnerError {
  /**
   * @member {string} [code] A service-defined error code that should be
   * human-readable.
   * This code serves as a more specific indicator of the error than
   * the HTTP error code specified in the response
   */
  code?: string;
  /**
   * @member {InnerError} [innererror] A human-readable representation of the
   * error. It is intended as
   * an aid to developers and is not suitable for exposure to end users
   */
  innererror?: InnerError;
}

/**
 * @interface
 * An interface representing ErrorContent.
 * @summary ErrorContent
 *
 * The interface represents the content of an error response defined in the
 * OneAPI v2.1 documentation.
 *
 */
export interface ErrorContent {
  /**
   * @member {ErrorDetail[]} [details] An array of details representing
   * distinct related errors that occurred during the request
   */
  details?: ErrorDetail[];
  /**
   * @member {InnerError} [innererror] The stack trace of the error. The
   * payload is service-defined.
   * If the error is not at the root level, the object contains a Code
   * and an InnerError property
   */
  innererror?: InnerError;
  /**
   * @member {string} code A service-defined error code that should be
   * human-readable.
   * This code serves as a more specific indicator of the error than
   * the HTTP error code specified in the response
   */
  code: string;
  /**
   * @member {string} message A human-readable representation of the error. It
   * is intended as
   * an aid to developers and is not suitable for exposure to end users
   */
  message: string;
  /**
   * @member {string} [target] The target of the particular error (e.g., the
   * name of the property in error)
   */
  target?: string;
}

/**
 * @interface
 * An interface representing DatasetIdentity.
 * @summary DatasetIdentity
 *
 */
export interface DatasetIdentity {
  /**
   * @member {string} id The identifier of this entity
   */
  id: string;
}

/**
 * @interface
 * An interface representing ModelIdentity.
 * @summary ModelIdentity
 *
 */
export interface ModelIdentity {
  /**
   * @member {string} id The identifier of this entity
   */
  id: string;
}

/**
 * @interface
 * An interface representing TestDefinition.
 * @summary TestDefinition
 *
 */
export interface TestDefinition {
  /**
   * @member {DatasetIdentity} dataset Information about the dataset used in
   * the test
   */
  dataset: DatasetIdentity;
  /**
   * @member {ModelIdentity[]} modelsProperty Information about the models used
   * for this accuracy test
   */
  modelsProperty: ModelIdentity[];
  /**
   * @member {string} name The name of the object
   */
  name: string;
  /**
   * @member {string} [description] The description of the object
   */
  description?: string;
  /**
   * @member {{ [propertyName: string]: string }} [properties] The custom
   * properties of this entity
   */
  properties?: { [propertyName: string]: string };
}

/**
 * @interface
 * An interface representing TestUpdate.
 * @summary TestUpdate
 *
 */
export interface TestUpdate {
  /**
   * @member {string} name The name of the object
   */
  name: string;
  /**
   * @member {string} [description] The description of the object
   */
  description?: string;
}

/**
 * @interface
 * An interface representing DatasetUpdate.
 * @summary DatasetUpdate
 *
 */
export interface DatasetUpdate {
  /**
   * @member {string} name The name of the object
   */
  name: string;
  /**
   * @member {string} [description] The description of the object
   */
  description?: string;
}

/**
 * @interface
 * An interface representing Endpoint.
 * @summary Endpoint
 *
 */
export interface Endpoint {
  /**
   * @member {number} [concurrentRecognitions] The number of concurrent
   * recognitions the endpoint supports
   */
  concurrentRecognitions?: number;
  /**
   * @member {string} id The identifier of this entity
   */
  id: string;
  /**
   * @member {EndpointKind} endpointKind The kind of this endpoint (e.g. custom
   * speech, custom voice ...). Possible values include: 'None',
   * 'SpeechRecognition', 'CustomVoice', 'LanguageGeneration',
   * 'LanguageIdentification'
   */
  endpointKind: EndpointKind;
  /**
   * @member {{ [propertyName: string]: string }} endpointUrls The list of
   * endpoint urls
   */
  endpointUrls: { [propertyName: string]: string };
  /**
   * @member {Date} createdDateTime The time-stamp when the object was created
   */
  createdDateTime: Date;
  /**
   * @member {Date} lastActionDateTime The time-stamp when the current status
   * was entered
   */
  lastActionDateTime: Date;
  /**
   * @member {Status3} status The status of the object. Possible values
   * include: 'NotStarted', 'Running', 'Succeeded', 'Failed'
   */
  status: Status3;
  /**
   * @member {Model[]} modelsProperty Information about the deployed models
   */
  modelsProperty: Model[];
  /**
   * @member {boolean} [contentLoggingEnabled] A value indicating whether
   * content logging (audio &amp; transcriptions) is being used for a
   * deployment.
   * Suppressing content logging will result in a higher cost for the
   * deployment.
   * Free subscriptions can only deploy true
   */
  contentLoggingEnabled?: boolean;
  /**
   * @member {string} name The name of the object
   */
  name: string;
  /**
   * @member {string} [description] The description of the object
   */
  description?: string;
  /**
   * @member {{ [propertyName: string]: string }} [properties] The custom
   * properties of this entity
   */
  properties?: { [propertyName: string]: string };
  /**
   * @member {string} [locale] The locale of the contained data
   */
  locale?: string;
}

/**
 * @interface
 * An interface representing SpeechEndpointDefinition.
 * @summary SpeechEndpointDefinition
 *
 */
export interface SpeechEndpointDefinition {
  /**
   * @member {number} [concurrentRecognitions] The number of concurrent
   * recognitions the endpoint supports
   */
  concurrentRecognitions?: number;
  /**
   * @member {ModelIdentity[]} modelsProperty Information about the deployed
   * models
   */
  modelsProperty: ModelIdentity[];
  /**
   * @member {boolean} [contentLoggingEnabled] A value indicating whether
   * content logging (audio &amp; transcriptions) is being used for a
   * deployment.
   * Suppressing content logging will result in a higher cost for the
   * deployment.
   * Free subscriptions can only deploy true
   */
  contentLoggingEnabled?: boolean;
  /**
   * @member {string} name The name of the object
   */
  name: string;
  /**
   * @member {string} [description] The description of the object
   */
  description?: string;
  /**
   * @member {{ [propertyName: string]: string }} [properties] The custom
   * properties of this entity
   */
  properties?: { [propertyName: string]: string };
  /**
   * @member {string} [locale] The locale of the contained data
   */
  locale?: string;
}

/**
 * @interface
 * An interface representing EndpointUpdate.
 * @summary EndpointUpdate
 *
 */
export interface EndpointUpdate {
  /**
   * @member {string} name The name of the object
   */
  name: string;
  /**
   * @member {string} [description] The description of the object
   */
  description?: string;
}

/**
 * @interface
 * An interface representing EndpointData.
 * @summary EndpointData
 *
 */
export interface EndpointData {
  /**
   * @member {string} id The identifier of this entity
   */
  id: string;
  /**
   * @member {string} [dataUrl] The resulting data Url for the model deployment
   */
  dataUrl?: string;
  /**
   * @member {Date} createdDateTime The time-stamp when the object was created
   */
  createdDateTime: Date;
  /**
   * @member {Date} lastActionDateTime The time-stamp when the current status
   * was entered
   */
  lastActionDateTime: Date;
  /**
   * @member {Status4} status The status of the object. Possible values
   * include: 'Succeeded', 'NotStarted', 'Running', 'Failed'
   */
  status: Status4;
  /**
   * @member {Date} startDate The start date of the demplyment data export
   */
  startDate: Date;
  /**
   * @member {Date} endDate The end date of the demplyment data export
   */
  endDate: Date;
}

/**
 * @interface
 * An interface representing EndpointDataDefinition.
 * @summary EndpointDataDefinition
 *
 */
export interface EndpointDataDefinition {
  /**
   * @member {Date} startDate The start date of the demplyment data export
   */
  startDate: Date;
  /**
   * @member {Date} endDate The end date of the demplyment data export
   */
  endDate: Date;
}

/**
 * @interface
 * An interface representing SpeechModelDefinition.
 * @summary SpeechModelDefinition
 *
 */
export interface SpeechModelDefinition {
  /**
   * @member {string} [text] The text used to adapt this language model
   */
  text?: string;
  /**
   * @member {ModelIdentity} [baseModel] The base model used for adaptation
   */
  baseModel?: ModelIdentity;
  /**
   * @member {DatasetIdentity[]} [datasets] Datasets used for adaptation
   */
  datasets?: DatasetIdentity[];
  /**
   * @member {ModelKind1} modelKind The kind of this model (e.g. acoustic,
   * language ...). Possible values include: 'None', 'Acoustic', 'Language',
   * 'AcousticAndLanguage', 'CustomVoice', 'LanguageGeneration', 'Sentiment',
   * 'LanguageIdentification'
   */
  modelKind: ModelKind1;
  /**
   * @member {string} name The name of the object
   */
  name: string;
  /**
   * @member {string} [description] The description of the object
   */
  description?: string;
  /**
   * @member {{ [propertyName: string]: string }} [properties] The custom
   * properties of this entity
   */
  properties?: { [propertyName: string]: string };
  /**
   * @member {string} [locale] The locale of the contained data
   */
  locale?: string;
}

/**
 * @interface
 * An interface representing ModelUpdate.
 * @summary ModelUpdate
 *
 */
export interface ModelUpdate {
  /**
   * @member {string} name The name of the object
   */
  name: string;
  /**
   * @member {string} [description] The description of the object
   */
  description?: string;
}

/**
 * @interface
 * An interface representing WebHookConfigurationSecret.
 * @summary WebHookConfigurationSecret
 *
 */
export interface WebHookConfigurationSecret {
  /**
   * @member {string} [secret] A secret that will be used to create a SHA1 hash
   * of the payload with the secret as HMAC key.
   * This hash will be set as X-MicrosoftSpeechServices-Signature header when
   * calling back into the registered URL
   */
  secret?: string;
}

/**
 * @interface
 * An interface representing WebHookUpdate.
 * @summary WebHookUpdate
 *
 */
export interface WebHookUpdate {
  /**
   * @member {WebHookConfigurationSecret} configuration The configuration of
   * the web hook registration.
   *
   * If the property secret is omitted or contains an empty string in a POST or
   * PATCH request,
   * no signature hash will be calculated.
   *
   * When retrieving web hook registration information from the service, the
   * secret is always omitted
   */
  configuration: WebHookConfigurationSecret;
  /**
   * @member {boolean} active A value indicating whether callbacks to the
   * registered URL are made or not
   */
  active: boolean;
  /**
   * @member {string} name The name of the object
   */
  name: string;
  /**
   * @member {string} [description] The description of the object
   */
  description?: string;
}

/**
 * @interface
 * An interface representing Transcription.
 * @summary Transcription
 *
 */
export interface Transcription {
  /**
   * @member {string} recordingsUrl
   */
  recordingsUrl: string;
  /**
   * @member {string} id The identifier of this entity
   */
  id: string;
  /**
   * @member {Model[]} modelsProperty
   */
  modelsProperty: Model[];
  /**
   * @member {string} [locale] The locale of the contained data
   */
  locale?: string;
  /**
   * @member {{ [propertyName: string]: string }} [resultsUrls] The results
   * Urls for the transcription
   */
  resultsUrls?: { [propertyName: string]: string };
  /**
   * @member {string} [statusMessage] The failure reason for the transcription
   */
  statusMessage?: string;
  /**
   * @member {Date} createdDateTime The time-stamp when the object was created
   */
  createdDateTime: Date;
  /**
   * @member {Date} lastActionDateTime The time-stamp when the current status
   * was entered
   */
  lastActionDateTime: Date;
  /**
   * @member {Status5} status The status of the object. Possible values
   * include: 'Succeeded', 'NotStarted', 'Running', 'Failed'
   */
  status: Status5;
  /**
   * @member {string} name The name of the object
   */
  name: string;
  /**
   * @member {string} [description] The description of the object
   */
  description?: string;
  /**
   * @member {{ [propertyName: string]: string }} [properties] The custom
   * properties of this entity
   */
  properties?: { [propertyName: string]: string };
}

/**
 * @interface
 * An interface representing TranscriptionDefinition.
 * @summary TranscriptionDefinition
 *
 */
export interface TranscriptionDefinition {
  /**
   * @member {string} recordingsUrl
   */
  recordingsUrl: string;
  /**
   * @member {ModelIdentity[]} [modelsProperty]
   */
  modelsProperty?: ModelIdentity[];
  /**
   * @member {string} [locale] The locale of the contained data
   */
  locale?: string;
  /**
   * @member {string} name The name of the object
   */
  name: string;
  /**
   * @member {string} [description] The description of the object
   */
  description?: string;
  /**
   * @member {{ [propertyName: string]: string }} [properties] The custom
   * properties of this entity
   */
  properties?: { [propertyName: string]: string };
}

/**
 * @interface
 * An interface representing TranscriptionUpdate.
 * @summary TranscriptionUpdate
 *
 */
export interface TranscriptionUpdate {
  /**
   * @member {string} name The name of the object
   */
  name: string;
  /**
   * @member {string} [description] The description of the object
   */
  description?: string;
}

/**
 * @interface
 * An interface representing EndpointDefinition.
 * @summary EndpointDefinition
 *
 */
export interface EndpointDefinition {
  /**
   * @member {number} [concurrentRecognitions] The number of concurrent
   * recognitions the endpoint supports
   */
  concurrentRecognitions?: number;
  /**
   * @member {ModelIdentity[]} modelsProperty Information about the deployed
   * models
   */
  modelsProperty: ModelIdentity[];
  /**
   * @member {boolean} [contentLoggingEnabled] A value indicating whether
   * content logging (audio &amp; transcriptions) is being used for a
   * deployment.
   * Suppressing content logging will result in a higher cost for the
   * deployment.
   * Free subscriptions can only deploy true
   */
  contentLoggingEnabled?: boolean;
  /**
   * @member {string} name The name of the object
   */
  name: string;
  /**
   * @member {string} [description] The description of the object
   */
  description?: string;
  /**
   * @member {{ [propertyName: string]: string }} [properties] The custom
   * properties of this entity
   */
  properties?: { [propertyName: string]: string };
  /**
   * @member {string} [locale] The locale of the contained data
   */
  locale?: string;
}

/**
 * @interface
 * An interface representing ModelDefinition.
 * @summary ModelDefinition
 *
 */
export interface ModelDefinition {
  /**
   * @member {string} [text] The text used to adapt this language model
   */
  text?: string;
  /**
   * @member {ModelIdentity} [baseModel] The base model used for adaptation
   */
  baseModel?: ModelIdentity;
  /**
   * @member {DatasetIdentity[]} [datasets] Datasets used for adaptation
   */
  datasets?: DatasetIdentity[];
  /**
   * @member {ModelKind2} modelKind The kind of this model (e.g. acoustic,
   * language ...). Possible values include: 'Acoustic', 'AcousticAndLanguage',
   * 'Language', 'None', 'CustomVoice', 'LanguageGeneration', 'Sentiment',
   * 'LanguageIdentification'
   */
  modelKind: ModelKind2;
  /**
   * @member {string} name The name of the object
   */
  name: string;
  /**
   * @member {string} [description] The description of the object
   */
  description?: string;
  /**
   * @member {{ [propertyName: string]: string }} [properties] The custom
   * properties of this entity
   */
  properties?: { [propertyName: string]: string };
  /**
   * @member {string} [locale] The locale of the contained data
   */
  locale?: string;
}

/**
 * @interface
 * An interface representing Component.
 * @summary Component
 *
 */
export interface Component {
  /**
   * @member {string} [name]
   */
  name?: string;
  /**
   * @member {string} [type]
   */
  type?: string;
  /**
   * @member {Status6} [status] Possible values include: 'Healthy', 'Sick',
   * 'Error'
   */
  status?: Status6;
  /**
   * @member {string} [message]
   */
  message?: string;
}

/**
 * @interface
 * An interface representing HealthStatusResponse.
 * @summary HealthStatusResponse
 *
 */
export interface HealthStatusResponse {
  /**
   * @member {Status7} [status] Possible values include: 'Healthy', 'Sick',
   * 'Error'
   */
  status?: Status7;
  /**
   * @member {string} [message]
   */
  message?: string;
  /**
   * @member {Component[]} [components]
   */
  components?: Component[];
}

/**
 * @interface
 * An interface representing DatasetDefinition.
 * @summary DatasetDefinition
 *
 */
export interface DatasetDefinition {
  /**
   * @member {DataImportKind1} dataImportKind The kind of the dataset (e.g.
   * acoustic data, language data ...). Possible values include: 'None',
   * 'Language', 'Acoustic', 'Pronunciation', 'CustomVoice',
   * 'LanguageGeneration'
   */
  dataImportKind: DataImportKind1;
  /**
   * @member {string} name The name of the object
   */
  name: string;
  /**
   * @member {string} [description] The description of the object
   */
  description?: string;
  /**
   * @member {{ [propertyName: string]: string }} [properties] The custom
   * properties of this entity
   */
  properties?: { [propertyName: string]: string };
  /**
   * @member {string} [locale] The locale of the contained data
   */
  locale?: string;
}

/**
 * @interface
 * An interface representing VoiceTest.
 * @summary VoiceTest
 *
 */
export interface VoiceTest {
  /**
   * @member {string} id The identifier of this entity
   */
  id: string;
  /**
   * @member {string} [audioUri] The audio URI of the voice test
   */
  audioUri?: string;
  /**
   * @member {string} textUri The text URI of the voice test
   */
  textUri: string;
  /**
   * @member {Date} createdDateTime The time-stamp when the object was created
   */
  createdDateTime: Date;
  /**
   * @member {Date} lastActionDateTime The time-stamp when the current status
   * was entered
   */
  lastActionDateTime: Date;
  /**
   * @member {Status8} status The status of the object. Possible values
   * include: 'Succeeded', 'NotStarted', 'Running', 'Failed'
   */
  status: Status8;
  /**
   * @member {Model} model Information about the models used in the voice test
   */
  model: Model;
  /**
   * @member {VoiceTestKind} voiceTestKind The kind of this test (e.g. Text,
   * SSML). Possible values include: 'None', 'Text', 'SSML'
   */
  voiceTestKind: VoiceTestKind;
}

/**
 * @interface
 * An interface representing VoiceTestDefinition.
 * @summary VoiceTestDefinition
 *
 */
export interface VoiceTestDefinition {
  /**
   * @member {string} text Information about the text used in the voice test
   */
  text: string;
  /**
   * @member {ModelIdentity} model Information about the models used in the
   * voice test
   */
  model: ModelIdentity;
  /**
   * @member {VoiceTestKind1} voiceTestKind The kind of this test (e.g. Text,
   * SSML). Possible values include: 'None', 'Text', 'SSML'
   */
  voiceTestKind: VoiceTestKind1;
}

/**
 * @interface
 * An interface representing SpeechServicesAPIv20Options.
 * @extends ServiceClientOptions
 */
export interface SpeechServicesAPIv20Options extends ServiceClientOptions {
  /**
   * @member {string} [baseUri]
   */
  baseUri?: string;
}

/**
 * @interface
 * An interface representing DatasetUploadOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface DatasetUploadOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [name] The name of this data import (always add this
   * string for any import).
   */
  name?: string;
  /**
   * @member {string} [description] Optional description of this data import.
   */
  description?: string;
  /**
   * @member {string} [locale] The locale of this data import (always add this
   * string for any import).
   */
  locale?: string;
  /**
   * @member {DataImportKind2} [dataImportKind] The kind of the data import
   * (always add this string for any import). Possible values include: 'None',
   * 'Language', 'Acoustic', 'Pronunciation', 'CustomVoice',
   * 'LanguageGeneration'
   */
  dataImportKind?: DataImportKind2;
  /**
   * @member {string} [properties] Optional properties of this data import
   * (json serialized object with key/values, where all values must be strings)
   */
  properties?: string;
  /**
   * @member {msRest.HttpRequestBody} [audiodata] A zip file containing the
   * audio data (this and the audio archive file for acoustic data imports).
   */
  audiodata?: msRest.HttpRequestBody;
  /**
   * @member {msRest.HttpRequestBody} [transcriptions] A text file containing
   * the transcriptions for the audio data (this and the transcriptions file
   * for acoustic data imports).
   */
  transcriptions?: msRest.HttpRequestBody;
  /**
   * @member {msRest.HttpRequestBody} [languagedata] A text file containing the
   * language or pronunciation data (only this file for language data imports).
   */
  languagedata?: msRest.HttpRequestBody;
}

/**
 * @interface
 * An interface representing VoiceDatasetUploadOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface VoiceDatasetUploadOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [name] The name of this data import (always add this
   * string for any import).
   */
  name?: string;
  /**
   * @member {string} [description] Optional description of this data import.
   */
  description?: string;
  /**
   * @member {string} [locale] The locale of this data import (always add this
   * string for any import).
   */
  locale?: string;
  /**
   * @member {DataImportKind3} [dataImportKind] The kind of the data import
   * (always add this string for any import). Possible values include: 'None',
   * 'Language', 'Acoustic', 'Pronunciation', 'CustomVoice',
   * 'LanguageGeneration'
   */
  dataImportKind?: DataImportKind3;
  /**
   * @member {string} [properties] Optional properties of this data import
   * (json serialized object with key/values, where all values must be strings)
   */
  properties?: string;
  /**
   * @member {msRest.HttpRequestBody} [audiodata] A zip file containing the
   * audio data.
   */
  audiodata?: msRest.HttpRequestBody;
  /**
   * @member {msRest.HttpRequestBody} [transcriptions] The transcriptions text
   * file of the audio data.
   */
  transcriptions?: msRest.HttpRequestBody;
}

/**
 * @interface
 * An interface representing AccuracyTestsListHeaders.
 * Defines headers for List operation.
 *
 */
export interface AccuracyTestsListHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing AccuracyTestCreateHeaders.
 * Defines headers for Create operation.
 *
 */
export interface AccuracyTestCreateHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing AccuracyTestGetHeaders.
 * Defines headers for Get operation.
 *
 */
export interface AccuracyTestGetHeaders {
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
}

/**
 * @interface
 * An interface representing AccuracyTestDeleteHeaders.
 * Defines headers for Delete operation.
 *
 */
export interface AccuracyTestDeleteHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing AccuracyTestUpdateHeaders.
 * Defines headers for Update operation.
 *
 */
export interface AccuracyTestUpdateHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing DatasetsGetHeaders.
 * Defines headers for Get operation.
 *
 */
export interface DatasetsGetHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing DatasetGetHeaders.
 * Defines headers for Get operation.
 *
 */
export interface DatasetGetHeaders {
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
}

/**
 * @interface
 * An interface representing DatasetDeleteHeaders.
 * Defines headers for Delete operation.
 *
 */
export interface DatasetDeleteHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing DatasetUpdateHeaders.
 * Defines headers for Update operation.
 *
 */
export interface DatasetUpdateHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing SupportedLocalesForDatasetsGetHeaders.
 * Defines headers for Get operation.
 *
 */
export interface SupportedLocalesForDatasetsGetHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing DatasetUploadHeaders.
 * Defines headers for Upload operation.
 *
 */
export interface DatasetUploadHeaders {
  /**
   * @member {string} [location] The URI of the operation.
   */
  location: string;
  /**
   * @member {string} [operationLocation] The URI of the operation.
   */
  operationLocation: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
}

/**
 * @interface
 * An interface representing EndpointsGetHeaders.
 * Defines headers for Get operation.
 *
 */
export interface EndpointsGetHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing EndpointCreateHeaders.
 * Defines headers for Create operation.
 *
 */
export interface EndpointCreateHeaders {
  /**
   * @member {string} [location] The URI of the operation.
   */
  location: string;
  /**
   * @member {string} [operationLocation] The URI of the operation.
   */
  operationLocation: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
}

/**
 * @interface
 * An interface representing EndpointGetHeaders.
 * Defines headers for Get operation.
 *
 */
export interface EndpointGetHeaders {
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
}

/**
 * @interface
 * An interface representing EndpointDeleteHeaders.
 * Defines headers for Delete operation.
 *
 */
export interface EndpointDeleteHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing EndpointUpdateHeaders.
 * Defines headers for Update operation.
 *
 */
export interface EndpointUpdateHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing SupportedLocalesForEndpointsGetHeaders.
 * Defines headers for Get operation.
 *
 */
export interface SupportedLocalesForEndpointsGetHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing EndpointDataExportsGetHeaders.
 * Defines headers for Get operation.
 *
 */
export interface EndpointDataExportsGetHeaders {
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
}

/**
 * @interface
 * An interface representing EndpointDataExportCreateHeaders.
 * Defines headers for Create operation.
 *
 */
export interface EndpointDataExportCreateHeaders {
  /**
   * @member {string} [location] The URI of the operation.
   */
  location: string;
  /**
   * @member {string} [operationLocation] The URI of the operation.
   */
  operationLocation: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
}

/**
 * @interface
 * An interface representing EndpointDataDeleteHeaders.
 * Defines headers for Delete operation.
 *
 */
export interface EndpointDataDeleteHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing EndpointDataExportGetHeaders.
 * Defines headers for Get operation.
 *
 */
export interface EndpointDataExportGetHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing EndpointDataExportDeleteHeaders.
 * Defines headers for Delete operation.
 *
 */
export interface EndpointDataExportDeleteHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing ModelsGetHeaders.
 * Defines headers for Get operation.
 *
 */
export interface ModelsGetHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing ModelCreateHeaders.
 * Defines headers for Create operation.
 *
 */
export interface ModelCreateHeaders {
  /**
   * @member {string} [location] The URI of the operation.
   */
  location: string;
  /**
   * @member {string} [operationLocation] The URI of the operation.
   */
  operationLocation: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
}

/**
 * @interface
 * An interface representing ModelGetHeaders.
 * Defines headers for Get operation.
 *
 */
export interface ModelGetHeaders {
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
}

/**
 * @interface
 * An interface representing ModelDeleteHeaders.
 * Defines headers for Delete operation.
 *
 */
export interface ModelDeleteHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing ModelUpdateHeaders.
 * Defines headers for Update operation.
 *
 */
export interface ModelUpdateHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing SupportedLocalesForModelsGetHeaders.
 * Defines headers for Get operation.
 *
 */
export interface SupportedLocalesForModelsGetHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing TranscriptionsGetHeaders.
 * Defines headers for Get operation.
 *
 */
export interface TranscriptionsGetHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing TranscriptionCreateHeaders.
 * Defines headers for Create operation.
 *
 */
export interface TranscriptionCreateHeaders {
  /**
   * @member {string} [location] The URI of the operation.
   */
  location: string;
  /**
   * @member {string} [operationLocation] The URI of the operation.
   */
  operationLocation: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
}

/**
 * @interface
 * An interface representing TranscriptionGetHeaders.
 * Defines headers for Get operation.
 *
 */
export interface TranscriptionGetHeaders {
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
}

/**
 * @interface
 * An interface representing TranscriptionDeleteHeaders.
 * Defines headers for Delete operation.
 *
 */
export interface TranscriptionDeleteHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing TranscriptionUpdateHeaders.
 * Defines headers for Update operation.
 *
 */
export interface TranscriptionUpdateHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing SupportedLocalesForTranscriptionsGetHeaders.
 * Defines headers for Get operation.
 *
 */
export interface SupportedLocalesForTranscriptionsGetHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing LanguageGenerationEndpointsGetHeaders.
 * Defines headers for Get operation.
 *
 */
export interface LanguageGenerationEndpointsGetHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing LanguageGenerationEndpointCreateHeaders.
 * Defines headers for Create operation.
 *
 */
export interface LanguageGenerationEndpointCreateHeaders {
  /**
   * @member {string} [location] The URI of the operation.
   */
  location: string;
  /**
   * @member {string} [operationLocation] The URI of the operation.
   */
  operationLocation: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
}

/**
 * @interface
 * An interface representing LanguageGenerationEndpointGetHeaders.
 * Defines headers for Get operation.
 *
 */
export interface LanguageGenerationEndpointGetHeaders {
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
}

/**
 * @interface
 * An interface representing LanguageGenerationEndpointDeleteHeaders.
 * Defines headers for Delete operation.
 *
 */
export interface LanguageGenerationEndpointDeleteHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing LanguageGenerationEndpointUpdateHeaders.
 * Defines headers for Update operation.
 *
 */
export interface LanguageGenerationEndpointUpdateHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing SupportedLocalesForLanguageGenerationEndpointsGetHeaders.
 * Defines headers for Get operation.
 *
 */
export interface SupportedLocalesForLanguageGenerationEndpointsGetHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing LanguageGenerationModelsGetHeaders.
 * Defines headers for Get operation.
 *
 */
export interface LanguageGenerationModelsGetHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing LanguageGenerationModelCreateHeaders.
 * Defines headers for Create operation.
 *
 */
export interface LanguageGenerationModelCreateHeaders {
  /**
   * @member {string} [location] The URI of the operation.
   */
  location: string;
  /**
   * @member {string} [operationLocation] The URI of the operation.
   */
  operationLocation: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
}

/**
 * @interface
 * An interface representing LanguageGenerationModelGetHeaders.
 * Defines headers for Get operation.
 *
 */
export interface LanguageGenerationModelGetHeaders {
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
}

/**
 * @interface
 * An interface representing LanguageGenerationModelDeleteHeaders.
 * Defines headers for Delete operation.
 *
 */
export interface LanguageGenerationModelDeleteHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing LanguageGenerationModelUpdateHeaders.
 * Defines headers for Update operation.
 *
 */
export interface LanguageGenerationModelUpdateHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing SupportedLocalesForLanguageGenerationModelsGetHeaders.
 * Defines headers for Get operation.
 *
 */
export interface SupportedLocalesForLanguageGenerationModelsGetHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing HealthStatusGetHeaders.
 * Defines headers for Get operation.
 *
 */
export interface HealthStatusGetHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
}

/**
 * @interface
 * An interface representing VoiceDatasetsGetHeaders.
 * Defines headers for Get operation.
 *
 */
export interface VoiceDatasetsGetHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing SupportedLocalesForVoiceDatasetsGetHeaders.
 * Defines headers for Get operation.
 *
 */
export interface SupportedLocalesForVoiceDatasetsGetHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing VoiceDatasetUploadHeaders.
 * Defines headers for Upload operation.
 *
 */
export interface VoiceDatasetUploadHeaders {
  /**
   * @member {string} [location] The URI of the operation.
   */
  location: string;
  /**
   * @member {string} [operationLocation] The URI of the operation.
   */
  operationLocation: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
}

/**
 * @interface
 * An interface representing VoiceDatasetDeleteHeaders.
 * Defines headers for Delete operation.
 *
 */
export interface VoiceDatasetDeleteHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing VoiceDatasetUpdateHeaders.
 * Defines headers for Update operation.
 *
 */
export interface VoiceDatasetUpdateHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing VoiceDeploymentsGetHeaders.
 * Defines headers for Get operation.
 *
 */
export interface VoiceDeploymentsGetHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing VoiceDeploymentCreateHeaders.
 * Defines headers for Create operation.
 *
 */
export interface VoiceDeploymentCreateHeaders {
  /**
   * @member {string} [location] The URI of the operation.
   */
  location: string;
  /**
   * @member {string} [operationLocation] The URI of the operation.
   */
  operationLocation: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
}

/**
 * @interface
 * An interface representing VoiceDeploymentGetHeaders.
 * Defines headers for Get operation.
 *
 */
export interface VoiceDeploymentGetHeaders {
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
}

/**
 * @interface
 * An interface representing DeploymentDeleteHeaders.
 * Defines headers for Delete operation.
 *
 */
export interface DeploymentDeleteHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing VoiceEndpointUpdateHeaders.
 * Defines headers for Update operation.
 *
 */
export interface VoiceEndpointUpdateHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing SupportedLocalesForVoiceEndpointsGetHeaders.
 * Defines headers for Get operation.
 *
 */
export interface SupportedLocalesForVoiceEndpointsGetHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing VoiceModelsGetHeaders.
 * Defines headers for Get operation.
 *
 */
export interface VoiceModelsGetHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing VoiceModelCreateHeaders.
 * Defines headers for Create operation.
 *
 */
export interface VoiceModelCreateHeaders {
  /**
   * @member {string} [location] The URI of the operation.
   */
  location: string;
  /**
   * @member {string} [operationLocation] The URI of the operation.
   */
  operationLocation: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
}

/**
 * @interface
 * An interface representing VoiceModelGetHeaders.
 * Defines headers for Get operation.
 *
 */
export interface VoiceModelGetHeaders {
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
}

/**
 * @interface
 * An interface representing VoiceModelDeleteHeaders.
 * Defines headers for Delete operation.
 *
 */
export interface VoiceModelDeleteHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing VoiceModelUpdateHeaders.
 * Defines headers for Update operation.
 *
 */
export interface VoiceModelUpdateHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing SupportedLocalesForVoiceModelsGetHeaders.
 * Defines headers for Get operation.
 *
 */
export interface SupportedLocalesForVoiceModelsGetHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing VoiceTestGetHeaders.
 * Defines headers for Get operation.
 *
 */
export interface VoiceTestGetHeaders {
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
}

/**
 * @interface
 * An interface representing VoiceTestDeleteHeaders.
 * Defines headers for Delete operation.
 *
 */
export interface VoiceTestDeleteHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing VoiceTestCreateHeaders.
 * Defines headers for Create operation.
 *
 */
export interface VoiceTestCreateHeaders {
  /**
   * @member {string} [location] The URI of the operation.
   */
  location: string;
  /**
   * @member {string} [operationLocation] The URI of the operation.
   */
  operationLocation: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
}

/**
 * Defines values for DataImportKind.
 * Possible values include: 'Acoustic', 'Language', 'Pronunciation', 'None', 'CustomVoice',
 * 'LanguageGeneration'
 * @readonly
 * @enum {string}
 */
export type DataImportKind = 'Acoustic' | 'Language' | 'Pronunciation' | 'None' | 'CustomVoice' | 'LanguageGeneration';

/**
 * Defines values for Status.
 * Possible values include: 'Succeeded', 'Failed', 'NotStarted', 'Running'
 * @readonly
 * @enum {string}
 */
export type Status = 'Succeeded' | 'Failed' | 'NotStarted' | 'Running';

/**
 * Defines values for ModelKind.
 * Possible values include: 'AcousticAndLanguage', 'None', 'Acoustic', 'Language', 'CustomVoice',
 * 'LanguageGeneration', 'Sentiment', 'LanguageIdentification'
 * @readonly
 * @enum {string}
 */
export type ModelKind = 'AcousticAndLanguage' | 'None' | 'Acoustic' | 'Language' | 'CustomVoice' | 'LanguageGeneration' | 'Sentiment' | 'LanguageIdentification';

/**
 * Defines values for Status1.
 * Possible values include: 'Succeeded', 'Failed', 'NotStarted', 'Running'
 * @readonly
 * @enum {string}
 */
export type Status1 = 'Succeeded' | 'Failed' | 'NotStarted' | 'Running';

/**
 * Defines values for Status2.
 * Possible values include: 'Succeeded', 'Failed', 'NotStarted', 'Running'
 * @readonly
 * @enum {string}
 */
export type Status2 = 'Succeeded' | 'Failed' | 'NotStarted' | 'Running';

/**
 * Defines values for EndpointKind.
 * Possible values include: 'None', 'SpeechRecognition', 'CustomVoice', 'LanguageGeneration',
 * 'LanguageIdentification'
 * @readonly
 * @enum {string}
 */
export type EndpointKind = 'None' | 'SpeechRecognition' | 'CustomVoice' | 'LanguageGeneration' | 'LanguageIdentification';

/**
 * Defines values for Status3.
 * Possible values include: 'NotStarted', 'Running', 'Succeeded', 'Failed'
 * @readonly
 * @enum {string}
 */
export type Status3 = 'NotStarted' | 'Running' | 'Succeeded' | 'Failed';

/**
 * Defines values for Status4.
 * Possible values include: 'Succeeded', 'NotStarted', 'Running', 'Failed'
 * @readonly
 * @enum {string}
 */
export type Status4 = 'Succeeded' | 'NotStarted' | 'Running' | 'Failed';

/**
 * Defines values for ModelKind1.
 * Possible values include: 'None', 'Acoustic', 'Language', 'AcousticAndLanguage', 'CustomVoice',
 * 'LanguageGeneration', 'Sentiment', 'LanguageIdentification'
 * @readonly
 * @enum {string}
 */
export type ModelKind1 = 'None' | 'Acoustic' | 'Language' | 'AcousticAndLanguage' | 'CustomVoice' | 'LanguageGeneration' | 'Sentiment' | 'LanguageIdentification';

/**
 * Defines values for Status5.
 * Possible values include: 'Succeeded', 'NotStarted', 'Running', 'Failed'
 * @readonly
 * @enum {string}
 */
export type Status5 = 'Succeeded' | 'NotStarted' | 'Running' | 'Failed';

/**
 * Defines values for ModelKind2.
 * Possible values include: 'Acoustic', 'AcousticAndLanguage', 'Language', 'None', 'CustomVoice',
 * 'LanguageGeneration', 'Sentiment', 'LanguageIdentification'
 * @readonly
 * @enum {string}
 */
export type ModelKind2 = 'Acoustic' | 'AcousticAndLanguage' | 'Language' | 'None' | 'CustomVoice' | 'LanguageGeneration' | 'Sentiment' | 'LanguageIdentification';

/**
 * Defines values for Status6.
 * Possible values include: 'Healthy', 'Sick', 'Error'
 * @readonly
 * @enum {string}
 */
export type Status6 = 'Healthy' | 'Sick' | 'Error';

/**
 * Defines values for Status7.
 * Possible values include: 'Healthy', 'Sick', 'Error'
 * @readonly
 * @enum {string}
 */
export type Status7 = 'Healthy' | 'Sick' | 'Error';

/**
 * Defines values for DataImportKind1.
 * Possible values include: 'None', 'Language', 'Acoustic', 'Pronunciation', 'CustomVoice',
 * 'LanguageGeneration'
 * @readonly
 * @enum {string}
 */
export type DataImportKind1 = 'None' | 'Language' | 'Acoustic' | 'Pronunciation' | 'CustomVoice' | 'LanguageGeneration';

/**
 * Defines values for Status8.
 * Possible values include: 'Succeeded', 'NotStarted', 'Running', 'Failed'
 * @readonly
 * @enum {string}
 */
export type Status8 = 'Succeeded' | 'NotStarted' | 'Running' | 'Failed';

/**
 * Defines values for VoiceTestKind.
 * Possible values include: 'None', 'Text', 'SSML'
 * @readonly
 * @enum {string}
 */
export type VoiceTestKind = 'None' | 'Text' | 'SSML';

/**
 * Defines values for VoiceTestKind1.
 * Possible values include: 'None', 'Text', 'SSML'
 * @readonly
 * @enum {string}
 */
export type VoiceTestKind1 = 'None' | 'Text' | 'SSML';

/**
 * Defines values for DataImportKind2.
 * Possible values include: 'None', 'Language', 'Acoustic', 'Pronunciation', 'CustomVoice',
 * 'LanguageGeneration'
 * @readonly
 * @enum {string}
 */
export type DataImportKind2 = 'None' | 'Language' | 'Acoustic' | 'Pronunciation' | 'CustomVoice' | 'LanguageGeneration';

/**
 * Defines values for DataImportKind3.
 * Possible values include: 'None', 'Language', 'Acoustic', 'Pronunciation', 'CustomVoice',
 * 'LanguageGeneration'
 * @readonly
 * @enum {string}
 */
export type DataImportKind3 = 'None' | 'Language' | 'Acoustic' | 'Pronunciation' | 'CustomVoice' | 'LanguageGeneration';

/**
 * Contains response data for the list operation.
 */
export type AccuracyTestsListResponse = AccuracyTestsListHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: AccuracyTestsListHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the create operation.
 */
export type AccuracyTestCreateResponse = ErrorContent & AccuracyTestCreateHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: AccuracyTestCreateHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ErrorContent;
    };
};

/**
 * Contains response data for the get operation.
 */
export type AccuracyTestGetResponse = AccuracyTestGetHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: AccuracyTestGetHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the deleteMethod operation.
 */
export type AccuracyTestDeleteResponse = ErrorContent & AccuracyTestDeleteHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: AccuracyTestDeleteHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ErrorContent;
    };
};

/**
 * Contains response data for the update operation.
 */
export type AccuracyTestUpdateResponse = AccuracyTestUpdateHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: AccuracyTestUpdateHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the get operation.
 */
export type DatasetsGetResponse = DatasetsGetHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: DatasetsGetHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the get operation.
 */
export type DatasetGetResponse = DatasetGetHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: DatasetGetHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the deleteMethod operation.
 */
export type DatasetDeleteResponse = ErrorContent & DatasetDeleteHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: DatasetDeleteHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ErrorContent;
    };
};

/**
 * Contains response data for the update operation.
 */
export type DatasetUpdateResponse = DatasetUpdateHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: DatasetUpdateHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the upload operation.
 */
export type DatasetUploadResponse = ErrorContent & DatasetUploadHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: DatasetUploadHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ErrorContent;
    };
};

/**
 * Contains response data for the get operation.
 */
export type SupportedLocalesForDatasetsGetResponse = SupportedLocalesForDatasetsGetHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: SupportedLocalesForDatasetsGetHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the get operation.
 */
export type EndpointsGetResponse = EndpointsGetHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: EndpointsGetHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the create operation.
 */
export type EndpointCreateResponse = ErrorContent & EndpointCreateHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: EndpointCreateHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ErrorContent;
    };
};

/**
 * Contains response data for the get operation.
 */
export type EndpointGetResponse = EndpointGetHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: EndpointGetHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the deleteMethod operation.
 */
export type EndpointDeleteResponse = ErrorContent & EndpointDeleteHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: EndpointDeleteHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ErrorContent;
    };
};

/**
 * Contains response data for the update operation.
 */
export type EndpointUpdateResponse = EndpointUpdateHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: EndpointUpdateHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the get operation.
 */
export type SupportedLocalesForEndpointsGetResponse = SupportedLocalesForEndpointsGetHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: SupportedLocalesForEndpointsGetHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the get operation.
 */
export type EndpointDataExportsGetResponse = EndpointDataExportsGetHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: EndpointDataExportsGetHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the create operation.
 */
export type EndpointDataExportCreateResponse = ErrorContent & EndpointDataExportCreateHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: EndpointDataExportCreateHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ErrorContent;
    };
};

/**
 * Contains response data for the get operation.
 */
export type EndpointDataExportGetResponse = EndpointDataExportGetHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: EndpointDataExportGetHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the deleteMethod operation.
 */
export type EndpointDataExportDeleteResponse = ErrorContent & EndpointDataExportDeleteHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: EndpointDataExportDeleteHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ErrorContent;
    };
};

/**
 * Contains response data for the deleteMethod operation.
 */
export type EndpointDataDeleteResponse = ErrorContent & EndpointDataDeleteHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: EndpointDataDeleteHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ErrorContent;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ModelsGetResponse = ModelsGetHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ModelsGetHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the create operation.
 */
export type ModelCreateResponse = ErrorContent & ModelCreateHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ModelCreateHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ErrorContent;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ModelGetResponse = ModelGetHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ModelGetHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the deleteMethod operation.
 */
export type ModelDeleteResponse = ErrorContent & ModelDeleteHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ModelDeleteHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ErrorContent;
    };
};

/**
 * Contains response data for the update operation.
 */
export type ModelUpdateResponse = ModelUpdateHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ModelUpdateHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the get operation.
 */
export type SupportedLocalesForModelsGetResponse = SupportedLocalesForModelsGetHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: SupportedLocalesForModelsGetHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the get operation.
 */
export type TranscriptionsGetResponse = TranscriptionsGetHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: TranscriptionsGetHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the create operation.
 */
export type TranscriptionCreateResponse = ErrorContent & TranscriptionCreateHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: TranscriptionCreateHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ErrorContent;
    };
};

/**
 * Contains response data for the get operation.
 */
export type TranscriptionGetResponse = TranscriptionGetHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: TranscriptionGetHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the deleteMethod operation.
 */
export type TranscriptionDeleteResponse = ErrorContent & TranscriptionDeleteHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: TranscriptionDeleteHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ErrorContent;
    };
};

/**
 * Contains response data for the update operation.
 */
export type TranscriptionUpdateResponse = TranscriptionUpdateHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: TranscriptionUpdateHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the get operation.
 */
export type SupportedLocalesForTranscriptionsGetResponse = SupportedLocalesForTranscriptionsGetHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: SupportedLocalesForTranscriptionsGetHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the get operation.
 */
export type LanguageGenerationEndpointsGetResponse = LanguageGenerationEndpointsGetHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LanguageGenerationEndpointsGetHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the create operation.
 */
export type LanguageGenerationEndpointCreateResponse = ErrorContent & LanguageGenerationEndpointCreateHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LanguageGenerationEndpointCreateHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ErrorContent;
    };
};

/**
 * Contains response data for the get operation.
 */
export type LanguageGenerationEndpointGetResponse = LanguageGenerationEndpointGetHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LanguageGenerationEndpointGetHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the deleteMethod operation.
 */
export type LanguageGenerationEndpointDeleteResponse = ErrorContent & LanguageGenerationEndpointDeleteHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LanguageGenerationEndpointDeleteHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ErrorContent;
    };
};

/**
 * Contains response data for the update operation.
 */
export type LanguageGenerationEndpointUpdateResponse = LanguageGenerationEndpointUpdateHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LanguageGenerationEndpointUpdateHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the get operation.
 */
export type SupportedLocalesForLanguageGenerationEndpointsGetResponse = SupportedLocalesForLanguageGenerationEndpointsGetHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: SupportedLocalesForLanguageGenerationEndpointsGetHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the get operation.
 */
export type LanguageGenerationModelsGetResponse = LanguageGenerationModelsGetHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LanguageGenerationModelsGetHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the create operation.
 */
export type LanguageGenerationModelCreateResponse = ErrorContent & LanguageGenerationModelCreateHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LanguageGenerationModelCreateHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ErrorContent;
    };
};

/**
 * Contains response data for the get operation.
 */
export type LanguageGenerationModelGetResponse = LanguageGenerationModelGetHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LanguageGenerationModelGetHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the deleteMethod operation.
 */
export type LanguageGenerationModelDeleteResponse = ErrorContent & LanguageGenerationModelDeleteHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LanguageGenerationModelDeleteHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ErrorContent;
    };
};

/**
 * Contains response data for the update operation.
 */
export type LanguageGenerationModelUpdateResponse = LanguageGenerationModelUpdateHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LanguageGenerationModelUpdateHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the get operation.
 */
export type SupportedLocalesForLanguageGenerationModelsGetResponse = SupportedLocalesForLanguageGenerationModelsGetHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: SupportedLocalesForLanguageGenerationModelsGetHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the get operation.
 */
export type HealthStatusGetResponse = HealthStatusResponse & HealthStatusGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: HealthStatusGetHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HealthStatusResponse;
    };
};

/**
 * Contains response data for the get operation.
 */
export type VoiceDatasetsGetResponse = VoiceDatasetsGetHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: VoiceDatasetsGetHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the get operation.
 */
export type SupportedLocalesForVoiceDatasetsGetResponse = SupportedLocalesForVoiceDatasetsGetHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: SupportedLocalesForVoiceDatasetsGetHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the upload operation.
 */
export type VoiceDatasetUploadResponse = ErrorContent & VoiceDatasetUploadHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: VoiceDatasetUploadHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ErrorContent;
    };
};

/**
 * Contains response data for the deleteMethod operation.
 */
export type VoiceDatasetDeleteResponse = ErrorContent & VoiceDatasetDeleteHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: VoiceDatasetDeleteHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ErrorContent;
    };
};

/**
 * Contains response data for the update operation.
 */
export type VoiceDatasetUpdateResponse = VoiceDatasetUpdateHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: VoiceDatasetUpdateHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the get operation.
 */
export type VoiceDeploymentsGetResponse = VoiceDeploymentsGetHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: VoiceDeploymentsGetHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the create operation.
 */
export type VoiceDeploymentCreateResponse = ErrorContent & VoiceDeploymentCreateHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: VoiceDeploymentCreateHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ErrorContent;
    };
};

/**
 * Contains response data for the get operation.
 */
export type VoiceDeploymentGetResponse = VoiceDeploymentGetHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: VoiceDeploymentGetHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the deleteMethod operation.
 */
export type DeploymentDeleteResponse = ErrorContent & DeploymentDeleteHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: DeploymentDeleteHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ErrorContent;
    };
};

/**
 * Contains response data for the update operation.
 */
export type VoiceEndpointUpdateResponse = VoiceEndpointUpdateHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: VoiceEndpointUpdateHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the get operation.
 */
export type SupportedLocalesForVoiceEndpointsGetResponse = SupportedLocalesForVoiceEndpointsGetHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: SupportedLocalesForVoiceEndpointsGetHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the get operation.
 */
export type VoiceModelsGetResponse = VoiceModelsGetHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: VoiceModelsGetHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the create operation.
 */
export type VoiceModelCreateResponse = ErrorContent & VoiceModelCreateHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: VoiceModelCreateHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ErrorContent;
    };
};

/**
 * Contains response data for the get operation.
 */
export type VoiceModelGetResponse = VoiceModelGetHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: VoiceModelGetHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the deleteMethod operation.
 */
export type VoiceModelDeleteResponse = ErrorContent & VoiceModelDeleteHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: VoiceModelDeleteHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ErrorContent;
    };
};

/**
 * Contains response data for the update operation.
 */
export type VoiceModelUpdateResponse = VoiceModelUpdateHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: VoiceModelUpdateHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the get operation.
 */
export type SupportedLocalesForVoiceModelsGetResponse = SupportedLocalesForVoiceModelsGetHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: SupportedLocalesForVoiceModelsGetHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the get operation.
 */
export type VoiceTestGetResponse = VoiceTestGetHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: VoiceTestGetHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the deleteMethod operation.
 */
export type VoiceTestDeleteResponse = ErrorContent & VoiceTestDeleteHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: VoiceTestDeleteHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ErrorContent;
    };
};

/**
 * Contains response data for the create operation.
 */
export type VoiceTestCreateResponse = ErrorContent & VoiceTestCreateHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: VoiceTestCreateHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ErrorContent;
    };
};
