/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { ServiceClientOptions } from "@azure/ms-rest-js";
import * as msRest from "@azure/ms-rest-js";


/**
 * @interface
 * An interface representing Dataset.
 * @summary Dataset
 *
 */
export interface Dataset {
  /**
   * @member {string} id The identifier of this entity
   */
  id: string;
  /**
   * @member {DataImportKind} dataImportKind The kind of the dataset (e.g.
   * acoustic data, language data ...). Possible values include: 'Acoustic',
   * 'Language', 'Pronunciation', 'None', 'CustomVoice', 'LanguageGeneration'
   */
  dataImportKind: DataImportKind;
  /**
   * @member {string} name The name of the object
   */
  name: string;
  /**
   * @member {string} [description] The description of the object
   */
  description?: string;
  /**
   * @member {{ [propertyName: string]: string }} [properties] The custom
   * properties of this entity
   */
  properties?: { [propertyName: string]: string };
  /**
   * @member {string} [locale] The locale of the contained data
   */
  locale?: string;
  /**
   * @member {Date} createdDateTime The time-stamp when the object was created
   */
  createdDateTime: Date;
  /**
   * @member {Date} lastActionDateTime The time-stamp when the current status
   * was entered
   */
  lastActionDateTime: Date;
  /**
   * @member {Status} status The status of the object. Possible values include:
   * 'Succeeded', 'Failed', 'NotStarted', 'Running'
   */
  status: Status;
}

/**
 * @interface
 * An interface representing Model.
 * @summary Model
 *
 */
export interface Model {
  /**
   * @member {string} id The identifier of this entity
   */
  id: string;
  /**
   * @member {Model} [baseModel] The base model used for adaptation
   */
  baseModel?: Model;
  /**
   * @member {Dataset[]} [datasets] Datasets used for adaptation
   */
  datasets?: Dataset[];
  /**
   * @member {ModelKind} modelKind The kind of this model (e.g. acoustic,
   * language ...). Possible values include: 'AcousticAndLanguage', 'None',
   * 'Acoustic', 'Language', 'CustomVoice', 'LanguageGeneration', 'Sentiment',
   * 'LanguageIdentification'
   */
  modelKind: ModelKind;
  /**
   * @member {string} name The name of the object
   */
  name: string;
  /**
   * @member {string} [description] The description of the object
   */
  description?: string;
  /**
   * @member {{ [propertyName: string]: string }} [properties] The custom
   * properties of this entity
   */
  properties?: { [propertyName: string]: string };
  /**
   * @member {string} [locale] The locale of the contained data
   */
  locale?: string;
  /**
   * @member {Date} createdDateTime The time-stamp when the object was created
   */
  createdDateTime: Date;
  /**
   * @member {Date} lastActionDateTime The time-stamp when the current status
   * was entered
   */
  lastActionDateTime: Date;
  /**
   * @member {Status1} status The status of the object. Possible values
   * include: 'Succeeded', 'Failed', 'NotStarted', 'Running'
   */
  status: Status1;
}

/**
 * @interface
 * An interface representing Test.
 * @summary Test
 *
 */
export interface Test {
  /**
   * @member {Dataset} [dataset] Information about the dataset used in the test
   */
  dataset?: Dataset;
  /**
   * @member {string} id The identifier of this entity
   */
  id: string;
  /**
   * @member {number} wordErrorRate The word error rate of the tested model
   */
  wordErrorRate: number;
  /**
   * @member {string} [resultsUrl] The URL that can be used to download the
   * test results.
   * Each line in the file represents a tab separated list of filename,
   * reference transcription and decoder output.
   *
   * The URL will only be valid, if the test completed successfully
   */
  resultsUrl?: string;
  /**
   * @member {Date} createdDateTime The time-stamp when the object was created
   */
  createdDateTime: Date;
  /**
   * @member {Date} lastActionDateTime The time-stamp when the current status
   * was entered
   */
  lastActionDateTime: Date;
  /**
   * @member {Status2} status The status of the object. Possible values
   * include: 'Succeeded', 'Failed', 'NotStarted', 'Running'
   */
  status: Status2;
  /**
   * @member {Model[]} modelsProperty Information about the models used for
   * this accuracy test
   */
  modelsProperty: Model[];
  /**
   * @member {string} name The name of the object
   */
  name: string;
  /**
   * @member {string} [description] The description of the object
   */
  description?: string;
  /**
   * @member {{ [propertyName: string]: string }} [properties] The custom
   * properties of this entity
   */
  properties?: { [propertyName: string]: string };
}

/**
 * @interface
 * An interface representing ErrorDetail.
 * @summary ErrorDetail
 *
 * An array of implementations of this interface can be used as details for an
 * error.
 *
 */
export interface ErrorDetail {
  /**
   * @member {string} code A service-defined error code that should be
   * human-readable.
   * This code serves as a more specific indicator of the error than
   * the HTTP error code specified in the response
   */
  code: string;
  /**
   * @member {string} message A human-readable representation of the error. It
   * is intended as
   * an aid to developers and is not suitable for exposure to end users
   */
  message: string;
  /**
   * @member {string} [target] The target of the particular error (e.g., the
   * name of the property in error)
   */
  target?: string;
}

/**
 * @interface
 * An interface representing InnerError.
 * @summary InnerError
 *
 * An implementation of this interface represents a stage in a stack trace.
 * If the error level is the root, the
 * {Microsoft.SpeechServices.Common.Client.IInnerError.Code} and the
 * {Microsoft.SpeechServices.Common.Client.IInnerError.InnerError}
 * property may be omitted.
 *
 */
export interface InnerError {
  /**
   * @member {string} [code] A service-defined error code that should be
   * human-readable.
   * This code serves as a more specific indicator of the error than
   * the HTTP error code specified in the response
   */
  code?: string;
  /**
   * @member {InnerError} [innererror] A human-readable representation of the
   * error. It is intended as
   * an aid to developers and is not suitable for exposure to end users
   */
  innererror?: InnerError;
}

/**
 * @interface
 * An interface representing ErrorContent.
 * @summary ErrorContent
 *
 * The interface represents the content of an error response defined in the
 * OneAPI v2.1 documentation.
 *
 */
export interface ErrorContent {
  /**
   * @member {ErrorDetail[]} [details] An array of details representing
   * distinct related errors that occurred during the request
   */
  details?: ErrorDetail[];
  /**
   * @member {InnerError} [innererror] The stack trace of the error. The
   * payload is service-defined.
   * If the error is not at the root level, the object contains a Code
   * and an InnerError property
   */
  innererror?: InnerError;
  /**
   * @member {string} code A service-defined error code that should be
   * human-readable.
   * This code serves as a more specific indicator of the error than
   * the HTTP error code specified in the response
   */
  code: string;
  /**
   * @member {string} message A human-readable representation of the error. It
   * is intended as
   * an aid to developers and is not suitable for exposure to end users
   */
  message: string;
  /**
   * @member {string} [target] The target of the particular error (e.g., the
   * name of the property in error)
   */
  target?: string;
}

/**
 * @interface
 * An interface representing DatasetIdentity.
 * @summary DatasetIdentity
 *
 */
export interface DatasetIdentity {
  /**
   * @member {string} id The identifier of this entity
   */
  id: string;
}

/**
 * @interface
 * An interface representing ModelIdentity.
 * @summary ModelIdentity
 *
 */
export interface ModelIdentity {
  /**
   * @member {string} id The identifier of this entity
   */
  id: string;
}

/**
 * @interface
 * An interface representing TestDefinition.
 * @summary TestDefinition
 *
 */
export interface TestDefinition {
  /**
   * @member {DatasetIdentity} dataset Information about the dataset used in
   * the test
   */
  dataset: DatasetIdentity;
  /**
   * @member {ModelIdentity[]} modelsProperty Information about the models used
   * for this accuracy test
   */
  modelsProperty: ModelIdentity[];
  /**
   * @member {string} name The name of the object
   */
  name: string;
  /**
   * @member {string} [description] The description of the object
   */
  description?: string;
  /**
   * @member {{ [propertyName: string]: string }} [properties] The custom
   * properties of this entity
   */
  properties?: { [propertyName: string]: string };
}

/**
 * @interface
 * An interface representing TestUpdate.
 * @summary TestUpdate
 *
 */
export interface TestUpdate {
  /**
   * @member {string} name The name of the object
   */
  name: string;
  /**
   * @member {string} [description] The description of the object
   */
  description?: string;
}

/**
 * @interface
 * An interface representing DatasetUpdate.
 * @summary DatasetUpdate
 *
 */
export interface DatasetUpdate {
  /**
   * @member {string} name The name of the object
   */
  name: string;
  /**
   * @member {string} [description] The description of the object
   */
  description?: string;
}

/**
 * @interface
 * An interface representing Endpoint.
 * @summary Endpoint
 *
 */
export interface Endpoint {
  /**
   * @member {number} [concurrentRecognitions] The number of concurrent
   * recognitions the endpoint supports
   */
  concurrentRecognitions?: number;
  /**
   * @member {string} id The identifier of this entity
   */
  id: string;
  /**
   * @member {EndpointKind} endpointKind The kind of this endpoint (e.g. custom
   * speech, custom voice ...). Possible values include: 'None',
   * 'SpeechRecognition', 'CustomVoice', 'LanguageGeneration',
   * 'LanguageIdentification'
   */
  endpointKind: EndpointKind;
  /**
   * @member {{ [propertyName: string]: string }} endpointUrls The list of
   * endpoint urls
   */
  endpointUrls: { [propertyName: string]: string };
  /**
   * @member {Date} createdDateTime The time-stamp when the object was created
   */
  createdDateTime: Date;
  /**
   * @member {Date} lastActionDateTime The time-stamp when the current status
   * was entered
   */
  lastActionDateTime: Date;
  /**
   * @member {Status3} status The status of the object. Possible values
   * include: 'NotStarted', 'Running', 'Succeeded', 'Failed'
   */
  status: Status3;
  /**
   * @member {Model[]} modelsProperty Information about the deployed models
   */
  modelsProperty: Model[];
  /**
   * @member {boolean} [contentLoggingEnabled] A value indicating whether
   * content logging (audio &amp; transcriptions) is being used for a
   * deployment.
   * Suppressing content logging will result in a higher cost for the
   * deployment.
   * Free subscriptions can only deploy true
   */
  contentLoggingEnabled?: boolean;
  /**
   * @member {string} name The name of the object
   */
  name: string;
  /**
   * @member {string} [description] The description of the object
   */
  description?: string;
  /**
   * @member {{ [propertyName: string]: string }} [properties] The custom
   * properties of this entity
   */
  properties?: { [propertyName: string]: string };
  /**
   * @member {string} [locale] The locale of the contained data
   */
  locale?: string;
}

/**
 * @interface
 * An interface representing SpeechEndpointDefinition.
 * @summary SpeechEndpointDefinition
 *
 */
export interface SpeechEndpointDefinition {
  /**
   * @member {number} [concurrentRecognitions] The number of concurrent
   * recognitions the endpoint supports
   */
  concurrentRecognitions?: number;
  /**
   * @member {ModelIdentity[]} modelsProperty Information about the deployed
   * models
   */
  modelsProperty: ModelIdentity[];
  /**
   * @member {boolean} [contentLoggingEnabled] A value indicating whether
   * content logging (audio &amp; transcriptions) is being used for a
   * deployment.
   * Suppressing content logging will result in a higher cost for the
   * deployment.
   * Free subscriptions can only deploy true
   */
  contentLoggingEnabled?: boolean;
  /**
   * @member {string} name The name of the object
   */
  name: string;
  /**
   * @member {string} [description] The description of the object
   */
  description?: string;
  /**
   * @member {{ [propertyName: string]: string }} [properties] The custom
   * properties of this entity
   */
  properties?: { [propertyName: string]: string };
  /**
   * @member {string} [locale] The locale of the contained data
   */
  locale?: string;
}

/**
 * @interface
 * An interface representing EndpointUpdate.
 * @summary EndpointUpdate
 *
 */
export interface EndpointUpdate {
  /**
   * @member {string} name The name of the object
   */
  name: string;
  /**
   * @member {string} [description] The description of the object
   */
  description?: string;
}

/**
 * @interface
 * An interface representing EndpointData.
 * @summary EndpointData
 *
 */
export interface EndpointData {
  /**
   * @member {string} id The identifier of this entity
   */
  id: string;
  /**
   * @member {string} [dataUrl] The resulting data Url for the model deployment
   */
  dataUrl?: string;
  /**
   * @member {Date} createdDateTime The time-stamp when the object was created
   */
  createdDateTime: Date;
  /**
   * @member {Date} lastActionDateTime The time-stamp when the current status
   * was entered
   */
  lastActionDateTime: Date;
  /**
   * @member {Status4} status The status of the object. Possible values
   * include: 'Succeeded', 'NotStarted', 'Running', 'Failed'
   */
  status: Status4;
  /**
   * @member {Date} startDate The start date of the demplyment data export
   */
  startDate: Date;
  /**
   * @member {Date} endDate The end date of the demplyment data export
   */
  endDate: Date;
}

/**
 * @interface
 * An interface representing EndpointDataDefinition.
 * @summary EndpointDataDefinition
 *
 */
export interface EndpointDataDefinition {
  /**
   * @member {Date} startDate The start date of the demplyment data export
   */
  startDate: Date;
  /**
   * @member {Date} endDate The end date of the demplyment data export
   */
  endDate: Date;
}

/**
 * @interface
 * An interface representing SpeechModelDefinition.
 * @summary SpeechModelDefinition
 *
 */
export interface SpeechModelDefinition {
  /**
   * @member {string} [text] The text used to adapt this language model
   */
  text?: string;
  /**
   * @member {ModelIdentity} [baseModel] The base model used for adaptation
   */
  baseModel?: ModelIdentity;
  /**
   * @member {DatasetIdentity[]} [datasets] Datasets used for adaptation
   */
  datasets?: DatasetIdentity[];
  /**
   * @member {ModelKind1} modelKind The kind of this model (e.g. acoustic,
   * language ...). Possible values include: 'None', 'Acoustic', 'Language',
   * 'AcousticAndLanguage', 'CustomVoice', 'LanguageGeneration', 'Sentiment',
   * 'LanguageIdentification'
   */
  modelKind: ModelKind1;
  /**
   * @member {string} name The name of the object
   */
  name: string;
  /**
   * @member {string} [description] The description of the object
   */
  description?: string;
  /**
   * @member {{ [propertyName: string]: string }} [properties] The custom
   * properties of this entity
   */
  properties?: { [propertyName: string]: string };
  /**
   * @member {string} [locale] The locale of the contained data
   */
  locale?: string;
}

/**
 * @interface
 * An interface representing ModelUpdate.
 * @summary ModelUpdate
 *
 */
export interface ModelUpdate {
  /**
   * @member {string} name The name of the object
   */
  name: string;
  /**
   * @member {string} [description] The description of the object
   */
  description?: string;
}

/**
 * @interface
 * An interface representing WebHookConfigurationSecret.
 * @summary WebHookConfigurationSecret
 *
 */
export interface WebHookConfigurationSecret {
  /**
   * @member {string} [secret] A secret that will be used to create a SHA1 hash
   * of the payload with the secret as HMAC key.
   * This hash will be set as X-MicrosoftSpeechServices-Signature header when
   * calling back into the registered URL
   */
  secret?: string;
}

/**
 * @interface
 * An interface representing WebHookUpdate.
 * @summary WebHookUpdate
 *
 */
export interface WebHookUpdate {
  /**
   * @member {WebHookConfigurationSecret} configuration The configuration of
   * the web hook registration.
   *
   * If the property secret is omitted or contains an empty string in a POST or
   * PATCH request,
   * no signature hash will be calculated.
   *
   * When retrieving web hook registration information from the service, the
   * secret is always omitted
   */
  configuration: WebHookConfigurationSecret;
  /**
   * @member {boolean} active A value indicating whether callbacks to the
   * registered URL are made or not
   */
  active: boolean;
  /**
   * @member {string} name The name of the object
   */
  name: string;
  /**
   * @member {string} [description] The description of the object
   */
  description?: string;
}

/**
 * @interface
 * An interface representing Transcription.
 * @summary Transcription
 *
 */
export interface Transcription {
  /**
   * @member {string} recordingsUrl
   */
  recordingsUrl: string;
  /**
   * @member {string} id The identifier of this entity
   */
  id: string;
  /**
   * @member {Model[]} modelsProperty
   */
  modelsProperty: Model[];
  /**
   * @member {string} [locale] The locale of the contained data
   */
  locale?: string;
  /**
   * @member {{ [propertyName: string]: string }} [resultsUrls] The results
   * Urls for the transcription
   */
  resultsUrls?: { [propertyName: string]: string };
  /**
   * @member {string} [statusMessage] The failure reason for the transcription
   */
  statusMessage?: string;
  /**
   * @member {Date} createdDateTime The time-stamp when the object was created
   */
  createdDateTime: Date;
  /**
   * @member {Date} lastActionDateTime The time-stamp when the current status
   * was entered
   */
  lastActionDateTime: Date;
  /**
   * @member {Status5} status The status of the object. Possible values
   * include: 'Succeeded', 'NotStarted', 'Running', 'Failed'
   */
  status: Status5;
  /**
   * @member {string} name The name of the object
   */
  name: string;
  /**
   * @member {string} [description] The description of the object
   */
  description?: string;
  /**
   * @member {{ [propertyName: string]: string }} [properties] The custom
   * properties of this entity
   */
  properties?: { [propertyName: string]: string };
}

/**
 * @interface
 * An interface representing TranscriptionDefinition.
 * @summary TranscriptionDefinition
 *
 */
export interface TranscriptionDefinition {
  /**
   * @member {string} recordingsUrl
   */
  recordingsUrl: string;
  /**
   * @member {ModelIdentity[]} [modelsProperty]
   */
  modelsProperty?: ModelIdentity[];
  /**
   * @member {string} [locale] The locale of the contained data
   */
  locale?: string;
  /**
   * @member {string} name The name of the object
   */
  name: string;
  /**
   * @member {string} [description] The description of the object
   */
  description?: string;
  /**
   * @member {{ [propertyName: string]: string }} [properties] The custom
   * properties of this entity
   */
  properties?: { [propertyName: string]: string };
}

/**
 * @interface
 * An interface representing TranscriptionUpdate.
 * @summary TranscriptionUpdate
 *
 */
export interface TranscriptionUpdate {
  /**
   * @member {string} name The name of the object
   */
  name: string;
  /**
   * @member {string} [description] The description of the object
   */
  description?: string;
}

/**
 * @interface
 * An interface representing EndpointDefinition.
 * @summary EndpointDefinition
 *
 */
export interface EndpointDefinition {
  /**
   * @member {number} [concurrentRecognitions] The number of concurrent
   * recognitions the endpoint supports
   */
  concurrentRecognitions?: number;
  /**
   * @member {ModelIdentity[]} modelsProperty Information about the deployed
   * models
   */
  modelsProperty: ModelIdentity[];
  /**
   * @member {boolean} [contentLoggingEnabled] A value indicating whether
   * content logging (audio &amp; transcriptions) is being used for a
   * deployment.
   * Suppressing content logging will result in a higher cost for the
   * deployment.
   * Free subscriptions can only deploy true
   */
  contentLoggingEnabled?: boolean;
  /**
   * @member {string} name The name of the object
   */
  name: string;
  /**
   * @member {string} [description] The description of the object
   */
  description?: string;
  /**
   * @member {{ [propertyName: string]: string }} [properties] The custom
   * properties of this entity
   */
  properties?: { [propertyName: string]: string };
  /**
   * @member {string} [locale] The locale of the contained data
   */
  locale?: string;
}

/**
 * @interface
 * An interface representing ModelDefinition.
 * @summary ModelDefinition
 *
 */
export interface ModelDefinition {
  /**
   * @member {string} [text] The text used to adapt this language model
   */
  text?: string;
  /**
   * @member {ModelIdentity} [baseModel] The base model used for adaptation
   */
  baseModel?: ModelIdentity;
  /**
   * @member {DatasetIdentity[]} [datasets] Datasets used for adaptation
   */
  datasets?: DatasetIdentity[];
  /**
   * @member {ModelKind2} modelKind The kind of this model (e.g. acoustic,
   * language ...). Possible values include: 'Acoustic', 'AcousticAndLanguage',
   * 'Language', 'None', 'CustomVoice', 'LanguageGeneration', 'Sentiment',
   * 'LanguageIdentification'
   */
  modelKind: ModelKind2;
  /**
   * @member {string} name The name of the object
   */
  name: string;
  /**
   * @member {string} [description] The description of the object
   */
  description?: string;
  /**
   * @member {{ [propertyName: string]: string }} [properties] The custom
   * properties of this entity
   */
  properties?: { [propertyName: string]: string };
  /**
   * @member {string} [locale] The locale of the contained data
   */
  locale?: string;
}

/**
 * @interface
 * An interface representing Component.
 * @summary Component
 *
 */
export interface Component {
  /**
   * @member {string} [name]
   */
  name?: string;
  /**
   * @member {string} [type]
   */
  type?: string;
  /**
   * @member {Status6} [status] Possible values include: 'Healthy', 'Sick',
   * 'Error'
   */
  status?: Status6;
  /**
   * @member {string} [message]
   */
  message?: string;
}

/**
 * @interface
 * An interface representing HealthStatusResponse.
 * @summary HealthStatusResponse
 *
 */
export interface HealthStatusResponse {
  /**
   * @member {Status7} [status] Possible values include: 'Healthy', 'Sick',
   * 'Error'
   */
  status?: Status7;
  /**
   * @member {string} [message]
   */
  message?: string;
  /**
   * @member {Component[]} [components]
   */
  components?: Component[];
}

/**
 * @interface
 * An interface representing DatasetDefinition.
 * @summary DatasetDefinition
 *
 */
export interface DatasetDefinition {
  /**
   * @member {DataImportKind1} dataImportKind The kind of the dataset (e.g.
   * acoustic data, language data ...). Possible values include: 'None',
   * 'Language', 'Acoustic', 'Pronunciation', 'CustomVoice',
   * 'LanguageGeneration'
   */
  dataImportKind: DataImportKind1;
  /**
   * @member {string} name The name of the object
   */
  name: string;
  /**
   * @member {string} [description] The description of the object
   */
  description?: string;
  /**
   * @member {{ [propertyName: string]: string }} [properties] The custom
   * properties of this entity
   */
  properties?: { [propertyName: string]: string };
  /**
   * @member {string} [locale] The locale of the contained data
   */
  locale?: string;
}

/**
 * @interface
 * An interface representing VoiceTest.
 * @summary VoiceTest
 *
 */
export interface VoiceTest {
  /**
   * @member {string} id The identifier of this entity
   */
  id: string;
  /**
   * @member {string} [audioUri] The audio URI of the voice test
   */
  audioUri?: string;
  /**
   * @member {string} textUri The text URI of the voice test
   */
  textUri: string;
  /**
   * @member {Date} createdDateTime The time-stamp when the object was created
   */
  createdDateTime: Date;
  /**
   * @member {Date} lastActionDateTime The time-stamp when the current status
   * was entered
   */
  lastActionDateTime: Date;
  /**
   * @member {Status8} status The status of the object. Possible values
   * include: 'Succeeded', 'NotStarted', 'Running', 'Failed'
   */
  status: Status8;
  /**
   * @member {Model} model Information about the models used in the voice test
   */
  model: Model;
  /**
   * @member {VoiceTestKind} voiceTestKind The kind of this test (e.g. Text,
   * SSML). Possible values include: 'None', 'Text', 'SSML'
   */
  voiceTestKind: VoiceTestKind;
}

/**
 * @interface
 * An interface representing VoiceTestDefinition.
 * @summary VoiceTestDefinition
 *
 */
export interface VoiceTestDefinition {
  /**
   * @member {string} text Information about the text used in the voice test
   */
  text: string;
  /**
   * @member {ModelIdentity} model Information about the models used in the
   * voice test
   */
  model: ModelIdentity;
  /**
   * @member {VoiceTestKind1} voiceTestKind The kind of this test (e.g. Text,
   * SSML). Possible values include: 'None', 'Text', 'SSML'
   */
  voiceTestKind: VoiceTestKind1;
}

/**
 * @interface
 * An interface representing IReadOnlyDictionary2.
 * @summary IReadOnlyDictionary`2
 *
 */
export interface IReadOnlyDictionary2 {
  /**
   * @member {string[]} [none]
   */
  none?: string[];
  /**
   * @member {string[]} [language]
   */
  language?: string[];
  /**
   * @member {string[]} [acoustic]
   */
  acoustic?: string[];
  /**
   * @member {string[]} [pronunciation]
   */
  pronunciation?: string[];
  /**
   * @member {string[]} [customVoice]
   */
  customVoice?: string[];
  /**
   * @member {string[]} [languageGeneration]
   */
  languageGeneration?: string[];
}

/**
 * @interface
 * An interface representing SpeechServicesAPIv20Options.
 * @extends ServiceClientOptions
 */
export interface SpeechServicesAPIv20Options extends ServiceClientOptions {
  /**
   * @member {string} [baseUri]
   */
  baseUri?: string;
}

/**
 * @interface
 * An interface representing SpeechServicesAPIv20UploadDatasetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface SpeechServicesAPIv20UploadDatasetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [name] The name of this data import (always add this
   * string for any import).
   */
  name?: string;
  /**
   * @member {string} [description] Optional description of this data import.
   */
  description?: string;
  /**
   * @member {string} [locale] The locale of this data import (always add this
   * string for any import).
   */
  locale?: string;
  /**
   * @member {DataImportKind2} [dataImportKind] The kind of the data import
   * (always add this string for any import). Possible values include: 'None',
   * 'Language', 'Acoustic', 'Pronunciation', 'CustomVoice',
   * 'LanguageGeneration'
   */
  dataImportKind?: DataImportKind2;
  /**
   * @member {string} [properties] Optional properties of this data import
   * (json serialized object with key/values, where all values must be strings)
   */
  properties?: string;
  /**
   * @member {msRest.HttpRequestBody} [audiodata] A zip file containing the
   * audio data (this and the audio archive file for acoustic data imports).
   */
  audiodata?: msRest.HttpRequestBody;
  /**
   * @member {msRest.HttpRequestBody} [transcriptions] A text file containing
   * the transcriptions for the audio data (this and the transcriptions file
   * for acoustic data imports).
   */
  transcriptions?: msRest.HttpRequestBody;
  /**
   * @member {msRest.HttpRequestBody} [languagedata] A text file containing the
   * language or pronunciation data (only this file for language data imports).
   */
  languagedata?: msRest.HttpRequestBody;
}

/**
 * @interface
 * An interface representing SpeechServicesAPIv20UploadVoiceDatasetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface SpeechServicesAPIv20UploadVoiceDatasetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [name] The name of this data import (always add this
   * string for any import).
   */
  name?: string;
  /**
   * @member {string} [description] Optional description of this data import.
   */
  description?: string;
  /**
   * @member {string} [locale] The locale of this data import (always add this
   * string for any import).
   */
  locale?: string;
  /**
   * @member {DataImportKind3} [dataImportKind] The kind of the data import
   * (always add this string for any import). Possible values include: 'None',
   * 'Language', 'Acoustic', 'Pronunciation', 'CustomVoice',
   * 'LanguageGeneration'
   */
  dataImportKind?: DataImportKind3;
  /**
   * @member {string} [properties] Optional properties of this data import
   * (json serialized object with key/values, where all values must be strings)
   */
  properties?: string;
  /**
   * @member {msRest.HttpRequestBody} [audiodata] A zip file containing the
   * audio data.
   */
  audiodata?: msRest.HttpRequestBody;
  /**
   * @member {msRest.HttpRequestBody} [transcriptions] The transcriptions text
   * file of the audio data.
   */
  transcriptions?: msRest.HttpRequestBody;
}

/**
 * @interface
 * An interface representing GetAccuracyTestsHeaders.
 * Defines headers for GetAccuracyTests operation.
 *
 */
export interface GetAccuracyTestsHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing CreateAccuracyTestHeaders.
 * Defines headers for CreateAccuracyTest operation.
 *
 */
export interface CreateAccuracyTestHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing GetAccuracyTestHeaders.
 * Defines headers for GetAccuracyTest operation.
 *
 */
export interface GetAccuracyTestHeaders {
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
}

/**
 * @interface
 * An interface representing DeleteAccuracyTestHeaders.
 * Defines headers for DeleteAccuracyTest operation.
 *
 */
export interface DeleteAccuracyTestHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing UpdateAccuracyTestHeaders.
 * Defines headers for UpdateAccuracyTest operation.
 *
 */
export interface UpdateAccuracyTestHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing GetDatasetsHeaders.
 * Defines headers for GetDatasets operation.
 *
 */
export interface GetDatasetsHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing GetDatasetHeaders.
 * Defines headers for GetDataset operation.
 *
 */
export interface GetDatasetHeaders {
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
}

/**
 * @interface
 * An interface representing DeleteDatasetHeaders.
 * Defines headers for DeleteDataset operation.
 *
 */
export interface DeleteDatasetHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing UpdateDatasetHeaders.
 * Defines headers for UpdateDataset operation.
 *
 */
export interface UpdateDatasetHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing GetSupportedLocalesForDatasetsHeaders.
 * Defines headers for GetSupportedLocalesForDatasets operation.
 *
 */
export interface GetSupportedLocalesForDatasetsHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing UploadDatasetHeaders.
 * Defines headers for UploadDataset operation.
 *
 */
export interface UploadDatasetHeaders {
  /**
   * @member {string} [location] The URI of the operation.
   */
  location: string;
  /**
   * @member {string} [operationLocation] The URI of the operation.
   */
  operationLocation: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
}

/**
 * @interface
 * An interface representing GetEndpointsHeaders.
 * Defines headers for GetEndpoints operation.
 *
 */
export interface GetEndpointsHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing CreateEndpointHeaders.
 * Defines headers for CreateEndpoint operation.
 *
 */
export interface CreateEndpointHeaders {
  /**
   * @member {string} [location] The URI of the operation.
   */
  location: string;
  /**
   * @member {string} [operationLocation] The URI of the operation.
   */
  operationLocation: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
}

/**
 * @interface
 * An interface representing GetEndpointHeaders.
 * Defines headers for GetEndpoint operation.
 *
 */
export interface GetEndpointHeaders {
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
}

/**
 * @interface
 * An interface representing DeleteEndpointHeaders.
 * Defines headers for DeleteEndpoint operation.
 *
 */
export interface DeleteEndpointHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing UpdateEndpointHeaders.
 * Defines headers for UpdateEndpoint operation.
 *
 */
export interface UpdateEndpointHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing GetSupportedLocalesForEndpointsHeaders.
 * Defines headers for GetSupportedLocalesForEndpoints operation.
 *
 */
export interface GetSupportedLocalesForEndpointsHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing GetEndpointDataExportsHeaders.
 * Defines headers for GetEndpointDataExports operation.
 *
 */
export interface GetEndpointDataExportsHeaders {
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
}

/**
 * @interface
 * An interface representing CreateEndpointDataExportHeaders.
 * Defines headers for CreateEndpointDataExport operation.
 *
 */
export interface CreateEndpointDataExportHeaders {
  /**
   * @member {string} [location] The URI of the operation.
   */
  location: string;
  /**
   * @member {string} [operationLocation] The URI of the operation.
   */
  operationLocation: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
}

/**
 * @interface
 * An interface representing DeleteEndpointDataHeaders.
 * Defines headers for DeleteEndpointData operation.
 *
 */
export interface DeleteEndpointDataHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing GetEndpointDataExportHeaders.
 * Defines headers for GetEndpointDataExport operation.
 *
 */
export interface GetEndpointDataExportHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing DeleteEndpointDataExportHeaders.
 * Defines headers for DeleteEndpointDataExport operation.
 *
 */
export interface DeleteEndpointDataExportHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing GetModelsHeaders.
 * Defines headers for GetModels operation.
 *
 */
export interface GetModelsHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing CreateModelHeaders.
 * Defines headers for CreateModel operation.
 *
 */
export interface CreateModelHeaders {
  /**
   * @member {string} [location] The URI of the operation.
   */
  location: string;
  /**
   * @member {string} [operationLocation] The URI of the operation.
   */
  operationLocation: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
}

/**
 * @interface
 * An interface representing GetModelHeaders.
 * Defines headers for GetModel operation.
 *
 */
export interface GetModelHeaders {
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
}

/**
 * @interface
 * An interface representing DeleteModelHeaders.
 * Defines headers for DeleteModel operation.
 *
 */
export interface DeleteModelHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing UpdateModelHeaders.
 * Defines headers for UpdateModel operation.
 *
 */
export interface UpdateModelHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing GetSupportedLocalesForModelsHeaders.
 * Defines headers for GetSupportedLocalesForModels operation.
 *
 */
export interface GetSupportedLocalesForModelsHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing GetTranscriptionsHeaders.
 * Defines headers for GetTranscriptions operation.
 *
 */
export interface GetTranscriptionsHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing CreateTranscriptionHeaders.
 * Defines headers for CreateTranscription operation.
 *
 */
export interface CreateTranscriptionHeaders {
  /**
   * @member {string} [location] The URI of the operation.
   */
  location: string;
  /**
   * @member {string} [operationLocation] The URI of the operation.
   */
  operationLocation: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
}

/**
 * @interface
 * An interface representing GetTranscriptionHeaders.
 * Defines headers for GetTranscription operation.
 *
 */
export interface GetTranscriptionHeaders {
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
}

/**
 * @interface
 * An interface representing DeleteTranscriptionHeaders.
 * Defines headers for DeleteTranscription operation.
 *
 */
export interface DeleteTranscriptionHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing UpdateTranscriptionHeaders.
 * Defines headers for UpdateTranscription operation.
 *
 */
export interface UpdateTranscriptionHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing GetSupportedLocalesForTranscriptionsHeaders.
 * Defines headers for GetSupportedLocalesForTranscriptions operation.
 *
 */
export interface GetSupportedLocalesForTranscriptionsHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing GetLanguageGenerationEndpointsHeaders.
 * Defines headers for GetLanguageGenerationEndpoints operation.
 *
 */
export interface GetLanguageGenerationEndpointsHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing CreateLanguageGenerationEndpointHeaders.
 * Defines headers for CreateLanguageGenerationEndpoint operation.
 *
 */
export interface CreateLanguageGenerationEndpointHeaders {
  /**
   * @member {string} [location] The URI of the operation.
   */
  location: string;
  /**
   * @member {string} [operationLocation] The URI of the operation.
   */
  operationLocation: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
}

/**
 * @interface
 * An interface representing GetLanguageGenerationEndpointHeaders.
 * Defines headers for GetLanguageGenerationEndpoint operation.
 *
 */
export interface GetLanguageGenerationEndpointHeaders {
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
}

/**
 * @interface
 * An interface representing DeleteLanguageGenerationEndpointHeaders.
 * Defines headers for DeleteLanguageGenerationEndpoint operation.
 *
 */
export interface DeleteLanguageGenerationEndpointHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing UpdateLanguageGenerationEndpointHeaders.
 * Defines headers for UpdateLanguageGenerationEndpoint operation.
 *
 */
export interface UpdateLanguageGenerationEndpointHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing GetSupportedLocalesForLanguageGenerationEndpointsHeaders.
 * Defines headers for GetSupportedLocalesForLanguageGenerationEndpoints
 * operation.
 *
 */
export interface GetSupportedLocalesForLanguageGenerationEndpointsHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing GetLanguageGenerationModelsHeaders.
 * Defines headers for GetLanguageGenerationModels operation.
 *
 */
export interface GetLanguageGenerationModelsHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing CreateLanguageGenerationModelHeaders.
 * Defines headers for CreateLanguageGenerationModel operation.
 *
 */
export interface CreateLanguageGenerationModelHeaders {
  /**
   * @member {string} [location] The URI of the operation.
   */
  location: string;
  /**
   * @member {string} [operationLocation] The URI of the operation.
   */
  operationLocation: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
}

/**
 * @interface
 * An interface representing GetLanguageGenerationModelHeaders.
 * Defines headers for GetLanguageGenerationModel operation.
 *
 */
export interface GetLanguageGenerationModelHeaders {
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
}

/**
 * @interface
 * An interface representing DeleteLanguageGenerationModelHeaders.
 * Defines headers for DeleteLanguageGenerationModel operation.
 *
 */
export interface DeleteLanguageGenerationModelHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing UpdateLanguageGenerationModelHeaders.
 * Defines headers for UpdateLanguageGenerationModel operation.
 *
 */
export interface UpdateLanguageGenerationModelHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing GetSupportedLocalesForLanguageGenerationModelsHeaders.
 * Defines headers for GetSupportedLocalesForLanguageGenerationModels
 * operation.
 *
 */
export interface GetSupportedLocalesForLanguageGenerationModelsHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing GetHealthStatusHeaders.
 * Defines headers for GetHealthStatus operation.
 *
 */
export interface GetHealthStatusHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
}

/**
 * @interface
 * An interface representing GetVoiceDatasetsHeaders.
 * Defines headers for GetVoiceDatasets operation.
 *
 */
export interface GetVoiceDatasetsHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing GetSupportedLocalesForVoiceDatasetsHeaders.
 * Defines headers for GetSupportedLocalesForVoiceDatasets operation.
 *
 */
export interface GetSupportedLocalesForVoiceDatasetsHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing UploadVoiceDatasetHeaders.
 * Defines headers for UploadVoiceDataset operation.
 *
 */
export interface UploadVoiceDatasetHeaders {
  /**
   * @member {string} [location] The URI of the operation.
   */
  location: string;
  /**
   * @member {string} [operationLocation] The URI of the operation.
   */
  operationLocation: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
}

/**
 * @interface
 * An interface representing DeleteVoiceDatasetHeaders.
 * Defines headers for DeleteVoiceDataset operation.
 *
 */
export interface DeleteVoiceDatasetHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing UpdateVoiceDatasetHeaders.
 * Defines headers for UpdateVoiceDataset operation.
 *
 */
export interface UpdateVoiceDatasetHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing GetVoiceDeploymentsHeaders.
 * Defines headers for GetVoiceDeployments operation.
 *
 */
export interface GetVoiceDeploymentsHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing CreateVoiceDeploymentHeaders.
 * Defines headers for CreateVoiceDeployment operation.
 *
 */
export interface CreateVoiceDeploymentHeaders {
  /**
   * @member {string} [location] The URI of the operation.
   */
  location: string;
  /**
   * @member {string} [operationLocation] The URI of the operation.
   */
  operationLocation: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
}

/**
 * @interface
 * An interface representing GetVoiceDeploymentHeaders.
 * Defines headers for GetVoiceDeployment operation.
 *
 */
export interface GetVoiceDeploymentHeaders {
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
}

/**
 * @interface
 * An interface representing DeleteDeploymentHeaders.
 * Defines headers for DeleteDeployment operation.
 *
 */
export interface DeleteDeploymentHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing UpdateVoiceEndpointHeaders.
 * Defines headers for UpdateVoiceEndpoint operation.
 *
 */
export interface UpdateVoiceEndpointHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing GetSupportedLocalesForVoiceEndpointsHeaders.
 * Defines headers for GetSupportedLocalesForVoiceEndpoints operation.
 *
 */
export interface GetSupportedLocalesForVoiceEndpointsHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing GetVoiceModelsHeaders.
 * Defines headers for GetVoiceModels operation.
 *
 */
export interface GetVoiceModelsHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing CreateVoiceModelHeaders.
 * Defines headers for CreateVoiceModel operation.
 *
 */
export interface CreateVoiceModelHeaders {
  /**
   * @member {string} [location] The URI of the operation.
   */
  location: string;
  /**
   * @member {string} [operationLocation] The URI of the operation.
   */
  operationLocation: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
}

/**
 * @interface
 * An interface representing GetVoiceModelHeaders.
 * Defines headers for GetVoiceModel operation.
 *
 */
export interface GetVoiceModelHeaders {
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
}

/**
 * @interface
 * An interface representing DeleteVoiceModelHeaders.
 * Defines headers for DeleteVoiceModel operation.
 *
 */
export interface DeleteVoiceModelHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing UpdateVoiceModelHeaders.
 * Defines headers for UpdateVoiceModel operation.
 *
 */
export interface UpdateVoiceModelHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing GetSupportedLocalesForVoiceModelsHeaders.
 * Defines headers for GetSupportedLocalesForVoiceModels operation.
 *
 */
export interface GetSupportedLocalesForVoiceModelsHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing GetVoiceTestHeaders.
 * Defines headers for GetVoiceTest operation.
 *
 */
export interface GetVoiceTestHeaders {
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
}

/**
 * @interface
 * An interface representing DeleteVoiceTestHeaders.
 * Defines headers for DeleteVoiceTest operation.
 *
 */
export interface DeleteVoiceTestHeaders {
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
}

/**
 * @interface
 * An interface representing CreateVoiceTestHeaders.
 * Defines headers for CreateVoiceTest operation.
 *
 */
export interface CreateVoiceTestHeaders {
  /**
   * @member {string} [location] The URI of the operation.
   */
  location: string;
  /**
   * @member {string} [operationLocation] The URI of the operation.
   */
  operationLocation: string;
  /**
   * @member {number} [retryAfter] The minimum number of seconds to wait before
   * not getting this response anymore.
   */
  retryAfter: number;
  /**
   * @member {number} [xRateLimitLimit] The limit of requests for the resource.
   */
  xRateLimitLimit: number;
  /**
   * @member {number} [xRateLimitRemaining] The remaining number of requests
   * until the rate limit is reached.
   */
  xRateLimitRemaining: number;
  /**
   * @member {string} [xRateLimitReset] The timestamp when the rate limit will
   * be reset formatted as ISO 8601 combined date and time in UTC.
   */
  xRateLimitReset: string;
}

/**
 * Defines values for DataImportKind.
 * Possible values include: 'Acoustic', 'Language', 'Pronunciation', 'None', 'CustomVoice',
 * 'LanguageGeneration'
 * @readonly
 * @enum {string}
 */
export type DataImportKind = 'Acoustic' | 'Language' | 'Pronunciation' | 'None' | 'CustomVoice' | 'LanguageGeneration';

/**
 * Defines values for Status.
 * Possible values include: 'Succeeded', 'Failed', 'NotStarted', 'Running'
 * @readonly
 * @enum {string}
 */
export type Status = 'Succeeded' | 'Failed' | 'NotStarted' | 'Running';

/**
 * Defines values for ModelKind.
 * Possible values include: 'AcousticAndLanguage', 'None', 'Acoustic', 'Language', 'CustomVoice',
 * 'LanguageGeneration', 'Sentiment', 'LanguageIdentification'
 * @readonly
 * @enum {string}
 */
export type ModelKind = 'AcousticAndLanguage' | 'None' | 'Acoustic' | 'Language' | 'CustomVoice' | 'LanguageGeneration' | 'Sentiment' | 'LanguageIdentification';

/**
 * Defines values for Status1.
 * Possible values include: 'Succeeded', 'Failed', 'NotStarted', 'Running'
 * @readonly
 * @enum {string}
 */
export type Status1 = 'Succeeded' | 'Failed' | 'NotStarted' | 'Running';

/**
 * Defines values for Status2.
 * Possible values include: 'Succeeded', 'Failed', 'NotStarted', 'Running'
 * @readonly
 * @enum {string}
 */
export type Status2 = 'Succeeded' | 'Failed' | 'NotStarted' | 'Running';

/**
 * Defines values for EndpointKind.
 * Possible values include: 'None', 'SpeechRecognition', 'CustomVoice', 'LanguageGeneration',
 * 'LanguageIdentification'
 * @readonly
 * @enum {string}
 */
export type EndpointKind = 'None' | 'SpeechRecognition' | 'CustomVoice' | 'LanguageGeneration' | 'LanguageIdentification';

/**
 * Defines values for Status3.
 * Possible values include: 'NotStarted', 'Running', 'Succeeded', 'Failed'
 * @readonly
 * @enum {string}
 */
export type Status3 = 'NotStarted' | 'Running' | 'Succeeded' | 'Failed';

/**
 * Defines values for Status4.
 * Possible values include: 'Succeeded', 'NotStarted', 'Running', 'Failed'
 * @readonly
 * @enum {string}
 */
export type Status4 = 'Succeeded' | 'NotStarted' | 'Running' | 'Failed';

/**
 * Defines values for ModelKind1.
 * Possible values include: 'None', 'Acoustic', 'Language', 'AcousticAndLanguage', 'CustomVoice',
 * 'LanguageGeneration', 'Sentiment', 'LanguageIdentification'
 * @readonly
 * @enum {string}
 */
export type ModelKind1 = 'None' | 'Acoustic' | 'Language' | 'AcousticAndLanguage' | 'CustomVoice' | 'LanguageGeneration' | 'Sentiment' | 'LanguageIdentification';

/**
 * Defines values for Status5.
 * Possible values include: 'Succeeded', 'NotStarted', 'Running', 'Failed'
 * @readonly
 * @enum {string}
 */
export type Status5 = 'Succeeded' | 'NotStarted' | 'Running' | 'Failed';

/**
 * Defines values for ModelKind2.
 * Possible values include: 'Acoustic', 'AcousticAndLanguage', 'Language', 'None', 'CustomVoice',
 * 'LanguageGeneration', 'Sentiment', 'LanguageIdentification'
 * @readonly
 * @enum {string}
 */
export type ModelKind2 = 'Acoustic' | 'AcousticAndLanguage' | 'Language' | 'None' | 'CustomVoice' | 'LanguageGeneration' | 'Sentiment' | 'LanguageIdentification';

/**
 * Defines values for Status6.
 * Possible values include: 'Healthy', 'Sick', 'Error'
 * @readonly
 * @enum {string}
 */
export type Status6 = 'Healthy' | 'Sick' | 'Error';

/**
 * Defines values for Status7.
 * Possible values include: 'Healthy', 'Sick', 'Error'
 * @readonly
 * @enum {string}
 */
export type Status7 = 'Healthy' | 'Sick' | 'Error';

/**
 * Defines values for DataImportKind1.
 * Possible values include: 'None', 'Language', 'Acoustic', 'Pronunciation', 'CustomVoice',
 * 'LanguageGeneration'
 * @readonly
 * @enum {string}
 */
export type DataImportKind1 = 'None' | 'Language' | 'Acoustic' | 'Pronunciation' | 'CustomVoice' | 'LanguageGeneration';

/**
 * Defines values for Status8.
 * Possible values include: 'Succeeded', 'NotStarted', 'Running', 'Failed'
 * @readonly
 * @enum {string}
 */
export type Status8 = 'Succeeded' | 'NotStarted' | 'Running' | 'Failed';

/**
 * Defines values for VoiceTestKind.
 * Possible values include: 'None', 'Text', 'SSML'
 * @readonly
 * @enum {string}
 */
export type VoiceTestKind = 'None' | 'Text' | 'SSML';

/**
 * Defines values for VoiceTestKind1.
 * Possible values include: 'None', 'Text', 'SSML'
 * @readonly
 * @enum {string}
 */
export type VoiceTestKind1 = 'None' | 'Text' | 'SSML';

/**
 * Defines values for DataImportKind2.
 * Possible values include: 'None', 'Language', 'Acoustic', 'Pronunciation', 'CustomVoice',
 * 'LanguageGeneration'
 * @readonly
 * @enum {string}
 */
export type DataImportKind2 = 'None' | 'Language' | 'Acoustic' | 'Pronunciation' | 'CustomVoice' | 'LanguageGeneration';

/**
 * Defines values for DataImportKind3.
 * Possible values include: 'None', 'Language', 'Acoustic', 'Pronunciation', 'CustomVoice',
 * 'LanguageGeneration'
 * @readonly
 * @enum {string}
 */
export type DataImportKind3 = 'None' | 'Language' | 'Acoustic' | 'Pronunciation' | 'CustomVoice' | 'LanguageGeneration';

/**
 * Contains response data for the getAccuracyTests operation.
 */
export type GetAccuracyTestsResponse = GetAccuracyTestsHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: GetAccuracyTestsHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the createAccuracyTest operation.
 */
export type CreateAccuracyTestResponse = ErrorContent & CreateAccuracyTestHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: CreateAccuracyTestHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ErrorContent;
    };
};

/**
 * Contains response data for the getAccuracyTest operation.
 */
export type GetAccuracyTestResponse = GetAccuracyTestHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: GetAccuracyTestHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the deleteAccuracyTest operation.
 */
export type DeleteAccuracyTestResponse = ErrorContent & DeleteAccuracyTestHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: DeleteAccuracyTestHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ErrorContent;
    };
};

/**
 * Contains response data for the updateAccuracyTest operation.
 */
export type UpdateAccuracyTestResponse = UpdateAccuracyTestHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: UpdateAccuracyTestHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the getDatasets operation.
 */
export type GetDatasetsResponse = GetDatasetsHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: GetDatasetsHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the getDataset operation.
 */
export type GetDatasetResponse = GetDatasetHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: GetDatasetHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the deleteDataset operation.
 */
export type DeleteDatasetResponse = ErrorContent & DeleteDatasetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: DeleteDatasetHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ErrorContent;
    };
};

/**
 * Contains response data for the updateDataset operation.
 */
export type UpdateDatasetResponse = UpdateDatasetHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: UpdateDatasetHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the getSupportedLocalesForDatasets operation.
 */
export type GetSupportedLocalesForDatasetsResponse = GetSupportedLocalesForDatasetsHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: GetSupportedLocalesForDatasetsHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the uploadDataset operation.
 */
export type UploadDatasetResponse = ErrorContent & UploadDatasetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: UploadDatasetHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ErrorContent;
    };
};

/**
 * Contains response data for the getEndpoints operation.
 */
export type GetEndpointsResponse = GetEndpointsHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: GetEndpointsHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the createEndpoint operation.
 */
export type CreateEndpointResponse = ErrorContent & CreateEndpointHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: CreateEndpointHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ErrorContent;
    };
};

/**
 * Contains response data for the getEndpoint operation.
 */
export type GetEndpointResponse = GetEndpointHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: GetEndpointHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the deleteEndpoint operation.
 */
export type DeleteEndpointResponse = ErrorContent & DeleteEndpointHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: DeleteEndpointHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ErrorContent;
    };
};

/**
 * Contains response data for the updateEndpoint operation.
 */
export type UpdateEndpointResponse = UpdateEndpointHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: UpdateEndpointHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the getSupportedLocalesForEndpoints operation.
 */
export type GetSupportedLocalesForEndpointsResponse = GetSupportedLocalesForEndpointsHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: GetSupportedLocalesForEndpointsHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the getEndpointDataExports operation.
 */
export type GetEndpointDataExportsResponse = GetEndpointDataExportsHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: GetEndpointDataExportsHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the createEndpointDataExport operation.
 */
export type CreateEndpointDataExportResponse = ErrorContent & CreateEndpointDataExportHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: CreateEndpointDataExportHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ErrorContent;
    };
};

/**
 * Contains response data for the deleteEndpointData operation.
 */
export type DeleteEndpointDataResponse = ErrorContent & DeleteEndpointDataHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: DeleteEndpointDataHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ErrorContent;
    };
};

/**
 * Contains response data for the getEndpointDataExport operation.
 */
export type GetEndpointDataExportResponse = GetEndpointDataExportHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: GetEndpointDataExportHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the deleteEndpointDataExport operation.
 */
export type DeleteEndpointDataExportResponse = ErrorContent & DeleteEndpointDataExportHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: DeleteEndpointDataExportHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ErrorContent;
    };
};

/**
 * Contains response data for the getModels operation.
 */
export type GetModelsResponse = GetModelsHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: GetModelsHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the createModel operation.
 */
export type CreateModelResponse = ErrorContent & CreateModelHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: CreateModelHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ErrorContent;
    };
};

/**
 * Contains response data for the getModel operation.
 */
export type GetModelResponse = GetModelHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: GetModelHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the deleteModel operation.
 */
export type DeleteModelResponse = ErrorContent & DeleteModelHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: DeleteModelHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ErrorContent;
    };
};

/**
 * Contains response data for the updateModel operation.
 */
export type UpdateModelResponse = UpdateModelHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: UpdateModelHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the getSupportedLocalesForModels operation.
 */
export type GetSupportedLocalesForModelsResponse = GetSupportedLocalesForModelsHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: GetSupportedLocalesForModelsHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the getTranscriptions operation.
 */
export type GetTranscriptionsResponse = GetTranscriptionsHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: GetTranscriptionsHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the createTranscription operation.
 */
export type CreateTranscriptionResponse = ErrorContent & CreateTranscriptionHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: CreateTranscriptionHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ErrorContent;
    };
};

/**
 * Contains response data for the getTranscription operation.
 */
export type GetTranscriptionResponse = GetTranscriptionHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: GetTranscriptionHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the deleteTranscription operation.
 */
export type DeleteTranscriptionResponse = ErrorContent & DeleteTranscriptionHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: DeleteTranscriptionHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ErrorContent;
    };
};

/**
 * Contains response data for the updateTranscription operation.
 */
export type UpdateTranscriptionResponse = UpdateTranscriptionHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: UpdateTranscriptionHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the getSupportedLocalesForTranscriptions operation.
 */
export type GetSupportedLocalesForTranscriptionsResponse = GetSupportedLocalesForTranscriptionsHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: GetSupportedLocalesForTranscriptionsHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the getLanguageGenerationEndpoints operation.
 */
export type GetLanguageGenerationEndpointsResponse = GetLanguageGenerationEndpointsHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: GetLanguageGenerationEndpointsHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the createLanguageGenerationEndpoint operation.
 */
export type CreateLanguageGenerationEndpointResponse = ErrorContent & CreateLanguageGenerationEndpointHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: CreateLanguageGenerationEndpointHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ErrorContent;
    };
};

/**
 * Contains response data for the getLanguageGenerationEndpoint operation.
 */
export type GetLanguageGenerationEndpointResponse = GetLanguageGenerationEndpointHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: GetLanguageGenerationEndpointHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the deleteLanguageGenerationEndpoint operation.
 */
export type DeleteLanguageGenerationEndpointResponse = ErrorContent & DeleteLanguageGenerationEndpointHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: DeleteLanguageGenerationEndpointHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ErrorContent;
    };
};

/**
 * Contains response data for the updateLanguageGenerationEndpoint operation.
 */
export type UpdateLanguageGenerationEndpointResponse = UpdateLanguageGenerationEndpointHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: UpdateLanguageGenerationEndpointHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the getSupportedLocalesForLanguageGenerationEndpoints operation.
 */
export type GetSupportedLocalesForLanguageGenerationEndpointsResponse = GetSupportedLocalesForLanguageGenerationEndpointsHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: GetSupportedLocalesForLanguageGenerationEndpointsHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the getLanguageGenerationModels operation.
 */
export type GetLanguageGenerationModelsResponse = GetLanguageGenerationModelsHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: GetLanguageGenerationModelsHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the createLanguageGenerationModel operation.
 */
export type CreateLanguageGenerationModelResponse = ErrorContent & CreateLanguageGenerationModelHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: CreateLanguageGenerationModelHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ErrorContent;
    };
};

/**
 * Contains response data for the getLanguageGenerationModel operation.
 */
export type GetLanguageGenerationModelResponse = GetLanguageGenerationModelHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: GetLanguageGenerationModelHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the deleteLanguageGenerationModel operation.
 */
export type DeleteLanguageGenerationModelResponse = ErrorContent & DeleteLanguageGenerationModelHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: DeleteLanguageGenerationModelHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ErrorContent;
    };
};

/**
 * Contains response data for the updateLanguageGenerationModel operation.
 */
export type UpdateLanguageGenerationModelResponse = UpdateLanguageGenerationModelHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: UpdateLanguageGenerationModelHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the getSupportedLocalesForLanguageGenerationModels operation.
 */
export type GetSupportedLocalesForLanguageGenerationModelsResponse = GetSupportedLocalesForLanguageGenerationModelsHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: GetSupportedLocalesForLanguageGenerationModelsHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the getHealthStatus operation.
 */
export type GetHealthStatusResponse = HealthStatusResponse & GetHealthStatusHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: GetHealthStatusHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HealthStatusResponse;
    };
};

/**
 * Contains response data for the getVoiceDatasets operation.
 */
export type GetVoiceDatasetsResponse = GetVoiceDatasetsHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: GetVoiceDatasetsHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the getSupportedLocalesForVoiceDatasets operation.
 */
export type GetSupportedLocalesForVoiceDatasetsResponse = GetSupportedLocalesForVoiceDatasetsHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: GetSupportedLocalesForVoiceDatasetsHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the uploadVoiceDataset operation.
 */
export type UploadVoiceDatasetResponse = ErrorContent & UploadVoiceDatasetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: UploadVoiceDatasetHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ErrorContent;
    };
};

/**
 * Contains response data for the deleteVoiceDataset operation.
 */
export type DeleteVoiceDatasetResponse = ErrorContent & DeleteVoiceDatasetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: DeleteVoiceDatasetHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ErrorContent;
    };
};

/**
 * Contains response data for the updateVoiceDataset operation.
 */
export type UpdateVoiceDatasetResponse = UpdateVoiceDatasetHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: UpdateVoiceDatasetHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the getVoiceDeployments operation.
 */
export type GetVoiceDeploymentsResponse = GetVoiceDeploymentsHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: GetVoiceDeploymentsHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the createVoiceDeployment operation.
 */
export type CreateVoiceDeploymentResponse = ErrorContent & CreateVoiceDeploymentHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: CreateVoiceDeploymentHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ErrorContent;
    };
};

/**
 * Contains response data for the getVoiceDeployment operation.
 */
export type GetVoiceDeploymentResponse = GetVoiceDeploymentHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: GetVoiceDeploymentHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the deleteDeployment operation.
 */
export type DeleteDeploymentResponse = ErrorContent & DeleteDeploymentHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: DeleteDeploymentHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ErrorContent;
    };
};

/**
 * Contains response data for the updateVoiceEndpoint operation.
 */
export type UpdateVoiceEndpointResponse = UpdateVoiceEndpointHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: UpdateVoiceEndpointHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the getSupportedLocalesForVoiceEndpoints operation.
 */
export type GetSupportedLocalesForVoiceEndpointsResponse = GetSupportedLocalesForVoiceEndpointsHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: GetSupportedLocalesForVoiceEndpointsHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the getVoiceModels operation.
 */
export type GetVoiceModelsResponse = GetVoiceModelsHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: GetVoiceModelsHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the createVoiceModel operation.
 */
export type CreateVoiceModelResponse = ErrorContent & CreateVoiceModelHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: CreateVoiceModelHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ErrorContent;
    };
};

/**
 * Contains response data for the getVoiceModel operation.
 */
export type GetVoiceModelResponse = GetVoiceModelHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: GetVoiceModelHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the deleteVoiceModel operation.
 */
export type DeleteVoiceModelResponse = ErrorContent & DeleteVoiceModelHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: DeleteVoiceModelHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ErrorContent;
    };
};

/**
 * Contains response data for the updateVoiceModel operation.
 */
export type UpdateVoiceModelResponse = UpdateVoiceModelHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: UpdateVoiceModelHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the getSupportedLocalesForVoiceModels operation.
 */
export type GetSupportedLocalesForVoiceModelsResponse = GetSupportedLocalesForVoiceModelsHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: GetSupportedLocalesForVoiceModelsHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the getVoiceTest operation.
 */
export type GetVoiceTestResponse = GetVoiceTestHeaders & {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: GetVoiceTestHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the deleteVoiceTest operation.
 */
export type DeleteVoiceTestResponse = ErrorContent & DeleteVoiceTestHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: DeleteVoiceTestHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ErrorContent;
    };
};

/**
 * Contains response data for the createVoiceTest operation.
 */
export type CreateVoiceTestResponse = ErrorContent & CreateVoiceTestHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: CreateVoiceTestHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ErrorContent;
    };
};
