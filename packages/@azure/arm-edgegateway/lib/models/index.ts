/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };


/**
 * @interface
 * An interface representing Address.
 * The shipping address of the customer.
 *
 */
export interface Address {
  /**
   * @member {string} addressLine1 The address line1.
   */
  addressLine1: string;
  /**
   * @member {string} [addressLine2] The address line2.
   */
  addressLine2?: string;
  /**
   * @member {string} [addressLine3] The address line3.
   */
  addressLine3?: string;
  /**
   * @member {string} postalCode The postal code.
   */
  postalCode: string;
  /**
   * @member {string} city The city name.
   */
  city: string;
  /**
   * @member {string} state The state name.
   */
  state: string;
  /**
   * @member {string} country The country name.
   */
  country: string;
}

/**
 * @interface
 * An interface representing AlertErrorDetails.
 * Error details for the alert.
 *
 */
export interface AlertErrorDetails {
  /**
   * @member {string} [errorCode] Error code.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly errorCode?: string;
  /**
   * @member {string} [errorMessage] Error Message.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly errorMessage?: string;
  /**
   * @member {number} [occurrences] Number of occurrences.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly occurrences?: number;
}

/**
 * @interface
 * An interface representing ARMBaseModel.
 * Represents the base class for all object models.
 *
 * @extends BaseResource
 */
export interface ARMBaseModel extends BaseResource {
  /**
   * @member {string} [id] The path ID that uniquely identifies the object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [name] The object name.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [type] The hierarchical type of the object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: string;
}

/**
 * @interface
 * An interface representing Alert.
 * Alert on the data box edge/gateway device.
 *
 * @extends ARMBaseModel
 */
export interface Alert extends ARMBaseModel {
  /**
   * @member {string} [title] Alert title.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly title?: string;
  /**
   * @member {string} [alertType] Alert type.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly alertType?: string;
  /**
   * @member {Date} [appearedAtDateTime] UTC time when the alert appeared.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly appearedAtDateTime?: Date;
  /**
   * @member {string} [recommendation] Alert recommendation.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly recommendation?: string;
  /**
   * @member {AlertSeverity} [severity] Severity of the alert. Possible values
   * include: 'Informational', 'Warning', 'Critical'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly severity?: AlertSeverity;
  /**
   * @member {AlertErrorDetails} [errorDetails] Error details of the alert.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly errorDetails?: AlertErrorDetails;
  /**
   * @member {{ [propertyName: string]: string }} [detailedInformation] Alert
   * details.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly detailedInformation?: { [propertyName: string]: string };
}

/**
 * @interface
 * An interface representing AsymmetricEncryptedSecret.
 * Represent the secrets intended for encryption with asymmetric key pair.
 *
 */
export interface AsymmetricEncryptedSecret {
  /**
   * @member {string} value The value of the secret.
   */
  value: string;
  /**
   * @member {string} [encryptionCertThumbprint] Thumbprint certificate used to
   * encrypt \"Value\". If the value is unencrypted, it will be null.
   */
  encryptionCertThumbprint?: string;
  /**
   * @member {EncryptionAlgorithm} encryptionAlgorithm The algorithm used to
   * encrypt "Value". Possible values include: 'None', 'AES256',
   * 'RSAES_PKCS1_v_1_5'
   */
  encryptionAlgorithm: EncryptionAlgorithm;
}

/**
 * @interface
 * An interface representing SymmetricKey.
 * Symmetric key for authentication.
 *
 */
export interface SymmetricKey {
  /**
   * @member {AsymmetricEncryptedSecret} [connectionString] Connection string
   * based on the symmetric key.
   */
  connectionString?: AsymmetricEncryptedSecret;
}

/**
 * @interface
 * An interface representing Authentication.
 * Authentication mechanism for IoT devices.
 *
 */
export interface Authentication {
  /**
   * @member {SymmetricKey} [symmetricKey] Symmetric key for authentication.
   */
  symmetricKey?: SymmetricKey;
}

/**
 * @interface
 * An interface representing AzureContainerInfo.
 * Azure container mapping of the endpoint.
 *
 */
export interface AzureContainerInfo {
  /**
   * @member {string} storageAccountCredentialId ID of the storage account
   * credential used to access storage.
   */
  storageAccountCredentialId: string;
  /**
   * @member {string} containerName Container name (Based on the data format
   * specified, this represents the name of Azure Files/Page blob/Block blob).
   */
  containerName: string;
  /**
   * @member {AzureContainerDataFormat} dataFormat Storage format used for the
   * file represented by the share. Possible values include: 'BlockBlob',
   * 'PageBlob', 'AzureFile'
   */
  dataFormat: AzureContainerDataFormat;
}

/**
 * @interface
 * An interface representing BandwidthSchedule.
 * The bandwidth schedule details.
 *
 * @extends ARMBaseModel
 */
export interface BandwidthSchedule extends ARMBaseModel {
  /**
   * @member {string} start The start time of the schedule in UTC.
   */
  start: string;
  /**
   * @member {string} stop The stop time of the schedule in UTC.
   */
  stop: string;
  /**
   * @member {number} rateInMbps The bandwidth rate in Mbps.
   */
  rateInMbps: number;
  /**
   * @member {DayOfWeek[]} days The days of the week when this schedule is
   * applicable.
   */
  days: DayOfWeek[];
}

/**
 * @interface
 * An interface representing ClientAccessRight.
 * The mapping between a particular client IP and the type of access client has
 * on the NFS share.
 *
 */
export interface ClientAccessRight {
  /**
   * @member {string} client IP of the client.
   */
  client: string;
  /**
   * @member {ClientPermissionType} accessPermission Type of access to be
   * allowed for the client. Possible values include: 'NoAccess', 'ReadOnly',
   * 'ReadWrite'
   */
  accessPermission: ClientPermissionType;
}

/**
 * @interface
 * An interface representing ContactDetails.
 * Contains all the contact details of the customer.
 *
 */
export interface ContactDetails {
  /**
   * @member {string} contactPerson The contact person name.
   */
  contactPerson: string;
  /**
   * @member {string} companyName The name of the company.
   */
  companyName: string;
  /**
   * @member {string} phone The phone number.
   */
  phone: string;
  /**
   * @member {string[]} emailList The email list.
   */
  emailList: string[];
}

/**
 * @interface
 * An interface representing Sku.
 * The SKU type.
 *
 */
export interface Sku {
  /**
   * @member {SkuName} [name] SKU name. Possible values include: 'Gateway',
   * 'Edge'
   */
  name?: SkuName;
  /**
   * @member {SkuTier} [tier] The SKU tier. This is based on the SKU name.
   * Possible values include: 'Standard'
   */
  tier?: SkuTier;
}

/**
 * @interface
 * An interface representing DataBoxEdgeDevice.
 * The Data Box Edge/Gateway device.
 *
 * @extends ARMBaseModel
 */
export interface DataBoxEdgeDevice extends ARMBaseModel {
  /**
   * @member {string} location The location of the device. This is a supported
   * and registered Azure geographical region (for example, West US, East US,
   * or Southeast Asia). The geographical region of a device cannot be changed
   * once it is created, but if an identical geographical region is specified
   * on update, the request will succeed.
   */
  location: string;
  /**
   * @member {{ [propertyName: string]: string }} [tags] The list of tags that
   * describe the device. These tags can be used to view and group this device
   * (across resource groups).
   */
  tags?: { [propertyName: string]: string };
  /**
   * @member {Sku} [sku] The SKU type.
   */
  sku?: Sku;
  /**
   * @member {string} [etag] The etag for the devices.
   */
  etag?: string;
  /**
   * @member {DataBoxEdgeDeviceStatus} [dataBoxEdgeDeviceStatus] The status of
   * the Data Box Edge/Gateway device. Possible values include: 'ReadyToSetup',
   * 'Online', 'Offline', 'NeedsAttention', 'Disconnected',
   * 'PartiallyDisconnected'
   */
  dataBoxEdgeDeviceStatus?: DataBoxEdgeDeviceStatus;
  /**
   * @member {string} [serialNumber] The Serial Number of Data Box Edge/Gateway
   * device.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly serialNumber?: string;
  /**
   * @member {string} [description] The Description of the Data Box
   * Edge/Gateway device.
   */
  description?: string;
  /**
   * @member {string} [modelDescription] The description of the Data Box
   * Edge/Gateway device model.
   */
  modelDescription?: string;
  /**
   * @member {DeviceType} [deviceType] The type of the Data Box Edge/Gateway
   * device. Possible values include: 'DataBoxEdgeDevice'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly deviceType?: DeviceType;
  /**
   * @member {string} [friendlyName] The Data Box Edge/Gateway device name.
   */
  friendlyName?: string;
  /**
   * @member {string} [culture] The Data Box Edge/Gateway device culture.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly culture?: string;
  /**
   * @member {string} [deviceModel] The Data Box Edge/Gateway device model.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly deviceModel?: string;
  /**
   * @member {string} [deviceSoftwareVersion] The Data Box Edge/Gateway device
   * software version.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly deviceSoftwareVersion?: string;
  /**
   * @member {number} [deviceLocalCapacity] The Data Box Edge/Gateway device
   * local capacity in MB.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly deviceLocalCapacity?: number;
  /**
   * @member {string} [timeZone] The Data Box Edge/Gateway device timezone.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly timeZone?: string;
  /**
   * @member {string} [deviceHcsVersion] The device software version number of
   * the device (eg: 1.2.18105.6).
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly deviceHcsVersion?: string;
  /**
   * @member {RoleTypes[]} [configuredRoleTypes] Type of compute roles
   * configured.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly configuredRoleTypes?: RoleTypes[];
}

/**
 * @interface
 * An interface representing DataBoxEdgeDeviceExtendedInfo.
 * The extended Info of the Data Box Edge/Gateway device.
 *
 * @extends ARMBaseModel
 */
export interface DataBoxEdgeDeviceExtendedInfo extends ARMBaseModel {
  /**
   * @member {string} integrityKey The Channel Integrity Key (CIK) of the
   * device.
   */
  integrityKey: string;
  /**
   * @member {string} [encryptionKeyThumbprint] The certificate thumbprint that
   * was used to encrypt the Channel Integrity Key (CIK).
   */
  encryptionKeyThumbprint?: string;
  /**
   * @member {string} [encryptionKey] The Channel Integrity Key (CIK) of the
   * device.
   */
  encryptionKey?: string;
  /**
   * @member {string} [resourceKey] The Resource ID of the Resource.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly resourceKey?: string;
}

/**
 * @interface
 * An interface representing DataBoxEdgeDevicePatch.
 * The Data Box Edge/Gateway device patch.
 *
 */
export interface DataBoxEdgeDevicePatch {
  /**
   * @member {{ [propertyName: string]: string }} [tags] The tags attached to
   * the Data Box Edge/Gateway resource.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * @interface
 * An interface representing FileSourceInfo.
 * File source details.
 *
 */
export interface FileSourceInfo {
  /**
   * @member {string} shareId File share ID.
   */
  shareId: string;
}

/**
 * @interface
 * An interface representing RoleSinkInfo.
 * Compute role against which events will be raised.
 *
 */
export interface RoleSinkInfo {
  /**
   * @member {string} roleId Compute role ID.
   */
  roleId: string;
}

/**
 * Contains the possible cases for Trigger.
 */
export type TriggerUnion = Trigger | FileEventTrigger | PeriodicTimerEventTrigger;

/**
 * @interface
 * An interface representing Trigger.
 * Trigger details.
 *
 */
export interface Trigger {
  /**
   * @member {string} kind Polymorphic Discriminator
   */
  kind: "Trigger";
  /**
   * @member {string} [id] The path ID that uniquely identifies the object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [name] The object name.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [type] The hierarchical type of the object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: string;
}

/**
 * @interface
 * An interface representing FileEventTrigger.
 * Trigger details.
 *
 */
export interface FileEventTrigger {
  /**
   * @member {string} kind Polymorphic Discriminator
   */
  kind: "FileEvent";
  /**
   * @member {string} [id] The path ID that uniquely identifies the object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [name] The object name.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [type] The hierarchical type of the object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: string;
  /**
   * @member {FileSourceInfo} sourceInfo File event source details.
   */
  sourceInfo: FileSourceInfo;
  /**
   * @member {RoleSinkInfo} sinkInfo Role sink info.
   */
  sinkInfo: RoleSinkInfo;
  /**
   * @member {string} [customContextTag] A custom context tag typically used to
   * correlate the trigger against its usage. For example, if a periodic timer
   * trigger is intended for certain specific IoT modules in the device, the
   * tag can be the name or the image URL of the module.
   */
  customContextTag?: string;
}

/**
 * @interface
 * An interface representing IoTDeviceInfo.
 * Metadata of IoT device/IoT Edge device to be configured.
 *
 */
export interface IoTDeviceInfo {
  /**
   * @member {string} deviceId ID of the IoT device/edge device.
   */
  deviceId: string;
  /**
   * @member {string} ioTHostHub Host name for the IoT hub associated to the
   * device.
   */
  ioTHostHub: string;
  /**
   * @member {Authentication} [authentication] IoT device authentication info.
   */
  authentication?: Authentication;
}

/**
 * @interface
 * An interface representing MountPointMap.
 * The share mount point.
 *
 */
export interface MountPointMap {
  /**
   * @member {string} shareId ID of the share mounted to the role VM.
   */
  shareId: string;
  /**
   * @member {string} [roleId] ID of the role to which share is mounted.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly roleId?: string;
  /**
   * @member {string} [mountPoint] Mount point for the share.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly mountPoint?: string;
  /**
   * @member {RoleTypes} [roleType] Role type. Possible values include: 'IOT',
   * 'ASA', 'Functions', 'Cognitive'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly roleType?: RoleTypes;
}

/**
 * Contains the possible cases for Role.
 */
export type RoleUnion = Role | IoTRole;

/**
 * @interface
 * An interface representing Role.
 * Compute role.
 *
 */
export interface Role {
  /**
   * @member {string} kind Polymorphic Discriminator
   */
  kind: "Role";
  /**
   * @member {string} [id] The path ID that uniquely identifies the object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [name] The object name.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [type] The hierarchical type of the object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: string;
}

/**
 * @interface
 * An interface representing IoTRole.
 * Compute role.
 *
 */
export interface IoTRole {
  /**
   * @member {string} kind Polymorphic Discriminator
   */
  kind: "IOT";
  /**
   * @member {string} [id] The path ID that uniquely identifies the object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [name] The object name.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [type] The hierarchical type of the object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: string;
  /**
   * @member {PlatformType} hostPlatform Host OS supported by the IoT role.
   * Possible values include: 'Windows', 'Linux'
   */
  hostPlatform: PlatformType;
  /**
   * @member {IoTDeviceInfo} ioTDeviceDetails IoT device metadata to which data
   * box edge device needs to be connected.
   */
  ioTDeviceDetails: IoTDeviceInfo;
  /**
   * @member {IoTDeviceInfo} ioTEdgeDeviceDetails IoT edge device to which the
   * IoT role needs to be configured.
   */
  ioTEdgeDeviceDetails: IoTDeviceInfo;
  /**
   * @member {MountPointMap[]} [shareMappings] Mount points of shares in
   * role(s).
   */
  shareMappings?: MountPointMap[];
  /**
   * @member {RoleStatus} roleStatus Role status. Possible values include:
   * 'Enabled', 'Disabled'
   */
  roleStatus: RoleStatus;
}

/**
 * @interface
 * An interface representing Ipv4Config.
 * Details related to the IPv4 address configuration.
 *
 */
export interface Ipv4Config {
  /**
   * @member {string} [ipAddress] The IPv4 address of the network adapter.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly ipAddress?: string;
  /**
   * @member {string} [subnet] The IPv4 subnet of the network adapter.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly subnet?: string;
  /**
   * @member {string} [gateway] The IPv4 gateway of the network adapter.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly gateway?: string;
}

/**
 * @interface
 * An interface representing Ipv6Config.
 * Details related to the IPv6 address configuration.
 *
 */
export interface Ipv6Config {
  /**
   * @member {string} [ipAddress] The IPv6 address of the network adapter.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly ipAddress?: string;
  /**
   * @member {number} [prefixLength] The IPv6 prefix of the network adapter.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly prefixLength?: number;
  /**
   * @member {string} [gateway] The IPv6 gateway of the network adapter.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly gateway?: string;
}

/**
 * @interface
 * An interface representing JobErrorItem.
 * The job error items.
 *
 */
export interface JobErrorItem {
  /**
   * @member {string[]} [recommendations] The recommended actions.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly recommendations?: string[];
  /**
   * @member {string} [code] The code intended for programmatic access.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly code?: string;
  /**
   * @member {string} [message] The message that describes the error in detail.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly message?: string;
}

/**
 * @interface
 * An interface representing JobErrorDetails.
 * The job error information containing the list of job errors.
 *
 */
export interface JobErrorDetails {
  /**
   * @member {JobErrorItem[]} [errorDetails] The error details.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly errorDetails?: JobErrorItem[];
  /**
   * @member {string} [code] The code intended for programmatic access.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly code?: string;
  /**
   * @member {string} [message] The message that describes the error in detail.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly message?: string;
}

/**
 * @interface
 * An interface representing UpdateDownloadProgress.
 * Details about the download progress of update.
 *
 */
export interface UpdateDownloadProgress {
  /**
   * @member {DownloadPhase} [downloadPhase] The download phase. Possible
   * values include: 'Unknown', 'Initializing', 'Downloading', 'Verifying'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly downloadPhase?: DownloadPhase;
  /**
   * @member {number} [percentComplete] Percentage of completion.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly percentComplete?: number;
  /**
   * @member {number} [totalBytesToDownload] Total bytes to download.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly totalBytesToDownload?: number;
  /**
   * @member {number} [totalBytesDownloaded] Total bytes downloaded.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly totalBytesDownloaded?: number;
  /**
   * @member {number} [numberOfUpdatesToDownload] Number of updates to
   * download.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly numberOfUpdatesToDownload?: number;
  /**
   * @member {number} [numberOfUpdatesDownloaded] Number of updates downloaded.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly numberOfUpdatesDownloaded?: number;
}

/**
 * @interface
 * An interface representing UpdateInstallProgress.
 * Progress details during installation of updates.
 *
 */
export interface UpdateInstallProgress {
  /**
   * @member {number} [percentComplete] Percentage completed.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly percentComplete?: number;
  /**
   * @member {number} [numberOfUpdatesToInstall] Number of updates to install.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly numberOfUpdatesToInstall?: number;
  /**
   * @member {number} [numberOfUpdatesInstalled] Number of updates installed.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly numberOfUpdatesInstalled?: number;
}

/**
 * @interface
 * An interface representing Job.
 * A device job.
 *
 */
export interface Job {
  /**
   * @member {string} [id] The path ID that uniquely identifies the object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [name] The name of the object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [type] The hierarchical type of the object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: string;
  /**
   * @member {JobStatus} [status] The current status of the job. Possible
   * values include: 'Invalid', 'Running', 'Succeeded', 'Failed', 'Canceled',
   * 'Paused', 'Scheduled'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly status?: JobStatus;
  /**
   * @member {Date} [startTime] The UTC date and time at which the job started.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly startTime?: Date;
  /**
   * @member {Date} [endTime] The UTC date and time at which the job completed.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly endTime?: Date;
  /**
   * @member {number} [percentComplete] The percentage of the job that is
   * complete.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly percentComplete?: number;
  /**
   * @member {JobErrorDetails} [error] The error details.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly error?: JobErrorDetails;
  /**
   * @member {JobType} [jobType] The type of the job. Possible values include:
   * 'Invalid', 'ScanForUpdates', 'DownloadUpdates', 'InstallUpdates',
   * 'RefreshShare'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly jobType?: JobType;
  /**
   * @member {UpdateOperationStage} [currentStage] Current stage of the update
   * operation. Possible values include: 'Unknown', 'Initial', 'ScanStarted',
   * 'ScanComplete', 'ScanFailed', 'DownloadStarted', 'DownloadComplete',
   * 'DownloadFailed', 'InstallStarted', 'InstallComplete', 'InstallFailed',
   * 'RebootInitiated', 'Success', 'Failure', 'RescanStarted',
   * 'RescanComplete', 'RescanFailed'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly currentStage?: UpdateOperationStage;
  /**
   * @member {UpdateDownloadProgress} [downloadProgress] The download progress.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly downloadProgress?: UpdateDownloadProgress;
  /**
   * @member {UpdateInstallProgress} [installProgress] The install progress.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly installProgress?: UpdateInstallProgress;
  /**
   * @member {number} [totalRefreshErrors] Total number of errors encountered
   * during the refresh process.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly totalRefreshErrors?: number;
  /**
   * @member {string} [errorManifestFile] Local share/remote container relative
   * path to the error manifest file of the refresh.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly errorManifestFile?: string;
  /**
   * @member {string} [shareId] ARM ID of the share that was refreshed.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly shareId?: string;
  /**
   * @member {string} [folder] If only subfolders need to be refreshed, then
   * the subfolder path inside the share. (The path is empty if there are no
   * subfolders.)
   */
  folder?: string;
}

/**
 * @interface
 * An interface representing MetricDimensionV1.
 * Metric Dimension v1.
 *
 */
export interface MetricDimensionV1 {
  /**
   * @member {string} [name] Name of the metrics dimension.
   */
  name?: string;
  /**
   * @member {string} [displayName] Display name of the metrics dimension.
   */
  displayName?: string;
  /**
   * @member {boolean} [toBeExportedForShoebox] To be exported to shoe box.
   */
  toBeExportedForShoebox?: boolean;
}

/**
 * @interface
 * An interface representing MetricSpecificationV1.
 * Metric specification version 1.
 *
 */
export interface MetricSpecificationV1 {
  /**
   * @member {string} [name] Name of the metric.
   */
  name?: string;
  /**
   * @member {string} [displayName] Display name of the metric.
   */
  displayName?: string;
  /**
   * @member {string} [displayDescription] Description of the metric to be
   * displayed.
   */
  displayDescription?: string;
  /**
   * @member {MetricUnit} [unit] Metric units. Possible values include:
   * 'NotSpecified', 'Percent', 'Count', 'Seconds', 'Milliseconds', 'Bytes',
   * 'BytesPerSecond', 'CountPerSecond'
   */
  unit?: MetricUnit;
  /**
   * @member {MetricAggregationType} [aggregationType] Metric aggregation type.
   * Possible values include: 'NotSpecified', 'None', 'Average', 'Minimum',
   * 'Maximum', 'Total', 'Count'
   */
  aggregationType?: MetricAggregationType;
  /**
   * @member {MetricDimensionV1[]} [dimensions] Metric dimensions, other than
   * default dimension which is resource.
   */
  dimensions?: MetricDimensionV1[];
  /**
   * @member {boolean} [fillGapWithZero] Set true to fill the gaps with zero.
   */
  fillGapWithZero?: boolean;
  /**
   * @member {MetricCategory} [category] Metric category. Possible values
   * include: 'Capacity', 'Transaction'
   */
  category?: MetricCategory;
  /**
   * @member {string} [resourceIdDimensionNameOverride] Resource name override.
   */
  resourceIdDimensionNameOverride?: string;
  /**
   * @member {TimeGrain[]} [supportedTimeGrainTypes] Support granularity of
   * metrics.
   */
  supportedTimeGrainTypes?: TimeGrain[];
  /**
   * @member {MetricAggregationType[]} [supportedAggregationTypes] Support
   * metric aggregation type.
   */
  supportedAggregationTypes?: MetricAggregationType[];
}

/**
 * @interface
 * An interface representing NetworkAdapterPosition.
 * The network adapter position.
 *
 */
export interface NetworkAdapterPosition {
  /**
   * @member {NetworkGroup} [networkGroup] The network group. Possible values
   * include: 'None', 'NonRDMA', 'RDMA'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly networkGroup?: NetworkGroup;
  /**
   * @member {number} [port] The port.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly port?: number;
}

/**
 * @interface
 * An interface representing NetworkAdapter.
 * Represents the networkAdapter on a device.
 *
 */
export interface NetworkAdapter {
  /**
   * @member {string} [adapterId] Instance ID of network adapter.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly adapterId?: string;
  /**
   * @member {NetworkAdapterPosition} [adapterPosition] Hardware position of
   * network adapter.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly adapterPosition?: NetworkAdapterPosition;
  /**
   * @member {number} [index] Logical index of the adapter.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly index?: number;
  /**
   * @member {string} [nodeId] Node ID of the network adapter.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nodeId?: string;
  /**
   * @member {string} [networkAdapterName] Network adapter name.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly networkAdapterName?: string;
  /**
   * @member {string} [label] Hardware label for the adapter.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly label?: string;
  /**
   * @member {string} [macAddress] MAC address.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly macAddress?: string;
  /**
   * @member {number} [linkSpeed] Link speed.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly linkSpeed?: number;
  /**
   * @member {NetworkAdapterStatus} [status] Value indicating whether this
   * adapter is valid. Possible values include: 'Inactive', 'Active'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly status?: NetworkAdapterStatus;
  /**
   * @member {NetworkAdapterRDMAStatus} [rdmaStatus] Value indicating whether
   * this adapter is RDMA capable. Possible values include: 'Incapable',
   * 'Capable'
   */
  rdmaStatus?: NetworkAdapterRDMAStatus;
  /**
   * @member {NetworkAdapterDHCPStatus} [dhcpStatus] Value indicating whether
   * this adapter has DHCP enabled. Possible values include: 'Disabled',
   * 'Enabled'
   */
  dhcpStatus?: NetworkAdapterDHCPStatus;
  /**
   * @member {Ipv4Config} [ipv4Configuration] The IPv4 configuration of the
   * network adapter.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly ipv4Configuration?: Ipv4Config;
  /**
   * @member {Ipv6Config} [ipv6Configuration] The IPv6 configuration of the
   * network adapter.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly ipv6Configuration?: Ipv6Config;
  /**
   * @member {string} [ipv6LinkLocalAddress] The IPv6 local address.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly ipv6LinkLocalAddress?: string;
  /**
   * @member {string[]} [dnsServers] The list of DNS Servers of the device.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly dnsServers?: string[];
}

/**
 * @interface
 * An interface representing NetworkSettings.
 * The network settings of a device.
 *
 * @extends ARMBaseModel
 */
export interface NetworkSettings extends ARMBaseModel {
  /**
   * @member {NetworkAdapter[]} [networkAdapters] The network adapter list on
   * the device.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly networkAdapters?: NetworkAdapter[];
}

/**
 * @interface
 * An interface representing OperationDisplay.
 * Operation display properties.
 *
 */
export interface OperationDisplay {
  /**
   * @member {string} [provider] Provider name.
   */
  provider?: string;
  /**
   * @member {string} [resource] The type of resource in which the operation is
   * performed.
   */
  resource?: string;
  /**
   * @member {string} [operation] Operation to be performed on the resource.
   */
  operation?: string;
  /**
   * @member {string} [description] Description of the operation to be
   * performed.
   */
  description?: string;
}

/**
 * @interface
 * An interface representing ServiceSpecification.
 * Service specification.
 *
 */
export interface ServiceSpecification {
  /**
   * @member {MetricSpecificationV1[]} [metricSpecifications] Metric
   * specification as defined by shoebox.
   */
  metricSpecifications?: MetricSpecificationV1[];
}

/**
 * @interface
 * An interface representing Operation.
 * Operations.
 *
 */
export interface Operation {
  /**
   * @member {string} [name] Name of the operation.
   */
  name?: string;
  /**
   * @member {OperationDisplay} [display] Properties displayed for the
   * operation.
   */
  display?: OperationDisplay;
  /**
   * @member {string} [origin] Origin of the operation.
   */
  origin?: string;
  /**
   * @member {ServiceSpecification} [serviceSpecification] Service
   * specification.
   */
  serviceSpecification?: ServiceSpecification;
}

/**
 * @interface
 * An interface representing OrderStatus.
 * Represents a single status change.
 *
 */
export interface OrderStatus {
  /**
   * @member {OrderState} status Status of the order as per the allowed status
   * types. Possible values include: 'Untracked', 'AwaitingFulfilment',
   * 'AwaitingPreparation', 'AwaitingShipment', 'Shipped', 'Arriving',
   * 'Delivered', 'ReplacementRequested', 'LostDevice', 'Declined',
   * 'ReturnInitiated', 'AwaitingReturnShipment', 'ShippedBack',
   * 'CollectedAtMicrosoft'
   */
  status: OrderState;
  /**
   * @member {Date} [updateDateTime] Time of status update.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly updateDateTime?: Date;
  /**
   * @member {string} [comments] Comments related to this status change.
   */
  comments?: string;
}

/**
 * @interface
 * An interface representing TrackingInfo.
 * Tracking courier information.
 *
 */
export interface TrackingInfo {
  /**
   * @member {string} [serialNumber] Serial number of the device being tracked.
   */
  serialNumber?: string;
  /**
   * @member {string} [carrierName] Name of the carrier used in the delivery.
   */
  carrierName?: string;
  /**
   * @member {string} [trackingId] Tracking ID of the shipment.
   */
  trackingId?: string;
  /**
   * @member {string} [trackingUrl] Tracking URL of the shipment.
   */
  trackingUrl?: string;
}

/**
 * @interface
 * An interface representing Order.
 * The order details.
 *
 * @extends ARMBaseModel
 */
export interface Order extends ARMBaseModel {
  /**
   * @member {ContactDetails} contactInformation The contact details.
   */
  contactInformation: ContactDetails;
  /**
   * @member {Address} shippingAddress The shipping address.
   */
  shippingAddress: Address;
  /**
   * @member {OrderStatus} [currentStatus] Current status of the order.
   */
  currentStatus?: OrderStatus;
  /**
   * @member {OrderStatus[]} [orderHistory] List of status changes in the
   * order.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly orderHistory?: OrderStatus[];
  /**
   * @member {string} [serialNumber] Serial number of the device.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly serialNumber?: string;
  /**
   * @member {TrackingInfo[]} [deliveryTrackingInfo] Tracking information for
   * the package delivered to the customer whether it has an original or a
   * replacement device.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly deliveryTrackingInfo?: TrackingInfo[];
  /**
   * @member {TrackingInfo[]} [returnTrackingInfo] Tracking information for the
   * package returned from the customer whether it has an original or a
   * replacement device.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly returnTrackingInfo?: TrackingInfo[];
}

/**
 * @interface
 * An interface representing PeriodicTimerSourceInfo.
 * Periodic timer event source.
 *
 */
export interface PeriodicTimerSourceInfo {
  /**
   * @member {Date} startTime The time of the day that results in a valid
   * trigger. Schedule is computed with reference to the time specified.
   */
  startTime: Date;
  /**
   * @member {string} schedule Periodic frequency at which timer event needs to
   * be raised. Supports daily, hourly, minutes, and seconds.
   */
  schedule: string;
  /**
   * @member {string} [topic] Topic where periodic events are published to IoT
   * device.
   */
  topic?: string;
}

/**
 * @interface
 * An interface representing PeriodicTimerEventTrigger.
 * Trigger details.
 *
 */
export interface PeriodicTimerEventTrigger {
  /**
   * @member {string} kind Polymorphic Discriminator
   */
  kind: "PeriodicTimerEvent";
  /**
   * @member {string} [id] The path ID that uniquely identifies the object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [name] The object name.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [type] The hierarchical type of the object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: string;
  /**
   * @member {PeriodicTimerSourceInfo} sourceInfo Periodic timer details.
   */
  sourceInfo: PeriodicTimerSourceInfo;
  /**
   * @member {RoleSinkInfo} sinkInfo Role Sink information.
   */
  sinkInfo: RoleSinkInfo;
  /**
   * @member {string} [customContextTag] A custom context tag typically used to
   * correlate the trigger against its usage. For example, if a periodic timer
   * trigger is intended for certain specific IoT modules in the device, the
   * tag can be the name or the image URL of the module.
   */
  customContextTag?: string;
}

/**
 * @interface
 * An interface representing RefreshDetails.
 * Fields for tracking refresh job on the share.
 *
 */
export interface RefreshDetails {
  /**
   * @member {string} [inProgressRefreshJobId] If a refresh share job is
   * currently in progress on this share, this field indicates the ARM resource
   * ID of that job. The field is empty if no job is in progress.
   */
  inProgressRefreshJobId?: string;
  /**
   * @member {Date} [lastCompletedRefreshJobTimeInUTC] Indicates the completed
   * time for the last refresh job on this particular share, if any.This could
   * be a failed job or a successful job.
   */
  lastCompletedRefreshJobTimeInUTC?: Date;
  /**
   * @member {string} [errorManifestFile] Indicates the relative path of the
   * error xml for the last refresh job on this particular share, if any. This
   * could be a failed job or a successful job.
   */
  errorManifestFile?: string;
  /**
   * @member {string} [lastJob] Indicates the id of the last refresh job on
   * this particular share,if any. This could be a failed job or a successful
   * job.
   */
  lastJob?: string;
}

/**
 * @interface
 * An interface representing SecuritySettings.
 * The security settings of a device.
 *
 * @extends ARMBaseModel
 */
export interface SecuritySettings extends ARMBaseModel {
  /**
   * @member {AsymmetricEncryptedSecret} deviceAdminPassword Device
   * administrator password as an encrypted string (encrypted using RSA PKCS
   * #1) is used to sign into the  local web UI of the device. The Actual
   * password should have at least 8 characters that are a combination of
   * uppercase, lowercase, numeric, and special characters.
   */
  deviceAdminPassword: AsymmetricEncryptedSecret;
}

/**
 * @interface
 * An interface representing UserAccessRight.
 * The mapping between a particular user and the access type on the SMB share.
 *
 */
export interface UserAccessRight {
  /**
   * @member {string} userId User ID (already existing in the device).
   */
  userId: string;
  /**
   * @member {ShareAccessType} accessType Type of access to be allowed for the
   * user. Possible values include: 'Change', 'Read', 'Custom'
   */
  accessType: ShareAccessType;
}

/**
 * @interface
 * An interface representing Share.
 * Represents a share on the  Data Box Edge/Gateway device.
 *
 * @extends ARMBaseModel
 */
export interface Share extends ARMBaseModel {
  /**
   * @member {string} [description] Description for the share.
   */
  description?: string;
  /**
   * @member {ShareStatus} shareStatus Current status of the share. Possible
   * values include: 'Online', 'Offline'
   */
  shareStatus: ShareStatus;
  /**
   * @member {MonitoringStatus} monitoringStatus Current monitoring status of
   * the share. Possible values include: 'Enabled', 'Disabled'
   */
  monitoringStatus: MonitoringStatus;
  /**
   * @member {AzureContainerInfo} [azureContainerInfo] Azure container mapping
   * for the share.
   */
  azureContainerInfo?: AzureContainerInfo;
  /**
   * @member {ShareAccessProtocol} accessProtocol Access protocol to be used by
   * the share. Possible values include: 'SMB', 'NFS'
   */
  accessProtocol: ShareAccessProtocol;
  /**
   * @member {UserAccessRight[]} [userAccessRights] Mapping of users and
   * corresponding access rights on the share (required for SMB protocol).
   */
  userAccessRights?: UserAccessRight[];
  /**
   * @member {ClientAccessRight[]} [clientAccessRights] List of IP addresses
   * and corresponding access rights on the share(required for NFS protocol).
   */
  clientAccessRights?: ClientAccessRight[];
  /**
   * @member {RefreshDetails} [refreshDetails] Details of the refresh job on
   * this share.
   */
  refreshDetails?: RefreshDetails;
  /**
   * @member {MountPointMap[]} [shareMappings] Share mount point to the role.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly shareMappings?: MountPointMap[];
  /**
   * @member {DataPolicy} [dataPolicy] Data policy of the share. Possible
   * values include: 'Cloud', 'Local'
   */
  dataPolicy?: DataPolicy;
}

/**
 * @interface
 * An interface representing ShareAccessRight.
 * Specifies the mapping between this particular user and the type of access he
 * has on shares on this device.
 *
 */
export interface ShareAccessRight {
  /**
   * @member {string} shareId The share ID.
   */
  shareId: string;
  /**
   * @member {ShareAccessType} accessType Type of access to be allowed on the
   * share for this user. Possible values include: 'Change', 'Read', 'Custom'
   */
  accessType: ShareAccessType;
}

/**
 * @interface
 * An interface representing StorageAccountCredential.
 * The storage account credential.
 *
 * @extends ARMBaseModel
 */
export interface StorageAccountCredential extends ARMBaseModel {
  /**
   * @member {string} alias Alias for the storage account.
   */
  alias: string;
  /**
   * @member {string} [userName] Username for the storage account.
   */
  userName?: string;
  /**
   * @member {AsymmetricEncryptedSecret} [accountKey] Encrypted storage key.
   */
  accountKey?: AsymmetricEncryptedSecret;
  /**
   * @member {string} [connectionString] Connection string for the storage
   * account. Use this string if username and account key are not specified.
   */
  connectionString?: string;
  /**
   * @member {SSLStatus} sslStatus Signifies whether SSL needs to be enabled or
   * not. Possible values include: 'Enabled', 'Disabled'
   */
  sslStatus: SSLStatus;
  /**
   * @member {string} [blobDomainName] Blob end point for private clouds.
   */
  blobDomainName?: string;
  /**
   * @member {AccountType} accountType Type of storage accessed on the storage
   * account. Possible values include: 'GeneralPurposeStorage', 'BlobStorage'
   */
  accountType: AccountType;
}

/**
 * @interface
 * An interface representing UpdateSummary.
 * Details about ongoing updates and availability of updates on the device.
 *
 * @extends ARMBaseModel
 */
export interface UpdateSummary extends ARMBaseModel {
  /**
   * @member {string} [deviceVersionNumber] The current version of the device
   * in format: 1.2.17312.13.",
   */
  deviceVersionNumber?: string;
  /**
   * @member {string} [friendlyDeviceVersionName] The current version of the
   * device in text format.
   */
  friendlyDeviceVersionName?: string;
  /**
   * @member {Date} [deviceLastScannedDateTime] The last time when a scan was
   * done on the device.
   */
  deviceLastScannedDateTime?: Date;
  /**
   * @member {Date} [lastCompletedScanJobDateTime] The time when the last scan
   * job was completed (success/cancelled/failed) on the appliance.
   */
  lastCompletedScanJobDateTime?: Date;
  /**
   * @member {Date} [lastCompletedDownloadJobDateTime] The time when the last
   * Download job was completed (success/cancelled/failed) on the appliance.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly lastCompletedDownloadJobDateTime?: Date;
  /**
   * @member {Date} [lastCompletedInstallJobDateTime] The time when the last
   * Install job was completed (success/cancelled/failed) on the appliance.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly lastCompletedInstallJobDateTime?: Date;
  /**
   * @member {number} [totalNumberOfUpdatesAvailable] The number of updates
   * available for the current device version as per the last device scan.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly totalNumberOfUpdatesAvailable?: number;
  /**
   * @member {number} [totalNumberOfUpdatesPendingDownload] The total number of
   * items pending download.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly totalNumberOfUpdatesPendingDownload?: number;
  /**
   * @member {number} [totalNumberOfUpdatesPendingInstall] The total number of
   * items pending install.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly totalNumberOfUpdatesPendingInstall?: number;
  /**
   * @member {InstallRebootBehavior} [rebootBehavior] Indicates if updates are
   * available and at least one of the updates needs a reboot. Possible values
   * include: 'NeverReboots', 'RequiresReboot', 'RequestReboot'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly rebootBehavior?: InstallRebootBehavior;
  /**
   * @member {UpdateOperation} [ongoingUpdateOperation] The current update
   * operation. Possible values include: 'None', 'Scan', 'Download', 'Install'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly ongoingUpdateOperation?: UpdateOperation;
  /**
   * @member {string} [inProgressDownloadJobId] The job ID of the download job
   * in progress.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly inProgressDownloadJobId?: string;
  /**
   * @member {string} [inProgressInstallJobId] The job ID of the install job in
   * progress.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly inProgressInstallJobId?: string;
  /**
   * @member {Date} [inProgressDownloadJobStartedDateTime] The time when the
   * currently running download (if any) started.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly inProgressDownloadJobStartedDateTime?: Date;
  /**
   * @member {Date} [inProgressInstallJobStartedDateTime] The time when the
   * currently running install (if any) started.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly inProgressInstallJobStartedDateTime?: Date;
  /**
   * @member {string[]} [updateTitles] The list of updates available for
   * install.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly updateTitles?: string[];
  /**
   * @member {number} [totalUpdateSizeInBytes] The total size of updates
   * available for download in bytes.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly totalUpdateSizeInBytes?: number;
}

/**
 * @interface
 * An interface representing UploadCertificateRequest.
 * The upload certificate request.
 *
 */
export interface UploadCertificateRequest {
  /**
   * @member {AuthenticationType} [authenticationType] The authentication type.
   * Possible values include: 'Invalid', 'AzureActiveDirectory'
   */
  authenticationType?: AuthenticationType;
  /**
   * @member {string} certificate The base64 encoded certificate raw data.
   */
  certificate: string;
}

/**
 * @interface
 * An interface representing UploadCertificateResponse.
 * The upload registration certificate response.
 *
 */
export interface UploadCertificateResponse {
  /**
   * @member {AuthenticationType} [authType] Specifies authentication type.
   * Possible values include: 'Invalid', 'AzureActiveDirectory'
   */
  authType?: AuthenticationType;
  /**
   * @member {string} resourceId The resource ID of the Data Box Edge/Gateway
   * device.
   */
  resourceId: string;
  /**
   * @member {string} aadAuthority Azure Active Directory tenant authority.
   */
  aadAuthority: string;
  /**
   * @member {string} aadTenantId Azure Active Directory tenant ID.
   */
  aadTenantId: string;
  /**
   * @member {string} servicePrincipalClientId Azure Active Directory service
   * principal client ID.
   */
  servicePrincipalClientId: string;
  /**
   * @member {string} servicePrincipalObjectId Azure Active Directory service
   * principal object ID.
   */
  servicePrincipalObjectId: string;
  /**
   * @member {string} azureManagementEndpointAudience The azure management
   * endpoint audience.
   */
  azureManagementEndpointAudience: string;
}

/**
 * @interface
 * An interface representing User.
 * Represents a user who has access to one or more shares on the Data Box
 * Edge/Gateway device.
 *
 * @extends ARMBaseModel
 */
export interface User extends ARMBaseModel {
  /**
   * @member {AsymmetricEncryptedSecret} [encryptedPassword] The password
   * details.
   */
  encryptedPassword?: AsymmetricEncryptedSecret;
  /**
   * @member {ShareAccessRight[]} [shareAccessRights] List of shares that the
   * user has rights on. This field should not be specified during user
   * creation.
   */
  shareAccessRights?: ShareAccessRight[];
}

/**
 * @interface
 * An interface representing DevicesListBySubscriptionOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface DevicesListBySubscriptionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [expand] Specify $expand=details to populate additional
   * fields related to the resource or Specify $skipToken=<token> to populate
   * the next page in the list.
   */
  expand?: string;
}

/**
 * @interface
 * An interface representing DevicesListByResourceGroupOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface DevicesListByResourceGroupOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [expand] Specify $expand=details to populate additional
   * fields related to the resource or Specify $skipToken=<token> to populate
   * the next page in the list.
   */
  expand?: string;
}

/**
 * @interface
 * An interface representing DevicesUpdateOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface DevicesUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {{ [propertyName: string]: string }} [tags] The tags attached to
   * the Data Box Edge/Gateway resource.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * @interface
 * An interface representing DevicesUploadCertificateOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface DevicesUploadCertificateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {AuthenticationType} [authenticationType] The authentication type.
   * Possible values include: 'Invalid', 'AzureActiveDirectory'
   */
  authenticationType?: AuthenticationType;
}

/**
 * @interface
 * An interface representing UsersCreateOrUpdateOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface UsersCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {AsymmetricEncryptedSecret} [encryptedPassword] The password
   * details.
   */
  encryptedPassword?: AsymmetricEncryptedSecret;
  /**
   * @member {ShareAccessRight[]} [shareAccessRights] List of shares that the
   * user has rights on. This field should not be specified during user
   * creation.
   */
  shareAccessRights?: ShareAccessRight[];
}

/**
 * @interface
 * An interface representing UsersBeginCreateOrUpdateOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface UsersBeginCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {AsymmetricEncryptedSecret} [encryptedPassword] The password
   * details.
   */
  encryptedPassword?: AsymmetricEncryptedSecret;
  /**
   * @member {ShareAccessRight[]} [shareAccessRights] List of shares that the
   * user has rights on. This field should not be specified during user
   * creation.
   */
  shareAccessRights?: ShareAccessRight[];
}

/**
 * @interface
 * An interface representing DataBoxEdgeManagementClientOptions.
 * @extends AzureServiceClientOptions
 */
export interface DataBoxEdgeManagementClientOptions extends AzureServiceClientOptions {
  /**
   * @member {string} [baseUri]
   */
  baseUri?: string;
}


/**
 * @interface
 * An interface representing the OperationsList.
 * The list of operations used for the discovery of available provider
 * operations.
 *
 * @extends Array<Operation>
 */
export interface OperationsList extends Array<Operation> {
  /**
   * @member {string} [nextLink] Link to the next set of results.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the DataBoxEdgeDeviceList.
 * The collection of Data Box Edge/Gateway devices.
 *
 * @extends Array<DataBoxEdgeDevice>
 */
export interface DataBoxEdgeDeviceList extends Array<DataBoxEdgeDevice> {
  /**
   * @member {string} [nextLink] Link to the next set of results.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the AlertList.
 * Collection of alerts.
 *
 * @extends Array<Alert>
 */
export interface AlertList extends Array<Alert> {
  /**
   * @member {string} [nextLink] Link to the next set of results.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the BandwidthSchedulesList.
 * The collection of bandwidth schedules.
 *
 * @extends Array<BandwidthSchedule>
 */
export interface BandwidthSchedulesList extends Array<BandwidthSchedule> {
  /**
   * @member {string} [nextLink] Link to the next set of results.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the OrderList.
 * List of order entities.
 *
 * @extends Array<Order>
 */
export interface OrderList extends Array<Order> {
  /**
   * @member {string} [nextLink] Link to the next set of results.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the RoleList.
 * Collection of all the roles on the Data Box Edge device.
 *
 * @extends Array<RoleUnion>
 */
export interface RoleList extends Array<RoleUnion> {
  /**
   * @member {string} [nextLink] Link to the next set of results.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the ShareList.
 * Collection of all the shares on the Data Box Edge/Gateway device.
 *
 * @extends Array<Share>
 */
export interface ShareList extends Array<Share> {
  /**
   * @member {string} [nextLink] Link to the next set of results.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the StorageAccountCredentialList.
 * The collection of storage account credentials.
 *
 * @extends Array<StorageAccountCredential>
 */
export interface StorageAccountCredentialList extends Array<StorageAccountCredential> {
  /**
   * @member {string} [nextLink] Link to the next set of results.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the TriggerList.
 * Collection of all trigger on the data box edge device.
 *
 * @extends Array<TriggerUnion>
 */
export interface TriggerList extends Array<TriggerUnion> {
  /**
   * @member {string} [nextLink] Link to the next set of results.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the UserList.
 * Collection of users.
 *
 * @extends Array<User>
 */
export interface UserList extends Array<User> {
  /**
   * @member {string} [nextLink] Link to the next set of results.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * Defines values for AlertSeverity.
 * Possible values include: 'Informational', 'Warning', 'Critical'
 * @readonly
 * @enum {string}
 */
export type AlertSeverity = 'Informational' | 'Warning' | 'Critical';

/**
 * Defines values for EncryptionAlgorithm.
 * Possible values include: 'None', 'AES256', 'RSAES_PKCS1_v_1_5'
 * @readonly
 * @enum {string}
 */
export type EncryptionAlgorithm = 'None' | 'AES256' | 'RSAES_PKCS1_v_1_5';

/**
 * Defines values for AzureContainerDataFormat.
 * Possible values include: 'BlockBlob', 'PageBlob', 'AzureFile'
 * @readonly
 * @enum {string}
 */
export type AzureContainerDataFormat = 'BlockBlob' | 'PageBlob' | 'AzureFile';

/**
 * Defines values for DayOfWeek.
 * Possible values include: 'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday',
 * 'Saturday'
 * @readonly
 * @enum {string}
 */
export type DayOfWeek = 'Sunday' | 'Monday' | 'Tuesday' | 'Wednesday' | 'Thursday' | 'Friday' | 'Saturday';

/**
 * Defines values for ClientPermissionType.
 * Possible values include: 'NoAccess', 'ReadOnly', 'ReadWrite'
 * @readonly
 * @enum {string}
 */
export type ClientPermissionType = 'NoAccess' | 'ReadOnly' | 'ReadWrite';

/**
 * Defines values for SkuName.
 * Possible values include: 'Gateway', 'Edge'
 * @readonly
 * @enum {string}
 */
export type SkuName = 'Gateway' | 'Edge';

/**
 * Defines values for SkuTier.
 * Possible values include: 'Standard'
 * @readonly
 * @enum {string}
 */
export type SkuTier = 'Standard';

/**
 * Defines values for DataBoxEdgeDeviceStatus.
 * Possible values include: 'ReadyToSetup', 'Online', 'Offline', 'NeedsAttention', 'Disconnected',
 * 'PartiallyDisconnected'
 * @readonly
 * @enum {string}
 */
export type DataBoxEdgeDeviceStatus = 'ReadyToSetup' | 'Online' | 'Offline' | 'NeedsAttention' | 'Disconnected' | 'PartiallyDisconnected';

/**
 * Defines values for DeviceType.
 * Possible values include: 'DataBoxEdgeDevice'
 * @readonly
 * @enum {string}
 */
export type DeviceType = 'DataBoxEdgeDevice';

/**
 * Defines values for RoleTypes.
 * Possible values include: 'IOT', 'ASA', 'Functions', 'Cognitive'
 * @readonly
 * @enum {string}
 */
export type RoleTypes = 'IOT' | 'ASA' | 'Functions' | 'Cognitive';

/**
 * Defines values for PlatformType.
 * Possible values include: 'Windows', 'Linux'
 * @readonly
 * @enum {string}
 */
export type PlatformType = 'Windows' | 'Linux';

/**
 * Defines values for RoleStatus.
 * Possible values include: 'Enabled', 'Disabled'
 * @readonly
 * @enum {string}
 */
export type RoleStatus = 'Enabled' | 'Disabled';

/**
 * Defines values for JobStatus.
 * Possible values include: 'Invalid', 'Running', 'Succeeded', 'Failed', 'Canceled', 'Paused',
 * 'Scheduled'
 * @readonly
 * @enum {string}
 */
export type JobStatus = 'Invalid' | 'Running' | 'Succeeded' | 'Failed' | 'Canceled' | 'Paused' | 'Scheduled';

/**
 * Defines values for JobType.
 * Possible values include: 'Invalid', 'ScanForUpdates', 'DownloadUpdates', 'InstallUpdates',
 * 'RefreshShare'
 * @readonly
 * @enum {string}
 */
export type JobType = 'Invalid' | 'ScanForUpdates' | 'DownloadUpdates' | 'InstallUpdates' | 'RefreshShare';

/**
 * Defines values for UpdateOperationStage.
 * Possible values include: 'Unknown', 'Initial', 'ScanStarted', 'ScanComplete', 'ScanFailed',
 * 'DownloadStarted', 'DownloadComplete', 'DownloadFailed', 'InstallStarted', 'InstallComplete',
 * 'InstallFailed', 'RebootInitiated', 'Success', 'Failure', 'RescanStarted', 'RescanComplete',
 * 'RescanFailed'
 * @readonly
 * @enum {string}
 */
export type UpdateOperationStage = 'Unknown' | 'Initial' | 'ScanStarted' | 'ScanComplete' | 'ScanFailed' | 'DownloadStarted' | 'DownloadComplete' | 'DownloadFailed' | 'InstallStarted' | 'InstallComplete' | 'InstallFailed' | 'RebootInitiated' | 'Success' | 'Failure' | 'RescanStarted' | 'RescanComplete' | 'RescanFailed';

/**
 * Defines values for DownloadPhase.
 * Possible values include: 'Unknown', 'Initializing', 'Downloading', 'Verifying'
 * @readonly
 * @enum {string}
 */
export type DownloadPhase = 'Unknown' | 'Initializing' | 'Downloading' | 'Verifying';

/**
 * Defines values for MetricUnit.
 * Possible values include: 'NotSpecified', 'Percent', 'Count', 'Seconds', 'Milliseconds', 'Bytes',
 * 'BytesPerSecond', 'CountPerSecond'
 * @readonly
 * @enum {string}
 */
export type MetricUnit = 'NotSpecified' | 'Percent' | 'Count' | 'Seconds' | 'Milliseconds' | 'Bytes' | 'BytesPerSecond' | 'CountPerSecond';

/**
 * Defines values for MetricAggregationType.
 * Possible values include: 'NotSpecified', 'None', 'Average', 'Minimum', 'Maximum', 'Total',
 * 'Count'
 * @readonly
 * @enum {string}
 */
export type MetricAggregationType = 'NotSpecified' | 'None' | 'Average' | 'Minimum' | 'Maximum' | 'Total' | 'Count';

/**
 * Defines values for MetricCategory.
 * Possible values include: 'Capacity', 'Transaction'
 * @readonly
 * @enum {string}
 */
export type MetricCategory = 'Capacity' | 'Transaction';

/**
 * Defines values for TimeGrain.
 * Possible values include: 'PT1M', 'PT5M', 'PT15M', 'PT30M', 'PT1H', 'PT6H', 'PT12H', 'PT1D'
 * @readonly
 * @enum {string}
 */
export type TimeGrain = 'PT1M' | 'PT5M' | 'PT15M' | 'PT30M' | 'PT1H' | 'PT6H' | 'PT12H' | 'PT1D';

/**
 * Defines values for NetworkGroup.
 * Possible values include: 'None', 'NonRDMA', 'RDMA'
 * @readonly
 * @enum {string}
 */
export type NetworkGroup = 'None' | 'NonRDMA' | 'RDMA';

/**
 * Defines values for NetworkAdapterStatus.
 * Possible values include: 'Inactive', 'Active'
 * @readonly
 * @enum {string}
 */
export type NetworkAdapterStatus = 'Inactive' | 'Active';

/**
 * Defines values for NetworkAdapterRDMAStatus.
 * Possible values include: 'Incapable', 'Capable'
 * @readonly
 * @enum {string}
 */
export type NetworkAdapterRDMAStatus = 'Incapable' | 'Capable';

/**
 * Defines values for NetworkAdapterDHCPStatus.
 * Possible values include: 'Disabled', 'Enabled'
 * @readonly
 * @enum {string}
 */
export type NetworkAdapterDHCPStatus = 'Disabled' | 'Enabled';

/**
 * Defines values for OrderState.
 * Possible values include: 'Untracked', 'AwaitingFulfilment', 'AwaitingPreparation',
 * 'AwaitingShipment', 'Shipped', 'Arriving', 'Delivered', 'ReplacementRequested', 'LostDevice',
 * 'Declined', 'ReturnInitiated', 'AwaitingReturnShipment', 'ShippedBack', 'CollectedAtMicrosoft'
 * @readonly
 * @enum {string}
 */
export type OrderState = 'Untracked' | 'AwaitingFulfilment' | 'AwaitingPreparation' | 'AwaitingShipment' | 'Shipped' | 'Arriving' | 'Delivered' | 'ReplacementRequested' | 'LostDevice' | 'Declined' | 'ReturnInitiated' | 'AwaitingReturnShipment' | 'ShippedBack' | 'CollectedAtMicrosoft';

/**
 * Defines values for AuthenticationType.
 * Possible values include: 'Invalid', 'AzureActiveDirectory'
 * @readonly
 * @enum {string}
 */
export type AuthenticationType = 'Invalid' | 'AzureActiveDirectory';

/**
 * Defines values for ShareStatus.
 * Possible values include: 'Online', 'Offline'
 * @readonly
 * @enum {string}
 */
export type ShareStatus = 'Online' | 'Offline';

/**
 * Defines values for MonitoringStatus.
 * Possible values include: 'Enabled', 'Disabled'
 * @readonly
 * @enum {string}
 */
export type MonitoringStatus = 'Enabled' | 'Disabled';

/**
 * Defines values for ShareAccessProtocol.
 * Possible values include: 'SMB', 'NFS'
 * @readonly
 * @enum {string}
 */
export type ShareAccessProtocol = 'SMB' | 'NFS';

/**
 * Defines values for ShareAccessType.
 * Possible values include: 'Change', 'Read', 'Custom'
 * @readonly
 * @enum {string}
 */
export type ShareAccessType = 'Change' | 'Read' | 'Custom';

/**
 * Defines values for DataPolicy.
 * Possible values include: 'Cloud', 'Local'
 * @readonly
 * @enum {string}
 */
export type DataPolicy = 'Cloud' | 'Local';

/**
 * Defines values for SSLStatus.
 * Possible values include: 'Enabled', 'Disabled'
 * @readonly
 * @enum {string}
 */
export type SSLStatus = 'Enabled' | 'Disabled';

/**
 * Defines values for AccountType.
 * Possible values include: 'GeneralPurposeStorage', 'BlobStorage'
 * @readonly
 * @enum {string}
 */
export type AccountType = 'GeneralPurposeStorage' | 'BlobStorage';

/**
 * Defines values for InstallRebootBehavior.
 * Possible values include: 'NeverReboots', 'RequiresReboot', 'RequestReboot'
 * @readonly
 * @enum {string}
 */
export type InstallRebootBehavior = 'NeverReboots' | 'RequiresReboot' | 'RequestReboot';

/**
 * Defines values for UpdateOperation.
 * Possible values include: 'None', 'Scan', 'Download', 'Install'
 * @readonly
 * @enum {string}
 */
export type UpdateOperation = 'None' | 'Scan' | 'Download' | 'Install';

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationsList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationsList;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type OperationsListNextResponse = OperationsList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationsList;
    };
};

/**
 * Contains response data for the listBySubscription operation.
 */
export type DevicesListBySubscriptionResponse = DataBoxEdgeDeviceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataBoxEdgeDeviceList;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type DevicesListByResourceGroupResponse = DataBoxEdgeDeviceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataBoxEdgeDeviceList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type DevicesGetResponse = DataBoxEdgeDevice & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataBoxEdgeDevice;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type DevicesCreateOrUpdateResponse = DataBoxEdgeDevice & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataBoxEdgeDevice;
    };
};

/**
 * Contains response data for the update operation.
 */
export type DevicesUpdateResponse = DataBoxEdgeDevice & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataBoxEdgeDevice;
    };
};

/**
 * Contains response data for the createOrUpdateExtendedInfo operation.
 */
export type DevicesCreateOrUpdateExtendedInfoResponse = DataBoxEdgeDeviceExtendedInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataBoxEdgeDeviceExtendedInfo;
    };
};

/**
 * Contains response data for the getExtendedInformation operation.
 */
export type DevicesGetExtendedInformationResponse = DataBoxEdgeDeviceExtendedInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataBoxEdgeDeviceExtendedInfo;
    };
};

/**
 * Contains response data for the getNetworkSettings operation.
 */
export type DevicesGetNetworkSettingsResponse = NetworkSettings & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NetworkSettings;
    };
};

/**
 * Contains response data for the getUpdateSummary operation.
 */
export type DevicesGetUpdateSummaryResponse = UpdateSummary & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: UpdateSummary;
    };
};

/**
 * Contains response data for the uploadCertificate operation.
 */
export type DevicesUploadCertificateResponse = UploadCertificateResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: UploadCertificateResponse;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type DevicesBeginCreateOrUpdateResponse = DataBoxEdgeDevice & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataBoxEdgeDevice;
    };
};

/**
 * Contains response data for the listBySubscriptionNext operation.
 */
export type DevicesListBySubscriptionNextResponse = DataBoxEdgeDeviceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataBoxEdgeDeviceList;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type DevicesListByResourceGroupNextResponse = DataBoxEdgeDeviceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataBoxEdgeDeviceList;
    };
};

/**
 * Contains response data for the listByDataBoxEdgeDevice operation.
 */
export type AlertsListByDataBoxEdgeDeviceResponse = AlertList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AlertList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type AlertsGetResponse = Alert & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Alert;
    };
};

/**
 * Contains response data for the listByDataBoxEdgeDeviceNext operation.
 */
export type AlertsListByDataBoxEdgeDeviceNextResponse = AlertList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AlertList;
    };
};

/**
 * Contains response data for the listByDataBoxEdgeDevice operation.
 */
export type BandwidthSchedulesListByDataBoxEdgeDeviceResponse = BandwidthSchedulesList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BandwidthSchedulesList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type BandwidthSchedulesGetResponse = BandwidthSchedule & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BandwidthSchedule;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type BandwidthSchedulesCreateOrUpdateResponse = BandwidthSchedule & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BandwidthSchedule;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type BandwidthSchedulesBeginCreateOrUpdateResponse = BandwidthSchedule & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BandwidthSchedule;
    };
};

/**
 * Contains response data for the listByDataBoxEdgeDeviceNext operation.
 */
export type BandwidthSchedulesListByDataBoxEdgeDeviceNextResponse = BandwidthSchedulesList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BandwidthSchedulesList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type JobsGetResponse = Job & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Job;
    };
};

/**
 * Contains response data for the get operation.
 */
export type OperationsStatusGetResponse = Job & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Job;
    };
};

/**
 * Contains response data for the listByDataBoxEdgeDevice operation.
 */
export type OrdersListByDataBoxEdgeDeviceResponse = OrderList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OrderList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type OrdersGetResponse = Order & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Order;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type OrdersCreateOrUpdateResponse = Order & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Order;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type OrdersBeginCreateOrUpdateResponse = Order & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Order;
    };
};

/**
 * Contains response data for the listByDataBoxEdgeDeviceNext operation.
 */
export type OrdersListByDataBoxEdgeDeviceNextResponse = OrderList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OrderList;
    };
};

/**
 * Contains response data for the listByDataBoxEdgeDevice operation.
 */
export type RolesListByDataBoxEdgeDeviceResponse = RoleList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoleList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type RolesGetResponse = RoleUnion & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoleUnion;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type RolesCreateOrUpdateResponse = RoleUnion & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoleUnion;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type RolesBeginCreateOrUpdateResponse = RoleUnion & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoleUnion;
    };
};

/**
 * Contains response data for the listByDataBoxEdgeDeviceNext operation.
 */
export type RolesListByDataBoxEdgeDeviceNextResponse = RoleList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoleList;
    };
};

/**
 * Contains response data for the listByDataBoxEdgeDevice operation.
 */
export type SharesListByDataBoxEdgeDeviceResponse = ShareList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ShareList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type SharesGetResponse = Share & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Share;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type SharesCreateOrUpdateResponse = Share & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Share;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type SharesBeginCreateOrUpdateResponse = Share & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Share;
    };
};

/**
 * Contains response data for the listByDataBoxEdgeDeviceNext operation.
 */
export type SharesListByDataBoxEdgeDeviceNextResponse = ShareList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ShareList;
    };
};

/**
 * Contains response data for the listByDataBoxEdgeDevice operation.
 */
export type StorageAccountCredentialsListByDataBoxEdgeDeviceResponse = StorageAccountCredentialList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StorageAccountCredentialList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type StorageAccountCredentialsGetResponse = StorageAccountCredential & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StorageAccountCredential;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type StorageAccountCredentialsCreateOrUpdateResponse = StorageAccountCredential & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StorageAccountCredential;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type StorageAccountCredentialsBeginCreateOrUpdateResponse = StorageAccountCredential & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StorageAccountCredential;
    };
};

/**
 * Contains response data for the listByDataBoxEdgeDeviceNext operation.
 */
export type StorageAccountCredentialsListByDataBoxEdgeDeviceNextResponse = StorageAccountCredentialList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StorageAccountCredentialList;
    };
};

/**
 * Contains response data for the listByDataBoxEdgeDevice operation.
 */
export type TriggersListByDataBoxEdgeDeviceResponse = TriggerList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TriggerList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type TriggersGetResponse = TriggerUnion & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TriggerUnion;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type TriggersCreateOrUpdateResponse = TriggerUnion & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TriggerUnion;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type TriggersBeginCreateOrUpdateResponse = TriggerUnion & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TriggerUnion;
    };
};

/**
 * Contains response data for the listByDataBoxEdgeDeviceNext operation.
 */
export type TriggersListByDataBoxEdgeDeviceNextResponse = TriggerList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TriggerList;
    };
};

/**
 * Contains response data for the listByDataBoxEdgeDevice operation.
 */
export type UsersListByDataBoxEdgeDeviceResponse = UserList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: UserList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type UsersGetResponse = User & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: User;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type UsersCreateOrUpdateResponse = User & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: User;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type UsersBeginCreateOrUpdateResponse = User & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: User;
    };
};

/**
 * Contains response data for the listByDataBoxEdgeDeviceNext operation.
 */
export type UsersListByDataBoxEdgeDeviceNextResponse = UserList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: UserList;
    };
};
