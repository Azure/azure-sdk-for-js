/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };

/**
 * ARM resource.
 */
export interface Resource extends BaseResource {
  /**
   * Resource ID.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Resource name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Resource type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
}

/**
 * Terms properties for provided Publisher/Offer/Plan tuple
 */
export interface AgreementTerms extends Resource {
  /**
   * Publisher identifier string of image being deployed.
   */
  publisher?: string;
  /**
   * Offer identifier string of image being deployed.
   */
  product?: string;
  /**
   * Plan identifier string of image being deployed.
   */
  plan?: string;
  /**
   * Link to HTML with Microsoft and Publisher terms.
   */
  licenseTextLink?: string;
  /**
   * Link to the privacy policy of the publisher.
   */
  privacyPolicyLink?: string;
  /**
   * Date and time in UTC of when the terms were accepted. This is empty if Accepted is false.
   */
  retrieveDatetime?: string;
  /**
   * Terms signature.
   */
  signature?: string;
  /**
   * If any version of the terms have been accepted, otherwise false.
   */
  accepted?: boolean;
}

/**
 * The details of the error.
 */
export interface ErrorResponseError {
  /**
   * Error code.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly code?: string;
  /**
   * Error message indicating why the operation failed.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly message?: string;
}

/**
 * Error response indicates Microsoft.MarketplaceOrdering service is not able to process the
 * incoming request. The reason is provided in the error message.
 */
export interface ErrorResponse {
  /**
   * The details of the error.
   */
  error?: ErrorResponseError;
}

/**
 * The object that represents the operation.
 */
export interface OperationDisplay {
  /**
   * Service provider: Microsoft.MarketplaceOrdering
   */
  provider?: string;
  /**
   * Resource on which the operation is performed: Agreement, virtualmachine, etc.
   */
  resource?: string;
  /**
   * Operation type: Get Agreement, Sign Agreement, Cancel Agreement etc.
   */
  operation?: string;
}

/**
 * Microsoft.MarketplaceOrdering REST API operation
 */
export interface Operation {
  /**
   * Operation name: {provider}/{resource}/{operation}
   */
  name?: string;
  /**
   * The object that represents the operation.
   */
  display?: OperationDisplay;
}

/**
 * An interface representing MarketplaceOrderingAgreementsOptions.
 */
export interface MarketplaceOrderingAgreementsOptions extends AzureServiceClientOptions {
  baseUri?: string;
}

/**
 * @interface
 * Result of the request to list MarketplaceOrdering operations. It contains a list of operations
 * and a URL link to get the next set of results.
 * @extends Array<Operation>
 */
export interface OperationListResult extends Array<Operation> {
  /**
   * URL to get the next set of operation list results if there are any.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * Contains response data for the get operation.
 */
export type MarketplaceAgreementsGetResponse = AgreementTerms & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AgreementTerms;
    };
};

/**
 * Contains response data for the create operation.
 */
export type MarketplaceAgreementsCreateResponse = AgreementTerms & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AgreementTerms;
    };
};

/**
 * Contains response data for the sign operation.
 */
export type MarketplaceAgreementsSignResponse = AgreementTerms & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AgreementTerms;
    };
};

/**
 * Contains response data for the cancel operation.
 */
export type MarketplaceAgreementsCancelResponse = AgreementTerms & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AgreementTerms;
    };
};

/**
 * Contains response data for the getAgreement operation.
 */
export type MarketplaceAgreementsGetAgreementResponse = AgreementTerms & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AgreementTerms;
    };
};

/**
 * Contains response data for the list operation.
 */
export type MarketplaceAgreementsListResponse = Array<AgreementTerms> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AgreementTerms[];
    };
};

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type OperationsListNextResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationListResult;
    };
};
