/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };


/**
 * @interface
 * An interface representing CertificateVerificationDescription.
 * The JSON-serialized leaf certificate
 *
 */
export interface CertificateVerificationDescription {
  /**
   * @member {string} [certificate] base-64 representation of X509 certificate
   * .cer file or just .pem file content.
   */
  certificate?: string;
}

/**
 * @interface
 * An interface representing CertificateProperties.
 * The description of an X509 CA Certificate.
 *
 */
export interface CertificateProperties {
  /**
   * @member {string} [subject] The certificate's subject name.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly subject?: string;
  /**
   * @member {Date} [expiry] The certificate's expiration date and time.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly expiry?: Date;
  /**
   * @member {string} [thumbprint] The certificate's thumbprint.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly thumbprint?: string;
  /**
   * @member {boolean} [isVerified] Determines whether certificate has been
   * verified.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly isVerified?: boolean;
  /**
   * @member {Date} [created] The certificate's create date and time.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly created?: Date;
  /**
   * @member {Date} [updated] The certificate's last update date and time.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly updated?: Date;
  /**
   * @member {string} [certificate] The certificate content
   */
  certificate?: string;
}

/**
 * @interface
 * An interface representing CertificateDescription.
 * The X509 Certificate.
 *
 * @extends BaseResource
 */
export interface CertificateDescription extends BaseResource {
  /**
   * @member {CertificateProperties} [properties]
   */
  properties?: CertificateProperties;
  /**
   * @member {string} [id] The resource identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [name] The name of the certificate.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [etag] The entity tag.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly etag?: string;
  /**
   * @member {string} [type] The resource type.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: string;
}

/**
 * @interface
 * An interface representing CertificateListDescription.
 * The JSON-serialized array of Certificate objects.
 *
 */
export interface CertificateListDescription {
  /**
   * @member {CertificateDescription[]} [value] The array of Certificate
   * objects.
   */
  value?: CertificateDescription[];
}

/**
 * @interface
 * An interface representing CertificateBodyDescription.
 * The JSON-serialized X509 Certificate.
 *
 */
export interface CertificateBodyDescription {
  /**
   * @member {string} [certificate] base-64 representation of the X509 leaf
   * certificate .cer file or just .pem file content.
   */
  certificate?: string;
}

/**
 * @interface
 * An interface representing CertificatePropertiesWithNonce.
 * The description of an X509 CA Certificate including the challenge nonce
 * issued for the Proof-Of-Possession flow.
 *
 */
export interface CertificatePropertiesWithNonce {
  /**
   * @member {string} [subject] The certificate's subject name.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly subject?: string;
  /**
   * @member {Date} [expiry] The certificate's expiration date and time.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly expiry?: Date;
  /**
   * @member {string} [thumbprint] The certificate's thumbprint.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly thumbprint?: string;
  /**
   * @member {boolean} [isVerified] Determines whether certificate has been
   * verified.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly isVerified?: boolean;
  /**
   * @member {Date} [created] The certificate's create date and time.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly created?: Date;
  /**
   * @member {Date} [updated] The certificate's last update date and time.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly updated?: Date;
  /**
   * @member {string} [verificationCode] The certificate's verification code
   * that will be used for proof of possession.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly verificationCode?: string;
  /**
   * @member {string} [certificate] The certificate content
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly certificate?: string;
}

/**
 * @interface
 * An interface representing CertificateWithNonceDescription.
 * The X509 Certificate.
 *
 * @extends BaseResource
 */
export interface CertificateWithNonceDescription extends BaseResource {
  /**
   * @member {CertificatePropertiesWithNonce} [properties]
   */
  properties?: CertificatePropertiesWithNonce;
  /**
   * @member {string} [id] The resource identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [name] The name of the certificate.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [etag] The entity tag.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly etag?: string;
  /**
   * @member {string} [type] The resource type.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: string;
}

/**
 * @interface
 * An interface representing SharedAccessSignatureAuthorizationRule.
 * The properties of an IoT hub shared access policy.
 *
 */
export interface SharedAccessSignatureAuthorizationRule {
  /**
   * @member {string} keyName The name of the shared access policy.
   */
  keyName: string;
  /**
   * @member {string} [primaryKey] The primary key.
   */
  primaryKey?: string;
  /**
   * @member {string} [secondaryKey] The secondary key.
   */
  secondaryKey?: string;
  /**
   * @member {AccessRights} rights The permissions assigned to the shared
   * access policy. Possible values include: 'RegistryRead', 'RegistryWrite',
   * 'ServiceConnect', 'DeviceConnect', 'RegistryRead, RegistryWrite',
   * 'RegistryRead, ServiceConnect', 'RegistryRead, DeviceConnect',
   * 'RegistryWrite, ServiceConnect', 'RegistryWrite, DeviceConnect',
   * 'ServiceConnect, DeviceConnect', 'RegistryRead, RegistryWrite,
   * ServiceConnect', 'RegistryRead, RegistryWrite, DeviceConnect',
   * 'RegistryRead, ServiceConnect, DeviceConnect', 'RegistryWrite,
   * ServiceConnect, DeviceConnect', 'RegistryRead, RegistryWrite,
   * ServiceConnect, DeviceConnect'
   */
  rights: AccessRights;
}

/**
 * @interface
 * An interface representing IpFilterRule.
 * The IP filter rules for the IoT hub.
 *
 */
export interface IpFilterRule {
  /**
   * @member {string} filterName The name of the IP filter rule.
   */
  filterName: string;
  /**
   * @member {IpFilterActionType} action The desired action for requests
   * captured by this rule. Possible values include: 'Accept', 'Reject'
   */
  action: IpFilterActionType;
  /**
   * @member {string} ipMask A string that contains the IP address range in
   * CIDR notation for the rule.
   */
  ipMask: string;
}

/**
 * @interface
 * An interface representing EventHubProperties.
 * The properties of the provisioned Event Hub-compatible endpoint used by the
 * IoT hub.
 *
 */
export interface EventHubProperties {
  /**
   * @member {number} [retentionTimeInDays] The retention time for
   * device-to-cloud messages in days. See:
   * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#device-to-cloud-messages
   */
  retentionTimeInDays?: number;
  /**
   * @member {number} [partitionCount] The number of partitions for receiving
   * device-to-cloud messages in the Event Hub-compatible endpoint. See:
   * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#device-to-cloud-messages.
   */
  partitionCount?: number;
  /**
   * @member {string[]} [partitionIds] The partition ids in the Event
   * Hub-compatible endpoint.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly partitionIds?: string[];
  /**
   * @member {string} [path] The Event Hub-compatible name.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly path?: string;
  /**
   * @member {string} [endpoint] The Event Hub-compatible endpoint.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly endpoint?: string;
}

/**
 * @interface
 * An interface representing RoutingServiceBusQueueEndpointProperties.
 * The properties related to service bus queue endpoint types.
 *
 */
export interface RoutingServiceBusQueueEndpointProperties {
  /**
   * @member {string} connectionString The connection string of the service bus
   * queue endpoint.
   */
  connectionString: string;
  /**
   * @member {string} name The name that identifies this endpoint. The name can
   * only include alphanumeric characters, periods, underscores, hyphens and
   * has a maximum length of 64 characters. The following names are reserved:
   * events, fileNotifications, $default. Endpoint names must be unique across
   * endpoint types. The name need not be the same as the actual queue name.
   */
  name: string;
  /**
   * @member {string} [subscriptionId] The subscription identifier of the
   * service bus queue endpoint.
   */
  subscriptionId?: string;
  /**
   * @member {string} [resourceGroup] The name of the resource group of the
   * service bus queue endpoint.
   */
  resourceGroup?: string;
}

/**
 * @interface
 * An interface representing RoutingServiceBusTopicEndpointProperties.
 * The properties related to service bus topic endpoint types.
 *
 */
export interface RoutingServiceBusTopicEndpointProperties {
  /**
   * @member {string} connectionString The connection string of the service bus
   * topic endpoint.
   */
  connectionString: string;
  /**
   * @member {string} name The name that identifies this endpoint. The name can
   * only include alphanumeric characters, periods, underscores, hyphens and
   * has a maximum length of 64 characters. The following names are reserved:
   * events, fileNotifications, $default. Endpoint names must be unique across
   * endpoint types.  The name need not be the same as the actual topic name.
   */
  name: string;
  /**
   * @member {string} [subscriptionId] The subscription identifier of the
   * service bus topic endpoint.
   */
  subscriptionId?: string;
  /**
   * @member {string} [resourceGroup] The name of the resource group of the
   * service bus topic endpoint.
   */
  resourceGroup?: string;
}

/**
 * @interface
 * An interface representing RoutingEventHubProperties.
 * The properties related to an event hub endpoint.
 *
 */
export interface RoutingEventHubProperties {
  /**
   * @member {string} connectionString The connection string of the event hub
   * endpoint.
   */
  connectionString: string;
  /**
   * @member {string} name The name that identifies this endpoint. The name can
   * only include alphanumeric characters, periods, underscores, hyphens and
   * has a maximum length of 64 characters. The following names are reserved:
   * events, fileNotifications, $default. Endpoint names must be unique across
   * endpoint types.
   */
  name: string;
  /**
   * @member {string} [subscriptionId] The subscription identifier of the event
   * hub endpoint.
   */
  subscriptionId?: string;
  /**
   * @member {string} [resourceGroup] The name of the resource group of the
   * event hub endpoint.
   */
  resourceGroup?: string;
}

/**
 * @interface
 * An interface representing RoutingStorageContainerProperties.
 * The properties related to a storage container endpoint.
 *
 */
export interface RoutingStorageContainerProperties {
  /**
   * @member {string} connectionString The connection string of the storage
   * account.
   */
  connectionString: string;
  /**
   * @member {string} name The name that identifies this endpoint. The name can
   * only include alphanumeric characters, periods, underscores, hyphens and
   * has a maximum length of 64 characters. The following names are reserved:
   * events, fileNotifications, $default. Endpoint names must be unique across
   * endpoint types.
   */
  name: string;
  /**
   * @member {string} [subscriptionId] The subscription identifier of the
   * storage account.
   */
  subscriptionId?: string;
  /**
   * @member {string} [resourceGroup] The name of the resource group of the
   * storage account.
   */
  resourceGroup?: string;
  /**
   * @member {string} containerName The name of storage container in the
   * storage account.
   */
  containerName: string;
  /**
   * @member {string} [fileNameFormat] File name format for the blob. Default
   * format is {iothub}/{partition}/{YYYY}/{MM}/{DD}/{HH}/{mm}. All parameters
   * are mandatory but can be reordered.
   */
  fileNameFormat?: string;
  /**
   * @member {number} [batchFrequencyInSeconds] Time interval at which blobs
   * are written to storage. Value should be between 60 and 720 seconds.
   * Default value is 300 seconds.
   */
  batchFrequencyInSeconds?: number;
  /**
   * @member {number} [maxChunkSizeInBytes] Maximum number of bytes for each
   * blob written to storage. Value should be between 10485760(10MB) and
   * 524288000(500MB). Default value is 314572800(300MB).
   */
  maxChunkSizeInBytes?: number;
  /**
   * @member {Encoding} [encoding] Encoding that is used to serialize messages
   * to blobs. Supported values are 'avro', 'avrodeflate', and 'JSON'. Default
   * value is 'avro'. Possible values include: 'Avro', 'AvroDeflate', 'JSON'
   */
  encoding?: Encoding;
}

/**
 * @interface
 * An interface representing RoutingEndpoints.
 * The properties related to the custom endpoints to which your IoT hub routes
 * messages based on the routing rules. A maximum of 10 custom endpoints are
 * allowed across all endpoint types for paid hubs and only 1 custom endpoint
 * is allowed across all endpoint types for free hubs.
 *
 */
export interface RoutingEndpoints {
  /**
   * @member {RoutingServiceBusQueueEndpointProperties[]} [serviceBusQueues]
   * The list of Service Bus queue endpoints that IoT hub routes the messages
   * to, based on the routing rules.
   */
  serviceBusQueues?: RoutingServiceBusQueueEndpointProperties[];
  /**
   * @member {RoutingServiceBusTopicEndpointProperties[]} [serviceBusTopics]
   * The list of Service Bus topic endpoints that the IoT hub routes the
   * messages to, based on the routing rules.
   */
  serviceBusTopics?: RoutingServiceBusTopicEndpointProperties[];
  /**
   * @member {RoutingEventHubProperties[]} [eventHubs] The list of Event Hubs
   * endpoints that IoT hub routes messages to, based on the routing rules.
   * This list does not include the built-in Event Hubs endpoint.
   */
  eventHubs?: RoutingEventHubProperties[];
  /**
   * @member {RoutingStorageContainerProperties[]} [storageContainers] The list
   * of storage container endpoints that IoT hub routes messages to, based on
   * the routing rules.
   */
  storageContainers?: RoutingStorageContainerProperties[];
}

/**
 * @interface
 * An interface representing RouteProperties.
 * The properties of a routing rule that your IoT hub uses to route messages to
 * endpoints.
 *
 */
export interface RouteProperties {
  /**
   * @member {string} name The name of the route. The name can only include
   * alphanumeric characters, periods, underscores, hyphens, has a maximum
   * length of 64 characters, and must be unique.
   */
  name: string;
  /**
   * @member {RoutingSource} source The source that the routing rule is to be
   * applied to, such as DeviceMessages. Possible values include: 'Invalid',
   * 'DeviceMessages', 'TwinChangeEvents', 'DeviceLifecycleEvents',
   * 'DeviceJobLifecycleEvents'
   */
  source: RoutingSource;
  /**
   * @member {string} [condition] The condition that is evaluated to apply the
   * routing rule. If no condition is provided, it evaluates to true by
   * default. For grammar, see:
   * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language
   */
  condition?: string;
  /**
   * @member {string[]} endpointNames The list of endpoints to which messages
   * that satisfy the condition are routed. Currently only one endpoint is
   * allowed.
   */
  endpointNames: string[];
  /**
   * @member {boolean} isEnabled Used to specify whether a route is enabled.
   */
  isEnabled: boolean;
}

/**
 * @interface
 * An interface representing FallbackRouteProperties.
 * The properties of the fallback route. IoT Hub uses these properties when it
 * routes messages to the fallback endpoint.
 *
 */
export interface FallbackRouteProperties {
  /**
   * @member {string} [name] The name of the route. The name can only include
   * alphanumeric characters, periods, underscores, hyphens, has a maximum
   * length of 64 characters, and must be unique.
   */
  name?: string;
  /**
   * @member {string} [condition] The condition which is evaluated in order to
   * apply the fallback route. If the condition is not provided it will
   * evaluate to true by default. For grammar, See:
   * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language
   */
  condition?: string;
  /**
   * @member {string[]} endpointNames The list of endpoints to which the
   * messages that satisfy the condition are routed to. Currently only 1
   * endpoint is allowed.
   */
  endpointNames: string[];
  /**
   * @member {boolean} isEnabled Used to specify whether the fallback route is
   * enabled.
   */
  isEnabled: boolean;
}

/**
 * @interface
 * An interface representing EnrichmentProperties.
 * The properties of an enrichment that your IoT hub applies to messages
 * delivered to endpoints.
 *
 */
export interface EnrichmentProperties {
  /**
   * @member {string} key The key or name for the enrichment property.
   */
  key: string;
  /**
   * @member {string} value The value for the enrichment property.
   */
  value: string;
  /**
   * @member {string[]} endpointNames The list of endpoints for which the
   * enrichment is applied to the message.
   */
  endpointNames: string[];
}

/**
 * @interface
 * An interface representing RoutingProperties.
 * The routing related properties of the IoT hub. See:
 * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging
 *
 */
export interface RoutingProperties {
  /**
   * @member {RoutingEndpoints} [endpoints]
   */
  endpoints?: RoutingEndpoints;
  /**
   * @member {RouteProperties[]} [routes] The list of user-provided routing
   * rules that the IoT hub uses to route messages to built-in and custom
   * endpoints. A maximum of 100 routing rules are allowed for paid hubs and a
   * maximum of 5 routing rules are allowed for free hubs.
   */
  routes?: RouteProperties[];
  /**
   * @member {FallbackRouteProperties} [fallbackRoute] The properties of the
   * route that is used as a fall-back route when none of the conditions
   * specified in the 'routes' section are met. This is an optional parameter.
   * When this property is not set, the messages which do not meet any of the
   * conditions specified in the 'routes' section get routed to the built-in
   * eventhub endpoint.
   */
  fallbackRoute?: FallbackRouteProperties;
  /**
   * @member {EnrichmentProperties[]} [enrichments] The list of user-provided
   * enrichments that the IoT hub applies to messages to be delivered to
   * built-in and custom endpoints. See: https://aka.ms/telemetryoneventgrid
   */
  enrichments?: EnrichmentProperties[];
}

/**
 * @interface
 * An interface representing StorageEndpointProperties.
 * The properties of the Azure Storage endpoint for file upload.
 *
 */
export interface StorageEndpointProperties {
  /**
   * @member {string} [sasTtlAsIso8601] The period of time for which the SAS
   * URI generated by IoT Hub for file upload is valid. See:
   * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload#file-upload-notification-configuration-options.
   */
  sasTtlAsIso8601?: string;
  /**
   * @member {string} connectionString The connection string for the Azure
   * Storage account to which files are uploaded.
   */
  connectionString: string;
  /**
   * @member {string} containerName The name of the root container where you
   * upload files. The container need not exist but should be creatable using
   * the connectionString specified.
   */
  containerName: string;
}

/**
 * @interface
 * An interface representing MessagingEndpointProperties.
 * The properties of the messaging endpoints used by this IoT hub.
 *
 */
export interface MessagingEndpointProperties {
  /**
   * @member {string} [lockDurationAsIso8601] The lock duration. See:
   * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.
   */
  lockDurationAsIso8601?: string;
  /**
   * @member {string} [ttlAsIso8601] The period of time for which a message is
   * available to consume before it is expired by the IoT hub. See:
   * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.
   */
  ttlAsIso8601?: string;
  /**
   * @member {number} [maxDeliveryCount] The number of times the IoT hub
   * attempts to deliver a message. See:
   * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.
   */
  maxDeliveryCount?: number;
}

/**
 * @interface
 * An interface representing FeedbackProperties.
 * The properties of the feedback queue for cloud-to-device messages.
 *
 */
export interface FeedbackProperties {
  /**
   * @member {string} [lockDurationAsIso8601] The lock duration for the
   * feedback queue. See:
   * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
   */
  lockDurationAsIso8601?: string;
  /**
   * @member {string} [ttlAsIso8601] The period of time for which a message is
   * available to consume before it is expired by the IoT hub. See:
   * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
   */
  ttlAsIso8601?: string;
  /**
   * @member {number} [maxDeliveryCount] The number of times the IoT hub
   * attempts to deliver a message on the feedback queue. See:
   * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
   */
  maxDeliveryCount?: number;
}

/**
 * @interface
 * An interface representing CloudToDeviceProperties.
 * The IoT hub cloud-to-device messaging properties.
 *
 */
export interface CloudToDeviceProperties {
  /**
   * @member {number} [maxDeliveryCount] The max delivery count for
   * cloud-to-device messages in the device queue. See:
   * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
   */
  maxDeliveryCount?: number;
  /**
   * @member {string} [defaultTtlAsIso8601] The default time to live for
   * cloud-to-device messages in the device queue. See:
   * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
   */
  defaultTtlAsIso8601?: string;
  /**
   * @member {FeedbackProperties} [feedback]
   */
  feedback?: FeedbackProperties;
}

/**
 * @interface
 * An interface representing IotHubPropertiesDeviceStreams.
 * The device streams properties of iothub.
 *
 */
export interface IotHubPropertiesDeviceStreams {
  /**
   * @member {string[]} [streamingEndpoints] List of Device Streams Endpoints.
   */
  streamingEndpoints?: string[];
}

/**
 * @interface
 * An interface representing IotHubProperties.
 * The properties of an IoT hub.
 *
 */
export interface IotHubProperties {
  /**
   * @member {SharedAccessSignatureAuthorizationRule[]} [authorizationPolicies]
   * The shared access policies you can use to secure a connection to the IoT
   * hub.
   */
  authorizationPolicies?: SharedAccessSignatureAuthorizationRule[];
  /**
   * @member {IpFilterRule[]} [ipFilterRules] The IP filter rules.
   */
  ipFilterRules?: IpFilterRule[];
  /**
   * @member {string} [provisioningState] The provisioning state.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provisioningState?: string;
  /**
   * @member {string} [state] The hub state.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly state?: string;
  /**
   * @member {string} [hostName] The name of the host.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly hostName?: string;
  /**
   * @member {{ [propertyName: string]: EventHubProperties }}
   * [eventHubEndpoints] The Event Hub-compatible endpoint properties. The only
   * possible keys to this dictionary is events. This key has to be present in
   * the dictionary while making create or update calls for the IoT hub.
   */
  eventHubEndpoints?: { [propertyName: string]: EventHubProperties };
  /**
   * @member {RoutingProperties} [routing]
   */
  routing?: RoutingProperties;
  /**
   * @member {{ [propertyName: string]: StorageEndpointProperties }}
   * [storageEndpoints] The list of Azure Storage endpoints where you can
   * upload files. Currently you can configure only one Azure Storage account
   * and that MUST have its key as $default. Specifying more than one storage
   * account causes an error to be thrown. Not specifying a value for this
   * property when the enableFileUploadNotifications property is set to True,
   * causes an error to be thrown.
   */
  storageEndpoints?: { [propertyName: string]: StorageEndpointProperties };
  /**
   * @member {{ [propertyName: string]: MessagingEndpointProperties }}
   * [messagingEndpoints] The messaging endpoint properties for the file upload
   * notification queue.
   */
  messagingEndpoints?: { [propertyName: string]: MessagingEndpointProperties };
  /**
   * @member {boolean} [enableFileUploadNotifications] If True, file upload
   * notifications are enabled.
   */
  enableFileUploadNotifications?: boolean;
  /**
   * @member {CloudToDeviceProperties} [cloudToDevice]
   */
  cloudToDevice?: CloudToDeviceProperties;
  /**
   * @member {string} [comments] IoT hub comments.
   */
  comments?: string;
  /**
   * @member {IotHubPropertiesDeviceStreams} [deviceStreams] The device streams
   * properties of iothub.
   */
  deviceStreams?: IotHubPropertiesDeviceStreams;
  /**
   * @member {Capabilities} [features] The capabilities and features enabled
   * for the IoT hub. Possible values include: 'None', 'DeviceManagement'
   */
  features?: Capabilities;
}

/**
 * @interface
 * An interface representing IotHubSkuInfo.
 * Information about the SKU of the IoT hub.
 *
 */
export interface IotHubSkuInfo {
  /**
   * @member {IotHubSku} name The name of the SKU. Possible values include:
   * 'F1', 'S1', 'S2', 'S3', 'B1', 'B2', 'B3'
   */
  name: IotHubSku;
  /**
   * @member {IotHubSkuTier} [tier] The billing tier for the IoT hub. Possible
   * values include: 'Free', 'Standard', 'Basic'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly tier?: IotHubSkuTier;
  /**
   * @member {number} [capacity] The number of provisioned IoT Hub units. See:
   * https://docs.microsoft.com/azure/azure-subscription-service-limits#iot-hub-limits.
   */
  capacity?: number;
}

/**
 * @interface
 * An interface representing Resource.
 * The common properties of an Azure resource.
 *
 * @extends BaseResource
 */
export interface Resource extends BaseResource {
  /**
   * @member {string} [id] The resource identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [name] The resource name.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [type] The resource type.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: string;
  /**
   * @member {string} location The resource location.
   */
  location: string;
  /**
   * @member {{ [propertyName: string]: string }} [tags] The resource tags.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * @interface
 * An interface representing IotHubDescription.
 * The description of the IoT hub.
 *
 * @extends Resource
 */
export interface IotHubDescription extends Resource {
  /**
   * @member {string} [etag] The Etag field is *not* required. If it is
   * provided in the response body, it must also be provided as a header per
   * the normal ETag convention.
   */
  etag?: string;
  /**
   * @member {IotHubProperties} [properties] IotHub properties
   */
  properties?: IotHubProperties;
  /**
   * @member {IotHubSkuInfo} sku IotHub SKU info
   */
  sku: IotHubSkuInfo;
}

/**
 * @interface
 * An interface representing OperationDisplay.
 * The object that represents the operation.
 *
 */
export interface OperationDisplay {
  /**
   * @member {string} [provider] Service provider: Microsoft Devices
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provider?: string;
  /**
   * @member {string} [resource] Resource Type: IotHubs
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly resource?: string;
  /**
   * @member {string} [operation] Name of the operation
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly operation?: string;
  /**
   * @member {string} [description] Description of the operation
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
}

/**
 * @interface
 * An interface representing Operation.
 * IoT Hub REST API operation
 *
 */
export interface Operation {
  /**
   * @member {string} [name] Operation name: {provider}/{resource}/{read |
   * write | action | delete}
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {OperationDisplay} [display] The object that represents the
   * operation.
   */
  display?: OperationDisplay;
}

/**
 * @interface
 * An interface representing ErrorDetails.
 * Error details.
 *
 */
export interface ErrorDetails {
  /**
   * @member {string} [code] The error code.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly code?: string;
  /**
   * @member {string} [httpStatusCode] The HTTP status code.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly httpStatusCode?: string;
  /**
   * @member {string} [message] The error message.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly message?: string;
  /**
   * @member {string} [details] The error details.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly details?: string;
}

/**
 * @interface
 * An interface representing IotHubQuotaMetricInfo.
 * Quota metrics properties.
 *
 */
export interface IotHubQuotaMetricInfo {
  /**
   * @member {string} [name] The name of the quota metric.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {number} [currentValue] The current value for the quota metric.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly currentValue?: number;
  /**
   * @member {number} [maxValue] The maximum value of the quota metric.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly maxValue?: number;
}

/**
 * @interface
 * An interface representing EndpointHealthData.
 * The health data for an endpoint
 *
 */
export interface EndpointHealthData {
  /**
   * @member {string} [endpointId] Id of the endpoint
   */
  endpointId?: string;
  /**
   * @member {EndpointHealthStatus} [healthStatus] Health statuses have
   * following meanings. The 'healthy' status shows that the endpoint is
   * accepting messages as expected. The 'unhealthy' status shows that the
   * endpoint is not accepting messages as expected and IoT Hub is retrying to
   * send data to this endpoint. The status of an unhealthy endpoint will be
   * updated to healthy when IoT Hub has established an eventually consistent
   * state of health. The 'dead' status shows that the endpoint is not
   * accepting messages, after IoT Hub retried sending messages for the retrial
   * period. See IoT Hub metrics to identify errors and monitor issues with
   * endpoints. The 'unknown' status shows that the IoT Hub has not established
   * a connection with the endpoint. No messages have been delivered to or
   * rejected from this endpoint. Possible values include: 'unknown',
   * 'healthy', 'unhealthy', 'dead'
   */
  healthStatus?: EndpointHealthStatus;
}

/**
 * @interface
 * An interface representing RegistryStatistics.
 * Identity registry statistics.
 *
 */
export interface RegistryStatistics {
  /**
   * @member {number} [totalDeviceCount] The total count of devices in the
   * identity registry.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly totalDeviceCount?: number;
  /**
   * @member {number} [enabledDeviceCount] The count of enabled devices in the
   * identity registry.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly enabledDeviceCount?: number;
  /**
   * @member {number} [disabledDeviceCount] The count of disabled devices in
   * the identity registry.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly disabledDeviceCount?: number;
}

/**
 * @interface
 * An interface representing JobResponse.
 * The properties of the Job Response object.
 *
 */
export interface JobResponse {
  /**
   * @member {string} [jobId] The job identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly jobId?: string;
  /**
   * @member {Date} [startTimeUtc] The start time of the job.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly startTimeUtc?: Date;
  /**
   * @member {Date} [endTimeUtc] The time the job stopped processing.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly endTimeUtc?: Date;
  /**
   * @member {JobType} [type] The type of the job. Possible values include:
   * 'unknown', 'export', 'import', 'backup', 'readDeviceProperties',
   * 'writeDeviceProperties', 'updateDeviceConfiguration', 'rebootDevice',
   * 'factoryResetDevice', 'firmwareUpdate'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: JobType;
  /**
   * @member {JobStatus} [status] The status of the job. Possible values
   * include: 'unknown', 'enqueued', 'running', 'completed', 'failed',
   * 'cancelled'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly status?: JobStatus;
  /**
   * @member {string} [failureReason] If status == failed, this string
   * containing the reason for the failure.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly failureReason?: string;
  /**
   * @member {string} [statusMessage] The status message for the job.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly statusMessage?: string;
  /**
   * @member {string} [parentJobId] The job identifier of the parent job, if
   * any.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly parentJobId?: string;
}

/**
 * @interface
 * An interface representing IotHubCapacity.
 * IoT Hub capacity information.
 *
 */
export interface IotHubCapacity {
  /**
   * @member {number} [minimum] The minimum number of units.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly minimum?: number;
  /**
   * @member {number} [maximum] The maximum number of units.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly maximum?: number;
  /**
   * @member {number} [default] The default number of units.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly default?: number;
  /**
   * @member {IotHubScaleType} [scaleType] The type of the scaling enabled.
   * Possible values include: 'Automatic', 'Manual', 'None'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly scaleType?: IotHubScaleType;
}

/**
 * @interface
 * An interface representing IotHubSkuDescription.
 * SKU properties.
 *
 */
export interface IotHubSkuDescription {
  /**
   * @member {string} [resourceType] The type of the resource.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly resourceType?: string;
  /**
   * @member {IotHubSkuInfo} sku The type of the resource.
   */
  sku: IotHubSkuInfo;
  /**
   * @member {IotHubCapacity} capacity IotHub capacity
   */
  capacity: IotHubCapacity;
}

/**
 * @interface
 * An interface representing TagsResource.
 * A container holding only the Tags for a resource, allowing the user to
 * update the tags on an IoT Hub instance.
 *
 */
export interface TagsResource {
  /**
   * @member {{ [propertyName: string]: string }} [tags] Resource tags
   */
  tags?: { [propertyName: string]: string };
}

/**
 * @interface
 * An interface representing EventHubConsumerGroupInfo.
 * The properties of the EventHubConsumerGroupInfo object.
 *
 * @extends BaseResource
 */
export interface EventHubConsumerGroupInfo extends BaseResource {
  /**
   * @member {{ [propertyName: string]: string }} [properties] The tags.
   */
  properties?: { [propertyName: string]: string };
  /**
   * @member {string} [id] The Event Hub-compatible consumer group identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [name] The Event Hub-compatible consumer group name.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [type] the resource type.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: string;
  /**
   * @member {string} [etag] The etag.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly etag?: string;
}

/**
 * @interface
 * An interface representing OperationInputs.
 * Input values.
 *
 */
export interface OperationInputs {
  /**
   * @member {string} name The name of the IoT hub to check.
   */
  name: string;
}

/**
 * @interface
 * An interface representing IotHubNameAvailabilityInfo.
 * The properties indicating whether a given IoT hub name is available.
 *
 */
export interface IotHubNameAvailabilityInfo {
  /**
   * @member {boolean} [nameAvailable] The value which indicates whether the
   * provided name is available.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nameAvailable?: boolean;
  /**
   * @member {IotHubNameUnavailabilityReason} [reason] The reason for
   * unavailability. Possible values include: 'Invalid', 'AlreadyExists'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly reason?: IotHubNameUnavailabilityReason;
  /**
   * @member {string} [message] The detailed reason message.
   */
  message?: string;
}

/**
 * @interface
 * An interface representing Name.
 * Name of Iot Hub type
 *
 */
export interface Name {
  /**
   * @member {string} [value] IotHub type
   */
  value?: string;
  /**
   * @member {string} [localizedValue] Localized value of name
   */
  localizedValue?: string;
}

/**
 * @interface
 * An interface representing UserSubscriptionQuota.
 * User subscription quota response
 *
 */
export interface UserSubscriptionQuota {
  /**
   * @member {string} [id] IotHub type id
   */
  id?: string;
  /**
   * @member {string} [type] Response type
   */
  type?: string;
  /**
   * @member {string} [unit] Unit of IotHub type
   */
  unit?: string;
  /**
   * @member {number} [currentValue] Current number of IotHub type
   */
  currentValue?: number;
  /**
   * @member {number} [limit] Numerical limit on IotHub type
   */
  limit?: number;
  /**
   * @member {Name} [name] IotHub type
   */
  name?: Name;
}

/**
 * @interface
 * An interface representing UserSubscriptionQuotaListResult.
 * Json-serialized array of User subscription quota response
 *
 */
export interface UserSubscriptionQuotaListResult {
  /**
   * @member {UserSubscriptionQuota[]} [value]
   */
  value?: UserSubscriptionQuota[];
  /**
   * @member {string} [nextLink] **NOTE: This property will not be serialized.
   * It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing RoutingMessage.
 * Routing message
 *
 */
export interface RoutingMessage {
  /**
   * @member {string} [body] Body of routing message
   */
  body?: string;
  /**
   * @member {{ [propertyName: string]: string }} [appProperties] App
   * properties
   */
  appProperties?: { [propertyName: string]: string };
  /**
   * @member {{ [propertyName: string]: string }} [systemProperties] System
   * properties
   */
  systemProperties?: { [propertyName: string]: string };
}

/**
 * @interface
 * An interface representing RoutingTwinProperties.
 */
export interface RoutingTwinProperties {
  /**
   * @member {any} [desired] Twin desired properties
   */
  desired?: any;
  /**
   * @member {any} [reported] Twin desired properties
   */
  reported?: any;
}

/**
 * @interface
 * An interface representing RoutingTwin.
 * Twin reference input parameter. This is an optional parameter
 *
 */
export interface RoutingTwin {
  /**
   * @member {any} [tags] Twin Tags
   */
  tags?: any;
  /**
   * @member {RoutingTwinProperties} [properties]
   */
  properties?: RoutingTwinProperties;
}

/**
 * @interface
 * An interface representing TestAllRoutesInput.
 * Input for testing all routes
 *
 */
export interface TestAllRoutesInput {
  /**
   * @member {RoutingSource} [routingSource] Routing source. Possible values
   * include: 'Invalid', 'DeviceMessages', 'TwinChangeEvents',
   * 'DeviceLifecycleEvents', 'DeviceJobLifecycleEvents'
   */
  routingSource?: RoutingSource;
  /**
   * @member {RoutingMessage} [message] Routing message
   */
  message?: RoutingMessage;
  /**
   * @member {RoutingTwin} [twin] Routing Twin Reference
   */
  twin?: RoutingTwin;
}

/**
 * @interface
 * An interface representing MatchedRoute.
 * Routes that matched
 *
 */
export interface MatchedRoute {
  /**
   * @member {RouteProperties} [properties] Properties of routes that matched
   */
  properties?: RouteProperties;
}

/**
 * @interface
 * An interface representing TestAllRoutesResult.
 * Result of testing all routes
 *
 */
export interface TestAllRoutesResult {
  /**
   * @member {MatchedRoute[]} [routes] JSON-serialized array of matched routes
   */
  routes?: MatchedRoute[];
}

/**
 * @interface
 * An interface representing TestRouteInput.
 * Input for testing route
 *
 */
export interface TestRouteInput {
  /**
   * @member {RoutingMessage} [message] Routing message
   */
  message?: RoutingMessage;
  /**
   * @member {RouteProperties} route Route properties
   */
  route: RouteProperties;
  /**
   * @member {RoutingTwin} [twin] Routing Twin Reference
   */
  twin?: RoutingTwin;
}

/**
 * @interface
 * An interface representing RouteErrorPosition.
 * Position where the route error happened
 *
 */
export interface RouteErrorPosition {
  /**
   * @member {number} [line] Line where the route error happened
   */
  line?: number;
  /**
   * @member {number} [column] Column where the route error happened
   */
  column?: number;
}

/**
 * @interface
 * An interface representing RouteErrorRange.
 * Range of route errors
 *
 */
export interface RouteErrorRange {
  /**
   * @member {RouteErrorPosition} [start] Start where the route error happened
   */
  start?: RouteErrorPosition;
  /**
   * @member {RouteErrorPosition} [end] End where the route error happened
   */
  end?: RouteErrorPosition;
}

/**
 * @interface
 * An interface representing RouteCompilationError.
 * Compilation error when evaluating route
 *
 */
export interface RouteCompilationError {
  /**
   * @member {string} [message] Route error message
   */
  message?: string;
  /**
   * @member {RouteErrorSeverity} [severity] Severity of the route error.
   * Possible values include: 'error', 'warning'
   */
  severity?: RouteErrorSeverity;
  /**
   * @member {RouteErrorRange} [location] Location where the route error
   * happened
   */
  location?: RouteErrorRange;
}

/**
 * @interface
 * An interface representing TestRouteResultDetails.
 * Detailed result of testing a route
 *
 */
export interface TestRouteResultDetails {
  /**
   * @member {RouteCompilationError[]} [compilationErrors] JSON-serialized list
   * of route compilation errors
   */
  compilationErrors?: RouteCompilationError[];
}

/**
 * @interface
 * An interface representing TestRouteResult.
 * Result of testing one route
 *
 */
export interface TestRouteResult {
  /**
   * @member {TestResultStatus} [result] Result of testing route. Possible
   * values include: 'undefined', 'false', 'true'
   */
  result?: TestResultStatus;
  /**
   * @member {TestRouteResultDetails} [details] Detailed result of testing
   * route
   */
  details?: TestRouteResultDetails;
}

/**
 * @interface
 * An interface representing ExportDevicesRequest.
 * Use to provide parameters when requesting an export of all devices in the
 * IoT hub.
 *
 */
export interface ExportDevicesRequest {
  /**
   * @member {string} exportBlobContainerUri The export blob container URI.
   */
  exportBlobContainerUri: string;
  /**
   * @member {boolean} excludeKeys The value indicating whether keys should be
   * excluded during export.
   */
  excludeKeys: boolean;
}

/**
 * @interface
 * An interface representing ImportDevicesRequest.
 * Use to provide parameters when requesting an import of all devices in the
 * hub.
 *
 */
export interface ImportDevicesRequest {
  /**
   * @member {string} inputBlobContainerUri The input blob container URI.
   */
  inputBlobContainerUri: string;
  /**
   * @member {string} outputBlobContainerUri The output blob container URI.
   */
  outputBlobContainerUri: string;
}

/**
 * @interface
 * An interface representing FailoverInput.
 * Use to provide failover region when requesting manual Failover for a hub.
 *
 */
export interface FailoverInput {
  /**
   * @member {string} failoverRegion Region the hub will be failed over to
   */
  failoverRegion: string;
}

/**
 * @interface
 * An interface representing IotHubResourceCreateOrUpdateOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface IotHubResourceCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [ifMatch] ETag of the IoT Hub. Do not specify for
   * creating a brand new IoT Hub. Required to update an existing IoT Hub.
   */
  ifMatch?: string;
}

/**
 * @interface
 * An interface representing IotHubResourceUpdateOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface IotHubResourceUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {{ [propertyName: string]: string }} [tags] Resource tags
   */
  tags?: { [propertyName: string]: string };
}

/**
 * @interface
 * An interface representing IotHubResourceBeginCreateOrUpdateOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface IotHubResourceBeginCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [ifMatch] ETag of the IoT Hub. Do not specify for
   * creating a brand new IoT Hub. Required to update an existing IoT Hub.
   */
  ifMatch?: string;
}

/**
 * @interface
 * An interface representing IotHubResourceBeginUpdateOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface IotHubResourceBeginUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {{ [propertyName: string]: string }} [tags] Resource tags
   */
  tags?: { [propertyName: string]: string };
}

/**
 * @interface
 * An interface representing CertificatesCreateOrUpdateOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface CertificatesCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [ifMatch] ETag of the Certificate. Do not specify for
   * creating a brand new certificate. Required to update an existing
   * certificate.
   */
  ifMatch?: string;
  /**
   * @member {string} [certificate] base-64 representation of the X509 leaf
   * certificate .cer file or just .pem file content.
   */
  certificate?: string;
}

/**
 * @interface
 * An interface representing CertificatesVerifyOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface CertificatesVerifyOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [certificate] base-64 representation of X509 certificate
   * .cer file or just .pem file content.
   */
  certificate?: string;
}

/**
 * @interface
 * An interface representing IotHubClientOptions.
 * @extends AzureServiceClientOptions
 */
export interface IotHubClientOptions extends AzureServiceClientOptions {
  /**
   * @member {string} [baseUri]
   */
  baseUri?: string;
}


/**
 * @interface
 * An interface representing the OperationListResult.
 * Result of the request to list IoT Hub operations. It contains a list of
 * operations and a URL link to get the next set of results.
 *
 * @extends Array<Operation>
 */
export interface OperationListResult extends Array<Operation> {
  /**
   * @member {string} [nextLink] URL to get the next set of operation list
   * results if there are any.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the IotHubDescriptionListResult.
 * The JSON-serialized array of IotHubDescription objects with a next link.
 *
 * @extends Array<IotHubDescription>
 */
export interface IotHubDescriptionListResult extends Array<IotHubDescription> {
  /**
   * @member {string} [nextLink] The next link.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the IotHubSkuDescriptionListResult.
 * The JSON-serialized array of IotHubSkuDescription objects with a next link.
 *
 * @extends Array<IotHubSkuDescription>
 */
export interface IotHubSkuDescriptionListResult extends Array<IotHubSkuDescription> {
  /**
   * @member {string} [nextLink] The next link.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the EventHubConsumerGroupsListResult.
 * The JSON-serialized array of Event Hub-compatible consumer group names with
 * a next link.
 *
 * @extends Array<EventHubConsumerGroupInfo>
 */
export interface EventHubConsumerGroupsListResult extends Array<EventHubConsumerGroupInfo> {
  /**
   * @member {string} [nextLink] The next link.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the JobResponseListResult.
 * The JSON-serialized array of JobResponse objects with a next link.
 *
 * @extends Array<JobResponse>
 */
export interface JobResponseListResult extends Array<JobResponse> {
  /**
   * @member {string} [nextLink] The next link.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the IotHubQuotaMetricInfoListResult.
 * The JSON-serialized array of IotHubQuotaMetricInfo objects with a next link.
 *
 * @extends Array<IotHubQuotaMetricInfo>
 */
export interface IotHubQuotaMetricInfoListResult extends Array<IotHubQuotaMetricInfo> {
  /**
   * @member {string} [nextLink] The next link.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the EndpointHealthDataListResult.
 * The JSON-serialized array of EndpointHealthData objects with a next link.
 *
 * @extends Array<EndpointHealthData>
 */
export interface EndpointHealthDataListResult extends Array<EndpointHealthData> {
  /**
   * @member {string} [nextLink] Link to more results
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the SharedAccessSignatureAuthorizationRuleListResult.
 * The list of shared access policies with a next link.
 *
 * @extends Array<SharedAccessSignatureAuthorizationRule>
 */
export interface SharedAccessSignatureAuthorizationRuleListResult extends Array<SharedAccessSignatureAuthorizationRule> {
  /**
   * @member {string} [nextLink] The next link.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * Defines values for AccessRights.
 * Possible values include: 'RegistryRead', 'RegistryWrite', 'ServiceConnect', 'DeviceConnect',
 * 'RegistryRead, RegistryWrite', 'RegistryRead, ServiceConnect', 'RegistryRead, DeviceConnect',
 * 'RegistryWrite, ServiceConnect', 'RegistryWrite, DeviceConnect', 'ServiceConnect,
 * DeviceConnect', 'RegistryRead, RegistryWrite, ServiceConnect', 'RegistryRead, RegistryWrite,
 * DeviceConnect', 'RegistryRead, ServiceConnect, DeviceConnect', 'RegistryWrite, ServiceConnect,
 * DeviceConnect', 'RegistryRead, RegistryWrite, ServiceConnect, DeviceConnect'
 * @readonly
 * @enum {string}
 */
export type AccessRights = 'RegistryRead' | 'RegistryWrite' | 'ServiceConnect' | 'DeviceConnect' | 'RegistryRead, RegistryWrite' | 'RegistryRead, ServiceConnect' | 'RegistryRead, DeviceConnect' | 'RegistryWrite, ServiceConnect' | 'RegistryWrite, DeviceConnect' | 'ServiceConnect, DeviceConnect' | 'RegistryRead, RegistryWrite, ServiceConnect' | 'RegistryRead, RegistryWrite, DeviceConnect' | 'RegistryRead, ServiceConnect, DeviceConnect' | 'RegistryWrite, ServiceConnect, DeviceConnect' | 'RegistryRead, RegistryWrite, ServiceConnect, DeviceConnect';

/**
 * Defines values for IpFilterActionType.
 * Possible values include: 'Accept', 'Reject'
 * @readonly
 * @enum {string}
 */
export type IpFilterActionType = 'Accept' | 'Reject';

/**
 * Defines values for RoutingSource.
 * Possible values include: 'Invalid', 'DeviceMessages', 'TwinChangeEvents',
 * 'DeviceLifecycleEvents', 'DeviceJobLifecycleEvents'
 * @readonly
 * @enum {string}
 */
export type RoutingSource = 'Invalid' | 'DeviceMessages' | 'TwinChangeEvents' | 'DeviceLifecycleEvents' | 'DeviceJobLifecycleEvents';

/**
 * Defines values for Capabilities.
 * Possible values include: 'None', 'DeviceManagement'
 * @readonly
 * @enum {string}
 */
export type Capabilities = 'None' | 'DeviceManagement';

/**
 * Defines values for IotHubSku.
 * Possible values include: 'F1', 'S1', 'S2', 'S3', 'B1', 'B2', 'B3'
 * @readonly
 * @enum {string}
 */
export type IotHubSku = 'F1' | 'S1' | 'S2' | 'S3' | 'B1' | 'B2' | 'B3';

/**
 * Defines values for IotHubSkuTier.
 * Possible values include: 'Free', 'Standard', 'Basic'
 * @readonly
 * @enum {string}
 */
export type IotHubSkuTier = 'Free' | 'Standard' | 'Basic';

/**
 * Defines values for EndpointHealthStatus.
 * Possible values include: 'unknown', 'healthy', 'unhealthy', 'dead'
 * @readonly
 * @enum {string}
 */
export type EndpointHealthStatus = 'unknown' | 'healthy' | 'unhealthy' | 'dead';

/**
 * Defines values for JobType.
 * Possible values include: 'unknown', 'export', 'import', 'backup', 'readDeviceProperties',
 * 'writeDeviceProperties', 'updateDeviceConfiguration', 'rebootDevice', 'factoryResetDevice',
 * 'firmwareUpdate'
 * @readonly
 * @enum {string}
 */
export type JobType = 'unknown' | 'export' | 'import' | 'backup' | 'readDeviceProperties' | 'writeDeviceProperties' | 'updateDeviceConfiguration' | 'rebootDevice' | 'factoryResetDevice' | 'firmwareUpdate';

/**
 * Defines values for JobStatus.
 * Possible values include: 'unknown', 'enqueued', 'running', 'completed', 'failed', 'cancelled'
 * @readonly
 * @enum {string}
 */
export type JobStatus = 'unknown' | 'enqueued' | 'running' | 'completed' | 'failed' | 'cancelled';

/**
 * Defines values for IotHubScaleType.
 * Possible values include: 'Automatic', 'Manual', 'None'
 * @readonly
 * @enum {string}
 */
export type IotHubScaleType = 'Automatic' | 'Manual' | 'None';

/**
 * Defines values for IotHubNameUnavailabilityReason.
 * Possible values include: 'Invalid', 'AlreadyExists'
 * @readonly
 * @enum {string}
 */
export type IotHubNameUnavailabilityReason = 'Invalid' | 'AlreadyExists';

/**
 * Defines values for TestResultStatus.
 * Possible values include: 'undefined', 'false', 'true'
 * @readonly
 * @enum {string}
 */
export type TestResultStatus = 'undefined' | 'false' | 'true';

/**
 * Defines values for RouteErrorSeverity.
 * Possible values include: 'error', 'warning'
 * @readonly
 * @enum {string}
 */
export type RouteErrorSeverity = 'error' | 'warning';

/**
 * Defines values for Encoding.
 * Possible values include: 'Avro', 'AvroDeflate', 'JSON'
 * @readonly
 * @enum {string}
 */
export type Encoding = 'Avro' | 'AvroDeflate' | 'JSON';

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type OperationsListNextResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type IotHubResourceGetResponse = IotHubDescription & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IotHubDescription;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type IotHubResourceCreateOrUpdateResponse = IotHubDescription & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IotHubDescription;
    };
};

/**
 * Contains response data for the update operation.
 */
export type IotHubResourceUpdateResponse = IotHubDescription & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IotHubDescription;
    };
};

/**
 * Contains response data for the deleteMethod operation.
 */
export type IotHubResourceDeleteMethodResponse = {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the listBySubscription operation.
 */
export type IotHubResourceListBySubscriptionResponse = IotHubDescriptionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IotHubDescriptionListResult;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type IotHubResourceListByResourceGroupResponse = IotHubDescriptionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IotHubDescriptionListResult;
    };
};

/**
 * Contains response data for the getStats operation.
 */
export type IotHubResourceGetStatsResponse = RegistryStatistics & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RegistryStatistics;
    };
};

/**
 * Contains response data for the getValidSkus operation.
 */
export type IotHubResourceGetValidSkusResponse = IotHubSkuDescriptionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IotHubSkuDescriptionListResult;
    };
};

/**
 * Contains response data for the listEventHubConsumerGroups operation.
 */
export type IotHubResourceListEventHubConsumerGroupsResponse = EventHubConsumerGroupsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventHubConsumerGroupsListResult;
    };
};

/**
 * Contains response data for the getEventHubConsumerGroup operation.
 */
export type IotHubResourceGetEventHubConsumerGroupResponse = EventHubConsumerGroupInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventHubConsumerGroupInfo;
    };
};

/**
 * Contains response data for the createEventHubConsumerGroup operation.
 */
export type IotHubResourceCreateEventHubConsumerGroupResponse = EventHubConsumerGroupInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventHubConsumerGroupInfo;
    };
};

/**
 * Contains response data for the listJobs operation.
 */
export type IotHubResourceListJobsResponse = JobResponseListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobResponseListResult;
    };
};

/**
 * Contains response data for the getJob operation.
 */
export type IotHubResourceGetJobResponse = JobResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobResponse;
    };
};

/**
 * Contains response data for the getQuotaMetrics operation.
 */
export type IotHubResourceGetQuotaMetricsResponse = IotHubQuotaMetricInfoListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IotHubQuotaMetricInfoListResult;
    };
};

/**
 * Contains response data for the getEndpointHealth operation.
 */
export type IotHubResourceGetEndpointHealthResponse = EndpointHealthDataListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EndpointHealthDataListResult;
    };
};

/**
 * Contains response data for the checkNameAvailability operation.
 */
export type IotHubResourceCheckNameAvailabilityResponse = IotHubNameAvailabilityInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IotHubNameAvailabilityInfo;
    };
};

/**
 * Contains response data for the testAllRoutes operation.
 */
export type IotHubResourceTestAllRoutesResponse = TestAllRoutesResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TestAllRoutesResult;
    };
};

/**
 * Contains response data for the testRoute operation.
 */
export type IotHubResourceTestRouteResponse = TestRouteResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TestRouteResult;
    };
};

/**
 * Contains response data for the listKeys operation.
 */
export type IotHubResourceListKeysResponse = SharedAccessSignatureAuthorizationRuleListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SharedAccessSignatureAuthorizationRuleListResult;
    };
};

/**
 * Contains response data for the getKeysForKeyName operation.
 */
export type IotHubResourceGetKeysForKeyNameResponse = SharedAccessSignatureAuthorizationRule & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SharedAccessSignatureAuthorizationRule;
    };
};

/**
 * Contains response data for the exportDevices operation.
 */
export type IotHubResourceExportDevicesResponse = JobResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobResponse;
    };
};

/**
 * Contains response data for the importDevices operation.
 */
export type IotHubResourceImportDevicesResponse = JobResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobResponse;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type IotHubResourceBeginCreateOrUpdateResponse = IotHubDescription & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IotHubDescription;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type IotHubResourceBeginUpdateResponse = IotHubDescription & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IotHubDescription;
    };
};

/**
 * Contains response data for the beginDeleteMethod operation.
 */
export type IotHubResourceBeginDeleteMethodResponse = {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the listBySubscriptionNext operation.
 */
export type IotHubResourceListBySubscriptionNextResponse = IotHubDescriptionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IotHubDescriptionListResult;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type IotHubResourceListByResourceGroupNextResponse = IotHubDescriptionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IotHubDescriptionListResult;
    };
};

/**
 * Contains response data for the getValidSkusNext operation.
 */
export type IotHubResourceGetValidSkusNextResponse = IotHubSkuDescriptionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IotHubSkuDescriptionListResult;
    };
};

/**
 * Contains response data for the listEventHubConsumerGroupsNext operation.
 */
export type IotHubResourceListEventHubConsumerGroupsNextResponse = EventHubConsumerGroupsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventHubConsumerGroupsListResult;
    };
};

/**
 * Contains response data for the listJobsNext operation.
 */
export type IotHubResourceListJobsNextResponse = JobResponseListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobResponseListResult;
    };
};

/**
 * Contains response data for the getQuotaMetricsNext operation.
 */
export type IotHubResourceGetQuotaMetricsNextResponse = IotHubQuotaMetricInfoListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IotHubQuotaMetricInfoListResult;
    };
};

/**
 * Contains response data for the getEndpointHealthNext operation.
 */
export type IotHubResourceGetEndpointHealthNextResponse = EndpointHealthDataListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EndpointHealthDataListResult;
    };
};

/**
 * Contains response data for the listKeysNext operation.
 */
export type IotHubResourceListKeysNextResponse = SharedAccessSignatureAuthorizationRuleListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SharedAccessSignatureAuthorizationRuleListResult;
    };
};

/**
 * Contains response data for the getSubscriptionQuota operation.
 */
export type ResourceProviderCommonGetSubscriptionQuotaResponse = UserSubscriptionQuotaListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: UserSubscriptionQuotaListResult;
    };
};

/**
 * Contains response data for the listByIotHub operation.
 */
export type CertificatesListByIotHubResponse = CertificateListDescription & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CertificateListDescription;
    };
};

/**
 * Contains response data for the get operation.
 */
export type CertificatesGetResponse = CertificateDescription & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CertificateDescription;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type CertificatesCreateOrUpdateResponse = CertificateDescription & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CertificateDescription;
    };
};

/**
 * Contains response data for the generateVerificationCode operation.
 */
export type CertificatesGenerateVerificationCodeResponse = CertificateWithNonceDescription & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CertificateWithNonceDescription;
    };
};

/**
 * Contains response data for the verify operation.
 */
export type CertificatesVerifyResponse = CertificateDescription & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CertificateDescription;
    };
};

/**
 * Contains response data for the manualFailover operation.
 */
export type IotHubManualFailoverResponse = IotHubDescription & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IotHubDescription;
    };
};
