/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };


/**
 * @interface
 * An interface representing TrustedExternalTenant.
 */
export interface TrustedExternalTenant {
  /**
   * @member {string} [value] GUID representing an external tenant.
   */
  value?: string;
}

/**
 * @interface
 * An interface representing AzureSku.
 */
export interface AzureSku {
  /**
   * @member {AzureSkuName} name SKU name. Possible values include: 'KC8',
   * 'KC16', 'KS8', 'KS16', 'D13_v2', 'D14_v2', 'L8', 'L16'
   */
  name: AzureSkuName;
  /**
   * @member {number} [capacity] SKU capacity.
   */
  capacity?: number;
}

/**
 * @interface
 * An interface representing AzureCapacity.
 */
export interface AzureCapacity {
  /**
   * @member {AzureScaleType} scaleType Scale type. Possible values include:
   * 'automatic', 'manual', 'none'
   */
  scaleType: AzureScaleType;
  /**
   * @member {number} minimum Minimum allowed capacity.
   */
  minimum: number;
  /**
   * @member {number} maximum Maximum allowed capacity.
   */
  maximum: number;
  /**
   * @member {number} default The default capacity that would be used.
   */
  default: number;
}

/**
 * @interface
 * An interface representing AzureResourceSku.
 */
export interface AzureResourceSku {
  /**
   * @member {string} [resourceType] Resource Namespace and Type.
   */
  resourceType?: string;
  /**
   * @member {AzureSku} [sku] The SKU details.
   */
  sku?: AzureSku;
  /**
   * @member {AzureCapacity} [capacity] The SKU capacity.
   */
  capacity?: AzureCapacity;
}

/**
 * @interface
 * An interface representing DatabaseStatistics.
 */
export interface DatabaseStatistics {
  /**
   * @member {number} [size] The database size - the total size of compressed
   * data and index in bytes.
   */
  size?: number;
}

/**
 * @interface
 * An interface representing EventHubConnectionValidation.
 * Class representing an event hub connection validation.
 *
 */
export interface EventHubConnectionValidation {
  /**
   * @member {string} [eventhubConnectionName] The name of the event hub
   * connection.
   */
  eventhubConnectionName?: string;
  /**
   * @member {string} eventHubResourceId The resource ID of the event hub to be
   * used to create a data connection.
   */
  eventHubResourceId: string;
  /**
   * @member {string} consumerGroup The event hub consumer group.
   */
  consumerGroup: string;
  /**
   * @member {string} [tableName] The table where the data should be ingested.
   * Optionally the table information can be added to each message.
   */
  tableName?: string;
  /**
   * @member {string} [mappingRuleName] The mapping rule to be used to ingest
   * the data. Optionally the mapping information can be added to each message.
   */
  mappingRuleName?: string;
  /**
   * @member {DataFormat} [dataFormat] The data format of the message.
   * Optionally the data format can be added to each message. Possible values
   * include: 'MULTIJSON', 'JSON', 'CSV'
   */
  dataFormat?: DataFormat;
}

/**
 * @interface
 * An interface representing Resource.
 * @extends BaseResource
 */
export interface Resource extends BaseResource {
  /**
   * @member {string} [id] Fully qualified resource Id for the resource. Ex -
   * /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [name] The name of the resource
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [type] The type of the resource. Ex-
   * Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: string;
}

/**
 * @interface
 * An interface representing TrackedResource.
 * The resource model definition for a ARM tracked top level resource
 *
 * @extends Resource
 */
export interface TrackedResource extends Resource {
  /**
   * @member {{ [propertyName: string]: string }} [tags] Resource tags.
   */
  tags?: { [propertyName: string]: string };
  /**
   * @member {string} location The geo-location where the resource lives
   */
  location: string;
}

/**
 * @interface
 * An interface representing Cluster.
 * Class representing a Kusto cluster.
 *
 * @extends TrackedResource
 */
export interface Cluster extends TrackedResource {
  /**
   * @member {string} [etag] An ETag of the resource created.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly etag?: string;
  /**
   * @member {AzureSku} sku The SKU of the cluster.
   */
  sku: AzureSku;
  /**
   * @member {State} [state] The state of the resource. Possible values
   * include: 'Creating', 'Unavailable', 'Running', 'Deleting', 'Deleted',
   * 'Stopping', 'Stopped', 'Starting'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly state?: State;
  /**
   * @member {ProvisioningState} [provisioningState] The provisioned state of
   * the resource. Possible values include: 'Running', 'Creating', 'Deleting',
   * 'Succeeded', 'Failed'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * @member {string} [uri] The cluster URI.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly uri?: string;
  /**
   * @member {string} [dataIngestionUri] The cluster data ingestion URI.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly dataIngestionUri?: string;
  /**
   * @member {TrustedExternalTenant[]} [trustedExternalTenants] The cluster's
   * external tenants.
   */
  trustedExternalTenants?: TrustedExternalTenant[];
}

/**
 * @interface
 * An interface representing ClusterUpdate.
 * Class representing an update to a Kusto cluster.
 *
 * @extends Resource
 */
export interface ClusterUpdate extends Resource {
  /**
   * @member {{ [propertyName: string]: string }} [tags] Resource tags.
   */
  tags?: { [propertyName: string]: string };
  /**
   * @member {string} [location] Resource location.
   */
  location?: string;
  /**
   * @member {string} [etag] An ETag of the resource updated.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly etag?: string;
  /**
   * @member {AzureSku} [sku] The SKU of the cluster.
   */
  sku?: AzureSku;
  /**
   * @member {State} [state] The state of the resource. Possible values
   * include: 'Creating', 'Unavailable', 'Running', 'Deleting', 'Deleted',
   * 'Stopping', 'Stopped', 'Starting'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly state?: State;
  /**
   * @member {ProvisioningState} [provisioningState] The provisioned state of
   * the resource. Possible values include: 'Running', 'Creating', 'Deleting',
   * 'Succeeded', 'Failed'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * @member {string} [uri] The cluster URI.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly uri?: string;
  /**
   * @member {string} [dataIngestionUri] The cluster data ingestion URI.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly dataIngestionUri?: string;
  /**
   * @member {TrustedExternalTenant[]} [trustedExternalTenants] The cluster's
   * external tenants.
   */
  trustedExternalTenants?: TrustedExternalTenant[];
}

/**
 * @interface
 * An interface representing Database.
 * Class representing a Kusto database.
 *
 * @extends TrackedResource
 */
export interface Database extends TrackedResource {
  /**
   * @member {string} [etag] An ETag of the resource created.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly etag?: string;
  /**
   * @member {ProvisioningState} [provisioningState] The provisioned state of
   * the resource. Possible values include: 'Running', 'Creating', 'Deleting',
   * 'Succeeded', 'Failed'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * @member {number} softDeletePeriodInDays The number of days data should be
   * kept before it stops being accessible to queries.
   */
  softDeletePeriodInDays: number;
  /**
   * @member {number} [hotCachePeriodInDays] The number of days of data that
   * should be kept in cache for fast queries.
   */
  hotCachePeriodInDays?: number;
  /**
   * @member {DatabaseStatistics} [statistics] The statistics of the database.
   */
  statistics?: DatabaseStatistics;
}

/**
 * @interface
 * An interface representing DatabaseUpdate.
 * Class representing an update to a Kusto database.
 *
 * @extends Resource
 */
export interface DatabaseUpdate extends Resource {
  /**
   * @member {string} [location] Resource location.
   */
  location?: string;
  /**
   * @member {string} [etag] An ETag of the resource updated.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly etag?: string;
  /**
   * @member {ProvisioningState} [provisioningState] The provisioned state of
   * the resource. Possible values include: 'Running', 'Creating', 'Deleting',
   * 'Succeeded', 'Failed'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * @member {number} softDeletePeriodInDays The number of days data should be
   * kept before it stops being accessible to queries.
   */
  softDeletePeriodInDays: number;
  /**
   * @member {number} [hotCachePeriodInDays] The number of days of data that
   * should be kept in cache for fast queries.
   */
  hotCachePeriodInDays?: number;
  /**
   * @member {DatabaseStatistics} [statistics] The statistics of the database.
   */
  statistics?: DatabaseStatistics;
}

/**
 * @interface
 * An interface representing DatabasePrincipal.
 */
export interface DatabasePrincipal {
  /**
   * @member {DatabasePrincipalRole} role Database principal role. Possible
   * values include: 'Admin', 'Ingestor', 'Monitor', 'User',
   * 'UnrestrictedViewers', 'Viewer'
   */
  role: DatabasePrincipalRole;
  /**
   * @member {string} name Database principal name.
   */
  name: string;
  /**
   * @member {DatabasePrincipalType} type Database principal type. Possible
   * values include: 'App', 'Group', 'User'
   */
  type: DatabasePrincipalType;
  /**
   * @member {string} [fqn] Database principal fully qualified name.
   */
  fqn?: string;
  /**
   * @member {string} [email] Database principal email if exists.
   */
  email?: string;
  /**
   * @member {string} [appId] Application id - relevant only for application
   * principal type.
   */
  appId?: string;
}

/**
 * @interface
 * An interface representing ProxyResource.
 * The resource model definition for a ARM proxy resource. It will have
 * everything other than required location and tags
 *
 * @extends Resource
 */
export interface ProxyResource extends Resource {
}

/**
 * @interface
 * An interface representing EventHubConnectionUpdate.
 * Class representing an update to event hub connection.
 *
 * @extends ProxyResource
 */
export interface EventHubConnectionUpdate extends ProxyResource {
  /**
   * @member {string} [location] Resource location.
   */
  location?: string;
  /**
   * @member {string} eventHubResourceId The resource ID of the event hub to be
   * used to create a data connection.
   */
  eventHubResourceId: string;
  /**
   * @member {string} consumerGroup The event hub consumer group.
   */
  consumerGroup: string;
  /**
   * @member {string} [tableName] The table where the data should be ingested.
   * Optionally the table information can be added to each message.
   */
  tableName?: string;
  /**
   * @member {string} [mappingRuleName] The mapping rule to be used to ingest
   * the data. Optionally the mapping information can be added to each message.
   */
  mappingRuleName?: string;
  /**
   * @member {DataFormat} [dataFormat] The data format of the message.
   * Optionally the data format can be added to each message. Possible values
   * include: 'MULTIJSON', 'JSON', 'CSV'
   */
  dataFormat?: DataFormat;
}

/**
 * @interface
 * An interface representing EventHubConnection.
 * Class representing an event hub connection.
 *
 * @extends ProxyResource
 */
export interface EventHubConnection extends ProxyResource {
  /**
   * @member {string} [location] Resource location.
   */
  location?: string;
  /**
   * @member {string} eventHubResourceId The resource ID of the event hub to be
   * used to create a data connection.
   */
  eventHubResourceId: string;
  /**
   * @member {string} consumerGroup The event hub consumer group.
   */
  consumerGroup: string;
  /**
   * @member {string} [tableName] The table where the data should be ingested.
   * Optionally the table information can be added to each message.
   */
  tableName?: string;
  /**
   * @member {string} [mappingRuleName] The mapping rule to be used to ingest
   * the data. Optionally the mapping information can be added to each message.
   */
  mappingRuleName?: string;
  /**
   * @member {DataFormat} [dataFormat] The data format of the message.
   * Optionally the data format can be added to each message. Possible values
   * include: 'MULTIJSON', 'JSON', 'CSV'
   */
  dataFormat?: DataFormat;
}

/**
 * @interface
 * An interface representing EventHubConnectionValidationResult.
 */
export interface EventHubConnectionValidationResult {
  /**
   * @member {string} [errorMessage] A message which indicates a problem in
   * event hub connection validation.
   */
  errorMessage?: string;
}

/**
 * @interface
 * An interface representing DatabasePrincipalListRequest.
 * The list Kusto database principals operation request.
 *
 */
export interface DatabasePrincipalListRequest {
  /**
   * @member {DatabasePrincipal[]} [value] The list of Kusto database
   * principals.
   */
  value?: DatabasePrincipal[];
}

/**
 * @interface
 * An interface representing EventHubConnectionValidationListResult.
 * The list Kusto event hub connection validation result.
 *
 */
export interface EventHubConnectionValidationListResult {
  /**
   * @member {EventHubConnectionValidationResult[]} [value] The list of Kusto
   * event hub connection validation errors.
   */
  value?: EventHubConnectionValidationResult[];
}

/**
 * @interface
 * An interface representing ClusterCheckNameRequest.
 */
export interface ClusterCheckNameRequest {
  /**
   * @member {string} name Cluster name.
   */
  name: string;
}

/**
 * @interface
 * An interface representing DatabaseCheckNameRequest.
 */
export interface DatabaseCheckNameRequest {
  /**
   * @member {string} name Database name.
   */
  name: string;
}

/**
 * @interface
 * An interface representing CheckNameResult.
 */
export interface CheckNameResult {
  /**
   * @member {boolean} [nameAvailable] Specifies a Boolean value that indicates
   * if the name is available.
   */
  nameAvailable?: boolean;
  /**
   * @member {string} [name] The name that was checked.
   */
  name?: string;
  /**
   * @member {string} [message] Message indicating an unavailable name due to a
   * conflict, or a description of the naming rules that are violated.
   */
  message?: string;
}

/**
 * @interface
 * An interface representing OperationDisplay.
 * @summary The object that describes the operation.
 *
 */
export interface OperationDisplay {
  /**
   * @member {string} [provider] Friendly name of the resource provider.
   */
  provider?: string;
  /**
   * @member {string} [operation] The operation type. For example: read, write,
   * delete.
   */
  operation?: string;
  /**
   * @member {string} [resource] The resource type on which the operation is
   * performed.
   */
  resource?: string;
  /**
   * @member {string} [description] The friendly name of the operation.
   */
  description?: string;
}

/**
 * @interface
 * An interface representing Operation.
 * @summary A REST API operation
 *
 */
export interface Operation {
  /**
   * @member {string} [name] The operation name. This is of the format
   * {provider}/{resource}/{operation}.
   */
  name?: string;
  /**
   * @member {OperationDisplay} [display] The object that describes the
   * operation.
   */
  display?: OperationDisplay;
  /**
   * @member {string} [origin] The intended executor of the operation.
   */
  origin?: string;
  /**
   * @member {any} [properties] Properties of the operation.
   */
  properties?: any;
}

/**
 * @interface
 * An interface representing AzureEntityResource.
 * The resource model definition for a Azure Resource Manager resource with an
 * etag.
 *
 * @extends Resource
 */
export interface AzureEntityResource extends Resource {
  /**
   * @member {string} [etag] Resource Etag.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly etag?: string;
}

/**
 * @interface
 * An interface representing KustoManagementClientOptions.
 * @extends AzureServiceClientOptions
 */
export interface KustoManagementClientOptions extends AzureServiceClientOptions {
  /**
   * @member {string} [baseUri]
   */
  baseUri?: string;
}


/**
 * @interface
 * An interface representing the ClusterListResult.
 * The list Kusto clusters operation response.
 *
 * @extends Array<Cluster>
 */
export interface ClusterListResult extends Array<Cluster> {
}

/**
 * @interface
 * An interface representing the ListSkusResult.
 * List of available SKUs for a new Kusto Cluster.
 *
 * @extends Array<AzureSku>
 */
export interface ListSkusResult extends Array<AzureSku> {
}

/**
 * @interface
 * An interface representing the ListResourceSkusResult.
 * List of available SKUs for an existing Kusto Cluster.
 *
 * @extends Array<AzureResourceSku>
 */
export interface ListResourceSkusResult extends Array<AzureResourceSku> {
}

/**
 * @interface
 * An interface representing the DatabaseListResult.
 * The list Kusto databases operation response.
 *
 * @extends Array<Database>
 */
export interface DatabaseListResult extends Array<Database> {
}

/**
 * @interface
 * An interface representing the DatabasePrincipalListResult.
 * The list Kusto database principals operation response.
 *
 * @extends Array<DatabasePrincipal>
 */
export interface DatabasePrincipalListResult extends Array<DatabasePrincipal> {
}

/**
 * @interface
 * An interface representing the EventHubConnectionListResult.
 * The list Kusto event hub connections operation response.
 *
 * @extends Array<EventHubConnection>
 */
export interface EventHubConnectionListResult extends Array<EventHubConnection> {
}

/**
 * @interface
 * An interface representing the OperationListResult.
 * @summary Result of the request to list REST API operations. It contains a
 * list of operations and a URL nextLink to get the next set of results.
 *
 * @extends Array<Operation>
 */
export interface OperationListResult extends Array<Operation> {
  /**
   * @member {string} [nextLink]
   */
  nextLink?: string;
}

/**
 * Defines values for State.
 * Possible values include: 'Creating', 'Unavailable', 'Running', 'Deleting', 'Deleted',
 * 'Stopping', 'Stopped', 'Starting'
 * @readonly
 * @enum {string}
 */
export type State = 'Creating' | 'Unavailable' | 'Running' | 'Deleting' | 'Deleted' | 'Stopping' | 'Stopped' | 'Starting';

/**
 * Defines values for ProvisioningState.
 * Possible values include: 'Running', 'Creating', 'Deleting', 'Succeeded', 'Failed'
 * @readonly
 * @enum {string}
 */
export type ProvisioningState = 'Running' | 'Creating' | 'Deleting' | 'Succeeded' | 'Failed';

/**
 * Defines values for AzureSkuName.
 * Possible values include: 'KC8', 'KC16', 'KS8', 'KS16', 'D13_v2', 'D14_v2', 'L8', 'L16'
 * @readonly
 * @enum {string}
 */
export type AzureSkuName = 'KC8' | 'KC16' | 'KS8' | 'KS16' | 'D13_v2' | 'D14_v2' | 'L8' | 'L16';

/**
 * Defines values for AzureScaleType.
 * Possible values include: 'automatic', 'manual', 'none'
 * @readonly
 * @enum {string}
 */
export type AzureScaleType = 'automatic' | 'manual' | 'none';

/**
 * Defines values for DataFormat.
 * Possible values include: 'MULTIJSON', 'JSON', 'CSV'
 * @readonly
 * @enum {string}
 */
export type DataFormat = 'MULTIJSON' | 'JSON' | 'CSV';

/**
 * Defines values for DatabasePrincipalRole.
 * Possible values include: 'Admin', 'Ingestor', 'Monitor', 'User', 'UnrestrictedViewers', 'Viewer'
 * @readonly
 * @enum {string}
 */
export type DatabasePrincipalRole = 'Admin' | 'Ingestor' | 'Monitor' | 'User' | 'UnrestrictedViewers' | 'Viewer';

/**
 * Defines values for DatabasePrincipalType.
 * Possible values include: 'App', 'Group', 'User'
 * @readonly
 * @enum {string}
 */
export type DatabasePrincipalType = 'App' | 'Group' | 'User';

/**
 * Contains response data for the get operation.
 */
export type ClustersGetResponse = Cluster & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Cluster;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ClustersCreateOrUpdateResponse = Cluster & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Cluster;
    };
};

/**
 * Contains response data for the update operation.
 */
export type ClustersUpdateResponse = Cluster & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Cluster;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type ClustersListByResourceGroupResponse = ClusterListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ClusterListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type ClustersListResponse = ClusterListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ClusterListResult;
    };
};

/**
 * Contains response data for the listSkus operation.
 */
export type ClustersListSkusResponse = ListSkusResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ListSkusResult;
    };
};

/**
 * Contains response data for the checkNameAvailability operation.
 */
export type ClustersCheckNameAvailabilityResponse = CheckNameResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CheckNameResult;
    };
};

/**
 * Contains response data for the listSkusByResource operation.
 */
export type ClustersListSkusByResourceResponse = ListResourceSkusResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ListResourceSkusResult;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type ClustersBeginCreateOrUpdateResponse = Cluster & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Cluster;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type ClustersBeginUpdateResponse = Cluster & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Cluster;
    };
};

/**
 * Contains response data for the checkNameAvailability operation.
 */
export type DatabasesCheckNameAvailabilityResponse = CheckNameResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CheckNameResult;
    };
};

/**
 * Contains response data for the listByCluster operation.
 */
export type DatabasesListByClusterResponse = DatabaseListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type DatabasesGetResponse = Database & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Database;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type DatabasesCreateOrUpdateResponse = Database & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Database;
    };
};

/**
 * Contains response data for the update operation.
 */
export type DatabasesUpdateResponse = Database & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Database;
    };
};

/**
 * Contains response data for the listPrincipals operation.
 */
export type DatabasesListPrincipalsResponse = DatabasePrincipalListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabasePrincipalListResult;
    };
};

/**
 * Contains response data for the addPrincipals operation.
 */
export type DatabasesAddPrincipalsResponse = DatabasePrincipalListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabasePrincipalListResult;
    };
};

/**
 * Contains response data for the removePrincipals operation.
 */
export type DatabasesRemovePrincipalsResponse = DatabasePrincipalListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabasePrincipalListResult;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type DatabasesBeginCreateOrUpdateResponse = Database & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Database;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type DatabasesBeginUpdateResponse = Database & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Database;
    };
};

/**
 * Contains response data for the listByDatabase operation.
 */
export type EventHubConnectionsListByDatabaseResponse = EventHubConnectionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventHubConnectionListResult;
    };
};

/**
 * Contains response data for the eventhubConnectionValidation operation.
 */
export type EventHubConnectionsEventhubConnectionValidationResponse = EventHubConnectionValidationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventHubConnectionValidationListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type EventHubConnectionsGetResponse = EventHubConnection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventHubConnection;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type EventHubConnectionsCreateOrUpdateResponse = EventHubConnection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventHubConnection;
    };
};

/**
 * Contains response data for the update operation.
 */
export type EventHubConnectionsUpdateResponse = EventHubConnection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventHubConnection;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type EventHubConnectionsBeginCreateOrUpdateResponse = EventHubConnection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventHubConnection;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type EventHubConnectionsBeginUpdateResponse = EventHubConnection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventHubConnection;
    };
};

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type OperationsListNextResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationListResult;
    };
};
