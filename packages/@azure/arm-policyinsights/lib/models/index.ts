/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };


/**
 * @interface
 * An interface representing PolicyDetails.
 * The policy details.
 *
 */
export interface PolicyDetails {
  /**
   * @member {string} [policyDefinitionId] The ID of the policy definition.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly policyDefinitionId?: string;
  /**
   * @member {string} [policyAssignmentId] The ID of the policy assignment.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly policyAssignmentId?: string;
  /**
   * @member {string} [policyAssignmentDisplayName] The display name of the
   * policy assignment.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly policyAssignmentDisplayName?: string;
  /**
   * @member {string} [policyAssignmentScope] The scope of the policy
   * assignment.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly policyAssignmentScope?: string;
  /**
   * @member {string} [policySetDefinitionId] The ID of the policy set
   * definition.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly policySetDefinitionId?: string;
  /**
   * @member {string} [policyDefinitionReferenceId] The policy definition
   * reference ID within the policy set definition.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly policyDefinitionReferenceId?: string;
}

/**
 * @interface
 * An interface representing TrackedResourceModificationDetails.
 * The details of the policy triggered deployment that created or modified the
 * tracked resource.
 *
 */
export interface TrackedResourceModificationDetails {
  /**
   * @member {PolicyDetails} [policyDetails] The details of the policy that
   * created or modified the tracked resource.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly policyDetails?: PolicyDetails;
  /**
   * @member {string} [deploymentId] The ID of the deployment that created or
   * modified the tracked resource.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly deploymentId?: string;
  /**
   * @member {Date} [deploymentTime] Timestamp of the deployment that created
   * or modified the tracked resource.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly deploymentTime?: Date;
}

/**
 * @interface
 * An interface representing PolicyTrackedResource.
 * Policy tracked resource record.
 *
 */
export interface PolicyTrackedResource {
  /**
   * @member {string} [trackedResourceId] The ID of the policy tracked
   * resource.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly trackedResourceId?: string;
  /**
   * @member {PolicyDetails} [policyDetails] The details of the policy that
   * require the tracked resource.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly policyDetails?: PolicyDetails;
  /**
   * @member {TrackedResourceModificationDetails} [createdBy] The details of
   * the policy triggered deployment that created the tracked resource.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly createdBy?: TrackedResourceModificationDetails;
  /**
   * @member {TrackedResourceModificationDetails} [lastModifiedBy] The details
   * of the policy triggered deployment that modified the tracked resource.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly lastModifiedBy?: TrackedResourceModificationDetails;
  /**
   * @member {Date} [lastUpdateUtc] Timestamp of the last update to the tracked
   * resource.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly lastUpdateUtc?: Date;
}

/**
 * @interface
 * An interface representing QueryFailureError.
 * Error definition.
 *
 */
export interface QueryFailureError {
  /**
   * @member {string} [code] Service specific error code which serves as the
   * substatus for the HTTP error code.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly code?: string;
  /**
   * @member {string} [message] Description of the error.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly message?: string;
}

/**
 * @interface
 * An interface representing QueryFailure.
 * Error response.
 *
 */
export interface QueryFailure {
  /**
   * @member {QueryFailureError} [error] Error definition.
   */
  error?: QueryFailureError;
}

/**
 * @interface
 * An interface representing RemediationFilters.
 * The filters that will be applied to determine which resources to remediate.
 *
 */
export interface RemediationFilters {
  /**
   * @member {string[]} [locations] The resource locations that will be
   * remediated.
   */
  locations?: string[];
}

/**
 * @interface
 * An interface representing RemediationDeploymentSummary.
 * The deployment status summary for all deplyoments created by the
 * remediation.
 *
 */
export interface RemediationDeploymentSummary {
  /**
   * @member {number} [totalDeployments] The number of deployments required by
   * the remediation.
   */
  totalDeployments?: number;
  /**
   * @member {number} [successfulDeployments] The number of deployments
   * required by the remediation that have succeeded.
   */
  successfulDeployments?: number;
  /**
   * @member {number} [failedDeployments] The number of deployments required by
   * the remediation that have failed.
   */
  failedDeployments?: number;
}

/**
 * @interface
 * An interface representing Remediation.
 * The remediation definition.
 *
 * @extends BaseResource
 */
export interface Remediation extends BaseResource {
  /**
   * @member {string} [policyAssignmentId] The resource ID of the policy
   * assignment that should be remediated.
   */
  policyAssignmentId?: string;
  /**
   * @member {string} [policyDefinitionReferenceId] The policy definition
   * reference ID of the individual definition that should be remediated.
   * Required when the policy assignment being remediated assigns a policy set
   * definition.
   */
  policyDefinitionReferenceId?: string;
  /**
   * @member {string} [provisioningState] The status of the remediation.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provisioningState?: string;
  /**
   * @member {Date} [createdOn] The time at which the remediation was created.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly createdOn?: Date;
  /**
   * @member {Date} [lastUpdatedOn] The time at which the remediation was last
   * updated.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly lastUpdatedOn?: Date;
  /**
   * @member {RemediationFilters} [filters] The filters that will be applied to
   * determine which resources to remediate.
   */
  filters?: RemediationFilters;
  /**
   * @member {RemediationDeploymentSummary} [deploymentStatus] The deployment
   * status summary for all deplyoments created by the remediation.
   */
  deploymentStatus?: RemediationDeploymentSummary;
  /**
   * @member {string} [id] The ID of the remediation.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [type] The type of the remediation.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: string;
  /**
   * @member {string} [name] The name of the remediation.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
}

/**
 * @interface
 * An interface representing TypedErrorInfo.
 * Scenario specific error details.
 *
 */
export interface TypedErrorInfo {
  /**
   * @member {string} [type] The type of included error details.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: string;
  /**
   * @member {any} [info] The scenario specific error details.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly info?: any;
}

/**
 * @interface
 * An interface representing ErrorDefinition.
 * Error definition.
 *
 */
export interface ErrorDefinition {
  /**
   * @member {string} [code] Service specific error code which serves as the
   * substatus for the HTTP error code.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly code?: string;
  /**
   * @member {string} [message] Description of the error.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly message?: string;
  /**
   * @member {string} [target] The target of the error.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly target?: string;
  /**
   * @member {ErrorDefinition[]} [details] Internal error details.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly details?: ErrorDefinition[];
  /**
   * @member {TypedErrorInfo[]} [additionalInfo] Additional scenario specific
   * error details.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly additionalInfo?: TypedErrorInfo[];
}

/**
 * @interface
 * An interface representing RemediationDeployment.
 * Details of a single deployment created by the remediation.
 *
 */
export interface RemediationDeployment {
  /**
   * @member {string} [remediatedResourceId] Resource ID of the resource that
   * is being remediated by the deployment.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly remediatedResourceId?: string;
  /**
   * @member {string} [deploymentId] Resource ID of the template deployment
   * that will remediate the resource.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly deploymentId?: string;
  /**
   * @member {string} [status] Status of the remediation deployment.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly status?: string;
  /**
   * @member {string} [resourceLocation] Location of the resource that is being
   * remediated.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly resourceLocation?: string;
  /**
   * @member {ErrorDefinition} [error] Error encountered while remediated the
   * resource.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly error?: ErrorDefinition;
  /**
   * @member {Date} [createdOn] The time at which the remediation was created.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly createdOn?: Date;
  /**
   * @member {Date} [lastUpdatedOn] The time at which the remediation
   * deployment was last updated.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly lastUpdatedOn?: Date;
}

/**
 * @interface
 * An interface representing ErrorResponse.
 * Error response.
 *
 */
export interface ErrorResponse {
  /**
   * @member {ErrorDefinition} [error] The error details.
   */
  error?: ErrorDefinition;
}

/**
 * @interface
 * An interface representing PolicyEvent.
 * Policy event record.
 *
 */
export interface PolicyEvent {
  /**
   * @member {string} [odataid] OData entity ID; always set to null since
   * policy event records do not have an entity ID.
   */
  odataid?: string;
  /**
   * @member {string} [odatacontext] OData context string; used by OData
   * clients to resolve type information based on metadata.
   */
  odatacontext?: string;
  /**
   * @member {Date} [timestamp] Timestamp for the policy event record.
   */
  timestamp?: Date;
  /**
   * @member {string} [resourceId] Resource ID.
   */
  resourceId?: string;
  /**
   * @member {string} [policyAssignmentId] Policy assignment ID.
   */
  policyAssignmentId?: string;
  /**
   * @member {string} [policyDefinitionId] Policy definition ID.
   */
  policyDefinitionId?: string;
  /**
   * @member {string} [effectiveParameters] Effective parameters for the policy
   * assignment.
   */
  effectiveParameters?: string;
  /**
   * @member {boolean} [isCompliant] Flag which states whether the resource is
   * compliant against the policy assignment it was evaluated against.
   */
  isCompliant?: boolean;
  /**
   * @member {string} [subscriptionId] Subscription ID.
   */
  subscriptionId?: string;
  /**
   * @member {string} [resourceType] Resource type.
   */
  resourceType?: string;
  /**
   * @member {string} [resourceLocation] Resource location.
   */
  resourceLocation?: string;
  /**
   * @member {string} [resourceGroup] Resource group name.
   */
  resourceGroup?: string;
  /**
   * @member {string} [resourceTags] List of resource tags.
   */
  resourceTags?: string;
  /**
   * @member {string} [policyAssignmentName] Policy assignment name.
   */
  policyAssignmentName?: string;
  /**
   * @member {string} [policyAssignmentOwner] Policy assignment owner.
   */
  policyAssignmentOwner?: string;
  /**
   * @member {string} [policyAssignmentParameters] Policy assignment
   * parameters.
   */
  policyAssignmentParameters?: string;
  /**
   * @member {string} [policyAssignmentScope] Policy assignment scope.
   */
  policyAssignmentScope?: string;
  /**
   * @member {string} [policyDefinitionName] Policy definition name.
   */
  policyDefinitionName?: string;
  /**
   * @member {string} [policyDefinitionAction] Policy definition action, i.e.
   * effect.
   */
  policyDefinitionAction?: string;
  /**
   * @member {string} [policyDefinitionCategory] Policy definition category.
   */
  policyDefinitionCategory?: string;
  /**
   * @member {string} [policySetDefinitionId] Policy set definition ID, if the
   * policy assignment is for a policy set.
   */
  policySetDefinitionId?: string;
  /**
   * @member {string} [policySetDefinitionName] Policy set definition name, if
   * the policy assignment is for a policy set.
   */
  policySetDefinitionName?: string;
  /**
   * @member {string} [policySetDefinitionOwner] Policy set definition owner,
   * if the policy assignment is for a policy set.
   */
  policySetDefinitionOwner?: string;
  /**
   * @member {string} [policySetDefinitionCategory] Policy set definition
   * category, if the policy assignment is for a policy set.
   */
  policySetDefinitionCategory?: string;
  /**
   * @member {string} [policySetDefinitionParameters] Policy set definition
   * parameters, if the policy assignment is for a policy set.
   */
  policySetDefinitionParameters?: string;
  /**
   * @member {string} [managementGroupIds] Comma seperated list of management
   * group IDs, which represent the hierarchy of the management groups the
   * resource is under.
   */
  managementGroupIds?: string;
  /**
   * @member {string} [policyDefinitionReferenceId] Reference ID for the policy
   * definition inside the policy set, if the policy assignment is for a policy
   * set.
   */
  policyDefinitionReferenceId?: string;
  /**
   * @member {string} [tenantId] Tenant ID for the policy event record.
   */
  tenantId?: string;
  /**
   * @member {string} [principalOid] Principal object ID for the user who
   * initiated the resource operation that triggered the policy event.
   */
  principalOid?: string;
  /**
   * @property Describes unknown properties. The value of an unknown property
   * can be of "any" type.
   */
  [property: string]: any;
}

/**
 * @interface
 * An interface representing PolicyEventsQueryResults.
 * Query results.
 *
 */
export interface PolicyEventsQueryResults {
  /**
   * @member {string} [odatacontext] OData context string; used by OData
   * clients to resolve type information based on metadata.
   */
  odatacontext?: string;
  /**
   * @member {number} [odatacount] OData entity count; represents the number of
   * policy event records returned.
   */
  odatacount?: number;
  /**
   * @member {PolicyEvent[]} [value] Query results.
   */
  value?: PolicyEvent[];
}

/**
 * @interface
 * An interface representing PolicyState.
 * Policy state record.
 *
 */
export interface PolicyState {
  /**
   * @member {string} [odataid] OData entity ID; always set to null since
   * policy state records do not have an entity ID.
   */
  odataid?: string;
  /**
   * @member {string} [odatacontext] OData context string; used by OData
   * clients to resolve type information based on metadata.
   */
  odatacontext?: string;
  /**
   * @member {Date} [timestamp] Timestamp for the policy state record.
   */
  timestamp?: Date;
  /**
   * @member {string} [resourceId] Resource ID.
   */
  resourceId?: string;
  /**
   * @member {string} [policyAssignmentId] Policy assignment ID.
   */
  policyAssignmentId?: string;
  /**
   * @member {string} [policyDefinitionId] Policy definition ID.
   */
  policyDefinitionId?: string;
  /**
   * @member {string} [effectiveParameters] Effective parameters for the policy
   * assignment.
   */
  effectiveParameters?: string;
  /**
   * @member {boolean} [isCompliant] Flag which states whether the resource is
   * compliant against the policy assignment it was evaluated against.
   */
  isCompliant?: boolean;
  /**
   * @member {string} [subscriptionId] Subscription ID.
   */
  subscriptionId?: string;
  /**
   * @member {string} [resourceType] Resource type.
   */
  resourceType?: string;
  /**
   * @member {string} [resourceLocation] Resource location.
   */
  resourceLocation?: string;
  /**
   * @member {string} [resourceGroup] Resource group name.
   */
  resourceGroup?: string;
  /**
   * @member {string} [resourceTags] List of resource tags.
   */
  resourceTags?: string;
  /**
   * @member {string} [policyAssignmentName] Policy assignment name.
   */
  policyAssignmentName?: string;
  /**
   * @member {string} [policyAssignmentOwner] Policy assignment owner.
   */
  policyAssignmentOwner?: string;
  /**
   * @member {string} [policyAssignmentParameters] Policy assignment
   * parameters.
   */
  policyAssignmentParameters?: string;
  /**
   * @member {string} [policyAssignmentScope] Policy assignment scope.
   */
  policyAssignmentScope?: string;
  /**
   * @member {string} [policyDefinitionName] Policy definition name.
   */
  policyDefinitionName?: string;
  /**
   * @member {string} [policyDefinitionAction] Policy definition action, i.e.
   * effect.
   */
  policyDefinitionAction?: string;
  /**
   * @member {string} [policyDefinitionCategory] Policy definition category.
   */
  policyDefinitionCategory?: string;
  /**
   * @member {string} [policySetDefinitionId] Policy set definition ID, if the
   * policy assignment is for a policy set.
   */
  policySetDefinitionId?: string;
  /**
   * @member {string} [policySetDefinitionName] Policy set definition name, if
   * the policy assignment is for a policy set.
   */
  policySetDefinitionName?: string;
  /**
   * @member {string} [policySetDefinitionOwner] Policy set definition owner,
   * if the policy assignment is for a policy set.
   */
  policySetDefinitionOwner?: string;
  /**
   * @member {string} [policySetDefinitionCategory] Policy set definition
   * category, if the policy assignment is for a policy set.
   */
  policySetDefinitionCategory?: string;
  /**
   * @member {string} [policySetDefinitionParameters] Policy set definition
   * parameters, if the policy assignment is for a policy set.
   */
  policySetDefinitionParameters?: string;
  /**
   * @member {string} [managementGroupIds] Comma seperated list of management
   * group IDs, which represent the hierarchy of the management groups the
   * resource is under.
   */
  managementGroupIds?: string;
  /**
   * @member {string} [policyDefinitionReferenceId] Reference ID for the policy
   * definition inside the policy set, if the policy assignment is for a policy
   * set.
   */
  policyDefinitionReferenceId?: string;
  /**
   * @property Describes unknown properties. The value of an unknown property
   * can be of "any" type.
   */
  [property: string]: any;
}

/**
 * @interface
 * An interface representing PolicyStatesQueryResults.
 * Query results.
 *
 */
export interface PolicyStatesQueryResults {
  /**
   * @member {string} [odatacontext] OData context string; used by OData
   * clients to resolve type information based on metadata.
   */
  odatacontext?: string;
  /**
   * @member {number} [odatacount] OData entity count; represents the number of
   * policy state records returned.
   */
  odatacount?: number;
  /**
   * @member {PolicyState[]} [value] Query results.
   */
  value?: PolicyState[];
}

/**
 * @interface
 * An interface representing SummaryResults.
 * Non-compliance summary on a particular summary level.
 *
 */
export interface SummaryResults {
  /**
   * @member {string} [queryResultsUri] HTTP POST URI for queryResults action
   * on Microsoft.PolicyInsights to retrieve raw results for the non-compliance
   * summary.
   */
  queryResultsUri?: string;
  /**
   * @member {number} [nonCompliantResources] Number of non-compliant
   * resources.
   */
  nonCompliantResources?: number;
  /**
   * @member {number} [nonCompliantPolicies] Number of non-compliant policies.
   */
  nonCompliantPolicies?: number;
}

/**
 * @interface
 * An interface representing PolicyDefinitionSummary.
 * Policy definition summary.
 *
 */
export interface PolicyDefinitionSummary {
  /**
   * @member {string} [policyDefinitionId] Policy definition ID.
   */
  policyDefinitionId?: string;
  /**
   * @member {string} [policyDefinitionReferenceId] Policy definition reference
   * ID.
   */
  policyDefinitionReferenceId?: string;
  /**
   * @member {string} [effect] Policy effect, i.e. policy definition action.
   */
  effect?: string;
  /**
   * @member {SummaryResults} [results] Non-compliance summary for the policy
   * definition.
   */
  results?: SummaryResults;
}

/**
 * @interface
 * An interface representing PolicyAssignmentSummary.
 * Policy assignment summary.
 *
 */
export interface PolicyAssignmentSummary {
  /**
   * @member {string} [policyAssignmentId] Policy assignment ID.
   */
  policyAssignmentId?: string;
  /**
   * @member {string} [policySetDefinitionId] Policy set definition ID, if the
   * policy assignment is for a policy set.
   */
  policySetDefinitionId?: string;
  /**
   * @member {SummaryResults} [results] Non-compliance summary for the policy
   * assignment.
   */
  results?: SummaryResults;
  /**
   * @member {PolicyDefinitionSummary[]} [policyDefinitions] Policy definitions
   * summary.
   */
  policyDefinitions?: PolicyDefinitionSummary[];
}

/**
 * @interface
 * An interface representing Summary.
 * Summary results.
 *
 */
export interface Summary {
  /**
   * @member {string} [odataid] OData entity ID; always set to null since
   * summaries do not have an entity ID.
   */
  odataid?: string;
  /**
   * @member {string} [odatacontext] OData context string; used by OData
   * clients to resolve type information based on metadata.
   */
  odatacontext?: string;
  /**
   * @member {SummaryResults} [results] Non-compliance summary for all policy
   * assignments.
   */
  results?: SummaryResults;
  /**
   * @member {PolicyAssignmentSummary[]} [policyAssignments] Policy assignments
   * summary.
   */
  policyAssignments?: PolicyAssignmentSummary[];
}

/**
 * @interface
 * An interface representing SummarizeResults.
 * Summarize action results.
 *
 */
export interface SummarizeResults {
  /**
   * @member {string} [odatacontext] OData context string; used by OData
   * clients to resolve type information based on metadata.
   */
  odatacontext?: string;
  /**
   * @member {number} [odatacount] OData entity count; represents the number of
   * summaries returned; always set to 1.
   */
  odatacount?: number;
  /**
   * @member {Summary[]} [value] Summarize action results.
   */
  value?: Summary[];
}

/**
 * @interface
 * An interface representing OperationDisplay.
 * Display metadata associated with the operation.
 *
 */
export interface OperationDisplay {
  /**
   * @member {string} [provider] Resource provider name.
   */
  provider?: string;
  /**
   * @member {string} [resource] Resource name on which the operation is
   * performed.
   */
  resource?: string;
  /**
   * @member {string} [operation] Operation name.
   */
  operation?: string;
  /**
   * @member {string} [description] Operation description.
   */
  description?: string;
}

/**
 * @interface
 * An interface representing Operation.
 * Operation definition.
 *
 */
export interface Operation {
  /**
   * @member {string} [name] Operation name.
   */
  name?: string;
  /**
   * @member {OperationDisplay} [display] Display metadata associated with the
   * operation.
   */
  display?: OperationDisplay;
}

/**
 * @interface
 * An interface representing OperationsListResults.
 * List of available operations.
 *
 */
export interface OperationsListResults {
  /**
   * @member {number} [odatacount] OData entity count; represents the number of
   * operations returned.
   */
  odatacount?: number;
  /**
   * @member {Operation[]} [value] List of available operations.
   */
  value?: Operation[];
}

/**
 * @interface
 * An interface representing QueryOptions.
 * Additional parameters for a set of operations.
 *
 */
export interface QueryOptions {
  /**
   * @member {number} [top] Maximum number of records to return.
   */
  top?: number;
  /**
   * @member {string} [filter] OData filter expression.
   */
  filter?: string;
  /**
   * @member {string} [orderBy] Ordering expression using OData notation. One
   * or more comma-separated column names with an optional "desc" (the default)
   * or "asc", e.g. "$orderby=PolicyAssignmentId, ResourceId asc".
   */
  orderBy?: string;
  /**
   * @member {string} [select] Select expression using OData notation. Limits
   * the columns on each record to just those requested, e.g.
   * "$select=PolicyAssignmentId, ResourceId".
   */
  select?: string;
  /**
   * @member {Date} [from] ISO 8601 formatted timestamp specifying the start
   * time of the interval to query. When not specified, the service uses ($to -
   * 1-day).
   */
  from?: Date;
  /**
   * @member {Date} [to] ISO 8601 formatted timestamp specifying the end time
   * of the interval to query. When not specified, the service uses request
   * time.
   */
  to?: Date;
  /**
   * @member {string} [apply] OData apply expression for aggregations.
   */
  apply?: string;
}

/**
 * @interface
 * An interface representing PolicyTrackedResourcesListQueryResultsForManagementGroupOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface PolicyTrackedResourcesListQueryResultsForManagementGroupOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {QueryOptions} [queryOptions] Additional parameters for the
   * operation
   */
  queryOptions?: QueryOptions;
}

/**
 * @interface
 * An interface representing PolicyTrackedResourcesListQueryResultsForSubscriptionOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface PolicyTrackedResourcesListQueryResultsForSubscriptionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {QueryOptions} [queryOptions] Additional parameters for the
   * operation
   */
  queryOptions?: QueryOptions;
}

/**
 * @interface
 * An interface representing PolicyTrackedResourcesListQueryResultsForResourceGroupOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface PolicyTrackedResourcesListQueryResultsForResourceGroupOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {QueryOptions} [queryOptions] Additional parameters for the
   * operation
   */
  queryOptions?: QueryOptions;
}

/**
 * @interface
 * An interface representing PolicyTrackedResourcesListQueryResultsForResourceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface PolicyTrackedResourcesListQueryResultsForResourceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {QueryOptions} [queryOptions] Additional parameters for the
   * operation
   */
  queryOptions?: QueryOptions;
}

/**
 * @interface
 * An interface representing RemediationsListDeploymentsAtManagementGroupOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface RemediationsListDeploymentsAtManagementGroupOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {QueryOptions} [queryOptions] Additional parameters for the
   * operation
   */
  queryOptions?: QueryOptions;
}

/**
 * @interface
 * An interface representing RemediationsListForManagementGroupOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface RemediationsListForManagementGroupOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {QueryOptions} [queryOptions] Additional parameters for the
   * operation
   */
  queryOptions?: QueryOptions;
}

/**
 * @interface
 * An interface representing RemediationsListDeploymentsAtSubscriptionOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface RemediationsListDeploymentsAtSubscriptionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {QueryOptions} [queryOptions] Additional parameters for the
   * operation
   */
  queryOptions?: QueryOptions;
}

/**
 * @interface
 * An interface representing RemediationsListForSubscriptionOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface RemediationsListForSubscriptionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {QueryOptions} [queryOptions] Additional parameters for the
   * operation
   */
  queryOptions?: QueryOptions;
}

/**
 * @interface
 * An interface representing RemediationsListDeploymentsAtResourceGroupOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface RemediationsListDeploymentsAtResourceGroupOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {QueryOptions} [queryOptions] Additional parameters for the
   * operation
   */
  queryOptions?: QueryOptions;
}

/**
 * @interface
 * An interface representing RemediationsListForResourceGroupOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface RemediationsListForResourceGroupOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {QueryOptions} [queryOptions] Additional parameters for the
   * operation
   */
  queryOptions?: QueryOptions;
}

/**
 * @interface
 * An interface representing RemediationsListDeploymentsAtResourceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface RemediationsListDeploymentsAtResourceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {QueryOptions} [queryOptions] Additional parameters for the
   * operation
   */
  queryOptions?: QueryOptions;
}

/**
 * @interface
 * An interface representing RemediationsListForResourceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface RemediationsListForResourceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {QueryOptions} [queryOptions] Additional parameters for the
   * operation
   */
  queryOptions?: QueryOptions;
}

/**
 * @interface
 * An interface representing PolicyEventsListQueryResultsForManagementGroupOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface PolicyEventsListQueryResultsForManagementGroupOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {QueryOptions} [queryOptions] Additional parameters for the
   * operation
   */
  queryOptions?: QueryOptions;
}

/**
 * @interface
 * An interface representing PolicyEventsListQueryResultsForSubscriptionOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface PolicyEventsListQueryResultsForSubscriptionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {QueryOptions} [queryOptions] Additional parameters for the
   * operation
   */
  queryOptions?: QueryOptions;
}

/**
 * @interface
 * An interface representing PolicyEventsListQueryResultsForResourceGroupOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface PolicyEventsListQueryResultsForResourceGroupOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {QueryOptions} [queryOptions] Additional parameters for the
   * operation
   */
  queryOptions?: QueryOptions;
}

/**
 * @interface
 * An interface representing PolicyEventsListQueryResultsForResourceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface PolicyEventsListQueryResultsForResourceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {QueryOptions} [queryOptions] Additional parameters for the
   * operation
   */
  queryOptions?: QueryOptions;
}

/**
 * @interface
 * An interface representing PolicyEventsListQueryResultsForPolicySetDefinitionOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface PolicyEventsListQueryResultsForPolicySetDefinitionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {QueryOptions} [queryOptions] Additional parameters for the
   * operation
   */
  queryOptions?: QueryOptions;
}

/**
 * @interface
 * An interface representing PolicyEventsListQueryResultsForPolicyDefinitionOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface PolicyEventsListQueryResultsForPolicyDefinitionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {QueryOptions} [queryOptions] Additional parameters for the
   * operation
   */
  queryOptions?: QueryOptions;
}

/**
 * @interface
 * An interface representing PolicyEventsListQueryResultsForSubscriptionLevelPolicyAssignmentOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface PolicyEventsListQueryResultsForSubscriptionLevelPolicyAssignmentOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {QueryOptions} [queryOptions] Additional parameters for the
   * operation
   */
  queryOptions?: QueryOptions;
}

/**
 * @interface
 * An interface representing PolicyEventsListQueryResultsForResourceGroupLevelPolicyAssignmentOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface PolicyEventsListQueryResultsForResourceGroupLevelPolicyAssignmentOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {QueryOptions} [queryOptions] Additional parameters for the
   * operation
   */
  queryOptions?: QueryOptions;
}

/**
 * @interface
 * An interface representing PolicyStatesListQueryResultsForManagementGroupOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface PolicyStatesListQueryResultsForManagementGroupOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {QueryOptions} [queryOptions] Additional parameters for the
   * operation
   */
  queryOptions?: QueryOptions;
}

/**
 * @interface
 * An interface representing PolicyStatesSummarizeForManagementGroupOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface PolicyStatesSummarizeForManagementGroupOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {QueryOptions} [queryOptions] Additional parameters for the
   * operation
   */
  queryOptions?: QueryOptions;
}

/**
 * @interface
 * An interface representing PolicyStatesListQueryResultsForSubscriptionOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface PolicyStatesListQueryResultsForSubscriptionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {QueryOptions} [queryOptions] Additional parameters for the
   * operation
   */
  queryOptions?: QueryOptions;
}

/**
 * @interface
 * An interface representing PolicyStatesSummarizeForSubscriptionOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface PolicyStatesSummarizeForSubscriptionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {QueryOptions} [queryOptions] Additional parameters for the
   * operation
   */
  queryOptions?: QueryOptions;
}

/**
 * @interface
 * An interface representing PolicyStatesListQueryResultsForResourceGroupOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface PolicyStatesListQueryResultsForResourceGroupOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {QueryOptions} [queryOptions] Additional parameters for the
   * operation
   */
  queryOptions?: QueryOptions;
}

/**
 * @interface
 * An interface representing PolicyStatesSummarizeForResourceGroupOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface PolicyStatesSummarizeForResourceGroupOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {QueryOptions} [queryOptions] Additional parameters for the
   * operation
   */
  queryOptions?: QueryOptions;
}

/**
 * @interface
 * An interface representing PolicyStatesListQueryResultsForResourceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface PolicyStatesListQueryResultsForResourceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {QueryOptions} [queryOptions] Additional parameters for the
   * operation
   */
  queryOptions?: QueryOptions;
}

/**
 * @interface
 * An interface representing PolicyStatesSummarizeForResourceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface PolicyStatesSummarizeForResourceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {QueryOptions} [queryOptions] Additional parameters for the
   * operation
   */
  queryOptions?: QueryOptions;
}

/**
 * @interface
 * An interface representing PolicyStatesListQueryResultsForPolicySetDefinitionOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface PolicyStatesListQueryResultsForPolicySetDefinitionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {QueryOptions} [queryOptions] Additional parameters for the
   * operation
   */
  queryOptions?: QueryOptions;
}

/**
 * @interface
 * An interface representing PolicyStatesSummarizeForPolicySetDefinitionOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface PolicyStatesSummarizeForPolicySetDefinitionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {QueryOptions} [queryOptions] Additional parameters for the
   * operation
   */
  queryOptions?: QueryOptions;
}

/**
 * @interface
 * An interface representing PolicyStatesListQueryResultsForPolicyDefinitionOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface PolicyStatesListQueryResultsForPolicyDefinitionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {QueryOptions} [queryOptions] Additional parameters for the
   * operation
   */
  queryOptions?: QueryOptions;
}

/**
 * @interface
 * An interface representing PolicyStatesSummarizeForPolicyDefinitionOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface PolicyStatesSummarizeForPolicyDefinitionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {QueryOptions} [queryOptions] Additional parameters for the
   * operation
   */
  queryOptions?: QueryOptions;
}

/**
 * @interface
 * An interface representing PolicyStatesListQueryResultsForSubscriptionLevelPolicyAssignmentOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface PolicyStatesListQueryResultsForSubscriptionLevelPolicyAssignmentOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {QueryOptions} [queryOptions] Additional parameters for the
   * operation
   */
  queryOptions?: QueryOptions;
}

/**
 * @interface
 * An interface representing PolicyStatesSummarizeForSubscriptionLevelPolicyAssignmentOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface PolicyStatesSummarizeForSubscriptionLevelPolicyAssignmentOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {QueryOptions} [queryOptions] Additional parameters for the
   * operation
   */
  queryOptions?: QueryOptions;
}

/**
 * @interface
 * An interface representing PolicyStatesListQueryResultsForResourceGroupLevelPolicyAssignmentOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface PolicyStatesListQueryResultsForResourceGroupLevelPolicyAssignmentOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {QueryOptions} [queryOptions] Additional parameters for the
   * operation
   */
  queryOptions?: QueryOptions;
}

/**
 * @interface
 * An interface representing PolicyStatesSummarizeForResourceGroupLevelPolicyAssignmentOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface PolicyStatesSummarizeForResourceGroupLevelPolicyAssignmentOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {QueryOptions} [queryOptions] Additional parameters for the
   * operation
   */
  queryOptions?: QueryOptions;
}

/**
 * @interface
 * An interface representing PolicyInsightsClientOptions.
 * @extends AzureServiceClientOptions
 */
export interface PolicyInsightsClientOptions extends AzureServiceClientOptions {
  /**
   * @member {string} [baseUri]
   */
  baseUri?: string;
}


/**
 * @interface
 * An interface representing the PolicyTrackedResourcesQueryResults.
 * Query results.
 *
 * @extends Array<PolicyTrackedResource>
 */
export interface PolicyTrackedResourcesQueryResults extends Array<PolicyTrackedResource> {
  /**
   * @member {string} [nextLink] The URL to get the next set of results.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the RemediationDeploymentsListResult.
 * List of deployments for a remediation.
 *
 * @extends Array<RemediationDeployment>
 */
export interface RemediationDeploymentsListResult extends Array<RemediationDeployment> {
  /**
   * @member {string} [nextLink] The URL to get the next set of results.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the RemediationListResult.
 * List of remediations.
 *
 * @extends Array<Remediation>
 */
export interface RemediationListResult extends Array<Remediation> {
  /**
   * @member {string} [nextLink] The URL to get the next set of results.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * Defines values for PolicyStatesResource.
 * Possible values include: 'default', 'latest'
 * @readonly
 * @enum {string}
 */
export type PolicyStatesResource = 'default' | 'latest';

/**
 * Contains response data for the listQueryResultsForManagementGroup operation.
 */
export type PolicyTrackedResourcesListQueryResultsForManagementGroupResponse = PolicyTrackedResourcesQueryResults & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyTrackedResourcesQueryResults;
    };
};

/**
 * Contains response data for the listQueryResultsForSubscription operation.
 */
export type PolicyTrackedResourcesListQueryResultsForSubscriptionResponse = PolicyTrackedResourcesQueryResults & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyTrackedResourcesQueryResults;
    };
};

/**
 * Contains response data for the listQueryResultsForResourceGroup operation.
 */
export type PolicyTrackedResourcesListQueryResultsForResourceGroupResponse = PolicyTrackedResourcesQueryResults & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyTrackedResourcesQueryResults;
    };
};

/**
 * Contains response data for the listQueryResultsForResource operation.
 */
export type PolicyTrackedResourcesListQueryResultsForResourceResponse = PolicyTrackedResourcesQueryResults & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyTrackedResourcesQueryResults;
    };
};

/**
 * Contains response data for the listQueryResultsForManagementGroupNext operation.
 */
export type PolicyTrackedResourcesListQueryResultsForManagementGroupNextResponse = PolicyTrackedResourcesQueryResults & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyTrackedResourcesQueryResults;
    };
};

/**
 * Contains response data for the listQueryResultsForSubscriptionNext operation.
 */
export type PolicyTrackedResourcesListQueryResultsForSubscriptionNextResponse = PolicyTrackedResourcesQueryResults & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyTrackedResourcesQueryResults;
    };
};

/**
 * Contains response data for the listQueryResultsForResourceGroupNext operation.
 */
export type PolicyTrackedResourcesListQueryResultsForResourceGroupNextResponse = PolicyTrackedResourcesQueryResults & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyTrackedResourcesQueryResults;
    };
};

/**
 * Contains response data for the listQueryResultsForResourceNext operation.
 */
export type PolicyTrackedResourcesListQueryResultsForResourceNextResponse = PolicyTrackedResourcesQueryResults & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyTrackedResourcesQueryResults;
    };
};

/**
 * Contains response data for the listDeploymentsAtManagementGroup operation.
 */
export type RemediationsListDeploymentsAtManagementGroupResponse = RemediationDeploymentsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RemediationDeploymentsListResult;
    };
};

/**
 * Contains response data for the cancelAtManagementGroup operation.
 */
export type RemediationsCancelAtManagementGroupResponse = Remediation & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Remediation;
    };
};

/**
 * Contains response data for the listForManagementGroup operation.
 */
export type RemediationsListForManagementGroupResponse = RemediationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RemediationListResult;
    };
};

/**
 * Contains response data for the createOrUpdateAtManagementGroup operation.
 */
export type RemediationsCreateOrUpdateAtManagementGroupResponse = Remediation & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Remediation;
    };
};

/**
 * Contains response data for the getAtManagementGroup operation.
 */
export type RemediationsGetAtManagementGroupResponse = Remediation & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Remediation;
    };
};

/**
 * Contains response data for the deleteAtManagementGroup operation.
 */
export type RemediationsDeleteAtManagementGroupResponse = Remediation & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Remediation;
    };
};

/**
 * Contains response data for the listDeploymentsAtSubscription operation.
 */
export type RemediationsListDeploymentsAtSubscriptionResponse = RemediationDeploymentsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RemediationDeploymentsListResult;
    };
};

/**
 * Contains response data for the cancelAtSubscription operation.
 */
export type RemediationsCancelAtSubscriptionResponse = Remediation & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Remediation;
    };
};

/**
 * Contains response data for the listForSubscription operation.
 */
export type RemediationsListForSubscriptionResponse = RemediationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RemediationListResult;
    };
};

/**
 * Contains response data for the createOrUpdateAtSubscription operation.
 */
export type RemediationsCreateOrUpdateAtSubscriptionResponse = Remediation & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Remediation;
    };
};

/**
 * Contains response data for the getAtSubscription operation.
 */
export type RemediationsGetAtSubscriptionResponse = Remediation & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Remediation;
    };
};

/**
 * Contains response data for the deleteAtSubscription operation.
 */
export type RemediationsDeleteAtSubscriptionResponse = Remediation & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Remediation;
    };
};

/**
 * Contains response data for the listDeploymentsAtResourceGroup operation.
 */
export type RemediationsListDeploymentsAtResourceGroupResponse = RemediationDeploymentsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RemediationDeploymentsListResult;
    };
};

/**
 * Contains response data for the cancelAtResourceGroup operation.
 */
export type RemediationsCancelAtResourceGroupResponse = Remediation & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Remediation;
    };
};

/**
 * Contains response data for the listForResourceGroup operation.
 */
export type RemediationsListForResourceGroupResponse = RemediationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RemediationListResult;
    };
};

/**
 * Contains response data for the createOrUpdateAtResourceGroup operation.
 */
export type RemediationsCreateOrUpdateAtResourceGroupResponse = Remediation & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Remediation;
    };
};

/**
 * Contains response data for the getAtResourceGroup operation.
 */
export type RemediationsGetAtResourceGroupResponse = Remediation & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Remediation;
    };
};

/**
 * Contains response data for the deleteAtResourceGroup operation.
 */
export type RemediationsDeleteAtResourceGroupResponse = Remediation & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Remediation;
    };
};

/**
 * Contains response data for the listDeploymentsAtResource operation.
 */
export type RemediationsListDeploymentsAtResourceResponse = RemediationDeploymentsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RemediationDeploymentsListResult;
    };
};

/**
 * Contains response data for the cancelAtResource operation.
 */
export type RemediationsCancelAtResourceResponse = Remediation & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Remediation;
    };
};

/**
 * Contains response data for the listForResource operation.
 */
export type RemediationsListForResourceResponse = RemediationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RemediationListResult;
    };
};

/**
 * Contains response data for the createOrUpdateAtResource operation.
 */
export type RemediationsCreateOrUpdateAtResourceResponse = Remediation & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Remediation;
    };
};

/**
 * Contains response data for the getAtResource operation.
 */
export type RemediationsGetAtResourceResponse = Remediation & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Remediation;
    };
};

/**
 * Contains response data for the deleteAtResource operation.
 */
export type RemediationsDeleteAtResourceResponse = Remediation & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Remediation;
    };
};

/**
 * Contains response data for the listDeploymentsAtManagementGroupNext operation.
 */
export type RemediationsListDeploymentsAtManagementGroupNextResponse = RemediationDeploymentsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RemediationDeploymentsListResult;
    };
};

/**
 * Contains response data for the listForManagementGroupNext operation.
 */
export type RemediationsListForManagementGroupNextResponse = RemediationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RemediationListResult;
    };
};

/**
 * Contains response data for the listDeploymentsAtSubscriptionNext operation.
 */
export type RemediationsListDeploymentsAtSubscriptionNextResponse = RemediationDeploymentsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RemediationDeploymentsListResult;
    };
};

/**
 * Contains response data for the listForSubscriptionNext operation.
 */
export type RemediationsListForSubscriptionNextResponse = RemediationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RemediationListResult;
    };
};

/**
 * Contains response data for the listDeploymentsAtResourceGroupNext operation.
 */
export type RemediationsListDeploymentsAtResourceGroupNextResponse = RemediationDeploymentsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RemediationDeploymentsListResult;
    };
};

/**
 * Contains response data for the listForResourceGroupNext operation.
 */
export type RemediationsListForResourceGroupNextResponse = RemediationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RemediationListResult;
    };
};

/**
 * Contains response data for the listDeploymentsAtResourceNext operation.
 */
export type RemediationsListDeploymentsAtResourceNextResponse = RemediationDeploymentsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RemediationDeploymentsListResult;
    };
};

/**
 * Contains response data for the listForResourceNext operation.
 */
export type RemediationsListForResourceNextResponse = RemediationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RemediationListResult;
    };
};

/**
 * Contains response data for the listQueryResultsForManagementGroup operation.
 */
export type PolicyEventsListQueryResultsForManagementGroupResponse = PolicyEventsQueryResults & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyEventsQueryResults;
    };
};

/**
 * Contains response data for the listQueryResultsForSubscription operation.
 */
export type PolicyEventsListQueryResultsForSubscriptionResponse = PolicyEventsQueryResults & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyEventsQueryResults;
    };
};

/**
 * Contains response data for the listQueryResultsForResourceGroup operation.
 */
export type PolicyEventsListQueryResultsForResourceGroupResponse = PolicyEventsQueryResults & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyEventsQueryResults;
    };
};

/**
 * Contains response data for the listQueryResultsForResource operation.
 */
export type PolicyEventsListQueryResultsForResourceResponse = PolicyEventsQueryResults & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyEventsQueryResults;
    };
};

/**
 * Contains response data for the listQueryResultsForPolicySetDefinition operation.
 */
export type PolicyEventsListQueryResultsForPolicySetDefinitionResponse = PolicyEventsQueryResults & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyEventsQueryResults;
    };
};

/**
 * Contains response data for the listQueryResultsForPolicyDefinition operation.
 */
export type PolicyEventsListQueryResultsForPolicyDefinitionResponse = PolicyEventsQueryResults & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyEventsQueryResults;
    };
};

/**
 * Contains response data for the listQueryResultsForSubscriptionLevelPolicyAssignment operation.
 */
export type PolicyEventsListQueryResultsForSubscriptionLevelPolicyAssignmentResponse = PolicyEventsQueryResults & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyEventsQueryResults;
    };
};

/**
 * Contains response data for the listQueryResultsForResourceGroupLevelPolicyAssignment operation.
 */
export type PolicyEventsListQueryResultsForResourceGroupLevelPolicyAssignmentResponse = PolicyEventsQueryResults & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyEventsQueryResults;
    };
};

/**
 * Contains response data for the getMetadata operation.
 */
export type PolicyEventsGetMetadataResponse = {
  /**
   * The parsed response body.
   */
  body: string;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the listQueryResultsForManagementGroup operation.
 */
export type PolicyStatesListQueryResultsForManagementGroupResponse = PolicyStatesQueryResults & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyStatesQueryResults;
    };
};

/**
 * Contains response data for the summarizeForManagementGroup operation.
 */
export type PolicyStatesSummarizeForManagementGroupResponse = SummarizeResults & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SummarizeResults;
    };
};

/**
 * Contains response data for the listQueryResultsForSubscription operation.
 */
export type PolicyStatesListQueryResultsForSubscriptionResponse = PolicyStatesQueryResults & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyStatesQueryResults;
    };
};

/**
 * Contains response data for the summarizeForSubscription operation.
 */
export type PolicyStatesSummarizeForSubscriptionResponse = SummarizeResults & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SummarizeResults;
    };
};

/**
 * Contains response data for the listQueryResultsForResourceGroup operation.
 */
export type PolicyStatesListQueryResultsForResourceGroupResponse = PolicyStatesQueryResults & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyStatesQueryResults;
    };
};

/**
 * Contains response data for the summarizeForResourceGroup operation.
 */
export type PolicyStatesSummarizeForResourceGroupResponse = SummarizeResults & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SummarizeResults;
    };
};

/**
 * Contains response data for the listQueryResultsForResource operation.
 */
export type PolicyStatesListQueryResultsForResourceResponse = PolicyStatesQueryResults & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyStatesQueryResults;
    };
};

/**
 * Contains response data for the summarizeForResource operation.
 */
export type PolicyStatesSummarizeForResourceResponse = SummarizeResults & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SummarizeResults;
    };
};

/**
 * Contains response data for the listQueryResultsForPolicySetDefinition operation.
 */
export type PolicyStatesListQueryResultsForPolicySetDefinitionResponse = PolicyStatesQueryResults & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyStatesQueryResults;
    };
};

/**
 * Contains response data for the summarizeForPolicySetDefinition operation.
 */
export type PolicyStatesSummarizeForPolicySetDefinitionResponse = SummarizeResults & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SummarizeResults;
    };
};

/**
 * Contains response data for the listQueryResultsForPolicyDefinition operation.
 */
export type PolicyStatesListQueryResultsForPolicyDefinitionResponse = PolicyStatesQueryResults & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyStatesQueryResults;
    };
};

/**
 * Contains response data for the summarizeForPolicyDefinition operation.
 */
export type PolicyStatesSummarizeForPolicyDefinitionResponse = SummarizeResults & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SummarizeResults;
    };
};

/**
 * Contains response data for the listQueryResultsForSubscriptionLevelPolicyAssignment operation.
 */
export type PolicyStatesListQueryResultsForSubscriptionLevelPolicyAssignmentResponse = PolicyStatesQueryResults & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyStatesQueryResults;
    };
};

/**
 * Contains response data for the summarizeForSubscriptionLevelPolicyAssignment operation.
 */
export type PolicyStatesSummarizeForSubscriptionLevelPolicyAssignmentResponse = SummarizeResults & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SummarizeResults;
    };
};

/**
 * Contains response data for the listQueryResultsForResourceGroupLevelPolicyAssignment operation.
 */
export type PolicyStatesListQueryResultsForResourceGroupLevelPolicyAssignmentResponse = PolicyStatesQueryResults & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyStatesQueryResults;
    };
};

/**
 * Contains response data for the summarizeForResourceGroupLevelPolicyAssignment operation.
 */
export type PolicyStatesSummarizeForResourceGroupLevelPolicyAssignmentResponse = SummarizeResults & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SummarizeResults;
    };
};

/**
 * Contains response data for the getMetadata operation.
 */
export type PolicyStatesGetMetadataResponse = {
  /**
   * The parsed response body.
   */
  body: string;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationsListResults & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationsListResults;
    };
};
