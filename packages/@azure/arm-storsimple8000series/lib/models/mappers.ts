/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { CloudErrorMapper, BaseResourceMapper } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export const CloudError = CloudErrorMapper;
export const BaseResource = BaseResourceMapper;

export const BaseModel: msRest.CompositeMapper = {
  serializedName: "BaseModel",
  type: {
    name: "Composite",
    className: "BaseModel",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "Enum",
          allowedValues: [
            "Series8000"
          ]
        }
      }
    }
  }
};

export const AccessControlRecord: msRest.CompositeMapper = {
  serializedName: "AccessControlRecord",
  type: {
    name: "Composite",
    className: "AccessControlRecord",
    modelProperties: {
      ...BaseModel.type.modelProperties,
      initiatorName: {
        required: true,
        serializedName: "properties.initiatorName",
        type: {
          name: "String"
        }
      },
      volumeCount: {
        readOnly: true,
        serializedName: "properties.volumeCount",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const AcsConfiguration: msRest.CompositeMapper = {
  serializedName: "AcsConfiguration",
  type: {
    name: "Composite",
    className: "AcsConfiguration",
    modelProperties: {
      namespace: {
        required: true,
        serializedName: "namespace",
        type: {
          name: "String"
        }
      },
      realm: {
        required: true,
        serializedName: "realm",
        type: {
          name: "String"
        }
      },
      serviceUrl: {
        required: true,
        serializedName: "serviceUrl",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AlertSource: msRest.CompositeMapper = {
  serializedName: "AlertSource",
  type: {
    name: "Composite",
    className: "AlertSource",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      timeZone: {
        serializedName: "timeZone",
        type: {
          name: "String"
        }
      },
      alertSourceType: {
        serializedName: "alertSourceType",
        type: {
          name: "Enum",
          allowedValues: [
            "Resource",
            "Device"
          ]
        }
      }
    }
  }
};

export const AlertErrorDetails: msRest.CompositeMapper = {
  serializedName: "AlertErrorDetails",
  type: {
    name: "Composite",
    className: "AlertErrorDetails",
    modelProperties: {
      errorCode: {
        serializedName: "errorCode",
        type: {
          name: "String"
        }
      },
      errorMessage: {
        serializedName: "errorMessage",
        type: {
          name: "String"
        }
      },
      occurences: {
        serializedName: "occurences",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Alert: msRest.CompositeMapper = {
  serializedName: "Alert",
  type: {
    name: "Composite",
    className: "Alert",
    modelProperties: {
      ...BaseModel.type.modelProperties,
      title: {
        required: true,
        serializedName: "properties.title",
        type: {
          name: "String"
        }
      },
      scope: {
        required: true,
        serializedName: "properties.scope",
        type: {
          name: "Enum",
          allowedValues: [
            "Resource",
            "Device"
          ]
        }
      },
      alertType: {
        required: true,
        serializedName: "properties.alertType",
        type: {
          name: "String"
        }
      },
      appearedAtTime: {
        required: true,
        serializedName: "properties.appearedAtTime",
        type: {
          name: "DateTime"
        }
      },
      appearedAtSourceTime: {
        required: true,
        serializedName: "properties.appearedAtSourceTime",
        type: {
          name: "DateTime"
        }
      },
      clearedAtTime: {
        serializedName: "properties.clearedAtTime",
        type: {
          name: "DateTime"
        }
      },
      clearedAtSourceTime: {
        serializedName: "properties.clearedAtSourceTime",
        type: {
          name: "DateTime"
        }
      },
      source: {
        required: true,
        serializedName: "properties.source",
        type: {
          name: "Composite",
          className: "AlertSource"
        }
      },
      recommendation: {
        serializedName: "properties.recommendation",
        type: {
          name: "String"
        }
      },
      resolutionReason: {
        serializedName: "properties.resolutionReason",
        type: {
          name: "String"
        }
      },
      severity: {
        required: true,
        serializedName: "properties.severity",
        type: {
          name: "Enum",
          allowedValues: [
            "Informational",
            "Warning",
            "Critical"
          ]
        }
      },
      status: {
        required: true,
        serializedName: "properties.status",
        type: {
          name: "Enum",
          allowedValues: [
            "Active",
            "Cleared"
          ]
        }
      },
      errorDetails: {
        serializedName: "properties.errorDetails",
        type: {
          name: "Composite",
          className: "AlertErrorDetails"
        }
      },
      detailedInformation: {
        serializedName: "properties.detailedInformation",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const AlertFilter: msRest.CompositeMapper = {
  serializedName: "AlertFilter",
  type: {
    name: "Composite",
    className: "AlertFilter",
    modelProperties: {
      status: {
        serializedName: "status",
        type: {
          name: "Enum",
          allowedValues: [
            "Active",
            "Cleared"
          ]
        }
      },
      severity: {
        serializedName: "severity",
        type: {
          name: "Enum",
          allowedValues: [
            "Informational",
            "Warning",
            "Critical"
          ]
        }
      },
      sourceType: {
        serializedName: "sourceType",
        type: {
          name: "Enum",
          allowedValues: [
            "Resource",
            "Device"
          ]
        }
      },
      sourceName: {
        serializedName: "sourceName",
        type: {
          name: "String"
        }
      },
      appearedOnTime: {
        serializedName: "appearedOnTime",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const AlertSettings: msRest.CompositeMapper = {
  serializedName: "AlertSettings",
  type: {
    name: "Composite",
    className: "AlertSettings",
    modelProperties: {
      ...BaseModel.type.modelProperties,
      emailNotification: {
        required: true,
        serializedName: "properties.emailNotification",
        type: {
          name: "Enum",
          allowedValues: [
            "Enabled",
            "Disabled"
          ]
        }
      },
      alertNotificationCulture: {
        serializedName: "properties.alertNotificationCulture",
        type: {
          name: "String"
        }
      },
      notificationToServiceOwners: {
        serializedName: "properties.notificationToServiceOwners",
        type: {
          name: "Enum",
          allowedValues: [
            "Enabled",
            "Disabled"
          ]
        }
      },
      additionalRecipientEmailList: {
        serializedName: "properties.additionalRecipientEmailList",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const AsymmetricEncryptedSecret: msRest.CompositeMapper = {
  serializedName: "AsymmetricEncryptedSecret",
  type: {
    name: "Composite",
    className: "AsymmetricEncryptedSecret",
    modelProperties: {
      value: {
        required: true,
        serializedName: "value",
        type: {
          name: "String"
        }
      },
      encryptionCertThumbprint: {
        serializedName: "encryptionCertThumbprint",
        type: {
          name: "String"
        }
      },
      encryptionAlgorithm: {
        required: true,
        serializedName: "encryptionAlgorithm",
        type: {
          name: "Enum",
          allowedValues: [
            "None",
            "AES256",
            "RSAES_PKCS1_v_1_5"
          ]
        }
      }
    }
  }
};

export const AvailableProviderOperationDisplay: msRest.CompositeMapper = {
  serializedName: "AvailableProviderOperationDisplay",
  type: {
    name: "Composite",
    className: "AvailableProviderOperationDisplay",
    modelProperties: {
      provider: {
        serializedName: "provider",
        type: {
          name: "String"
        }
      },
      resource: {
        serializedName: "resource",
        type: {
          name: "String"
        }
      },
      operation: {
        serializedName: "operation",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AvailableProviderOperation: msRest.CompositeMapper = {
  serializedName: "AvailableProviderOperation",
  type: {
    name: "Composite",
    className: "AvailableProviderOperation",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "AvailableProviderOperationDisplay"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const BackupElement: msRest.CompositeMapper = {
  serializedName: "BackupElement",
  type: {
    name: "Composite",
    className: "BackupElement",
    modelProperties: {
      elementId: {
        required: true,
        serializedName: "elementId",
        type: {
          name: "String"
        }
      },
      elementName: {
        required: true,
        serializedName: "elementName",
        type: {
          name: "String"
        }
      },
      elementType: {
        required: true,
        serializedName: "elementType",
        type: {
          name: "String"
        }
      },
      sizeInBytes: {
        required: true,
        serializedName: "sizeInBytes",
        type: {
          name: "Number"
        }
      },
      volumeName: {
        required: true,
        serializedName: "volumeName",
        type: {
          name: "String"
        }
      },
      volumeContainerId: {
        required: true,
        serializedName: "volumeContainerId",
        type: {
          name: "String"
        }
      },
      volumeType: {
        serializedName: "volumeType",
        type: {
          name: "Enum",
          allowedValues: [
            "Tiered",
            "Archival",
            "LocallyPinned"
          ]
        }
      }
    }
  }
};

export const Backup: msRest.CompositeMapper = {
  serializedName: "Backup",
  type: {
    name: "Composite",
    className: "Backup",
    modelProperties: {
      ...BaseModel.type.modelProperties,
      createdOn: {
        required: true,
        serializedName: "properties.createdOn",
        type: {
          name: "DateTime"
        }
      },
      sizeInBytes: {
        required: true,
        serializedName: "properties.sizeInBytes",
        type: {
          name: "Number"
        }
      },
      backupType: {
        serializedName: "properties.backupType",
        type: {
          name: "Enum",
          allowedValues: [
            "LocalSnapshot",
            "CloudSnapshot"
          ]
        }
      },
      backupJobCreationType: {
        serializedName: "properties.backupJobCreationType",
        type: {
          name: "Enum",
          allowedValues: [
            "Adhoc",
            "BySchedule",
            "BySSM"
          ]
        }
      },
      backupPolicyId: {
        serializedName: "properties.backupPolicyId",
        type: {
          name: "String"
        }
      },
      ssmHostName: {
        serializedName: "properties.ssmHostName",
        type: {
          name: "String"
        }
      },
      elements: {
        required: true,
        serializedName: "properties.elements",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "BackupElement"
            }
          }
        }
      }
    }
  }
};

export const BackupFilter: msRest.CompositeMapper = {
  serializedName: "BackupFilter",
  type: {
    name: "Composite",
    className: "BackupFilter",
    modelProperties: {
      backupPolicyId: {
        serializedName: "backupPolicyId",
        type: {
          name: "String"
        }
      },
      volumeId: {
        serializedName: "volumeId",
        type: {
          name: "String"
        }
      },
      createdTime: {
        serializedName: "createdTime",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const BackupPolicy: msRest.CompositeMapper = {
  serializedName: "BackupPolicy",
  type: {
    name: "Composite",
    className: "BackupPolicy",
    modelProperties: {
      ...BaseModel.type.modelProperties,
      volumeIds: {
        required: true,
        serializedName: "properties.volumeIds",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      nextBackupTime: {
        readOnly: true,
        serializedName: "properties.nextBackupTime",
        type: {
          name: "DateTime"
        }
      },
      lastBackupTime: {
        readOnly: true,
        serializedName: "properties.lastBackupTime",
        type: {
          name: "DateTime"
        }
      },
      schedulesCount: {
        readOnly: true,
        serializedName: "properties.schedulesCount",
        type: {
          name: "Number"
        }
      },
      scheduledBackupStatus: {
        readOnly: true,
        serializedName: "properties.scheduledBackupStatus",
        type: {
          name: "Enum",
          allowedValues: [
            "Disabled",
            "Enabled"
          ]
        }
      },
      backupPolicyCreationType: {
        readOnly: true,
        serializedName: "properties.backupPolicyCreationType",
        type: {
          name: "Enum",
          allowedValues: [
            "BySaaS",
            "BySSM"
          ]
        }
      },
      ssmHostName: {
        readOnly: true,
        serializedName: "properties.ssmHostName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ScheduleRecurrence: msRest.CompositeMapper = {
  serializedName: "ScheduleRecurrence",
  type: {
    name: "Composite",
    className: "ScheduleRecurrence",
    modelProperties: {
      recurrenceType: {
        required: true,
        serializedName: "recurrenceType",
        type: {
          name: "Enum",
          allowedValues: [
            "Minutes",
            "Hourly",
            "Daily",
            "Weekly"
          ]
        }
      },
      recurrenceValue: {
        required: true,
        serializedName: "recurrenceValue",
        type: {
          name: "Number"
        }
      },
      weeklyDaysList: {
        serializedName: "weeklyDaysList",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Enum",
              allowedValues: [
                "Sunday",
                "Monday",
                "Tuesday",
                "Wednesday",
                "Thursday",
                "Friday",
                "Saturday"
              ]
            }
          }
        }
      }
    }
  }
};

export const BackupSchedule: msRest.CompositeMapper = {
  serializedName: "BackupSchedule",
  type: {
    name: "Composite",
    className: "BackupSchedule",
    modelProperties: {
      ...BaseModel.type.modelProperties,
      scheduleRecurrence: {
        required: true,
        serializedName: "properties.scheduleRecurrence",
        type: {
          name: "Composite",
          className: "ScheduleRecurrence"
        }
      },
      backupType: {
        required: true,
        serializedName: "properties.backupType",
        type: {
          name: "Enum",
          allowedValues: [
            "LocalSnapshot",
            "CloudSnapshot"
          ]
        }
      },
      retentionCount: {
        required: true,
        serializedName: "properties.retentionCount",
        type: {
          name: "Number"
        }
      },
      startTime: {
        required: true,
        serializedName: "properties.startTime",
        type: {
          name: "DateTime"
        }
      },
      scheduleStatus: {
        required: true,
        serializedName: "properties.scheduleStatus",
        type: {
          name: "Enum",
          allowedValues: [
            "Enabled",
            "Disabled"
          ]
        }
      },
      lastSuccessfulRun: {
        readOnly: true,
        serializedName: "properties.lastSuccessfulRun",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const Time: msRest.CompositeMapper = {
  serializedName: "Time",
  type: {
    name: "Composite",
    className: "Time",
    modelProperties: {
      hours: {
        required: true,
        serializedName: "hours",
        constraints: {
          InclusiveMaximum: 23,
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      },
      minutes: {
        required: true,
        serializedName: "minutes",
        constraints: {
          InclusiveMaximum: 59,
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      },
      seconds: {
        required: true,
        serializedName: "seconds",
        constraints: {
          InclusiveMaximum: 59,
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const BandwidthSchedule: msRest.CompositeMapper = {
  serializedName: "BandwidthSchedule",
  type: {
    name: "Composite",
    className: "BandwidthSchedule",
    modelProperties: {
      start: {
        required: true,
        serializedName: "start",
        type: {
          name: "Composite",
          className: "Time"
        }
      },
      stop: {
        required: true,
        serializedName: "stop",
        type: {
          name: "Composite",
          className: "Time"
        }
      },
      rateInMbps: {
        required: true,
        serializedName: "rateInMbps",
        type: {
          name: "Number"
        }
      },
      days: {
        required: true,
        serializedName: "days",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Enum",
              allowedValues: [
                "Sunday",
                "Monday",
                "Tuesday",
                "Wednesday",
                "Thursday",
                "Friday",
                "Saturday"
              ]
            }
          }
        }
      }
    }
  }
};

export const BandwidthSetting: msRest.CompositeMapper = {
  serializedName: "BandwidthSetting",
  type: {
    name: "Composite",
    className: "BandwidthSetting",
    modelProperties: {
      ...BaseModel.type.modelProperties,
      schedules: {
        required: true,
        serializedName: "properties.schedules",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "BandwidthSchedule"
            }
          }
        }
      },
      volumeCount: {
        readOnly: true,
        serializedName: "properties.volumeCount",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ChapSettings: msRest.CompositeMapper = {
  serializedName: "ChapSettings",
  type: {
    name: "Composite",
    className: "ChapSettings",
    modelProperties: {
      initiatorUser: {
        serializedName: "initiatorUser",
        type: {
          name: "String"
        }
      },
      initiatorSecret: {
        serializedName: "initiatorSecret",
        type: {
          name: "Composite",
          className: "AsymmetricEncryptedSecret"
        }
      },
      targetUser: {
        serializedName: "targetUser",
        type: {
          name: "String"
        }
      },
      targetSecret: {
        serializedName: "targetSecret",
        type: {
          name: "Composite",
          className: "AsymmetricEncryptedSecret"
        }
      }
    }
  }
};

export const ClearAlertRequest: msRest.CompositeMapper = {
  serializedName: "ClearAlertRequest",
  type: {
    name: "Composite",
    className: "ClearAlertRequest",
    modelProperties: {
      resolutionMessage: {
        serializedName: "resolutionMessage",
        type: {
          name: "String"
        }
      },
      alerts: {
        required: true,
        serializedName: "alerts",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const CloneRequest: msRest.CompositeMapper = {
  serializedName: "CloneRequest",
  type: {
    name: "Composite",
    className: "CloneRequest",
    modelProperties: {
      targetDeviceId: {
        required: true,
        serializedName: "targetDeviceId",
        type: {
          name: "String"
        }
      },
      targetVolumeName: {
        required: true,
        serializedName: "targetVolumeName",
        type: {
          name: "String"
        }
      },
      targetAccessControlRecordIds: {
        required: true,
        serializedName: "targetAccessControlRecordIds",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      backupElement: {
        required: true,
        serializedName: "backupElement",
        type: {
          name: "Composite",
          className: "BackupElement"
        }
      }
    }
  }
};

export const CloudAppliance: msRest.CompositeMapper = {
  serializedName: "CloudAppliance",
  type: {
    name: "Composite",
    className: "CloudAppliance",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      vnetName: {
        serializedName: "vnetName",
        type: {
          name: "String"
        }
      },
      vnetRegion: {
        required: true,
        serializedName: "vnetRegion",
        type: {
          name: "String"
        }
      },
      isVnetDnsConfigured: {
        serializedName: "isVnetDnsConfigured",
        type: {
          name: "Boolean"
        }
      },
      isVnetExpressConfigured: {
        serializedName: "isVnetExpressConfigured",
        type: {
          name: "Boolean"
        }
      },
      subnetName: {
        serializedName: "subnetName",
        type: {
          name: "String"
        }
      },
      storageAccountName: {
        serializedName: "storageAccountName",
        type: {
          name: "String"
        }
      },
      storageAccountType: {
        serializedName: "storageAccountType",
        type: {
          name: "String"
        }
      },
      vmType: {
        serializedName: "vmType",
        type: {
          name: "String"
        }
      },
      vmImageName: {
        serializedName: "vmImageName",
        type: {
          name: "String"
        }
      },
      modelNumber: {
        serializedName: "modelNumber",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VmImage: msRest.CompositeMapper = {
  serializedName: "VmImage",
  type: {
    name: "Composite",
    className: "VmImage",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      version: {
        required: true,
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      offer: {
        required: true,
        serializedName: "offer",
        type: {
          name: "String"
        }
      },
      publisher: {
        required: true,
        serializedName: "publisher",
        type: {
          name: "String"
        }
      },
      sku: {
        required: true,
        serializedName: "sku",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CloudApplianceConfiguration: msRest.CompositeMapper = {
  serializedName: "CloudApplianceConfiguration",
  type: {
    name: "Composite",
    className: "CloudApplianceConfiguration",
    modelProperties: {
      ...BaseModel.type.modelProperties,
      modelNumber: {
        required: true,
        serializedName: "properties.modelNumber",
        type: {
          name: "String"
        }
      },
      cloudPlatform: {
        required: true,
        serializedName: "properties.cloudPlatform",
        type: {
          name: "String"
        }
      },
      acsConfiguration: {
        required: true,
        serializedName: "properties.acsConfiguration",
        type: {
          name: "Composite",
          className: "AcsConfiguration"
        }
      },
      supportedStorageAccountTypes: {
        required: true,
        serializedName: "properties.supportedStorageAccountTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      supportedRegions: {
        required: true,
        serializedName: "properties.supportedRegions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      supportedVmTypes: {
        required: true,
        serializedName: "properties.supportedVmTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      supportedVmImages: {
        required: true,
        serializedName: "properties.supportedVmImages",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VmImage"
            }
          }
        }
      }
    }
  }
};

export const CloudApplianceSettings: msRest.CompositeMapper = {
  serializedName: "CloudApplianceSettings",
  type: {
    name: "Composite",
    className: "CloudApplianceSettings",
    modelProperties: {
      serviceDataEncryptionKey: {
        serializedName: "serviceDataEncryptionKey",
        type: {
          name: "Composite",
          className: "AsymmetricEncryptedSecret"
        }
      },
      channelIntegrityKey: {
        serializedName: "channelIntegrityKey",
        type: {
          name: "Composite",
          className: "AsymmetricEncryptedSecret"
        }
      }
    }
  }
};

export const SecondaryDNSSettings: msRest.CompositeMapper = {
  serializedName: "SecondaryDNSSettings",
  type: {
    name: "Composite",
    className: "SecondaryDNSSettings",
    modelProperties: {
      secondaryDnsServers: {
        serializedName: "secondaryDnsServers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const NetworkInterfaceData0Settings: msRest.CompositeMapper = {
  serializedName: "NetworkInterfaceData0Settings",
  type: {
    name: "Composite",
    className: "NetworkInterfaceData0Settings",
    modelProperties: {
      controllerZeroIp: {
        serializedName: "controllerZeroIp",
        type: {
          name: "String"
        }
      },
      controllerOneIp: {
        serializedName: "controllerOneIp",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ConfigureDeviceRequest: msRest.CompositeMapper = {
  serializedName: "ConfigureDeviceRequest",
  type: {
    name: "Composite",
    className: "ConfigureDeviceRequest",
    modelProperties: {
      ...BaseModel.type.modelProperties,
      friendlyName: {
        required: true,
        serializedName: "properties.friendlyName",
        type: {
          name: "String"
        }
      },
      currentDeviceName: {
        required: true,
        serializedName: "properties.currentDeviceName",
        type: {
          name: "String"
        }
      },
      timeZone: {
        required: true,
        serializedName: "properties.timeZone",
        type: {
          name: "String"
        }
      },
      dnsSettings: {
        serializedName: "properties.dnsSettings",
        type: {
          name: "Composite",
          className: "SecondaryDNSSettings"
        }
      },
      networkInterfaceData0Settings: {
        serializedName: "properties.networkInterfaceData0Settings",
        type: {
          name: "Composite",
          className: "NetworkInterfaceData0Settings"
        }
      }
    }
  }
};

export const ControllerPowerStateChangeRequest: msRest.CompositeMapper = {
  serializedName: "ControllerPowerStateChangeRequest",
  type: {
    name: "Composite",
    className: "ControllerPowerStateChangeRequest",
    modelProperties: {
      ...BaseModel.type.modelProperties,
      action: {
        required: true,
        serializedName: "properties.action",
        type: {
          name: "Enum",
          allowedValues: [
            "Start",
            "Restart",
            "Shutdown"
          ]
        }
      },
      activeController: {
        required: true,
        serializedName: "properties.activeController",
        type: {
          name: "Enum",
          allowedValues: [
            "Unknown",
            "None",
            "Controller0",
            "Controller1"
          ]
        }
      },
      controller0State: {
        required: true,
        serializedName: "properties.controller0State",
        type: {
          name: "Enum",
          allowedValues: [
            "NotPresent",
            "PoweredOff",
            "Ok",
            "Recovering",
            "Warning",
            "Failure"
          ]
        }
      },
      controller1State: {
        required: true,
        serializedName: "properties.controller1State",
        type: {
          name: "Enum",
          allowedValues: [
            "NotPresent",
            "PoweredOff",
            "Ok",
            "Recovering",
            "Warning",
            "Failure"
          ]
        }
      }
    }
  }
};

export const DataStatistics: msRest.CompositeMapper = {
  serializedName: "DataStatistics",
  type: {
    name: "Composite",
    className: "DataStatistics",
    modelProperties: {
      totalData: {
        serializedName: "totalData",
        type: {
          name: "Number"
        }
      },
      processedData: {
        serializedName: "processedData",
        type: {
          name: "Number"
        }
      },
      cloudData: {
        serializedName: "cloudData",
        type: {
          name: "Number"
        }
      },
      throughput: {
        serializedName: "throughput",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const DeviceDetails: msRest.CompositeMapper = {
  serializedName: "DeviceDetails",
  type: {
    name: "Composite",
    className: "DeviceDetails",
    modelProperties: {
      endpointCount: {
        serializedName: "endpointCount",
        type: {
          name: "Number"
        }
      },
      volumeContainerCount: {
        serializedName: "volumeContainerCount",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const DeviceRolloverDetails: msRest.CompositeMapper = {
  serializedName: "DeviceRolloverDetails",
  type: {
    name: "Composite",
    className: "DeviceRolloverDetails",
    modelProperties: {
      authorizationEligibility: {
        serializedName: "authorizationEligibility",
        type: {
          name: "Enum",
          allowedValues: [
            "InEligible",
            "Eligible"
          ]
        }
      },
      authorizationStatus: {
        serializedName: "authorizationStatus",
        type: {
          name: "Enum",
          allowedValues: [
            "Disabled",
            "Enabled"
          ]
        }
      },
      inEligibilityReason: {
        serializedName: "inEligibilityReason",
        type: {
          name: "Enum",
          allowedValues: [
            "DeviceNotOnline",
            "NotSupportedAppliance",
            "RolloverPending"
          ]
        }
      }
    }
  }
};

export const Device: msRest.CompositeMapper = {
  serializedName: "Device",
  type: {
    name: "Composite",
    className: "Device",
    modelProperties: {
      ...BaseModel.type.modelProperties,
      friendlyName: {
        required: true,
        serializedName: "properties.friendlyName",
        type: {
          name: "String"
        }
      },
      activationTime: {
        required: true,
        serializedName: "properties.activationTime",
        type: {
          name: "DateTime"
        }
      },
      culture: {
        required: true,
        serializedName: "properties.culture",
        type: {
          name: "String"
        }
      },
      deviceDescription: {
        required: true,
        serializedName: "properties.deviceDescription",
        type: {
          name: "String"
        }
      },
      deviceSoftwareVersion: {
        required: true,
        serializedName: "properties.deviceSoftwareVersion",
        type: {
          name: "String"
        }
      },
      friendlySoftwareName: {
        serializedName: "properties.friendlySoftwareName",
        type: {
          name: "String"
        }
      },
      deviceConfigurationStatus: {
        required: true,
        serializedName: "properties.deviceConfigurationStatus",
        type: {
          name: "Enum",
          allowedValues: [
            "Complete",
            "Pending"
          ]
        }
      },
      targetIqn: {
        required: true,
        serializedName: "properties.targetIqn",
        type: {
          name: "String"
        }
      },
      modelDescription: {
        required: true,
        serializedName: "properties.modelDescription",
        type: {
          name: "String"
        }
      },
      status: {
        required: true,
        serializedName: "properties.status",
        type: {
          name: "Enum",
          allowedValues: [
            "Unknown",
            "Online",
            "Offline",
            "Deactivated",
            "RequiresAttention",
            "MaintenanceMode",
            "Creating",
            "Provisioning",
            "Deactivating",
            "Deleted",
            "ReadyToSetup"
          ]
        }
      },
      serialNumber: {
        required: true,
        serializedName: "properties.serialNumber",
        type: {
          name: "String"
        }
      },
      deviceType: {
        required: true,
        serializedName: "properties.deviceType",
        type: {
          name: "Enum",
          allowedValues: [
            "Invalid",
            "Series8000VirtualAppliance",
            "Series8000PhysicalAppliance"
          ]
        }
      },
      activeController: {
        required: true,
        serializedName: "properties.activeController",
        type: {
          name: "Enum",
          allowedValues: [
            "Unknown",
            "None",
            "Controller0",
            "Controller1"
          ]
        }
      },
      friendlySoftwareVersion: {
        required: true,
        serializedName: "properties.friendlySoftwareVersion",
        type: {
          name: "String"
        }
      },
      availableLocalStorageInBytes: {
        serializedName: "properties.availableLocalStorageInBytes",
        type: {
          name: "Number"
        }
      },
      availableTieredStorageInBytes: {
        serializedName: "properties.availableTieredStorageInBytes",
        type: {
          name: "Number"
        }
      },
      provisionedTieredStorageInBytes: {
        serializedName: "properties.provisionedTieredStorageInBytes",
        type: {
          name: "Number"
        }
      },
      provisionedLocalStorageInBytes: {
        serializedName: "properties.provisionedLocalStorageInBytes",
        type: {
          name: "Number"
        }
      },
      provisionedVolumeSizeInBytes: {
        serializedName: "properties.provisionedVolumeSizeInBytes",
        type: {
          name: "Number"
        }
      },
      usingStorageInBytes: {
        serializedName: "properties.usingStorageInBytes",
        type: {
          name: "Number"
        }
      },
      totalTieredStorageInBytes: {
        serializedName: "properties.totalTieredStorageInBytes",
        type: {
          name: "Number"
        }
      },
      agentGroupVersion: {
        serializedName: "properties.agentGroupVersion",
        type: {
          name: "Number"
        }
      },
      networkInterfaceCardCount: {
        serializedName: "properties.networkInterfaceCardCount",
        type: {
          name: "Number"
        }
      },
      deviceLocation: {
        serializedName: "properties.deviceLocation",
        type: {
          name: "String"
        }
      },
      virtualMachineApiType: {
        readOnly: true,
        serializedName: "properties.virtualMachineApiType",
        type: {
          name: "Enum",
          allowedValues: [
            "Classic",
            "Arm"
          ]
        }
      },
      details: {
        serializedName: "properties.details",
        type: {
          name: "Composite",
          className: "DeviceDetails"
        }
      },
      rolloverDetails: {
        serializedName: "properties.rolloverDetails",
        type: {
          name: "Composite",
          className: "DeviceRolloverDetails"
        }
      }
    }
  }
};

export const DevicePatch: msRest.CompositeMapper = {
  serializedName: "DevicePatch",
  type: {
    name: "Composite",
    className: "DevicePatch",
    modelProperties: {
      deviceDescription: {
        serializedName: "properties.deviceDescription",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DimensionFilter: msRest.CompositeMapper = {
  serializedName: "DimensionFilter",
  type: {
    name: "Composite",
    className: "DimensionFilter",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      values: {
        serializedName: "values",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DNSSettings: msRest.CompositeMapper = {
  serializedName: "DNSSettings",
  type: {
    name: "Composite",
    className: "DNSSettings",
    modelProperties: {
      primaryDnsServer: {
        serializedName: "primaryDnsServer",
        type: {
          name: "String"
        }
      },
      primaryIpv6DnsServer: {
        serializedName: "primaryIpv6DnsServer",
        type: {
          name: "String"
        }
      },
      secondaryDnsServers: {
        serializedName: "secondaryDnsServers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      secondaryIpv6DnsServers: {
        serializedName: "secondaryIpv6DnsServers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const EncryptionSettings: msRest.CompositeMapper = {
  serializedName: "EncryptionSettings",
  type: {
    name: "Composite",
    className: "EncryptionSettings",
    modelProperties: {
      ...BaseModel.type.modelProperties,
      encryptionStatus: {
        required: true,
        serializedName: "properties.encryptionStatus",
        type: {
          name: "Enum",
          allowedValues: [
            "Enabled",
            "Disabled"
          ]
        }
      },
      keyRolloverStatus: {
        required: true,
        serializedName: "properties.keyRolloverStatus",
        type: {
          name: "Enum",
          allowedValues: [
            "Required",
            "NotRequired"
          ]
        }
      }
    }
  }
};

export const FailoverRequest: msRest.CompositeMapper = {
  serializedName: "FailoverRequest",
  type: {
    name: "Composite",
    className: "FailoverRequest",
    modelProperties: {
      targetDeviceId: {
        serializedName: "targetDeviceId",
        type: {
          name: "String"
        }
      },
      volumeContainers: {
        serializedName: "volumeContainers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const VolumeFailoverMetadata: msRest.CompositeMapper = {
  serializedName: "VolumeFailoverMetadata",
  type: {
    name: "Composite",
    className: "VolumeFailoverMetadata",
    modelProperties: {
      volumeId: {
        serializedName: "volumeId",
        type: {
          name: "String"
        }
      },
      volumeType: {
        serializedName: "volumeType",
        type: {
          name: "Enum",
          allowedValues: [
            "Tiered",
            "Archival",
            "LocallyPinned"
          ]
        }
      },
      sizeInBytes: {
        serializedName: "sizeInBytes",
        type: {
          name: "Number"
        }
      },
      backupCreatedDate: {
        serializedName: "backupCreatedDate",
        type: {
          name: "DateTime"
        }
      },
      backupElementId: {
        serializedName: "backupElementId",
        type: {
          name: "String"
        }
      },
      backupId: {
        serializedName: "backupId",
        type: {
          name: "String"
        }
      },
      backupPolicyId: {
        serializedName: "backupPolicyId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VolumeContainerFailoverMetadata: msRest.CompositeMapper = {
  serializedName: "VolumeContainerFailoverMetadata",
  type: {
    name: "Composite",
    className: "VolumeContainerFailoverMetadata",
    modelProperties: {
      volumeContainerId: {
        serializedName: "volumeContainerId",
        type: {
          name: "String"
        }
      },
      volumes: {
        serializedName: "volumes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VolumeFailoverMetadata"
            }
          }
        }
      }
    }
  }
};

export const FailoverSetEligibilityResult: msRest.CompositeMapper = {
  serializedName: "FailoverSetEligibilityResult",
  type: {
    name: "Composite",
    className: "FailoverSetEligibilityResult",
    modelProperties: {
      isEligibleForFailover: {
        serializedName: "isEligibleForFailover",
        type: {
          name: "Boolean"
        }
      },
      errorMessage: {
        serializedName: "errorMessage",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FailoverSet: msRest.CompositeMapper = {
  serializedName: "FailoverSet",
  type: {
    name: "Composite",
    className: "FailoverSet",
    modelProperties: {
      volumeContainers: {
        serializedName: "volumeContainers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VolumeContainerFailoverMetadata"
            }
          }
        }
      },
      eligibilityResult: {
        serializedName: "eligibilityResult",
        type: {
          name: "Composite",
          className: "FailoverSetEligibilityResult"
        }
      }
    }
  }
};

export const TargetEligibilityErrorMessage: msRest.CompositeMapper = {
  serializedName: "TargetEligibilityErrorMessage",
  type: {
    name: "Composite",
    className: "TargetEligibilityErrorMessage",
    modelProperties: {
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      resolution: {
        serializedName: "resolution",
        type: {
          name: "String"
        }
      },
      resultCode: {
        serializedName: "resultCode",
        type: {
          name: "Enum",
          allowedValues: [
            "TargetAndSourceCannotBeSameError",
            "TargetIsNotOnlineError",
            "TargetSourceIncompatibleVersionError",
            "LocalToTieredVolumesConversionWarning",
            "TargetInsufficientCapacityError",
            "TargetInsufficientLocalVolumeMemoryError",
            "TargetInsufficientTieredVolumeMemoryError"
          ]
        }
      }
    }
  }
};

export const TargetEligibilityResult: msRest.CompositeMapper = {
  serializedName: "TargetEligibilityResult",
  type: {
    name: "Composite",
    className: "TargetEligibilityResult",
    modelProperties: {
      eligibilityStatus: {
        serializedName: "eligibilityStatus",
        type: {
          name: "Enum",
          allowedValues: [
            "NotEligible",
            "Eligible"
          ]
        }
      },
      messages: {
        serializedName: "messages",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TargetEligibilityErrorMessage"
            }
          }
        }
      }
    }
  }
};

export const FailoverTarget: msRest.CompositeMapper = {
  serializedName: "FailoverTarget",
  type: {
    name: "Composite",
    className: "FailoverTarget",
    modelProperties: {
      deviceId: {
        serializedName: "deviceId",
        type: {
          name: "String"
        }
      },
      deviceStatus: {
        serializedName: "deviceStatus",
        type: {
          name: "Enum",
          allowedValues: [
            "Unknown",
            "Online",
            "Offline",
            "Deactivated",
            "RequiresAttention",
            "MaintenanceMode",
            "Creating",
            "Provisioning",
            "Deactivating",
            "Deleted",
            "ReadyToSetup"
          ]
        }
      },
      modelDescription: {
        serializedName: "modelDescription",
        type: {
          name: "String"
        }
      },
      deviceSoftwareVersion: {
        serializedName: "deviceSoftwareVersion",
        type: {
          name: "String"
        }
      },
      dataContainersCount: {
        serializedName: "dataContainersCount",
        type: {
          name: "Number"
        }
      },
      volumesCount: {
        serializedName: "volumesCount",
        type: {
          name: "Number"
        }
      },
      availableLocalStorageInBytes: {
        serializedName: "availableLocalStorageInBytes",
        type: {
          name: "Number"
        }
      },
      availableTieredStorageInBytes: {
        serializedName: "availableTieredStorageInBytes",
        type: {
          name: "Number"
        }
      },
      deviceLocation: {
        serializedName: "deviceLocation",
        type: {
          name: "String"
        }
      },
      friendlyDeviceSoftwareVersion: {
        serializedName: "friendlyDeviceSoftwareVersion",
        type: {
          name: "String"
        }
      },
      eligibilityResult: {
        serializedName: "eligibilityResult",
        type: {
          name: "Composite",
          className: "TargetEligibilityResult"
        }
      }
    }
  }
};

export const Feature: msRest.CompositeMapper = {
  serializedName: "Feature",
  type: {
    name: "Composite",
    className: "Feature",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      status: {
        required: true,
        serializedName: "status",
        type: {
          name: "Enum",
          allowedValues: [
            "NotAvailable",
            "UnsupportedDeviceVersion",
            "Supported"
          ]
        }
      }
    }
  }
};

export const FeatureFilter: msRest.CompositeMapper = {
  serializedName: "FeatureFilter",
  type: {
    name: "Composite",
    className: "FeatureFilter",
    modelProperties: {
      deviceId: {
        serializedName: "deviceId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const HardwareComponent: msRest.CompositeMapper = {
  serializedName: "HardwareComponent",
  type: {
    name: "Composite",
    className: "HardwareComponent",
    modelProperties: {
      componentId: {
        required: true,
        serializedName: "componentId",
        type: {
          name: "String"
        }
      },
      displayName: {
        required: true,
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      status: {
        required: true,
        serializedName: "status",
        type: {
          name: "Enum",
          allowedValues: [
            "Unknown",
            "NotPresent",
            "PoweredOff",
            "Ok",
            "Recovering",
            "Warning",
            "Failure"
          ]
        }
      },
      statusDisplayName: {
        required: true,
        serializedName: "statusDisplayName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const HardwareComponentGroup: msRest.CompositeMapper = {
  serializedName: "HardwareComponentGroup",
  type: {
    name: "Composite",
    className: "HardwareComponentGroup",
    modelProperties: {
      ...BaseModel.type.modelProperties,
      displayName: {
        required: true,
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      lastUpdatedTime: {
        required: true,
        serializedName: "properties.lastUpdatedTime",
        type: {
          name: "DateTime"
        }
      },
      components: {
        required: true,
        serializedName: "properties.components",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "HardwareComponent"
            }
          }
        }
      }
    }
  }
};

export const JobErrorItem: msRest.CompositeMapper = {
  serializedName: "JobErrorItem",
  type: {
    name: "Composite",
    className: "JobErrorItem",
    modelProperties: {
      recommendations: {
        serializedName: "recommendations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      code: {
        required: true,
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        required: true,
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const JobErrorDetails: msRest.CompositeMapper = {
  serializedName: "JobErrorDetails",
  type: {
    name: "Composite",
    className: "JobErrorDetails",
    modelProperties: {
      errorDetails: {
        serializedName: "errorDetails",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "JobErrorItem"
            }
          }
        }
      },
      code: {
        required: true,
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        required: true,
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const JobStage: msRest.CompositeMapper = {
  serializedName: "JobStage",
  type: {
    name: "Composite",
    className: "JobStage",
    modelProperties: {
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      stageStatus: {
        required: true,
        serializedName: "stageStatus",
        type: {
          name: "Enum",
          allowedValues: [
            "Running",
            "Succeeded",
            "Failed",
            "Canceled"
          ]
        }
      },
      detail: {
        serializedName: "detail",
        type: {
          name: "String"
        }
      },
      errorCode: {
        serializedName: "errorCode",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Job: msRest.CompositeMapper = {
  serializedName: "Job",
  type: {
    name: "Composite",
    className: "Job",
    modelProperties: {
      ...BaseModel.type.modelProperties,
      status: {
        required: true,
        serializedName: "status",
        type: {
          name: "Enum",
          allowedValues: [
            "Running",
            "Succeeded",
            "Failed",
            "Canceled"
          ]
        }
      },
      startTime: {
        serializedName: "startTime",
        type: {
          name: "DateTime"
        }
      },
      endTime: {
        serializedName: "endTime",
        type: {
          name: "DateTime"
        }
      },
      percentComplete: {
        required: true,
        serializedName: "percentComplete",
        type: {
          name: "Number"
        }
      },
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "JobErrorDetails"
        }
      },
      jobType: {
        required: true,
        serializedName: "properties.jobType",
        type: {
          name: "Enum",
          allowedValues: [
            "ScheduledBackup",
            "ManualBackup",
            "RestoreBackup",
            "CloneVolume",
            "FailoverVolumeContainers",
            "CreateLocallyPinnedVolume",
            "ModifyVolume",
            "InstallUpdates",
            "SupportPackageLogs",
            "CreateCloudAppliance"
          ]
        }
      },
      dataStats: {
        serializedName: "properties.dataStats",
        type: {
          name: "Composite",
          className: "DataStatistics"
        }
      },
      entityLabel: {
        serializedName: "properties.entityLabel",
        type: {
          name: "String"
        }
      },
      entityType: {
        serializedName: "properties.entityType",
        type: {
          name: "String"
        }
      },
      jobStages: {
        serializedName: "properties.jobStages",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "JobStage"
            }
          }
        }
      },
      deviceId: {
        serializedName: "properties.deviceId",
        type: {
          name: "String"
        }
      },
      isCancellable: {
        serializedName: "properties.isCancellable",
        type: {
          name: "Boolean"
        }
      },
      backupType: {
        serializedName: "properties.backupType",
        type: {
          name: "Enum",
          allowedValues: [
            "LocalSnapshot",
            "CloudSnapshot"
          ]
        }
      },
      sourceDeviceId: {
        serializedName: "properties.sourceDeviceId",
        type: {
          name: "String"
        }
      },
      backupPointInTime: {
        serializedName: "properties.backupPointInTime",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const JobFilter: msRest.CompositeMapper = {
  serializedName: "JobFilter",
  type: {
    name: "Composite",
    className: "JobFilter",
    modelProperties: {
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      jobType: {
        serializedName: "jobType",
        type: {
          name: "String"
        }
      },
      startTime: {
        serializedName: "startTime",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const Key: msRest.CompositeMapper = {
  serializedName: "Key",
  type: {
    name: "Composite",
    className: "Key",
    modelProperties: {
      activationKey: {
        required: true,
        serializedName: "activationKey",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ListFailoverTargetsRequest: msRest.CompositeMapper = {
  serializedName: "ListFailoverTargetsRequest",
  type: {
    name: "Composite",
    className: "ListFailoverTargetsRequest",
    modelProperties: {
      volumeContainers: {
        serializedName: "volumeContainers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ManagerIntrinsicSettings: msRest.CompositeMapper = {
  serializedName: "ManagerIntrinsicSettings",
  type: {
    name: "Composite",
    className: "ManagerIntrinsicSettings",
    modelProperties: {
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "Enum",
          allowedValues: [
            "GardaV1",
            "HelsinkiV1"
          ]
        }
      }
    }
  }
};

export const ManagerSku: msRest.CompositeMapper = {
  serializedName: "ManagerSku",
  type: {
    name: "Composite",
    className: "ManagerSku",
    modelProperties: {
      name: {
        required: true,
        isConstant: true,
        serializedName: "name",
        defaultValue: 'Standard',
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Resource: msRest.CompositeMapper = {
  serializedName: "Resource",
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      location: {
        required: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Manager: msRest.CompositeMapper = {
  serializedName: "Manager",
  type: {
    name: "Composite",
    className: "Manager",
    modelProperties: {
      ...Resource.type.modelProperties,
      cisIntrinsicSettings: {
        serializedName: "properties.cisIntrinsicSettings",
        type: {
          name: "Composite",
          className: "ManagerIntrinsicSettings"
        }
      },
      sku: {
        isConstant: true,
        serializedName: "properties.sku",
        defaultValue: {},
        type: {
          name: "Composite",
          className: "ManagerSku"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      etag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ManagerExtendedInfo: msRest.CompositeMapper = {
  serializedName: "ManagerExtendedInfo",
  type: {
    name: "Composite",
    className: "ManagerExtendedInfo",
    modelProperties: {
      ...BaseModel.type.modelProperties,
      version: {
        serializedName: "properties.version",
        type: {
          name: "String"
        }
      },
      integrityKey: {
        required: true,
        serializedName: "properties.integrityKey",
        type: {
          name: "String"
        }
      },
      encryptionKey: {
        serializedName: "properties.encryptionKey",
        type: {
          name: "String"
        }
      },
      encryptionKeyThumbprint: {
        serializedName: "properties.encryptionKeyThumbprint",
        type: {
          name: "String"
        }
      },
      portalCertificateThumbprint: {
        serializedName: "properties.portalCertificateThumbprint",
        type: {
          name: "String"
        }
      },
      algorithm: {
        required: true,
        serializedName: "properties.algorithm",
        type: {
          name: "String"
        }
      },
      etag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ManagerPatch: msRest.CompositeMapper = {
  serializedName: "ManagerPatch",
  type: {
    name: "Composite",
    className: "ManagerPatch",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const MetricAvailablity: msRest.CompositeMapper = {
  serializedName: "MetricAvailablity",
  type: {
    name: "Composite",
    className: "MetricAvailablity",
    modelProperties: {
      timeGrain: {
        serializedName: "timeGrain",
        type: {
          name: "String"
        }
      },
      retention: {
        serializedName: "retention",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MetricData: msRest.CompositeMapper = {
  serializedName: "MetricData",
  type: {
    name: "Composite",
    className: "MetricData",
    modelProperties: {
      timeStamp: {
        serializedName: "timeStamp",
        type: {
          name: "DateTime"
        }
      },
      sum: {
        serializedName: "sum",
        type: {
          name: "Number"
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      },
      average: {
        serializedName: "average",
        type: {
          name: "Number"
        }
      },
      minimum: {
        serializedName: "minimum",
        type: {
          name: "Number"
        }
      },
      maximum: {
        serializedName: "maximum",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const MetricName: msRest.CompositeMapper = {
  serializedName: "MetricName",
  type: {
    name: "Composite",
    className: "MetricName",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "String"
        }
      },
      localizedValue: {
        serializedName: "localizedValue",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MetricDimension: msRest.CompositeMapper = {
  serializedName: "MetricDimension",
  type: {
    name: "Composite",
    className: "MetricDimension",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MetricDefinition: msRest.CompositeMapper = {
  serializedName: "MetricDefinition",
  type: {
    name: "Composite",
    className: "MetricDefinition",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "Composite",
          className: "MetricName"
        }
      },
      unit: {
        serializedName: "unit",
        type: {
          name: "Enum",
          allowedValues: [
            "Bytes",
            "BytesPerSecond",
            "Count",
            "CountPerSecond",
            "Percent",
            "Seconds"
          ]
        }
      },
      primaryAggregationType: {
        serializedName: "primaryAggregationType",
        type: {
          name: "Enum",
          allowedValues: [
            "Average",
            "Last",
            "Maximum",
            "Minimum",
            "None",
            "Total"
          ]
        }
      },
      resourceId: {
        serializedName: "resourceId",
        type: {
          name: "String"
        }
      },
      metricAvailabilities: {
        serializedName: "metricAvailabilities",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MetricAvailablity"
            }
          }
        }
      },
      dimensions: {
        serializedName: "dimensions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MetricDimension"
            }
          }
        }
      },
      category: {
        serializedName: "category",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MetricNameFilter: msRest.CompositeMapper = {
  serializedName: "MetricNameFilter",
  type: {
    name: "Composite",
    className: "MetricNameFilter",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MetricFilter: msRest.CompositeMapper = {
  serializedName: "MetricFilter",
  type: {
    name: "Composite",
    className: "MetricFilter",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "Composite",
          className: "MetricNameFilter"
        }
      },
      startTime: {
        serializedName: "startTime",
        type: {
          name: "DateTime"
        }
      },
      endTime: {
        serializedName: "endTime",
        type: {
          name: "DateTime"
        }
      },
      timeGrain: {
        serializedName: "timeGrain",
        type: {
          name: "String"
        }
      },
      category: {
        required: true,
        serializedName: "category",
        type: {
          name: "String"
        }
      },
      dimensions: {
        serializedName: "dimensions",
        type: {
          name: "Composite",
          className: "DimensionFilter"
        }
      }
    }
  }
};

export const Metrics: msRest.CompositeMapper = {
  serializedName: "Metrics",
  type: {
    name: "Composite",
    className: "Metrics",
    modelProperties: {
      resourceId: {
        serializedName: "resourceId",
        type: {
          name: "String"
        }
      },
      startTime: {
        serializedName: "startTime",
        type: {
          name: "DateTime"
        }
      },
      endTime: {
        serializedName: "endTime",
        type: {
          name: "DateTime"
        }
      },
      timeGrain: {
        serializedName: "timeGrain",
        type: {
          name: "String"
        }
      },
      primaryAggregation: {
        serializedName: "primaryAggregation",
        type: {
          name: "Enum",
          allowedValues: [
            "Average",
            "Last",
            "Maximum",
            "Minimum",
            "None",
            "Total"
          ]
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "Composite",
          className: "MetricName"
        }
      },
      dimensions: {
        serializedName: "dimensions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MetricDimension"
            }
          }
        }
      },
      unit: {
        serializedName: "unit",
        type: {
          name: "Enum",
          allowedValues: [
            "Bytes",
            "BytesPerSecond",
            "Count",
            "CountPerSecond",
            "Percent",
            "Seconds"
          ]
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      values: {
        serializedName: "values",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MetricData"
            }
          }
        }
      }
    }
  }
};

export const NicIPv4: msRest.CompositeMapper = {
  serializedName: "NicIPv4",
  type: {
    name: "Composite",
    className: "NicIPv4",
    modelProperties: {
      ipv4Address: {
        serializedName: "ipv4Address",
        type: {
          name: "String"
        }
      },
      ipv4Netmask: {
        serializedName: "ipv4Netmask",
        type: {
          name: "String"
        }
      },
      ipv4Gateway: {
        serializedName: "ipv4Gateway",
        type: {
          name: "String"
        }
      },
      controller0Ipv4Address: {
        serializedName: "controller0Ipv4Address",
        type: {
          name: "String"
        }
      },
      controller1Ipv4Address: {
        serializedName: "controller1Ipv4Address",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NicIPv6: msRest.CompositeMapper = {
  serializedName: "NicIPv6",
  type: {
    name: "Composite",
    className: "NicIPv6",
    modelProperties: {
      ipv6Address: {
        serializedName: "ipv6Address",
        type: {
          name: "String"
        }
      },
      ipv6Prefix: {
        serializedName: "ipv6Prefix",
        type: {
          name: "String"
        }
      },
      ipv6Gateway: {
        serializedName: "ipv6Gateway",
        type: {
          name: "String"
        }
      },
      controller0Ipv6Address: {
        serializedName: "controller0Ipv6Address",
        type: {
          name: "String"
        }
      },
      controller1Ipv6Address: {
        serializedName: "controller1Ipv6Address",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NetworkAdapters: msRest.CompositeMapper = {
  serializedName: "NetworkAdapters",
  type: {
    name: "Composite",
    className: "NetworkAdapters",
    modelProperties: {
      interfaceId: {
        required: true,
        serializedName: "interfaceId",
        type: {
          name: "Enum",
          allowedValues: [
            "Invalid",
            "Data0",
            "Data1",
            "Data2",
            "Data3",
            "Data4",
            "Data5"
          ]
        }
      },
      netInterfaceStatus: {
        required: true,
        serializedName: "netInterfaceStatus",
        type: {
          name: "Enum",
          allowedValues: [
            "Enabled",
            "Disabled"
          ]
        }
      },
      isDefault: {
        serializedName: "isDefault",
        type: {
          name: "Boolean"
        }
      },
      iscsiAndCloudStatus: {
        required: true,
        serializedName: "iscsiAndCloudStatus",
        type: {
          name: "Enum",
          allowedValues: [
            "Disabled",
            "IscsiEnabled",
            "CloudEnabled",
            "IscsiAndCloudEnabled"
          ]
        }
      },
      speed: {
        serializedName: "speed",
        type: {
          name: "Number"
        }
      },
      mode: {
        required: true,
        serializedName: "mode",
        type: {
          name: "Enum",
          allowedValues: [
            "Invalid",
            "IPV4",
            "IPV6",
            "BOTH"
          ]
        }
      },
      nicIpv4Settings: {
        serializedName: "nicIpv4Settings",
        type: {
          name: "Composite",
          className: "NicIPv4"
        }
      },
      nicIpv6Settings: {
        serializedName: "nicIpv6Settings",
        type: {
          name: "Composite",
          className: "NicIPv6"
        }
      }
    }
  }
};

export const NetworkAdapterList: msRest.CompositeMapper = {
  serializedName: "NetworkAdapterList",
  type: {
    name: "Composite",
    className: "NetworkAdapterList",
    modelProperties: {
      value: {
        required: true,
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "NetworkAdapters"
            }
          }
        }
      }
    }
  }
};

export const WebproxySettings: msRest.CompositeMapper = {
  serializedName: "WebproxySettings",
  type: {
    name: "Composite",
    className: "WebproxySettings",
    modelProperties: {
      connectionUri: {
        serializedName: "connectionUri",
        type: {
          name: "String"
        }
      },
      authentication: {
        required: true,
        serializedName: "authentication",
        type: {
          name: "Enum",
          allowedValues: [
            "Invalid",
            "None",
            "Basic",
            "NTLM"
          ]
        }
      },
      username: {
        required: true,
        serializedName: "username",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NetworkSettings: msRest.CompositeMapper = {
  serializedName: "NetworkSettings",
  type: {
    name: "Composite",
    className: "NetworkSettings",
    modelProperties: {
      ...BaseModel.type.modelProperties,
      dnsSettings: {
        required: true,
        serializedName: "properties.dnsSettings",
        type: {
          name: "Composite",
          className: "DNSSettings"
        }
      },
      networkAdapters: {
        required: true,
        serializedName: "properties.networkAdapters",
        type: {
          name: "Composite",
          className: "NetworkAdapterList"
        }
      },
      webproxySettings: {
        required: true,
        serializedName: "properties.webproxySettings",
        type: {
          name: "Composite",
          className: "WebproxySettings"
        }
      }
    }
  }
};

export const NetworkSettingsPatch: msRest.CompositeMapper = {
  serializedName: "NetworkSettingsPatch",
  type: {
    name: "Composite",
    className: "NetworkSettingsPatch",
    modelProperties: {
      dnsSettings: {
        serializedName: "properties.dnsSettings",
        type: {
          name: "Composite",
          className: "DNSSettings"
        }
      },
      networkAdapters: {
        serializedName: "properties.networkAdapters",
        type: {
          name: "Composite",
          className: "NetworkAdapterList"
        }
      }
    }
  }
};

export const PublicKey: msRest.CompositeMapper = {
  serializedName: "PublicKey",
  type: {
    name: "Composite",
    className: "PublicKey",
    modelProperties: {
      key: {
        required: true,
        serializedName: "key",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RemoteManagementSettings: msRest.CompositeMapper = {
  serializedName: "RemoteManagementSettings",
  type: {
    name: "Composite",
    className: "RemoteManagementSettings",
    modelProperties: {
      remoteManagementMode: {
        required: true,
        serializedName: "remoteManagementMode",
        type: {
          name: "Enum",
          allowedValues: [
            "Unknown",
            "Disabled",
            "HttpsEnabled",
            "HttpsAndHttpEnabled"
          ]
        }
      },
      remoteManagementCertificate: {
        serializedName: "remoteManagementCertificate",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RemoteManagementSettingsPatch: msRest.CompositeMapper = {
  serializedName: "RemoteManagementSettingsPatch",
  type: {
    name: "Composite",
    className: "RemoteManagementSettingsPatch",
    modelProperties: {
      remoteManagementMode: {
        required: true,
        serializedName: "remoteManagementMode",
        type: {
          name: "Enum",
          allowedValues: [
            "Unknown",
            "Disabled",
            "HttpsEnabled",
            "HttpsAndHttpEnabled"
          ]
        }
      }
    }
  }
};

export const SecuritySettings: msRest.CompositeMapper = {
  serializedName: "SecuritySettings",
  type: {
    name: "Composite",
    className: "SecuritySettings",
    modelProperties: {
      ...BaseModel.type.modelProperties,
      remoteManagementSettings: {
        required: true,
        serializedName: "properties.remoteManagementSettings",
        type: {
          name: "Composite",
          className: "RemoteManagementSettings"
        }
      },
      chapSettings: {
        required: true,
        serializedName: "properties.chapSettings",
        type: {
          name: "Composite",
          className: "ChapSettings"
        }
      }
    }
  }
};

export const SecuritySettingsPatch: msRest.CompositeMapper = {
  serializedName: "SecuritySettingsPatch",
  type: {
    name: "Composite",
    className: "SecuritySettingsPatch",
    modelProperties: {
      remoteManagementSettings: {
        serializedName: "properties.remoteManagementSettings",
        type: {
          name: "Composite",
          className: "RemoteManagementSettingsPatch"
        }
      },
      deviceAdminPassword: {
        serializedName: "properties.deviceAdminPassword",
        type: {
          name: "Composite",
          className: "AsymmetricEncryptedSecret"
        }
      },
      snapshotPassword: {
        serializedName: "properties.snapshotPassword",
        type: {
          name: "Composite",
          className: "AsymmetricEncryptedSecret"
        }
      },
      chapSettings: {
        serializedName: "properties.chapSettings",
        type: {
          name: "Composite",
          className: "ChapSettings"
        }
      },
      cloudApplianceSettings: {
        serializedName: "properties.cloudApplianceSettings",
        type: {
          name: "Composite",
          className: "CloudApplianceSettings"
        }
      }
    }
  }
};

export const SendTestAlertEmailRequest: msRest.CompositeMapper = {
  serializedName: "SendTestAlertEmailRequest",
  type: {
    name: "Composite",
    className: "SendTestAlertEmailRequest",
    modelProperties: {
      emailList: {
        required: true,
        serializedName: "emailList",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const StorageAccountCredential: msRest.CompositeMapper = {
  serializedName: "StorageAccountCredential",
  type: {
    name: "Composite",
    className: "StorageAccountCredential",
    modelProperties: {
      ...BaseModel.type.modelProperties,
      endPoint: {
        required: true,
        serializedName: "properties.endPoint",
        type: {
          name: "String"
        }
      },
      sslStatus: {
        required: true,
        serializedName: "properties.sslStatus",
        type: {
          name: "Enum",
          allowedValues: [
            "Enabled",
            "Disabled"
          ]
        }
      },
      accessKey: {
        serializedName: "properties.accessKey",
        type: {
          name: "Composite",
          className: "AsymmetricEncryptedSecret"
        }
      },
      volumesCount: {
        readOnly: true,
        serializedName: "properties.volumesCount",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const SymmetricEncryptedSecret: msRest.CompositeMapper = {
  serializedName: "SymmetricEncryptedSecret",
  type: {
    name: "Composite",
    className: "SymmetricEncryptedSecret",
    modelProperties: {
      value: {
        required: true,
        serializedName: "value",
        type: {
          name: "String"
        }
      },
      valueCertificateThumbprint: {
        serializedName: "valueCertificateThumbprint",
        type: {
          name: "String"
        }
      },
      encryptionAlgorithm: {
        required: true,
        serializedName: "encryptionAlgorithm",
        type: {
          name: "Enum",
          allowedValues: [
            "None",
            "AES256",
            "RSAES_PKCS1_v_1_5"
          ]
        }
      }
    }
  }
};

export const TimeSettings: msRest.CompositeMapper = {
  serializedName: "TimeSettings",
  type: {
    name: "Composite",
    className: "TimeSettings",
    modelProperties: {
      ...BaseModel.type.modelProperties,
      timeZone: {
        required: true,
        serializedName: "properties.timeZone",
        type: {
          name: "String"
        }
      },
      primaryTimeServer: {
        serializedName: "properties.primaryTimeServer",
        type: {
          name: "String"
        }
      },
      secondaryTimeServer: {
        serializedName: "properties.secondaryTimeServer",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Updates: msRest.CompositeMapper = {
  serializedName: "Updates",
  type: {
    name: "Composite",
    className: "Updates",
    modelProperties: {
      ...BaseModel.type.modelProperties,
      regularUpdatesAvailable: {
        serializedName: "properties.regularUpdatesAvailable",
        type: {
          name: "Boolean"
        }
      },
      maintenanceModeUpdatesAvailable: {
        serializedName: "properties.maintenanceModeUpdatesAvailable",
        type: {
          name: "Boolean"
        }
      },
      isUpdateInProgress: {
        serializedName: "properties.isUpdateInProgress",
        type: {
          name: "Boolean"
        }
      },
      lastUpdatedTime: {
        serializedName: "properties.lastUpdatedTime",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const Volume: msRest.CompositeMapper = {
  serializedName: "Volume",
  type: {
    name: "Composite",
    className: "Volume",
    modelProperties: {
      ...BaseModel.type.modelProperties,
      sizeInBytes: {
        required: true,
        serializedName: "properties.sizeInBytes",
        type: {
          name: "Number"
        }
      },
      volumeType: {
        required: true,
        serializedName: "properties.volumeType",
        type: {
          name: "Enum",
          allowedValues: [
            "Tiered",
            "Archival",
            "LocallyPinned"
          ]
        }
      },
      volumeContainerId: {
        readOnly: true,
        serializedName: "properties.volumeContainerId",
        type: {
          name: "String"
        }
      },
      accessControlRecordIds: {
        required: true,
        serializedName: "properties.accessControlRecordIds",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      volumeStatus: {
        required: true,
        serializedName: "properties.volumeStatus",
        type: {
          name: "Enum",
          allowedValues: [
            "Online",
            "Offline"
          ]
        }
      },
      operationStatus: {
        readOnly: true,
        serializedName: "properties.operationStatus",
        type: {
          name: "Enum",
          allowedValues: [
            "None",
            "Updating",
            "Deleting",
            "Restoring"
          ]
        }
      },
      backupStatus: {
        readOnly: true,
        serializedName: "properties.backupStatus",
        type: {
          name: "Enum",
          allowedValues: [
            "Enabled",
            "Disabled"
          ]
        }
      },
      monitoringStatus: {
        required: true,
        serializedName: "properties.monitoringStatus",
        type: {
          name: "Enum",
          allowedValues: [
            "Enabled",
            "Disabled"
          ]
        }
      },
      backupPolicyIds: {
        readOnly: true,
        serializedName: "properties.backupPolicyIds",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const VolumeContainer: msRest.CompositeMapper = {
  serializedName: "VolumeContainer",
  type: {
    name: "Composite",
    className: "VolumeContainer",
    modelProperties: {
      ...BaseModel.type.modelProperties,
      encryptionKey: {
        serializedName: "properties.encryptionKey",
        type: {
          name: "Composite",
          className: "AsymmetricEncryptedSecret"
        }
      },
      encryptionStatus: {
        readOnly: true,
        serializedName: "properties.encryptionStatus",
        type: {
          name: "Enum",
          allowedValues: [
            "Enabled",
            "Disabled"
          ]
        }
      },
      volumeCount: {
        readOnly: true,
        serializedName: "properties.volumeCount",
        type: {
          name: "Number"
        }
      },
      storageAccountCredentialId: {
        required: true,
        serializedName: "properties.storageAccountCredentialId",
        type: {
          name: "String"
        }
      },
      ownerShipStatus: {
        readOnly: true,
        serializedName: "properties.ownerShipStatus",
        type: {
          name: "Enum",
          allowedValues: [
            "Owned",
            "NotOwned"
          ]
        }
      },
      bandWidthRateInMbps: {
        serializedName: "properties.bandWidthRateInMbps",
        type: {
          name: "Number"
        }
      },
      bandwidthSettingId: {
        serializedName: "properties.bandwidthSettingId",
        type: {
          name: "String"
        }
      },
      totalCloudStorageUsageInBytes: {
        readOnly: true,
        serializedName: "properties.totalCloudStorageUsageInBytes",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const AvailableProviderOperationList: msRest.CompositeMapper = {
  serializedName: "AvailableProviderOperationList",
  type: {
    name: "Composite",
    className: "AvailableProviderOperationList",
    modelProperties: {
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AvailableProviderOperation"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ManagerList: msRest.CompositeMapper = {
  serializedName: "ManagerList",
  type: {
    name: "Composite",
    className: "ManagerList",
    modelProperties: {
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Manager"
            }
          }
        }
      }
    }
  }
};

export const FeatureList: msRest.CompositeMapper = {
  serializedName: "FeatureList",
  type: {
    name: "Composite",
    className: "FeatureList",
    modelProperties: {
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Feature"
            }
          }
        }
      }
    }
  }
};

export const MetricList: msRest.CompositeMapper = {
  serializedName: "MetricList",
  type: {
    name: "Composite",
    className: "MetricList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Metrics"
            }
          }
        }
      }
    }
  }
};

export const MetricDefinitionList: msRest.CompositeMapper = {
  serializedName: "MetricDefinitionList",
  type: {
    name: "Composite",
    className: "MetricDefinitionList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MetricDefinition"
            }
          }
        }
      }
    }
  }
};

export const AccessControlRecordList: msRest.CompositeMapper = {
  serializedName: "AccessControlRecordList",
  type: {
    name: "Composite",
    className: "AccessControlRecordList",
    modelProperties: {
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AccessControlRecord"
            }
          }
        }
      }
    }
  }
};

export const AlertList: msRest.CompositeMapper = {
  serializedName: "AlertList",
  type: {
    name: "Composite",
    className: "AlertList",
    modelProperties: {
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Alert"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BandwidthSettingList: msRest.CompositeMapper = {
  serializedName: "BandwidthSettingList",
  type: {
    name: "Composite",
    className: "BandwidthSettingList",
    modelProperties: {
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "BandwidthSetting"
            }
          }
        }
      }
    }
  }
};

export const CloudApplianceConfigurationList: msRest.CompositeMapper = {
  serializedName: "CloudApplianceConfigurationList",
  type: {
    name: "Composite",
    className: "CloudApplianceConfigurationList",
    modelProperties: {
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CloudApplianceConfiguration"
            }
          }
        }
      }
    }
  }
};

export const DeviceList: msRest.CompositeMapper = {
  serializedName: "DeviceList",
  type: {
    name: "Composite",
    className: "DeviceList",
    modelProperties: {
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Device"
            }
          }
        }
      }
    }
  }
};

export const FailoverSetsList: msRest.CompositeMapper = {
  serializedName: "FailoverSetsList",
  type: {
    name: "Composite",
    className: "FailoverSetsList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "FailoverSet"
            }
          }
        }
      }
    }
  }
};

export const FailoverTargetsList: msRest.CompositeMapper = {
  serializedName: "FailoverTargetsList",
  type: {
    name: "Composite",
    className: "FailoverTargetsList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "FailoverTarget"
            }
          }
        }
      }
    }
  }
};

export const BackupPolicyList: msRest.CompositeMapper = {
  serializedName: "BackupPolicyList",
  type: {
    name: "Composite",
    className: "BackupPolicyList",
    modelProperties: {
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "BackupPolicy"
            }
          }
        }
      }
    }
  }
};

export const BackupScheduleList: msRest.CompositeMapper = {
  serializedName: "BackupScheduleList",
  type: {
    name: "Composite",
    className: "BackupScheduleList",
    modelProperties: {
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "BackupSchedule"
            }
          }
        }
      }
    }
  }
};

export const BackupList: msRest.CompositeMapper = {
  serializedName: "BackupList",
  type: {
    name: "Composite",
    className: "BackupList",
    modelProperties: {
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Backup"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const HardwareComponentGroupList: msRest.CompositeMapper = {
  serializedName: "HardwareComponentGroupList",
  type: {
    name: "Composite",
    className: "HardwareComponentGroupList",
    modelProperties: {
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "HardwareComponentGroup"
            }
          }
        }
      }
    }
  }
};

export const JobList: msRest.CompositeMapper = {
  serializedName: "JobList",
  type: {
    name: "Composite",
    className: "JobList",
    modelProperties: {
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Job"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VolumeContainerList: msRest.CompositeMapper = {
  serializedName: "VolumeContainerList",
  type: {
    name: "Composite",
    className: "VolumeContainerList",
    modelProperties: {
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VolumeContainer"
            }
          }
        }
      }
    }
  }
};

export const VolumeList: msRest.CompositeMapper = {
  serializedName: "VolumeList",
  type: {
    name: "Composite",
    className: "VolumeList",
    modelProperties: {
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Volume"
            }
          }
        }
      }
    }
  }
};

export const StorageAccountCredentialList: msRest.CompositeMapper = {
  serializedName: "StorageAccountCredentialList",
  type: {
    name: "Composite",
    className: "StorageAccountCredentialList",
    modelProperties: {
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "StorageAccountCredential"
            }
          }
        }
      }
    }
  }
};
