!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?r(exports,require("ms-rest-azure-js"),require("ms-rest-js")):"function"==typeof define&&define.amd?define(["exports","ms-rest-azure-js","ms-rest-js"],r):r((e.Azure=e.Azure||{},e.Azure.ArmDatalakeStore={}),e.msRestAzure,e.msRest)}(this,function(e,r,t){"use strict";var a=function(e,r){return(a=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,r){e.__proto__=r}||function(e,r){for(var t in r)r.hasOwnProperty(t)&&(e[t]=r[t])})(e,r)};function s(e,r){function t(){this.constructor=e}a(e,r),e.prototype=null===r?Object.create(r):(t.prototype=r.prototype,new t)}var i,o,n,p,l,m,d,u,c,y,N,P,z,S,C,f,h,g,w,b,R,I,v=function(){return(v=Object.assign||function(e){for(var r,t=1,a=arguments.length;t<a;t++)for(var i in r=arguments[t])Object.prototype.hasOwnProperty.call(r,i)&&(e[i]=r[i]);return e}).apply(this,arguments)};(o=i||(i={})).UserManaged="UserManaged",o.ServiceManaged="ServiceManaged",(p=n||(n={})).Enabled="Enabled",p.Disabled="Disabled",(m=l||(l={})).Creating="Creating",m.Succeeded="Succeeded",(u=d||(d={})).Enabled="Enabled",u.Disabled="Disabled",(y=c||(c={})).Enabled="Enabled",y.Disabled="Disabled",(P=N||(N={})).Enabled="Enabled",P.Disabled="Disabled",(S=z||(z={})).Consumption="Consumption",S.Commitment1TB="Commitment_1TB",S.Commitment10TB="Commitment_10TB",S.Commitment100TB="Commitment_100TB",S.Commitment500TB="Commitment_500TB",S.Commitment1PB="Commitment_1PB",S.Commitment5PB="Commitment_5PB",(f=C||(C={})).Failed="Failed",f.Creating="Creating",f.Running="Running",f.Succeeded="Succeeded",f.Patching="Patching",f.Suspending="Suspending",f.Resuming="Resuming",f.Deleting="Deleting",f.Deleted="Deleted",f.Undeleting="Undeleting",f.Canceled="Canceled",(g=h||(h={})).Active="Active",g.Suspended="Suspended",(b=w||(w={})).User="user",b.System="system",b.Usersystem="user,system",(I=R||(R={})).Registered="Registered",I.Suspended="Suspended",I.Deleted="Deleted",I.Unregistered="Unregistered",I.Warned="Warned";var k=Object.freeze({get EncryptionConfigType(){return i},get EncryptionState(){return n},get EncryptionProvisioningState(){return l},get FirewallState(){return d},get FirewallAllowAzureIpsState(){return c},get TrustedIdProviderState(){return N},get TierType(){return z},get DataLakeStoreAccountStatus(){return C},get DataLakeStoreAccountState(){return h},get OperationOrigin(){return w},get SubscriptionState(){return R}}),O=r.CloudErrorMapper,A=r.BaseResourceMapper,M={serializedName:"Resource",type:{name:"Composite",className:"Resource",modelProperties:{id:{readOnly:!0,serializedName:"id",type:{name:"String"}},name:{readOnly:!0,serializedName:"name",type:{name:"String"}},type:{readOnly:!0,serializedName:"type",type:{name:"String"}},location:{readOnly:!0,serializedName:"location",type:{name:"String"}},tags:{readOnly:!0,serializedName:"tags",type:{name:"Dictionary",value:{type:{name:"String"}}}}}}},T={serializedName:"SubResource",type:{name:"Composite",className:"SubResource",modelProperties:{id:{readOnly:!0,serializedName:"id",type:{name:"String"}},name:{readOnly:!0,serializedName:"name",type:{name:"String"}},type:{readOnly:!0,serializedName:"type",type:{name:"String"}}}}},E={serializedName:"EncryptionIdentity",type:{name:"Composite",className:"EncryptionIdentity",modelProperties:{type:{required:!0,isConstant:!0,serializedName:"type",defaultValue:"SystemAssigned",type:{name:"String"}},principalId:{readOnly:!0,serializedName:"principalId",type:{name:"Uuid"}},tenantId:{readOnly:!0,serializedName:"tenantId",type:{name:"Uuid"}}}}},D={serializedName:"KeyVaultMetaInfo",type:{name:"Composite",className:"KeyVaultMetaInfo",modelProperties:{keyVaultResourceId:{required:!0,serializedName:"keyVaultResourceId",type:{name:"String"}},encryptionKeyName:{required:!0,serializedName:"encryptionKeyName",type:{name:"String"}},encryptionKeyVersion:{required:!0,serializedName:"encryptionKeyVersion",type:{name:"String"}}}}},q={serializedName:"EncryptionConfig",type:{name:"Composite",className:"EncryptionConfig",modelProperties:{type:{required:!0,serializedName:"type",type:{name:"Enum",allowedValues:["UserManaged","ServiceManaged"]}},keyVaultMetaInfo:{serializedName:"keyVaultMetaInfo",type:{name:"Composite",className:"KeyVaultMetaInfo"}}}}},L={serializedName:"FirewallRule",type:{name:"Composite",className:"FirewallRule",modelProperties:v({},T.type.modelProperties,{startIpAddress:{readOnly:!0,serializedName:"properties.startIpAddress",type:{name:"String"}},endIpAddress:{readOnly:!0,serializedName:"properties.endIpAddress",type:{name:"String"}}})}},U={serializedName:"VirtualNetworkRule",type:{name:"Composite",className:"VirtualNetworkRule",modelProperties:v({},T.type.modelProperties,{subnetId:{readOnly:!0,serializedName:"properties.subnetId",type:{name:"String"}}})}},V={serializedName:"TrustedIdProvider",type:{name:"Composite",className:"TrustedIdProvider",modelProperties:v({},T.type.modelProperties,{idProvider:{readOnly:!0,serializedName:"properties.idProvider",type:{name:"String"}}})}},B={serializedName:"DataLakeStoreAccountPropertiesBasic",type:{name:"Composite",className:"DataLakeStoreAccountPropertiesBasic",modelProperties:{accountId:{readOnly:!0,serializedName:"accountId",type:{name:"Uuid"}},provisioningState:{readOnly:!0,serializedName:"provisioningState",type:{name:"Enum",allowedValues:["Failed","Creating","Running","Succeeded","Patching","Suspending","Resuming","Deleting","Deleted","Undeleting","Canceled"]}},state:{readOnly:!0,serializedName:"state",type:{name:"Enum",allowedValues:["Active","Suspended"]}},creationTime:{readOnly:!0,serializedName:"creationTime",type:{name:"DateTime"}},lastModifiedTime:{readOnly:!0,serializedName:"lastModifiedTime",type:{name:"DateTime"}},endpoint:{readOnly:!0,serializedName:"endpoint",type:{name:"String"}}}}},G={serializedName:"DataLakeStoreAccountProperties",type:{name:"Composite",className:"DataLakeStoreAccountProperties",modelProperties:v({},B.type.modelProperties,{defaultGroup:{readOnly:!0,serializedName:"defaultGroup",type:{name:"String"}},encryptionConfig:{readOnly:!0,serializedName:"encryptionConfig",type:{name:"Composite",className:"EncryptionConfig"}},encryptionState:{readOnly:!0,serializedName:"encryptionState",type:{name:"Enum",allowedValues:["Enabled","Disabled"]}},encryptionProvisioningState:{readOnly:!0,serializedName:"encryptionProvisioningState",type:{name:"Enum",allowedValues:["Creating","Succeeded"]}},firewallRules:{readOnly:!0,serializedName:"firewallRules",type:{name:"Sequence",element:{type:{name:"Composite",className:"FirewallRule"}}}},virtualNetworkRules:{readOnly:!0,serializedName:"virtualNetworkRules",type:{name:"Sequence",element:{type:{name:"Composite",className:"VirtualNetworkRule"}}}},firewallState:{readOnly:!0,serializedName:"firewallState",type:{name:"Enum",allowedValues:["Enabled","Disabled"]}},firewallAllowAzureIps:{readOnly:!0,serializedName:"firewallAllowAzureIps",type:{name:"Enum",allowedValues:["Enabled","Disabled"]}},trustedIdProviders:{readOnly:!0,serializedName:"trustedIdProviders",type:{name:"Sequence",element:{type:{name:"Composite",className:"TrustedIdProvider"}}}},trustedIdProviderState:{readOnly:!0,serializedName:"trustedIdProviderState",type:{name:"Enum",allowedValues:["Enabled","Disabled"]}},newTier:{readOnly:!0,serializedName:"newTier",type:{name:"Enum",allowedValues:["Consumption","Commitment_1TB","Commitment_10TB","Commitment_100TB","Commitment_500TB","Commitment_1PB","Commitment_5PB"]}},currentTier:{readOnly:!0,serializedName:"currentTier",type:{name:"Enum",allowedValues:["Consumption","Commitment_1TB","Commitment_10TB","Commitment_100TB","Commitment_500TB","Commitment_1PB","Commitment_5PB"]}}})}},_={serializedName:"DataLakeStoreAccount",type:{name:"Composite",className:"DataLakeStoreAccount",modelProperties:v({},M.type.modelProperties,{identity:{readOnly:!0,serializedName:"identity",type:{name:"Composite",className:"EncryptionIdentity"}},accountId:{readOnly:!0,serializedName:"properties.accountId",type:{name:"Uuid"}},provisioningState:{readOnly:!0,serializedName:"properties.provisioningState",type:{name:"Enum",allowedValues:["Failed","Creating","Running","Succeeded","Patching","Suspending","Resuming","Deleting","Deleted","Undeleting","Canceled"]}},state:{readOnly:!0,serializedName:"properties.state",type:{name:"Enum",allowedValues:["Active","Suspended"]}},creationTime:{readOnly:!0,serializedName:"properties.creationTime",type:{name:"DateTime"}},lastModifiedTime:{readOnly:!0,serializedName:"properties.lastModifiedTime",type:{name:"DateTime"}},endpoint:{readOnly:!0,serializedName:"properties.endpoint",type:{name:"String"}},defaultGroup:{readOnly:!0,serializedName:"properties.defaultGroup",type:{name:"String"}},encryptionConfig:{readOnly:!0,serializedName:"properties.encryptionConfig",type:{name:"Composite",className:"EncryptionConfig"}},encryptionState:{readOnly:!0,serializedName:"properties.encryptionState",type:{name:"Enum",allowedValues:["Enabled","Disabled"]}},encryptionProvisioningState:{readOnly:!0,serializedName:"properties.encryptionProvisioningState",type:{name:"Enum",allowedValues:["Creating","Succeeded"]}},firewallRules:{readOnly:!0,serializedName:"properties.firewallRules",type:{name:"Sequence",element:{type:{name:"Composite",className:"FirewallRule"}}}},virtualNetworkRules:{readOnly:!0,serializedName:"properties.virtualNetworkRules",type:{name:"Sequence",element:{type:{name:"Composite",className:"VirtualNetworkRule"}}}},firewallState:{readOnly:!0,serializedName:"properties.firewallState",type:{name:"Enum",allowedValues:["Enabled","Disabled"]}},firewallAllowAzureIps:{readOnly:!0,serializedName:"properties.firewallAllowAzureIps",type:{name:"Enum",allowedValues:["Enabled","Disabled"]}},trustedIdProviders:{readOnly:!0,serializedName:"properties.trustedIdProviders",type:{name:"Sequence",element:{type:{name:"Composite",className:"TrustedIdProvider"}}}},trustedIdProviderState:{readOnly:!0,serializedName:"properties.trustedIdProviderState",type:{name:"Enum",allowedValues:["Enabled","Disabled"]}},newTier:{readOnly:!0,serializedName:"properties.newTier",type:{name:"Enum",allowedValues:["Consumption","Commitment_1TB","Commitment_10TB","Commitment_100TB","Commitment_500TB","Commitment_1PB","Commitment_5PB"]}},currentTier:{readOnly:!0,serializedName:"properties.currentTier",type:{name:"Enum",allowedValues:["Consumption","Commitment_1TB","Commitment_10TB","Commitment_100TB","Commitment_500TB","Commitment_1PB","Commitment_5PB"]}}})}},F={serializedName:"DataLakeStoreAccountBasic",type:{name:"Composite",className:"DataLakeStoreAccountBasic",modelProperties:v({},M.type.modelProperties,{accountId:{readOnly:!0,serializedName:"properties.accountId",type:{name:"Uuid"}},provisioningState:{readOnly:!0,serializedName:"properties.provisioningState",type:{name:"Enum",allowedValues:["Failed","Creating","Running","Succeeded","Patching","Suspending","Resuming","Deleting","Deleted","Undeleting","Canceled"]}},state:{readOnly:!0,serializedName:"properties.state",type:{name:"Enum",allowedValues:["Active","Suspended"]}},creationTime:{readOnly:!0,serializedName:"properties.creationTime",type:{name:"DateTime"}},lastModifiedTime:{readOnly:!0,serializedName:"properties.lastModifiedTime",type:{name:"DateTime"}},endpoint:{readOnly:!0,serializedName:"properties.endpoint",type:{name:"String"}}})}},W={serializedName:"OperationDisplay",type:{name:"Composite",className:"OperationDisplay",modelProperties:{provider:{readOnly:!0,serializedName:"provider",type:{name:"String"}},resource:{readOnly:!0,serializedName:"resource",type:{name:"String"}},operation:{readOnly:!0,serializedName:"operation",type:{name:"String"}},description:{readOnly:!0,serializedName:"description",type:{name:"String"}}}}},x={serializedName:"Operation",type:{name:"Composite",className:"Operation",modelProperties:{name:{readOnly:!0,serializedName:"name",type:{name:"String"}},display:{serializedName:"display",type:{name:"Composite",className:"OperationDisplay"}},origin:{readOnly:!0,serializedName:"origin",type:{name:"String"}}}}},K={serializedName:"OperationListResult",type:{name:"Composite",className:"OperationListResult",modelProperties:{value:{readOnly:!0,serializedName:"value",type:{name:"Sequence",element:{type:{name:"Composite",className:"Operation"}}}},nextLink:{readOnly:!0,serializedName:"nextLink",type:{name:"String"}}}}},j={serializedName:"CapabilityInformation",type:{name:"Composite",className:"CapabilityInformation",modelProperties:{subscriptionId:{readOnly:!0,serializedName:"subscriptionId",type:{name:"Uuid"}},state:{readOnly:!0,serializedName:"state",type:{name:"String"}},maxAccountCount:{readOnly:!0,serializedName:"maxAccountCount",type:{name:"Number"}},accountCount:{readOnly:!0,serializedName:"accountCount",type:{name:"Number"}},migrationState:{readOnly:!0,serializedName:"migrationState",type:{name:"Boolean"}}}}},$={serializedName:"NameAvailabilityInformation",type:{name:"Composite",className:"NameAvailabilityInformation",modelProperties:{nameAvailable:{readOnly:!0,serializedName:"nameAvailable",type:{name:"Boolean"}},reason:{readOnly:!0,serializedName:"reason",type:{name:"String"}},message:{readOnly:!0,serializedName:"message",type:{name:"String"}}}}},H={serializedName:"CreateFirewallRuleWithAccountParameters",type:{name:"Composite",className:"CreateFirewallRuleWithAccountParameters",modelProperties:{name:{required:!0,serializedName:"name",type:{name:"String"}},startIpAddress:{required:!0,serializedName:"properties.startIpAddress",type:{name:"String"}},endIpAddress:{required:!0,serializedName:"properties.endIpAddress",type:{name:"String"}}}}},J={serializedName:"CreateVirtualNetworkRuleWithAccountParameters",type:{name:"Composite",className:"CreateVirtualNetworkRuleWithAccountParameters",modelProperties:{name:{required:!0,serializedName:"name",type:{name:"String"}},subnetId:{required:!0,serializedName:"properties.subnetId",type:{name:"String"}}}}},Q={serializedName:"CreateTrustedIdProviderWithAccountParameters",type:{name:"Composite",className:"CreateTrustedIdProviderWithAccountParameters",modelProperties:{name:{required:!0,serializedName:"name",type:{name:"String"}},idProvider:{required:!0,serializedName:"properties.idProvider",type:{name:"String"}}}}},X={serializedName:"CreateDataLakeStoreAccountParameters",type:{name:"Composite",className:"CreateDataLakeStoreAccountParameters",modelProperties:{location:{required:!0,serializedName:"location",type:{name:"String"}},tags:{serializedName:"tags",type:{name:"Dictionary",value:{type:{name:"String"}}}},identity:{serializedName:"identity",type:{name:"Composite",className:"EncryptionIdentity"}},defaultGroup:{serializedName:"properties.defaultGroup",type:{name:"String"}},encryptionConfig:{serializedName:"properties.encryptionConfig",type:{name:"Composite",className:"EncryptionConfig"}},encryptionState:{serializedName:"properties.encryptionState",type:{name:"Enum",allowedValues:["Enabled","Disabled"]}},firewallRules:{serializedName:"properties.firewallRules",type:{name:"Sequence",element:{type:{name:"Composite",className:"CreateFirewallRuleWithAccountParameters"}}}},virtualNetworkRules:{serializedName:"properties.virtualNetworkRules",type:{name:"Sequence",element:{type:{name:"Composite",className:"CreateVirtualNetworkRuleWithAccountParameters"}}}},firewallState:{serializedName:"properties.firewallState",type:{name:"Enum",allowedValues:["Enabled","Disabled"]}},firewallAllowAzureIps:{serializedName:"properties.firewallAllowAzureIps",type:{name:"Enum",allowedValues:["Enabled","Disabled"]}},trustedIdProviders:{serializedName:"properties.trustedIdProviders",type:{name:"Sequence",element:{type:{name:"Composite",className:"CreateTrustedIdProviderWithAccountParameters"}}}},trustedIdProviderState:{serializedName:"properties.trustedIdProviderState",type:{name:"Enum",allowedValues:["Enabled","Disabled"]}},newTier:{serializedName:"properties.newTier",type:{name:"Enum",allowedValues:["Consumption","Commitment_1TB","Commitment_10TB","Commitment_100TB","Commitment_500TB","Commitment_1PB","Commitment_5PB"]}}}}},Y={serializedName:"UpdateKeyVaultMetaInfo",type:{name:"Composite",className:"UpdateKeyVaultMetaInfo",modelProperties:{encryptionKeyVersion:{serializedName:"encryptionKeyVersion",type:{name:"String"}}}}},Z={serializedName:"UpdateEncryptionConfig",type:{name:"Composite",className:"UpdateEncryptionConfig",modelProperties:{keyVaultMetaInfo:{serializedName:"keyVaultMetaInfo",type:{name:"Composite",className:"UpdateKeyVaultMetaInfo"}}}}},ee={serializedName:"UpdateFirewallRuleWithAccountParameters",type:{name:"Composite",className:"UpdateFirewallRuleWithAccountParameters",modelProperties:{name:{required:!0,serializedName:"name",type:{name:"String"}},startIpAddress:{serializedName:"properties.startIpAddress",type:{name:"String"}},endIpAddress:{serializedName:"properties.endIpAddress",type:{name:"String"}}}}},re={serializedName:"UpdateVirtualNetworkRuleWithAccountParameters",type:{name:"Composite",className:"UpdateVirtualNetworkRuleWithAccountParameters",modelProperties:{name:{required:!0,serializedName:"name",type:{name:"String"}},subnetId:{serializedName:"properties.subnetId",type:{name:"String"}}}}},te={serializedName:"UpdateTrustedIdProviderWithAccountParameters",type:{name:"Composite",className:"UpdateTrustedIdProviderWithAccountParameters",modelProperties:{name:{required:!0,serializedName:"name",type:{name:"String"}},idProvider:{serializedName:"properties.idProvider",type:{name:"String"}}}}},ae={serializedName:"UpdateDataLakeStoreAccountParameters",type:{name:"Composite",className:"UpdateDataLakeStoreAccountParameters",modelProperties:{tags:{serializedName:"tags",type:{name:"Dictionary",value:{type:{name:"String"}}}},defaultGroup:{serializedName:"properties.defaultGroup",type:{name:"String"}},encryptionConfig:{serializedName:"properties.encryptionConfig",type:{name:"Composite",className:"UpdateEncryptionConfig"}},firewallRules:{serializedName:"properties.firewallRules",type:{name:"Sequence",element:{type:{name:"Composite",className:"UpdateFirewallRuleWithAccountParameters"}}}},virtualNetworkRules:{serializedName:"properties.virtualNetworkRules",type:{name:"Sequence",element:{type:{name:"Composite",className:"UpdateVirtualNetworkRuleWithAccountParameters"}}}},firewallState:{serializedName:"properties.firewallState",type:{name:"Enum",allowedValues:["Enabled","Disabled"]}},firewallAllowAzureIps:{serializedName:"properties.firewallAllowAzureIps",type:{name:"Enum",allowedValues:["Enabled","Disabled"]}},trustedIdProviders:{serializedName:"properties.trustedIdProviders",type:{name:"Sequence",element:{type:{name:"Composite",className:"UpdateTrustedIdProviderWithAccountParameters"}}}},trustedIdProviderState:{serializedName:"properties.trustedIdProviderState",type:{name:"Enum",allowedValues:["Enabled","Disabled"]}},newTier:{serializedName:"properties.newTier",type:{name:"Enum",allowedValues:["Consumption","Commitment_1TB","Commitment_10TB","Commitment_100TB","Commitment_500TB","Commitment_1PB","Commitment_5PB"]}}}}},ie={serializedName:"CreateOrUpdateFirewallRuleParameters",type:{name:"Composite",className:"CreateOrUpdateFirewallRuleParameters",modelProperties:{startIpAddress:{required:!0,serializedName:"properties.startIpAddress",type:{name:"String"}},endIpAddress:{required:!0,serializedName:"properties.endIpAddress",type:{name:"String"}}}}},se={serializedName:"UpdateFirewallRuleParameters",type:{name:"Composite",className:"UpdateFirewallRuleParameters",modelProperties:{startIpAddress:{serializedName:"properties.startIpAddress",type:{name:"String"}},endIpAddress:{serializedName:"properties.endIpAddress",type:{name:"String"}}}}},oe={serializedName:"CreateOrUpdateVirtualNetworkRuleParameters",type:{name:"Composite",className:"CreateOrUpdateVirtualNetworkRuleParameters",modelProperties:{subnetId:{required:!0,serializedName:"properties.subnetId",type:{name:"String"}}}}},ne={serializedName:"UpdateVirtualNetworkRuleParameters",type:{name:"Composite",className:"UpdateVirtualNetworkRuleParameters",modelProperties:{subnetId:{serializedName:"properties.subnetId",type:{name:"String"}}}}},pe={serializedName:"CreateOrUpdateTrustedIdProviderParameters",type:{name:"Composite",className:"CreateOrUpdateTrustedIdProviderParameters",modelProperties:{idProvider:{required:!0,serializedName:"properties.idProvider",type:{name:"String"}}}}},le={serializedName:"UpdateTrustedIdProviderParameters",type:{name:"Composite",className:"UpdateTrustedIdProviderParameters",modelProperties:{idProvider:{serializedName:"properties.idProvider",type:{name:"String"}}}}},me={serializedName:"CheckNameAvailabilityParameters",type:{name:"Composite",className:"CheckNameAvailabilityParameters",modelProperties:{name:{required:!0,serializedName:"name",type:{name:"String"}},type:{required:!0,isConstant:!0,serializedName:"type",defaultValue:"Microsoft.DataLakeStore/accounts",type:{name:"String"}}}}},de={serializedName:"DataLakeStoreAccountListResult",type:{name:"Composite",className:"DataLakeStoreAccountListResult",modelProperties:{value:{readOnly:!0,serializedName:"",type:{name:"Sequence",element:{type:{name:"Composite",className:"DataLakeStoreAccountBasic"}}}},nextLink:{readOnly:!0,serializedName:"nextLink",type:{name:"String"}}}}},ue={serializedName:"FirewallRuleListResult",type:{name:"Composite",className:"FirewallRuleListResult",modelProperties:{value:{readOnly:!0,serializedName:"",type:{name:"Sequence",element:{type:{name:"Composite",className:"FirewallRule"}}}},nextLink:{readOnly:!0,serializedName:"nextLink",type:{name:"String"}}}}},ce={serializedName:"VirtualNetworkRuleListResult",type:{name:"Composite",className:"VirtualNetworkRuleListResult",modelProperties:{value:{readOnly:!0,serializedName:"",type:{name:"Sequence",element:{type:{name:"Composite",className:"VirtualNetworkRule"}}}},nextLink:{readOnly:!0,serializedName:"nextLink",type:{name:"String"}}}}},ye={serializedName:"TrustedIdProviderListResult",type:{name:"Composite",className:"TrustedIdProviderListResult",modelProperties:{value:{readOnly:!0,serializedName:"",type:{name:"Sequence",element:{type:{name:"Composite",className:"TrustedIdProvider"}}}},nextLink:{readOnly:!0,serializedName:"nextLink",type:{name:"String"}}}}},Ne=Object.freeze({CloudError:O,BaseResource:A,Resource:M,SubResource:T,EncryptionIdentity:E,KeyVaultMetaInfo:D,EncryptionConfig:q,FirewallRuleProperties:{serializedName:"FirewallRuleProperties",type:{name:"Composite",className:"FirewallRuleProperties",modelProperties:{startIpAddress:{readOnly:!0,serializedName:"startIpAddress",type:{name:"String"}},endIpAddress:{readOnly:!0,serializedName:"endIpAddress",type:{name:"String"}}}}},FirewallRule:L,VirtualNetworkRuleProperties:{serializedName:"VirtualNetworkRuleProperties",type:{name:"Composite",className:"VirtualNetworkRuleProperties",modelProperties:{subnetId:{readOnly:!0,serializedName:"subnetId",type:{name:"String"}}}}},VirtualNetworkRule:U,TrustedIdProviderProperties:{serializedName:"TrustedIdProviderProperties",type:{name:"Composite",className:"TrustedIdProviderProperties",modelProperties:{idProvider:{readOnly:!0,serializedName:"idProvider",type:{name:"String"}}}}},TrustedIdProvider:V,DataLakeStoreAccountPropertiesBasic:B,DataLakeStoreAccountProperties:G,DataLakeStoreAccount:_,DataLakeStoreAccountBasic:F,OperationDisplay:W,Operation:x,OperationListResult:K,CapabilityInformation:j,NameAvailabilityInformation:$,CreateOrUpdateFirewallRuleProperties:{serializedName:"CreateOrUpdateFirewallRuleProperties",type:{name:"Composite",className:"CreateOrUpdateFirewallRuleProperties",modelProperties:{startIpAddress:{required:!0,serializedName:"startIpAddress",type:{name:"String"}},endIpAddress:{required:!0,serializedName:"endIpAddress",type:{name:"String"}}}}},CreateFirewallRuleWithAccountParameters:H,CreateOrUpdateVirtualNetworkRuleProperties:{serializedName:"CreateOrUpdateVirtualNetworkRuleProperties",type:{name:"Composite",className:"CreateOrUpdateVirtualNetworkRuleProperties",modelProperties:{subnetId:{required:!0,serializedName:"subnetId",type:{name:"String"}}}}},CreateVirtualNetworkRuleWithAccountParameters:J,CreateOrUpdateTrustedIdProviderProperties:{serializedName:"CreateOrUpdateTrustedIdProviderProperties",type:{name:"Composite",className:"CreateOrUpdateTrustedIdProviderProperties",modelProperties:{idProvider:{required:!0,serializedName:"idProvider",type:{name:"String"}}}}},CreateTrustedIdProviderWithAccountParameters:Q,CreateDataLakeStoreAccountProperties:{serializedName:"CreateDataLakeStoreAccountProperties",type:{name:"Composite",className:"CreateDataLakeStoreAccountProperties",modelProperties:{defaultGroup:{serializedName:"defaultGroup",type:{name:"String"}},encryptionConfig:{serializedName:"encryptionConfig",type:{name:"Composite",className:"EncryptionConfig"}},encryptionState:{serializedName:"encryptionState",type:{name:"Enum",allowedValues:["Enabled","Disabled"]}},firewallRules:{serializedName:"firewallRules",type:{name:"Sequence",element:{type:{name:"Composite",className:"CreateFirewallRuleWithAccountParameters"}}}},virtualNetworkRules:{serializedName:"virtualNetworkRules",type:{name:"Sequence",element:{type:{name:"Composite",className:"CreateVirtualNetworkRuleWithAccountParameters"}}}},firewallState:{serializedName:"firewallState",type:{name:"Enum",allowedValues:["Enabled","Disabled"]}},firewallAllowAzureIps:{serializedName:"firewallAllowAzureIps",type:{name:"Enum",allowedValues:["Enabled","Disabled"]}},trustedIdProviders:{serializedName:"trustedIdProviders",type:{name:"Sequence",element:{type:{name:"Composite",className:"CreateTrustedIdProviderWithAccountParameters"}}}},trustedIdProviderState:{serializedName:"trustedIdProviderState",type:{name:"Enum",allowedValues:["Enabled","Disabled"]}},newTier:{serializedName:"newTier",type:{name:"Enum",allowedValues:["Consumption","Commitment_1TB","Commitment_10TB","Commitment_100TB","Commitment_500TB","Commitment_1PB","Commitment_5PB"]}}}}},CreateDataLakeStoreAccountParameters:X,UpdateKeyVaultMetaInfo:Y,UpdateEncryptionConfig:Z,UpdateFirewallRuleProperties:{serializedName:"UpdateFirewallRuleProperties",type:{name:"Composite",className:"UpdateFirewallRuleProperties",modelProperties:{startIpAddress:{serializedName:"startIpAddress",type:{name:"String"}},endIpAddress:{serializedName:"endIpAddress",type:{name:"String"}}}}},UpdateFirewallRuleWithAccountParameters:ee,UpdateVirtualNetworkRuleProperties:{serializedName:"UpdateVirtualNetworkRuleProperties",type:{name:"Composite",className:"UpdateVirtualNetworkRuleProperties",modelProperties:{subnetId:{serializedName:"subnetId",type:{name:"String"}}}}},UpdateVirtualNetworkRuleWithAccountParameters:re,UpdateTrustedIdProviderProperties:{serializedName:"UpdateTrustedIdProviderProperties",type:{name:"Composite",className:"UpdateTrustedIdProviderProperties",modelProperties:{idProvider:{serializedName:"idProvider",type:{name:"String"}}}}},UpdateTrustedIdProviderWithAccountParameters:te,UpdateDataLakeStoreAccountProperties:{serializedName:"UpdateDataLakeStoreAccountProperties",type:{name:"Composite",className:"UpdateDataLakeStoreAccountProperties",modelProperties:{defaultGroup:{serializedName:"defaultGroup",type:{name:"String"}},encryptionConfig:{serializedName:"encryptionConfig",type:{name:"Composite",className:"UpdateEncryptionConfig"}},firewallRules:{serializedName:"firewallRules",type:{name:"Sequence",element:{type:{name:"Composite",className:"UpdateFirewallRuleWithAccountParameters"}}}},virtualNetworkRules:{serializedName:"virtualNetworkRules",type:{name:"Sequence",element:{type:{name:"Composite",className:"UpdateVirtualNetworkRuleWithAccountParameters"}}}},firewallState:{serializedName:"firewallState",type:{name:"Enum",allowedValues:["Enabled","Disabled"]}},firewallAllowAzureIps:{serializedName:"firewallAllowAzureIps",type:{name:"Enum",allowedValues:["Enabled","Disabled"]}},trustedIdProviders:{serializedName:"trustedIdProviders",type:{name:"Sequence",element:{type:{name:"Composite",className:"UpdateTrustedIdProviderWithAccountParameters"}}}},trustedIdProviderState:{serializedName:"trustedIdProviderState",type:{name:"Enum",allowedValues:["Enabled","Disabled"]}},newTier:{serializedName:"newTier",type:{name:"Enum",allowedValues:["Consumption","Commitment_1TB","Commitment_10TB","Commitment_100TB","Commitment_500TB","Commitment_1PB","Commitment_5PB"]}}}}},UpdateDataLakeStoreAccountParameters:ae,CreateOrUpdateFirewallRuleParameters:ie,UpdateFirewallRuleParameters:se,CreateOrUpdateVirtualNetworkRuleParameters:oe,UpdateVirtualNetworkRuleParameters:ne,CreateOrUpdateTrustedIdProviderParameters:pe,UpdateTrustedIdProviderParameters:le,CheckNameAvailabilityParameters:me,DataLakeStoreAccountListResult:de,FirewallRuleListResult:ue,VirtualNetworkRuleListResult:ce,TrustedIdProviderListResult:ye}),Pe=Object.freeze({DataLakeStoreAccountListResult:de,DataLakeStoreAccountBasic:F,Resource:M,BaseResource:A,CloudError:O,CreateDataLakeStoreAccountParameters:X,EncryptionIdentity:E,EncryptionConfig:q,KeyVaultMetaInfo:D,CreateFirewallRuleWithAccountParameters:H,CreateVirtualNetworkRuleWithAccountParameters:J,CreateTrustedIdProviderWithAccountParameters:Q,DataLakeStoreAccount:_,FirewallRule:L,SubResource:T,VirtualNetworkRule:U,TrustedIdProvider:V,UpdateDataLakeStoreAccountParameters:ae,UpdateEncryptionConfig:Z,UpdateKeyVaultMetaInfo:Y,UpdateFirewallRuleWithAccountParameters:ee,UpdateVirtualNetworkRuleWithAccountParameters:re,UpdateTrustedIdProviderWithAccountParameters:te,CheckNameAvailabilityParameters:me,NameAvailabilityInformation:$}),ze={parameterPath:"acceptLanguage",mapper:{serializedName:"accept-language",defaultValue:"en-US",type:{name:"String"}}},Se={parameterPath:"accountName",mapper:{required:!0,serializedName:"accountName",type:{name:"String"}}},Ce={parameterPath:"apiVersion",mapper:{required:!0,serializedName:"api-version",type:{name:"String"}}},fe={parameterPath:["options","count"],mapper:{serializedName:"$count",type:{name:"Boolean"}}},he={parameterPath:["options","filter"],mapper:{serializedName:"$filter",type:{name:"String"}}},ge={parameterPath:"firewallRuleName",mapper:{required:!0,serializedName:"firewallRuleName",type:{name:"String"}}},we={parameterPath:"location",mapper:{required:!0,serializedName:"location",type:{name:"String"}}},be={parameterPath:"nextPageLink",mapper:{required:!0,serializedName:"nextLink",type:{name:"String"}},skipEncoding:!0},Re={parameterPath:["options","orderby"],mapper:{serializedName:"$orderby",type:{name:"String"}}},Ie={parameterPath:"resourceGroupName",mapper:{required:!0,serializedName:"resourceGroupName",type:{name:"String"}}},ve={parameterPath:["options","select"],mapper:{serializedName:"$select",type:{name:"String"}}},ke={parameterPath:["options","skip"],mapper:{serializedName:"$skip",constraints:{InclusiveMinimum:1},type:{name:"Number"}}},Oe={parameterPath:"subscriptionId",mapper:{required:!0,serializedName:"subscriptionId",type:{name:"String"}}},Ae={parameterPath:["options","top"],mapper:{serializedName:"$top",constraints:{InclusiveMinimum:1},type:{name:"Number"}}},Me={parameterPath:"trustedIdProviderName",mapper:{required:!0,serializedName:"trustedIdProviderName",type:{name:"String"}}},Te={parameterPath:"virtualNetworkRuleName",mapper:{required:!0,serializedName:"virtualNetworkRuleName",type:{name:"String"}}},Ee=function(){function e(e){this.client=e}return e.prototype.list=function(e,r){return this.client.sendOperationRequest({options:e},qe,r)},e.prototype.listByResourceGroup=function(e,r,t){return this.client.sendOperationRequest({resourceGroupName:e,options:r},Le,t)},e.prototype.create=function(e,r,t,a){return this.beginCreate(e,r,t,a).then(function(e){return e.pollUntilFinished()})},e.prototype.get=function(e,r,t,a){return this.client.sendOperationRequest({resourceGroupName:e,accountName:r,options:t},Ue,a)},e.prototype.update=function(e,r,t,a){return this.beginUpdate(e,r,t,a).then(function(e){return e.pollUntilFinished()})},e.prototype.deleteMethod=function(e,r,t){return this.beginDeleteMethod(e,r,t).then(function(e){return e.pollUntilFinished()})},e.prototype.enableKeyVault=function(e,r,t,a){return this.client.sendOperationRequest({resourceGroupName:e,accountName:r,options:t},Ve,a)},e.prototype.checkNameAvailability=function(e,r,t,a){return this.client.sendOperationRequest({location:e,parameters:r,options:t},Be,a)},e.prototype.beginCreate=function(e,r,t,a){return this.client.sendLRORequest({resourceGroupName:e,accountName:r,parameters:t,options:a},Ge,a)},e.prototype.beginUpdate=function(e,r,t,a){return this.client.sendLRORequest({resourceGroupName:e,accountName:r,parameters:t,options:a},_e,a)},e.prototype.beginDeleteMethod=function(e,r,t){return this.client.sendLRORequest({resourceGroupName:e,accountName:r,options:t},Fe,t)},e.prototype.listNext=function(e,r,t){return this.client.sendOperationRequest({nextPageLink:e,options:r},We,t)},e.prototype.listByResourceGroupNext=function(e,r,t){return this.client.sendOperationRequest({nextPageLink:e,options:r},xe,t)},e}(),De=new t.Serializer(Pe),qe={httpMethod:"GET",path:"subscriptions/{subscriptionId}/providers/Microsoft.DataLakeStore/accounts",urlParameters:[Oe],queryParameters:[he,Ae,ke,ve,Re,fe,Ce],headerParameters:[ze],responses:{200:{bodyMapper:de},default:{bodyMapper:O}},serializer:De},Le={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts",urlParameters:[Oe,Ie],queryParameters:[he,Ae,ke,ve,Re,fe,Ce],headerParameters:[ze],responses:{200:{bodyMapper:de},default:{bodyMapper:O}},serializer:De},Ue={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}",urlParameters:[Oe,Ie,Se],queryParameters:[Ce],headerParameters:[ze],responses:{200:{bodyMapper:_},default:{bodyMapper:O}},serializer:De},Ve={httpMethod:"POST",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/enableKeyVault",urlParameters:[Oe,Ie,Se],queryParameters:[Ce],headerParameters:[ze],responses:{200:{},default:{bodyMapper:O}},serializer:De},Be={httpMethod:"POST",path:"subscriptions/{subscriptionId}/providers/Microsoft.DataLakeStore/locations/{location}/checkNameAvailability",urlParameters:[Oe,we],queryParameters:[Ce],headerParameters:[ze],requestBody:{parameterPath:"parameters",mapper:v({},me,{required:!0})},responses:{200:{bodyMapper:$},default:{bodyMapper:O}},serializer:De},Ge={httpMethod:"PUT",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}",urlParameters:[Oe,Ie,Se],queryParameters:[Ce],headerParameters:[ze],requestBody:{parameterPath:"parameters",mapper:v({},X,{required:!0})},responses:{200:{bodyMapper:_},201:{bodyMapper:_},default:{bodyMapper:O}},serializer:De},_e={httpMethod:"PATCH",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}",urlParameters:[Oe,Ie,Se],queryParameters:[Ce],headerParameters:[ze],requestBody:{parameterPath:"parameters",mapper:v({},ae,{required:!0})},responses:{200:{bodyMapper:_},201:{bodyMapper:_},202:{bodyMapper:_},default:{bodyMapper:O}},serializer:De},Fe={httpMethod:"DELETE",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}",urlParameters:[Oe,Ie,Se],queryParameters:[Ce],headerParameters:[ze],responses:{200:{},202:{},204:{},default:{bodyMapper:O}},serializer:De},We={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[be],headerParameters:[ze],responses:{200:{bodyMapper:de},default:{bodyMapper:O}},serializer:De},xe={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[be],headerParameters:[ze],responses:{200:{bodyMapper:de},default:{bodyMapper:O}},serializer:De},Ke=Object.freeze({FirewallRuleListResult:ue,FirewallRule:L,SubResource:T,BaseResource:A,CloudError:O,CreateOrUpdateFirewallRuleParameters:ie,UpdateFirewallRuleParameters:se,Resource:M,VirtualNetworkRule:U,TrustedIdProvider:V,DataLakeStoreAccount:_,EncryptionIdentity:E,EncryptionConfig:q,KeyVaultMetaInfo:D,DataLakeStoreAccountBasic:F}),je=function(){function e(e){this.client=e}return e.prototype.listByAccount=function(e,r,t,a){return this.client.sendOperationRequest({resourceGroupName:e,accountName:r,options:t},He,a)},e.prototype.createOrUpdate=function(e,r,t,a,i,s){return this.client.sendOperationRequest({resourceGroupName:e,accountName:r,firewallRuleName:t,parameters:a,options:i},Je,s)},e.prototype.get=function(e,r,t,a,i){return this.client.sendOperationRequest({resourceGroupName:e,accountName:r,firewallRuleName:t,options:a},Qe,i)},e.prototype.update=function(e,r,t,a,i){return this.client.sendOperationRequest({resourceGroupName:e,accountName:r,firewallRuleName:t,options:a},Xe,i)},e.prototype.deleteMethod=function(e,r,t,a,i){return this.client.sendOperationRequest({resourceGroupName:e,accountName:r,firewallRuleName:t,options:a},Ye,i)},e.prototype.listByAccountNext=function(e,r,t){return this.client.sendOperationRequest({nextPageLink:e,options:r},Ze,t)},e}(),$e=new t.Serializer(Ke),He={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/firewallRules",urlParameters:[Oe,Ie,Se],queryParameters:[Ce],headerParameters:[ze],responses:{200:{bodyMapper:ue},default:{bodyMapper:O}},serializer:$e},Je={httpMethod:"PUT",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/firewallRules/{firewallRuleName}",urlParameters:[Oe,Ie,Se,ge],queryParameters:[Ce],headerParameters:[ze],requestBody:{parameterPath:"parameters",mapper:v({},ie,{required:!0})},responses:{200:{bodyMapper:L},default:{bodyMapper:O}},serializer:$e},Qe={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/firewallRules/{firewallRuleName}",urlParameters:[Oe,Ie,Se,ge],queryParameters:[Ce],headerParameters:[ze],responses:{200:{bodyMapper:L},default:{bodyMapper:O}},serializer:$e},Xe={httpMethod:"PATCH",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/firewallRules/{firewallRuleName}",urlParameters:[Oe,Ie,Se,ge],queryParameters:[Ce],headerParameters:[ze],requestBody:{parameterPath:["options","parameters"],mapper:se},responses:{200:{bodyMapper:L},default:{bodyMapper:O}},serializer:$e},Ye={httpMethod:"DELETE",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/firewallRules/{firewallRuleName}",urlParameters:[Oe,Ie,Se,ge],queryParameters:[Ce],headerParameters:[ze],responses:{200:{},204:{},default:{bodyMapper:O}},serializer:$e},Ze={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[be],headerParameters:[ze],responses:{200:{bodyMapper:ue},default:{bodyMapper:O}},serializer:$e},er=Object.freeze({VirtualNetworkRuleListResult:ce,VirtualNetworkRule:U,SubResource:T,BaseResource:A,CloudError:O,CreateOrUpdateVirtualNetworkRuleParameters:oe,UpdateVirtualNetworkRuleParameters:ne,Resource:M,FirewallRule:L,TrustedIdProvider:V,DataLakeStoreAccount:_,EncryptionIdentity:E,EncryptionConfig:q,KeyVaultMetaInfo:D,DataLakeStoreAccountBasic:F}),rr=function(){function e(e){this.client=e}return e.prototype.listByAccount=function(e,r,t,a){return this.client.sendOperationRequest({resourceGroupName:e,accountName:r,options:t},ar,a)},e.prototype.createOrUpdate=function(e,r,t,a,i,s){return this.client.sendOperationRequest({resourceGroupName:e,accountName:r,virtualNetworkRuleName:t,parameters:a,options:i},ir,s)},e.prototype.get=function(e,r,t,a,i){return this.client.sendOperationRequest({resourceGroupName:e,accountName:r,virtualNetworkRuleName:t,options:a},sr,i)},e.prototype.update=function(e,r,t,a,i){return this.client.sendOperationRequest({resourceGroupName:e,accountName:r,virtualNetworkRuleName:t,options:a},or,i)},e.prototype.deleteMethod=function(e,r,t,a,i){return this.client.sendOperationRequest({resourceGroupName:e,accountName:r,virtualNetworkRuleName:t,options:a},nr,i)},e.prototype.listByAccountNext=function(e,r,t){return this.client.sendOperationRequest({nextPageLink:e,options:r},pr,t)},e}(),tr=new t.Serializer(er),ar={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/virtualNetworkRules",urlParameters:[Oe,Ie,Se],queryParameters:[Ce],headerParameters:[ze],responses:{200:{bodyMapper:ce},default:{bodyMapper:O}},serializer:tr},ir={httpMethod:"PUT",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/virtualNetworkRules/{virtualNetworkRuleName}",urlParameters:[Oe,Ie,Se,Te],queryParameters:[Ce],headerParameters:[ze],requestBody:{parameterPath:"parameters",mapper:v({},oe,{required:!0})},responses:{200:{bodyMapper:U},default:{bodyMapper:O}},serializer:tr},sr={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/virtualNetworkRules/{virtualNetworkRuleName}",urlParameters:[Oe,Ie,Se,Te],queryParameters:[Ce],headerParameters:[ze],responses:{200:{bodyMapper:U},default:{bodyMapper:O}},serializer:tr},or={httpMethod:"PATCH",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/virtualNetworkRules/{virtualNetworkRuleName}",urlParameters:[Oe,Ie,Se,Te],queryParameters:[Ce],headerParameters:[ze],requestBody:{parameterPath:["options","parameters"],mapper:ne},responses:{200:{bodyMapper:U},default:{bodyMapper:O}},serializer:tr},nr={httpMethod:"DELETE",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/virtualNetworkRules/{virtualNetworkRuleName}",urlParameters:[Oe,Ie,Se,Te],queryParameters:[Ce],headerParameters:[ze],responses:{200:{},204:{},default:{bodyMapper:O}},serializer:tr},pr={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[be],headerParameters:[ze],responses:{200:{bodyMapper:ce},default:{bodyMapper:O}},serializer:tr},lr=Object.freeze({TrustedIdProviderListResult:ye,TrustedIdProvider:V,SubResource:T,BaseResource:A,CloudError:O,CreateOrUpdateTrustedIdProviderParameters:pe,UpdateTrustedIdProviderParameters:le,Resource:M,FirewallRule:L,VirtualNetworkRule:U,DataLakeStoreAccount:_,EncryptionIdentity:E,EncryptionConfig:q,KeyVaultMetaInfo:D,DataLakeStoreAccountBasic:F}),mr=function(){function e(e){this.client=e}return e.prototype.listByAccount=function(e,r,t,a){return this.client.sendOperationRequest({resourceGroupName:e,accountName:r,options:t},ur,a)},e.prototype.createOrUpdate=function(e,r,t,a,i,s){return this.client.sendOperationRequest({resourceGroupName:e,accountName:r,trustedIdProviderName:t,parameters:a,options:i},cr,s)},e.prototype.get=function(e,r,t,a,i){return this.client.sendOperationRequest({resourceGroupName:e,accountName:r,trustedIdProviderName:t,options:a},yr,i)},e.prototype.update=function(e,r,t,a,i){return this.client.sendOperationRequest({resourceGroupName:e,accountName:r,trustedIdProviderName:t,options:a},Nr,i)},e.prototype.deleteMethod=function(e,r,t,a,i){return this.client.sendOperationRequest({resourceGroupName:e,accountName:r,trustedIdProviderName:t,options:a},Pr,i)},e.prototype.listByAccountNext=function(e,r,t){return this.client.sendOperationRequest({nextPageLink:e,options:r},zr,t)},e}(),dr=new t.Serializer(lr),ur={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/trustedIdProviders",urlParameters:[Oe,Ie,Se],queryParameters:[Ce],headerParameters:[ze],responses:{200:{bodyMapper:ye},default:{bodyMapper:O}},serializer:dr},cr={httpMethod:"PUT",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/trustedIdProviders/{trustedIdProviderName}",urlParameters:[Oe,Ie,Se,Me],queryParameters:[Ce],headerParameters:[ze],requestBody:{parameterPath:"parameters",mapper:v({},pe,{required:!0})},responses:{200:{bodyMapper:V},default:{bodyMapper:O}},serializer:dr},yr={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/trustedIdProviders/{trustedIdProviderName}",urlParameters:[Oe,Ie,Se,Me],queryParameters:[Ce],headerParameters:[ze],responses:{200:{bodyMapper:V},default:{bodyMapper:O}},serializer:dr},Nr={httpMethod:"PATCH",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/trustedIdProviders/{trustedIdProviderName}",urlParameters:[Oe,Ie,Se,Me],queryParameters:[Ce],headerParameters:[ze],requestBody:{parameterPath:["options","parameters"],mapper:le},responses:{200:{bodyMapper:V},default:{bodyMapper:O}},serializer:dr},Pr={httpMethod:"DELETE",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/trustedIdProviders/{trustedIdProviderName}",urlParameters:[Oe,Ie,Se,Me],queryParameters:[Ce],headerParameters:[ze],responses:{200:{},204:{},default:{bodyMapper:O}},serializer:dr},zr={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[be],headerParameters:[ze],responses:{200:{bodyMapper:ye},default:{bodyMapper:O}},serializer:dr},Sr=Object.freeze({OperationListResult:K,Operation:x,OperationDisplay:W,CloudError:O}),Cr=function(){function e(e){this.client=e}return e.prototype.list=function(e,r){return this.client.sendOperationRequest({options:e},fr,r)},e}(),fr={httpMethod:"GET",path:"providers/Microsoft.DataLakeStore/operations",queryParameters:[Ce],headerParameters:[ze],responses:{200:{bodyMapper:K},default:{bodyMapper:O}},serializer:new t.Serializer(Sr)},hr=Object.freeze({CapabilityInformation:j,CloudError:O}),gr=function(){function e(e){this.client=e}return e.prototype.getCapability=function(e,r,t){return this.client.sendOperationRequest({location:e,options:r},wr,t)},e}(),wr={httpMethod:"GET",path:"subscriptions/{subscriptionId}/providers/Microsoft.DataLakeStore/locations/{location}/capability",urlParameters:[Oe,we],queryParameters:[Ce],headerParameters:[ze],responses:{200:{bodyMapper:j},404:{},default:{bodyMapper:O}},serializer:new t.Serializer(hr)},br=function(i){function e(e,r,t){var a=this;if(null==e)throw new Error("'credentials' cannot be null.");if(null==r)throw new Error("'subscriptionId' cannot be null.");return t||(t={}),(a=i.call(this,e,t)||this).apiVersion="2016-11-01",a.acceptLanguage="en-US",a.longRunningOperationRetryTimeout=30,a.baseUri=t.baseUri||a.baseUri||"https://management.azure.com",a.requestContentType="application/json; charset=utf-8",a.credentials=e,a.subscriptionId=r,a.addUserAgentInfo("@azure/arm-datalake-store/1.0.0"),null!==t.acceptLanguage&&void 0!==t.acceptLanguage&&(a.acceptLanguage=t.acceptLanguage),null!==t.longRunningOperationRetryTimeout&&void 0!==t.longRunningOperationRetryTimeout&&(a.longRunningOperationRetryTimeout=t.longRunningOperationRetryTimeout),a}return s(e,i),e}(r.AzureServiceClient),Rr=function(i){function e(e,r,t){var a=i.call(this,e,r,t)||this;return a.accounts=new Ee(a),a.firewallRules=new je(a),a.virtualNetworkRules=new rr(a),a.trustedIdProviders=new mr(a),a.operations=new Cr(a),a.locations=new gr(a),a}return s(e,i),e}(br);e.DataLakeStoreAccountManagementClient=Rr,e.DataLakeStoreAccountManagementClientContext=br,e.DataLakeStoreAccountManagementModels=k,e.DataLakeStoreAccountManagementMappers=Ne,e.Accounts=Ee,e.FirewallRules=je,e.VirtualNetworkRules=rr,e.TrustedIdProviders=mr,e.Operations=Cr,e.Locations=gr,Object.defineProperty(e,"__esModule",{value:!0})});