/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/virtualNetworkRulesMappers";
import * as Parameters from "../models/parameters";
import { DataLakeStoreAccountManagementClientContext } from "../dataLakeStoreAccountManagementClientContext";

/** Class representing a VirtualNetworkRules. */
export class VirtualNetworkRules {
  private readonly client: DataLakeStoreAccountManagementClientContext;

  /**
   * Create a VirtualNetworkRules.
   * @param {DataLakeStoreAccountManagementClientContext} client Reference to the service client.
   */
  constructor(client: DataLakeStoreAccountManagementClientContext) {
    this.client = client;
  }

  /**
   * Lists the Data Lake Store virtual network rules within the specified Data Lake Store account.
   * @param resourceGroupName The name of the Azure resource group.
   * @param accountName The name of the Data Lake Store account.
   * @param [options] The optional parameters
   * @returns Promise<Models.VirtualNetworkRulesListByAccountResponse>
   */
  listByAccount(resourceGroupName: string, accountName: string, options?: msRest.RequestOptionsBase): Promise<Models.VirtualNetworkRulesListByAccountResponse>;
  /**
   * @param resourceGroupName The name of the Azure resource group.
   * @param accountName The name of the Data Lake Store account.
   * @param callback The callback
   */
  listByAccount(resourceGroupName: string, accountName: string, callback: msRest.ServiceCallback<Models.VirtualNetworkRuleListResult>): void;
  /**
   * @param resourceGroupName The name of the Azure resource group.
   * @param accountName The name of the Data Lake Store account.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByAccount(resourceGroupName: string, accountName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.VirtualNetworkRuleListResult>): void;
  listByAccount(resourceGroupName: string, accountName: string, options?: msRest.RequestOptionsBase, callback?: msRest.ServiceCallback<Models.VirtualNetworkRuleListResult>): Promise<Models.VirtualNetworkRulesListByAccountResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        accountName,
        options
      },
      listByAccountOperationSpec,
      callback) as Promise<Models.VirtualNetworkRulesListByAccountResponse>;
  }

  /**
   * Creates or updates the specified virtual network rule. During update, the virtual network rule
   * with the specified name will be replaced with this new virtual network rule.
   * @param resourceGroupName The name of the Azure resource group.
   * @param accountName The name of the Data Lake Store account.
   * @param virtualNetworkRuleName The name of the virtual network rule to create or update.
   * @param parameters Parameters supplied to create or update the virtual network rule.
   * @param [options] The optional parameters
   * @returns Promise<Models.VirtualNetworkRulesCreateOrUpdateResponse>
   */
  createOrUpdate(resourceGroupName: string, accountName: string, virtualNetworkRuleName: string, parameters: Models.CreateOrUpdateVirtualNetworkRuleParameters, options?: msRest.RequestOptionsBase): Promise<Models.VirtualNetworkRulesCreateOrUpdateResponse>;
  /**
   * @param resourceGroupName The name of the Azure resource group.
   * @param accountName The name of the Data Lake Store account.
   * @param virtualNetworkRuleName The name of the virtual network rule to create or update.
   * @param parameters Parameters supplied to create or update the virtual network rule.
   * @param callback The callback
   */
  createOrUpdate(resourceGroupName: string, accountName: string, virtualNetworkRuleName: string, parameters: Models.CreateOrUpdateVirtualNetworkRuleParameters, callback: msRest.ServiceCallback<Models.VirtualNetworkRule>): void;
  /**
   * @param resourceGroupName The name of the Azure resource group.
   * @param accountName The name of the Data Lake Store account.
   * @param virtualNetworkRuleName The name of the virtual network rule to create or update.
   * @param parameters Parameters supplied to create or update the virtual network rule.
   * @param options The optional parameters
   * @param callback The callback
   */
  createOrUpdate(resourceGroupName: string, accountName: string, virtualNetworkRuleName: string, parameters: Models.CreateOrUpdateVirtualNetworkRuleParameters, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.VirtualNetworkRule>): void;
  createOrUpdate(resourceGroupName: string, accountName: string, virtualNetworkRuleName: string, parameters: Models.CreateOrUpdateVirtualNetworkRuleParameters, options?: msRest.RequestOptionsBase, callback?: msRest.ServiceCallback<Models.VirtualNetworkRule>): Promise<Models.VirtualNetworkRulesCreateOrUpdateResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        accountName,
        virtualNetworkRuleName,
        parameters,
        options
      },
      createOrUpdateOperationSpec,
      callback) as Promise<Models.VirtualNetworkRulesCreateOrUpdateResponse>;
  }

  /**
   * Gets the specified Data Lake Store virtual network rule.
   * @param resourceGroupName The name of the Azure resource group.
   * @param accountName The name of the Data Lake Store account.
   * @param virtualNetworkRuleName The name of the virtual network rule to retrieve.
   * @param [options] The optional parameters
   * @returns Promise<Models.VirtualNetworkRulesGetResponse>
   */
  get(resourceGroupName: string, accountName: string, virtualNetworkRuleName: string, options?: msRest.RequestOptionsBase): Promise<Models.VirtualNetworkRulesGetResponse>;
  /**
   * @param resourceGroupName The name of the Azure resource group.
   * @param accountName The name of the Data Lake Store account.
   * @param virtualNetworkRuleName The name of the virtual network rule to retrieve.
   * @param callback The callback
   */
  get(resourceGroupName: string, accountName: string, virtualNetworkRuleName: string, callback: msRest.ServiceCallback<Models.VirtualNetworkRule>): void;
  /**
   * @param resourceGroupName The name of the Azure resource group.
   * @param accountName The name of the Data Lake Store account.
   * @param virtualNetworkRuleName The name of the virtual network rule to retrieve.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(resourceGroupName: string, accountName: string, virtualNetworkRuleName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.VirtualNetworkRule>): void;
  get(resourceGroupName: string, accountName: string, virtualNetworkRuleName: string, options?: msRest.RequestOptionsBase, callback?: msRest.ServiceCallback<Models.VirtualNetworkRule>): Promise<Models.VirtualNetworkRulesGetResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        accountName,
        virtualNetworkRuleName,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.VirtualNetworkRulesGetResponse>;
  }

  /**
   * Updates the specified virtual network rule.
   * @param resourceGroupName The name of the Azure resource group.
   * @param accountName The name of the Data Lake Store account.
   * @param virtualNetworkRuleName The name of the virtual network rule to update.
   * @param [options] The optional parameters
   * @returns Promise<Models.VirtualNetworkRulesUpdateResponse>
   */
  update(resourceGroupName: string, accountName: string, virtualNetworkRuleName: string, options?: Models.VirtualNetworkRulesUpdateOptionalParams): Promise<Models.VirtualNetworkRulesUpdateResponse>;
  /**
   * @param resourceGroupName The name of the Azure resource group.
   * @param accountName The name of the Data Lake Store account.
   * @param virtualNetworkRuleName The name of the virtual network rule to update.
   * @param callback The callback
   */
  update(resourceGroupName: string, accountName: string, virtualNetworkRuleName: string, callback: msRest.ServiceCallback<Models.VirtualNetworkRule>): void;
  /**
   * @param resourceGroupName The name of the Azure resource group.
   * @param accountName The name of the Data Lake Store account.
   * @param virtualNetworkRuleName The name of the virtual network rule to update.
   * @param options The optional parameters
   * @param callback The callback
   */
  update(resourceGroupName: string, accountName: string, virtualNetworkRuleName: string, options: Models.VirtualNetworkRulesUpdateOptionalParams, callback: msRest.ServiceCallback<Models.VirtualNetworkRule>): void;
  update(resourceGroupName: string, accountName: string, virtualNetworkRuleName: string, options?: Models.VirtualNetworkRulesUpdateOptionalParams, callback?: msRest.ServiceCallback<Models.VirtualNetworkRule>): Promise<Models.VirtualNetworkRulesUpdateResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        accountName,
        virtualNetworkRuleName,
        options
      },
      updateOperationSpec,
      callback) as Promise<Models.VirtualNetworkRulesUpdateResponse>;
  }

  /**
   * Deletes the specified virtual network rule from the specified Data Lake Store account.
   * @param resourceGroupName The name of the Azure resource group.
   * @param accountName The name of the Data Lake Store account.
   * @param virtualNetworkRuleName The name of the virtual network rule to delete.
   * @param [options] The optional parameters
   * @returns Promise<msRest.RestResponse>
   */
  deleteMethod(resourceGroupName: string, accountName: string, virtualNetworkRuleName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
  /**
   * @param resourceGroupName The name of the Azure resource group.
   * @param accountName The name of the Data Lake Store account.
   * @param virtualNetworkRuleName The name of the virtual network rule to delete.
   * @param callback The callback
   */
  deleteMethod(resourceGroupName: string, accountName: string, virtualNetworkRuleName: string, callback: msRest.ServiceCallback<void>): void;
  /**
   * @param resourceGroupName The name of the Azure resource group.
   * @param accountName The name of the Data Lake Store account.
   * @param virtualNetworkRuleName The name of the virtual network rule to delete.
   * @param options The optional parameters
   * @param callback The callback
   */
  deleteMethod(resourceGroupName: string, accountName: string, virtualNetworkRuleName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
  deleteMethod(resourceGroupName: string, accountName: string, virtualNetworkRuleName: string, options?: msRest.RequestOptionsBase, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        accountName,
        virtualNetworkRuleName,
        options
      },
      deleteMethodOperationSpec,
      callback);
  }

  /**
   * Lists the Data Lake Store virtual network rules within the specified Data Lake Store account.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.VirtualNetworkRulesListByAccountNextResponse>
   */
  listByAccountNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.VirtualNetworkRulesListByAccountNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listByAccountNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.VirtualNetworkRuleListResult>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByAccountNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.VirtualNetworkRuleListResult>): void;
  listByAccountNext(nextPageLink: string, options?: msRest.RequestOptionsBase, callback?: msRest.ServiceCallback<Models.VirtualNetworkRuleListResult>): Promise<Models.VirtualNetworkRulesListByAccountNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listByAccountNextOperationSpec,
      callback) as Promise<Models.VirtualNetworkRulesListByAccountNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listByAccountOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/virtualNetworkRules",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.accountName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.VirtualNetworkRuleListResult
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const createOrUpdateOperationSpec: msRest.OperationSpec = {
  httpMethod: "PUT",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/virtualNetworkRules/{virtualNetworkRuleName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.accountName,
    Parameters.virtualNetworkRuleName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "parameters",
    mapper: {
      ...Mappers.CreateOrUpdateVirtualNetworkRuleParameters,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.VirtualNetworkRule
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/virtualNetworkRules/{virtualNetworkRuleName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.accountName,
    Parameters.virtualNetworkRuleName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.VirtualNetworkRule
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const updateOperationSpec: msRest.OperationSpec = {
  httpMethod: "PATCH",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/virtualNetworkRules/{virtualNetworkRuleName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.accountName,
    Parameters.virtualNetworkRuleName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: [
      "options",
      "parameters"
    ],
    mapper: Mappers.UpdateVirtualNetworkRuleParameters
  },
  responses: {
    200: {
      bodyMapper: Mappers.VirtualNetworkRule
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const deleteMethodOperationSpec: msRest.OperationSpec = {
  httpMethod: "DELETE",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/virtualNetworkRules/{virtualNetworkRuleName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.accountName,
    Parameters.virtualNetworkRuleName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {},
    204: {},
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listByAccountNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.VirtualNetworkRuleListResult
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};
