/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "ms-rest-js";

export const acceptLanguage: msRest.OperationParameter = {
  parameterPath: "acceptLanguage",
  mapper: {
    serializedName: "accept-language",
    defaultValue: 'en-US',
    type: {
      name: "String"
    }
  }
};
export const accountName: msRest.OperationURLParameter = {
  parameterPath: "accountName",
  mapper: {
    required: true,
    serializedName: "accountName",
    defaultValue: '',
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};
export const aclspec: msRest.OperationQueryParameter = {
  parameterPath: "aclspec",
  mapper: {
    required: true,
    serializedName: "aclspec",
    type: {
      name: "String"
    }
  }
};
export const adlsFileSystemDnsSuffix: msRest.OperationURLParameter = {
  parameterPath: "adlsFileSystemDnsSuffix",
  mapper: {
    required: true,
    serializedName: "adlsFileSystemDnsSuffix",
    defaultValue: 'azuredatalakestore.net',
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};
export const apiVersion: msRest.OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    required: true,
    serializedName: "api-version",
    type: {
      name: "String"
    }
  }
};
export const appendMode: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "appendMode"
  ],
  mapper: {
    serializedName: "appendMode",
    type: {
      name: "Enum",
      allowedValues: [
        "autocreate"
      ]
    }
  }
};
export const appendParameter: msRest.OperationQueryParameter = {
  parameterPath: "appendParameter",
  mapper: {
    required: true,
    isConstant: true,
    serializedName: "append",
    defaultValue: 'true',
    type: {
      name: "String"
    }
  }
};
export const deleteSourceDirectory: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "deleteSourceDirectory"
  ],
  mapper: {
    serializedName: "deleteSourceDirectory",
    type: {
      name: "Boolean"
    }
  }
};
export const destination: msRest.OperationQueryParameter = {
  parameterPath: "destination",
  mapper: {
    required: true,
    serializedName: "destination",
    type: {
      name: "String"
    }
  }
};
export const expireTime: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "expireTime"
  ],
  mapper: {
    serializedName: "expireTime",
    type: {
      name: "Number"
    }
  }
};
export const expiryOption: msRest.OperationQueryParameter = {
  parameterPath: "expiryOption",
  mapper: {
    required: true,
    serializedName: "expiryOption",
    type: {
      name: "Enum",
      allowedValues: [
        "NeverExpire",
        "RelativeToNow",
        "RelativeToCreationDate",
        "Absolute"
      ]
    }
  }
};
export const fileSessionId: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "fileSessionId"
  ],
  mapper: {
    serializedName: "fileSessionId",
    type: {
      name: "Uuid"
    }
  }
};
export const fsaction: msRest.OperationQueryParameter = {
  parameterPath: "fsaction",
  mapper: {
    required: true,
    serializedName: "fsaction",
    type: {
      name: "String"
    }
  }
};
export const group: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "group"
  ],
  mapper: {
    serializedName: "group",
    type: {
      name: "String"
    }
  }
};
export const leaseId: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "leaseId"
  ],
  mapper: {
    serializedName: "leaseId",
    type: {
      name: "Uuid"
    }
  }
};
export const length: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "length"
  ],
  mapper: {
    serializedName: "length",
    type: {
      name: "Number"
    }
  }
};
export const listAfter: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "listAfter"
  ],
  mapper: {
    serializedName: "listAfter",
    type: {
      name: "String"
    }
  }
};
export const listBefore: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "listBefore"
  ],
  mapper: {
    serializedName: "listBefore",
    type: {
      name: "String"
    }
  }
};
export const listSize: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "listSize"
  ],
  mapper: {
    serializedName: "listSize",
    type: {
      name: "Number"
    }
  }
};
export const offset: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "offset"
  ],
  mapper: {
    serializedName: "offset",
    type: {
      name: "Number"
    }
  }
};
export const op0: msRest.OperationQueryParameter = {
  parameterPath: "op",
  mapper: {
    required: true,
    isConstant: true,
    serializedName: "op",
    defaultValue: 'SETEXPIRY',
    type: {
      name: "String"
    }
  }
};
export const op1: msRest.OperationQueryParameter = {
  parameterPath: "op",
  mapper: {
    required: true,
    isConstant: true,
    serializedName: "op",
    defaultValue: 'CONCURRENTAPPEND',
    type: {
      name: "String"
    }
  }
};
export const op10: msRest.OperationQueryParameter = {
  parameterPath: "op",
  mapper: {
    required: true,
    isConstant: true,
    serializedName: "op",
    defaultValue: 'APPEND',
    type: {
      name: "String"
    }
  }
};
export const op11: msRest.OperationQueryParameter = {
  parameterPath: "op",
  mapper: {
    required: true,
    isConstant: true,
    serializedName: "op",
    defaultValue: 'CREATE',
    type: {
      name: "String"
    }
  }
};
export const op12: msRest.OperationQueryParameter = {
  parameterPath: "op",
  mapper: {
    required: true,
    isConstant: true,
    serializedName: "op",
    defaultValue: 'SETACL',
    type: {
      name: "String"
    }
  }
};
export const op13: msRest.OperationQueryParameter = {
  parameterPath: "op",
  mapper: {
    required: true,
    isConstant: true,
    serializedName: "op",
    defaultValue: 'MODIFYACLENTRIES',
    type: {
      name: "String"
    }
  }
};
export const op14: msRest.OperationQueryParameter = {
  parameterPath: "op",
  mapper: {
    required: true,
    isConstant: true,
    serializedName: "op",
    defaultValue: 'REMOVEACLENTRIES',
    type: {
      name: "String"
    }
  }
};
export const op15: msRest.OperationQueryParameter = {
  parameterPath: "op",
  mapper: {
    required: true,
    isConstant: true,
    serializedName: "op",
    defaultValue: 'REMOVEDEFAULTACL',
    type: {
      name: "String"
    }
  }
};
export const op16: msRest.OperationQueryParameter = {
  parameterPath: "op",
  mapper: {
    required: true,
    isConstant: true,
    serializedName: "op",
    defaultValue: 'REMOVEACL',
    type: {
      name: "String"
    }
  }
};
export const op17: msRest.OperationQueryParameter = {
  parameterPath: "op",
  mapper: {
    required: true,
    isConstant: true,
    serializedName: "op",
    defaultValue: 'GETACLSTATUS',
    type: {
      name: "String"
    }
  }
};
export const op18: msRest.OperationQueryParameter = {
  parameterPath: "op",
  mapper: {
    required: true,
    isConstant: true,
    serializedName: "op",
    defaultValue: 'DELETE',
    type: {
      name: "String"
    }
  }
};
export const op19: msRest.OperationQueryParameter = {
  parameterPath: "op",
  mapper: {
    required: true,
    isConstant: true,
    serializedName: "op",
    defaultValue: 'RENAME',
    type: {
      name: "String"
    }
  }
};
export const op2: msRest.OperationQueryParameter = {
  parameterPath: "op",
  mapper: {
    required: true,
    isConstant: true,
    serializedName: "op",
    defaultValue: 'CHECKACCESS',
    type: {
      name: "String"
    }
  }
};
export const op20: msRest.OperationQueryParameter = {
  parameterPath: "op",
  mapper: {
    required: true,
    isConstant: true,
    serializedName: "op",
    defaultValue: 'SETOWNER',
    type: {
      name: "String"
    }
  }
};
export const op21: msRest.OperationQueryParameter = {
  parameterPath: "op",
  mapper: {
    required: true,
    isConstant: true,
    serializedName: "op",
    defaultValue: 'SETPERMISSION',
    type: {
      name: "String"
    }
  }
};
export const op3: msRest.OperationQueryParameter = {
  parameterPath: "op",
  mapper: {
    required: true,
    isConstant: true,
    serializedName: "op",
    defaultValue: 'MKDIRS',
    type: {
      name: "String"
    }
  }
};
export const op4: msRest.OperationQueryParameter = {
  parameterPath: "op",
  mapper: {
    required: true,
    isConstant: true,
    serializedName: "op",
    defaultValue: 'CONCAT',
    type: {
      name: "String"
    }
  }
};
export const op5: msRest.OperationQueryParameter = {
  parameterPath: "op",
  mapper: {
    required: true,
    isConstant: true,
    serializedName: "op",
    defaultValue: 'MSCONCAT',
    type: {
      name: "String"
    }
  }
};
export const op6: msRest.OperationQueryParameter = {
  parameterPath: "op",
  mapper: {
    required: true,
    isConstant: true,
    serializedName: "op",
    defaultValue: 'LISTSTATUS',
    type: {
      name: "String"
    }
  }
};
export const op7: msRest.OperationQueryParameter = {
  parameterPath: "op",
  mapper: {
    required: true,
    isConstant: true,
    serializedName: "op",
    defaultValue: 'GETCONTENTSUMMARY',
    type: {
      name: "String"
    }
  }
};
export const op8: msRest.OperationQueryParameter = {
  parameterPath: "op",
  mapper: {
    required: true,
    isConstant: true,
    serializedName: "op",
    defaultValue: 'GETFILESTATUS',
    type: {
      name: "String"
    }
  }
};
export const op9: msRest.OperationQueryParameter = {
  parameterPath: "op",
  mapper: {
    required: true,
    isConstant: true,
    serializedName: "op",
    defaultValue: 'OPEN',
    type: {
      name: "String"
    }
  }
};
export const overwrite: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "overwrite"
  ],
  mapper: {
    serializedName: "overwrite",
    type: {
      name: "Boolean"
    }
  }
};
export const owner: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "owner"
  ],
  mapper: {
    serializedName: "owner",
    type: {
      name: "String"
    }
  }
};
export const path: msRest.OperationURLParameter = {
  parameterPath: "path",
  mapper: {
    required: true,
    serializedName: "path",
    type: {
      name: "String"
    }
  }
};
export const permission0: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "permission"
  ],
  mapper: {
    serializedName: "permission",
    type: {
      name: "Number"
    }
  }
};
export const permission1: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "permission"
  ],
  mapper: {
    serializedName: "permission",
    type: {
      name: "String"
    }
  }
};
export const read: msRest.OperationQueryParameter = {
  parameterPath: "read",
  mapper: {
    required: true,
    isConstant: true,
    serializedName: "read",
    defaultValue: 'true',
    type: {
      name: "String"
    }
  }
};
export const recursive: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "recursive"
  ],
  mapper: {
    serializedName: "recursive",
    type: {
      name: "Boolean"
    }
  }
};
export const sources: msRest.OperationQueryParameter = {
  parameterPath: "sources",
  mapper: {
    required: true,
    serializedName: "sources",
    type: {
      name: "Sequence",
      element: {
        type: {
          name: "String"
        }
      }
    }
  },
  collectionFormat: msRest.QueryCollectionFormat.Csv
};
export const syncFlag0: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "syncFlag"
  ],
  mapper: {
    serializedName: "syncFlag",
    defaultValue: 'DATA',
    type: {
      name: "Enum",
      allowedValues: [
        "DATA",
        "METADATA",
        "CLOSE"
      ]
    }
  }
};
export const syncFlag1: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "syncFlag"
  ],
  mapper: {
    serializedName: "syncFlag",
    defaultValue: 'CLOSE',
    type: {
      name: "Enum",
      allowedValues: [
        "DATA",
        "METADATA",
        "CLOSE"
      ]
    }
  }
};
export const tooId: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "tooId"
  ],
  mapper: {
    serializedName: "tooId",
    type: {
      name: "Boolean"
    }
  }
};
export const transferEncoding: msRest.OperationParameter = {
  parameterPath: "transferEncoding",
  mapper: {
    required: true,
    isConstant: true,
    serializedName: "Transfer-Encoding",
    defaultValue: 'chunked',
    type: {
      name: "String"
    }
  }
};
export const write: msRest.OperationQueryParameter = {
  parameterPath: "write",
  mapper: {
    required: true,
    isConstant: true,
    serializedName: "write",
    defaultValue: 'true',
    type: {
      name: "String"
    }
  }
};
