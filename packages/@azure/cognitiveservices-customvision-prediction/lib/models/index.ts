/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";


/**
 * @interface
 * An interface representing ImageUrl.
 * Image url.
 *
 */
export interface ImageUrl {
  /**
   * @member {string} [url] Url of the image.
   */
  url?: string;
}

/**
 * @interface
 * An interface representing BoundingBox.
 * Bounding box that defines a region of an image.
 *
 */
export interface BoundingBox {
  /**
   * @member {number} [left] Coordinate of the left boundary.
   */
  left?: number;
  /**
   * @member {number} [top] Coordinate of the top boundary.
   */
  top?: number;
  /**
   * @member {number} [width] Width.
   */
  width?: number;
  /**
   * @member {number} [height] Height.
   */
  height?: number;
}

/**
 * @interface
 * An interface representing Prediction.
 * Prediction result.
 *
 */
export interface Prediction {
  /**
   * @member {number} [probability] Probability of the tag.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly probability?: number;
  /**
   * @member {string} [tagId] Id of the predicted tag.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly tagId?: string;
  /**
   * @member {string} [tagName] Name of the predicted tag.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly tagName?: string;
  /**
   * @member {BoundingBox} [boundingBox] Bounding box of the prediction.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly boundingBox?: BoundingBox;
}

/**
 * @interface
 * An interface representing ImagePrediction.
 * Result of an image prediction request.
 *
 */
export interface ImagePrediction {
  /**
   * @member {string} [id] Prediction Id.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [project] Project Id.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly project?: string;
  /**
   * @member {string} [iteration] Iteration Id.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly iteration?: string;
  /**
   * @member {Date} [created] Date this prediction was created.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly created?: Date;
  /**
   * @member {Prediction[]} [predictions] List of predictions.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly predictions?: Prediction[];
}

/**
 * @interface
 * An interface representing CustomVisionError.
 */
export interface CustomVisionError {
  /**
   * @member {Code} code Possible values include: 'NoError', 'BadRequest',
   * 'BadRequestExceededBatchSize', 'BadRequestNotSupported',
   * 'BadRequestInvalidIds', 'BadRequestProjectName',
   * 'BadRequestProjectNameNotUnique', 'BadRequestProjectDescription',
   * 'BadRequestProjectUnknownDomain',
   * 'BadRequestProjectUnknownClassification',
   * 'BadRequestProjectUnsupportedDomainTypeChange', 'BadRequestIterationName',
   * 'BadRequestIterationNameNotUnique', 'BadRequestIterationDescription',
   * 'BadRequestIterationIsNotTrained', 'BadRequestWorkspaceCannotBeModified',
   * 'BadRequestWorkspaceNotDeletable', 'BadRequestTagName',
   * 'BadRequestTagNameNotUnique', 'BadRequestTagDescription',
   * 'BadRequestTagType', 'BadRequestMultipleNegativeTag',
   * 'BadRequestImageTags', 'BadRequestImageRegions',
   * 'BadRequestNegativeAndRegularTagOnSameImage',
   * 'BadRequestIterationIsPublished', 'BadRequestInvalidPublishName',
   * 'BadRequestSubscriptionApi', 'BadRequestPublishFailed',
   * 'BadRequestUnpublishFailed', 'BadRequestExceedProjectLimit',
   * 'BadRequestExceedIterationPerProjectLimit',
   * 'BadRequestExceedTagPerProjectLimit', 'BadRequestExceedTagPerImageLimit',
   * 'BadRequestExceededQuota', 'BadRequestCannotMigrateProjectWithName',
   * 'BadRequestNotLimitedTrial', 'BadRequestImageBatch',
   * 'BadRequestImageStream', 'BadRequestImageUrl', 'BadRequestImageFormat',
   * 'BadRequestImageSizeBytes', 'BadRequestImageExceededCount',
   * 'BadRequestTrainingNotNeeded', 'BadRequestTrainingValidationFailed',
   * 'BadRequestClassificationTrainingValidationFailed',
   * 'BadRequestMultiClassClassificationTrainingValidationFailed',
   * 'BadRequestMultiLabelClassificationTrainingValidationFailed',
   * 'BadRequestDetectionTrainingValidationFailed',
   * 'BadRequestTrainingAlreadyInProgress', 'BadRequestExportValidationFailed',
   * 'BadRequestExportAlreadyInProgress', 'BadRequestPredictionIdsMissing',
   * 'BadRequestPredictionIdsExceededCount',
   * 'BadRequestPredictionTagsExceededCount',
   * 'BadRequestPredictionResultsExceededCount',
   * 'BadRequestPredictionInvalidApplicationName',
   * 'BadRequestPredictionInvalidQueryParameters', 'BadRequestInvalid',
   * 'UnsupportedMediaType', 'Forbidden', 'ForbiddenUser',
   * 'ForbiddenUserResource', 'ForbiddenUserSignupDisabled',
   * 'ForbiddenUserSignupAllowanceExceeded', 'ForbiddenUserDoesNotExist',
   * 'ForbiddenUserDisabled', 'ForbiddenUserInsufficientCapability',
   * 'ForbiddenInvalid', 'NotFound', 'NotFoundProject',
   * 'NotFoundProjectDefaultIteration', 'NotFoundIteration',
   * 'NotFoundIterationPerformance', 'NotFoundTag', 'NotFoundImage',
   * 'NotFoundDomain', 'NotFoundApimSubscription', 'NotFoundInvalid',
   * 'Conflict', 'ConflictInvalid', 'ErrorUnknown',
   * 'ErrorProjectInvalidWorkspace',
   * 'ErrorProjectInvalidPipelineConfiguration', 'ErrorProjectInvalidDomain',
   * 'ErrorProjectTrainingRequestFailed', 'ErrorProjectExportRequestFailed',
   * 'ErrorFeaturizationServiceUnavailable', 'ErrorFeaturizationQueueTimeout',
   * 'ErrorFeaturizationInvalidFeaturizer',
   * 'ErrorFeaturizationAugmentationUnavailable',
   * 'ErrorFeaturizationUnrecognizedJob',
   * 'ErrorFeaturizationAugmentationError', 'ErrorExporterInvalidPlatform',
   * 'ErrorExporterInvalidFeaturizer', 'ErrorExporterInvalidClassifier',
   * 'ErrorPredictionServiceUnavailable', 'ErrorPredictionModelNotFound',
   * 'ErrorPredictionModelNotCached', 'ErrorPrediction',
   * 'ErrorPredictionStorage', 'ErrorRegionProposal', 'ErrorInvalid'
   */
  code: Code;
  /**
   * @member {string} message
   */
  message: string;
}

/**
 * @interface
 * An interface representing PredictionAPIClientClassifyImageUrlOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface PredictionAPIClientClassifyImageUrlOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [application] Optional. Specifies the name of application
   * using the endpoint.
   */
  application?: string;
}

/**
 * @interface
 * An interface representing PredictionAPIClientClassifyImageOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface PredictionAPIClientClassifyImageOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [application] Optional. Specifies the name of application
   * using the endpoint.
   */
  application?: string;
}

/**
 * @interface
 * An interface representing PredictionAPIClientClassifyImageUrlWithNoStoreOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface PredictionAPIClientClassifyImageUrlWithNoStoreOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [application] Optional. Specifies the name of application
   * using the endpoint.
   */
  application?: string;
}

/**
 * @interface
 * An interface representing PredictionAPIClientClassifyImageWithNoStoreOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface PredictionAPIClientClassifyImageWithNoStoreOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [application] Optional. Specifies the name of application
   * using the endpoint.
   */
  application?: string;
}

/**
 * @interface
 * An interface representing PredictionAPIClientDetectImageUrlOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface PredictionAPIClientDetectImageUrlOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [application] Optional. Specifies the name of application
   * using the endpoint.
   */
  application?: string;
}

/**
 * @interface
 * An interface representing PredictionAPIClientDetectImageOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface PredictionAPIClientDetectImageOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [application] Optional. Specifies the name of application
   * using the endpoint.
   */
  application?: string;
}

/**
 * @interface
 * An interface representing PredictionAPIClientDetectImageUrlWithNoStoreOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface PredictionAPIClientDetectImageUrlWithNoStoreOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [application] Optional. Specifies the name of application
   * using the endpoint.
   */
  application?: string;
}

/**
 * @interface
 * An interface representing PredictionAPIClientDetectImageWithNoStoreOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface PredictionAPIClientDetectImageWithNoStoreOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [application] Optional. Specifies the name of application
   * using the endpoint.
   */
  application?: string;
}

/**
 * Defines values for Code.
 * Possible values include: 'NoError', 'BadRequest', 'BadRequestExceededBatchSize',
 * 'BadRequestNotSupported', 'BadRequestInvalidIds', 'BadRequestProjectName',
 * 'BadRequestProjectNameNotUnique', 'BadRequestProjectDescription',
 * 'BadRequestProjectUnknownDomain', 'BadRequestProjectUnknownClassification',
 * 'BadRequestProjectUnsupportedDomainTypeChange', 'BadRequestIterationName',
 * 'BadRequestIterationNameNotUnique', 'BadRequestIterationDescription',
 * 'BadRequestIterationIsNotTrained', 'BadRequestWorkspaceCannotBeModified',
 * 'BadRequestWorkspaceNotDeletable', 'BadRequestTagName', 'BadRequestTagNameNotUnique',
 * 'BadRequestTagDescription', 'BadRequestTagType', 'BadRequestMultipleNegativeTag',
 * 'BadRequestImageTags', 'BadRequestImageRegions', 'BadRequestNegativeAndRegularTagOnSameImage',
 * 'BadRequestIterationIsPublished', 'BadRequestInvalidPublishName', 'BadRequestSubscriptionApi',
 * 'BadRequestPublishFailed', 'BadRequestUnpublishFailed', 'BadRequestExceedProjectLimit',
 * 'BadRequestExceedIterationPerProjectLimit', 'BadRequestExceedTagPerProjectLimit',
 * 'BadRequestExceedTagPerImageLimit', 'BadRequestExceededQuota',
 * 'BadRequestCannotMigrateProjectWithName', 'BadRequestNotLimitedTrial', 'BadRequestImageBatch',
 * 'BadRequestImageStream', 'BadRequestImageUrl', 'BadRequestImageFormat',
 * 'BadRequestImageSizeBytes', 'BadRequestImageExceededCount', 'BadRequestTrainingNotNeeded',
 * 'BadRequestTrainingValidationFailed', 'BadRequestClassificationTrainingValidationFailed',
 * 'BadRequestMultiClassClassificationTrainingValidationFailed',
 * 'BadRequestMultiLabelClassificationTrainingValidationFailed',
 * 'BadRequestDetectionTrainingValidationFailed', 'BadRequestTrainingAlreadyInProgress',
 * 'BadRequestExportValidationFailed', 'BadRequestExportAlreadyInProgress',
 * 'BadRequestPredictionIdsMissing', 'BadRequestPredictionIdsExceededCount',
 * 'BadRequestPredictionTagsExceededCount', 'BadRequestPredictionResultsExceededCount',
 * 'BadRequestPredictionInvalidApplicationName', 'BadRequestPredictionInvalidQueryParameters',
 * 'BadRequestInvalid', 'UnsupportedMediaType', 'Forbidden', 'ForbiddenUser',
 * 'ForbiddenUserResource', 'ForbiddenUserSignupDisabled', 'ForbiddenUserSignupAllowanceExceeded',
 * 'ForbiddenUserDoesNotExist', 'ForbiddenUserDisabled', 'ForbiddenUserInsufficientCapability',
 * 'ForbiddenInvalid', 'NotFound', 'NotFoundProject', 'NotFoundProjectDefaultIteration',
 * 'NotFoundIteration', 'NotFoundIterationPerformance', 'NotFoundTag', 'NotFoundImage',
 * 'NotFoundDomain', 'NotFoundApimSubscription', 'NotFoundInvalid', 'Conflict', 'ConflictInvalid',
 * 'ErrorUnknown', 'ErrorProjectInvalidWorkspace', 'ErrorProjectInvalidPipelineConfiguration',
 * 'ErrorProjectInvalidDomain', 'ErrorProjectTrainingRequestFailed',
 * 'ErrorProjectExportRequestFailed', 'ErrorFeaturizationServiceUnavailable',
 * 'ErrorFeaturizationQueueTimeout', 'ErrorFeaturizationInvalidFeaturizer',
 * 'ErrorFeaturizationAugmentationUnavailable', 'ErrorFeaturizationUnrecognizedJob',
 * 'ErrorFeaturizationAugmentationError', 'ErrorExporterInvalidPlatform',
 * 'ErrorExporterInvalidFeaturizer', 'ErrorExporterInvalidClassifier',
 * 'ErrorPredictionServiceUnavailable', 'ErrorPredictionModelNotFound',
 * 'ErrorPredictionModelNotCached', 'ErrorPrediction', 'ErrorPredictionStorage',
 * 'ErrorRegionProposal', 'ErrorInvalid'
 * @readonly
 * @enum {string}
 */
export type Code = 'NoError' | 'BadRequest' | 'BadRequestExceededBatchSize' | 'BadRequestNotSupported' | 'BadRequestInvalidIds' | 'BadRequestProjectName' | 'BadRequestProjectNameNotUnique' | 'BadRequestProjectDescription' | 'BadRequestProjectUnknownDomain' | 'BadRequestProjectUnknownClassification' | 'BadRequestProjectUnsupportedDomainTypeChange' | 'BadRequestIterationName' | 'BadRequestIterationNameNotUnique' | 'BadRequestIterationDescription' | 'BadRequestIterationIsNotTrained' | 'BadRequestWorkspaceCannotBeModified' | 'BadRequestWorkspaceNotDeletable' | 'BadRequestTagName' | 'BadRequestTagNameNotUnique' | 'BadRequestTagDescription' | 'BadRequestTagType' | 'BadRequestMultipleNegativeTag' | 'BadRequestImageTags' | 'BadRequestImageRegions' | 'BadRequestNegativeAndRegularTagOnSameImage' | 'BadRequestIterationIsPublished' | 'BadRequestInvalidPublishName' | 'BadRequestSubscriptionApi' | 'BadRequestPublishFailed' | 'BadRequestUnpublishFailed' | 'BadRequestExceedProjectLimit' | 'BadRequestExceedIterationPerProjectLimit' | 'BadRequestExceedTagPerProjectLimit' | 'BadRequestExceedTagPerImageLimit' | 'BadRequestExceededQuota' | 'BadRequestCannotMigrateProjectWithName' | 'BadRequestNotLimitedTrial' | 'BadRequestImageBatch' | 'BadRequestImageStream' | 'BadRequestImageUrl' | 'BadRequestImageFormat' | 'BadRequestImageSizeBytes' | 'BadRequestImageExceededCount' | 'BadRequestTrainingNotNeeded' | 'BadRequestTrainingValidationFailed' | 'BadRequestClassificationTrainingValidationFailed' | 'BadRequestMultiClassClassificationTrainingValidationFailed' | 'BadRequestMultiLabelClassificationTrainingValidationFailed' | 'BadRequestDetectionTrainingValidationFailed' | 'BadRequestTrainingAlreadyInProgress' | 'BadRequestExportValidationFailed' | 'BadRequestExportAlreadyInProgress' | 'BadRequestPredictionIdsMissing' | 'BadRequestPredictionIdsExceededCount' | 'BadRequestPredictionTagsExceededCount' | 'BadRequestPredictionResultsExceededCount' | 'BadRequestPredictionInvalidApplicationName' | 'BadRequestPredictionInvalidQueryParameters' | 'BadRequestInvalid' | 'UnsupportedMediaType' | 'Forbidden' | 'ForbiddenUser' | 'ForbiddenUserResource' | 'ForbiddenUserSignupDisabled' | 'ForbiddenUserSignupAllowanceExceeded' | 'ForbiddenUserDoesNotExist' | 'ForbiddenUserDisabled' | 'ForbiddenUserInsufficientCapability' | 'ForbiddenInvalid' | 'NotFound' | 'NotFoundProject' | 'NotFoundProjectDefaultIteration' | 'NotFoundIteration' | 'NotFoundIterationPerformance' | 'NotFoundTag' | 'NotFoundImage' | 'NotFoundDomain' | 'NotFoundApimSubscription' | 'NotFoundInvalid' | 'Conflict' | 'ConflictInvalid' | 'ErrorUnknown' | 'ErrorProjectInvalidWorkspace' | 'ErrorProjectInvalidPipelineConfiguration' | 'ErrorProjectInvalidDomain' | 'ErrorProjectTrainingRequestFailed' | 'ErrorProjectExportRequestFailed' | 'ErrorFeaturizationServiceUnavailable' | 'ErrorFeaturizationQueueTimeout' | 'ErrorFeaturizationInvalidFeaturizer' | 'ErrorFeaturizationAugmentationUnavailable' | 'ErrorFeaturizationUnrecognizedJob' | 'ErrorFeaturizationAugmentationError' | 'ErrorExporterInvalidPlatform' | 'ErrorExporterInvalidFeaturizer' | 'ErrorExporterInvalidClassifier' | 'ErrorPredictionServiceUnavailable' | 'ErrorPredictionModelNotFound' | 'ErrorPredictionModelNotCached' | 'ErrorPrediction' | 'ErrorPredictionStorage' | 'ErrorRegionProposal' | 'ErrorInvalid';

/**
 * Contains response data for the classifyImageUrl operation.
 */
export type ClassifyImageUrlResponse = ImagePrediction & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ImagePrediction;
    };
};

/**
 * Contains response data for the classifyImage operation.
 */
export type ClassifyImageResponse = ImagePrediction & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ImagePrediction;
    };
};

/**
 * Contains response data for the classifyImageUrlWithNoStore operation.
 */
export type ClassifyImageUrlWithNoStoreResponse = ImagePrediction & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ImagePrediction;
    };
};

/**
 * Contains response data for the classifyImageWithNoStore operation.
 */
export type ClassifyImageWithNoStoreResponse = ImagePrediction & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ImagePrediction;
    };
};

/**
 * Contains response data for the detectImageUrl operation.
 */
export type DetectImageUrlResponse = ImagePrediction & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ImagePrediction;
    };
};

/**
 * Contains response data for the detectImage operation.
 */
export type DetectImageResponse = ImagePrediction & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ImagePrediction;
    };
};

/**
 * Contains response data for the detectImageUrlWithNoStore operation.
 */
export type DetectImageUrlWithNoStoreResponse = ImagePrediction & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ImagePrediction;
    };
};

/**
 * Contains response data for the detectImageWithNoStore operation.
 */
export type DetectImageWithNoStoreResponse = ImagePrediction & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ImagePrediction;
    };
};
