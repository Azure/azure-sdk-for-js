/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "./models";
import * as Mappers from "./models/mappers";
import * as operations from "./operations";
import { DevTestLabsClientContext } from "./devTestLabsClientContext";


class DevTestLabsClient extends DevTestLabsClientContext {
  // Operation groups
  providerOperations: operations.ProviderOperations;
  labs: operations.Labs;
  operations: operations.Operations;
  globalSchedules: operations.GlobalSchedules;
  artifactSources: operations.ArtifactSources;
  armTemplates: operations.ArmTemplates;
  artifacts: operations.Artifacts;
  costs: operations.Costs;
  customImages: operations.CustomImages;
  formulas: operations.Formulas;
  galleryImages: operations.GalleryImages;
  notificationChannels: operations.NotificationChannels;
  policySets: operations.PolicySets;
  policies: operations.Policies;
  schedules: operations.Schedules;
  serviceRunners: operations.ServiceRunners;
  users: operations.Users;
  disks: operations.Disks;
  environments: operations.Environments;
  secrets: operations.Secrets;
  serviceFabrics: operations.ServiceFabrics;
  serviceFabricSchedules: operations.ServiceFabricSchedules;
  virtualMachines: operations.VirtualMachines;
  virtualMachineSchedules: operations.VirtualMachineSchedules;
  virtualNetworks: operations.VirtualNetworks;

  /**
   * Initializes a new instance of the DevTestLabsClient class.
   * @param credentials Credentials needed for the client to connect to Azure.
   * @param subscriptionId The subscription ID.
   * @param [options] The parameter options
   */
  constructor(credentials: msRest.ServiceClientCredentials, subscriptionId: string, options?: Models.DevTestLabsClientOptions) {
    super(credentials, subscriptionId, options);
    this.providerOperations = new operations.ProviderOperations(this);
    this.labs = new operations.Labs(this);
    this.operations = new operations.Operations(this);
    this.globalSchedules = new operations.GlobalSchedules(this);
    this.artifactSources = new operations.ArtifactSources(this);
    this.armTemplates = new operations.ArmTemplates(this);
    this.artifacts = new operations.Artifacts(this);
    this.costs = new operations.Costs(this);
    this.customImages = new operations.CustomImages(this);
    this.formulas = new operations.Formulas(this);
    this.galleryImages = new operations.GalleryImages(this);
    this.notificationChannels = new operations.NotificationChannels(this);
    this.policySets = new operations.PolicySets(this);
    this.policies = new operations.Policies(this);
    this.schedules = new operations.Schedules(this);
    this.serviceRunners = new operations.ServiceRunners(this);
    this.users = new operations.Users(this);
    this.disks = new operations.Disks(this);
    this.environments = new operations.Environments(this);
    this.secrets = new operations.Secrets(this);
    this.serviceFabrics = new operations.ServiceFabrics(this);
    this.serviceFabricSchedules = new operations.ServiceFabricSchedules(this);
    this.virtualMachines = new operations.VirtualMachines(this);
    this.virtualMachineSchedules = new operations.VirtualMachineSchedules(this);
    this.virtualNetworks = new operations.VirtualNetworks(this);
  }
}

// Operation Specifications

export {
  DevTestLabsClient,
  DevTestLabsClientContext,
  Models as DevTestLabsModels,
  Mappers as DevTestLabsMappers
};
export * from "./operations";
