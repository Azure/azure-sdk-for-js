/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { CloudErrorMapper, BaseResourceMapper } from "ms-rest-azure-js";
import * as msRest from "ms-rest-js";

export const CloudError = CloudErrorMapper;
export const BaseResource = BaseResourceMapper;

export const WeekDetails: msRest.CompositeMapper = {
  serializedName: "WeekDetails",
  type: {
    name: "Composite",
    className: "WeekDetails",
    modelProperties: {
      weekdays: {
        serializedName: "weekdays",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      time: {
        serializedName: "time",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DayDetails: msRest.CompositeMapper = {
  serializedName: "DayDetails",
  type: {
    name: "Composite",
    className: "DayDetails",
    modelProperties: {
      time: {
        serializedName: "time",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const HourDetails: msRest.CompositeMapper = {
  serializedName: "HourDetails",
  type: {
    name: "Composite",
    className: "HourDetails",
    modelProperties: {
      minute: {
        serializedName: "minute",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const NotificationSettings: msRest.CompositeMapper = {
  serializedName: "NotificationSettings",
  type: {
    name: "Composite",
    className: "NotificationSettings",
    modelProperties: {
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      timeInMinutes: {
        serializedName: "timeInMinutes",
        type: {
          name: "Number"
        }
      },
      webhookUrl: {
        serializedName: "webhookUrl",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Resource: msRest.CompositeMapper = {
  serializedName: "Resource",
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Schedule: msRest.CompositeMapper = {
  serializedName: "Schedule",
  type: {
    name: "Composite",
    className: "Schedule",
    modelProperties: {
      ...Resource.type.modelProperties,
      status: {
        serializedName: "properties.status",
        type: {
          name: "String"
        }
      },
      taskType: {
        serializedName: "properties.taskType",
        type: {
          name: "String"
        }
      },
      weeklyRecurrence: {
        serializedName: "properties.weeklyRecurrence",
        type: {
          name: "Composite",
          className: "WeekDetails"
        }
      },
      dailyRecurrence: {
        serializedName: "properties.dailyRecurrence",
        type: {
          name: "Composite",
          className: "DayDetails"
        }
      },
      hourlyRecurrence: {
        serializedName: "properties.hourlyRecurrence",
        type: {
          name: "Composite",
          className: "HourDetails"
        }
      },
      timeZoneId: {
        serializedName: "properties.timeZoneId",
        type: {
          name: "String"
        }
      },
      notificationSettings: {
        serializedName: "properties.notificationSettings",
        type: {
          name: "Composite",
          className: "NotificationSettings"
        }
      },
      createdDate: {
        readOnly: true,
        serializedName: "properties.createdDate",
        type: {
          name: "DateTime"
        }
      },
      targetResourceId: {
        serializedName: "properties.targetResourceId",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      uniqueIdentifier: {
        serializedName: "properties.uniqueIdentifier",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApplicableSchedule: msRest.CompositeMapper = {
  serializedName: "ApplicableSchedule",
  type: {
    name: "Composite",
    className: "ApplicableSchedule",
    modelProperties: {
      ...Resource.type.modelProperties,
      labVmsShutdown: {
        serializedName: "properties.labVmsShutdown",
        type: {
          name: "Composite",
          className: "Schedule"
        }
      },
      labVmsStartup: {
        serializedName: "properties.labVmsStartup",
        type: {
          name: "Composite",
          className: "Schedule"
        }
      }
    }
  }
};

export const WeekDetailsFragment: msRest.CompositeMapper = {
  serializedName: "WeekDetailsFragment",
  type: {
    name: "Composite",
    className: "WeekDetailsFragment",
    modelProperties: {
      weekdays: {
        serializedName: "weekdays",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      time: {
        serializedName: "time",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DayDetailsFragment: msRest.CompositeMapper = {
  serializedName: "DayDetailsFragment",
  type: {
    name: "Composite",
    className: "DayDetailsFragment",
    modelProperties: {
      time: {
        serializedName: "time",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const HourDetailsFragment: msRest.CompositeMapper = {
  serializedName: "HourDetailsFragment",
  type: {
    name: "Composite",
    className: "HourDetailsFragment",
    modelProperties: {
      minute: {
        serializedName: "minute",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const NotificationSettingsFragment: msRest.CompositeMapper = {
  serializedName: "NotificationSettingsFragment",
  type: {
    name: "Composite",
    className: "NotificationSettingsFragment",
    modelProperties: {
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      timeInMinutes: {
        serializedName: "timeInMinutes",
        type: {
          name: "Number"
        }
      },
      webhookUrl: {
        serializedName: "webhookUrl",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ScheduleFragment: msRest.CompositeMapper = {
  serializedName: "ScheduleFragment",
  type: {
    name: "Composite",
    className: "ScheduleFragment",
    modelProperties: {
      ...Resource.type.modelProperties,
      status: {
        serializedName: "properties.status",
        type: {
          name: "String"
        }
      },
      taskType: {
        serializedName: "properties.taskType",
        type: {
          name: "String"
        }
      },
      weeklyRecurrence: {
        serializedName: "properties.weeklyRecurrence",
        type: {
          name: "Composite",
          className: "WeekDetailsFragment"
        }
      },
      dailyRecurrence: {
        serializedName: "properties.dailyRecurrence",
        type: {
          name: "Composite",
          className: "DayDetailsFragment"
        }
      },
      hourlyRecurrence: {
        serializedName: "properties.hourlyRecurrence",
        type: {
          name: "Composite",
          className: "HourDetailsFragment"
        }
      },
      timeZoneId: {
        serializedName: "properties.timeZoneId",
        type: {
          name: "String"
        }
      },
      notificationSettings: {
        serializedName: "properties.notificationSettings",
        type: {
          name: "Composite",
          className: "NotificationSettingsFragment"
        }
      },
      targetResourceId: {
        serializedName: "properties.targetResourceId",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      uniqueIdentifier: {
        serializedName: "properties.uniqueIdentifier",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApplicableScheduleFragment: msRest.CompositeMapper = {
  serializedName: "ApplicableScheduleFragment",
  type: {
    name: "Composite",
    className: "ApplicableScheduleFragment",
    modelProperties: {
      ...Resource.type.modelProperties,
      labVmsShutdown: {
        serializedName: "properties.labVmsShutdown",
        type: {
          name: "Composite",
          className: "ScheduleFragment"
        }
      },
      labVmsStartup: {
        serializedName: "properties.labVmsStartup",
        type: {
          name: "Composite",
          className: "ScheduleFragment"
        }
      }
    }
  }
};

export const ArtifactParameterProperties: msRest.CompositeMapper = {
  serializedName: "ArtifactParameterProperties",
  type: {
    name: "Composite",
    className: "ArtifactParameterProperties",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ArtifactInstallProperties: msRest.CompositeMapper = {
  serializedName: "ArtifactInstallProperties",
  type: {
    name: "Composite",
    className: "ArtifactInstallProperties",
    modelProperties: {
      artifactId: {
        serializedName: "artifactId",
        type: {
          name: "String"
        }
      },
      parameters: {
        serializedName: "parameters",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ArtifactParameterProperties"
            }
          }
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      deploymentStatusMessage: {
        serializedName: "deploymentStatusMessage",
        type: {
          name: "String"
        }
      },
      vmExtensionStatusMessage: {
        serializedName: "vmExtensionStatusMessage",
        type: {
          name: "String"
        }
      },
      installTime: {
        serializedName: "installTime",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const ApplyArtifactsRequest: msRest.CompositeMapper = {
  serializedName: "ApplyArtifactsRequest",
  type: {
    name: "Composite",
    className: "ApplyArtifactsRequest",
    modelProperties: {
      artifacts: {
        serializedName: "artifacts",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ArtifactInstallProperties"
            }
          }
        }
      }
    }
  }
};

export const ParametersValueFileInfo: msRest.CompositeMapper = {
  serializedName: "ParametersValueFileInfo",
  type: {
    name: "Composite",
    className: "ParametersValueFileInfo",
    modelProperties: {
      fileName: {
        serializedName: "fileName",
        type: {
          name: "String"
        }
      },
      parametersValueInfo: {
        serializedName: "parametersValueInfo",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const ArmTemplate: msRest.CompositeMapper = {
  serializedName: "ArmTemplate",
  type: {
    name: "Composite",
    className: "ArmTemplate",
    modelProperties: {
      ...Resource.type.modelProperties,
      displayName: {
        readOnly: true,
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      description: {
        readOnly: true,
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      publisher: {
        readOnly: true,
        serializedName: "properties.publisher",
        type: {
          name: "String"
        }
      },
      icon: {
        readOnly: true,
        serializedName: "properties.icon",
        type: {
          name: "String"
        }
      },
      contents: {
        readOnly: true,
        serializedName: "properties.contents",
        type: {
          name: "Object"
        }
      },
      createdDate: {
        readOnly: true,
        serializedName: "properties.createdDate",
        type: {
          name: "DateTime"
        }
      },
      parametersValueFilesInfo: {
        readOnly: true,
        serializedName: "properties.parametersValueFilesInfo",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ParametersValueFileInfo"
            }
          }
        }
      }
    }
  }
};

export const ArmTemplateInfo: msRest.CompositeMapper = {
  serializedName: "ArmTemplateInfo",
  type: {
    name: "Composite",
    className: "ArmTemplateInfo",
    modelProperties: {
      template: {
        serializedName: "template",
        type: {
          name: "Object"
        }
      },
      parameters: {
        serializedName: "parameters",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const ArmTemplateParameterProperties: msRest.CompositeMapper = {
  serializedName: "ArmTemplateParameterProperties",
  type: {
    name: "Composite",
    className: "ArmTemplateParameterProperties",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Artifact: msRest.CompositeMapper = {
  serializedName: "Artifact",
  type: {
    name: "Composite",
    className: "Artifact",
    modelProperties: {
      ...Resource.type.modelProperties,
      title: {
        readOnly: true,
        serializedName: "properties.title",
        type: {
          name: "String"
        }
      },
      description: {
        readOnly: true,
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      publisher: {
        readOnly: true,
        serializedName: "properties.publisher",
        type: {
          name: "String"
        }
      },
      filePath: {
        readOnly: true,
        serializedName: "properties.filePath",
        type: {
          name: "String"
        }
      },
      icon: {
        readOnly: true,
        serializedName: "properties.icon",
        type: {
          name: "String"
        }
      },
      targetOsType: {
        readOnly: true,
        serializedName: "properties.targetOsType",
        type: {
          name: "String"
        }
      },
      parameters: {
        readOnly: true,
        serializedName: "properties.parameters",
        type: {
          name: "Object"
        }
      },
      createdDate: {
        readOnly: true,
        serializedName: "properties.createdDate",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const ArtifactDeploymentStatusProperties: msRest.CompositeMapper = {
  serializedName: "ArtifactDeploymentStatusProperties",
  type: {
    name: "Composite",
    className: "ArtifactDeploymentStatusProperties",
    modelProperties: {
      deploymentStatus: {
        serializedName: "deploymentStatus",
        type: {
          name: "String"
        }
      },
      artifactsApplied: {
        serializedName: "artifactsApplied",
        type: {
          name: "Number"
        }
      },
      totalArtifacts: {
        serializedName: "totalArtifacts",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ArtifactDeploymentStatusPropertiesFragment: msRest.CompositeMapper = {
  serializedName: "ArtifactDeploymentStatusPropertiesFragment",
  type: {
    name: "Composite",
    className: "ArtifactDeploymentStatusPropertiesFragment",
    modelProperties: {
      deploymentStatus: {
        serializedName: "deploymentStatus",
        type: {
          name: "String"
        }
      },
      artifactsApplied: {
        serializedName: "artifactsApplied",
        type: {
          name: "Number"
        }
      },
      totalArtifacts: {
        serializedName: "totalArtifacts",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ArtifactParameterPropertiesFragment: msRest.CompositeMapper = {
  serializedName: "ArtifactParameterPropertiesFragment",
  type: {
    name: "Composite",
    className: "ArtifactParameterPropertiesFragment",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ArtifactInstallPropertiesFragment: msRest.CompositeMapper = {
  serializedName: "ArtifactInstallPropertiesFragment",
  type: {
    name: "Composite",
    className: "ArtifactInstallPropertiesFragment",
    modelProperties: {
      artifactId: {
        serializedName: "artifactId",
        type: {
          name: "String"
        }
      },
      parameters: {
        serializedName: "parameters",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ArtifactParameterPropertiesFragment"
            }
          }
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      deploymentStatusMessage: {
        serializedName: "deploymentStatusMessage",
        type: {
          name: "String"
        }
      },
      vmExtensionStatusMessage: {
        serializedName: "vmExtensionStatusMessage",
        type: {
          name: "String"
        }
      },
      installTime: {
        serializedName: "installTime",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const ArtifactSource: msRest.CompositeMapper = {
  serializedName: "ArtifactSource",
  type: {
    name: "Composite",
    className: "ArtifactSource",
    modelProperties: {
      ...Resource.type.modelProperties,
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      uri: {
        serializedName: "properties.uri",
        type: {
          name: "String"
        }
      },
      sourceType: {
        serializedName: "properties.sourceType",
        type: {
          name: "String"
        }
      },
      folderPath: {
        serializedName: "properties.folderPath",
        type: {
          name: "String"
        }
      },
      armTemplateFolderPath: {
        serializedName: "properties.armTemplateFolderPath",
        type: {
          name: "String"
        }
      },
      branchRef: {
        serializedName: "properties.branchRef",
        type: {
          name: "String"
        }
      },
      securityToken: {
        serializedName: "properties.securityToken",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "properties.status",
        type: {
          name: "String"
        }
      },
      createdDate: {
        readOnly: true,
        serializedName: "properties.createdDate",
        type: {
          name: "DateTime"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      uniqueIdentifier: {
        serializedName: "properties.uniqueIdentifier",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ArtifactSourceFragment: msRest.CompositeMapper = {
  serializedName: "ArtifactSourceFragment",
  type: {
    name: "Composite",
    className: "ArtifactSourceFragment",
    modelProperties: {
      ...Resource.type.modelProperties,
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      uri: {
        serializedName: "properties.uri",
        type: {
          name: "String"
        }
      },
      sourceType: {
        serializedName: "properties.sourceType",
        type: {
          name: "String"
        }
      },
      folderPath: {
        serializedName: "properties.folderPath",
        type: {
          name: "String"
        }
      },
      armTemplateFolderPath: {
        serializedName: "properties.armTemplateFolderPath",
        type: {
          name: "String"
        }
      },
      branchRef: {
        serializedName: "properties.branchRef",
        type: {
          name: "String"
        }
      },
      securityToken: {
        serializedName: "properties.securityToken",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "properties.status",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      uniqueIdentifier: {
        serializedName: "properties.uniqueIdentifier",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AttachDiskProperties: msRest.CompositeMapper = {
  serializedName: "AttachDiskProperties",
  type: {
    name: "Composite",
    className: "AttachDiskProperties",
    modelProperties: {
      leasedByLabVmId: {
        serializedName: "leasedByLabVmId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AttachNewDataDiskOptions: msRest.CompositeMapper = {
  serializedName: "AttachNewDataDiskOptions",
  type: {
    name: "Composite",
    className: "AttachNewDataDiskOptions",
    modelProperties: {
      diskSizeGiB: {
        serializedName: "diskSizeGiB",
        type: {
          name: "Number"
        }
      },
      diskName: {
        serializedName: "diskName",
        type: {
          name: "String"
        }
      },
      diskType: {
        serializedName: "diskType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BulkCreationParameters: msRest.CompositeMapper = {
  serializedName: "BulkCreationParameters",
  type: {
    name: "Composite",
    className: "BulkCreationParameters",
    modelProperties: {
      instanceCount: {
        serializedName: "instanceCount",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ComputeDataDisk: msRest.CompositeMapper = {
  serializedName: "ComputeDataDisk",
  type: {
    name: "Composite",
    className: "ComputeDataDisk",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      diskUri: {
        serializedName: "diskUri",
        type: {
          name: "String"
        }
      },
      managedDiskId: {
        serializedName: "managedDiskId",
        type: {
          name: "String"
        }
      },
      diskSizeGiB: {
        serializedName: "diskSizeGiB",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ComputeDataDiskFragment: msRest.CompositeMapper = {
  serializedName: "ComputeDataDiskFragment",
  type: {
    name: "Composite",
    className: "ComputeDataDiskFragment",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      diskUri: {
        serializedName: "diskUri",
        type: {
          name: "String"
        }
      },
      managedDiskId: {
        serializedName: "managedDiskId",
        type: {
          name: "String"
        }
      },
      diskSizeGiB: {
        serializedName: "diskSizeGiB",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ComputeVmInstanceViewStatus: msRest.CompositeMapper = {
  serializedName: "ComputeVmInstanceViewStatus",
  type: {
    name: "Composite",
    className: "ComputeVmInstanceViewStatus",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      displayStatus: {
        serializedName: "displayStatus",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ComputeVmInstanceViewStatusFragment: msRest.CompositeMapper = {
  serializedName: "ComputeVmInstanceViewStatusFragment",
  type: {
    name: "Composite",
    className: "ComputeVmInstanceViewStatusFragment",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      displayStatus: {
        serializedName: "displayStatus",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ComputeVmProperties: msRest.CompositeMapper = {
  serializedName: "ComputeVmProperties",
  type: {
    name: "Composite",
    className: "ComputeVmProperties",
    modelProperties: {
      statuses: {
        serializedName: "statuses",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ComputeVmInstanceViewStatus"
            }
          }
        }
      },
      osType: {
        serializedName: "osType",
        type: {
          name: "String"
        }
      },
      vmSize: {
        serializedName: "vmSize",
        type: {
          name: "String"
        }
      },
      networkInterfaceId: {
        serializedName: "networkInterfaceId",
        type: {
          name: "String"
        }
      },
      osDiskId: {
        serializedName: "osDiskId",
        type: {
          name: "String"
        }
      },
      dataDiskIds: {
        serializedName: "dataDiskIds",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      dataDisks: {
        serializedName: "dataDisks",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ComputeDataDisk"
            }
          }
        }
      }
    }
  }
};

export const ComputeVmPropertiesFragment: msRest.CompositeMapper = {
  serializedName: "ComputeVmPropertiesFragment",
  type: {
    name: "Composite",
    className: "ComputeVmPropertiesFragment",
    modelProperties: {
      statuses: {
        serializedName: "statuses",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ComputeVmInstanceViewStatusFragment"
            }
          }
        }
      },
      osType: {
        serializedName: "osType",
        type: {
          name: "String"
        }
      },
      vmSize: {
        serializedName: "vmSize",
        type: {
          name: "String"
        }
      },
      networkInterfaceId: {
        serializedName: "networkInterfaceId",
        type: {
          name: "String"
        }
      },
      osDiskId: {
        serializedName: "osDiskId",
        type: {
          name: "String"
        }
      },
      dataDiskIds: {
        serializedName: "dataDiskIds",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      dataDisks: {
        serializedName: "dataDisks",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ComputeDataDiskFragment"
            }
          }
        }
      }
    }
  }
};

export const PercentageCostThresholdProperties: msRest.CompositeMapper = {
  serializedName: "PercentageCostThresholdProperties",
  type: {
    name: "Composite",
    className: "PercentageCostThresholdProperties",
    modelProperties: {
      thresholdValue: {
        serializedName: "thresholdValue",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const CostThresholdProperties: msRest.CompositeMapper = {
  serializedName: "CostThresholdProperties",
  type: {
    name: "Composite",
    className: "CostThresholdProperties",
    modelProperties: {
      thresholdId: {
        serializedName: "thresholdId",
        type: {
          name: "String"
        }
      },
      percentageThreshold: {
        serializedName: "percentageThreshold",
        type: {
          name: "Composite",
          className: "PercentageCostThresholdProperties"
        }
      },
      displayOnChart: {
        serializedName: "displayOnChart",
        type: {
          name: "String"
        }
      },
      sendNotificationWhenExceeded: {
        serializedName: "sendNotificationWhenExceeded",
        type: {
          name: "String"
        }
      },
      notificationSent: {
        serializedName: "notificationSent",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WindowsOsInfo: msRest.CompositeMapper = {
  serializedName: "WindowsOsInfo",
  type: {
    name: "Composite",
    className: "WindowsOsInfo",
    modelProperties: {
      windowsOsState: {
        serializedName: "windowsOsState",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LinuxOsInfo: msRest.CompositeMapper = {
  serializedName: "LinuxOsInfo",
  type: {
    name: "Composite",
    className: "LinuxOsInfo",
    modelProperties: {
      linuxOsState: {
        serializedName: "linuxOsState",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CustomImagePropertiesFromVm: msRest.CompositeMapper = {
  serializedName: "CustomImagePropertiesFromVm",
  type: {
    name: "Composite",
    className: "CustomImagePropertiesFromVm",
    modelProperties: {
      sourceVmId: {
        serializedName: "sourceVmId",
        type: {
          name: "String"
        }
      },
      windowsOsInfo: {
        serializedName: "windowsOsInfo",
        type: {
          name: "Composite",
          className: "WindowsOsInfo"
        }
      },
      linuxOsInfo: {
        serializedName: "linuxOsInfo",
        type: {
          name: "Composite",
          className: "LinuxOsInfo"
        }
      }
    }
  }
};

export const CustomImagePropertiesCustom: msRest.CompositeMapper = {
  serializedName: "CustomImagePropertiesCustom",
  type: {
    name: "Composite",
    className: "CustomImagePropertiesCustom",
    modelProperties: {
      imageName: {
        serializedName: "imageName",
        type: {
          name: "String"
        }
      },
      sysPrep: {
        serializedName: "sysPrep",
        type: {
          name: "Boolean"
        }
      },
      osType: {
        required: true,
        serializedName: "osType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CustomImage: msRest.CompositeMapper = {
  serializedName: "CustomImage",
  type: {
    name: "Composite",
    className: "CustomImage",
    modelProperties: {
      ...Resource.type.modelProperties,
      vm: {
        serializedName: "properties.vm",
        type: {
          name: "Composite",
          className: "CustomImagePropertiesFromVm"
        }
      },
      vhd: {
        serializedName: "properties.vhd",
        type: {
          name: "Composite",
          className: "CustomImagePropertiesCustom"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      author: {
        serializedName: "properties.author",
        type: {
          name: "String"
        }
      },
      creationDate: {
        readOnly: true,
        serializedName: "properties.creationDate",
        type: {
          name: "DateTime"
        }
      },
      managedImageId: {
        serializedName: "properties.managedImageId",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      uniqueIdentifier: {
        serializedName: "properties.uniqueIdentifier",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DataDiskProperties: msRest.CompositeMapper = {
  serializedName: "DataDiskProperties",
  type: {
    name: "Composite",
    className: "DataDiskProperties",
    modelProperties: {
      attachNewDataDiskOptions: {
        serializedName: "attachNewDataDiskOptions",
        type: {
          name: "Composite",
          className: "AttachNewDataDiskOptions"
        }
      },
      existingLabDiskId: {
        serializedName: "existingLabDiskId",
        type: {
          name: "String"
        }
      },
      hostCaching: {
        serializedName: "hostCaching",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DetachDataDiskProperties: msRest.CompositeMapper = {
  serializedName: "DetachDataDiskProperties",
  type: {
    name: "Composite",
    className: "DetachDataDiskProperties",
    modelProperties: {
      existingLabDiskId: {
        serializedName: "existingLabDiskId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DetachDiskProperties: msRest.CompositeMapper = {
  serializedName: "DetachDiskProperties",
  type: {
    name: "Composite",
    className: "DetachDiskProperties",
    modelProperties: {
      leasedByLabVmId: {
        serializedName: "leasedByLabVmId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Disk: msRest.CompositeMapper = {
  serializedName: "Disk",
  type: {
    name: "Composite",
    className: "Disk",
    modelProperties: {
      ...Resource.type.modelProperties,
      diskType: {
        serializedName: "properties.diskType",
        type: {
          name: "String"
        }
      },
      diskSizeGiB: {
        serializedName: "properties.diskSizeGiB",
        type: {
          name: "Number"
        }
      },
      leasedByLabVmId: {
        serializedName: "properties.leasedByLabVmId",
        type: {
          name: "String"
        }
      },
      diskBlobName: {
        serializedName: "properties.diskBlobName",
        type: {
          name: "String"
        }
      },
      diskUri: {
        serializedName: "properties.diskUri",
        type: {
          name: "String"
        }
      },
      createdDate: {
        readOnly: true,
        serializedName: "properties.createdDate",
        type: {
          name: "DateTime"
        }
      },
      hostCaching: {
        serializedName: "properties.hostCaching",
        type: {
          name: "String"
        }
      },
      managedDiskId: {
        serializedName: "properties.managedDiskId",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      uniqueIdentifier: {
        serializedName: "properties.uniqueIdentifier",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EnvironmentDeploymentProperties: msRest.CompositeMapper = {
  serializedName: "EnvironmentDeploymentProperties",
  type: {
    name: "Composite",
    className: "EnvironmentDeploymentProperties",
    modelProperties: {
      armTemplateId: {
        serializedName: "armTemplateId",
        type: {
          name: "String"
        }
      },
      parameters: {
        serializedName: "parameters",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ArmTemplateParameterProperties"
            }
          }
        }
      }
    }
  }
};

export const DtlEnvironment: msRest.CompositeMapper = {
  serializedName: "DtlEnvironment",
  type: {
    name: "Composite",
    className: "DtlEnvironment",
    modelProperties: {
      ...Resource.type.modelProperties,
      deploymentProperties: {
        serializedName: "properties.deploymentProperties",
        type: {
          name: "Composite",
          className: "EnvironmentDeploymentProperties"
        }
      },
      armTemplateDisplayName: {
        serializedName: "properties.armTemplateDisplayName",
        type: {
          name: "String"
        }
      },
      resourceGroupId: {
        readOnly: true,
        serializedName: "properties.resourceGroupId",
        type: {
          name: "String"
        }
      },
      createdByUser: {
        readOnly: true,
        serializedName: "properties.createdByUser",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      uniqueIdentifier: {
        serializedName: "properties.uniqueIdentifier",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EvaluatePoliciesProperties: msRest.CompositeMapper = {
  serializedName: "EvaluatePoliciesProperties",
  type: {
    name: "Composite",
    className: "EvaluatePoliciesProperties",
    modelProperties: {
      factName: {
        serializedName: "factName",
        type: {
          name: "String"
        }
      },
      factData: {
        serializedName: "factData",
        type: {
          name: "String"
        }
      },
      valueOffset: {
        serializedName: "valueOffset",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EvaluatePoliciesRequest: msRest.CompositeMapper = {
  serializedName: "EvaluatePoliciesRequest",
  type: {
    name: "Composite",
    className: "EvaluatePoliciesRequest",
    modelProperties: {
      policies: {
        serializedName: "policies",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EvaluatePoliciesProperties"
            }
          }
        }
      }
    }
  }
};

export const PolicyViolation: msRest.CompositeMapper = {
  serializedName: "PolicyViolation",
  type: {
    name: "Composite",
    className: "PolicyViolation",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PolicySetResult: msRest.CompositeMapper = {
  serializedName: "PolicySetResult",
  type: {
    name: "Composite",
    className: "PolicySetResult",
    modelProperties: {
      hasError: {
        serializedName: "hasError",
        type: {
          name: "Boolean"
        }
      },
      policyViolations: {
        serializedName: "policyViolations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PolicyViolation"
            }
          }
        }
      }
    }
  }
};

export const EvaluatePoliciesResponse: msRest.CompositeMapper = {
  serializedName: "EvaluatePoliciesResponse",
  type: {
    name: "Composite",
    className: "EvaluatePoliciesResponse",
    modelProperties: {
      results: {
        serializedName: "results",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PolicySetResult"
            }
          }
        }
      }
    }
  }
};

export const Event: msRest.CompositeMapper = {
  serializedName: "Event",
  type: {
    name: "Composite",
    className: "Event",
    modelProperties: {
      eventName: {
        serializedName: "eventName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EventFragment: msRest.CompositeMapper = {
  serializedName: "EventFragment",
  type: {
    name: "Composite",
    className: "EventFragment",
    modelProperties: {
      eventName: {
        serializedName: "eventName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ExportResourceUsageParameters: msRest.CompositeMapper = {
  serializedName: "ExportResourceUsageParameters",
  type: {
    name: "Composite",
    className: "ExportResourceUsageParameters",
    modelProperties: {
      blobStorageAbsoluteSasUri: {
        serializedName: "blobStorageAbsoluteSasUri",
        type: {
          name: "String"
        }
      },
      usageStartDate: {
        serializedName: "usageStartDate",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const ExternalSubnet: msRest.CompositeMapper = {
  serializedName: "ExternalSubnet",
  type: {
    name: "Composite",
    className: "ExternalSubnet",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ExternalSubnetFragment: msRest.CompositeMapper = {
  serializedName: "ExternalSubnetFragment",
  type: {
    name: "Composite",
    className: "ExternalSubnetFragment",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GalleryImageReference: msRest.CompositeMapper = {
  serializedName: "GalleryImageReference",
  type: {
    name: "Composite",
    className: "GalleryImageReference",
    modelProperties: {
      offer: {
        serializedName: "offer",
        type: {
          name: "String"
        }
      },
      publisher: {
        serializedName: "publisher",
        type: {
          name: "String"
        }
      },
      sku: {
        serializedName: "sku",
        type: {
          name: "String"
        }
      },
      osType: {
        serializedName: "osType",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const InboundNatRule: msRest.CompositeMapper = {
  serializedName: "InboundNatRule",
  type: {
    name: "Composite",
    className: "InboundNatRule",
    modelProperties: {
      transportProtocol: {
        serializedName: "transportProtocol",
        type: {
          name: "String"
        }
      },
      frontendPort: {
        serializedName: "frontendPort",
        type: {
          name: "Number"
        }
      },
      backendPort: {
        serializedName: "backendPort",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const SharedPublicIpAddressConfiguration: msRest.CompositeMapper = {
  serializedName: "SharedPublicIpAddressConfiguration",
  type: {
    name: "Composite",
    className: "SharedPublicIpAddressConfiguration",
    modelProperties: {
      inboundNatRules: {
        serializedName: "inboundNatRules",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "InboundNatRule"
            }
          }
        }
      }
    }
  }
};

export const NetworkInterfaceProperties: msRest.CompositeMapper = {
  serializedName: "NetworkInterfaceProperties",
  type: {
    name: "Composite",
    className: "NetworkInterfaceProperties",
    modelProperties: {
      virtualNetworkId: {
        serializedName: "virtualNetworkId",
        type: {
          name: "String"
        }
      },
      subnetId: {
        serializedName: "subnetId",
        type: {
          name: "String"
        }
      },
      publicIpAddressId: {
        serializedName: "publicIpAddressId",
        type: {
          name: "String"
        }
      },
      publicIpAddress: {
        serializedName: "publicIpAddress",
        type: {
          name: "String"
        }
      },
      privateIpAddress: {
        serializedName: "privateIpAddress",
        type: {
          name: "String"
        }
      },
      dnsName: {
        serializedName: "dnsName",
        type: {
          name: "String"
        }
      },
      rdpAuthority: {
        serializedName: "rdpAuthority",
        type: {
          name: "String"
        }
      },
      sshAuthority: {
        serializedName: "sshAuthority",
        type: {
          name: "String"
        }
      },
      sharedPublicIpAddressConfiguration: {
        serializedName: "sharedPublicIpAddressConfiguration",
        type: {
          name: "Composite",
          className: "SharedPublicIpAddressConfiguration"
        }
      }
    }
  }
};

export const LabVirtualMachineCreationParameter: msRest.CompositeMapper = {
  serializedName: "LabVirtualMachineCreationParameter",
  type: {
    name: "Composite",
    className: "LabVirtualMachineCreationParameter",
    modelProperties: {
      bulkCreationParameters: {
        serializedName: "properties.bulkCreationParameters",
        type: {
          name: "Composite",
          className: "BulkCreationParameters"
        }
      },
      notes: {
        serializedName: "properties.notes",
        type: {
          name: "String"
        }
      },
      ownerObjectId: {
        serializedName: "properties.ownerObjectId",
        type: {
          name: "String"
        }
      },
      ownerUserPrincipalName: {
        serializedName: "properties.ownerUserPrincipalName",
        type: {
          name: "String"
        }
      },
      createdByUserId: {
        serializedName: "properties.createdByUserId",
        type: {
          name: "String"
        }
      },
      createdByUser: {
        serializedName: "properties.createdByUser",
        type: {
          name: "String"
        }
      },
      createdDate: {
        serializedName: "properties.createdDate",
        type: {
          name: "DateTime"
        }
      },
      customImageId: {
        serializedName: "properties.customImageId",
        type: {
          name: "String"
        }
      },
      osType: {
        serializedName: "properties.osType",
        type: {
          name: "String"
        }
      },
      size: {
        serializedName: "properties.size",
        type: {
          name: "String"
        }
      },
      userName: {
        serializedName: "properties.userName",
        type: {
          name: "String"
        }
      },
      password: {
        serializedName: "properties.password",
        type: {
          name: "String"
        }
      },
      sshKey: {
        serializedName: "properties.sshKey",
        type: {
          name: "String"
        }
      },
      isAuthenticationWithSshKey: {
        serializedName: "properties.isAuthenticationWithSshKey",
        type: {
          name: "Boolean"
        }
      },
      fqdn: {
        serializedName: "properties.fqdn",
        type: {
          name: "String"
        }
      },
      labSubnetName: {
        serializedName: "properties.labSubnetName",
        type: {
          name: "String"
        }
      },
      labVirtualNetworkId: {
        serializedName: "properties.labVirtualNetworkId",
        type: {
          name: "String"
        }
      },
      disallowPublicIpAddress: {
        serializedName: "properties.disallowPublicIpAddress",
        type: {
          name: "Boolean"
        }
      },
      artifacts: {
        serializedName: "properties.artifacts",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ArtifactInstallProperties"
            }
          }
        }
      },
      artifactDeploymentStatus: {
        serializedName: "properties.artifactDeploymentStatus",
        type: {
          name: "Composite",
          className: "ArtifactDeploymentStatusProperties"
        }
      },
      galleryImageReference: {
        serializedName: "properties.galleryImageReference",
        type: {
          name: "Composite",
          className: "GalleryImageReference"
        }
      },
      computeVm: {
        serializedName: "properties.computeVm",
        type: {
          name: "Composite",
          className: "ComputeVmProperties"
        }
      },
      networkInterface: {
        serializedName: "properties.networkInterface",
        type: {
          name: "Composite",
          className: "NetworkInterfaceProperties"
        }
      },
      applicableSchedule: {
        serializedName: "properties.applicableSchedule",
        type: {
          name: "Composite",
          className: "ApplicableSchedule"
        }
      },
      expirationDate: {
        serializedName: "properties.expirationDate",
        type: {
          name: "DateTime"
        }
      },
      allowClaim: {
        serializedName: "properties.allowClaim",
        type: {
          name: "Boolean"
        }
      },
      storageType: {
        serializedName: "properties.storageType",
        type: {
          name: "String"
        }
      },
      virtualMachineCreationSource: {
        serializedName: "properties.virtualMachineCreationSource",
        type: {
          name: "String"
        }
      },
      environmentId: {
        serializedName: "properties.environmentId",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      uniqueIdentifier: {
        serializedName: "properties.uniqueIdentifier",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const FormulaPropertiesFromVm: msRest.CompositeMapper = {
  serializedName: "FormulaPropertiesFromVm",
  type: {
    name: "Composite",
    className: "FormulaPropertiesFromVm",
    modelProperties: {
      labVmId: {
        serializedName: "labVmId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Formula: msRest.CompositeMapper = {
  serializedName: "Formula",
  type: {
    name: "Composite",
    className: "Formula",
    modelProperties: {
      ...Resource.type.modelProperties,
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      author: {
        serializedName: "properties.author",
        type: {
          name: "String"
        }
      },
      osType: {
        serializedName: "properties.osType",
        type: {
          name: "String"
        }
      },
      creationDate: {
        readOnly: true,
        serializedName: "properties.creationDate",
        type: {
          name: "DateTime"
        }
      },
      formulaContent: {
        serializedName: "properties.formulaContent",
        type: {
          name: "Composite",
          className: "LabVirtualMachineCreationParameter"
        }
      },
      vm: {
        serializedName: "properties.vm",
        type: {
          name: "Composite",
          className: "FormulaPropertiesFromVm"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      uniqueIdentifier: {
        serializedName: "properties.uniqueIdentifier",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GalleryImage: msRest.CompositeMapper = {
  serializedName: "GalleryImage",
  type: {
    name: "Composite",
    className: "GalleryImage",
    modelProperties: {
      ...Resource.type.modelProperties,
      author: {
        serializedName: "properties.author",
        type: {
          name: "String"
        }
      },
      createdDate: {
        readOnly: true,
        serializedName: "properties.createdDate",
        type: {
          name: "DateTime"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      imageReference: {
        serializedName: "properties.imageReference",
        type: {
          name: "Composite",
          className: "GalleryImageReference"
        }
      },
      icon: {
        serializedName: "properties.icon",
        type: {
          name: "String"
        }
      },
      enabled: {
        serializedName: "properties.enabled",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const GalleryImageReferenceFragment: msRest.CompositeMapper = {
  serializedName: "GalleryImageReferenceFragment",
  type: {
    name: "Composite",
    className: "GalleryImageReferenceFragment",
    modelProperties: {
      offer: {
        serializedName: "offer",
        type: {
          name: "String"
        }
      },
      publisher: {
        serializedName: "publisher",
        type: {
          name: "String"
        }
      },
      sku: {
        serializedName: "sku",
        type: {
          name: "String"
        }
      },
      osType: {
        serializedName: "osType",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ParameterInfo: msRest.CompositeMapper = {
  serializedName: "ParameterInfo",
  type: {
    name: "Composite",
    className: "ParameterInfo",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GenerateArmTemplateRequest: msRest.CompositeMapper = {
  serializedName: "GenerateArmTemplateRequest",
  type: {
    name: "Composite",
    className: "GenerateArmTemplateRequest",
    modelProperties: {
      virtualMachineName: {
        serializedName: "virtualMachineName",
        type: {
          name: "String"
        }
      },
      parameters: {
        serializedName: "parameters",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ParameterInfo"
            }
          }
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      fileUploadOptions: {
        serializedName: "fileUploadOptions",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GenerateUploadUriParameter: msRest.CompositeMapper = {
  serializedName: "GenerateUploadUriParameter",
  type: {
    name: "Composite",
    className: "GenerateUploadUriParameter",
    modelProperties: {
      blobName: {
        serializedName: "blobName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GenerateUploadUriResponse: msRest.CompositeMapper = {
  serializedName: "GenerateUploadUriResponse",
  type: {
    name: "Composite",
    className: "GenerateUploadUriResponse",
    modelProperties: {
      uploadUri: {
        serializedName: "uploadUri",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IdentityProperties: msRest.CompositeMapper = {
  serializedName: "IdentityProperties",
  type: {
    name: "Composite",
    className: "IdentityProperties",
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      principalId: {
        serializedName: "principalId",
        type: {
          name: "String"
        }
      },
      tenantId: {
        serializedName: "tenantId",
        type: {
          name: "String"
        }
      },
      clientSecretUrl: {
        serializedName: "clientSecretUrl",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const InboundNatRuleFragment: msRest.CompositeMapper = {
  serializedName: "InboundNatRuleFragment",
  type: {
    name: "Composite",
    className: "InboundNatRuleFragment",
    modelProperties: {
      transportProtocol: {
        serializedName: "transportProtocol",
        type: {
          name: "String"
        }
      },
      frontendPort: {
        serializedName: "frontendPort",
        type: {
          name: "Number"
        }
      },
      backendPort: {
        serializedName: "backendPort",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Lab: msRest.CompositeMapper = {
  serializedName: "Lab",
  type: {
    name: "Composite",
    className: "Lab",
    modelProperties: {
      ...Resource.type.modelProperties,
      defaultStorageAccount: {
        readOnly: true,
        serializedName: "properties.defaultStorageAccount",
        type: {
          name: "String"
        }
      },
      defaultPremiumStorageAccount: {
        readOnly: true,
        serializedName: "properties.defaultPremiumStorageAccount",
        type: {
          name: "String"
        }
      },
      artifactsStorageAccount: {
        readOnly: true,
        serializedName: "properties.artifactsStorageAccount",
        type: {
          name: "String"
        }
      },
      premiumDataDiskStorageAccount: {
        readOnly: true,
        serializedName: "properties.premiumDataDiskStorageAccount",
        type: {
          name: "String"
        }
      },
      vaultName: {
        readOnly: true,
        serializedName: "properties.vaultName",
        type: {
          name: "String"
        }
      },
      labStorageType: {
        serializedName: "properties.labStorageType",
        type: {
          name: "String"
        }
      },
      createdDate: {
        readOnly: true,
        serializedName: "properties.createdDate",
        type: {
          name: "DateTime"
        }
      },
      premiumDataDisks: {
        serializedName: "properties.premiumDataDisks",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      uniqueIdentifier: {
        serializedName: "properties.uniqueIdentifier",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TargetCostProperties: msRest.CompositeMapper = {
  serializedName: "TargetCostProperties",
  type: {
    name: "Composite",
    className: "TargetCostProperties",
    modelProperties: {
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        type: {
          name: "Number"
        }
      },
      costThresholds: {
        serializedName: "costThresholds",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CostThresholdProperties"
            }
          }
        }
      },
      cycleStartDateTime: {
        serializedName: "cycleStartDateTime",
        type: {
          name: "DateTime"
        }
      },
      cycleEndDateTime: {
        serializedName: "cycleEndDateTime",
        type: {
          name: "DateTime"
        }
      },
      cycleType: {
        serializedName: "cycleType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LabCostSummaryProperties: msRest.CompositeMapper = {
  serializedName: "LabCostSummaryProperties",
  type: {
    name: "Composite",
    className: "LabCostSummaryProperties",
    modelProperties: {
      estimatedLabCost: {
        serializedName: "estimatedLabCost",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const LabCostDetailsProperties: msRest.CompositeMapper = {
  serializedName: "LabCostDetailsProperties",
  type: {
    name: "Composite",
    className: "LabCostDetailsProperties",
    modelProperties: {
      date: {
        serializedName: "date",
        type: {
          name: "DateTime"
        }
      },
      cost: {
        serializedName: "cost",
        type: {
          name: "Number"
        }
      },
      costType: {
        serializedName: "costType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LabResourceCostProperties: msRest.CompositeMapper = {
  serializedName: "LabResourceCostProperties",
  type: {
    name: "Composite",
    className: "LabResourceCostProperties",
    modelProperties: {
      resourcename: {
        serializedName: "resourcename",
        type: {
          name: "String"
        }
      },
      resourceUId: {
        serializedName: "resourceUId",
        type: {
          name: "String"
        }
      },
      resourceCost: {
        serializedName: "resourceCost",
        type: {
          name: "Number"
        }
      },
      resourceType: {
        serializedName: "resourceType",
        type: {
          name: "String"
        }
      },
      resourceOwner: {
        serializedName: "resourceOwner",
        type: {
          name: "String"
        }
      },
      resourcePricingTier: {
        serializedName: "resourcePricingTier",
        type: {
          name: "String"
        }
      },
      resourceStatus: {
        serializedName: "resourceStatus",
        type: {
          name: "String"
        }
      },
      resourceId: {
        serializedName: "resourceId",
        type: {
          name: "String"
        }
      },
      externalResourceId: {
        serializedName: "externalResourceId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LabCost: msRest.CompositeMapper = {
  serializedName: "LabCost",
  type: {
    name: "Composite",
    className: "LabCost",
    modelProperties: {
      ...Resource.type.modelProperties,
      targetCost: {
        serializedName: "properties.targetCost",
        type: {
          name: "Composite",
          className: "TargetCostProperties"
        }
      },
      labCostSummary: {
        readOnly: true,
        serializedName: "properties.labCostSummary",
        type: {
          name: "Composite",
          className: "LabCostSummaryProperties"
        }
      },
      labCostDetails: {
        readOnly: true,
        serializedName: "properties.labCostDetails",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "LabCostDetailsProperties"
            }
          }
        }
      },
      resourceCosts: {
        readOnly: true,
        serializedName: "properties.resourceCosts",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "LabResourceCostProperties"
            }
          }
        }
      },
      currencyCode: {
        serializedName: "properties.currencyCode",
        type: {
          name: "String"
        }
      },
      startDateTime: {
        serializedName: "properties.startDateTime",
        type: {
          name: "DateTime"
        }
      },
      endDateTime: {
        serializedName: "properties.endDateTime",
        type: {
          name: "DateTime"
        }
      },
      createdDate: {
        serializedName: "properties.createdDate",
        type: {
          name: "DateTime"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      uniqueIdentifier: {
        serializedName: "properties.uniqueIdentifier",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LabFragment: msRest.CompositeMapper = {
  serializedName: "LabFragment",
  type: {
    name: "Composite",
    className: "LabFragment",
    modelProperties: {
      ...Resource.type.modelProperties,
      labStorageType: {
        serializedName: "properties.labStorageType",
        type: {
          name: "String"
        }
      },
      premiumDataDisks: {
        serializedName: "properties.premiumDataDisks",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      uniqueIdentifier: {
        serializedName: "properties.uniqueIdentifier",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LabVhd: msRest.CompositeMapper = {
  serializedName: "LabVhd",
  type: {
    name: "Composite",
    className: "LabVhd",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LabVirtualMachine: msRest.CompositeMapper = {
  serializedName: "LabVirtualMachine",
  type: {
    name: "Composite",
    className: "LabVirtualMachine",
    modelProperties: {
      ...Resource.type.modelProperties,
      notes: {
        serializedName: "properties.notes",
        type: {
          name: "String"
        }
      },
      ownerObjectId: {
        serializedName: "properties.ownerObjectId",
        type: {
          name: "String"
        }
      },
      ownerUserPrincipalName: {
        serializedName: "properties.ownerUserPrincipalName",
        type: {
          name: "String"
        }
      },
      createdByUserId: {
        serializedName: "properties.createdByUserId",
        type: {
          name: "String"
        }
      },
      createdByUser: {
        serializedName: "properties.createdByUser",
        type: {
          name: "String"
        }
      },
      createdDate: {
        serializedName: "properties.createdDate",
        type: {
          name: "DateTime"
        }
      },
      computeId: {
        readOnly: true,
        serializedName: "properties.computeId",
        type: {
          name: "String"
        }
      },
      customImageId: {
        serializedName: "properties.customImageId",
        type: {
          name: "String"
        }
      },
      osType: {
        serializedName: "properties.osType",
        type: {
          name: "String"
        }
      },
      size: {
        serializedName: "properties.size",
        type: {
          name: "String"
        }
      },
      userName: {
        serializedName: "properties.userName",
        type: {
          name: "String"
        }
      },
      password: {
        serializedName: "properties.password",
        type: {
          name: "String"
        }
      },
      sshKey: {
        serializedName: "properties.sshKey",
        type: {
          name: "String"
        }
      },
      isAuthenticationWithSshKey: {
        serializedName: "properties.isAuthenticationWithSshKey",
        type: {
          name: "Boolean"
        }
      },
      fqdn: {
        serializedName: "properties.fqdn",
        type: {
          name: "String"
        }
      },
      labSubnetName: {
        serializedName: "properties.labSubnetName",
        type: {
          name: "String"
        }
      },
      labVirtualNetworkId: {
        serializedName: "properties.labVirtualNetworkId",
        type: {
          name: "String"
        }
      },
      disallowPublicIpAddress: {
        serializedName: "properties.disallowPublicIpAddress",
        type: {
          name: "Boolean"
        }
      },
      artifacts: {
        serializedName: "properties.artifacts",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ArtifactInstallProperties"
            }
          }
        }
      },
      artifactDeploymentStatus: {
        serializedName: "properties.artifactDeploymentStatus",
        type: {
          name: "Composite",
          className: "ArtifactDeploymentStatusProperties"
        }
      },
      galleryImageReference: {
        serializedName: "properties.galleryImageReference",
        type: {
          name: "Composite",
          className: "GalleryImageReference"
        }
      },
      computeVm: {
        serializedName: "properties.computeVm",
        type: {
          name: "Composite",
          className: "ComputeVmProperties"
        }
      },
      networkInterface: {
        serializedName: "properties.networkInterface",
        type: {
          name: "Composite",
          className: "NetworkInterfaceProperties"
        }
      },
      applicableSchedule: {
        serializedName: "properties.applicableSchedule",
        type: {
          name: "Composite",
          className: "ApplicableSchedule"
        }
      },
      expirationDate: {
        serializedName: "properties.expirationDate",
        type: {
          name: "DateTime"
        }
      },
      allowClaim: {
        serializedName: "properties.allowClaim",
        type: {
          name: "Boolean"
        }
      },
      storageType: {
        serializedName: "properties.storageType",
        type: {
          name: "String"
        }
      },
      virtualMachineCreationSource: {
        serializedName: "properties.virtualMachineCreationSource",
        type: {
          name: "String"
        }
      },
      environmentId: {
        serializedName: "properties.environmentId",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      uniqueIdentifier: {
        serializedName: "properties.uniqueIdentifier",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SharedPublicIpAddressConfigurationFragment: msRest.CompositeMapper = {
  serializedName: "SharedPublicIpAddressConfigurationFragment",
  type: {
    name: "Composite",
    className: "SharedPublicIpAddressConfigurationFragment",
    modelProperties: {
      inboundNatRules: {
        serializedName: "inboundNatRules",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "InboundNatRuleFragment"
            }
          }
        }
      }
    }
  }
};

export const NetworkInterfacePropertiesFragment: msRest.CompositeMapper = {
  serializedName: "NetworkInterfacePropertiesFragment",
  type: {
    name: "Composite",
    className: "NetworkInterfacePropertiesFragment",
    modelProperties: {
      virtualNetworkId: {
        serializedName: "virtualNetworkId",
        type: {
          name: "String"
        }
      },
      subnetId: {
        serializedName: "subnetId",
        type: {
          name: "String"
        }
      },
      publicIpAddressId: {
        serializedName: "publicIpAddressId",
        type: {
          name: "String"
        }
      },
      publicIpAddress: {
        serializedName: "publicIpAddress",
        type: {
          name: "String"
        }
      },
      privateIpAddress: {
        serializedName: "privateIpAddress",
        type: {
          name: "String"
        }
      },
      dnsName: {
        serializedName: "dnsName",
        type: {
          name: "String"
        }
      },
      rdpAuthority: {
        serializedName: "rdpAuthority",
        type: {
          name: "String"
        }
      },
      sshAuthority: {
        serializedName: "sshAuthority",
        type: {
          name: "String"
        }
      },
      sharedPublicIpAddressConfiguration: {
        serializedName: "sharedPublicIpAddressConfiguration",
        type: {
          name: "Composite",
          className: "SharedPublicIpAddressConfigurationFragment"
        }
      }
    }
  }
};

export const LabVirtualMachineFragment: msRest.CompositeMapper = {
  serializedName: "LabVirtualMachineFragment",
  type: {
    name: "Composite",
    className: "LabVirtualMachineFragment",
    modelProperties: {
      ...Resource.type.modelProperties,
      notes: {
        serializedName: "properties.notes",
        type: {
          name: "String"
        }
      },
      ownerObjectId: {
        serializedName: "properties.ownerObjectId",
        type: {
          name: "String"
        }
      },
      ownerUserPrincipalName: {
        serializedName: "properties.ownerUserPrincipalName",
        type: {
          name: "String"
        }
      },
      createdByUserId: {
        serializedName: "properties.createdByUserId",
        type: {
          name: "String"
        }
      },
      createdByUser: {
        serializedName: "properties.createdByUser",
        type: {
          name: "String"
        }
      },
      createdDate: {
        serializedName: "properties.createdDate",
        type: {
          name: "DateTime"
        }
      },
      customImageId: {
        serializedName: "properties.customImageId",
        type: {
          name: "String"
        }
      },
      osType: {
        serializedName: "properties.osType",
        type: {
          name: "String"
        }
      },
      size: {
        serializedName: "properties.size",
        type: {
          name: "String"
        }
      },
      userName: {
        serializedName: "properties.userName",
        type: {
          name: "String"
        }
      },
      password: {
        serializedName: "properties.password",
        type: {
          name: "String"
        }
      },
      sshKey: {
        serializedName: "properties.sshKey",
        type: {
          name: "String"
        }
      },
      isAuthenticationWithSshKey: {
        serializedName: "properties.isAuthenticationWithSshKey",
        type: {
          name: "Boolean"
        }
      },
      fqdn: {
        serializedName: "properties.fqdn",
        type: {
          name: "String"
        }
      },
      labSubnetName: {
        serializedName: "properties.labSubnetName",
        type: {
          name: "String"
        }
      },
      labVirtualNetworkId: {
        serializedName: "properties.labVirtualNetworkId",
        type: {
          name: "String"
        }
      },
      disallowPublicIpAddress: {
        serializedName: "properties.disallowPublicIpAddress",
        type: {
          name: "Boolean"
        }
      },
      artifacts: {
        serializedName: "properties.artifacts",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ArtifactInstallPropertiesFragment"
            }
          }
        }
      },
      artifactDeploymentStatus: {
        serializedName: "properties.artifactDeploymentStatus",
        type: {
          name: "Composite",
          className: "ArtifactDeploymentStatusPropertiesFragment"
        }
      },
      galleryImageReference: {
        serializedName: "properties.galleryImageReference",
        type: {
          name: "Composite",
          className: "GalleryImageReferenceFragment"
        }
      },
      computeVm: {
        serializedName: "properties.computeVm",
        type: {
          name: "Composite",
          className: "ComputeVmPropertiesFragment"
        }
      },
      networkInterface: {
        serializedName: "properties.networkInterface",
        type: {
          name: "Composite",
          className: "NetworkInterfacePropertiesFragment"
        }
      },
      applicableSchedule: {
        serializedName: "properties.applicableSchedule",
        type: {
          name: "Composite",
          className: "ApplicableScheduleFragment"
        }
      },
      expirationDate: {
        serializedName: "properties.expirationDate",
        type: {
          name: "DateTime"
        }
      },
      allowClaim: {
        serializedName: "properties.allowClaim",
        type: {
          name: "Boolean"
        }
      },
      storageType: {
        serializedName: "properties.storageType",
        type: {
          name: "String"
        }
      },
      virtualMachineCreationSource: {
        serializedName: "properties.virtualMachineCreationSource",
        type: {
          name: "String"
        }
      },
      environmentId: {
        serializedName: "properties.environmentId",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      uniqueIdentifier: {
        serializedName: "properties.uniqueIdentifier",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NotificationChannel: msRest.CompositeMapper = {
  serializedName: "NotificationChannel",
  type: {
    name: "Composite",
    className: "NotificationChannel",
    modelProperties: {
      ...Resource.type.modelProperties,
      webHookUrl: {
        serializedName: "properties.webHookUrl",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      events: {
        serializedName: "properties.events",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Event"
            }
          }
        }
      },
      createdDate: {
        readOnly: true,
        serializedName: "properties.createdDate",
        type: {
          name: "DateTime"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      uniqueIdentifier: {
        serializedName: "properties.uniqueIdentifier",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NotificationChannelFragment: msRest.CompositeMapper = {
  serializedName: "NotificationChannelFragment",
  type: {
    name: "Composite",
    className: "NotificationChannelFragment",
    modelProperties: {
      ...Resource.type.modelProperties,
      webHookUrl: {
        serializedName: "properties.webHookUrl",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      events: {
        serializedName: "properties.events",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EventFragment"
            }
          }
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      uniqueIdentifier: {
        serializedName: "properties.uniqueIdentifier",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NotifyParameters: msRest.CompositeMapper = {
  serializedName: "NotifyParameters",
  type: {
    name: "Composite",
    className: "NotifyParameters",
    modelProperties: {
      eventName: {
        serializedName: "eventName",
        type: {
          name: "String"
        }
      },
      jsonPayload: {
        serializedName: "jsonPayload",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationError: msRest.CompositeMapper = {
  serializedName: "OperationError",
  type: {
    name: "Composite",
    className: "OperationError",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationMetadataDisplay: msRest.CompositeMapper = {
  serializedName: "OperationMetadataDisplay",
  type: {
    name: "Composite",
    className: "OperationMetadataDisplay",
    modelProperties: {
      provider: {
        serializedName: "provider",
        type: {
          name: "String"
        }
      },
      resource: {
        serializedName: "resource",
        type: {
          name: "String"
        }
      },
      operation: {
        serializedName: "operation",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationMetadata: msRest.CompositeMapper = {
  serializedName: "OperationMetadata",
  type: {
    name: "Composite",
    className: "OperationMetadata",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationMetadataDisplay"
        }
      }
    }
  }
};

export const OperationResult: msRest.CompositeMapper = {
  serializedName: "OperationResult",
  type: {
    name: "Composite",
    className: "OperationResult",
    modelProperties: {
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      statusCode: {
        serializedName: "statusCode",
        type: {
          name: "String"
        }
      },
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "OperationError"
        }
      }
    }
  }
};

export const Policy: msRest.CompositeMapper = {
  serializedName: "Policy",
  type: {
    name: "Composite",
    className: "Policy",
    modelProperties: {
      ...Resource.type.modelProperties,
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "properties.status",
        type: {
          name: "String"
        }
      },
      factName: {
        serializedName: "properties.factName",
        type: {
          name: "String"
        }
      },
      factData: {
        serializedName: "properties.factData",
        type: {
          name: "String"
        }
      },
      threshold: {
        serializedName: "properties.threshold",
        type: {
          name: "String"
        }
      },
      evaluatorType: {
        serializedName: "properties.evaluatorType",
        type: {
          name: "String"
        }
      },
      createdDate: {
        readOnly: true,
        serializedName: "properties.createdDate",
        type: {
          name: "DateTime"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      uniqueIdentifier: {
        serializedName: "properties.uniqueIdentifier",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PolicyFragment: msRest.CompositeMapper = {
  serializedName: "PolicyFragment",
  type: {
    name: "Composite",
    className: "PolicyFragment",
    modelProperties: {
      ...Resource.type.modelProperties,
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "properties.status",
        type: {
          name: "String"
        }
      },
      factName: {
        serializedName: "properties.factName",
        type: {
          name: "String"
        }
      },
      factData: {
        serializedName: "properties.factData",
        type: {
          name: "String"
        }
      },
      threshold: {
        serializedName: "properties.threshold",
        type: {
          name: "String"
        }
      },
      evaluatorType: {
        serializedName: "properties.evaluatorType",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      uniqueIdentifier: {
        serializedName: "properties.uniqueIdentifier",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Port: msRest.CompositeMapper = {
  serializedName: "Port",
  type: {
    name: "Composite",
    className: "Port",
    modelProperties: {
      transportProtocol: {
        serializedName: "transportProtocol",
        type: {
          name: "String"
        }
      },
      backendPort: {
        serializedName: "backendPort",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const PortFragment: msRest.CompositeMapper = {
  serializedName: "PortFragment",
  type: {
    name: "Composite",
    className: "PortFragment",
    modelProperties: {
      transportProtocol: {
        serializedName: "transportProtocol",
        type: {
          name: "String"
        }
      },
      backendPort: {
        serializedName: "backendPort",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const RetargetScheduleProperties: msRest.CompositeMapper = {
  serializedName: "RetargetScheduleProperties",
  type: {
    name: "Composite",
    className: "RetargetScheduleProperties",
    modelProperties: {
      currentResourceId: {
        serializedName: "currentResourceId",
        type: {
          name: "String"
        }
      },
      targetResourceId: {
        serializedName: "targetResourceId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Secret: msRest.CompositeMapper = {
  serializedName: "Secret",
  type: {
    name: "Composite",
    className: "Secret",
    modelProperties: {
      ...Resource.type.modelProperties,
      value: {
        serializedName: "properties.value",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      uniqueIdentifier: {
        serializedName: "properties.uniqueIdentifier",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServiceRunner: msRest.CompositeMapper = {
  serializedName: "ServiceRunner",
  type: {
    name: "Composite",
    className: "ServiceRunner",
    modelProperties: {
      ...Resource.type.modelProperties,
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "IdentityProperties"
        }
      }
    }
  }
};

export const ShutdownNotificationContent: msRest.CompositeMapper = {
  serializedName: "ShutdownNotificationContent",
  type: {
    name: "Composite",
    className: "ShutdownNotificationContent",
    modelProperties: {
      skipUrl: {
        serializedName: "skipUrl",
        type: {
          name: "String"
        }
      },
      delayUrl60: {
        serializedName: "delayUrl60",
        type: {
          name: "String"
        }
      },
      delayUrl120: {
        serializedName: "delayUrl120",
        type: {
          name: "String"
        }
      },
      vmName: {
        serializedName: "vmName",
        type: {
          name: "String"
        }
      },
      guid: {
        serializedName: "guid",
        type: {
          name: "String"
        }
      },
      owner: {
        serializedName: "owner",
        type: {
          name: "String"
        }
      },
      eventType: {
        serializedName: "eventType",
        type: {
          name: "String"
        }
      },
      text: {
        serializedName: "text",
        type: {
          name: "String"
        }
      },
      subscriptionId: {
        serializedName: "subscriptionId",
        type: {
          name: "String"
        }
      },
      resourceGroupName: {
        serializedName: "resourceGroupName",
        type: {
          name: "String"
        }
      },
      labName: {
        serializedName: "labName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Subnet: msRest.CompositeMapper = {
  serializedName: "Subnet",
  type: {
    name: "Composite",
    className: "Subnet",
    modelProperties: {
      resourceId: {
        serializedName: "resourceId",
        type: {
          name: "String"
        }
      },
      labSubnetName: {
        serializedName: "labSubnetName",
        type: {
          name: "String"
        }
      },
      allowPublicIp: {
        serializedName: "allowPublicIp",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SubnetFragment: msRest.CompositeMapper = {
  serializedName: "SubnetFragment",
  type: {
    name: "Composite",
    className: "SubnetFragment",
    modelProperties: {
      resourceId: {
        serializedName: "resourceId",
        type: {
          name: "String"
        }
      },
      labSubnetName: {
        serializedName: "labSubnetName",
        type: {
          name: "String"
        }
      },
      allowPublicIp: {
        serializedName: "allowPublicIp",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SubnetSharedPublicIpAddressConfiguration: msRest.CompositeMapper = {
  serializedName: "SubnetSharedPublicIpAddressConfiguration",
  type: {
    name: "Composite",
    className: "SubnetSharedPublicIpAddressConfiguration",
    modelProperties: {
      allowedPorts: {
        serializedName: "allowedPorts",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Port"
            }
          }
        }
      }
    }
  }
};

export const SubnetOverride: msRest.CompositeMapper = {
  serializedName: "SubnetOverride",
  type: {
    name: "Composite",
    className: "SubnetOverride",
    modelProperties: {
      resourceId: {
        serializedName: "resourceId",
        type: {
          name: "String"
        }
      },
      labSubnetName: {
        serializedName: "labSubnetName",
        type: {
          name: "String"
        }
      },
      useInVmCreationPermission: {
        serializedName: "useInVmCreationPermission",
        type: {
          name: "String"
        }
      },
      usePublicIpAddressPermission: {
        serializedName: "usePublicIpAddressPermission",
        type: {
          name: "String"
        }
      },
      sharedPublicIpAddressConfiguration: {
        serializedName: "sharedPublicIpAddressConfiguration",
        type: {
          name: "Composite",
          className: "SubnetSharedPublicIpAddressConfiguration"
        }
      },
      virtualNetworkPoolName: {
        serializedName: "virtualNetworkPoolName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SubnetSharedPublicIpAddressConfigurationFragment: msRest.CompositeMapper = {
  serializedName: "SubnetSharedPublicIpAddressConfigurationFragment",
  type: {
    name: "Composite",
    className: "SubnetSharedPublicIpAddressConfigurationFragment",
    modelProperties: {
      allowedPorts: {
        serializedName: "allowedPorts",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PortFragment"
            }
          }
        }
      }
    }
  }
};

export const SubnetOverrideFragment: msRest.CompositeMapper = {
  serializedName: "SubnetOverrideFragment",
  type: {
    name: "Composite",
    className: "SubnetOverrideFragment",
    modelProperties: {
      resourceId: {
        serializedName: "resourceId",
        type: {
          name: "String"
        }
      },
      labSubnetName: {
        serializedName: "labSubnetName",
        type: {
          name: "String"
        }
      },
      useInVmCreationPermission: {
        serializedName: "useInVmCreationPermission",
        type: {
          name: "String"
        }
      },
      usePublicIpAddressPermission: {
        serializedName: "usePublicIpAddressPermission",
        type: {
          name: "String"
        }
      },
      sharedPublicIpAddressConfiguration: {
        serializedName: "sharedPublicIpAddressConfiguration",
        type: {
          name: "Composite",
          className: "SubnetSharedPublicIpAddressConfigurationFragment"
        }
      },
      virtualNetworkPoolName: {
        serializedName: "virtualNetworkPoolName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UserIdentity: msRest.CompositeMapper = {
  serializedName: "UserIdentity",
  type: {
    name: "Composite",
    className: "UserIdentity",
    modelProperties: {
      principalName: {
        serializedName: "principalName",
        type: {
          name: "String"
        }
      },
      principalId: {
        serializedName: "principalId",
        type: {
          name: "String"
        }
      },
      tenantId: {
        serializedName: "tenantId",
        type: {
          name: "String"
        }
      },
      objectId: {
        serializedName: "objectId",
        type: {
          name: "String"
        }
      },
      appId: {
        serializedName: "appId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UserSecretStore: msRest.CompositeMapper = {
  serializedName: "UserSecretStore",
  type: {
    name: "Composite",
    className: "UserSecretStore",
    modelProperties: {
      keyVaultUri: {
        serializedName: "keyVaultUri",
        type: {
          name: "String"
        }
      },
      keyVaultId: {
        serializedName: "keyVaultId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const User: msRest.CompositeMapper = {
  serializedName: "User",
  type: {
    name: "Composite",
    className: "User",
    modelProperties: {
      ...Resource.type.modelProperties,
      identity: {
        serializedName: "properties.identity",
        type: {
          name: "Composite",
          className: "UserIdentity"
        }
      },
      secretStore: {
        serializedName: "properties.secretStore",
        type: {
          name: "Composite",
          className: "UserSecretStore"
        }
      },
      createdDate: {
        readOnly: true,
        serializedName: "properties.createdDate",
        type: {
          name: "DateTime"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      uniqueIdentifier: {
        serializedName: "properties.uniqueIdentifier",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UserIdentityFragment: msRest.CompositeMapper = {
  serializedName: "UserIdentityFragment",
  type: {
    name: "Composite",
    className: "UserIdentityFragment",
    modelProperties: {
      principalName: {
        serializedName: "principalName",
        type: {
          name: "String"
        }
      },
      principalId: {
        serializedName: "principalId",
        type: {
          name: "String"
        }
      },
      tenantId: {
        serializedName: "tenantId",
        type: {
          name: "String"
        }
      },
      objectId: {
        serializedName: "objectId",
        type: {
          name: "String"
        }
      },
      appId: {
        serializedName: "appId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UserSecretStoreFragment: msRest.CompositeMapper = {
  serializedName: "UserSecretStoreFragment",
  type: {
    name: "Composite",
    className: "UserSecretStoreFragment",
    modelProperties: {
      keyVaultUri: {
        serializedName: "keyVaultUri",
        type: {
          name: "String"
        }
      },
      keyVaultId: {
        serializedName: "keyVaultId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UserFragment: msRest.CompositeMapper = {
  serializedName: "UserFragment",
  type: {
    name: "Composite",
    className: "UserFragment",
    modelProperties: {
      ...Resource.type.modelProperties,
      identity: {
        serializedName: "properties.identity",
        type: {
          name: "Composite",
          className: "UserIdentityFragment"
        }
      },
      secretStore: {
        serializedName: "properties.secretStore",
        type: {
          name: "Composite",
          className: "UserSecretStoreFragment"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      uniqueIdentifier: {
        serializedName: "properties.uniqueIdentifier",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VirtualNetwork: msRest.CompositeMapper = {
  serializedName: "VirtualNetwork",
  type: {
    name: "Composite",
    className: "VirtualNetwork",
    modelProperties: {
      ...Resource.type.modelProperties,
      allowedSubnets: {
        serializedName: "properties.allowedSubnets",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Subnet"
            }
          }
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      externalProviderResourceId: {
        serializedName: "properties.externalProviderResourceId",
        type: {
          name: "String"
        }
      },
      externalSubnets: {
        serializedName: "properties.externalSubnets",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ExternalSubnet"
            }
          }
        }
      },
      subnetOverrides: {
        serializedName: "properties.subnetOverrides",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SubnetOverride"
            }
          }
        }
      },
      createdDate: {
        readOnly: true,
        serializedName: "properties.createdDate",
        type: {
          name: "DateTime"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      uniqueIdentifier: {
        serializedName: "properties.uniqueIdentifier",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VirtualNetworkFragment: msRest.CompositeMapper = {
  serializedName: "VirtualNetworkFragment",
  type: {
    name: "Composite",
    className: "VirtualNetworkFragment",
    modelProperties: {
      ...Resource.type.modelProperties,
      allowedSubnets: {
        serializedName: "properties.allowedSubnets",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SubnetFragment"
            }
          }
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      externalProviderResourceId: {
        serializedName: "properties.externalProviderResourceId",
        type: {
          name: "String"
        }
      },
      externalSubnets: {
        serializedName: "properties.externalSubnets",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ExternalSubnetFragment"
            }
          }
        }
      },
      subnetOverrides: {
        serializedName: "properties.subnetOverrides",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SubnetOverrideFragment"
            }
          }
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      uniqueIdentifier: {
        serializedName: "properties.uniqueIdentifier",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProviderOperationResult: msRest.CompositeMapper = {
  serializedName: "ProviderOperationResult",
  type: {
    name: "Composite",
    className: "ProviderOperationResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "OperationMetadata"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResponseWithContinuationLab: msRest.CompositeMapper = {
  serializedName: "ResponseWithContinuation_Lab_",
  type: {
    name: "Composite",
    className: "ResponseWithContinuationLab",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Lab"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResponseWithContinuationLabVhd: msRest.CompositeMapper = {
  serializedName: "ResponseWithContinuation_LabVhd_",
  type: {
    name: "Composite",
    className: "ResponseWithContinuationLabVhd",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "LabVhd"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResponseWithContinuationSchedule: msRest.CompositeMapper = {
  serializedName: "ResponseWithContinuation_Schedule_",
  type: {
    name: "Composite",
    className: "ResponseWithContinuationSchedule",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Schedule"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResponseWithContinuationArtifactSource: msRest.CompositeMapper = {
  serializedName: "ResponseWithContinuation_ArtifactSource_",
  type: {
    name: "Composite",
    className: "ResponseWithContinuationArtifactSource",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ArtifactSource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResponseWithContinuationArmTemplate: msRest.CompositeMapper = {
  serializedName: "ResponseWithContinuation_ArmTemplate_",
  type: {
    name: "Composite",
    className: "ResponseWithContinuationArmTemplate",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ArmTemplate"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResponseWithContinuationArtifact: msRest.CompositeMapper = {
  serializedName: "ResponseWithContinuation_Artifact_",
  type: {
    name: "Composite",
    className: "ResponseWithContinuationArtifact",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Artifact"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResponseWithContinuationCustomImage: msRest.CompositeMapper = {
  serializedName: "ResponseWithContinuation_CustomImage_",
  type: {
    name: "Composite",
    className: "ResponseWithContinuationCustomImage",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CustomImage"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResponseWithContinuationFormula: msRest.CompositeMapper = {
  serializedName: "ResponseWithContinuation_Formula_",
  type: {
    name: "Composite",
    className: "ResponseWithContinuationFormula",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Formula"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResponseWithContinuationGalleryImage: msRest.CompositeMapper = {
  serializedName: "ResponseWithContinuation_GalleryImage_",
  type: {
    name: "Composite",
    className: "ResponseWithContinuationGalleryImage",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "GalleryImage"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResponseWithContinuationNotificationChannel: msRest.CompositeMapper = {
  serializedName: "ResponseWithContinuation_NotificationChannel_",
  type: {
    name: "Composite",
    className: "ResponseWithContinuationNotificationChannel",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "NotificationChannel"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResponseWithContinuationPolicy: msRest.CompositeMapper = {
  serializedName: "ResponseWithContinuation_Policy_",
  type: {
    name: "Composite",
    className: "ResponseWithContinuationPolicy",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Policy"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResponseWithContinuationServiceRunner: msRest.CompositeMapper = {
  serializedName: "ResponseWithContinuation_ServiceRunner_",
  type: {
    name: "Composite",
    className: "ResponseWithContinuationServiceRunner",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ServiceRunner"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResponseWithContinuationUser: msRest.CompositeMapper = {
  serializedName: "ResponseWithContinuation_User_",
  type: {
    name: "Composite",
    className: "ResponseWithContinuationUser",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "User"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResponseWithContinuationDisk: msRest.CompositeMapper = {
  serializedName: "ResponseWithContinuation_Disk_",
  type: {
    name: "Composite",
    className: "ResponseWithContinuationDisk",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Disk"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResponseWithContinuationDtlEnvironment: msRest.CompositeMapper = {
  serializedName: "ResponseWithContinuation_DtlEnvironment_",
  type: {
    name: "Composite",
    className: "ResponseWithContinuationDtlEnvironment",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DtlEnvironment"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResponseWithContinuationSecret: msRest.CompositeMapper = {
  serializedName: "ResponseWithContinuation_Secret_",
  type: {
    name: "Composite",
    className: "ResponseWithContinuationSecret",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Secret"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResponseWithContinuationLabVirtualMachine: msRest.CompositeMapper = {
  serializedName: "ResponseWithContinuation_LabVirtualMachine_",
  type: {
    name: "Composite",
    className: "ResponseWithContinuationLabVirtualMachine",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "LabVirtualMachine"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResponseWithContinuationVirtualNetwork: msRest.CompositeMapper = {
  serializedName: "ResponseWithContinuation_VirtualNetwork_",
  type: {
    name: "Composite",
    className: "ResponseWithContinuationVirtualNetwork",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VirtualNetwork"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};
