/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "ms-rest-azure-js";
import * as msRest from "ms-rest-js";

export { BaseResource, CloudError };


/**
 * @interface
 * An interface representing Sku.
 */
export interface Sku {
  /**
   * @member {SkuDefinition} [name] Gets or set the SKU. Possible values
   * include: 'Standard', 'Free', 'P10Premium', 'P20Premium'
   */
  name?: SkuDefinition;
}

/**
 * @interface
 * An interface representing JobMaxRecurrence.
 */
export interface JobMaxRecurrence {
  /**
   * @member {RecurrenceFrequency} [frequency] Gets or sets the frequency of
   * recurrence (second, minute, hour, day, week, month). Possible values
   * include: 'Minute', 'Hour', 'Day', 'Week', 'Month'
   */
  frequency?: RecurrenceFrequency;
  /**
   * @member {number} [interval] Gets or sets the interval between retries.
   */
  interval?: number;
}

/**
 * @interface
 * An interface representing JobCollectionQuota.
 */
export interface JobCollectionQuota {
  /**
   * @member {number} [maxJobCount] Gets or set the maximum job count.
   */
  maxJobCount?: number;
  /**
   * @member {number} [maxJobOccurrence] Gets or sets the maximum job
   * occurrence.
   */
  maxJobOccurrence?: number;
  /**
   * @member {JobMaxRecurrence} [maxRecurrence] Gets or set the maximum
   * recurrence.
   */
  maxRecurrence?: JobMaxRecurrence;
}

/**
 * @interface
 * An interface representing JobCollectionProperties.
 */
export interface JobCollectionProperties {
  /**
   * @member {Sku} [sku] Gets or sets the SKU.
   */
  sku?: Sku;
  /**
   * @member {JobCollectionState} [state] Gets or sets the state. Possible
   * values include: 'Enabled', 'Disabled', 'Suspended', 'Deleted'
   */
  state?: JobCollectionState;
  /**
   * @member {JobCollectionQuota} [quota] Gets or sets the job collection
   * quota.
   */
  quota?: JobCollectionQuota;
}

/**
 * @interface
 * An interface representing JobCollectionDefinition.
 */
export interface JobCollectionDefinition {
  /**
   * @member {string} [id] Gets the job collection resource identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [type] Gets the job collection resource type.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: string;
  /**
   * @member {string} [name] Gets or sets the job collection resource name.
   */
  name?: string;
  /**
   * @member {string} [location] Gets or sets the storage account location.
   */
  location?: string;
  /**
   * @member {{ [propertyName: string]: string }} [tags] Gets or sets the tags.
   */
  tags?: { [propertyName: string]: string };
  /**
   * @member {JobCollectionProperties} [properties] Gets or sets the job
   * collection properties.
   */
  properties?: JobCollectionProperties;
}

/**
 * Contains the possible cases for HttpAuthentication.
 */
export type HttpAuthenticationUnion = HttpAuthentication | ClientCertAuthentication | BasicAuthentication | OAuthAuthentication;

/**
 * @interface
 * An interface representing HttpAuthentication.
 */
export interface HttpAuthentication {
  /**
   * @member {string} type Polymorphic Discriminator
   */
  type: "HttpAuthentication";
}

/**
 * @interface
 * An interface representing HttpRequest.
 */
export interface HttpRequest {
  /**
   * @member {HttpAuthenticationUnion} [authentication] Gets or sets the
   * authentication method of the request.
   */
  authentication?: HttpAuthenticationUnion;
  /**
   * @member {string} [uri] Gets or sets the URI of the request.
   */
  uri?: string;
  /**
   * @member {string} [method] Gets or sets the method of the request.
   */
  method?: string;
  /**
   * @member {string} [body] Gets or sets the request body.
   */
  body?: string;
  /**
   * @member {{ [propertyName: string]: string }} [headers] Gets or sets the
   * headers.
   */
  headers?: { [propertyName: string]: string };
}

/**
 * @interface
 * An interface representing StorageQueueMessage.
 */
export interface StorageQueueMessage {
  /**
   * @member {string} [storageAccount] Gets or sets the storage account name.
   */
  storageAccount?: string;
  /**
   * @member {string} [queueName] Gets or sets the queue name.
   */
  queueName?: string;
  /**
   * @member {string} [sasToken] Gets or sets the SAS key.
   */
  sasToken?: string;
  /**
   * @member {string} [message] Gets or sets the message.
   */
  message?: string;
}

/**
 * @interface
 * An interface representing ServiceBusMessage.
 */
export interface ServiceBusMessage {
  /**
   * @member {ServiceBusAuthentication} [authentication] Gets or sets the
   * Service Bus authentication.
   */
  authentication?: ServiceBusAuthentication;
  /**
   * @member {ServiceBusBrokeredMessageProperties} [brokeredMessageProperties]
   * Gets or sets the brokered message properties.
   */
  brokeredMessageProperties?: ServiceBusBrokeredMessageProperties;
  /**
   * @member {{ [propertyName: string]: string }} [customMessageProperties]
   * Gets or sets the custom message properties.
   */
  customMessageProperties?: { [propertyName: string]: string };
  /**
   * @member {string} [message] Gets or sets the message.
   */
  message?: string;
  /**
   * @member {string} [namespace] Gets or sets the namespace.
   */
  namespace?: string;
  /**
   * @member {ServiceBusTransportType} [transportType] Gets or sets the
   * transport type. Possible values include: 'NotSpecified', 'NetMessaging',
   * 'AMQP'
   */
  transportType?: ServiceBusTransportType;
}

/**
 * @interface
 * An interface representing ServiceBusQueueMessage.
 * @extends ServiceBusMessage
 */
export interface ServiceBusQueueMessage extends ServiceBusMessage {
  /**
   * @member {string} [queueName] Gets or sets the queue name.
   */
  queueName?: string;
}

/**
 * @interface
 * An interface representing ServiceBusTopicMessage.
 * @extends ServiceBusMessage
 */
export interface ServiceBusTopicMessage extends ServiceBusMessage {
  /**
   * @member {string} [topicPath] Gets or sets the topic path.
   */
  topicPath?: string;
}

/**
 * @interface
 * An interface representing RetryPolicy.
 */
export interface RetryPolicy {
  /**
   * @member {RetryType} [retryType] Gets or sets the retry strategy to be
   * used. Possible values include: 'None', 'Fixed'
   */
  retryType?: RetryType;
  /**
   * @member {string} [retryInterval] Gets or sets the retry interval between
   * retries, specify duration in ISO 8601 format.
   */
  retryInterval?: string;
  /**
   * @member {number} [retryCount] Gets or sets the number of times a retry
   * should be attempted.
   */
  retryCount?: number;
}

/**
 * @interface
 * An interface representing JobErrorAction.
 */
export interface JobErrorAction {
  /**
   * @member {JobActionType} [type] Gets or sets the job error action type.
   * Possible values include: 'Http', 'Https', 'StorageQueue',
   * 'ServiceBusQueue', 'ServiceBusTopic'
   */
  type?: JobActionType;
  /**
   * @member {HttpRequest} [request] Gets or sets the http requests.
   */
  request?: HttpRequest;
  /**
   * @member {StorageQueueMessage} [queueMessage] Gets or sets the storage
   * queue message.
   */
  queueMessage?: StorageQueueMessage;
  /**
   * @member {ServiceBusQueueMessage} [serviceBusQueueMessage] Gets or sets the
   * service bus queue message.
   */
  serviceBusQueueMessage?: ServiceBusQueueMessage;
  /**
   * @member {ServiceBusTopicMessage} [serviceBusTopicMessage] Gets or sets the
   * service bus topic message.
   */
  serviceBusTopicMessage?: ServiceBusTopicMessage;
  /**
   * @member {RetryPolicy} [retryPolicy] Gets or sets the retry policy.
   */
  retryPolicy?: RetryPolicy;
}

/**
 * @interface
 * An interface representing JobAction.
 */
export interface JobAction {
  /**
   * @member {JobActionType} [type] Gets or sets the job action type. Possible
   * values include: 'Http', 'Https', 'StorageQueue', 'ServiceBusQueue',
   * 'ServiceBusTopic'
   */
  type?: JobActionType;
  /**
   * @member {HttpRequest} [request] Gets or sets the http requests.
   */
  request?: HttpRequest;
  /**
   * @member {StorageQueueMessage} [queueMessage] Gets or sets the storage
   * queue message.
   */
  queueMessage?: StorageQueueMessage;
  /**
   * @member {ServiceBusQueueMessage} [serviceBusQueueMessage] Gets or sets the
   * service bus queue message.
   */
  serviceBusQueueMessage?: ServiceBusQueueMessage;
  /**
   * @member {ServiceBusTopicMessage} [serviceBusTopicMessage] Gets or sets the
   * service bus topic message.
   */
  serviceBusTopicMessage?: ServiceBusTopicMessage;
  /**
   * @member {RetryPolicy} [retryPolicy] Gets or sets the retry policy.
   */
  retryPolicy?: RetryPolicy;
  /**
   * @member {JobErrorAction} [errorAction] Gets or sets the error action.
   */
  errorAction?: JobErrorAction;
}

/**
 * @interface
 * An interface representing JobRecurrenceScheduleMonthlyOccurrence.
 */
export interface JobRecurrenceScheduleMonthlyOccurrence {
  /**
   * @member {JobScheduleDay} [day] Gets or sets the day. Must be one of
   * monday, tuesday, wednesday, thursday, friday, saturday, sunday. Possible
   * values include: 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday',
   * 'Saturday', 'Sunday'
   */
  day?: JobScheduleDay;
  /**
   * @member {number} [occurrence] Gets or sets the occurrence. Must be between
   * -5 and 5.
   */
  occurrence?: number;
}

/**
 * @interface
 * An interface representing JobRecurrenceSchedule.
 */
export interface JobRecurrenceSchedule {
  /**
   * @member {DayOfWeek[]} [weekDays] Gets or sets the days of the week that
   * the job should execute on.
   */
  weekDays?: DayOfWeek[];
  /**
   * @member {number[]} [hours] Gets or sets the hours of the day that the job
   * should execute at.
   */
  hours?: number[];
  /**
   * @member {number[]} [minutes] Gets or sets the minutes of the hour that the
   * job should execute at.
   */
  minutes?: number[];
  /**
   * @member {number[]} [monthDays] Gets or sets the days of the month that the
   * job should execute on. Must be between 1 and 31.
   */
  monthDays?: number[];
  /**
   * @member {JobRecurrenceScheduleMonthlyOccurrence[]} [monthlyOccurrences]
   * Gets or sets the occurrences of days within a month.
   */
  monthlyOccurrences?: JobRecurrenceScheduleMonthlyOccurrence[];
}

/**
 * @interface
 * An interface representing JobRecurrence.
 */
export interface JobRecurrence {
  /**
   * @member {RecurrenceFrequency} [frequency] Gets or sets the frequency of
   * recurrence (second, minute, hour, day, week, month). Possible values
   * include: 'Minute', 'Hour', 'Day', 'Week', 'Month'
   */
  frequency?: RecurrenceFrequency;
  /**
   * @member {number} [interval] Gets or sets the interval between retries.
   */
  interval?: number;
  /**
   * @member {number} [count] Gets or sets the maximum number of times that the
   * job should run.
   */
  count?: number;
  /**
   * @member {Date} [endTime] Gets or sets the time at which the job will
   * complete.
   */
  endTime?: Date;
  /**
   * @member {JobRecurrenceSchedule} [schedule]
   */
  schedule?: JobRecurrenceSchedule;
}

/**
 * @interface
 * An interface representing JobStatus.
 */
export interface JobStatus {
  /**
   * @member {number} [executionCount] Gets the number of times this job has
   * executed.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly executionCount?: number;
  /**
   * @member {number} [failureCount] Gets the number of times this job has
   * failed.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly failureCount?: number;
  /**
   * @member {number} [faultedCount] Gets the number of faulted occurrences
   * (occurrences that were retried and failed as many times as the retry
   * policy states).
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly faultedCount?: number;
  /**
   * @member {Date} [lastExecutionTime] Gets the time the last occurrence
   * executed in ISO-8601 format.  Could be empty if job has not run yet.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly lastExecutionTime?: Date;
  /**
   * @member {Date} [nextExecutionTime] Gets the time of the next occurrence in
   * ISO-8601 format. Could be empty if the job is completed.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextExecutionTime?: Date;
}

/**
 * @interface
 * An interface representing JobProperties.
 */
export interface JobProperties {
  /**
   * @member {Date} [startTime] Gets or sets the job start time.
   */
  startTime?: Date;
  /**
   * @member {JobAction} [action] Gets or sets the job action.
   */
  action?: JobAction;
  /**
   * @member {JobRecurrence} [recurrence] Gets or sets the job recurrence.
   */
  recurrence?: JobRecurrence;
  /**
   * @member {JobState} [state] Gets or set the job state. Possible values
   * include: 'Enabled', 'Disabled', 'Faulted', 'Completed'
   */
  state?: JobState;
  /**
   * @member {JobStatus} [status] Gets the job status.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly status?: JobStatus;
}

/**
 * @interface
 * An interface representing JobDefinition.
 */
export interface JobDefinition {
  /**
   * @member {string} [id] Gets the job resource identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [type] Gets the job resource type.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: string;
  /**
   * @member {string} [name] Gets the job resource name.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {JobProperties} [properties] Gets or sets the job properties.
   */
  properties?: JobProperties;
}

/**
 * @interface
 * An interface representing JobHistoryDefinitionProperties.
 */
export interface JobHistoryDefinitionProperties {
  /**
   * @member {Date} [startTime] Gets the start time for this job.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly startTime?: Date;
  /**
   * @member {Date} [endTime] Gets the end time for this job.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly endTime?: Date;
  /**
   * @member {Date} [expectedExecutionTime] Gets the expected execution time
   * for this job.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly expectedExecutionTime?: Date;
  /**
   * @member {JobHistoryActionName} [actionName] Gets the job history action
   * name. Possible values include: 'MainAction', 'ErrorAction'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly actionName?: JobHistoryActionName;
  /**
   * @member {JobExecutionStatus} [status] Gets the job history status.
   * Possible values include: 'Completed', 'Failed', 'Postponed'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly status?: JobExecutionStatus;
  /**
   * @member {string} [message] Gets the message for the job history.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly message?: string;
  /**
   * @member {number} [retryCount] Gets the retry count for job.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly retryCount?: number;
  /**
   * @member {number} [repeatCount] Gets the repeat count for the job.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly repeatCount?: number;
}

/**
 * @interface
 * An interface representing JobHistoryDefinition.
 */
export interface JobHistoryDefinition {
  /**
   * @member {string} [id] Gets the job history identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [type] Gets the job history resource type.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: string;
  /**
   * @member {string} [name] Gets the job history name.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {JobHistoryDefinitionProperties} [properties] Gets or sets the job
   * history properties.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly properties?: JobHistoryDefinitionProperties;
}

/**
 * @interface
 * An interface representing ClientCertAuthentication.
 */
export interface ClientCertAuthentication {
  /**
   * @member {string} type Polymorphic Discriminator
   */
  type: "ClientCertificate";
  /**
   * @member {string} [password] Gets or sets the certificate password, return
   * value will always be empty.
   */
  password?: string;
  /**
   * @member {string} [pfx] Gets or sets the pfx certificate. Accepts
   * certification in base64 encoding, return value will always be empty.
   */
  pfx?: string;
  /**
   * @member {string} [certificateThumbprint] Gets or sets the certificate
   * thumbprint.
   */
  certificateThumbprint?: string;
  /**
   * @member {Date} [certificateExpirationDate] Gets or sets the certificate
   * expiration date.
   */
  certificateExpirationDate?: Date;
  /**
   * @member {string} [certificateSubjectName] Gets or sets the certificate
   * subject name.
   */
  certificateSubjectName?: string;
}

/**
 * @interface
 * An interface representing BasicAuthentication.
 */
export interface BasicAuthentication {
  /**
   * @member {string} type Polymorphic Discriminator
   */
  type: "Basic";
  /**
   * @member {string} [username] Gets or sets the username.
   */
  username?: string;
  /**
   * @member {string} [password] Gets or sets the password, return value will
   * always be empty.
   */
  password?: string;
}

/**
 * @interface
 * An interface representing OAuthAuthentication.
 */
export interface OAuthAuthentication {
  /**
   * @member {string} type Polymorphic Discriminator
   */
  type: "ActiveDirectoryOAuth";
  /**
   * @member {string} [secret] Gets or sets the secret, return value will
   * always be empty.
   */
  secret?: string;
  /**
   * @member {string} [tenant] Gets or sets the tenant.
   */
  tenant?: string;
  /**
   * @member {string} [audience] Gets or sets the audience.
   */
  audience?: string;
  /**
   * @member {string} [clientId] Gets or sets the client identifier.
   */
  clientId?: string;
}

/**
 * @interface
 * An interface representing ServiceBusAuthentication.
 */
export interface ServiceBusAuthentication {
  /**
   * @member {string} [sasKey] Gets or sets the SAS key.
   */
  sasKey?: string;
  /**
   * @member {string} [sasKeyName] Gets or sets the SAS key name.
   */
  sasKeyName?: string;
  /**
   * @member {ServiceBusAuthenticationType} [type] Gets or sets the
   * authentication type. Possible values include: 'NotSpecified',
   * 'SharedAccessKey'
   */
  type?: ServiceBusAuthenticationType;
}

/**
 * @interface
 * An interface representing ServiceBusBrokeredMessageProperties.
 */
export interface ServiceBusBrokeredMessageProperties {
  /**
   * @member {string} [contentType] Gets or sets the content type.
   */
  contentType?: string;
  /**
   * @member {string} [correlationId] Gets or sets the correlation ID.
   */
  correlationId?: string;
  /**
   * @member {boolean} [forcePersistence] Gets or sets the force persistence.
   */
  forcePersistence?: boolean;
  /**
   * @member {string} [label] Gets or sets the label.
   */
  label?: string;
  /**
   * @member {string} [messageId] Gets or sets the message ID.
   */
  messageId?: string;
  /**
   * @member {string} [partitionKey] Gets or sets the partition key.
   */
  partitionKey?: string;
  /**
   * @member {string} [replyTo] Gets or sets the reply to.
   */
  replyTo?: string;
  /**
   * @member {string} [replyToSessionId] Gets or sets the reply to session ID.
   */
  replyToSessionId?: string;
  /**
   * @member {Date} [scheduledEnqueueTimeUtc] Gets or sets the scheduled
   * enqueue time UTC.
   */
  scheduledEnqueueTimeUtc?: Date;
  /**
   * @member {string} [sessionId] Gets or sets the session ID.
   */
  sessionId?: string;
  /**
   * @member {string} [timeToLive] Gets or sets the time to live.
   */
  timeToLive?: string;
  /**
   * @member {string} [to] Gets or sets the to.
   */
  to?: string;
  /**
   * @member {string} [viaPartitionKey] Gets or sets the via partition key.
   */
  viaPartitionKey?: string;
}

/**
 * @interface
 * An interface representing JobStateFilter.
 */
export interface JobStateFilter {
  /**
   * @member {JobState} [state] Gets or sets the job state. Possible values
   * include: 'Enabled', 'Disabled', 'Faulted', 'Completed'
   */
  state?: JobState;
}

/**
 * @interface
 * An interface representing JobHistoryFilter.
 */
export interface JobHistoryFilter {
  /**
   * @member {JobExecutionStatus} [status] Gets or sets the job execution
   * status. Possible values include: 'Completed', 'Failed', 'Postponed'
   */
  status?: JobExecutionStatus;
}

/**
 * @interface
 * An interface representing JobsListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface JobsListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [top] The number of jobs to request, in the of range of
   * [1..100].
   */
  top?: number;
  /**
   * @member {number} [skip] The (0-based) index of the job history list from
   * which to begin requesting entries.
   */
  skip?: number;
  /**
   * @member {string} [filter] The filter to apply on the job state.
   */
  filter?: string;
}

/**
 * @interface
 * An interface representing JobsListJobHistoryOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface JobsListJobHistoryOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [top] the number of job history to request, in the of
   * range of [1..100].
   */
  top?: number;
  /**
   * @member {number} [skip] The (0-based) index of the job history list from
   * which to begin requesting entries.
   */
  skip?: number;
  /**
   * @member {string} [filter] The filter to apply on the job state.
   */
  filter?: string;
}

/**
 * @interface
 * An interface representing SchedulerManagementClientOptions.
 * @extends AzureServiceClientOptions
 */
export interface SchedulerManagementClientOptions extends AzureServiceClientOptions {
  /**
   * @member {string} [baseUri]
   */
  baseUri?: string;
}


/**
 * @interface
 * An interface representing the JobCollectionListResult.
 * @extends Array<JobCollectionDefinition>
 */
export interface JobCollectionListResult extends Array<JobCollectionDefinition> {
  /**
   * @member {string} [nextLink] Gets or sets the URL to get the next set of
   * job collections.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the JobListResult.
 * @extends Array<JobDefinition>
 */
export interface JobListResult extends Array<JobDefinition> {
  /**
   * @member {string} [nextLink] Gets or sets the URL to get the next set of
   * jobs.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the JobHistoryListResult.
 * @extends Array<JobHistoryDefinition>
 */
export interface JobHistoryListResult extends Array<JobHistoryDefinition> {
  /**
   * @member {string} [nextLink] Gets or sets the URL to get the next set of
   * job histories.
   */
  nextLink?: string;
}

/**
 * Defines values for SkuDefinition.
 * Possible values include: 'Standard', 'Free', 'P10Premium', 'P20Premium'
 * @readonly
 * @enum {string}
 */
export enum SkuDefinition {
  Standard = 'Standard',
  Free = 'Free',
  P10Premium = 'P10Premium',
  P20Premium = 'P20Premium',
}

/**
 * Defines values for JobCollectionState.
 * Possible values include: 'Enabled', 'Disabled', 'Suspended', 'Deleted'
 * @readonly
 * @enum {string}
 */
export enum JobCollectionState {
  Enabled = 'Enabled',
  Disabled = 'Disabled',
  Suspended = 'Suspended',
  Deleted = 'Deleted',
}

/**
 * Defines values for RecurrenceFrequency.
 * Possible values include: 'Minute', 'Hour', 'Day', 'Week', 'Month'
 * @readonly
 * @enum {string}
 */
export enum RecurrenceFrequency {
  Minute = 'Minute',
  Hour = 'Hour',
  Day = 'Day',
  Week = 'Week',
  Month = 'Month',
}

/**
 * Defines values for JobActionType.
 * Possible values include: 'Http', 'Https', 'StorageQueue', 'ServiceBusQueue',
 * 'ServiceBusTopic'
 * @readonly
 * @enum {string}
 */
export enum JobActionType {
  Http = 'Http',
  Https = 'Https',
  StorageQueue = 'StorageQueue',
  ServiceBusQueue = 'ServiceBusQueue',
  ServiceBusTopic = 'ServiceBusTopic',
}

/**
 * Defines values for RetryType.
 * Possible values include: 'None', 'Fixed'
 * @readonly
 * @enum {string}
 */
export enum RetryType {
  None = 'None',
  Fixed = 'Fixed',
}

/**
 * Defines values for DayOfWeek.
 * Possible values include: 'Sunday', 'Monday', 'Tuesday', 'Wednesday',
 * 'Thursday', 'Friday', 'Saturday'
 * @readonly
 * @enum {string}
 */
export enum DayOfWeek {
  Sunday = 'Sunday',
  Monday = 'Monday',
  Tuesday = 'Tuesday',
  Wednesday = 'Wednesday',
  Thursday = 'Thursday',
  Friday = 'Friday',
  Saturday = 'Saturday',
}

/**
 * Defines values for JobScheduleDay.
 * Possible values include: 'Monday', 'Tuesday', 'Wednesday', 'Thursday',
 * 'Friday', 'Saturday', 'Sunday'
 * @readonly
 * @enum {string}
 */
export enum JobScheduleDay {
  Monday = 'Monday',
  Tuesday = 'Tuesday',
  Wednesday = 'Wednesday',
  Thursday = 'Thursday',
  Friday = 'Friday',
  Saturday = 'Saturday',
  Sunday = 'Sunday',
}

/**
 * Defines values for JobState.
 * Possible values include: 'Enabled', 'Disabled', 'Faulted', 'Completed'
 * @readonly
 * @enum {string}
 */
export enum JobState {
  Enabled = 'Enabled',
  Disabled = 'Disabled',
  Faulted = 'Faulted',
  Completed = 'Completed',
}

/**
 * Defines values for JobHistoryActionName.
 * Possible values include: 'MainAction', 'ErrorAction'
 * @readonly
 * @enum {string}
 */
export enum JobHistoryActionName {
  MainAction = 'MainAction',
  ErrorAction = 'ErrorAction',
}

/**
 * Defines values for JobExecutionStatus.
 * Possible values include: 'Completed', 'Failed', 'Postponed'
 * @readonly
 * @enum {string}
 */
export enum JobExecutionStatus {
  Completed = 'Completed',
  Failed = 'Failed',
  Postponed = 'Postponed',
}

/**
 * Defines values for ServiceBusAuthenticationType.
 * Possible values include: 'NotSpecified', 'SharedAccessKey'
 * @readonly
 * @enum {string}
 */
export enum ServiceBusAuthenticationType {
  NotSpecified = 'NotSpecified',
  SharedAccessKey = 'SharedAccessKey',
}

/**
 * Defines values for ServiceBusTransportType.
 * Possible values include: 'NotSpecified', 'NetMessaging', 'AMQP'
 * @readonly
 * @enum {string}
 */
export enum ServiceBusTransportType {
  NotSpecified = 'NotSpecified',
  NetMessaging = 'NetMessaging',
  AMQP = 'AMQP',
}

/**
 * Contains response data for the listBySubscription operation.
 */
export type JobCollectionsListBySubscriptionResponse = JobCollectionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobCollectionListResult;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type JobCollectionsListByResourceGroupResponse = JobCollectionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobCollectionListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type JobCollectionsGetResponse = JobCollectionDefinition & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobCollectionDefinition;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type JobCollectionsCreateOrUpdateResponse = JobCollectionDefinition & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobCollectionDefinition;
    };
};

/**
 * Contains response data for the patch operation.
 */
export type JobCollectionsPatchResponse = JobCollectionDefinition & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobCollectionDefinition;
    };
};

/**
 * Contains response data for the listBySubscriptionNext operation.
 */
export type JobCollectionsListBySubscriptionNextResponse = JobCollectionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobCollectionListResult;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type JobCollectionsListByResourceGroupNextResponse = JobCollectionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobCollectionListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type JobsGetResponse = JobDefinition & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobDefinition;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type JobsCreateOrUpdateResponse = JobDefinition & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobDefinition;
    };
};

/**
 * Contains response data for the patch operation.
 */
export type JobsPatchResponse = JobDefinition & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobDefinition;
    };
};

/**
 * Contains response data for the list operation.
 */
export type JobsListResponse = JobListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobListResult;
    };
};

/**
 * Contains response data for the listJobHistory operation.
 */
export type JobsListJobHistoryResponse = JobHistoryListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobHistoryListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type JobsListNextResponse = JobListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobListResult;
    };
};

/**
 * Contains response data for the listJobHistoryNext operation.
 */
export type JobsListJobHistoryNextResponse = JobHistoryListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobHistoryListResult;
    };
};
