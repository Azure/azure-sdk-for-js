/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };


/**
 * @interface
 * An interface representing ClusterDefinition.
 * The cluster definition.
 *
 */
export interface ClusterDefinition {
  /**
   * @member {string} [blueprint] The link to the blueprint.
   */
  blueprint?: string;
  /**
   * @member {string} [kind] The type of cluster.
   */
  kind?: string;
  /**
   * @member {{ [propertyName: string]: string }} [componentVersion] The
   * versions of different services in the cluster.
   */
  componentVersion?: { [propertyName: string]: string };
  /**
   * @member {any} [configurations] The cluster configurations.
   */
  configurations?: any;
}

/**
 * @interface
 * An interface representing SecurityProfile.
 * The security profile which contains Ssh public key for the HDInsight
 * cluster.
 *
 */
export interface SecurityProfile {
  /**
   * @member {DirectoryType} [directoryType] The directory type. Possible
   * values include: 'ActiveDirectory'
   */
  directoryType?: DirectoryType;
  /**
   * @member {string} [domain] The organization's active directory domain.
   */
  domain?: string;
  /**
   * @member {string} [organizationalUnitDN] The organizational unit within the
   * Active Directory to place the cluster and service accounts.
   */
  organizationalUnitDN?: string;
  /**
   * @member {string[]} [ldapsUrls] The LDAPS protocol URLs to communicate with
   * the Active Directory.
   */
  ldapsUrls?: string[];
  /**
   * @member {string} [domainUsername] The domain user account that will have
   * admin privileges on the cluster.
   */
  domainUsername?: string;
  /**
   * @member {string} [domainUserPassword] The domain admin password.
   */
  domainUserPassword?: string;
  /**
   * @member {string[]} [clusterUsersGroupDNs] Optional. The Distinguished
   * Names for cluster user groups
   */
  clusterUsersGroupDNs?: string[];
  /**
   * @member {string} [aaddsResourceId] The resource ID of the user's Azure
   * Active Directory Domain Service.
   */
  aaddsResourceId?: string;
  /**
   * @member {string} [msiResourceId] User assigned identity that has
   * permissions to read and create cluster-related artifacts in the user's
   * AADDS.
   */
  msiResourceId?: string;
}

/**
 * @interface
 * An interface representing HardwareProfile.
 * The hardware profile.
 *
 */
export interface HardwareProfile {
  /**
   * @member {string} [vmSize] The size of the VM
   */
  vmSize?: string;
}

/**
 * @interface
 * An interface representing VirtualNetworkProfile.
 * The virtual network properties.
 *
 */
export interface VirtualNetworkProfile {
  /**
   * @member {string} [id] The ID of the virtual network.
   */
  id?: string;
  /**
   * @member {string} [subnet] The name of the subnet.
   */
  subnet?: string;
}

/**
 * @interface
 * An interface representing DataDisksGroups.
 * The data disks groups for the role.
 *
 */
export interface DataDisksGroups {
  /**
   * @member {number} [disksPerNode] The number of disks per node.
   */
  disksPerNode?: number;
  /**
   * @member {string} [storageAccountType] ReadOnly. The storage account type.
   * Do not set this value.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly storageAccountType?: string;
  /**
   * @member {number} [diskSizeGB] ReadOnly. The DiskSize in GB. Do not set
   * this value.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly diskSizeGB?: number;
}

/**
 * @interface
 * An interface representing SshPublicKey.
 * The SSH public key for the cluster nodes.
 *
 */
export interface SshPublicKey {
  /**
   * @member {string} [certificateData] The certificate for SSH.
   */
  certificateData?: string;
}

/**
 * @interface
 * An interface representing SshProfile.
 * The list of SSH public keys.
 *
 */
export interface SshProfile {
  /**
   * @member {SshPublicKey[]} [publicKeys] The list of SSH public keys.
   */
  publicKeys?: SshPublicKey[];
}

/**
 * @interface
 * An interface representing LinuxOperatingSystemProfile.
 * The ssh username, password, and ssh public key.
 *
 */
export interface LinuxOperatingSystemProfile {
  /**
   * @member {string} [username] The username.
   */
  username?: string;
  /**
   * @member {string} [password] The password.
   */
  password?: string;
  /**
   * @member {SshProfile} [sshProfile] The SSH profile.
   */
  sshProfile?: SshProfile;
}

/**
 * @interface
 * An interface representing OsProfile.
 * The Linux operation systems profile.
 *
 */
export interface OsProfile {
  /**
   * @member {LinuxOperatingSystemProfile} [linuxOperatingSystemProfile] The
   * Linux OS profile.
   */
  linuxOperatingSystemProfile?: LinuxOperatingSystemProfile;
}

/**
 * @interface
 * An interface representing ScriptAction.
 * Describes a script action on role on the cluster.
 *
 */
export interface ScriptAction {
  /**
   * @member {string} name The name of the script action.
   */
  name: string;
  /**
   * @member {string} uri The URI to the script.
   */
  uri: string;
  /**
   * @member {string} parameters The parameters for the script provided.
   */
  parameters: string;
}

/**
 * @interface
 * An interface representing Role.
 * Describes a role on the cluster.
 *
 */
export interface Role {
  /**
   * @member {string} [name] The name of the role.
   */
  name?: string;
  /**
   * @member {number} [minInstanceCount] The minimum instance count of the
   * cluster.
   */
  minInstanceCount?: number;
  /**
   * @member {number} [targetInstanceCount] The instance count of the cluster.
   */
  targetInstanceCount?: number;
  /**
   * @member {HardwareProfile} [hardwareProfile] The hardware profile.
   */
  hardwareProfile?: HardwareProfile;
  /**
   * @member {OsProfile} [osProfile] The operating system profile.
   */
  osProfile?: OsProfile;
  /**
   * @member {VirtualNetworkProfile} [virtualNetworkProfile] The virtual
   * network profile.
   */
  virtualNetworkProfile?: VirtualNetworkProfile;
  /**
   * @member {DataDisksGroups[]} [dataDisksGroups] The data disks groups for
   * the role.
   */
  dataDisksGroups?: DataDisksGroups[];
  /**
   * @member {ScriptAction[]} [scriptActions] The list of script actions on the
   * role.
   */
  scriptActions?: ScriptAction[];
}

/**
 * @interface
 * An interface representing ComputeProfile.
 * Describes the compute profile.
 *
 */
export interface ComputeProfile {
  /**
   * @member {Role[]} [roles] The list of roles in the cluster.
   */
  roles?: Role[];
}

/**
 * @interface
 * An interface representing StorageAccount.
 * The storage Account.
 *
 */
export interface StorageAccount {
  /**
   * @member {string} [name] The name of the storage account.
   */
  name?: string;
  /**
   * @member {boolean} [isDefault] Whether or not the storage account is the
   * default storage account.
   */
  isDefault?: boolean;
  /**
   * @member {string} [container] The container in the storage account, only to
   * be specified for WASB storage accounts.
   */
  container?: string;
  /**
   * @member {string} [fileSystem] The filesystem, only to be specified for
   * Azure Data Lake Storage type Gen 2.
   */
  fileSystem?: string;
  /**
   * @member {string} [key] The storage account access key.
   */
  key?: string;
}

/**
 * @interface
 * An interface representing StorageProfile.
 * The storage profile.
 *
 */
export interface StorageProfile {
  /**
   * @member {StorageAccount[]} [storageaccounts] The list of storage accounts
   * in the cluster.
   */
  storageaccounts?: StorageAccount[];
}

/**
 * @interface
 * An interface representing ClusterCreateProperties.
 * The cluster create parameters.
 *
 */
export interface ClusterCreateProperties {
  /**
   * @member {string} [clusterVersion] The version of the cluster.
   */
  clusterVersion?: string;
  /**
   * @member {OSType} [osType] The type of operating system. Possible values
   * include: 'Windows', 'Linux'
   */
  osType?: OSType;
  /**
   * @member {Tier} [tier] The cluster tier. Possible values include:
   * 'Standard', 'Premium'
   */
  tier?: Tier;
  /**
   * @member {ClusterDefinition} [clusterDefinition] The cluster definition.
   */
  clusterDefinition?: ClusterDefinition;
  /**
   * @member {SecurityProfile} [securityProfile] The security profile.
   */
  securityProfile?: SecurityProfile;
  /**
   * @member {ComputeProfile} [computeProfile] The compute profile.
   */
  computeProfile?: ComputeProfile;
  /**
   * @member {StorageProfile} [storageProfile] The storage profile.
   */
  storageProfile?: StorageProfile;
}

/**
 * @interface
 * An interface representing ClusterIdentityUserAssignedIdentitiesValue.
 */
export interface ClusterIdentityUserAssignedIdentitiesValue {
  /**
   * @member {string} [principalId] The principal id of user assigned identity.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly principalId?: string;
  /**
   * @member {string} [clientId] The client id of user assigned identity.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly clientId?: string;
}

/**
 * @interface
 * An interface representing ClusterIdentity.
 * Identity for the cluster.
 *
 */
export interface ClusterIdentity {
  /**
   * @member {string} [principalId] The principal id of cluster identity. This
   * property will only be provided for a system assigned identity.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly principalId?: string;
  /**
   * @member {string} [tenantId] The tenant id associated with the cluster.
   * This property will only be provided for a system assigned identity.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly tenantId?: string;
  /**
   * @member {ResourceIdentityType} [type] The type of identity used for the
   * cluster. The type 'SystemAssigned, UserAssigned' includes both an
   * implicitly created identity and a set of user assigned identities.
   * Possible values include: 'SystemAssigned', 'UserAssigned',
   * 'SystemAssigned, UserAssigned', 'None'
   */
  type?: ResourceIdentityType;
  /**
   * @member {{ [propertyName: string]:
   * ClusterIdentityUserAssignedIdentitiesValue }} [userAssignedIdentities] The
   * list of user identities associated with the cluster. The user identity
   * dictionary key references will be ARM resource ids in the form:
   * '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
   */
  userAssignedIdentities?: { [propertyName: string]: ClusterIdentityUserAssignedIdentitiesValue };
}

/**
 * @interface
 * An interface representing ClusterCreateParametersExtended.
 * The CreateCluster request parameters.
 *
 */
export interface ClusterCreateParametersExtended {
  /**
   * @member {string} [location] The location of the cluster.
   */
  location?: string;
  /**
   * @member {{ [propertyName: string]: string }} [tags] The resource tags.
   */
  tags?: { [propertyName: string]: string };
  /**
   * @member {ClusterCreateProperties} [properties] The cluster create
   * parameters.
   */
  properties?: ClusterCreateProperties;
  /**
   * @member {ClusterIdentity} [identity] The identity of the cluster, if
   * configured.
   */
  identity?: ClusterIdentity;
}

/**
 * @interface
 * An interface representing ClusterPatchParameters.
 * The PatchCluster request parameters
 *
 */
export interface ClusterPatchParameters {
  /**
   * @member {{ [propertyName: string]: string }} [tags] The resource tags.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * @interface
 * An interface representing QuotaInfo.
 * The quota properties for the cluster.
 *
 */
export interface QuotaInfo {
  /**
   * @member {number} [coresUsed] The cores used by the cluster.
   */
  coresUsed?: number;
}

/**
 * @interface
 * An interface representing Errors.
 * The error message associated with the cluster creation.
 *
 */
export interface Errors {
  /**
   * @member {string} [code] The error code.
   */
  code?: string;
  /**
   * @member {string} [message] The error message.
   */
  message?: string;
}

/**
 * @interface
 * An interface representing ConnectivityEndpoint.
 * The connectivity properties
 *
 */
export interface ConnectivityEndpoint {
  /**
   * @member {string} [name] The name of the endpoint.
   */
  name?: string;
  /**
   * @member {string} [protocol] The protocol of the endpoint.
   */
  protocol?: string;
  /**
   * @member {string} [location] The location of the endpoint.
   */
  location?: string;
  /**
   * @member {number} [port] The port to connect to.
   */
  port?: number;
}

/**
 * @interface
 * An interface representing ClusterGetProperties.
 * The properties of cluster.
 *
 */
export interface ClusterGetProperties {
  /**
   * @member {string} [clusterVersion] The version of the cluster.
   */
  clusterVersion?: string;
  /**
   * @member {OSType} [osType] The type of operating system. Possible values
   * include: 'Windows', 'Linux'
   */
  osType?: OSType;
  /**
   * @member {Tier} [tier] The cluster tier. Possible values include:
   * 'Standard', 'Premium'
   */
  tier?: Tier;
  /**
   * @member {ClusterDefinition} clusterDefinition The cluster definition.
   */
  clusterDefinition: ClusterDefinition;
  /**
   * @member {SecurityProfile} [securityProfile] The security profile.
   */
  securityProfile?: SecurityProfile;
  /**
   * @member {ComputeProfile} [computeProfile] The compute profile.
   */
  computeProfile?: ComputeProfile;
  /**
   * @member {HDInsightClusterProvisioningState} [provisioningState] The
   * provisioning state, which only appears in the response. Possible values
   * include: 'InProgress', 'Failed', 'Succeeded', 'Canceled', 'Deleting'
   */
  provisioningState?: HDInsightClusterProvisioningState;
  /**
   * @member {string} [createdDate] The date on which the cluster was created.
   */
  createdDate?: string;
  /**
   * @member {string} [clusterState] The state of the cluster.
   */
  clusterState?: string;
  /**
   * @member {QuotaInfo} [quotaInfo] The quota information.
   */
  quotaInfo?: QuotaInfo;
  /**
   * @member {Errors[]} [errors] The list of errors.
   */
  errors?: Errors[];
  /**
   * @member {ConnectivityEndpoint[]} [connectivityEndpoints] The list of
   * connectivity endpoints.
   */
  connectivityEndpoints?: ConnectivityEndpoint[];
}

/**
 * @interface
 * An interface representing Resource.
 * The core properties of ARM resources
 *
 * @extends BaseResource
 */
export interface Resource extends BaseResource {
  /**
   * @member {string} [id] Fully qualified resource Id for the resource.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [name] The name of the resource
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [type] The type of the resource.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: string;
}

/**
 * @interface
 * An interface representing TrackedResource.
 * The resource model definition for a ARM tracked top level resource
 *
 * @extends Resource
 */
export interface TrackedResource extends Resource {
  /**
   * @member {string} [location] The Azure Region where the resource lives
   */
  location?: string;
  /**
   * @member {{ [propertyName: string]: string }} [tags] Resource tags.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * @interface
 * An interface representing Cluster.
 * The HDInsight cluster.
 *
 * @extends TrackedResource
 */
export interface Cluster extends TrackedResource {
  /**
   * @member {string} [etag] The ETag for the resource
   */
  etag?: string;
  /**
   * @member {ClusterGetProperties} [properties] The properties of the cluster.
   */
  properties?: ClusterGetProperties;
  /**
   * @member {ClusterIdentity} [identity] The identity of the cluster, if
   * configured.
   */
  identity?: ClusterIdentity;
}

/**
 * @interface
 * An interface representing RuntimeScriptAction.
 * Describes a script action on a running cluster.
 *
 */
export interface RuntimeScriptAction {
  /**
   * @member {string} name The name of the script action.
   */
  name: string;
  /**
   * @member {string} uri The URI to the script.
   */
  uri: string;
  /**
   * @member {string} [parameters] The parameters for the script
   */
  parameters?: string;
  /**
   * @member {string[]} roles The list of roles where script will be executed.
   */
  roles: string[];
  /**
   * @member {string} [applicationName] The application name of the script
   * action, if any.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly applicationName?: string;
}

/**
 * @interface
 * An interface representing ExecuteScriptActionParameters.
 * The parameters for the script actions to execute on a running cluster.
 *
 */
export interface ExecuteScriptActionParameters {
  /**
   * @member {RuntimeScriptAction[]} [scriptActions] The list of run time
   * script actions.
   */
  scriptActions?: RuntimeScriptAction[];
  /**
   * @member {boolean} persistOnSuccess Gets or sets if the scripts needs to be
   * persisted.
   */
  persistOnSuccess: boolean;
}

/**
 * @interface
 * An interface representing ClusterListPersistedScriptActionsResult.
 * The ListPersistedScriptActions operation response.
 *
 */
export interface ClusterListPersistedScriptActionsResult {
  /**
   * @member {RuntimeScriptAction[]} [value] The list of Persisted Script
   * Actions.
   */
  value?: RuntimeScriptAction[];
  /**
   * @member {string} [nextLink] The link (url) to the next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing ScriptActionExecutionSummary.
 * The execution summary of a script action.
 *
 */
export interface ScriptActionExecutionSummary {
  /**
   * @member {string} [status] The status of script action execution.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly status?: string;
  /**
   * @member {number} [instanceCount] The instance count for a given script
   * action execution status.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly instanceCount?: number;
}

/**
 * @interface
 * An interface representing RuntimeScriptActionDetail.
 * The execution details of a script action.
 *
 * @extends RuntimeScriptAction
 */
export interface RuntimeScriptActionDetail extends RuntimeScriptAction {
  /**
   * @member {number} [scriptExecutionId] The execution id of the script
   * action.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly scriptExecutionId?: number;
  /**
   * @member {string} [startTime] The start time of script action execution.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly startTime?: string;
  /**
   * @member {string} [endTime] The end time of script action execution.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly endTime?: string;
  /**
   * @member {string} [status] The current execution status of the script
   * action.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly status?: string;
  /**
   * @member {string} [operation] The reason why the script action was
   * executed.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly operation?: string;
  /**
   * @member {ScriptActionExecutionSummary[]} [executionSummary] The summary of
   * script action execution result.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly executionSummary?: ScriptActionExecutionSummary[];
  /**
   * @member {string} [debugInformation] The script action execution debug
   * information.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly debugInformation?: string;
}

/**
 * @interface
 * An interface representing ClusterListRuntimeScriptActionDetailResult.
 * The list runtime script action detail response.
 *
 */
export interface ClusterListRuntimeScriptActionDetailResult {
  /**
   * @member {RuntimeScriptActionDetail[]} [value] The list of persisted script
   * action details for the cluster.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly value?: RuntimeScriptActionDetail[];
  /**
   * @member {string} [nextLink] The link (url) to the next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing ClusterResizeParameters.
 * The Resize Cluster request parameters.
 *
 */
export interface ClusterResizeParameters {
  /**
   * @member {number} [targetInstanceCount] The target instance count for the
   * operation.
   */
  targetInstanceCount?: number;
}

/**
 * @interface
 * An interface representing OperationResource.
 * The azure async operation response.
 *
 */
export interface OperationResource {
  /**
   * @member {AsyncOperationState} [status] The async operation state. Possible
   * values include: 'InProgress', 'Succeeded', 'Failed'
   */
  status?: AsyncOperationState;
  /**
   * @member {Errors} [error] The operation error information.
   */
  error?: Errors;
}

/**
 * @interface
 * An interface representing ProxyResource.
 * The resource model definition for a ARM proxy resource. It will have
 * everything other than required location and tags
 *
 * @extends Resource
 */
export interface ProxyResource extends Resource {
}

/**
 * @interface
 * An interface representing ErrorResponse.
 * Describes the format of Error response.
 *
 */
export interface ErrorResponse {
  /**
   * @member {string} [code] Error code
   */
  code?: string;
  /**
   * @member {string} [message] Error message indicating why the operation
   * failed.
   */
  message?: string;
}

/**
 * @interface
 * An interface representing ApplicationGetHttpsEndpoint.
 * Gets the application HTTP endpoints.
 *
 */
export interface ApplicationGetHttpsEndpoint {
  /**
   * @member {string[]} [accessModes] The list of access modes for the
   * application.
   */
  accessModes?: string[];
  /**
   * @member {string} [location] The location of the endpoint.
   */
  location?: string;
  /**
   * @member {number} [destinationPort] The destination port to connect to.
   */
  destinationPort?: number;
  /**
   * @member {number} [publicPort] The public port to connect to.
   */
  publicPort?: number;
}

/**
 * @interface
 * An interface representing ApplicationGetEndpoint.
 * Gets the application SSH endpoint
 *
 */
export interface ApplicationGetEndpoint {
  /**
   * @member {string} [location] The location of the endpoint.
   */
  location?: string;
  /**
   * @member {number} [destinationPort] The destination port to connect to.
   */
  destinationPort?: number;
  /**
   * @member {number} [publicPort] The public port to connect to.
   */
  publicPort?: number;
}

/**
 * @interface
 * An interface representing ApplicationProperties.
 * The HDInsight cluster application GET response.
 *
 */
export interface ApplicationProperties {
  /**
   * @member {ComputeProfile} [computeProfile] The list of roles in the
   * cluster.
   */
  computeProfile?: ComputeProfile;
  /**
   * @member {RuntimeScriptAction[]} [installScriptActions] The list of install
   * script actions.
   */
  installScriptActions?: RuntimeScriptAction[];
  /**
   * @member {RuntimeScriptAction[]} [uninstallScriptActions] The list of
   * uninstall script actions.
   */
  uninstallScriptActions?: RuntimeScriptAction[];
  /**
   * @member {ApplicationGetHttpsEndpoint[]} [httpsEndpoints] The list of
   * application HTTPS endpoints.
   */
  httpsEndpoints?: ApplicationGetHttpsEndpoint[];
  /**
   * @member {ApplicationGetEndpoint[]} [sshEndpoints] The list of application
   * SSH endpoints.
   */
  sshEndpoints?: ApplicationGetEndpoint[];
  /**
   * @member {string} [provisioningState] The provisioning state of the
   * application.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provisioningState?: string;
  /**
   * @member {string} [applicationType] The application type.
   */
  applicationType?: string;
  /**
   * @member {string} [applicationState] The application state.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly applicationState?: string;
  /**
   * @member {Errors[]} [errors] The list of errors.
   */
  errors?: Errors[];
  /**
   * @member {string} [createdDate] The application create date time.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly createdDate?: string;
  /**
   * @member {string} [marketplaceIdentifier] The marketplace identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly marketplaceIdentifier?: string;
}

/**
 * @interface
 * An interface representing Application.
 * The HDInsight cluster application
 *
 * @extends ProxyResource
 */
export interface Application extends ProxyResource {
  /**
   * @member {string} [etag] The ETag for the application
   */
  etag?: string;
  /**
   * @member {{ [propertyName: string]: string }} [tags] The tags for the
   * application.
   */
  tags?: { [propertyName: string]: string };
  /**
   * @member {ApplicationProperties} [properties] The properties of the
   * application.
   */
  properties?: ApplicationProperties;
}

/**
 * @interface
 * An interface representing LocalizedName.
 * The details about the localizable name of a type of usage.
 *
 */
export interface LocalizedName {
  /**
   * @member {string} [value] The name of the used resource.
   */
  value?: string;
  /**
   * @member {string} [localizedValue] The localized name of the used resource.
   */
  localizedValue?: string;
}

/**
 * @interface
 * An interface representing Usage.
 * The details about the usage of a particular limited resource.
 *
 */
export interface Usage {
  /**
   * @member {string} [unit] The type of measurement for usage.
   */
  unit?: string;
  /**
   * @member {number} [currentValue] The current usage.
   */
  currentValue?: number;
  /**
   * @member {number} [limit] The maximum allowed usage.
   */
  limit?: number;
  /**
   * @member {LocalizedName} [name] The details about the localizable name of
   * the used resource.
   */
  name?: LocalizedName;
}

/**
 * @interface
 * An interface representing UsagesListResult.
 * The response for the operation to get regional usages for a subscription.
 *
 */
export interface UsagesListResult {
  /**
   * @member {Usage[]} [value] The list of usages.
   */
  value?: Usage[];
}

/**
 * @interface
 * An interface representing Extension.
 * Cluster monitoring extensions
 *
 */
export interface Extension {
  /**
   * @member {string} [workspaceId] The workspace ID for the cluster monitoring
   * extension.
   */
  workspaceId?: string;
  /**
   * @member {string} [primaryKey] The certificate for the cluster monitoring
   * extensions.
   */
  primaryKey?: string;
}

/**
 * @interface
 * An interface representing ClusterMonitoringResponse.
 * The Operations Management Suite (OMS) status response
 *
 */
export interface ClusterMonitoringResponse {
  /**
   * @member {boolean} [clusterMonitoringEnabled] The status of the Operations
   * Management Suite (OMS) on the HDInsight cluster.
   */
  clusterMonitoringEnabled?: boolean;
  /**
   * @member {string} [workspaceId] The workspace ID of the Operations
   * Management Suite (OMS) on the HDInsight cluster.
   */
  workspaceId?: string;
}

/**
 * @interface
 * An interface representing ClusterMonitoringRequest.
 * The Operations Management Suite (OMS) parameters.
 *
 */
export interface ClusterMonitoringRequest {
  /**
   * @member {string} [workspaceId] The Operations Management Suite (OMS)
   * workspace ID.
   */
  workspaceId?: string;
  /**
   * @member {string} [primaryKey] The Operations Management Suite (OMS)
   * workspace key.
   */
  primaryKey?: string;
}

/**
 * @interface
 * An interface representing ScriptActionPersistedGetResponseSpec.
 * The persisted script action for cluster.
 *
 */
export interface ScriptActionPersistedGetResponseSpec {
  /**
   * @member {string} [name] The name of script action.
   */
  name?: string;
  /**
   * @member {string} [uri] The URI to the script.
   */
  uri?: string;
  /**
   * @member {string} [parameters] The parameters for the script provided.
   */
  parameters?: string;
  /**
   * @member {string[]} [roles] The list of roles where script will be
   * executed.
   */
  roles?: string[];
  /**
   * @member {string} [applicationName] The application name for the script
   * action.
   */
  applicationName?: string;
}

/**
 * @interface
 * An interface representing OperationDisplay.
 * The object that represents the operation.
 *
 */
export interface OperationDisplay {
  /**
   * @member {string} [provider] The service provider: Microsoft.HDInsight
   */
  provider?: string;
  /**
   * @member {string} [resource] The resource on which the operation is
   * performed: Cluster, Applications, etc.
   */
  resource?: string;
  /**
   * @member {string} [operation] The operation type: read, write, delete, etc.
   */
  operation?: string;
}

/**
 * @interface
 * An interface representing Operation.
 * The HDInsight REST API operation.
 *
 */
export interface Operation {
  /**
   * @member {string} [name] The operation name:
   * {provider}/{resource}/{operation}
   */
  name?: string;
  /**
   * @member {OperationDisplay} [display] The object that represents the
   * operation.
   */
  display?: OperationDisplay;
}

/**
 * @interface
 * An interface representing HDInsightManagementClientOptions.
 * @extends AzureServiceClientOptions
 */
export interface HDInsightManagementClientOptions extends AzureServiceClientOptions {
  /**
   * @member {string} [baseUri]
   */
  baseUri?: string;
}


/**
 * @interface
 * An interface representing the ClusterListResult.
 * The List Cluster operation response.
 *
 * @extends Array<Cluster>
 */
export interface ClusterListResult extends Array<Cluster> {
  /**
   * @member {string} [nextLink] The link (url) to the next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the ApplicationListResult.
 * Result of the request to list cluster Applications. It contains a list of
 * operations and a URL link to get the next set of results.
 *
 * @extends Array<Application>
 */
export interface ApplicationListResult extends Array<Application> {
  /**
   * @member {string} [nextLink] The URL to get the next set of operation list
   * results if there are any.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the ScriptActionsList.
 * The persisted script action for the cluster.
 *
 * @extends Array<RuntimeScriptActionDetail>
 */
export interface ScriptActionsList extends Array<RuntimeScriptActionDetail> {
  /**
   * @member {string} [nextLink] The link (url) to the next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the ScriptActionExecutionHistoryList.
 * The list script execution history response.
 *
 * @extends Array<RuntimeScriptActionDetail>
 */
export interface ScriptActionExecutionHistoryList extends Array<RuntimeScriptActionDetail> {
  /**
   * @member {string} [nextLink] The link (url) to the next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the OperationListResult.
 * Result of the request to list HDInsight operations. It contains a list of
 * operations and a URL link to get the next set of results.
 *
 * @extends Array<Operation>
 */
export interface OperationListResult extends Array<Operation> {
  /**
   * @member {string} [nextLink] The URL to get the next set of operation list
   * results if there are any.
   */
  nextLink?: string;
}

/**
 * Defines values for DirectoryType.
 * Possible values include: 'ActiveDirectory'
 * @readonly
 * @enum {string}
 */
export type DirectoryType = 'ActiveDirectory';

/**
 * Defines values for OSType.
 * Possible values include: 'Windows', 'Linux'
 * @readonly
 * @enum {string}
 */
export type OSType = 'Windows' | 'Linux';

/**
 * Defines values for Tier.
 * Possible values include: 'Standard', 'Premium'
 * @readonly
 * @enum {string}
 */
export type Tier = 'Standard' | 'Premium';

/**
 * Defines values for ResourceIdentityType.
 * Possible values include: 'SystemAssigned', 'UserAssigned', 'SystemAssigned, UserAssigned',
 * 'None'
 * @readonly
 * @enum {string}
 */
export type ResourceIdentityType = 'SystemAssigned' | 'UserAssigned' | 'SystemAssigned, UserAssigned' | 'None';

/**
 * Defines values for HDInsightClusterProvisioningState.
 * Possible values include: 'InProgress', 'Failed', 'Succeeded', 'Canceled', 'Deleting'
 * @readonly
 * @enum {string}
 */
export type HDInsightClusterProvisioningState = 'InProgress' | 'Failed' | 'Succeeded' | 'Canceled' | 'Deleting';

/**
 * Defines values for AsyncOperationState.
 * Possible values include: 'InProgress', 'Succeeded', 'Failed'
 * @readonly
 * @enum {string}
 */
export type AsyncOperationState = 'InProgress' | 'Succeeded' | 'Failed';

/**
 * Contains response data for the create operation.
 */
export type ClustersCreateResponse = Cluster & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Cluster;
    };
};

/**
 * Contains response data for the update operation.
 */
export type ClustersUpdateResponse = Cluster & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Cluster;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ClustersGetResponse = Cluster & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Cluster;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type ClustersListByResourceGroupResponse = ClusterListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ClusterListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type ClustersListResponse = ClusterListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ClusterListResult;
    };
};

/**
 * Contains response data for the beginCreate operation.
 */
export type ClustersBeginCreateResponse = Cluster & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Cluster;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type ClustersListByResourceGroupNextResponse = ClusterListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ClusterListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type ClustersListNextResponse = ClusterListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ClusterListResult;
    };
};

/**
 * Contains response data for the listByCluster operation.
 */
export type ApplicationsListByClusterResponse = ApplicationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApplicationListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ApplicationsGetResponse = Application & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Application;
    };
};

/**
 * Contains response data for the create operation.
 */
export type ApplicationsCreateResponse = Application & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Application;
    };
};

/**
 * Contains response data for the beginCreate operation.
 */
export type ApplicationsBeginCreateResponse = Application & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Application;
    };
};

/**
 * Contains response data for the listByClusterNext operation.
 */
export type ApplicationsListByClusterNextResponse = ApplicationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApplicationListResult;
    };
};

/**
 * Contains response data for the listUsages operation.
 */
export type LocationsListUsagesResponse = UsagesListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: UsagesListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ConfigurationsGetResponse = {
  /**
   * The response body properties.
   */
  [propertyName: string]: string;
} & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: { [propertyName: string]: string };
    };
};

/**
 * Contains response data for the getMonitoringStatus operation.
 */
export type ExtensionsGetMonitoringStatusResponse = ClusterMonitoringResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ClusterMonitoringResponse;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ExtensionsGetResponse = Extension & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Extension;
    };
};

/**
 * Contains response data for the listByCluster operation.
 */
export type ScriptActionsListByClusterResponse = ScriptActionsList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ScriptActionsList;
    };
};

/**
 * Contains response data for the getExecutionDetail operation.
 */
export type ScriptActionsGetExecutionDetailResponse = RuntimeScriptActionDetail & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RuntimeScriptActionDetail;
    };
};

/**
 * Contains response data for the listByClusterNext operation.
 */
export type ScriptActionsListByClusterNextResponse = ScriptActionsList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ScriptActionsList;
    };
};

/**
 * Contains response data for the listByCluster operation.
 */
export type ScriptExecutionHistoryListByClusterResponse = ScriptActionExecutionHistoryList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ScriptActionExecutionHistoryList;
    };
};

/**
 * Contains response data for the listByClusterNext operation.
 */
export type ScriptExecutionHistoryListByClusterNextResponse = ScriptActionExecutionHistoryList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ScriptActionExecutionHistoryList;
    };
};

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type OperationsListNextResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationListResult;
    };
};
