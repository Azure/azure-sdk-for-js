/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "ms-rest-azure-js";
import * as msRest from "ms-rest-js";

export { BaseResource, CloudError };


/**
 * @interface
 * An interface representing Resource.
 * ARM resource.
 *
 * @extends BaseResource
 */
export interface Resource extends BaseResource {
  /**
   * @member {string} [id] Resource ID.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [name] Resource name.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [type] Resource type.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: string;
}

/**
 * @interface
 * An interface representing ProxyResource.
 * ARM proxy resource.
 *
 * @extends Resource
 */
export interface ProxyResource extends Resource {
}

/**
 * @interface
 * An interface representing RecoverableDatabase.
 * A recoverable database
 *
 * @extends ProxyResource
 */
export interface RecoverableDatabase extends ProxyResource {
  /**
   * @member {string} [edition] The edition of the database
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly edition?: string;
  /**
   * @member {string} [serviceLevelObjective] The service level objective name
   * of the database
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly serviceLevelObjective?: string;
  /**
   * @member {string} [elasticPoolName] The elastic pool name of the database
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly elasticPoolName?: string;
  /**
   * @member {Date} [lastAvailableBackupDate] The last available backup date of
   * the database (ISO8601 format)
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly lastAvailableBackupDate?: Date;
}

/**
 * @interface
 * An interface representing RestorableDroppedDatabase.
 * A restorable dropped database
 *
 * @extends ProxyResource
 */
export interface RestorableDroppedDatabase extends ProxyResource {
  /**
   * @member {string} [location] The geo-location where the resource lives
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly location?: string;
  /**
   * @member {string} [databaseName] The name of the database
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly databaseName?: string;
  /**
   * @member {string} [edition] The edition of the database
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly edition?: string;
  /**
   * @member {string} [maxSizeBytes] The max size in bytes of the database
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly maxSizeBytes?: string;
  /**
   * @member {string} [serviceLevelObjective] The service level objective name
   * of the database
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly serviceLevelObjective?: string;
  /**
   * @member {string} [elasticPoolName] The elastic pool name of the database
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly elasticPoolName?: string;
  /**
   * @member {Date} [creationDate] The creation date of the database (ISO8601
   * format)
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly creationDate?: Date;
  /**
   * @member {Date} [deletionDate] The deletion date of the database (ISO8601
   * format)
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly deletionDate?: Date;
  /**
   * @member {Date} [earliestRestoreDate] The earliest restore date of the
   * database (ISO8601 format)
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly earliestRestoreDate?: Date;
}

/**
 * @interface
 * An interface representing TrackedResource.
 * ARM tracked top level resource.
 *
 * @extends Resource
 */
export interface TrackedResource extends Resource {
  /**
   * @member {string} location Resource location.
   */
  location: string;
  /**
   * @member {{ [propertyName: string]: string }} [tags] Resource tags.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * @interface
 * An interface representing CheckNameAvailabilityRequest.
 * A request to check whether the specified name for a resource is available.
 *
 */
export interface CheckNameAvailabilityRequest {
  /**
   * @member {string} name The name whose availability is to be checked.
   */
  name: string;
}

/**
 * @interface
 * An interface representing CheckNameAvailabilityResponse.
 * A response indicating whether the specified name for a resource is
 * available.
 *
 */
export interface CheckNameAvailabilityResponse {
  /**
   * @member {boolean} [available] True if the name is available, otherwise
   * false.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly available?: boolean;
  /**
   * @member {string} [message] A message explaining why the name is
   * unavailable. Will be null if the name is available.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly message?: string;
  /**
   * @member {string} [name] The name whose availability was checked.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {CheckNameAvailabilityReason} [reason] The reason code explaining
   * why the name is unavailable. Will be null if the name is available.
   * Possible values include: 'Invalid', 'AlreadyExists'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly reason?: CheckNameAvailabilityReason;
}

/**
 * @interface
 * An interface representing ServerConnectionPolicy.
 * A server secure connection policy.
 *
 * @extends ProxyResource
 */
export interface ServerConnectionPolicy extends ProxyResource {
  /**
   * @member {string} [kind] Metadata used for the Azure portal experience.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly kind?: string;
  /**
   * @member {string} [location] Resource location.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly location?: string;
  /**
   * @member {ServerConnectionType} connectionType The server connection type.
   * Possible values include: 'Default', 'Proxy', 'Redirect'
   */
  connectionType: ServerConnectionType;
}

/**
 * @interface
 * An interface representing DatabaseSecurityAlertPolicy.
 * Contains information about a database Threat Detection policy.
 *
 * @extends ProxyResource
 */
export interface DatabaseSecurityAlertPolicy extends ProxyResource {
  /**
   * @member {string} [location] The geo-location where the resource lives
   */
  location?: string;
  /**
   * @member {string} [kind] Resource kind.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly kind?: string;
  /**
   * @member {SecurityAlertPolicyState} state Specifies the state of the
   * policy. If state is Enabled, storageEndpoint and storageAccountAccessKey
   * are required. Possible values include: 'New', 'Enabled', 'Disabled'
   */
  state: SecurityAlertPolicyState;
  /**
   * @member {string} [disabledAlerts] Specifies the semicolon-separated list
   * of alerts that are disabled, or empty string to disable no alerts.
   * Possible values: Sql_Injection; Sql_Injection_Vulnerability;
   * Access_Anomaly; Data_Exfiltration; Unsafe_Action.
   */
  disabledAlerts?: string;
  /**
   * @member {string} [emailAddresses] Specifies the semicolon-separated list
   * of e-mail addresses to which the alert is sent.
   */
  emailAddresses?: string;
  /**
   * @member {SecurityAlertPolicyEmailAccountAdmins} [emailAccountAdmins]
   * Specifies that the alert is sent to the account administrators. Possible
   * values include: 'Enabled', 'Disabled'
   */
  emailAccountAdmins?: SecurityAlertPolicyEmailAccountAdmins;
  /**
   * @member {string} [storageEndpoint] Specifies the blob storage endpoint
   * (e.g. https://MyAccount.blob.core.windows.net). This blob storage will
   * hold all Threat Detection audit logs. If state is Enabled, storageEndpoint
   * is required.
   */
  storageEndpoint?: string;
  /**
   * @member {string} [storageAccountAccessKey] Specifies the identifier key of
   * the Threat Detection audit storage account. If state is Enabled,
   * storageAccountAccessKey is required.
   */
  storageAccountAccessKey?: string;
  /**
   * @member {number} [retentionDays] Specifies the number of days to keep in
   * the Threat Detection audit logs.
   */
  retentionDays?: number;
  /**
   * @member {SecurityAlertPolicyUseServerDefault} [useServerDefault] Specifies
   * whether to use the default server policy. Possible values include:
   * 'Enabled', 'Disabled'
   */
  useServerDefault?: SecurityAlertPolicyUseServerDefault;
}

/**
 * @interface
 * An interface representing DataMaskingPolicy.
 * Represents a database data masking policy.
 *
 * @extends ProxyResource
 */
export interface DataMaskingPolicy extends ProxyResource {
  /**
   * @member {DataMaskingState} dataMaskingState The state of the data masking
   * policy. Possible values include: 'Disabled', 'Enabled'
   */
  dataMaskingState: DataMaskingState;
  /**
   * @member {string} [exemptPrincipals] The list of the exempt principals.
   * Specifies the semicolon-separated list of database users for which the
   * data masking policy does not apply. The specified users receive data
   * results without masking for all of the database queries.
   */
  exemptPrincipals?: string;
  /**
   * @member {string} [applicationPrincipals] The list of the application
   * principals. This is a legacy parameter and is no longer used.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly applicationPrincipals?: string;
  /**
   * @member {string} [maskingLevel] The masking level. This is a legacy
   * parameter and is no longer used.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly maskingLevel?: string;
  /**
   * @member {string} [location] The location of the data masking policy.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly location?: string;
  /**
   * @member {string} [kind] The kind of data masking policy. Metadata, used
   * for Azure portal.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly kind?: string;
}

/**
 * @interface
 * An interface representing DataMaskingRule.
 * Represents a database data masking rule.
 *
 * @extends ProxyResource
 */
export interface DataMaskingRule extends ProxyResource {
  /**
   * @member {string} [dataMaskingRuleId] The rule Id.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly dataMaskingRuleId?: string;
  /**
   * @member {string} [aliasName] The alias name. This is a legacy parameter
   * and is no longer used.
   */
  aliasName?: string;
  /**
   * @member {DataMaskingRuleState} [ruleState] The rule state. Used to delete
   * a rule. To delete an existing rule, specify the schemaName, tableName,
   * columnName, maskingFunction, and specify ruleState as disabled. However,
   * if the rule doesn't already exist, the rule will be created with ruleState
   * set to enabled, regardless of the provided value of ruleState. Possible
   * values include: 'Disabled', 'Enabled'
   */
  ruleState?: DataMaskingRuleState;
  /**
   * @member {string} schemaName The schema name on which the data masking rule
   * is applied.
   */
  schemaName: string;
  /**
   * @member {string} tableName The table name on which the data masking rule
   * is applied.
   */
  tableName: string;
  /**
   * @member {string} columnName The column name on which the data masking rule
   * is applied.
   */
  columnName: string;
  /**
   * @member {DataMaskingFunction} maskingFunction The masking function that is
   * used for the data masking rule. Possible values include: 'Default', 'CCN',
   * 'Email', 'Number', 'SSN', 'Text'
   */
  maskingFunction: DataMaskingFunction;
  /**
   * @member {string} [numberFrom] The numberFrom property of the masking rule.
   * Required if maskingFunction is set to Number, otherwise this parameter
   * will be ignored.
   */
  numberFrom?: string;
  /**
   * @member {string} [numberTo] The numberTo property of the data masking
   * rule. Required if maskingFunction is set to Number, otherwise this
   * parameter will be ignored.
   */
  numberTo?: string;
  /**
   * @member {string} [prefixSize] If maskingFunction is set to Text, the
   * number of characters to show unmasked in the beginning of the string.
   * Otherwise, this parameter will be ignored.
   */
  prefixSize?: string;
  /**
   * @member {string} [suffixSize] If maskingFunction is set to Text, the
   * number of characters to show unmasked at the end of the string. Otherwise,
   * this parameter will be ignored.
   */
  suffixSize?: string;
  /**
   * @member {string} [replacementString] If maskingFunction is set to Text,
   * the character to use for masking the unexposed part of the string.
   * Otherwise, this parameter will be ignored.
   */
  replacementString?: string;
  /**
   * @member {string} [location] The location of the data masking rule.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly location?: string;
  /**
   * @member {string} [kind] The kind of Data Masking Rule. Metadata, used for
   * Azure portal.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly kind?: string;
}

/**
 * @interface
 * An interface representing FirewallRule.
 * Represents a server firewall rule.
 *
 * @extends ProxyResource
 */
export interface FirewallRule extends ProxyResource {
  /**
   * @member {string} [kind] Kind of server that contains this firewall rule.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly kind?: string;
  /**
   * @member {string} [location] Location of the server that contains this
   * firewall rule.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly location?: string;
  /**
   * @member {string} startIpAddress The start IP address of the firewall rule.
   * Must be IPv4 format. Use value '0.0.0.0' to represent all Azure-internal
   * IP addresses.
   */
  startIpAddress: string;
  /**
   * @member {string} endIpAddress The end IP address of the firewall rule.
   * Must be IPv4 format. Must be greater than or equal to startIpAddress. Use
   * value '0.0.0.0' to represent all Azure-internal IP addresses.
   */
  endIpAddress: string;
}

/**
 * @interface
 * An interface representing GeoBackupPolicy.
 * A database geo backup policy.
 *
 * @extends ProxyResource
 */
export interface GeoBackupPolicy extends ProxyResource {
  /**
   * @member {GeoBackupPolicyState} state The state of the geo backup policy.
   * Possible values include: 'Disabled', 'Enabled'
   */
  state: GeoBackupPolicyState;
  /**
   * @member {string} [storageType] The storage type of the geo backup policy.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly storageType?: string;
  /**
   * @member {string} [kind] Kind of geo backup policy.  This is metadata used
   * for the Azure portal experience.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly kind?: string;
  /**
   * @member {string} [location] Backup policy location.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly location?: string;
}

/**
 * @interface
 * An interface representing ImportExtensionRequest.
 * Import database parameters.
 *
 */
export interface ImportExtensionRequest {
  /**
   * @member {string} [name] The name of the extension.
   */
  name?: string;
  /**
   * @member {string} [type] The type of the extension.
   */
  type?: string;
  /**
   * @member {StorageKeyType} storageKeyType The type of the storage key to
   * use. Possible values include: 'StorageAccessKey', 'SharedAccessKey'
   */
  storageKeyType: StorageKeyType;
  /**
   * @member {string} storageKey The storage key to use.  If storage key type
   * is SharedAccessKey, it must be preceded with a "?."
   */
  storageKey: string;
  /**
   * @member {string} storageUri The storage uri to use.
   */
  storageUri: string;
  /**
   * @member {string} administratorLogin The name of the SQL administrator.
   */
  administratorLogin: string;
  /**
   * @member {string} administratorLoginPassword The password of the SQL
   * administrator.
   */
  administratorLoginPassword: string;
  /**
   * @member {AuthenticationType} [authenticationType] The authentication type.
   * Possible values include: 'SQL', 'ADPassword'. Default value: 'SQL' .
   */
  authenticationType?: AuthenticationType;
}

/**
 * @interface
 * An interface representing ImportExportResponse.
 * Response for Import/Export Get operation.
 *
 * @extends ProxyResource
 */
export interface ImportExportResponse extends ProxyResource {
  /**
   * @member {string} [requestType] The request type of the operation.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly requestType?: string;
  /**
   * @member {string} [requestId] The request type of the operation.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly requestId?: string;
  /**
   * @member {string} [serverName] The name of the server.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly serverName?: string;
  /**
   * @member {string} [databaseName] The name of the database.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly databaseName?: string;
  /**
   * @member {string} [status] The status message returned from the server.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly status?: string;
  /**
   * @member {string} [lastModifiedTime] The operation status last modified
   * time.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly lastModifiedTime?: string;
  /**
   * @member {string} [queuedTime] The operation queued time.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly queuedTime?: string;
  /**
   * @member {string} [blobUri] The blob uri.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly blobUri?: string;
  /**
   * @member {string} [errorMessage] The error message returned from the
   * server.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly errorMessage?: string;
}

/**
 * @interface
 * An interface representing ExportRequest.
 * Export database parameters.
 *
 */
export interface ExportRequest {
  /**
   * @member {StorageKeyType} storageKeyType The type of the storage key to
   * use. Possible values include: 'StorageAccessKey', 'SharedAccessKey'
   */
  storageKeyType: StorageKeyType;
  /**
   * @member {string} storageKey The storage key to use.  If storage key type
   * is SharedAccessKey, it must be preceded with a "?."
   */
  storageKey: string;
  /**
   * @member {string} storageUri The storage uri to use.
   */
  storageUri: string;
  /**
   * @member {string} administratorLogin The name of the SQL administrator.
   */
  administratorLogin: string;
  /**
   * @member {string} administratorLoginPassword The password of the SQL
   * administrator.
   */
  administratorLoginPassword: string;
  /**
   * @member {AuthenticationType} [authenticationType] The authentication type.
   * Possible values include: 'SQL', 'ADPassword'. Default value: 'SQL' .
   */
  authenticationType?: AuthenticationType;
}

/**
 * @interface
 * An interface representing ImportRequest.
 * Import database parameters.
 *
 * @extends ExportRequest
 */
export interface ImportRequest extends ExportRequest {
  /**
   * @member {string} databaseName The name of the database to import.
   */
  databaseName: string;
  /**
   * @member {DatabaseEdition} edition The edition for the database being
   * created. Possible values include: 'Web', 'Business', 'Basic', 'Standard',
   * 'Premium', 'PremiumRS', 'Free', 'Stretch', 'DataWarehouse', 'System',
   * 'System2'
   */
  edition: DatabaseEdition;
  /**
   * @member {ServiceObjectiveName} serviceObjectiveName The name of the
   * service objective to assign to the database. Possible values include:
   * 'System', 'System0', 'System1', 'System2', 'System3', 'System4',
   * 'System2L', 'System3L', 'System4L', 'Free', 'Basic', 'S0', 'S1', 'S2',
   * 'S3', 'S4', 'S6', 'S7', 'S9', 'S12', 'P1', 'P2', 'P3', 'P4', 'P6', 'P11',
   * 'P15', 'PRS1', 'PRS2', 'PRS4', 'PRS6', 'DW100', 'DW200', 'DW300', 'DW400',
   * 'DW500', 'DW600', 'DW1000', 'DW1200', 'DW1000c', 'DW1500', 'DW1500c',
   * 'DW2000', 'DW2000c', 'DW3000', 'DW2500c', 'DW3000c', 'DW6000', 'DW5000c',
   * 'DW6000c', 'DW7500c', 'DW10000c', 'DW15000c', 'DW30000c', 'DS100',
   * 'DS200', 'DS300', 'DS400', 'DS500', 'DS600', 'DS1000', 'DS1200', 'DS1500',
   * 'DS2000', 'ElasticPool'
   */
  serviceObjectiveName: ServiceObjectiveName;
  /**
   * @member {string} maxSizeBytes The maximum size for the newly imported
   * database.
   */
  maxSizeBytes: string;
}

/**
 * @interface
 * An interface representing MetricValue.
 * Represents database metrics.
 *
 */
export interface MetricValue {
  /**
   * @member {number} [count] The number of values for the metric.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly count?: number;
  /**
   * @member {number} [average] The average value of the metric.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly average?: number;
  /**
   * @member {number} [maximum] The max value of the metric.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly maximum?: number;
  /**
   * @member {number} [minimum] The min value of the metric.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly minimum?: number;
  /**
   * @member {Date} [timestamp] The metric timestamp (ISO-8601 format).
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly timestamp?: Date;
  /**
   * @member {number} [total] The total value of the metric.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly total?: number;
}

/**
 * @interface
 * An interface representing MetricName.
 * A database metric name.
 *
 */
export interface MetricName {
  /**
   * @member {string} [value] The name of the database metric.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly value?: string;
  /**
   * @member {string} [localizedValue] The friendly name of the database
   * metric.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly localizedValue?: string;
}

/**
 * @interface
 * An interface representing Metric.
 * Database metrics.
 *
 */
export interface Metric {
  /**
   * @member {Date} [startTime] The start time for the metric (ISO-8601
   * format).
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly startTime?: Date;
  /**
   * @member {Date} [endTime] The end time for the metric (ISO-8601 format).
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly endTime?: Date;
  /**
   * @member {string} [timeGrain] The time step to be used to summarize the
   * metric values.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly timeGrain?: string;
  /**
   * @member {UnitType} [unit] The unit of the metric. Possible values include:
   * 'count', 'bytes', 'seconds', 'percent', 'countPerSecond', 'bytesPerSecond'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly unit?: UnitType;
  /**
   * @member {MetricName} [name] The name information for the metric.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: MetricName;
  /**
   * @member {MetricValue[]} [metricValues] The metric values for the specified
   * time window and timestep.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly metricValues?: MetricValue[];
}

/**
 * @interface
 * An interface representing MetricAvailability.
 * A metric availability value.
 *
 */
export interface MetricAvailability {
  /**
   * @member {string} [retention] The length of retention for the database
   * metric.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly retention?: string;
  /**
   * @member {string} [timeGrain] The granularity of the database metric.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly timeGrain?: string;
}

/**
 * @interface
 * An interface representing MetricDefinition.
 * A database metric definition.
 *
 */
export interface MetricDefinition {
  /**
   * @member {MetricName} [name] The name information for the metric.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: MetricName;
  /**
   * @member {PrimaryAggregationType} [primaryAggregationType] The primary
   * aggregation type defining how metric values are displayed. Possible values
   * include: 'None', 'Average', 'Count', 'Minimum', 'Maximum', 'Total'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly primaryAggregationType?: PrimaryAggregationType;
  /**
   * @member {string} [resourceUri] The resource uri of the database.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly resourceUri?: string;
  /**
   * @member {UnitDefinitionType} [unit] The unit of the metric. Possible
   * values include: 'Count', 'Bytes', 'Seconds', 'Percent', 'CountPerSecond',
   * 'BytesPerSecond'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly unit?: UnitDefinitionType;
  /**
   * @member {MetricAvailability[]} [metricAvailabilities] The list of database
   * metric availabities for the metric.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly metricAvailabilities?: MetricAvailability[];
}

/**
 * @interface
 * An interface representing RecommendedElasticPoolMetric.
 * Represents recommended elastic pool metric.
 *
 */
export interface RecommendedElasticPoolMetric {
  /**
   * @member {Date} [dateTime] The time of metric (ISO8601 format).
   */
  dateTime?: Date;
  /**
   * @member {number} [dtu] Gets or sets the DTUs (Database Transaction Units).
   * See
   * https://azure.microsoft.com/documentation/articles/sql-database-what-is-a-dtu/
   */
  dtu?: number;
  /**
   * @member {number} [sizeGB] Gets or sets size in gigabytes.
   */
  sizeGB?: number;
}

/**
 * @interface
 * An interface representing RecommendedElasticPool.
 * Represents a recommented elastic pool.
 *
 * @extends ProxyResource
 */
export interface RecommendedElasticPool extends ProxyResource {
  /**
   * @member {ElasticPoolEdition} [databaseEdition] The edition of the
   * recommended elastic pool. The ElasticPoolEdition enumeration contains all
   * the valid editions. Possible values include: 'Basic', 'Standard',
   * 'Premium'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly databaseEdition?: ElasticPoolEdition;
  /**
   * @member {number} [dtu] The DTU for the recommended elastic pool.
   */
  dtu?: number;
  /**
   * @member {number} [databaseDtuMin] The minimum DTU for the database.
   */
  databaseDtuMin?: number;
  /**
   * @member {number} [databaseDtuMax] The maximum DTU for the database.
   */
  databaseDtuMax?: number;
  /**
   * @member {number} [storageMB] Gets storage size in megabytes.
   */
  storageMB?: number;
  /**
   * @member {Date} [observationPeriodStart] The observation period start
   * (ISO8601 format).
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly observationPeriodStart?: Date;
  /**
   * @member {Date} [observationPeriodEnd] The observation period start
   * (ISO8601 format).
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly observationPeriodEnd?: Date;
  /**
   * @member {number} [maxObservedDtu] Gets maximum observed DTU.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly maxObservedDtu?: number;
  /**
   * @member {number} [maxObservedStorageMB] Gets maximum observed storage in
   * megabytes.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly maxObservedStorageMB?: number;
  /**
   * @member {TrackedResource[]} [databases] The list of databases in this
   * pool. Expanded property
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly databases?: TrackedResource[];
  /**
   * @member {RecommendedElasticPoolMetric[]} [metrics] The list of databases
   * housed in the server. Expanded property
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly metrics?: RecommendedElasticPoolMetric[];
}

/**
 * @interface
 * An interface representing ReplicationLink.
 * Represents a database replication link.
 *
 * @extends ProxyResource
 */
export interface ReplicationLink extends ProxyResource {
  /**
   * @member {string} [location] Location of the server that contains this
   * firewall rule.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly location?: string;
  /**
   * @member {boolean} [isTerminationAllowed] Legacy value indicating whether
   * termination is allowed.  Currently always returns true.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly isTerminationAllowed?: boolean;
  /**
   * @member {string} [replicationMode] Replication mode of this replication
   * link.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly replicationMode?: string;
  /**
   * @member {string} [partnerServer] The name of the server hosting the
   * partner database.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly partnerServer?: string;
  /**
   * @member {string} [partnerDatabase] The name of the partner database.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly partnerDatabase?: string;
  /**
   * @member {string} [partnerLocation] The Azure Region of the partner
   * database.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly partnerLocation?: string;
  /**
   * @member {ReplicationRole} [role] The role of the database in the
   * replication link. Possible values include: 'Primary', 'Secondary',
   * 'NonReadableSecondary', 'Source', 'Copy'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly role?: ReplicationRole;
  /**
   * @member {ReplicationRole} [partnerRole] The role of the partner database
   * in the replication link. Possible values include: 'Primary', 'Secondary',
   * 'NonReadableSecondary', 'Source', 'Copy'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly partnerRole?: ReplicationRole;
  /**
   * @member {Date} [startTime] The start time for the replication link.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly startTime?: Date;
  /**
   * @member {number} [percentComplete] The percentage of seeding complete for
   * the replication link.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly percentComplete?: number;
  /**
   * @member {ReplicationState} [replicationState] The replication state for
   * the replication link. Possible values include: 'PENDING', 'SEEDING',
   * 'CATCH_UP', 'SUSPENDED'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly replicationState?: ReplicationState;
}

/**
 * @interface
 * An interface representing ServerAzureADAdministrator.
 * An server Active Directory Administrator.
 *
 * @extends ProxyResource
 */
export interface ServerAzureADAdministrator extends ProxyResource {
  /**
   * @member {string} login The server administrator login value.
   */
  login: string;
  /**
   * @member {string} sid The server administrator Sid (Secure ID).
   */
  sid: string;
  /**
   * @member {string} tenantId The server Active Directory Administrator tenant
   * id.
   */
  tenantId: string;
}

/**
 * @interface
 * An interface representing ServerCommunicationLink.
 * Server communication link.
 *
 * @extends ProxyResource
 */
export interface ServerCommunicationLink extends ProxyResource {
  /**
   * @member {string} [state] The state.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly state?: string;
  /**
   * @member {string} partnerServer The name of the partner server.
   */
  partnerServer: string;
  /**
   * @member {string} [location] Communication link location.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly location?: string;
  /**
   * @member {string} [kind] Communication link kind.  This property is used
   * for Azure Portal metadata.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly kind?: string;
}

/**
 * @interface
 * An interface representing ServiceObjective.
 * Represents a database service objective.
 *
 * @extends ProxyResource
 */
export interface ServiceObjective extends ProxyResource {
  /**
   * @member {string} [serviceObjectiveName] The name for the service
   * objective.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly serviceObjectiveName?: string;
  /**
   * @member {boolean} [isDefault] Gets whether the service level objective is
   * the default service objective.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly isDefault?: boolean;
  /**
   * @member {boolean} [isSystem] Gets whether the service level objective is a
   * system service objective.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly isSystem?: boolean;
  /**
   * @member {string} [description] The description for the service level
   * objective.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
  /**
   * @member {boolean} [enabled] Gets whether the service level objective is
   * enabled.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly enabled?: boolean;
}

/**
 * @interface
 * An interface representing ElasticPoolActivity.
 * Represents the activity on an elastic pool.
 *
 * @extends ProxyResource
 */
export interface ElasticPoolActivity extends ProxyResource {
  /**
   * @member {string} [location] The geo-location where the resource lives
   */
  location?: string;
  /**
   * @member {Date} [endTime] The time the operation finished (ISO8601 format).
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly endTime?: Date;
  /**
   * @member {number} [errorCode] The error code if available.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly errorCode?: number;
  /**
   * @member {string} [errorMessage] The error message if available.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly errorMessage?: string;
  /**
   * @member {number} [errorSeverity] The error severity if available.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly errorSeverity?: number;
  /**
   * @member {string} [operation] The operation name.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly operation?: string;
  /**
   * @member {string} [operationId] The unique operation ID.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly operationId?: string;
  /**
   * @member {number} [percentComplete] The percentage complete if available.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly percentComplete?: number;
  /**
   * @member {number} [requestedDatabaseDtuMax] The requested max DTU per
   * database if available.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly requestedDatabaseDtuMax?: number;
  /**
   * @member {number} [requestedDatabaseDtuMin] The requested min DTU per
   * database if available.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly requestedDatabaseDtuMin?: number;
  /**
   * @member {number} [requestedDtu] The requested DTU for the pool if
   * available.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly requestedDtu?: number;
  /**
   * @member {string} [requestedElasticPoolName] The requested name for the
   * elastic pool if available.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly requestedElasticPoolName?: string;
  /**
   * @member {number} [requestedStorageLimitInGB] The requested storage limit
   * for the pool in GB if available.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly requestedStorageLimitInGB?: number;
  /**
   * @member {string} [elasticPoolName] The name of the elastic pool.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly elasticPoolName?: string;
  /**
   * @member {string} [serverName] The name of the server the elastic pool is
   * in.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly serverName?: string;
  /**
   * @member {Date} [startTime] The time the operation started (ISO8601
   * format).
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly startTime?: Date;
  /**
   * @member {string} [state] The current state of the operation.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly state?: string;
  /**
   * @member {number} [requestedStorageLimitInMB] The requested storage limit
   * in MB.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly requestedStorageLimitInMB?: number;
  /**
   * @member {number} [requestedDatabaseDtuGuarantee] The requested per
   * database DTU guarantee.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly requestedDatabaseDtuGuarantee?: number;
  /**
   * @member {number} [requestedDatabaseDtuCap] The requested per database DTU
   * cap.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly requestedDatabaseDtuCap?: number;
  /**
   * @member {number} [requestedDtuGuarantee] The requested DTU guarantee.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly requestedDtuGuarantee?: number;
}

/**
 * @interface
 * An interface representing ElasticPoolDatabaseActivity.
 * Represents the activity on an elastic pool.
 *
 * @extends ProxyResource
 */
export interface ElasticPoolDatabaseActivity extends ProxyResource {
  /**
   * @member {string} [location] The geo-location where the resource lives
   */
  location?: string;
  /**
   * @member {string} [databaseName] The database name.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly databaseName?: string;
  /**
   * @member {Date} [endTime] The time the operation finished (ISO8601 format).
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly endTime?: Date;
  /**
   * @member {number} [errorCode] The error code if available.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly errorCode?: number;
  /**
   * @member {string} [errorMessage] The error message if available.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly errorMessage?: string;
  /**
   * @member {number} [errorSeverity] The error severity if available.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly errorSeverity?: number;
  /**
   * @member {string} [operation] The operation name.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly operation?: string;
  /**
   * @member {string} [operationId] The unique operation ID.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly operationId?: string;
  /**
   * @member {number} [percentComplete] The percentage complete if available.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly percentComplete?: number;
  /**
   * @member {string} [requestedElasticPoolName] The name for the elastic pool
   * the database is moving into if available.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly requestedElasticPoolName?: string;
  /**
   * @member {string} [currentElasticPoolName] The name of the current elastic
   * pool the database is in if available.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly currentElasticPoolName?: string;
  /**
   * @member {string} [currentServiceObjective] The name of the current service
   * objective if available.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly currentServiceObjective?: string;
  /**
   * @member {string} [requestedServiceObjective] The name of the requested
   * service objective if available.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly requestedServiceObjective?: string;
  /**
   * @member {string} [serverName] The name of the server the elastic pool is
   * in.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly serverName?: string;
  /**
   * @member {Date} [startTime] The time the operation started (ISO8601
   * format).
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly startTime?: Date;
  /**
   * @member {string} [state] The current state of the operation.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly state?: string;
}

/**
 * @interface
 * An interface representing OperationImpact.
 * The impact of an operation, both in absolute and relative terms.
 *
 */
export interface OperationImpact {
  /**
   * @member {string} [name] The name of the impact dimension.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [unit] The unit in which estimated impact to dimension is
   * measured.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly unit?: string;
  /**
   * @member {number} [changeValueAbsolute] The absolute impact to dimension.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly changeValueAbsolute?: number;
  /**
   * @member {number} [changeValueRelative] The relative impact to dimension
   * (null if not applicable)
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly changeValueRelative?: number;
}

/**
 * @interface
 * An interface representing RecommendedIndex.
 * Represents a database recommended index.
 *
 * @extends ProxyResource
 */
export interface RecommendedIndex extends ProxyResource {
  /**
   * @member {RecommendedIndexAction} [action] The proposed index action. You
   * can create a missing index, drop an unused index, or rebuild an existing
   * index to improve its performance. Possible values include: 'Create',
   * 'Drop', 'Rebuild'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly action?: RecommendedIndexAction;
  /**
   * @member {RecommendedIndexState} [state] The current recommendation state.
   * Possible values include: 'Active', 'Pending', 'Executing', 'Verifying',
   * 'Pending Revert', 'Reverting', 'Reverted', 'Ignored', 'Expired',
   * 'Blocked', 'Success'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly state?: RecommendedIndexState;
  /**
   * @member {Date} [created] The UTC datetime showing when this resource was
   * created (ISO8601 format).
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly created?: Date;
  /**
   * @member {Date} [lastModified] The UTC datetime of when was this resource
   * last changed (ISO8601 format).
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly lastModified?: Date;
  /**
   * @member {RecommendedIndexType} [indexType] The type of index (CLUSTERED,
   * NONCLUSTERED, COLUMNSTORE, CLUSTERED COLUMNSTORE). Possible values
   * include: 'CLUSTERED', 'NONCLUSTERED', 'COLUMNSTORE', 'CLUSTERED
   * COLUMNSTORE'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly indexType?: RecommendedIndexType;
  /**
   * @member {string} [schema] The schema where table to build index over
   * resides
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly schema?: string;
  /**
   * @member {string} [table] The table on which to build index.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly table?: string;
  /**
   * @member {string[]} [columns] Columns over which to build index
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly columns?: string[];
  /**
   * @member {string[]} [includedColumns] The list of column names to be
   * included in the index
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly includedColumns?: string[];
  /**
   * @member {string} [indexScript] The full build index script
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly indexScript?: string;
  /**
   * @member {OperationImpact[]} [estimatedImpact] The estimated impact of
   * doing recommended index action.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly estimatedImpact?: OperationImpact[];
  /**
   * @member {OperationImpact[]} [reportedImpact] The values reported after
   * index action is complete.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly reportedImpact?: OperationImpact[];
}

/**
 * @interface
 * An interface representing TransparentDataEncryption.
 * Represents a database transparent data encryption configuration.
 *
 * @extends ProxyResource
 */
export interface TransparentDataEncryption extends ProxyResource {
  /**
   * @member {string} [location] Resource location.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly location?: string;
  /**
   * @member {TransparentDataEncryptionStatus} [status] The status of the
   * database transparent data encryption. Possible values include: 'Enabled',
   * 'Disabled'
   */
  status?: TransparentDataEncryptionStatus;
}

/**
 * @interface
 * An interface representing SloUsageMetric.
 * A Slo Usage Metric.
 *
 */
export interface SloUsageMetric {
  /**
   * @member {ServiceObjectiveName} [serviceLevelObjective] The
   * serviceLevelObjective for SLO usage metric. Possible values include:
   * 'System', 'System0', 'System1', 'System2', 'System3', 'System4',
   * 'System2L', 'System3L', 'System4L', 'Free', 'Basic', 'S0', 'S1', 'S2',
   * 'S3', 'S4', 'S6', 'S7', 'S9', 'S12', 'P1', 'P2', 'P3', 'P4', 'P6', 'P11',
   * 'P15', 'PRS1', 'PRS2', 'PRS4', 'PRS6', 'DW100', 'DW200', 'DW300', 'DW400',
   * 'DW500', 'DW600', 'DW1000', 'DW1200', 'DW1000c', 'DW1500', 'DW1500c',
   * 'DW2000', 'DW2000c', 'DW3000', 'DW2500c', 'DW3000c', 'DW6000', 'DW5000c',
   * 'DW6000c', 'DW7500c', 'DW10000c', 'DW15000c', 'DW30000c', 'DS100',
   * 'DS200', 'DS300', 'DS400', 'DS500', 'DS600', 'DS1000', 'DS1200', 'DS1500',
   * 'DS2000', 'ElasticPool'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly serviceLevelObjective?: ServiceObjectiveName;
  /**
   * @member {string} [serviceLevelObjectiveId] The serviceLevelObjectiveId for
   * SLO usage metric.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly serviceLevelObjectiveId?: string;
  /**
   * @member {number} [inRangeTimeRatio] Gets or sets inRangeTimeRatio for SLO
   * usage metric.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly inRangeTimeRatio?: number;
}

/**
 * @interface
 * An interface representing ServiceTierAdvisor.
 * Represents a Service Tier Advisor.
 *
 * @extends ProxyResource
 */
export interface ServiceTierAdvisor extends ProxyResource {
  /**
   * @member {Date} [observationPeriodStart] The observation period start
   * (ISO8601 format).
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly observationPeriodStart?: Date;
  /**
   * @member {Date} [observationPeriodEnd] The observation period start
   * (ISO8601 format).
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly observationPeriodEnd?: Date;
  /**
   * @member {number} [activeTimeRatio] The activeTimeRatio for service tier
   * advisor.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly activeTimeRatio?: number;
  /**
   * @member {number} [minDtu] Gets or sets minDtu for service tier advisor.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly minDtu?: number;
  /**
   * @member {number} [avgDtu] Gets or sets avgDtu for service tier advisor.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly avgDtu?: number;
  /**
   * @member {number} [maxDtu] Gets or sets maxDtu for service tier advisor.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly maxDtu?: number;
  /**
   * @member {number} [maxSizeInGB] Gets or sets maxSizeInGB for service tier
   * advisor.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly maxSizeInGB?: number;
  /**
   * @member {SloUsageMetric[]} [serviceLevelObjectiveUsageMetrics] Gets or
   * sets serviceLevelObjectiveUsageMetrics for the service tier advisor.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly serviceLevelObjectiveUsageMetrics?: SloUsageMetric[];
  /**
   * @member {string} [currentServiceLevelObjective] Gets or sets
   * currentServiceLevelObjective for service tier advisor.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly currentServiceLevelObjective?: string;
  /**
   * @member {string} [currentServiceLevelObjectiveId] Gets or sets
   * currentServiceLevelObjectiveId for service tier advisor.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly currentServiceLevelObjectiveId?: string;
  /**
   * @member {string} [usageBasedRecommendationServiceLevelObjective] Gets or
   * sets usageBasedRecommendationServiceLevelObjective for service tier
   * advisor.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly usageBasedRecommendationServiceLevelObjective?: string;
  /**
   * @member {string} [usageBasedRecommendationServiceLevelObjectiveId] Gets or
   * sets usageBasedRecommendationServiceLevelObjectiveId for service tier
   * advisor.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly usageBasedRecommendationServiceLevelObjectiveId?: string;
  /**
   * @member {string} [databaseSizeBasedRecommendationServiceLevelObjective]
   * Gets or sets databaseSizeBasedRecommendationServiceLevelObjective for
   * service tier advisor.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly databaseSizeBasedRecommendationServiceLevelObjective?: string;
  /**
   * @member {string} [databaseSizeBasedRecommendationServiceLevelObjectiveId]
   * Gets or sets databaseSizeBasedRecommendationServiceLevelObjectiveId for
   * service tier advisor.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly databaseSizeBasedRecommendationServiceLevelObjectiveId?: string;
  /**
   * @member {string} [disasterPlanBasedRecommendationServiceLevelObjective]
   * Gets or sets disasterPlanBasedRecommendationServiceLevelObjective for
   * service tier advisor.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly disasterPlanBasedRecommendationServiceLevelObjective?: string;
  /**
   * @member {string} [disasterPlanBasedRecommendationServiceLevelObjectiveId]
   * Gets or sets disasterPlanBasedRecommendationServiceLevelObjectiveId for
   * service tier advisor.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly disasterPlanBasedRecommendationServiceLevelObjectiveId?: string;
  /**
   * @member {string} [overallRecommendationServiceLevelObjective] Gets or sets
   * overallRecommendationServiceLevelObjective for service tier advisor.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly overallRecommendationServiceLevelObjective?: string;
  /**
   * @member {string} [overallRecommendationServiceLevelObjectiveId] Gets or
   * sets overallRecommendationServiceLevelObjectiveId for service tier
   * advisor.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly overallRecommendationServiceLevelObjectiveId?: string;
  /**
   * @member {number} [confidence] Gets or sets confidence for service tier
   * advisor.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly confidence?: number;
}

/**
 * @interface
 * An interface representing TransparentDataEncryptionActivity.
 * Represents a database transparent data encryption Scan.
 *
 * @extends ProxyResource
 */
export interface TransparentDataEncryptionActivity extends ProxyResource {
  /**
   * @member {string} [location] Resource location.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly location?: string;
  /**
   * @member {TransparentDataEncryptionActivityStatus} [status] The status of
   * the database. Possible values include: 'Encrypting', 'Decrypting'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly status?: TransparentDataEncryptionActivityStatus;
  /**
   * @member {number} [percentComplete] The percent complete of the transparent
   * data encryption scan for a database.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly percentComplete?: number;
}

/**
 * @interface
 * An interface representing ServerUsage.
 * Represents server metrics.
 *
 */
export interface ServerUsage {
  /**
   * @member {string} [name] Name of the server usage metric.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [resourceName] The name of the resource.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly resourceName?: string;
  /**
   * @member {string} [displayName] The metric display name.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly displayName?: string;
  /**
   * @member {number} [currentValue] The current value of the metric.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly currentValue?: number;
  /**
   * @member {number} [limit] The current limit of the metric.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly limit?: number;
  /**
   * @member {string} [unit] The units of the metric.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly unit?: string;
  /**
   * @member {Date} [nextResetTime] The next reset time for the metric (ISO8601
   * format).
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextResetTime?: Date;
}

/**
 * @interface
 * An interface representing DatabaseUsage.
 * The database usages.
 *
 */
export interface DatabaseUsage {
  /**
   * @member {string} [name] The name of the usage metric.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [resourceName] The name of the resource.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly resourceName?: string;
  /**
   * @member {string} [displayName] The usage metric display name.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly displayName?: string;
  /**
   * @member {number} [currentValue] The current value of the usage metric.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly currentValue?: number;
  /**
   * @member {number} [limit] The current limit of the usage metric.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly limit?: number;
  /**
   * @member {string} [unit] The units of the usage metric.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly unit?: string;
  /**
   * @member {Date} [nextResetTime] The next reset time for the usage metric
   * (ISO8601 format).
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextResetTime?: Date;
}

/**
 * @interface
 * An interface representing AutomaticTuningOptions.
 * Automatic tuning properties for individual advisors.
 *
 */
export interface AutomaticTuningOptions {
  /**
   * @member {AutomaticTuningOptionModeDesired} [desiredState] Automatic tuning
   * option desired state. Possible values include: 'Off', 'On', 'Default'
   */
  desiredState?: AutomaticTuningOptionModeDesired;
  /**
   * @member {AutomaticTuningOptionModeActual} [actualState] Automatic tuning
   * option actual state. Possible values include: 'Off', 'On'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly actualState?: AutomaticTuningOptionModeActual;
  /**
   * @member {number} [reasonCode] Reason code if desired and actual state are
   * different.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly reasonCode?: number;
  /**
   * @member {AutomaticTuningDisabledReason} [reasonDesc] Reason description if
   * desired and actual state are different. Possible values include:
   * 'Default', 'Disabled', 'AutoConfigured', 'InheritedFromServer',
   * 'QueryStoreOff', 'QueryStoreReadOnly', 'NotSupported'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly reasonDesc?: AutomaticTuningDisabledReason;
}

/**
 * @interface
 * An interface representing DatabaseAutomaticTuning.
 * Database-level Automatic Tuning.
 *
 * @extends ProxyResource
 */
export interface DatabaseAutomaticTuning extends ProxyResource {
  /**
   * @member {AutomaticTuningMode} [desiredState] Automatic tuning desired
   * state. Possible values include: 'Inherit', 'Custom', 'Auto', 'Unspecified'
   */
  desiredState?: AutomaticTuningMode;
  /**
   * @member {AutomaticTuningMode} [actualState] Automatic tuning actual state.
   * Possible values include: 'Inherit', 'Custom', 'Auto', 'Unspecified'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly actualState?: AutomaticTuningMode;
  /**
   * @member {{ [propertyName: string]: AutomaticTuningOptions }} [options]
   * Automatic tuning options definition.
   */
  options?: { [propertyName: string]: AutomaticTuningOptions };
}

/**
 * @interface
 * An interface representing EncryptionProtector.
 * The server encryption protector.
 *
 * @extends ProxyResource
 */
export interface EncryptionProtector extends ProxyResource {
  /**
   * @member {string} [kind] Kind of encryption protector. This is metadata
   * used for the Azure portal experience.
   */
  kind?: string;
  /**
   * @member {string} [location] Resource location.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly location?: string;
  /**
   * @member {string} [subregion] Subregion of the encryption protector.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly subregion?: string;
  /**
   * @member {string} [serverKeyName] The name of the server key.
   */
  serverKeyName?: string;
  /**
   * @member {ServerKeyType} serverKeyType The encryption protector type like
   * 'ServiceManaged', 'AzureKeyVault'. Possible values include:
   * 'ServiceManaged', 'AzureKeyVault'
   */
  serverKeyType: ServerKeyType;
  /**
   * @member {string} [uri] The URI of the server key.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly uri?: string;
  /**
   * @member {string} [thumbprint] Thumbprint of the server key.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly thumbprint?: string;
}

/**
 * @interface
 * An interface representing FailoverGroupReadWriteEndpoint.
 * Read-write endpoint of the failover group instance.
 *
 */
export interface FailoverGroupReadWriteEndpoint {
  /**
   * @member {ReadWriteEndpointFailoverPolicy} failoverPolicy Failover policy
   * of the read-write endpoint for the failover group. If failoverPolicy is
   * Automatic then failoverWithDataLossGracePeriodMinutes is required.
   * Possible values include: 'Manual', 'Automatic'
   */
  failoverPolicy: ReadWriteEndpointFailoverPolicy;
  /**
   * @member {number} [failoverWithDataLossGracePeriodMinutes] Grace period
   * before failover with data loss is attempted for the read-write endpoint.
   * If failoverPolicy is Automatic then failoverWithDataLossGracePeriodMinutes
   * is required.
   */
  failoverWithDataLossGracePeriodMinutes?: number;
}

/**
 * @interface
 * An interface representing FailoverGroupReadOnlyEndpoint.
 * Read-only endpoint of the failover group instance.
 *
 */
export interface FailoverGroupReadOnlyEndpoint {
  /**
   * @member {ReadOnlyEndpointFailoverPolicy} [failoverPolicy] Failover policy
   * of the read-only endpoint for the failover group. Possible values include:
   * 'Disabled', 'Enabled'
   */
  failoverPolicy?: ReadOnlyEndpointFailoverPolicy;
}

/**
 * @interface
 * An interface representing PartnerInfo.
 * Partner server information for the failover group.
 *
 */
export interface PartnerInfo {
  /**
   * @member {string} id Resource identifier of the partner server.
   */
  id: string;
  /**
   * @member {string} [location] Geo location of the partner server.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly location?: string;
  /**
   * @member {FailoverGroupReplicationRole} [replicationRole] Replication role
   * of the partner server. Possible values include: 'Primary', 'Secondary'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly replicationRole?: FailoverGroupReplicationRole;
}

/**
 * @interface
 * An interface representing FailoverGroup.
 * A failover group.
 *
 * @extends ProxyResource
 */
export interface FailoverGroup extends ProxyResource {
  /**
   * @member {string} [location] Resource location.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly location?: string;
  /**
   * @member {{ [propertyName: string]: string }} [tags] Resource tags.
   */
  tags?: { [propertyName: string]: string };
  /**
   * @member {FailoverGroupReadWriteEndpoint} readWriteEndpoint Read-write
   * endpoint of the failover group instance.
   */
  readWriteEndpoint: FailoverGroupReadWriteEndpoint;
  /**
   * @member {FailoverGroupReadOnlyEndpoint} [readOnlyEndpoint] Read-only
   * endpoint of the failover group instance.
   */
  readOnlyEndpoint?: FailoverGroupReadOnlyEndpoint;
  /**
   * @member {FailoverGroupReplicationRole} [replicationRole] Local replication
   * role of the failover group instance. Possible values include: 'Primary',
   * 'Secondary'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly replicationRole?: FailoverGroupReplicationRole;
  /**
   * @member {string} [replicationState] Replication state of the failover
   * group instance.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly replicationState?: string;
  /**
   * @member {PartnerInfo[]} partnerServers List of partner server information
   * for the failover group.
   */
  partnerServers: PartnerInfo[];
  /**
   * @member {string[]} [databases] List of databases in the failover group.
   */
  databases?: string[];
}

/**
 * @interface
 * An interface representing FailoverGroupUpdate.
 * A failover group update request.
 *
 */
export interface FailoverGroupUpdate {
  /**
   * @member {FailoverGroupReadWriteEndpoint} [readWriteEndpoint] Read-write
   * endpoint of the failover group instance.
   */
  readWriteEndpoint?: FailoverGroupReadWriteEndpoint;
  /**
   * @member {FailoverGroupReadOnlyEndpoint} [readOnlyEndpoint] Read-only
   * endpoint of the failover group instance.
   */
  readOnlyEndpoint?: FailoverGroupReadOnlyEndpoint;
  /**
   * @member {string[]} [databases] List of databases in the failover group.
   */
  databases?: string[];
  /**
   * @member {{ [propertyName: string]: string }} [tags] Resource tags.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * @interface
 * An interface representing ResourceIdentity.
 * Azure Active Directory identity configuration for a resource.
 *
 */
export interface ResourceIdentity {
  /**
   * @member {string} [principalId] The Azure Active Directory principal id.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly principalId?: string;
  /**
   * @member {IdentityType} [type] The identity type. Set this to
   * 'SystemAssigned' in order to automatically create and assign an Azure
   * Active Directory principal for the resource. Possible values include:
   * 'SystemAssigned'
   */
  type?: IdentityType;
  /**
   * @member {string} [tenantId] The Azure Active Directory tenant id.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly tenantId?: string;
}

/**
 * @interface
 * An interface representing Sku.
 * The resource model definition representing SKU
 *
 */
export interface Sku {
  /**
   * @member {string} name The name of the SKU. Ex - P3. It is typically a
   * letter+number code
   */
  name: string;
  /**
   * @member {string} [tier] This field is required to be implemented by the
   * Resource Provider if the service has more than one tier, but is not
   * required on a PUT.
   */
  tier?: string;
  /**
   * @member {string} [size] The SKU size. When the name field is the
   * combination of tier and some other value, this would be the standalone
   * code.
   */
  size?: string;
  /**
   * @member {string} [family] If the service has different generations of
   * hardware, for the same SKU, then that can be captured here.
   */
  family?: string;
  /**
   * @member {number} [capacity] If the SKU supports scale out/in then the
   * capacity integer should be included. If scale out/in is not possible for
   * the resource this may be omitted.
   */
  capacity?: number;
}

/**
 * @interface
 * An interface representing ManagedInstance.
 * An Azure SQL managed instance.
 *
 * @extends TrackedResource
 */
export interface ManagedInstance extends TrackedResource {
  /**
   * @member {ResourceIdentity} [identity] The Azure Active Directory identity
   * of the managed instance.
   */
  identity?: ResourceIdentity;
  /**
   * @member {Sku} [sku] Managed instance sku
   */
  sku?: Sku;
  /**
   * @member {string} [fullyQualifiedDomainName] The fully qualified domain
   * name of the managed instance.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly fullyQualifiedDomainName?: string;
  /**
   * @member {string} [administratorLogin] Administrator username for the
   * managed instance. Can only be specified when the managed instance is being
   * created (and is required for creation).
   */
  administratorLogin?: string;
  /**
   * @member {string} [administratorLoginPassword] The administrator login
   * password (required for managed instance creation).
   */
  administratorLoginPassword?: string;
  /**
   * @member {string} [subnetId] Subnet resource ID for the managed instance.
   */
  subnetId?: string;
  /**
   * @member {string} [state] The state of the managed instance.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly state?: string;
  /**
   * @member {string} [licenseType] The license type. Possible values are
   * 'LicenseIncluded' and 'BasePrice'.
   */
  licenseType?: string;
  /**
   * @member {number} [vCores] The number of VCores.
   */
  vCores?: number;
  /**
   * @member {number} [storageSizeInGB] The maximum storage size in GB.
   */
  storageSizeInGB?: number;
  /**
   * @member {string} [collation] Collation of the managed instance.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly collation?: string;
  /**
   * @member {string} [dnsZone] The Dns Zone that the managed instance is in.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly dnsZone?: string;
  /**
   * @member {string} [dnsZonePartner] The resource id of another managed
   * instance whose DNS zone this managed instance will share after creation.
   */
  dnsZonePartner?: string;
}

/**
 * @interface
 * An interface representing ManagedInstanceUpdate.
 * An update request for an Azure SQL Database managed instance.
 *
 */
export interface ManagedInstanceUpdate {
  /**
   * @member {Sku} [sku] Managed instance sku
   */
  sku?: Sku;
  /**
   * @member {string} [fullyQualifiedDomainName] The fully qualified domain
   * name of the managed instance.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly fullyQualifiedDomainName?: string;
  /**
   * @member {string} [administratorLogin] Administrator username for the
   * managed instance. Can only be specified when the managed instance is being
   * created (and is required for creation).
   */
  administratorLogin?: string;
  /**
   * @member {string} [administratorLoginPassword] The administrator login
   * password (required for managed instance creation).
   */
  administratorLoginPassword?: string;
  /**
   * @member {string} [subnetId] Subnet resource ID for the managed instance.
   */
  subnetId?: string;
  /**
   * @member {string} [state] The state of the managed instance.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly state?: string;
  /**
   * @member {string} [licenseType] The license type. Possible values are
   * 'LicenseIncluded' and 'BasePrice'.
   */
  licenseType?: string;
  /**
   * @member {number} [vCores] The number of VCores.
   */
  vCores?: number;
  /**
   * @member {number} [storageSizeInGB] The maximum storage size in GB.
   */
  storageSizeInGB?: number;
  /**
   * @member {string} [collation] Collation of the managed instance.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly collation?: string;
  /**
   * @member {string} [dnsZone] The Dns Zone that the managed instance is in.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly dnsZone?: string;
  /**
   * @member {string} [dnsZonePartner] The resource id of another managed
   * instance whose DNS zone this managed instance will share after creation.
   */
  dnsZonePartner?: string;
  /**
   * @member {{ [propertyName: string]: string }} [tags] Resource tags.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * @interface
 * An interface representing OperationDisplay.
 * Display metadata associated with the operation.
 *
 */
export interface OperationDisplay {
  /**
   * @member {string} [provider] The localized friendly form of the resource
   * provider name.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provider?: string;
  /**
   * @member {string} [resource] The localized friendly form of the resource
   * type related to this action/operation.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly resource?: string;
  /**
   * @member {string} [operation] The localized friendly name for the
   * operation.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly operation?: string;
  /**
   * @member {string} [description] The localized friendly description for the
   * operation.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
}

/**
 * @interface
 * An interface representing Operation.
 * SQL REST API operation definition.
 *
 */
export interface Operation {
  /**
   * @member {string} [name] The name of the operation being performed on this
   * particular object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {OperationDisplay} [display] The localized display information for
   * this particular operation / action.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly display?: OperationDisplay;
  /**
   * @member {OperationOrigin} [origin] The intended executor of the operation.
   * Possible values include: 'user', 'system'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly origin?: OperationOrigin;
  /**
   * @member {{ [propertyName: string]: any }} [properties] Additional
   * descriptions for the operation.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly properties?: { [propertyName: string]: any };
}

/**
 * @interface
 * An interface representing ServerKey.
 * A server key.
 *
 * @extends ProxyResource
 */
export interface ServerKey extends ProxyResource {
  /**
   * @member {string} [kind] Kind of encryption protector. This is metadata
   * used for the Azure portal experience.
   */
  kind?: string;
  /**
   * @member {string} [location] Resource location.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly location?: string;
  /**
   * @member {string} [subregion] Subregion of the server key.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly subregion?: string;
  /**
   * @member {ServerKeyType} serverKeyType The server key type like
   * 'ServiceManaged', 'AzureKeyVault'. Possible values include:
   * 'ServiceManaged', 'AzureKeyVault'
   */
  serverKeyType: ServerKeyType;
  /**
   * @member {string} [uri] The URI of the server key.
   */
  uri?: string;
  /**
   * @member {string} [thumbprint] Thumbprint of the server key.
   */
  thumbprint?: string;
  /**
   * @member {Date} [creationDate] The server key creation date.
   */
  creationDate?: Date;
}

/**
 * @interface
 * An interface representing Server.
 * An Azure SQL Database server.
 *
 * @extends TrackedResource
 */
export interface Server extends TrackedResource {
  /**
   * @member {ResourceIdentity} [identity] The Azure Active Directory identity
   * of the server.
   */
  identity?: ResourceIdentity;
  /**
   * @member {string} [kind] Kind of sql server. This is metadata used for the
   * Azure portal experience.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly kind?: string;
  /**
   * @member {string} [administratorLogin] Administrator username for the
   * server. Once created it cannot be changed.
   */
  administratorLogin?: string;
  /**
   * @member {string} [administratorLoginPassword] The administrator login
   * password (required for server creation).
   */
  administratorLoginPassword?: string;
  /**
   * @member {string} [version] The version of the server.
   */
  version?: string;
  /**
   * @member {string} [state] The state of the server.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly state?: string;
  /**
   * @member {string} [fullyQualifiedDomainName] The fully qualified domain
   * name of the server.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly fullyQualifiedDomainName?: string;
}

/**
 * @interface
 * An interface representing ServerUpdate.
 * An update request for an Azure SQL Database server.
 *
 */
export interface ServerUpdate {
  /**
   * @member {string} [administratorLogin] Administrator username for the
   * server. Once created it cannot be changed.
   */
  administratorLogin?: string;
  /**
   * @member {string} [administratorLoginPassword] The administrator login
   * password (required for server creation).
   */
  administratorLoginPassword?: string;
  /**
   * @member {string} [version] The version of the server.
   */
  version?: string;
  /**
   * @member {string} [state] The state of the server.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly state?: string;
  /**
   * @member {string} [fullyQualifiedDomainName] The fully qualified domain
   * name of the server.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly fullyQualifiedDomainName?: string;
  /**
   * @member {{ [propertyName: string]: string }} [tags] Resource tags.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * @interface
 * An interface representing SyncAgent.
 * An Azure SQL Database sync agent.
 *
 * @extends ProxyResource
 */
export interface SyncAgent extends ProxyResource {
  /**
   * @member {string} [syncAgentName] Name of the sync agent.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly syncAgentName?: string;
  /**
   * @member {string} [syncDatabaseId] ARM resource id of the sync database in
   * the sync agent.
   */
  syncDatabaseId?: string;
  /**
   * @member {Date} [lastAliveTime] Last alive time of the sync agent.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly lastAliveTime?: Date;
  /**
   * @member {SyncAgentState} [state] State of the sync agent. Possible values
   * include: 'Online', 'Offline', 'NeverConnected'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly state?: SyncAgentState;
  /**
   * @member {boolean} [isUpToDate] If the sync agent version is up to date.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly isUpToDate?: boolean;
  /**
   * @member {Date} [expiryTime] Expiration time of the sync agent version.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly expiryTime?: Date;
  /**
   * @member {string} [version] Version of the sync agent.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly version?: string;
}

/**
 * @interface
 * An interface representing SyncAgentKeyProperties.
 * Properties of an Azure SQL Database sync agent key.
 *
 */
export interface SyncAgentKeyProperties {
  /**
   * @member {string} [syncAgentKey] Key of sync agent.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly syncAgentKey?: string;
}

/**
 * @interface
 * An interface representing SyncAgentLinkedDatabase.
 * An Azure SQL Database sync agent linked database.
 *
 * @extends ProxyResource
 */
export interface SyncAgentLinkedDatabase extends ProxyResource {
  /**
   * @member {SyncMemberDbType} [databaseType] Type of the sync agent linked
   * database. Possible values include: 'AzureSqlDatabase', 'SqlServerDatabase'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly databaseType?: SyncMemberDbType;
  /**
   * @member {string} [databaseId] Id of the sync agent linked database.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly databaseId?: string;
  /**
   * @member {string} [description] Description of the sync agent linked
   * database.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
  /**
   * @member {string} [serverName] Server name of the sync agent linked
   * database.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly serverName?: string;
  /**
   * @member {string} [databaseName] Database name of the sync agent linked
   * database.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly databaseName?: string;
  /**
   * @member {string} [userName] User name of the sync agent linked database.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly userName?: string;
}

/**
 * @interface
 * An interface representing SyncDatabaseIdProperties.
 * Properties of the sync database id.
 *
 */
export interface SyncDatabaseIdProperties {
  /**
   * @member {string} [id] ARM resource id of sync database.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
}

/**
 * @interface
 * An interface representing SyncFullSchemaTableColumn.
 * Properties of the column in the table of database full schema.
 *
 */
export interface SyncFullSchemaTableColumn {
  /**
   * @member {string} [dataSize] Data size of the column.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly dataSize?: string;
  /**
   * @member {string} [dataType] Data type of the column.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly dataType?: string;
  /**
   * @member {string} [errorId] Error id of the column.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly errorId?: string;
  /**
   * @member {boolean} [hasError] If there is error in the table.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly hasError?: boolean;
  /**
   * @member {boolean} [isPrimaryKey] If it is the primary key of the table.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly isPrimaryKey?: boolean;
  /**
   * @member {string} [name] Name of the column.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [quotedName] Quoted name of the column.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly quotedName?: string;
}

/**
 * @interface
 * An interface representing SyncFullSchemaTable.
 * Properties of the table in the database full schema.
 *
 */
export interface SyncFullSchemaTable {
  /**
   * @member {SyncFullSchemaTableColumn[]} [columns] List of columns in the
   * table of database full schema.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly columns?: SyncFullSchemaTableColumn[];
  /**
   * @member {string} [errorId] Error id of the table.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly errorId?: string;
  /**
   * @member {boolean} [hasError] If there is error in the table.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly hasError?: boolean;
  /**
   * @member {string} [name] Name of the table.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [quotedName] Quoted name of the table.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly quotedName?: string;
}

/**
 * @interface
 * An interface representing SyncFullSchemaProperties.
 * Properties of the database full schema.
 *
 */
export interface SyncFullSchemaProperties {
  /**
   * @member {SyncFullSchemaTable[]} [tables] List of tables in the database
   * full schema.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly tables?: SyncFullSchemaTable[];
  /**
   * @member {Date} [lastUpdateTime] Last update time of the database schema.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly lastUpdateTime?: Date;
}

/**
 * @interface
 * An interface representing SyncGroupLogProperties.
 * Properties of an Azure SQL Database sync group log.
 *
 */
export interface SyncGroupLogProperties {
  /**
   * @member {Date} [timestamp] Timestamp of the sync group log.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly timestamp?: Date;
  /**
   * @member {SyncGroupLogType} [type] Type of the sync group log. Possible
   * values include: 'All', 'Error', 'Warning', 'Success'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: SyncGroupLogType;
  /**
   * @member {string} [source] Source of the sync group log.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly source?: string;
  /**
   * @member {string} [details] Details of the sync group log.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly details?: string;
  /**
   * @member {string} [tracingId] TracingId of the sync group log.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly tracingId?: string;
  /**
   * @member {string} [operationStatus] OperationStatus of the sync group log.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly operationStatus?: string;
}

/**
 * @interface
 * An interface representing SyncGroupSchemaTableColumn.
 * Properties of column in sync group table.
 *
 */
export interface SyncGroupSchemaTableColumn {
  /**
   * @member {string} [quotedName] Quoted name of sync group table column.
   */
  quotedName?: string;
  /**
   * @member {string} [dataSize] Data size of the column.
   */
  dataSize?: string;
  /**
   * @member {string} [dataType] Data type of the column.
   */
  dataType?: string;
}

/**
 * @interface
 * An interface representing SyncGroupSchemaTable.
 * Properties of table in sync group schema.
 *
 */
export interface SyncGroupSchemaTable {
  /**
   * @member {SyncGroupSchemaTableColumn[]} [columns] List of columns in sync
   * group schema.
   */
  columns?: SyncGroupSchemaTableColumn[];
  /**
   * @member {string} [quotedName] Quoted name of sync group schema table.
   */
  quotedName?: string;
}

/**
 * @interface
 * An interface representing SyncGroupSchema.
 * Properties of sync group schema.
 *
 */
export interface SyncGroupSchema {
  /**
   * @member {SyncGroupSchemaTable[]} [tables] List of tables in sync group
   * schema.
   */
  tables?: SyncGroupSchemaTable[];
  /**
   * @member {string} [masterSyncMemberName] Name of master sync member where
   * the schema is from.
   */
  masterSyncMemberName?: string;
}

/**
 * @interface
 * An interface representing SyncGroup.
 * An Azure SQL Database sync group.
 *
 * @extends ProxyResource
 */
export interface SyncGroup extends ProxyResource {
  /**
   * @member {number} [interval] Sync interval of the sync group.
   */
  interval?: number;
  /**
   * @member {Date} [lastSyncTime] Last sync time of the sync group.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly lastSyncTime?: Date;
  /**
   * @member {SyncConflictResolutionPolicy} [conflictResolutionPolicy] Conflict
   * resolution policy of the sync group. Possible values include: 'HubWin',
   * 'MemberWin'
   */
  conflictResolutionPolicy?: SyncConflictResolutionPolicy;
  /**
   * @member {string} [syncDatabaseId] ARM resource id of the sync database in
   * the sync group.
   */
  syncDatabaseId?: string;
  /**
   * @member {string} [hubDatabaseUserName] User name for the sync group hub
   * database credential.
   */
  hubDatabaseUserName?: string;
  /**
   * @member {string} [hubDatabasePassword] Password for the sync group hub
   * database credential.
   */
  hubDatabasePassword?: string;
  /**
   * @member {SyncGroupState} [syncState] Sync state of the sync group.
   * Possible values include: 'NotReady', 'Error', 'Warning', 'Progressing',
   * 'Good'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly syncState?: SyncGroupState;
  /**
   * @member {SyncGroupSchema} [schema] Sync schema of the sync group.
   */
  schema?: SyncGroupSchema;
}

/**
 * @interface
 * An interface representing SyncMember.
 * An Azure SQL Database sync member.
 *
 * @extends ProxyResource
 */
export interface SyncMember extends ProxyResource {
  /**
   * @member {SyncMemberDbType} [databaseType] Database type of the sync
   * member. Possible values include: 'AzureSqlDatabase', 'SqlServerDatabase'
   */
  databaseType?: SyncMemberDbType;
  /**
   * @member {string} [syncAgentId] ARM resource id of the sync agent in the
   * sync member.
   */
  syncAgentId?: string;
  /**
   * @member {string} [sqlServerDatabaseId] SQL Server database id of the sync
   * member.
   */
  sqlServerDatabaseId?: string;
  /**
   * @member {string} [serverName] Server name of the member database in the
   * sync member
   */
  serverName?: string;
  /**
   * @member {string} [databaseName] Database name of the member database in
   * the sync member.
   */
  databaseName?: string;
  /**
   * @member {string} [userName] User name of the member database in the sync
   * member.
   */
  userName?: string;
  /**
   * @member {string} [password] Password of the member database in the sync
   * member.
   */
  password?: string;
  /**
   * @member {SyncDirection} [syncDirection] Sync direction of the sync member.
   * Possible values include: 'Bidirectional', 'OneWayMemberToHub',
   * 'OneWayHubToMember'
   */
  syncDirection?: SyncDirection;
  /**
   * @member {SyncMemberState} [syncState] Sync state of the sync member.
   * Possible values include: 'SyncInProgress', 'SyncSucceeded', 'SyncFailed',
   * 'DisabledTombstoneCleanup', 'DisabledBackupRestore',
   * 'SyncSucceededWithWarnings', 'SyncCancelling', 'SyncCancelled',
   * 'UnProvisioned', 'Provisioning', 'Provisioned', 'ProvisionFailed',
   * 'DeProvisioning', 'DeProvisioned', 'DeProvisionFailed', 'Reprovisioning',
   * 'ReprovisionFailed', 'UnReprovisioned'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly syncState?: SyncMemberState;
}

/**
 * @interface
 * An interface representing SubscriptionUsage.
 * Usage Metric of a Subscription in a Location.
 *
 * @extends ProxyResource
 */
export interface SubscriptionUsage extends ProxyResource {
  /**
   * @member {string} [displayName] User-readable name of the metric.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly displayName?: string;
  /**
   * @member {number} [currentValue] Current value of the metric.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly currentValue?: number;
  /**
   * @member {number} [limit] Boundary value of the metric.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly limit?: number;
  /**
   * @member {string} [unit] Unit of the metric.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly unit?: string;
}

/**
 * @interface
 * An interface representing VirtualNetworkRule.
 * A virtual network rule.
 *
 * @extends ProxyResource
 */
export interface VirtualNetworkRule extends ProxyResource {
  /**
   * @member {string} virtualNetworkSubnetId The ARM resource id of the virtual
   * network subnet.
   */
  virtualNetworkSubnetId: string;
  /**
   * @member {boolean} [ignoreMissingVnetServiceEndpoint] Create firewall rule
   * before the virtual network has vnet service endpoint enabled.
   */
  ignoreMissingVnetServiceEndpoint?: boolean;
  /**
   * @member {VirtualNetworkRuleState} [state] Virtual Network Rule State.
   * Possible values include: 'Initializing', 'InProgress', 'Ready',
   * 'Deleting', 'Unknown'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly state?: VirtualNetworkRuleState;
}

/**
 * @interface
 * An interface representing ExtendedDatabaseBlobAuditingPolicy.
 * An extended database blob auditing policy.
 *
 * @extends ProxyResource
 */
export interface ExtendedDatabaseBlobAuditingPolicy extends ProxyResource {
  /**
   * @member {string} [predicateExpression] Specifies condition of where clause
   * when creating an audit.
   */
  predicateExpression?: string;
  /**
   * @member {BlobAuditingPolicyState} state Specifies the state of the policy.
   * If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled are
   * required. Possible values include: 'Enabled', 'Disabled'
   */
  state: BlobAuditingPolicyState;
  /**
   * @member {string} [storageEndpoint] Specifies the blob storage endpoint
   * (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled,
   * storageEndpoint is required.
   */
  storageEndpoint?: string;
  /**
   * @member {string} [storageAccountAccessKey] Specifies the identifier key of
   * the auditing storage account. If state is Enabled and storageEndpoint is
   * specified, storageAccountAccessKey is required.
   */
  storageAccountAccessKey?: string;
  /**
   * @member {number} [retentionDays] Specifies the number of days to keep in
   * the audit logs in the storage account.
   */
  retentionDays?: number;
  /**
   * @member {string[]} [auditActionsAndGroups] Specifies the Actions-Groups
   * and Actions to audit.
   *
   * The recommended set of action groups to use is the following combination -
   * this will audit all the queries and stored procedures executed against the
   * database, as well as successful and failed logins:
   *
   * BATCH_COMPLETED_GROUP,
   * SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,
   * FAILED_DATABASE_AUTHENTICATION_GROUP.
   *
   * This above combination is also the set that is configured by default when
   * enabling auditing from the Azure portal.
   *
   * The supported action groups to audit are (note: choose only specific
   * groups that cover your auditing needs. Using unnecessary groups could lead
   * to very large quantities of audit records):
   *
   * APPLICATION_ROLE_CHANGE_PASSWORD_GROUP
   * BACKUP_RESTORE_GROUP
   * DATABASE_LOGOUT_GROUP
   * DATABASE_OBJECT_CHANGE_GROUP
   * DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP
   * DATABASE_OBJECT_PERMISSION_CHANGE_GROUP
   * DATABASE_OPERATION_GROUP
   * DATABASE_PERMISSION_CHANGE_GROUP
   * DATABASE_PRINCIPAL_CHANGE_GROUP
   * DATABASE_PRINCIPAL_IMPERSONATION_GROUP
   * DATABASE_ROLE_MEMBER_CHANGE_GROUP
   * FAILED_DATABASE_AUTHENTICATION_GROUP
   * SCHEMA_OBJECT_ACCESS_GROUP
   * SCHEMA_OBJECT_CHANGE_GROUP
   * SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP
   * SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP
   * SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP
   * USER_CHANGE_PASSWORD_GROUP
   * BATCH_STARTED_GROUP
   * BATCH_COMPLETED_GROUP
   *
   * These are groups that cover all sql statements and stored procedures
   * executed against the database, and should not be used in combination with
   * other groups as this will result in duplicate audit logs.
   *
   * For more information, see [Database-Level Audit Action
   * Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).
   *
   * For Database auditing policy, specific Actions can also be specified (note
   * that Actions cannot be specified for Server auditing policy). The
   * supported actions to audit are:
   * SELECT
   * UPDATE
   * INSERT
   * DELETE
   * EXECUTE
   * RECEIVE
   * REFERENCES
   *
   * The general form for defining an action to be audited is:
   * <action> ON <object> BY <principal>
   *
   * Note that <object> in the above format can refer to an object like a
   * table, view, or stored procedure, or an entire database or schema. For the
   * latter cases, the forms DATABASE::<db_name> and SCHEMA::<schema_name> are
   * used, respectively.
   *
   * For example:
   * SELECT on dbo.myTable by public
   * SELECT on DATABASE::myDatabase by public
   * SELECT on SCHEMA::mySchema by public
   *
   * For more information, see [Database-Level Audit
   * Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)
   */
  auditActionsAndGroups?: string[];
  /**
   * @member {string} [storageAccountSubscriptionId] Specifies the blob storage
   * subscription Id.
   */
  storageAccountSubscriptionId?: string;
  /**
   * @member {boolean} [isStorageSecondaryKeyInUse] Specifies whether
   * storageAccountAccessKey value is the storage's secondary key.
   */
  isStorageSecondaryKeyInUse?: boolean;
  /**
   * @member {boolean} [isAzureMonitorTargetEnabled] Specifies whether audit
   * events are sent to Azure Monitor.
   * In order to send the events to Azure Monitor, specify 'State' as 'Enabled'
   * and 'IsAzureMonitorTargetEnabled' as true.
   *
   * When using REST API to configure auditing, Diagnostic Settings with
   * 'SQLSecurityAuditEvents' diagnostic logs category on the database should
   * be also created.
   * Note that for server level audit you should use the 'master' database as
   * <databaseName>.
   * Diagnostic Settings URI format:
   * PUT
   * https://management.azure.com/subscriptions/<subscriptionId>/resourceGroups/<resourceGroup>/providers/Microsoft.Sql/servers/<serverName>/databases/<databaseName>/providers/microsoft.insights/diagnosticSettings/<settingsName>?api-version=2017-05-01-preview
   *
   * For more information, see [Diagnostic Settings REST
   * API](https://go.microsoft.com/fwlink/?linkid=2033207)
   * or [Diagnostic Settings
   * PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)
   */
  isAzureMonitorTargetEnabled?: boolean;
}

/**
 * @interface
 * An interface representing ExtendedServerBlobAuditingPolicy.
 * An extended server blob auditing policy.
 *
 * @extends ProxyResource
 */
export interface ExtendedServerBlobAuditingPolicy extends ProxyResource {
  /**
   * @member {string} [predicateExpression] Specifies condition of where clause
   * when creating an audit.
   */
  predicateExpression?: string;
  /**
   * @member {BlobAuditingPolicyState} state Specifies the state of the policy.
   * If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled are
   * required. Possible values include: 'Enabled', 'Disabled'
   */
  state: BlobAuditingPolicyState;
  /**
   * @member {string} [storageEndpoint] Specifies the blob storage endpoint
   * (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled,
   * storageEndpoint is required.
   */
  storageEndpoint?: string;
  /**
   * @member {string} [storageAccountAccessKey] Specifies the identifier key of
   * the auditing storage account. If state is Enabled and storageEndpoint is
   * specified, storageAccountAccessKey is required.
   */
  storageAccountAccessKey?: string;
  /**
   * @member {number} [retentionDays] Specifies the number of days to keep in
   * the audit logs in the storage account.
   */
  retentionDays?: number;
  /**
   * @member {string[]} [auditActionsAndGroups] Specifies the Actions-Groups
   * and Actions to audit.
   *
   * The recommended set of action groups to use is the following combination -
   * this will audit all the queries and stored procedures executed against the
   * database, as well as successful and failed logins:
   *
   * BATCH_COMPLETED_GROUP,
   * SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,
   * FAILED_DATABASE_AUTHENTICATION_GROUP.
   *
   * This above combination is also the set that is configured by default when
   * enabling auditing from the Azure portal.
   *
   * The supported action groups to audit are (note: choose only specific
   * groups that cover your auditing needs. Using unnecessary groups could lead
   * to very large quantities of audit records):
   *
   * APPLICATION_ROLE_CHANGE_PASSWORD_GROUP
   * BACKUP_RESTORE_GROUP
   * DATABASE_LOGOUT_GROUP
   * DATABASE_OBJECT_CHANGE_GROUP
   * DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP
   * DATABASE_OBJECT_PERMISSION_CHANGE_GROUP
   * DATABASE_OPERATION_GROUP
   * DATABASE_PERMISSION_CHANGE_GROUP
   * DATABASE_PRINCIPAL_CHANGE_GROUP
   * DATABASE_PRINCIPAL_IMPERSONATION_GROUP
   * DATABASE_ROLE_MEMBER_CHANGE_GROUP
   * FAILED_DATABASE_AUTHENTICATION_GROUP
   * SCHEMA_OBJECT_ACCESS_GROUP
   * SCHEMA_OBJECT_CHANGE_GROUP
   * SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP
   * SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP
   * SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP
   * USER_CHANGE_PASSWORD_GROUP
   * BATCH_STARTED_GROUP
   * BATCH_COMPLETED_GROUP
   *
   * These are groups that cover all sql statements and stored procedures
   * executed against the database, and should not be used in combination with
   * other groups as this will result in duplicate audit logs.
   *
   * For more information, see [Database-Level Audit Action
   * Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).
   *
   * For Database auditing policy, specific Actions can also be specified (note
   * that Actions cannot be specified for Server auditing policy). The
   * supported actions to audit are:
   * SELECT
   * UPDATE
   * INSERT
   * DELETE
   * EXECUTE
   * RECEIVE
   * REFERENCES
   *
   * The general form for defining an action to be audited is:
   * <action> ON <object> BY <principal>
   *
   * Note that <object> in the above format can refer to an object like a
   * table, view, or stored procedure, or an entire database or schema. For the
   * latter cases, the forms DATABASE::<db_name> and SCHEMA::<schema_name> are
   * used, respectively.
   *
   * For example:
   * SELECT on dbo.myTable by public
   * SELECT on DATABASE::myDatabase by public
   * SELECT on SCHEMA::mySchema by public
   *
   * For more information, see [Database-Level Audit
   * Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)
   */
  auditActionsAndGroups?: string[];
  /**
   * @member {string} [storageAccountSubscriptionId] Specifies the blob storage
   * subscription Id.
   */
  storageAccountSubscriptionId?: string;
  /**
   * @member {boolean} [isStorageSecondaryKeyInUse] Specifies whether
   * storageAccountAccessKey value is the storage's secondary key.
   */
  isStorageSecondaryKeyInUse?: boolean;
  /**
   * @member {boolean} [isAzureMonitorTargetEnabled] Specifies whether audit
   * events are sent to Azure Monitor.
   * In order to send the events to Azure Monitor, specify 'State' as 'Enabled'
   * and 'IsAzureMonitorTargetEnabled' as true.
   *
   * When using REST API to configure auditing, Diagnostic Settings with
   * 'SQLSecurityAuditEvents' diagnostic logs category on the database should
   * be also created.
   * Note that for server level audit you should use the 'master' database as
   * <databaseName>.
   * Diagnostic Settings URI format:
   * PUT
   * https://management.azure.com/subscriptions/<subscriptionId>/resourceGroups/<resourceGroup>/providers/Microsoft.Sql/servers/<serverName>/databases/<databaseName>/providers/microsoft.insights/diagnosticSettings/<settingsName>?api-version=2017-05-01-preview
   *
   * For more information, see [Diagnostic Settings REST
   * API](https://go.microsoft.com/fwlink/?linkid=2033207)
   * or [Diagnostic Settings
   * PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)
   */
  isAzureMonitorTargetEnabled?: boolean;
}

/**
 * @interface
 * An interface representing ServerBlobAuditingPolicy.
 * A server blob auditing policy.
 *
 * @extends ProxyResource
 */
export interface ServerBlobAuditingPolicy extends ProxyResource {
  /**
   * @member {BlobAuditingPolicyState} state Specifies the state of the policy.
   * If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled are
   * required. Possible values include: 'Enabled', 'Disabled'
   */
  state: BlobAuditingPolicyState;
  /**
   * @member {string} [storageEndpoint] Specifies the blob storage endpoint
   * (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled,
   * storageEndpoint is required.
   */
  storageEndpoint?: string;
  /**
   * @member {string} [storageAccountAccessKey] Specifies the identifier key of
   * the auditing storage account. If state is Enabled and storageEndpoint is
   * specified, storageAccountAccessKey is required.
   */
  storageAccountAccessKey?: string;
  /**
   * @member {number} [retentionDays] Specifies the number of days to keep in
   * the audit logs in the storage account.
   */
  retentionDays?: number;
  /**
   * @member {string[]} [auditActionsAndGroups] Specifies the Actions-Groups
   * and Actions to audit.
   *
   * The recommended set of action groups to use is the following combination -
   * this will audit all the queries and stored procedures executed against the
   * database, as well as successful and failed logins:
   *
   * BATCH_COMPLETED_GROUP,
   * SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,
   * FAILED_DATABASE_AUTHENTICATION_GROUP.
   *
   * This above combination is also the set that is configured by default when
   * enabling auditing from the Azure portal.
   *
   * The supported action groups to audit are (note: choose only specific
   * groups that cover your auditing needs. Using unnecessary groups could lead
   * to very large quantities of audit records):
   *
   * APPLICATION_ROLE_CHANGE_PASSWORD_GROUP
   * BACKUP_RESTORE_GROUP
   * DATABASE_LOGOUT_GROUP
   * DATABASE_OBJECT_CHANGE_GROUP
   * DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP
   * DATABASE_OBJECT_PERMISSION_CHANGE_GROUP
   * DATABASE_OPERATION_GROUP
   * DATABASE_PERMISSION_CHANGE_GROUP
   * DATABASE_PRINCIPAL_CHANGE_GROUP
   * DATABASE_PRINCIPAL_IMPERSONATION_GROUP
   * DATABASE_ROLE_MEMBER_CHANGE_GROUP
   * FAILED_DATABASE_AUTHENTICATION_GROUP
   * SCHEMA_OBJECT_ACCESS_GROUP
   * SCHEMA_OBJECT_CHANGE_GROUP
   * SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP
   * SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP
   * SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP
   * USER_CHANGE_PASSWORD_GROUP
   * BATCH_STARTED_GROUP
   * BATCH_COMPLETED_GROUP
   *
   * These are groups that cover all sql statements and stored procedures
   * executed against the database, and should not be used in combination with
   * other groups as this will result in duplicate audit logs.
   *
   * For more information, see [Database-Level Audit Action
   * Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).
   *
   * For Database auditing policy, specific Actions can also be specified (note
   * that Actions cannot be specified for Server auditing policy). The
   * supported actions to audit are:
   * SELECT
   * UPDATE
   * INSERT
   * DELETE
   * EXECUTE
   * RECEIVE
   * REFERENCES
   *
   * The general form for defining an action to be audited is:
   * <action> ON <object> BY <principal>
   *
   * Note that <object> in the above format can refer to an object like a
   * table, view, or stored procedure, or an entire database or schema. For the
   * latter cases, the forms DATABASE::<db_name> and SCHEMA::<schema_name> are
   * used, respectively.
   *
   * For example:
   * SELECT on dbo.myTable by public
   * SELECT on DATABASE::myDatabase by public
   * SELECT on SCHEMA::mySchema by public
   *
   * For more information, see [Database-Level Audit
   * Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)
   */
  auditActionsAndGroups?: string[];
  /**
   * @member {string} [storageAccountSubscriptionId] Specifies the blob storage
   * subscription Id.
   */
  storageAccountSubscriptionId?: string;
  /**
   * @member {boolean} [isStorageSecondaryKeyInUse] Specifies whether
   * storageAccountAccessKey value is the storage's secondary key.
   */
  isStorageSecondaryKeyInUse?: boolean;
  /**
   * @member {boolean} [isAzureMonitorTargetEnabled] Specifies whether audit
   * events are sent to Azure Monitor.
   * In order to send the events to Azure Monitor, specify 'State' as 'Enabled'
   * and 'IsAzureMonitorTargetEnabled' as true.
   *
   * When using REST API to configure auditing, Diagnostic Settings with
   * 'SQLSecurityAuditEvents' diagnostic logs category on the database should
   * be also created.
   * Note that for server level audit you should use the 'master' database as
   * <databaseName>.
   * Diagnostic Settings URI format:
   * PUT
   * https://management.azure.com/subscriptions/<subscriptionId>/resourceGroups/<resourceGroup>/providers/Microsoft.Sql/servers/<serverName>/databases/<databaseName>/providers/microsoft.insights/diagnosticSettings/<settingsName>?api-version=2017-05-01-preview
   *
   * For more information, see [Diagnostic Settings REST
   * API](https://go.microsoft.com/fwlink/?linkid=2033207)
   * or [Diagnostic Settings
   * PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)
   */
  isAzureMonitorTargetEnabled?: boolean;
}

/**
 * @interface
 * An interface representing DatabaseBlobAuditingPolicy.
 * A database blob auditing policy.
 *
 * @extends ProxyResource
 */
export interface DatabaseBlobAuditingPolicy extends ProxyResource {
  /**
   * @member {string} [kind] Resource kind.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly kind?: string;
  /**
   * @member {BlobAuditingPolicyState} state Specifies the state of the policy.
   * If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled are
   * required. Possible values include: 'Enabled', 'Disabled'
   */
  state: BlobAuditingPolicyState;
  /**
   * @member {string} [storageEndpoint] Specifies the blob storage endpoint
   * (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled,
   * storageEndpoint is required.
   */
  storageEndpoint?: string;
  /**
   * @member {string} [storageAccountAccessKey] Specifies the identifier key of
   * the auditing storage account. If state is Enabled and storageEndpoint is
   * specified, storageAccountAccessKey is required.
   */
  storageAccountAccessKey?: string;
  /**
   * @member {number} [retentionDays] Specifies the number of days to keep in
   * the audit logs in the storage account.
   */
  retentionDays?: number;
  /**
   * @member {string[]} [auditActionsAndGroups] Specifies the Actions-Groups
   * and Actions to audit.
   *
   * The recommended set of action groups to use is the following combination -
   * this will audit all the queries and stored procedures executed against the
   * database, as well as successful and failed logins:
   *
   * BATCH_COMPLETED_GROUP,
   * SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,
   * FAILED_DATABASE_AUTHENTICATION_GROUP.
   *
   * This above combination is also the set that is configured by default when
   * enabling auditing from the Azure portal.
   *
   * The supported action groups to audit are (note: choose only specific
   * groups that cover your auditing needs. Using unnecessary groups could lead
   * to very large quantities of audit records):
   *
   * APPLICATION_ROLE_CHANGE_PASSWORD_GROUP
   * BACKUP_RESTORE_GROUP
   * DATABASE_LOGOUT_GROUP
   * DATABASE_OBJECT_CHANGE_GROUP
   * DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP
   * DATABASE_OBJECT_PERMISSION_CHANGE_GROUP
   * DATABASE_OPERATION_GROUP
   * DATABASE_PERMISSION_CHANGE_GROUP
   * DATABASE_PRINCIPAL_CHANGE_GROUP
   * DATABASE_PRINCIPAL_IMPERSONATION_GROUP
   * DATABASE_ROLE_MEMBER_CHANGE_GROUP
   * FAILED_DATABASE_AUTHENTICATION_GROUP
   * SCHEMA_OBJECT_ACCESS_GROUP
   * SCHEMA_OBJECT_CHANGE_GROUP
   * SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP
   * SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP
   * SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP
   * USER_CHANGE_PASSWORD_GROUP
   * BATCH_STARTED_GROUP
   * BATCH_COMPLETED_GROUP
   *
   * These are groups that cover all sql statements and stored procedures
   * executed against the database, and should not be used in combination with
   * other groups as this will result in duplicate audit logs.
   *
   * For more information, see [Database-Level Audit Action
   * Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).
   *
   * For Database auditing policy, specific Actions can also be specified (note
   * that Actions cannot be specified for Server auditing policy). The
   * supported actions to audit are:
   * SELECT
   * UPDATE
   * INSERT
   * DELETE
   * EXECUTE
   * RECEIVE
   * REFERENCES
   *
   * The general form for defining an action to be audited is:
   * <action> ON <object> BY <principal>
   *
   * Note that <object> in the above format can refer to an object like a
   * table, view, or stored procedure, or an entire database or schema. For the
   * latter cases, the forms DATABASE::<db_name> and SCHEMA::<schema_name> are
   * used, respectively.
   *
   * For example:
   * SELECT on dbo.myTable by public
   * SELECT on DATABASE::myDatabase by public
   * SELECT on SCHEMA::mySchema by public
   *
   * For more information, see [Database-Level Audit
   * Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)
   */
  auditActionsAndGroups?: string[];
  /**
   * @member {string} [storageAccountSubscriptionId] Specifies the blob storage
   * subscription Id.
   */
  storageAccountSubscriptionId?: string;
  /**
   * @member {boolean} [isStorageSecondaryKeyInUse] Specifies whether
   * storageAccountAccessKey value is the storage's secondary key.
   */
  isStorageSecondaryKeyInUse?: boolean;
  /**
   * @member {boolean} [isAzureMonitorTargetEnabled] Specifies whether audit
   * events are sent to Azure Monitor.
   * In order to send the events to Azure Monitor, specify 'State' as 'Enabled'
   * and 'IsAzureMonitorTargetEnabled' as true.
   *
   * When using REST API to configure auditing, Diagnostic Settings with
   * 'SQLSecurityAuditEvents' diagnostic logs category on the database should
   * be also created.
   * Note that for server level audit you should use the 'master' database as
   * <databaseName>.
   * Diagnostic Settings URI format:
   * PUT
   * https://management.azure.com/subscriptions/<subscriptionId>/resourceGroups/<resourceGroup>/providers/Microsoft.Sql/servers/<serverName>/databases/<databaseName>/providers/microsoft.insights/diagnosticSettings/<settingsName>?api-version=2017-05-01-preview
   *
   * For more information, see [Diagnostic Settings REST
   * API](https://go.microsoft.com/fwlink/?linkid=2033207)
   * or [Diagnostic Settings
   * PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)
   */
  isAzureMonitorTargetEnabled?: boolean;
}

/**
 * @interface
 * An interface representing DatabaseVulnerabilityAssessmentRuleBaselineItem.
 * Properties for an Azure SQL Database Vulnerability Assessment rule
 * baseline's result.
 *
 */
export interface DatabaseVulnerabilityAssessmentRuleBaselineItem {
  /**
   * @member {string[]} result The rule baseline result
   */
  result: string[];
}

/**
 * @interface
 * An interface representing DatabaseVulnerabilityAssessmentRuleBaseline.
 * A database vulnerability assessment rule baseline.
 *
 * @extends ProxyResource
 */
export interface DatabaseVulnerabilityAssessmentRuleBaseline extends ProxyResource {
  /**
   * @member {DatabaseVulnerabilityAssessmentRuleBaselineItem[]}
   * baselineResults The rule baseline result
   */
  baselineResults: DatabaseVulnerabilityAssessmentRuleBaselineItem[];
}

/**
 * @interface
 * An interface representing VulnerabilityAssessmentRecurringScansProperties.
 * Properties of a Vulnerability Assessment recurring scans.
 *
 */
export interface VulnerabilityAssessmentRecurringScansProperties {
  /**
   * @member {boolean} [isEnabled] Recurring scans state.
   */
  isEnabled?: boolean;
  /**
   * @member {boolean} [emailSubscriptionAdmins] Specifies that the schedule
   * scan notification will be is sent to the subscription administrators.
   * Default value: true .
   */
  emailSubscriptionAdmins?: boolean;
  /**
   * @member {string[]} [emails] Specifies an array of e-mail addresses to
   * which the scan notification is sent.
   */
  emails?: string[];
}

/**
 * @interface
 * An interface representing DatabaseVulnerabilityAssessment.
 * A database vulnerability assessment.
 *
 * @extends ProxyResource
 */
export interface DatabaseVulnerabilityAssessment extends ProxyResource {
  /**
   * @member {string} [storageContainerPath] A blob storage container path to
   * hold the scan results (e.g.
   * https://myStorage.blob.core.windows.net/VaScans/).  It is required if
   * server level vulnerability assessment policy doesn't set
   */
  storageContainerPath?: string;
  /**
   * @member {string} [storageContainerSasKey] A shared access signature (SAS
   * Key) that has write access to the blob container specified in
   * 'storageContainerPath' parameter. If 'storageAccountAccessKey' isn't
   * specified, StorageContainerSasKey is required.
   */
  storageContainerSasKey?: string;
  /**
   * @member {string} [storageAccountAccessKey] Specifies the identifier key of
   * the storage account for vulnerability assessment scan results. If
   * 'StorageContainerSasKey' isn't specified, storageAccountAccessKey is
   * required.
   */
  storageAccountAccessKey?: string;
  /**
   * @member {VulnerabilityAssessmentRecurringScansProperties} [recurringScans]
   * The recurring scans settings
   */
  recurringScans?: VulnerabilityAssessmentRecurringScansProperties;
}

/**
 * @interface
 * An interface representing JobAgent.
 * An Azure SQL job agent.
 *
 * @extends TrackedResource
 */
export interface JobAgent extends TrackedResource {
  /**
   * @member {Sku} [sku] The name and tier of the SKU.
   */
  sku?: Sku;
  /**
   * @member {string} databaseId Resource ID of the database to store job
   * metadata in.
   */
  databaseId: string;
  /**
   * @member {JobAgentState} [state] The state of the job agent. Possible
   * values include: 'Creating', 'Ready', 'Updating', 'Deleting', 'Disabled'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly state?: JobAgentState;
}

/**
 * @interface
 * An interface representing JobAgentUpdate.
 * An update to an Azure SQL job agent.
 *
 */
export interface JobAgentUpdate {
  /**
   * @member {{ [propertyName: string]: string }} [tags] Resource tags.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * @interface
 * An interface representing JobCredential.
 * A stored credential that can be used by a job to connect to target
 * databases.
 *
 * @extends ProxyResource
 */
export interface JobCredential extends ProxyResource {
  /**
   * @member {string} username The credential user name.
   */
  username: string;
  /**
   * @member {string} password The credential password.
   */
  password: string;
}

/**
 * @interface
 * An interface representing JobExecutionTarget.
 * The target that a job execution is executed on.
 *
 */
export interface JobExecutionTarget {
  /**
   * @member {JobTargetType} [type] The type of the target. Possible values
   * include: 'TargetGroup', 'SqlDatabase', 'SqlElasticPool', 'SqlShardMap',
   * 'SqlServer'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: JobTargetType;
  /**
   * @member {string} [serverName] The server name.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly serverName?: string;
  /**
   * @member {string} [databaseName] The database name.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly databaseName?: string;
}

/**
 * @interface
 * An interface representing JobExecution.
 * An execution of a job
 *
 * @extends ProxyResource
 */
export interface JobExecution extends ProxyResource {
  /**
   * @member {number} [jobVersion] The job version number.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly jobVersion?: number;
  /**
   * @member {string} [stepName] The job step name.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly stepName?: string;
  /**
   * @member {number} [stepId] The job step id.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly stepId?: number;
  /**
   * @member {string} [jobExecutionId] The unique identifier of the job
   * execution.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly jobExecutionId?: string;
  /**
   * @member {JobExecutionLifecycle} [lifecycle] The detailed state of the job
   * execution. Possible values include: 'Created', 'InProgress',
   * 'WaitingForChildJobExecutions', 'WaitingForRetry', 'Succeeded',
   * 'SucceededWithSkipped', 'Failed', 'TimedOut', 'Canceled', 'Skipped'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly lifecycle?: JobExecutionLifecycle;
  /**
   * @member {ProvisioningState} [provisioningState] The ARM provisioning state
   * of the job execution. Possible values include: 'Created', 'InProgress',
   * 'Succeeded', 'Failed', 'Canceled'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * @member {Date} [createTime] The time that the job execution was created.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly createTime?: Date;
  /**
   * @member {Date} [startTime] The time that the job execution started.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly startTime?: Date;
  /**
   * @member {Date} [endTime] The time that the job execution completed.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly endTime?: Date;
  /**
   * @member {number} [currentAttempts] Number of times the job execution has
   * been attempted.
   */
  currentAttempts?: number;
  /**
   * @member {Date} [currentAttemptStartTime] Start time of the current
   * attempt.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly currentAttemptStartTime?: Date;
  /**
   * @member {string} [lastMessage] The last status or error message.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly lastMessage?: string;
  /**
   * @member {JobExecutionTarget} [target] The target that this execution is
   * executed on.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly target?: JobExecutionTarget;
}

/**
 * @interface
 * An interface representing JobSchedule.
 * Scheduling properties of a job.
 *
 */
export interface JobSchedule {
  /**
   * @member {Date} [startTime] Schedule start time. Default value: new
   * Date('0001-01-01T00:00:00Z') .
   */
  startTime?: Date;
  /**
   * @member {Date} [endTime] Schedule end time. Default value: new
   * Date('9999-12-31T11:59:59Z') .
   */
  endTime?: Date;
  /**
   * @member {JobScheduleType} [type] Schedule interval type. Possible values
   * include: 'Once', 'Recurring'. Default value: 'Once' .
   */
  type?: JobScheduleType;
  /**
   * @member {boolean} [enabled] Whether or not the schedule is enabled.
   */
  enabled?: boolean;
  /**
   * @member {string} [interval] Value of the schedule's recurring interval, if
   * the scheduletype is recurring. ISO8601 duration format.
   */
  interval?: string;
}

/**
 * @interface
 * An interface representing Job.
 * A job.
 *
 * @extends ProxyResource
 */
export interface Job extends ProxyResource {
  /**
   * @member {string} [description] User-defined description of the job.
   * Default value: '' .
   */
  description?: string;
  /**
   * @member {number} [version] The job version number.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly version?: number;
  /**
   * @member {JobSchedule} [schedule] Schedule properties of the job.
   */
  schedule?: JobSchedule;
}

/**
 * @interface
 * An interface representing JobStepAction.
 * The action to be executed by a job step.
 *
 */
export interface JobStepAction {
  /**
   * @member {JobStepActionType} [type] Type of action being executed by the
   * job step. Possible values include: 'TSql'. Default value: 'TSql' .
   */
  type?: JobStepActionType;
  /**
   * @member {JobStepActionSource} [source] The source of the action to
   * execute. Possible values include: 'Inline'. Default value: 'Inline' .
   */
  source?: JobStepActionSource;
  /**
   * @member {string} value The action value, for example the text of the T-SQL
   * script to execute.
   */
  value: string;
}

/**
 * @interface
 * An interface representing JobStepOutput.
 * The output configuration of a job step.
 *
 */
export interface JobStepOutput {
  /**
   * @member {JobStepOutputType} [type] The output destination type. Possible
   * values include: 'SqlDatabase'. Default value: 'SqlDatabase' .
   */
  type?: JobStepOutputType;
  /**
   * @member {string} [subscriptionId] The output destination subscription id.
   */
  subscriptionId?: string;
  /**
   * @member {string} [resourceGroupName] The output destination resource
   * group.
   */
  resourceGroupName?: string;
  /**
   * @member {string} serverName The output destination server name.
   */
  serverName: string;
  /**
   * @member {string} databaseName The output destination database.
   */
  databaseName: string;
  /**
   * @member {string} [schemaName] The output destination schema. Default
   * value: 'dbo' .
   */
  schemaName?: string;
  /**
   * @member {string} tableName The output destination table.
   */
  tableName: string;
  /**
   * @member {string} credential The resource ID of the credential to use to
   * connect to the output destination.
   */
  credential: string;
}

/**
 * @interface
 * An interface representing JobStepExecutionOptions.
 * The execution options of a job step.
 *
 */
export interface JobStepExecutionOptions {
  /**
   * @member {number} [timeoutSeconds] Execution timeout for the job step.
   * Default value: 43200 .
   */
  timeoutSeconds?: number;
  /**
   * @member {number} [retryAttempts] Maximum number of times the job step will
   * be reattempted if the first attempt fails. Default value: 10 .
   */
  retryAttempts?: number;
  /**
   * @member {number} [initialRetryIntervalSeconds] Initial delay between
   * retries for job step execution. Default value: 1 .
   */
  initialRetryIntervalSeconds?: number;
  /**
   * @member {number} [maximumRetryIntervalSeconds] The maximum amount of time
   * to wait between retries for job step execution. Default value: 120 .
   */
  maximumRetryIntervalSeconds?: number;
  /**
   * @member {number} [retryIntervalBackoffMultiplier] The backoff multiplier
   * for the time between retries. Default value: 2 .
   */
  retryIntervalBackoffMultiplier?: number;
}

/**
 * @interface
 * An interface representing JobStep.
 * A job step.
 *
 * @extends ProxyResource
 */
export interface JobStep extends ProxyResource {
  /**
   * @member {number} [stepId] The job step's index within the job. If not
   * specified when creating the job step, it will be created as the last step.
   * If not specified when updating the job step, the step id is not modified.
   */
  stepId?: number;
  /**
   * @member {string} targetGroup The resource ID of the target group that the
   * job step will be executed on.
   */
  targetGroup: string;
  /**
   * @member {string} credential The resource ID of the job credential that
   * will be used to connect to the targets.
   */
  credential: string;
  /**
   * @member {JobStepAction} action The action payload of the job step.
   */
  action: JobStepAction;
  /**
   * @member {JobStepOutput} [output] Output destination properties of the job
   * step.
   */
  output?: JobStepOutput;
  /**
   * @member {JobStepExecutionOptions} [executionOptions] Execution options for
   * the job step.
   */
  executionOptions?: JobStepExecutionOptions;
}

/**
 * @interface
 * An interface representing JobTarget.
 * A job target, for example a specific database or a container of databases
 * that is evaluated during job execution.
 *
 */
export interface JobTarget {
  /**
   * @member {JobTargetGroupMembershipType} [membershipType] Whether the target
   * is included or excluded from the group. Possible values include:
   * 'Include', 'Exclude'. Default value: 'Include' .
   */
  membershipType?: JobTargetGroupMembershipType;
  /**
   * @member {JobTargetType} type The target type. Possible values include:
   * 'TargetGroup', 'SqlDatabase', 'SqlElasticPool', 'SqlShardMap', 'SqlServer'
   */
  type: JobTargetType;
  /**
   * @member {string} [serverName] The target server name.
   */
  serverName?: string;
  /**
   * @member {string} [databaseName] The target database name.
   */
  databaseName?: string;
  /**
   * @member {string} [elasticPoolName] The target elastic pool name.
   */
  elasticPoolName?: string;
  /**
   * @member {string} [shardMapName] The target shard map.
   */
  shardMapName?: string;
  /**
   * @member {string} [refreshCredential] The resource ID of the credential
   * that is used during job execution to connect to the target and determine
   * the list of databases inside the target.
   */
  refreshCredential?: string;
}

/**
 * @interface
 * An interface representing JobTargetGroup.
 * A group of job targets.
 *
 * @extends ProxyResource
 */
export interface JobTargetGroup extends ProxyResource {
  /**
   * @member {JobTarget[]} members Members of the target group.
   */
  members: JobTarget[];
}

/**
 * @interface
 * An interface representing JobVersion.
 * A job version.
 *
 * @extends ProxyResource
 */
export interface JobVersion extends ProxyResource {
}

/**
 * @interface
 * An interface representing LongTermRetentionBackup.
 * A long term retention backup.
 *
 * @extends ProxyResource
 */
export interface LongTermRetentionBackup extends ProxyResource {
  /**
   * @member {string} [serverName] The server name that the backup database
   * belong to.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly serverName?: string;
  /**
   * @member {Date} [serverCreateTime] The create time of the server.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly serverCreateTime?: Date;
  /**
   * @member {string} [databaseName] The name of the database the backup belong
   * to
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly databaseName?: string;
  /**
   * @member {Date} [databaseDeletionTime] The delete time of the database
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly databaseDeletionTime?: Date;
  /**
   * @member {Date} [backupTime] The time the backup was taken
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly backupTime?: Date;
  /**
   * @member {Date} [backupExpirationTime] The time the long term retention
   * backup will expire.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly backupExpirationTime?: Date;
}

/**
 * @interface
 * An interface representing BackupLongTermRetentionPolicy.
 * A long term retention policy.
 *
 * @extends ProxyResource
 */
export interface BackupLongTermRetentionPolicy extends ProxyResource {
  /**
   * @member {string} [weeklyRetention] The weekly retention policy for an LTR
   * backup in an ISO 8601 format.
   */
  weeklyRetention?: string;
  /**
   * @member {string} [monthlyRetention] The monthly retention policy for an
   * LTR backup in an ISO 8601 format.
   */
  monthlyRetention?: string;
  /**
   * @member {string} [yearlyRetention] The yearly retention policy for an LTR
   * backup in an ISO 8601 format.
   */
  yearlyRetention?: string;
  /**
   * @member {number} [weekOfYear] The week of year to take the yearly backup
   * in an ISO 8601 format.
   */
  weekOfYear?: number;
}

/**
 * @interface
 * An interface representing CompleteDatabaseRestoreDefinition.
 * Contains the information necessary to perform a complete database restore
 * operation.
 *
 */
export interface CompleteDatabaseRestoreDefinition {
  /**
   * @member {string} lastBackupName The last backup name to apply
   */
  lastBackupName: string;
}

/**
 * @interface
 * An interface representing ManagedDatabase.
 * A managed database resource.
 *
 * @extends TrackedResource
 */
export interface ManagedDatabase extends TrackedResource {
  /**
   * @member {string} [collation] Collation of the managed database.
   */
  collation?: string;
  /**
   * @member {ManagedDatabaseStatus} [status] Status for the database. Possible
   * values include: 'Online', 'Offline', 'Shutdown', 'Creating',
   * 'Inaccessible'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly status?: ManagedDatabaseStatus;
  /**
   * @member {Date} [creationDate] Creation date of the database.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly creationDate?: Date;
  /**
   * @member {Date} [earliestRestorePoint] Earliest restore point in time for
   * point in time restore.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly earliestRestorePoint?: Date;
  /**
   * @member {Date} [restorePointInTime] Conditional. If createMode is
   * PointInTimeRestore, this value is required. Specifies the point in time
   * (ISO8601 format) of the source database that will be restored to create
   * the new database.
   */
  restorePointInTime?: Date;
  /**
   * @member {string} [defaultSecondaryLocation] Geo paired region.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly defaultSecondaryLocation?: string;
  /**
   * @member {CatalogCollationType} [catalogCollation] Collation of the
   * metadata catalog. Possible values include: 'DATABASE_DEFAULT',
   * 'SQL_Latin1_General_CP1_CI_AS'
   */
  catalogCollation?: CatalogCollationType;
  /**
   * @member {ManagedDatabaseCreateMode} [createMode] Managed database create
   * mode. PointInTimeRestore: Create a database by restoring a point in time
   * backup of an existing database. SourceDatabaseName,
   * SourceManagedInstanceName and PointInTime must be specified.
   * RestoreExternalBackup: Create a database by restoring from external backup
   * files. Collation, StorageContainerUri and StorageContainerSasToken must be
   * specified. Possible values include: 'Default', 'RestoreExternalBackup',
   * 'PointInTimeRestore'
   */
  createMode?: ManagedDatabaseCreateMode;
  /**
   * @member {string} [storageContainerUri] Conditional. If createMode is
   * RestoreExternalBackup, this value is required. Specifies the uri of the
   * storage container where backups for this restore are stored.
   */
  storageContainerUri?: string;
  /**
   * @member {string} [sourceDatabaseId] The resource identifier of the source
   * database associated with create operation of this database.
   */
  sourceDatabaseId?: string;
  /**
   * @member {string} [storageContainerSasToken] Conditional. If createMode is
   * RestoreExternalBackup, this value is required. Specifies the storage
   * container sas token.
   */
  storageContainerSasToken?: string;
  /**
   * @member {string} [failoverGroupId] Instance Failover Group resource
   * identifier that this managed database belongs to.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly failoverGroupId?: string;
}

/**
 * @interface
 * An interface representing ManagedDatabaseUpdate.
 * An managed database update.
 *
 */
export interface ManagedDatabaseUpdate {
  /**
   * @member {string} [collation] Collation of the managed database.
   */
  collation?: string;
  /**
   * @member {ManagedDatabaseStatus} [status] Status for the database. Possible
   * values include: 'Online', 'Offline', 'Shutdown', 'Creating',
   * 'Inaccessible'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly status?: ManagedDatabaseStatus;
  /**
   * @member {Date} [creationDate] Creation date of the database.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly creationDate?: Date;
  /**
   * @member {Date} [earliestRestorePoint] Earliest restore point in time for
   * point in time restore.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly earliestRestorePoint?: Date;
  /**
   * @member {Date} [restorePointInTime] Conditional. If createMode is
   * PointInTimeRestore, this value is required. Specifies the point in time
   * (ISO8601 format) of the source database that will be restored to create
   * the new database.
   */
  restorePointInTime?: Date;
  /**
   * @member {string} [defaultSecondaryLocation] Geo paired region.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly defaultSecondaryLocation?: string;
  /**
   * @member {CatalogCollationType} [catalogCollation] Collation of the
   * metadata catalog. Possible values include: 'DATABASE_DEFAULT',
   * 'SQL_Latin1_General_CP1_CI_AS'
   */
  catalogCollation?: CatalogCollationType;
  /**
   * @member {ManagedDatabaseCreateMode} [createMode] Managed database create
   * mode. PointInTimeRestore: Create a database by restoring a point in time
   * backup of an existing database. SourceDatabaseName,
   * SourceManagedInstanceName and PointInTime must be specified.
   * RestoreExternalBackup: Create a database by restoring from external backup
   * files. Collation, StorageContainerUri and StorageContainerSasToken must be
   * specified. Possible values include: 'Default', 'RestoreExternalBackup',
   * 'PointInTimeRestore'
   */
  createMode?: ManagedDatabaseCreateMode;
  /**
   * @member {string} [storageContainerUri] Conditional. If createMode is
   * RestoreExternalBackup, this value is required. Specifies the uri of the
   * storage container where backups for this restore are stored.
   */
  storageContainerUri?: string;
  /**
   * @member {string} [sourceDatabaseId] The resource identifier of the source
   * database associated with create operation of this database.
   */
  sourceDatabaseId?: string;
  /**
   * @member {string} [storageContainerSasToken] Conditional. If createMode is
   * RestoreExternalBackup, this value is required. Specifies the storage
   * container sas token.
   */
  storageContainerSasToken?: string;
  /**
   * @member {string} [failoverGroupId] Instance Failover Group resource
   * identifier that this managed database belongs to.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly failoverGroupId?: string;
  /**
   * @member {{ [propertyName: string]: string }} [tags] Resource tags.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * @interface
 * An interface representing AutomaticTuningServerOptions.
 * Automatic tuning properties for individual advisors.
 *
 */
export interface AutomaticTuningServerOptions {
  /**
   * @member {AutomaticTuningOptionModeDesired} [desiredState] Automatic tuning
   * option desired state. Possible values include: 'Off', 'On', 'Default'
   */
  desiredState?: AutomaticTuningOptionModeDesired;
  /**
   * @member {AutomaticTuningOptionModeActual} [actualState] Automatic tuning
   * option actual state. Possible values include: 'Off', 'On'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly actualState?: AutomaticTuningOptionModeActual;
  /**
   * @member {number} [reasonCode] Reason code if desired and actual state are
   * different.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly reasonCode?: number;
  /**
   * @member {AutomaticTuningServerReason} [reasonDesc] Reason description if
   * desired and actual state are different. Possible values include:
   * 'Default', 'Disabled', 'AutoConfigured'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly reasonDesc?: AutomaticTuningServerReason;
}

/**
 * @interface
 * An interface representing ServerAutomaticTuning.
 * Server-level Automatic Tuning.
 *
 * @extends ProxyResource
 */
export interface ServerAutomaticTuning extends ProxyResource {
  /**
   * @member {AutomaticTuningServerMode} [desiredState] Automatic tuning
   * desired state. Possible values include: 'Custom', 'Auto', 'Unspecified'
   */
  desiredState?: AutomaticTuningServerMode;
  /**
   * @member {AutomaticTuningServerMode} [actualState] Automatic tuning actual
   * state. Possible values include: 'Custom', 'Auto', 'Unspecified'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly actualState?: AutomaticTuningServerMode;
  /**
   * @member {{ [propertyName: string]: AutomaticTuningServerOptions }}
   * [options] Automatic tuning options definition.
   */
  options?: { [propertyName: string]: AutomaticTuningServerOptions };
}

/**
 * @interface
 * An interface representing ServerDnsAlias.
 * A server DNS alias.
 *
 * @extends ProxyResource
 */
export interface ServerDnsAlias extends ProxyResource {
  /**
   * @member {string} [azureDnsRecord] The fully qualified DNS record for alias
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly azureDnsRecord?: string;
}

/**
 * @interface
 * An interface representing ServerDnsAliasAcquisition.
 * A server DNS alias acquisition request.
 *
 */
export interface ServerDnsAliasAcquisition {
  /**
   * @member {string} [oldServerDnsAliasId] The id of the server alias that
   * will be acquired to point to this server instead.
   */
  oldServerDnsAliasId?: string;
}

/**
 * @interface
 * An interface representing ServerSecurityAlertPolicy.
 * A server security alert policy.
 *
 * @extends ProxyResource
 */
export interface ServerSecurityAlertPolicy extends ProxyResource {
  /**
   * @member {SecurityAlertPolicyState} state Specifies the state of the
   * policy, whether it is enabled or disabled. Possible values include: 'New',
   * 'Enabled', 'Disabled'
   */
  state: SecurityAlertPolicyState;
  /**
   * @member {string[]} [disabledAlerts] Specifies an array of alerts that are
   * disabled. Allowed values are: Sql_Injection, Sql_Injection_Vulnerability,
   * Access_Anomaly, Data_Exfiltration, Unsafe_Action
   */
  disabledAlerts?: string[];
  /**
   * @member {string[]} [emailAddresses] Specifies an array of e-mail addresses
   * to which the alert is sent.
   */
  emailAddresses?: string[];
  /**
   * @member {boolean} [emailAccountAdmins] Specifies that the alert is sent to
   * the account administrators.
   */
  emailAccountAdmins?: boolean;
  /**
   * @member {string} [storageEndpoint] Specifies the blob storage endpoint
   * (e.g. https://MyAccount.blob.core.windows.net). This blob storage will
   * hold all Threat Detection audit logs.
   */
  storageEndpoint?: string;
  /**
   * @member {string} [storageAccountAccessKey] Specifies the identifier key of
   * the Threat Detection audit storage account.
   */
  storageAccountAccessKey?: string;
  /**
   * @member {number} [retentionDays] Specifies the number of days to keep in
   * the Threat Detection audit logs.
   */
  retentionDays?: number;
}

/**
 * @interface
 * An interface representing RestorePoint.
 * Database restore points.
 *
 * @extends ProxyResource
 */
export interface RestorePoint extends ProxyResource {
  /**
   * @member {string} [location] Resource location.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly location?: string;
  /**
   * @member {RestorePointType} [restorePointType] The type of restore point.
   * Possible values include: 'CONTINUOUS', 'DISCRETE'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly restorePointType?: RestorePointType;
  /**
   * @member {Date} [earliestRestoreDate] The earliest time to which this
   * database can be restored
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly earliestRestoreDate?: Date;
  /**
   * @member {Date} [restorePointCreationDate] The time the backup was taken
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly restorePointCreationDate?: Date;
  /**
   * @member {string} [restorePointLabel] The label of restore point for backup
   * request by user
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly restorePointLabel?: string;
}

/**
 * @interface
 * An interface representing CreateDatabaseRestorePointDefinition.
 * Contains the information necessary to perform a create database restore
 * point operation.
 *
 */
export interface CreateDatabaseRestorePointDefinition {
  /**
   * @member {string} restorePointLabel The restore point label to apply
   */
  restorePointLabel: string;
}

/**
 * @interface
 * An interface representing DatabaseOperation.
 * A database operation.
 *
 * @extends ProxyResource
 */
export interface DatabaseOperation extends ProxyResource {
  /**
   * @member {string} [databaseName] The name of the database the operation is
   * being performed on.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly databaseName?: string;
  /**
   * @member {string} [operation] The name of operation.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly operation?: string;
  /**
   * @member {string} [operationFriendlyName] The friendly name of operation.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly operationFriendlyName?: string;
  /**
   * @member {number} [percentComplete] The percentage of the operation
   * completed.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly percentComplete?: number;
  /**
   * @member {string} [serverName] The name of the server.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly serverName?: string;
  /**
   * @member {Date} [startTime] The operation start time.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly startTime?: Date;
  /**
   * @member {ManagementOperationState} [state] The operation state. Possible
   * values include: 'Pending', 'InProgress', 'Succeeded', 'Failed',
   * 'CancelInProgress', 'Cancelled'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly state?: ManagementOperationState;
  /**
   * @member {number} [errorCode] The operation error code.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly errorCode?: number;
  /**
   * @member {string} [errorDescription] The operation error description.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly errorDescription?: string;
  /**
   * @member {number} [errorSeverity] The operation error severity.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly errorSeverity?: number;
  /**
   * @member {boolean} [isUserError] Whether or not the error is a user error.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly isUserError?: boolean;
  /**
   * @member {Date} [estimatedCompletionTime] The estimated completion time of
   * the operation.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly estimatedCompletionTime?: Date;
  /**
   * @member {string} [description] The operation description.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
  /**
   * @member {boolean} [isCancellable] Whether the operation can be cancelled.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly isCancellable?: boolean;
}

/**
 * @interface
 * An interface representing ElasticPoolOperation.
 * A elastic pool operation.
 *
 * @extends ProxyResource
 */
export interface ElasticPoolOperation extends ProxyResource {
  /**
   * @member {string} [elasticPoolName] The name of the elastic pool the
   * operation is being performed on.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly elasticPoolName?: string;
  /**
   * @member {string} [operation] The name of operation.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly operation?: string;
  /**
   * @member {string} [operationFriendlyName] The friendly name of operation.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly operationFriendlyName?: string;
  /**
   * @member {number} [percentComplete] The percentage of the operation
   * completed.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly percentComplete?: number;
  /**
   * @member {string} [serverName] The name of the server.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly serverName?: string;
  /**
   * @member {Date} [startTime] The operation start time.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly startTime?: Date;
  /**
   * @member {string} [state] The operation state.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly state?: string;
  /**
   * @member {number} [errorCode] The operation error code.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly errorCode?: number;
  /**
   * @member {string} [errorDescription] The operation error description.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly errorDescription?: string;
  /**
   * @member {number} [errorSeverity] The operation error severity.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly errorSeverity?: number;
  /**
   * @member {boolean} [isUserError] Whether or not the error is a user error.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly isUserError?: boolean;
  /**
   * @member {Date} [estimatedCompletionTime] The estimated completion time of
   * the operation.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly estimatedCompletionTime?: Date;
  /**
   * @member {string} [description] The operation description.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
  /**
   * @member {boolean} [isCancellable] Whether the operation can be cancelled.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly isCancellable?: boolean;
}

/**
 * @interface
 * An interface representing MaxSizeCapability.
 * The maximum size capability.
 *
 */
export interface MaxSizeCapability {
  /**
   * @member {number} [limit] The maximum size limit (see 'unit' for the
   * units).
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly limit?: number;
  /**
   * @member {MaxSizeUnit} [unit] The units that the limit is expressed in.
   * Possible values include: 'Megabytes', 'Gigabytes', 'Terabytes',
   * 'Petabytes'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly unit?: MaxSizeUnit;
}

/**
 * @interface
 * An interface representing LogSizeCapability.
 * The log size capability.
 *
 */
export interface LogSizeCapability {
  /**
   * @member {number} [limit] The log size limit (see 'unit' for the units).
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly limit?: number;
  /**
   * @member {LogSizeUnit} [unit] The units that the limit is expressed in.
   * Possible values include: 'Megabytes', 'Gigabytes', 'Terabytes',
   * 'Petabytes', 'Percent'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly unit?: LogSizeUnit;
}

/**
 * @interface
 * An interface representing MaxSizeRangeCapability.
 * The maximum size range capability.
 *
 */
export interface MaxSizeRangeCapability {
  /**
   * @member {MaxSizeCapability} [minValue] Minimum value.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly minValue?: MaxSizeCapability;
  /**
   * @member {MaxSizeCapability} [maxValue] Maximum value.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly maxValue?: MaxSizeCapability;
  /**
   * @member {MaxSizeCapability} [scaleSize] Scale/step size for discrete
   * values between the minimum value and the maximum value.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly scaleSize?: MaxSizeCapability;
  /**
   * @member {LogSizeCapability} [logSize] Size of transaction log.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly logSize?: LogSizeCapability;
  /**
   * @member {CapabilityStatus} [status] The status of the capability. Possible
   * values include: 'Visible', 'Available', 'Default', 'Disabled'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly status?: CapabilityStatus;
  /**
   * @member {string} [reason] The reason for the capability not being
   * available.
   */
  reason?: string;
}

/**
 * @interface
 * An interface representing PerformanceLevelCapability.
 * The performance level capability.
 *
 */
export interface PerformanceLevelCapability {
  /**
   * @member {number} [value] Performance level value.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly value?: number;
  /**
   * @member {PerformanceLevelUnit} [unit] Unit type used to measure
   * performance level. Possible values include: 'DTU', 'VCores'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly unit?: PerformanceLevelUnit;
}

/**
 * @interface
 * An interface representing LicenseTypeCapability.
 * The license type capability
 *
 */
export interface LicenseTypeCapability {
  /**
   * @member {string} [name] License type identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {CapabilityStatus} [status] The status of the capability. Possible
   * values include: 'Visible', 'Available', 'Default', 'Disabled'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly status?: CapabilityStatus;
  /**
   * @member {string} [reason] The reason for the capability not being
   * available.
   */
  reason?: string;
}

/**
 * @interface
 * An interface representing ServiceObjectiveCapability.
 * The service objectives capability.
 *
 */
export interface ServiceObjectiveCapability {
  /**
   * @member {string} [id] The unique ID of the service objective.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [name] The service objective name.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {MaxSizeRangeCapability[]} [supportedMaxSizes] The list of
   * supported maximum database sizes.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly supportedMaxSizes?: MaxSizeRangeCapability[];
  /**
   * @member {PerformanceLevelCapability} [performanceLevel] The performance
   * level.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly performanceLevel?: PerformanceLevelCapability;
  /**
   * @member {Sku} [sku] The sku.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly sku?: Sku;
  /**
   * @member {LicenseTypeCapability[]} [supportedLicenseTypes] List of
   * supported license types.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly supportedLicenseTypes?: LicenseTypeCapability[];
  /**
   * @member {MaxSizeCapability} [includedMaxSize] The included (free) max
   * size.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly includedMaxSize?: MaxSizeCapability;
  /**
   * @member {CapabilityStatus} [status] The status of the capability. Possible
   * values include: 'Visible', 'Available', 'Default', 'Disabled'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly status?: CapabilityStatus;
  /**
   * @member {string} [reason] The reason for the capability not being
   * available.
   */
  reason?: string;
}

/**
 * @interface
 * An interface representing EditionCapability.
 * The edition capability.
 *
 */
export interface EditionCapability {
  /**
   * @member {string} [name] The database edition name.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {ServiceObjectiveCapability[]} [supportedServiceLevelObjectives]
   * The list of supported service objectives for the edition.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly supportedServiceLevelObjectives?: ServiceObjectiveCapability[];
  /**
   * @member {boolean} [zoneRedundant] Whether or not zone redundancy is
   * supported for the edition.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly zoneRedundant?: boolean;
  /**
   * @member {CapabilityStatus} [status] The status of the capability. Possible
   * values include: 'Visible', 'Available', 'Default', 'Disabled'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly status?: CapabilityStatus;
  /**
   * @member {string} [reason] The reason for the capability not being
   * available.
   */
  reason?: string;
}

/**
 * @interface
 * An interface representing ElasticPoolPerDatabaseMinPerformanceLevelCapability.
 * The minimum per-database performance level capability.
 *
 */
export interface ElasticPoolPerDatabaseMinPerformanceLevelCapability {
  /**
   * @member {number} [limit] The minimum performance level per database.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly limit?: number;
  /**
   * @member {PerformanceLevelUnit} [unit] Unit type used to measure
   * performance level. Possible values include: 'DTU', 'VCores'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly unit?: PerformanceLevelUnit;
  /**
   * @member {CapabilityStatus} [status] The status of the capability. Possible
   * values include: 'Visible', 'Available', 'Default', 'Disabled'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly status?: CapabilityStatus;
  /**
   * @member {string} [reason] The reason for the capability not being
   * available.
   */
  reason?: string;
}

/**
 * @interface
 * An interface representing ElasticPoolPerDatabaseMaxPerformanceLevelCapability.
 * The max per-database performance level capability.
 *
 */
export interface ElasticPoolPerDatabaseMaxPerformanceLevelCapability {
  /**
   * @member {number} [limit] The maximum performance level per database.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly limit?: number;
  /**
   * @member {PerformanceLevelUnit} [unit] Unit type used to measure
   * performance level. Possible values include: 'DTU', 'VCores'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly unit?: PerformanceLevelUnit;
  /**
   * @member {ElasticPoolPerDatabaseMinPerformanceLevelCapability[]}
   * [supportedPerDatabaseMinPerformanceLevels] The list of supported min
   * database performance levels.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly supportedPerDatabaseMinPerformanceLevels?: ElasticPoolPerDatabaseMinPerformanceLevelCapability[];
  /**
   * @member {CapabilityStatus} [status] The status of the capability. Possible
   * values include: 'Visible', 'Available', 'Default', 'Disabled'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly status?: CapabilityStatus;
  /**
   * @member {string} [reason] The reason for the capability not being
   * available.
   */
  reason?: string;
}

/**
 * @interface
 * An interface representing ElasticPoolPerformanceLevelCapability.
 * The Elastic Pool performance level capability.
 *
 */
export interface ElasticPoolPerformanceLevelCapability {
  /**
   * @member {PerformanceLevelCapability} [performanceLevel] The performance
   * level for the pool.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly performanceLevel?: PerformanceLevelCapability;
  /**
   * @member {Sku} [sku] The sku.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly sku?: Sku;
  /**
   * @member {LicenseTypeCapability[]} [supportedLicenseTypes] List of
   * supported license types.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly supportedLicenseTypes?: LicenseTypeCapability[];
  /**
   * @member {number} [maxDatabaseCount] The maximum number of databases
   * supported.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly maxDatabaseCount?: number;
  /**
   * @member {MaxSizeCapability} [includedMaxSize] The included (free) max size
   * for this performance level.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly includedMaxSize?: MaxSizeCapability;
  /**
   * @member {MaxSizeRangeCapability[]} [supportedMaxSizes] The list of
   * supported max sizes.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly supportedMaxSizes?: MaxSizeRangeCapability[];
  /**
   * @member {MaxSizeRangeCapability[]} [supportedPerDatabaseMaxSizes] The list
   * of supported per database max sizes.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly supportedPerDatabaseMaxSizes?: MaxSizeRangeCapability[];
  /**
   * @member {ElasticPoolPerDatabaseMaxPerformanceLevelCapability[]}
   * [supportedPerDatabaseMaxPerformanceLevels] The list of supported per
   * database max performance levels.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly supportedPerDatabaseMaxPerformanceLevels?: ElasticPoolPerDatabaseMaxPerformanceLevelCapability[];
  /**
   * @member {CapabilityStatus} [status] The status of the capability. Possible
   * values include: 'Visible', 'Available', 'Default', 'Disabled'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly status?: CapabilityStatus;
  /**
   * @member {string} [reason] The reason for the capability not being
   * available.
   */
  reason?: string;
}

/**
 * @interface
 * An interface representing ElasticPoolEditionCapability.
 * The elastic pool edition capability.
 *
 */
export interface ElasticPoolEditionCapability {
  /**
   * @member {string} [name] The elastic pool edition name.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {ElasticPoolPerformanceLevelCapability[]}
   * [supportedElasticPoolPerformanceLevels] The list of supported elastic pool
   * DTU levels for the edition.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly supportedElasticPoolPerformanceLevels?: ElasticPoolPerformanceLevelCapability[];
  /**
   * @member {boolean} [zoneRedundant] Whether or not zone redundancy is
   * supported for the edition.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly zoneRedundant?: boolean;
  /**
   * @member {CapabilityStatus} [status] The status of the capability. Possible
   * values include: 'Visible', 'Available', 'Default', 'Disabled'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly status?: CapabilityStatus;
  /**
   * @member {string} [reason] The reason for the capability not being
   * available.
   */
  reason?: string;
}

/**
 * @interface
 * An interface representing ServerVersionCapability.
 * The server capability
 *
 */
export interface ServerVersionCapability {
  /**
   * @member {string} [name] The server version name.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {EditionCapability[]} [supportedEditions] The list of supported
   * database editions.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly supportedEditions?: EditionCapability[];
  /**
   * @member {ElasticPoolEditionCapability[]} [supportedElasticPoolEditions]
   * The list of supported elastic pool editions.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly supportedElasticPoolEditions?: ElasticPoolEditionCapability[];
  /**
   * @member {CapabilityStatus} [status] The status of the capability. Possible
   * values include: 'Visible', 'Available', 'Default', 'Disabled'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly status?: CapabilityStatus;
  /**
   * @member {string} [reason] The reason for the capability not being
   * available.
   */
  reason?: string;
}

/**
 * @interface
 * An interface representing ManagedInstanceVcoresCapability.
 * The managed instance virtual cores capability.
 *
 */
export interface ManagedInstanceVcoresCapability {
  /**
   * @member {string} [name] The virtual cores identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {number} [value] The virtual cores value.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly value?: number;
  /**
   * @member {CapabilityStatus} [status] The status of the capability. Possible
   * values include: 'Visible', 'Available', 'Default', 'Disabled'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly status?: CapabilityStatus;
  /**
   * @member {string} [reason] The reason for the capability not being
   * available.
   */
  reason?: string;
}

/**
 * @interface
 * An interface representing ManagedInstanceFamilyCapability.
 * The managed server family capability.
 *
 */
export interface ManagedInstanceFamilyCapability {
  /**
   * @member {string} [name] Family name.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [sku] SKU name.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly sku?: string;
  /**
   * @member {LicenseTypeCapability[]} [supportedLicenseTypes] List of
   * supported license types.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly supportedLicenseTypes?: LicenseTypeCapability[];
  /**
   * @member {ManagedInstanceVcoresCapability[]} [supportedVcoresValues] List
   * of supported virtual cores values.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly supportedVcoresValues?: ManagedInstanceVcoresCapability[];
  /**
   * @member {MaxSizeCapability} [includedMaxSize] Included size.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly includedMaxSize?: MaxSizeCapability;
  /**
   * @member {MaxSizeRangeCapability[]} [supportedStorageSizes] Storage size
   * ranges.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly supportedStorageSizes?: MaxSizeRangeCapability[];
  /**
   * @member {CapabilityStatus} [status] The status of the capability. Possible
   * values include: 'Visible', 'Available', 'Default', 'Disabled'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly status?: CapabilityStatus;
  /**
   * @member {string} [reason] The reason for the capability not being
   * available.
   */
  reason?: string;
}

/**
 * @interface
 * An interface representing ManagedInstanceEditionCapability.
 * The managed server capability
 *
 */
export interface ManagedInstanceEditionCapability {
  /**
   * @member {string} [name] The managed server version name.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {ManagedInstanceFamilyCapability[]} [supportedFamilies] The
   * supported families.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly supportedFamilies?: ManagedInstanceFamilyCapability[];
  /**
   * @member {CapabilityStatus} [status] The status of the capability. Possible
   * values include: 'Visible', 'Available', 'Default', 'Disabled'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly status?: CapabilityStatus;
  /**
   * @member {string} [reason] The reason for the capability not being
   * available.
   */
  reason?: string;
}

/**
 * @interface
 * An interface representing ManagedInstanceVersionCapability.
 * The managed instance capability
 *
 */
export interface ManagedInstanceVersionCapability {
  /**
   * @member {string} [name] The server version name.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {ManagedInstanceEditionCapability[]} [supportedEditions] The list
   * of supported managed instance editions.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly supportedEditions?: ManagedInstanceEditionCapability[];
  /**
   * @member {CapabilityStatus} [status] The status of the capability. Possible
   * values include: 'Visible', 'Available', 'Default', 'Disabled'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly status?: CapabilityStatus;
  /**
   * @member {string} [reason] The reason for the capability not being
   * available.
   */
  reason?: string;
}

/**
 * @interface
 * An interface representing LocationCapabilities.
 * The location capability.
 *
 */
export interface LocationCapabilities {
  /**
   * @member {string} [name] The location name.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {ServerVersionCapability[]} [supportedServerVersions] The list of
   * supported server versions.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly supportedServerVersions?: ServerVersionCapability[];
  /**
   * @member {ManagedInstanceVersionCapability[]}
   * [supportedManagedInstanceVersions] The list of supported managed instance
   * versions.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly supportedManagedInstanceVersions?: ManagedInstanceVersionCapability[];
  /**
   * @member {CapabilityStatus} [status] The status of the capability. Possible
   * values include: 'Visible', 'Available', 'Default', 'Disabled'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly status?: CapabilityStatus;
  /**
   * @member {string} [reason] The reason for the capability not being
   * available.
   */
  reason?: string;
}

/**
 * @interface
 * An interface representing Database.
 * A database resource.
 *
 * @extends TrackedResource
 */
export interface Database extends TrackedResource {
  /**
   * @member {Sku} [sku] The name and tier of the SKU.
   */
  sku?: Sku;
  /**
   * @member {string} [kind] Kind of database. This is metadata used for the
   * Azure portal experience.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly kind?: string;
  /**
   * @member {string} [managedBy] Resource that manages the database.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly managedBy?: string;
  /**
   * @member {CreateMode} [createMode] Specifies the mode of database creation.
   *
   * Default: regular database creation.
   *
   * Copy: creates a database as a copy of an existing database.
   * sourceDatabaseId must be specified as the resource ID of the source
   * database.
   *
   * Secondary: creates a database as a secondary replica of an existing
   * database. sourceDatabaseId must be specified as the resource ID of the
   * existing primary database.
   *
   * PointInTimeRestore: Creates a database by restoring a point in time backup
   * of an existing database. sourceDatabaseId must be specified as the
   * resource ID of the existing database, and restorePointInTime must be
   * specified.
   *
   * Recovery: Creates a database by restoring a geo-replicated backup.
   * sourceDatabaseId must be specified as the recoverable database resource ID
   * to restore.
   *
   * Restore: Creates a database by restoring a backup of a deleted database.
   * sourceDatabaseId must be specified. If sourceDatabaseId is the database's
   * original resource ID, then sourceDatabaseDeletionDate must be specified.
   * Otherwise sourceDatabaseId must be the restorable dropped database
   * resource ID and sourceDatabaseDeletionDate is ignored. restorePointInTime
   * may also be specified to restore from an earlier point in time.
   *
   * RestoreLongTermRetentionBackup: Creates a database by restoring from a
   * long term retention vault. recoveryServicesRecoveryPointResourceId must be
   * specified as the recovery point resource ID.
   *
   * Copy, Secondary, and RestoreLongTermRetentionBackup are not supported for
   * DataWarehouse edition. Possible values include: 'Default', 'Copy',
   * 'Secondary', 'PointInTimeRestore', 'Restore', 'Recovery',
   * 'RestoreExternalBackup', 'RestoreExternalBackupSecondary',
   * 'RestoreLongTermRetentionBackup', 'OnlineSecondary'
   */
  createMode?: CreateMode;
  /**
   * @member {string} [collation] The collation of the database.
   */
  collation?: string;
  /**
   * @member {number} [maxSizeBytes] The max size of the database expressed in
   * bytes.
   */
  maxSizeBytes?: number;
  /**
   * @member {SampleName} [sampleName] The name of the sample schema to apply
   * when creating this database. Possible values include: 'AdventureWorksLT',
   * 'WideWorldImportersStd', 'WideWorldImportersFull'
   */
  sampleName?: SampleName;
  /**
   * @member {string} [elasticPoolId] The resource identifier of the elastic
   * pool containing this database.
   */
  elasticPoolId?: string;
  /**
   * @member {string} [sourceDatabaseId] The resource identifier of the source
   * database associated with create operation of this database.
   */
  sourceDatabaseId?: string;
  /**
   * @member {DatabaseStatus} [status] The status of the database. Possible
   * values include: 'Online', 'Restoring', 'RecoveryPending', 'Recovering',
   * 'Suspect', 'Offline', 'Standby', 'Shutdown', 'EmergencyMode',
   * 'AutoClosed', 'Copying', 'Creating', 'Inaccessible', 'OfflineSecondary',
   * 'Pausing', 'Paused', 'Resuming', 'Scaling'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly status?: DatabaseStatus;
  /**
   * @member {string} [databaseId] The ID of the database.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly databaseId?: string;
  /**
   * @member {Date} [creationDate] The creation date of the database (ISO8601
   * format).
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly creationDate?: Date;
  /**
   * @member {string} [currentServiceObjectiveName] The current service level
   * objective name of the database.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly currentServiceObjectiveName?: string;
  /**
   * @member {string} [requestedServiceObjectiveName] The requested service
   * level objective name of the database.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly requestedServiceObjectiveName?: string;
  /**
   * @member {string} [defaultSecondaryLocation] The default secondary region
   * for this database.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly defaultSecondaryLocation?: string;
  /**
   * @member {string} [failoverGroupId] Failover Group resource identifier that
   * this database belongs to.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly failoverGroupId?: string;
  /**
   * @member {Date} [restorePointInTime] Specifies the point in time (ISO8601
   * format) of the source database that will be restored to create the new
   * database.
   */
  restorePointInTime?: Date;
  /**
   * @member {Date} [sourceDatabaseDeletionDate] Specifies the time that the
   * database was deleted.
   */
  sourceDatabaseDeletionDate?: Date;
  /**
   * @member {string} [recoveryServicesRecoveryPointId] The resource identifier
   * of the recovery point associated with create operation of this database.
   */
  recoveryServicesRecoveryPointId?: string;
  /**
   * @member {string} [longTermRetentionBackupResourceId] The resource
   * identifier of the long term retention backup associated with create
   * operation of this database.
   */
  longTermRetentionBackupResourceId?: string;
  /**
   * @member {string} [recoverableDatabaseId] The resource identifier of the
   * recoverable database associated with create operation of this database.
   */
  recoverableDatabaseId?: string;
  /**
   * @member {string} [restorableDroppedDatabaseId] The resource identifier of
   * the restorable dropped database associated with create operation of this
   * database.
   */
  restorableDroppedDatabaseId?: string;
  /**
   * @member {CatalogCollationType} [catalogCollation] Collation of the
   * metadata catalog. Possible values include: 'DATABASE_DEFAULT',
   * 'SQL_Latin1_General_CP1_CI_AS'
   */
  catalogCollation?: CatalogCollationType;
  /**
   * @member {boolean} [zoneRedundant] Whether or not this database is zone
   * redundant, which means the replicas of this database will be spread across
   * multiple availability zones.
   */
  zoneRedundant?: boolean;
  /**
   * @member {DatabaseLicenseType} [licenseType] The license type to apply for
   * this database. Possible values include: 'LicenseIncluded', 'BasePrice'
   */
  licenseType?: DatabaseLicenseType;
  /**
   * @member {number} [maxLogSizeBytes] The max log size for this database.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly maxLogSizeBytes?: number;
  /**
   * @member {Date} [earliestRestoreDate] This records the earliest start date
   * and time that restore is available for this database (ISO8601 format).
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly earliestRestoreDate?: Date;
  /**
   * @member {DatabaseReadScale} [readScale] The state of read-only routing. If
   * enabled, connections that have application intent set to readonly in their
   * connection string may be routed to a readonly secondary replica in the
   * same region. Possible values include: 'Enabled', 'Disabled'
   */
  readScale?: DatabaseReadScale;
  /**
   * @member {Sku} [currentSku] The name and tier of the SKU.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly currentSku?: Sku;
}

/**
 * @interface
 * An interface representing DatabaseUpdate.
 * A database resource.
 *
 */
export interface DatabaseUpdate {
  /**
   * @member {Sku} [sku] The name and tier of the SKU.
   */
  sku?: Sku;
  /**
   * @member {CreateMode} [createMode] Specifies the mode of database creation.
   *
   * Default: regular database creation.
   *
   * Copy: creates a database as a copy of an existing database.
   * sourceDatabaseId must be specified as the resource ID of the source
   * database.
   *
   * Secondary: creates a database as a secondary replica of an existing
   * database. sourceDatabaseId must be specified as the resource ID of the
   * existing primary database.
   *
   * PointInTimeRestore: Creates a database by restoring a point in time backup
   * of an existing database. sourceDatabaseId must be specified as the
   * resource ID of the existing database, and restorePointInTime must be
   * specified.
   *
   * Recovery: Creates a database by restoring a geo-replicated backup.
   * sourceDatabaseId must be specified as the recoverable database resource ID
   * to restore.
   *
   * Restore: Creates a database by restoring a backup of a deleted database.
   * sourceDatabaseId must be specified. If sourceDatabaseId is the database's
   * original resource ID, then sourceDatabaseDeletionDate must be specified.
   * Otherwise sourceDatabaseId must be the restorable dropped database
   * resource ID and sourceDatabaseDeletionDate is ignored. restorePointInTime
   * may also be specified to restore from an earlier point in time.
   *
   * RestoreLongTermRetentionBackup: Creates a database by restoring from a
   * long term retention vault. recoveryServicesRecoveryPointResourceId must be
   * specified as the recovery point resource ID.
   *
   * Copy, Secondary, and RestoreLongTermRetentionBackup are not supported for
   * DataWarehouse edition. Possible values include: 'Default', 'Copy',
   * 'Secondary', 'PointInTimeRestore', 'Restore', 'Recovery',
   * 'RestoreExternalBackup', 'RestoreExternalBackupSecondary',
   * 'RestoreLongTermRetentionBackup', 'OnlineSecondary'
   */
  createMode?: CreateMode;
  /**
   * @member {string} [collation] The collation of the database.
   */
  collation?: string;
  /**
   * @member {number} [maxSizeBytes] The max size of the database expressed in
   * bytes.
   */
  maxSizeBytes?: number;
  /**
   * @member {SampleName} [sampleName] The name of the sample schema to apply
   * when creating this database. Possible values include: 'AdventureWorksLT',
   * 'WideWorldImportersStd', 'WideWorldImportersFull'
   */
  sampleName?: SampleName;
  /**
   * @member {string} [elasticPoolId] The resource identifier of the elastic
   * pool containing this database.
   */
  elasticPoolId?: string;
  /**
   * @member {string} [sourceDatabaseId] The resource identifier of the source
   * database associated with create operation of this database.
   */
  sourceDatabaseId?: string;
  /**
   * @member {DatabaseStatus} [status] The status of the database. Possible
   * values include: 'Online', 'Restoring', 'RecoveryPending', 'Recovering',
   * 'Suspect', 'Offline', 'Standby', 'Shutdown', 'EmergencyMode',
   * 'AutoClosed', 'Copying', 'Creating', 'Inaccessible', 'OfflineSecondary',
   * 'Pausing', 'Paused', 'Resuming', 'Scaling'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly status?: DatabaseStatus;
  /**
   * @member {string} [databaseId] The ID of the database.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly databaseId?: string;
  /**
   * @member {Date} [creationDate] The creation date of the database (ISO8601
   * format).
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly creationDate?: Date;
  /**
   * @member {string} [currentServiceObjectiveName] The current service level
   * objective name of the database.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly currentServiceObjectiveName?: string;
  /**
   * @member {string} [requestedServiceObjectiveName] The requested service
   * level objective name of the database.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly requestedServiceObjectiveName?: string;
  /**
   * @member {string} [defaultSecondaryLocation] The default secondary region
   * for this database.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly defaultSecondaryLocation?: string;
  /**
   * @member {string} [failoverGroupId] Failover Group resource identifier that
   * this database belongs to.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly failoverGroupId?: string;
  /**
   * @member {Date} [restorePointInTime] Specifies the point in time (ISO8601
   * format) of the source database that will be restored to create the new
   * database.
   */
  restorePointInTime?: Date;
  /**
   * @member {Date} [sourceDatabaseDeletionDate] Specifies the time that the
   * database was deleted.
   */
  sourceDatabaseDeletionDate?: Date;
  /**
   * @member {string} [recoveryServicesRecoveryPointId] The resource identifier
   * of the recovery point associated with create operation of this database.
   */
  recoveryServicesRecoveryPointId?: string;
  /**
   * @member {string} [longTermRetentionBackupResourceId] The resource
   * identifier of the long term retention backup associated with create
   * operation of this database.
   */
  longTermRetentionBackupResourceId?: string;
  /**
   * @member {string} [recoverableDatabaseId] The resource identifier of the
   * recoverable database associated with create operation of this database.
   */
  recoverableDatabaseId?: string;
  /**
   * @member {string} [restorableDroppedDatabaseId] The resource identifier of
   * the restorable dropped database associated with create operation of this
   * database.
   */
  restorableDroppedDatabaseId?: string;
  /**
   * @member {CatalogCollationType} [catalogCollation] Collation of the
   * metadata catalog. Possible values include: 'DATABASE_DEFAULT',
   * 'SQL_Latin1_General_CP1_CI_AS'
   */
  catalogCollation?: CatalogCollationType;
  /**
   * @member {boolean} [zoneRedundant] Whether or not this database is zone
   * redundant, which means the replicas of this database will be spread across
   * multiple availability zones.
   */
  zoneRedundant?: boolean;
  /**
   * @member {DatabaseLicenseType} [licenseType] The license type to apply for
   * this database. Possible values include: 'LicenseIncluded', 'BasePrice'
   */
  licenseType?: DatabaseLicenseType;
  /**
   * @member {number} [maxLogSizeBytes] The max log size for this database.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly maxLogSizeBytes?: number;
  /**
   * @member {Date} [earliestRestoreDate] This records the earliest start date
   * and time that restore is available for this database (ISO8601 format).
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly earliestRestoreDate?: Date;
  /**
   * @member {DatabaseReadScale} [readScale] The state of read-only routing. If
   * enabled, connections that have application intent set to readonly in their
   * connection string may be routed to a readonly secondary replica in the
   * same region. Possible values include: 'Enabled', 'Disabled'
   */
  readScale?: DatabaseReadScale;
  /**
   * @member {Sku} [currentSku] The name and tier of the SKU.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly currentSku?: Sku;
  /**
   * @member {{ [propertyName: string]: string }} [tags] Resource tags.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * @interface
 * An interface representing ResourceMoveDefinition.
 * Contains the information necessary to perform a resource move (rename).
 *
 */
export interface ResourceMoveDefinition {
  /**
   * @member {string} id The target ID for the resource
   */
  id: string;
}

/**
 * @interface
 * An interface representing ElasticPoolPerDatabaseSettings.
 * Per database settings of an elastic pool.
 *
 */
export interface ElasticPoolPerDatabaseSettings {
  /**
   * @member {number} [minCapacity] The minimum capacity all databases are
   * guaranteed.
   */
  minCapacity?: number;
  /**
   * @member {number} [maxCapacity] The maximum capacity any one database can
   * consume.
   */
  maxCapacity?: number;
}

/**
 * @interface
 * An interface representing ElasticPool.
 * An elastic pool.
 *
 * @extends TrackedResource
 */
export interface ElasticPool extends TrackedResource {
  /**
   * @member {Sku} [sku]
   */
  sku?: Sku;
  /**
   * @member {string} [kind] Kind of elastic pool. This is metadata used for
   * the Azure portal experience.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly kind?: string;
  /**
   * @member {ElasticPoolState} [state] The state of the elastic pool. Possible
   * values include: 'Creating', 'Ready', 'Disabled'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly state?: ElasticPoolState;
  /**
   * @member {Date} [creationDate] The creation date of the elastic pool
   * (ISO8601 format).
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly creationDate?: Date;
  /**
   * @member {number} [maxSizeBytes] The storage limit for the database elastic
   * pool in bytes.
   */
  maxSizeBytes?: number;
  /**
   * @member {ElasticPoolPerDatabaseSettings} [perDatabaseSettings] The per
   * database settings for the elastic pool.
   */
  perDatabaseSettings?: ElasticPoolPerDatabaseSettings;
  /**
   * @member {boolean} [zoneRedundant] Whether or not this elastic pool is zone
   * redundant, which means the replicas of this elastic pool will be spread
   * across multiple availability zones.
   */
  zoneRedundant?: boolean;
  /**
   * @member {ElasticPoolLicenseType} [licenseType] The license type to apply
   * for this elastic pool. Possible values include: 'LicenseIncluded',
   * 'BasePrice'
   */
  licenseType?: ElasticPoolLicenseType;
}

/**
 * @interface
 * An interface representing ElasticPoolUpdate.
 * An elastic pool update.
 *
 */
export interface ElasticPoolUpdate {
  /**
   * @member {Sku} [sku]
   */
  sku?: Sku;
  /**
   * @member {number} [maxSizeBytes] The storage limit for the database elastic
   * pool in bytes.
   */
  maxSizeBytes?: number;
  /**
   * @member {ElasticPoolPerDatabaseSettings} [perDatabaseSettings] The per
   * database settings for the elastic pool.
   */
  perDatabaseSettings?: ElasticPoolPerDatabaseSettings;
  /**
   * @member {boolean} [zoneRedundant] Whether or not this elastic pool is zone
   * redundant, which means the replicas of this elastic pool will be spread
   * across multiple availability zones.
   */
  zoneRedundant?: boolean;
  /**
   * @member {ElasticPoolLicenseType} [licenseType] The license type to apply
   * for this elastic pool. Possible values include: 'LicenseIncluded',
   * 'BasePrice'
   */
  licenseType?: ElasticPoolLicenseType;
  /**
   * @member {{ [propertyName: string]: string }} [tags] Resource tags.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * @interface
 * An interface representing VulnerabilityAssessmentScanError.
 * Properties of a vulnerability assessment scan error.
 *
 */
export interface VulnerabilityAssessmentScanError {
  /**
   * @member {string} [code] The error code.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly code?: string;
  /**
   * @member {string} [message] The error message.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly message?: string;
}

/**
 * @interface
 * An interface representing VulnerabilityAssessmentScanRecord.
 * A vulnerability assessment scan record.
 *
 * @extends ProxyResource
 */
export interface VulnerabilityAssessmentScanRecord extends ProxyResource {
  /**
   * @member {string} [scanId] The scan ID.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly scanId?: string;
  /**
   * @member {VulnerabilityAssessmentScanTriggerType} [triggerType] The scan
   * trigger type. Possible values include: 'OnDemand', 'Recurring'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly triggerType?: VulnerabilityAssessmentScanTriggerType;
  /**
   * @member {VulnerabilityAssessmentScanState} [state] The scan status.
   * Possible values include: 'Passed', 'Failed', 'FailedToRun', 'InProgress'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly state?: VulnerabilityAssessmentScanState;
  /**
   * @member {Date} [startTime] The scan start time (UTC).
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly startTime?: Date;
  /**
   * @member {Date} [endTime] The scan end time (UTC).
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly endTime?: Date;
  /**
   * @member {VulnerabilityAssessmentScanError[]} [errors] The scan errors.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly errors?: VulnerabilityAssessmentScanError[];
  /**
   * @member {string} [storageContainerPath] The scan results storage container
   * path.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly storageContainerPath?: string;
  /**
   * @member {number} [numberOfFailedSecurityChecks] The number of failed
   * security checks.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly numberOfFailedSecurityChecks?: number;
}

/**
 * @interface
 * An interface representing DatabaseVulnerabilityAssessmentScansExport.
 * A database Vulnerability Assessment scan export resource.
 *
 * @extends ProxyResource
 */
export interface DatabaseVulnerabilityAssessmentScansExport extends ProxyResource {
  /**
   * @member {string} [exportedReportLocation] Location of the exported report
   * (e.g.
   * https://myStorage.blob.core.windows.net/VaScans/scans/serverName/databaseName/scan_scanId.xlsx).
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly exportedReportLocation?: string;
}

/**
 * @interface
 * An interface representing InstanceFailoverGroupReadWriteEndpoint.
 * Read-write endpoint of the failover group instance.
 *
 */
export interface InstanceFailoverGroupReadWriteEndpoint {
  /**
   * @member {ReadWriteEndpointFailoverPolicy} failoverPolicy Failover policy
   * of the read-write endpoint for the failover group. If failoverPolicy is
   * Automatic then failoverWithDataLossGracePeriodMinutes is required.
   * Possible values include: 'Manual', 'Automatic'
   */
  failoverPolicy: ReadWriteEndpointFailoverPolicy;
  /**
   * @member {number} [failoverWithDataLossGracePeriodMinutes] Grace period
   * before failover with data loss is attempted for the read-write endpoint.
   * If failoverPolicy is Automatic then failoverWithDataLossGracePeriodMinutes
   * is required.
   */
  failoverWithDataLossGracePeriodMinutes?: number;
}

/**
 * @interface
 * An interface representing InstanceFailoverGroupReadOnlyEndpoint.
 * Read-only endpoint of the failover group instance.
 *
 */
export interface InstanceFailoverGroupReadOnlyEndpoint {
  /**
   * @member {ReadOnlyEndpointFailoverPolicy} [failoverPolicy] Failover policy
   * of the read-only endpoint for the failover group. Possible values include:
   * 'Disabled', 'Enabled'
   */
  failoverPolicy?: ReadOnlyEndpointFailoverPolicy;
}

/**
 * @interface
 * An interface representing PartnerRegionInfo.
 * Partner region information for the failover group.
 *
 */
export interface PartnerRegionInfo {
  /**
   * @member {string} [location] Geo location of the partner managed instances.
   */
  location?: string;
  /**
   * @member {InstanceFailoverGroupReplicationRole} [replicationRole]
   * Replication role of the partner managed instances. Possible values
   * include: 'Primary', 'Secondary'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly replicationRole?: InstanceFailoverGroupReplicationRole;
}

/**
 * @interface
 * An interface representing ManagedInstancePairInfo.
 * Pairs of Managed Instances in the failover group.
 *
 */
export interface ManagedInstancePairInfo {
  /**
   * @member {string} [primaryManagedInstanceId] Id of Primary Managed Instance
   * in pair.
   */
  primaryManagedInstanceId?: string;
  /**
   * @member {string} [partnerManagedInstanceId] Id of Partner Managed Instance
   * in pair.
   */
  partnerManagedInstanceId?: string;
}

/**
 * @interface
 * An interface representing InstanceFailoverGroup.
 * An instance failover group.
 *
 * @extends ProxyResource
 */
export interface InstanceFailoverGroup extends ProxyResource {
  /**
   * @member {InstanceFailoverGroupReadWriteEndpoint} readWriteEndpoint
   * Read-write endpoint of the failover group instance.
   */
  readWriteEndpoint: InstanceFailoverGroupReadWriteEndpoint;
  /**
   * @member {InstanceFailoverGroupReadOnlyEndpoint} [readOnlyEndpoint]
   * Read-only endpoint of the failover group instance.
   */
  readOnlyEndpoint?: InstanceFailoverGroupReadOnlyEndpoint;
  /**
   * @member {InstanceFailoverGroupReplicationRole} [replicationRole] Local
   * replication role of the failover group instance. Possible values include:
   * 'Primary', 'Secondary'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly replicationRole?: InstanceFailoverGroupReplicationRole;
  /**
   * @member {string} [replicationState] Replication state of the failover
   * group instance.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly replicationState?: string;
  /**
   * @member {PartnerRegionInfo[]} partnerRegions Partner region information
   * for the failover group.
   */
  partnerRegions: PartnerRegionInfo[];
  /**
   * @member {ManagedInstancePairInfo[]} managedInstancePairs List of managed
   * instance pairs in the failover group.
   */
  managedInstancePairs: ManagedInstancePairInfo[];
}

/**
 * @interface
 * An interface representing BackupShortTermRetentionPolicy.
 * A short term retention policy.
 *
 * @extends ProxyResource
 */
export interface BackupShortTermRetentionPolicy extends ProxyResource {
  /**
   * @member {number} [retentionDays] The backup retention period in days. This
   * is how many days Point-in-Time Restore will be supported.
   */
  retentionDays?: number;
}

/**
 * @interface
 * An interface representing TdeCertificate.
 * A TDE certificate that can be uploaded into a server.
 *
 * @extends ProxyResource
 */
export interface TdeCertificate extends ProxyResource {
  /**
   * @member {string} privateBlob The base64 encoded certificate private blob.
   */
  privateBlob: string;
  /**
   * @member {string} [certPassword] The certificate password.
   */
  certPassword?: string;
}

/**
 * @interface
 * An interface representing ManagedInstanceKey.
 * A managed instance key.
 *
 * @extends ProxyResource
 */
export interface ManagedInstanceKey extends ProxyResource {
  /**
   * @member {string} [kind] Kind of encryption protector. This is metadata
   * used for the Azure portal experience.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly kind?: string;
  /**
   * @member {ServerKeyType} serverKeyType The key type like 'ServiceManaged',
   * 'AzureKeyVault'. Possible values include: 'ServiceManaged',
   * 'AzureKeyVault'
   */
  serverKeyType: ServerKeyType;
  /**
   * @member {string} [uri] The URI of the key. If the ServerKeyType is
   * AzureKeyVault, then the URI is required.
   */
  uri?: string;
  /**
   * @member {string} [thumbprint] Thumbprint of the key.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly thumbprint?: string;
  /**
   * @member {Date} [creationDate] The key creation date.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly creationDate?: Date;
}

/**
 * @interface
 * An interface representing ManagedInstanceEncryptionProtector.
 * The managed instance encryption protector.
 *
 * @extends ProxyResource
 */
export interface ManagedInstanceEncryptionProtector extends ProxyResource {
  /**
   * @member {string} [kind] Kind of encryption protector. This is metadata
   * used for the Azure portal experience.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly kind?: string;
  /**
   * @member {string} [serverKeyName] The name of the managed instance key.
   */
  serverKeyName?: string;
  /**
   * @member {ServerKeyType} serverKeyType The encryption protector type like
   * 'ServiceManaged', 'AzureKeyVault'. Possible values include:
   * 'ServiceManaged', 'AzureKeyVault'
   */
  serverKeyType: ServerKeyType;
  /**
   * @member {string} [uri] The URI of the server key.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly uri?: string;
  /**
   * @member {string} [thumbprint] Thumbprint of the server key.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly thumbprint?: string;
}

/**
 * @interface
 * An interface representing ElasticPoolsListByServerOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ElasticPoolsListByServerOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [skip] The number of elements in the collection to skip.
   */
  skip?: number;
}

/**
 * @interface
 * An interface representing SyncGroupsListLogsOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface SyncGroupsListLogsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [continuationToken] The continuation token for this
   * operation.
   */
  continuationToken?: string;
}

/**
 * @interface
 * An interface representing JobExecutionsListByAgentOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface JobExecutionsListByAgentOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {Date} [createTimeMin] If specified, only job executions created
   * at or after the specified time are included.
   */
  createTimeMin?: Date;
  /**
   * @member {Date} [createTimeMax] If specified, only job executions created
   * before the specified time are included.
   */
  createTimeMax?: Date;
  /**
   * @member {Date} [endTimeMin] If specified, only job executions completed at
   * or after the specified time are included.
   */
  endTimeMin?: Date;
  /**
   * @member {Date} [endTimeMax] If specified, only job executions completed
   * before the specified time are included.
   */
  endTimeMax?: Date;
  /**
   * @member {boolean} [isActive] If specified, only active or only completed
   * job executions are included.
   */
  isActive?: boolean;
  /**
   * @member {number} [skip] The number of elements in the collection to skip.
   */
  skip?: number;
  /**
   * @member {number} [top] The number of elements to return from the
   * collection.
   */
  top?: number;
}

/**
 * @interface
 * An interface representing JobExecutionsListByJobOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface JobExecutionsListByJobOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {Date} [createTimeMin] If specified, only job executions created
   * at or after the specified time are included.
   */
  createTimeMin?: Date;
  /**
   * @member {Date} [createTimeMax] If specified, only job executions created
   * before the specified time are included.
   */
  createTimeMax?: Date;
  /**
   * @member {Date} [endTimeMin] If specified, only job executions completed at
   * or after the specified time are included.
   */
  endTimeMin?: Date;
  /**
   * @member {Date} [endTimeMax] If specified, only job executions completed
   * before the specified time are included.
   */
  endTimeMax?: Date;
  /**
   * @member {boolean} [isActive] If specified, only active or only completed
   * job executions are included.
   */
  isActive?: boolean;
  /**
   * @member {number} [skip] The number of elements in the collection to skip.
   */
  skip?: number;
  /**
   * @member {number} [top] The number of elements to return from the
   * collection.
   */
  top?: number;
}

/**
 * @interface
 * An interface representing JobStepExecutionsListByJobExecutionOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface JobStepExecutionsListByJobExecutionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {Date} [createTimeMin] If specified, only job executions created
   * at or after the specified time are included.
   */
  createTimeMin?: Date;
  /**
   * @member {Date} [createTimeMax] If specified, only job executions created
   * before the specified time are included.
   */
  createTimeMax?: Date;
  /**
   * @member {Date} [endTimeMin] If specified, only job executions completed at
   * or after the specified time are included.
   */
  endTimeMin?: Date;
  /**
   * @member {Date} [endTimeMax] If specified, only job executions completed
   * before the specified time are included.
   */
  endTimeMax?: Date;
  /**
   * @member {boolean} [isActive] If specified, only active or only completed
   * job executions are included.
   */
  isActive?: boolean;
  /**
   * @member {number} [skip] The number of elements in the collection to skip.
   */
  skip?: number;
  /**
   * @member {number} [top] The number of elements to return from the
   * collection.
   */
  top?: number;
}

/**
 * @interface
 * An interface representing JobTargetExecutionsListByJobExecutionOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface JobTargetExecutionsListByJobExecutionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {Date} [createTimeMin] If specified, only job executions created
   * at or after the specified time are included.
   */
  createTimeMin?: Date;
  /**
   * @member {Date} [createTimeMax] If specified, only job executions created
   * before the specified time are included.
   */
  createTimeMax?: Date;
  /**
   * @member {Date} [endTimeMin] If specified, only job executions completed at
   * or after the specified time are included.
   */
  endTimeMin?: Date;
  /**
   * @member {Date} [endTimeMax] If specified, only job executions completed
   * before the specified time are included.
   */
  endTimeMax?: Date;
  /**
   * @member {boolean} [isActive] If specified, only active or only completed
   * job executions are included.
   */
  isActive?: boolean;
  /**
   * @member {number} [skip] The number of elements in the collection to skip.
   */
  skip?: number;
  /**
   * @member {number} [top] The number of elements to return from the
   * collection.
   */
  top?: number;
}

/**
 * @interface
 * An interface representing JobTargetExecutionsListByStepOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface JobTargetExecutionsListByStepOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {Date} [createTimeMin] If specified, only job executions created
   * at or after the specified time are included.
   */
  createTimeMin?: Date;
  /**
   * @member {Date} [createTimeMax] If specified, only job executions created
   * before the specified time are included.
   */
  createTimeMax?: Date;
  /**
   * @member {Date} [endTimeMin] If specified, only job executions completed at
   * or after the specified time are included.
   */
  endTimeMin?: Date;
  /**
   * @member {Date} [endTimeMax] If specified, only job executions completed
   * before the specified time are included.
   */
  endTimeMax?: Date;
  /**
   * @member {boolean} [isActive] If specified, only active or only completed
   * job executions are included.
   */
  isActive?: boolean;
  /**
   * @member {number} [skip] The number of elements in the collection to skip.
   */
  skip?: number;
  /**
   * @member {number} [top] The number of elements to return from the
   * collection.
   */
  top?: number;
}

/**
 * @interface
 * An interface representing LongTermRetentionBackupsListByDatabaseOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface LongTermRetentionBackupsListByDatabaseOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [onlyLatestPerDatabase] Whether or not to only get the
   * latest backup for each database.
   */
  onlyLatestPerDatabase?: boolean;
  /**
   * @member {LongTermRetentionDatabaseState} [databaseState] Whether to query
   * against just live databases, just deleted databases, or all databases.
   * Possible values include: 'All', 'Live', 'Deleted'
   */
  databaseState?: LongTermRetentionDatabaseState;
}

/**
 * @interface
 * An interface representing LongTermRetentionBackupsListByLocationOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface LongTermRetentionBackupsListByLocationOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [onlyLatestPerDatabase] Whether or not to only get the
   * latest backup for each database.
   */
  onlyLatestPerDatabase?: boolean;
  /**
   * @member {LongTermRetentionDatabaseState} [databaseState] Whether to query
   * against just live databases, just deleted databases, or all databases.
   * Possible values include: 'All', 'Live', 'Deleted'
   */
  databaseState?: LongTermRetentionDatabaseState;
}

/**
 * @interface
 * An interface representing LongTermRetentionBackupsListByServerOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface LongTermRetentionBackupsListByServerOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [onlyLatestPerDatabase] Whether or not to only get the
   * latest backup for each database.
   */
  onlyLatestPerDatabase?: boolean;
  /**
   * @member {LongTermRetentionDatabaseState} [databaseState] Whether to query
   * against just live databases, just deleted databases, or all databases.
   * Possible values include: 'All', 'Live', 'Deleted'
   */
  databaseState?: LongTermRetentionDatabaseState;
}

/**
 * @interface
 * An interface representing CapabilitiesListByLocationOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface CapabilitiesListByLocationOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {CapabilityGroup} [include] If specified, restricts the response
   * to only include the selected item. Possible values include:
   * 'supportedEditions', 'supportedElasticPoolEditions',
   * 'supportedManagedInstanceVersions'
   */
  include?: CapabilityGroup;
}

/**
 * @interface
 * An interface representing ManagedInstanceKeysListByInstanceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ManagedInstanceKeysListByInstanceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [filter] An OData filter expression that filters elements
   * in the collection.
   */
  filter?: string;
}

/**
 * @interface
 * An interface representing SqlManagementClientOptions.
 * @extends AzureServiceClientOptions
 */
export interface SqlManagementClientOptions extends AzureServiceClientOptions {
  /**
   * @member {string} [baseUri]
   */
  baseUri?: string;
}


/**
 * @interface
 * An interface representing the RecoverableDatabaseListResult.
 * The response to a list recoverable databases request
 *
 * @extends Array<RecoverableDatabase>
 */
export interface RecoverableDatabaseListResult extends Array<RecoverableDatabase> {
}

/**
 * @interface
 * An interface representing the RestorableDroppedDatabaseListResult.
 * The response to a list restorable dropped databases request
 *
 * @extends Array<RestorableDroppedDatabase>
 */
export interface RestorableDroppedDatabaseListResult extends Array<RestorableDroppedDatabase> {
}

/**
 * @interface
 * An interface representing the ServerListResult.
 * A list of servers.
 *
 * @extends Array<Server>
 */
export interface ServerListResult extends Array<Server> {
  /**
   * @member {string} [nextLink] Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the DataMaskingRuleListResult.
 * The response to a list data masking rules request.
 *
 * @extends Array<DataMaskingRule>
 */
export interface DataMaskingRuleListResult extends Array<DataMaskingRule> {
}

/**
 * @interface
 * An interface representing the FirewallRuleListResult.
 * Represents the response to a List Firewall Rules request.
 *
 * @extends Array<FirewallRule>
 */
export interface FirewallRuleListResult extends Array<FirewallRule> {
}

/**
 * @interface
 * An interface representing the GeoBackupPolicyListResult.
 * The response to a list geo backup policies request.
 *
 * @extends Array<GeoBackupPolicy>
 */
export interface GeoBackupPolicyListResult extends Array<GeoBackupPolicy> {
}

/**
 * @interface
 * An interface representing the MetricListResult.
 * The response to a list database metrics request.
 *
 * @extends Array<Metric>
 */
export interface MetricListResult extends Array<Metric> {
}

/**
 * @interface
 * An interface representing the MetricDefinitionListResult.
 * The response to a list database metric definitions request.
 *
 * @extends Array<MetricDefinition>
 */
export interface MetricDefinitionListResult extends Array<MetricDefinition> {
}

/**
 * @interface
 * An interface representing the DatabaseListResult.
 * A list of databases.
 *
 * @extends Array<Database>
 */
export interface DatabaseListResult extends Array<Database> {
  /**
   * @member {string} [nextLink] Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the ElasticPoolListResult.
 * The result of an elastic pool list request.
 *
 * @extends Array<ElasticPool>
 */
export interface ElasticPoolListResult extends Array<ElasticPool> {
  /**
   * @member {string} [nextLink] Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the RecommendedElasticPoolListResult.
 * Represents the response to a list recommended elastic pool request.
 *
 * @extends Array<RecommendedElasticPool>
 */
export interface RecommendedElasticPoolListResult extends Array<RecommendedElasticPool> {
}

/**
 * @interface
 * An interface representing the RecommendedElasticPoolListMetricsResult.
 * Represents the response to a list recommended elastic pool metrics request.
 *
 * @extends Array<RecommendedElasticPoolMetric>
 */
export interface RecommendedElasticPoolListMetricsResult extends Array<RecommendedElasticPoolMetric> {
}

/**
 * @interface
 * An interface representing the ReplicationLinkListResult.
 * Represents the response to a List database replication link request.
 *
 * @extends Array<ReplicationLink>
 */
export interface ReplicationLinkListResult extends Array<ReplicationLink> {
}

/**
 * @interface
 * An interface representing the ServerAdministratorListResult.
 * The response to a list Active Directory Administrators request.
 *
 * @extends Array<ServerAzureADAdministrator>
 */
export interface ServerAdministratorListResult extends Array<ServerAzureADAdministrator> {
}

/**
 * @interface
 * An interface representing the ServerCommunicationLinkListResult.
 * A list of server communication links.
 *
 * @extends Array<ServerCommunicationLink>
 */
export interface ServerCommunicationLinkListResult extends Array<ServerCommunicationLink> {
}

/**
 * @interface
 * An interface representing the ServiceObjectiveListResult.
 * Represents the response to a get database service objectives request.
 *
 * @extends Array<ServiceObjective>
 */
export interface ServiceObjectiveListResult extends Array<ServiceObjective> {
}

/**
 * @interface
 * An interface representing the ElasticPoolActivityListResult.
 * Represents the response to a list elastic pool activity request.
 *
 * @extends Array<ElasticPoolActivity>
 */
export interface ElasticPoolActivityListResult extends Array<ElasticPoolActivity> {
}

/**
 * @interface
 * An interface representing the ElasticPoolDatabaseActivityListResult.
 * Represents the response to a list elastic pool database activity request.
 *
 * @extends Array<ElasticPoolDatabaseActivity>
 */
export interface ElasticPoolDatabaseActivityListResult extends Array<ElasticPoolDatabaseActivity> {
}

/**
 * @interface
 * An interface representing the ServiceTierAdvisorListResult.
 * Represents the response to a list service tier advisor request.
 *
 * @extends Array<ServiceTierAdvisor>
 */
export interface ServiceTierAdvisorListResult extends Array<ServiceTierAdvisor> {
}

/**
 * @interface
 * An interface representing the TransparentDataEncryptionActivityListResult.
 * Represents the response to a list database transparent data encryption
 * activity request.
 *
 * @extends Array<TransparentDataEncryptionActivity>
 */
export interface TransparentDataEncryptionActivityListResult extends Array<TransparentDataEncryptionActivity> {
}

/**
 * @interface
 * An interface representing the ServerUsageListResult.
 * Represents the response to a list server metrics request.
 *
 * @extends Array<ServerUsage>
 */
export interface ServerUsageListResult extends Array<ServerUsage> {
}

/**
 * @interface
 * An interface representing the DatabaseUsageListResult.
 * The response to a list database metrics request.
 *
 * @extends Array<DatabaseUsage>
 */
export interface DatabaseUsageListResult extends Array<DatabaseUsage> {
}

/**
 * @interface
 * An interface representing the EncryptionProtectorListResult.
 * A list of server encryption protectors.
 *
 * @extends Array<EncryptionProtector>
 */
export interface EncryptionProtectorListResult extends Array<EncryptionProtector> {
  /**
   * @member {string} [nextLink] Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the FailoverGroupListResult.
 * A list of failover groups.
 *
 * @extends Array<FailoverGroup>
 */
export interface FailoverGroupListResult extends Array<FailoverGroup> {
  /**
   * @member {string} [nextLink] Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the ManagedInstanceListResult.
 * A list of managed instances.
 *
 * @extends Array<ManagedInstance>
 */
export interface ManagedInstanceListResult extends Array<ManagedInstance> {
  /**
   * @member {string} [nextLink] Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the OperationListResult.
 * Result of the request to list SQL operations.
 *
 * @extends Array<Operation>
 */
export interface OperationListResult extends Array<Operation> {
  /**
   * @member {string} [nextLink] Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the ServerKeyListResult.
 * A list of server keys.
 *
 * @extends Array<ServerKey>
 */
export interface ServerKeyListResult extends Array<ServerKey> {
  /**
   * @member {string} [nextLink] Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the SyncAgentListResult.
 * A list of sync agents.
 *
 * @extends Array<SyncAgent>
 */
export interface SyncAgentListResult extends Array<SyncAgent> {
  /**
   * @member {string} [nextLink] Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the SyncAgentLinkedDatabaseListResult.
 * A list of sync agent linked databases.
 *
 * @extends Array<SyncAgentLinkedDatabase>
 */
export interface SyncAgentLinkedDatabaseListResult extends Array<SyncAgentLinkedDatabase> {
  /**
   * @member {string} [nextLink] Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the SyncDatabaseIdListResult.
 * A list of sync database ID properties.
 *
 * @extends Array<SyncDatabaseIdProperties>
 */
export interface SyncDatabaseIdListResult extends Array<SyncDatabaseIdProperties> {
  /**
   * @member {string} [nextLink] Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the SyncFullSchemaPropertiesListResult.
 * A list of sync schema properties.
 *
 * @extends Array<SyncFullSchemaProperties>
 */
export interface SyncFullSchemaPropertiesListResult extends Array<SyncFullSchemaProperties> {
  /**
   * @member {string} [nextLink] Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the SyncGroupLogListResult.
 * A list of sync group log properties.
 *
 * @extends Array<SyncGroupLogProperties>
 */
export interface SyncGroupLogListResult extends Array<SyncGroupLogProperties> {
  /**
   * @member {string} [nextLink] Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the SyncGroupListResult.
 * A list of sync groups.
 *
 * @extends Array<SyncGroup>
 */
export interface SyncGroupListResult extends Array<SyncGroup> {
  /**
   * @member {string} [nextLink] Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the SyncMemberListResult.
 * A list of Azure SQL Database sync members.
 *
 * @extends Array<SyncMember>
 */
export interface SyncMemberListResult extends Array<SyncMember> {
  /**
   * @member {string} [nextLink] Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the SubscriptionUsageListResult.
 * A list of subscription usage metrics in a location.
 *
 * @extends Array<SubscriptionUsage>
 */
export interface SubscriptionUsageListResult extends Array<SubscriptionUsage> {
  /**
   * @member {string} [nextLink] Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the VirtualNetworkRuleListResult.
 * A list of virtual network rules.
 *
 * @extends Array<VirtualNetworkRule>
 */
export interface VirtualNetworkRuleListResult extends Array<VirtualNetworkRule> {
  /**
   * @member {string} [nextLink] Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the DatabaseVulnerabilityAssessmentListResult.
 * A list of the database's vulnerability assessments.
 *
 * @extends Array<DatabaseVulnerabilityAssessment>
 */
export interface DatabaseVulnerabilityAssessmentListResult extends Array<DatabaseVulnerabilityAssessment> {
  /**
   * @member {string} [nextLink] Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the JobAgentListResult.
 * A list of Azure SQL job agents.
 *
 * @extends Array<JobAgent>
 */
export interface JobAgentListResult extends Array<JobAgent> {
  /**
   * @member {string} [nextLink] Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the JobCredentialListResult.
 * A list of job credentials.
 *
 * @extends Array<JobCredential>
 */
export interface JobCredentialListResult extends Array<JobCredential> {
  /**
   * @member {string} [nextLink] Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the JobExecutionListResult.
 * A list of job executions.
 *
 * @extends Array<JobExecution>
 */
export interface JobExecutionListResult extends Array<JobExecution> {
  /**
   * @member {string} [nextLink] Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the JobListResult.
 * A list of jobs.
 *
 * @extends Array<Job>
 */
export interface JobListResult extends Array<Job> {
  /**
   * @member {string} [nextLink] Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the JobStepListResult.
 * A list of job steps.
 *
 * @extends Array<JobStep>
 */
export interface JobStepListResult extends Array<JobStep> {
  /**
   * @member {string} [nextLink] Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the JobTargetGroupListResult.
 * A list of target groups.
 *
 * @extends Array<JobTargetGroup>
 */
export interface JobTargetGroupListResult extends Array<JobTargetGroup> {
  /**
   * @member {string} [nextLink] Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the JobVersionListResult.
 * A list of job versions.
 *
 * @extends Array<JobVersion>
 */
export interface JobVersionListResult extends Array<JobVersion> {
  /**
   * @member {string} [nextLink] Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the LongTermRetentionBackupListResult.
 * A list of long term retention bacukps.
 *
 * @extends Array<LongTermRetentionBackup>
 */
export interface LongTermRetentionBackupListResult extends Array<LongTermRetentionBackup> {
  /**
   * @member {string} [nextLink] Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the ManagedDatabaseListResult.
 * A list of managed databases.
 *
 * @extends Array<ManagedDatabase>
 */
export interface ManagedDatabaseListResult extends Array<ManagedDatabase> {
  /**
   * @member {string} [nextLink] Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the ServerDnsAliasListResult.
 * A list of server DNS aliases.
 *
 * @extends Array<ServerDnsAlias>
 */
export interface ServerDnsAliasListResult extends Array<ServerDnsAlias> {
  /**
   * @member {string} [nextLink] Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the RestorePointListResult.
 * A list of long term retention bacukps.
 *
 * @extends Array<RestorePoint>
 */
export interface RestorePointListResult extends Array<RestorePoint> {
  /**
   * @member {string} [nextLink] Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the DatabaseOperationListResult.
 * The response to a list database operations request
 *
 * @extends Array<DatabaseOperation>
 */
export interface DatabaseOperationListResult extends Array<DatabaseOperation> {
  /**
   * @member {string} [nextLink] Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the ElasticPoolOperationListResult.
 * The response to a list elastic pool operations request
 *
 * @extends Array<ElasticPoolOperation>
 */
export interface ElasticPoolOperationListResult extends Array<ElasticPoolOperation> {
  /**
   * @member {string} [nextLink] Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the VulnerabilityAssessmentScanRecordListResult.
 * A list of vulnerability assessment scan records.
 *
 * @extends Array<VulnerabilityAssessmentScanRecord>
 */
export interface VulnerabilityAssessmentScanRecordListResult extends Array<VulnerabilityAssessmentScanRecord> {
  /**
   * @member {string} [nextLink] Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the InstanceFailoverGroupListResult.
 * A list of instance failover groups.
 *
 * @extends Array<InstanceFailoverGroup>
 */
export interface InstanceFailoverGroupListResult extends Array<InstanceFailoverGroup> {
  /**
   * @member {string} [nextLink] Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the BackupShortTermRetentionPolicyListResult.
 * A list of short term retention policies.
 *
 * @extends Array<BackupShortTermRetentionPolicy>
 */
export interface BackupShortTermRetentionPolicyListResult extends Array<BackupShortTermRetentionPolicy> {
  /**
   * @member {string} [nextLink] Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the ManagedInstanceKeyListResult.
 * A list of managed instance keys.
 *
 * @extends Array<ManagedInstanceKey>
 */
export interface ManagedInstanceKeyListResult extends Array<ManagedInstanceKey> {
  /**
   * @member {string} [nextLink] Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the ManagedInstanceEncryptionProtectorListResult.
 * A list of managed instance encryption protectors.
 *
 * @extends Array<ManagedInstanceEncryptionProtector>
 */
export interface ManagedInstanceEncryptionProtectorListResult extends Array<ManagedInstanceEncryptionProtector> {
  /**
   * @member {string} [nextLink] Link to retrieve next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * Defines values for CheckNameAvailabilityReason.
 * Possible values include: 'Invalid', 'AlreadyExists'
 * @readonly
 * @enum {string}
 */
export enum CheckNameAvailabilityReason {
  Invalid = 'Invalid',
  AlreadyExists = 'AlreadyExists',
}

/**
 * Defines values for ServerConnectionType.
 * Possible values include: 'Default', 'Proxy', 'Redirect'
 * @readonly
 * @enum {string}
 */
export enum ServerConnectionType {
  Default = 'Default',
  Proxy = 'Proxy',
  Redirect = 'Redirect',
}

/**
 * Defines values for SecurityAlertPolicyState.
 * Possible values include: 'New', 'Enabled', 'Disabled'
 * @readonly
 * @enum {string}
 */
export enum SecurityAlertPolicyState {
  New = 'New',
  Enabled = 'Enabled',
  Disabled = 'Disabled',
}

/**
 * Defines values for SecurityAlertPolicyEmailAccountAdmins.
 * Possible values include: 'Enabled', 'Disabled'
 * @readonly
 * @enum {string}
 */
export enum SecurityAlertPolicyEmailAccountAdmins {
  Enabled = 'Enabled',
  Disabled = 'Disabled',
}

/**
 * Defines values for SecurityAlertPolicyUseServerDefault.
 * Possible values include: 'Enabled', 'Disabled'
 * @readonly
 * @enum {string}
 */
export enum SecurityAlertPolicyUseServerDefault {
  Enabled = 'Enabled',
  Disabled = 'Disabled',
}

/**
 * Defines values for DataMaskingState.
 * Possible values include: 'Disabled', 'Enabled'
 * @readonly
 * @enum {string}
 */
export enum DataMaskingState {
  Disabled = 'Disabled',
  Enabled = 'Enabled',
}

/**
 * Defines values for DataMaskingRuleState.
 * Possible values include: 'Disabled', 'Enabled'
 * @readonly
 * @enum {string}
 */
export enum DataMaskingRuleState {
  Disabled = 'Disabled',
  Enabled = 'Enabled',
}

/**
 * Defines values for DataMaskingFunction.
 * Possible values include: 'Default', 'CCN', 'Email', 'Number', 'SSN', 'Text'
 * @readonly
 * @enum {string}
 */
export enum DataMaskingFunction {
  Default = 'Default',
  CCN = 'CCN',
  Email = 'Email',
  Number = 'Number',
  SSN = 'SSN',
  Text = 'Text',
}

/**
 * Defines values for GeoBackupPolicyState.
 * Possible values include: 'Disabled', 'Enabled'
 * @readonly
 * @enum {string}
 */
export enum GeoBackupPolicyState {
  Disabled = 'Disabled',
  Enabled = 'Enabled',
}

/**
 * Defines values for DatabaseEdition.
 * Possible values include: 'Web', 'Business', 'Basic', 'Standard', 'Premium',
 * 'PremiumRS', 'Free', 'Stretch', 'DataWarehouse', 'System', 'System2'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: DatabaseEdition =
 * <DatabaseEdition>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum DatabaseEdition {
  Web = 'Web',
  Business = 'Business',
  Basic = 'Basic',
  Standard = 'Standard',
  Premium = 'Premium',
  PremiumRS = 'PremiumRS',
  Free = 'Free',
  Stretch = 'Stretch',
  DataWarehouse = 'DataWarehouse',
  System = 'System',
  System2 = 'System2',
}

/**
 * Defines values for ServiceObjectiveName.
 * Possible values include: 'System', 'System0', 'System1', 'System2',
 * 'System3', 'System4', 'System2L', 'System3L', 'System4L', 'Free', 'Basic',
 * 'S0', 'S1', 'S2', 'S3', 'S4', 'S6', 'S7', 'S9', 'S12', 'P1', 'P2', 'P3',
 * 'P4', 'P6', 'P11', 'P15', 'PRS1', 'PRS2', 'PRS4', 'PRS6', 'DW100', 'DW200',
 * 'DW300', 'DW400', 'DW500', 'DW600', 'DW1000', 'DW1200', 'DW1000c', 'DW1500',
 * 'DW1500c', 'DW2000', 'DW2000c', 'DW3000', 'DW2500c', 'DW3000c', 'DW6000',
 * 'DW5000c', 'DW6000c', 'DW7500c', 'DW10000c', 'DW15000c', 'DW30000c',
 * 'DS100', 'DS200', 'DS300', 'DS400', 'DS500', 'DS600', 'DS1000', 'DS1200',
 * 'DS1500', 'DS2000', 'ElasticPool'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: ServiceObjectiveName =
 * <ServiceObjectiveName>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum ServiceObjectiveName {
  System = 'System',
  System0 = 'System0',
  System1 = 'System1',
  System2 = 'System2',
  System3 = 'System3',
  System4 = 'System4',
  System2L = 'System2L',
  System3L = 'System3L',
  System4L = 'System4L',
  Free = 'Free',
  Basic = 'Basic',
  S0 = 'S0',
  S1 = 'S1',
  S2 = 'S2',
  S3 = 'S3',
  S4 = 'S4',
  S6 = 'S6',
  S7 = 'S7',
  S9 = 'S9',
  S12 = 'S12',
  P1 = 'P1',
  P2 = 'P2',
  P3 = 'P3',
  P4 = 'P4',
  P6 = 'P6',
  P11 = 'P11',
  P15 = 'P15',
  PRS1 = 'PRS1',
  PRS2 = 'PRS2',
  PRS4 = 'PRS4',
  PRS6 = 'PRS6',
  DW100 = 'DW100',
  DW200 = 'DW200',
  DW300 = 'DW300',
  DW400 = 'DW400',
  DW500 = 'DW500',
  DW600 = 'DW600',
  DW1000 = 'DW1000',
  DW1200 = 'DW1200',
  DW1000c = 'DW1000c',
  DW1500 = 'DW1500',
  DW1500c = 'DW1500c',
  DW2000 = 'DW2000',
  DW2000c = 'DW2000c',
  DW3000 = 'DW3000',
  DW2500c = 'DW2500c',
  DW3000c = 'DW3000c',
  DW6000 = 'DW6000',
  DW5000c = 'DW5000c',
  DW6000c = 'DW6000c',
  DW7500c = 'DW7500c',
  DW10000c = 'DW10000c',
  DW15000c = 'DW15000c',
  DW30000c = 'DW30000c',
  DS100 = 'DS100',
  DS200 = 'DS200',
  DS300 = 'DS300',
  DS400 = 'DS400',
  DS500 = 'DS500',
  DS600 = 'DS600',
  DS1000 = 'DS1000',
  DS1200 = 'DS1200',
  DS1500 = 'DS1500',
  DS2000 = 'DS2000',
  ElasticPool = 'ElasticPool',
}

/**
 * Defines values for StorageKeyType.
 * Possible values include: 'StorageAccessKey', 'SharedAccessKey'
 * @readonly
 * @enum {string}
 */
export enum StorageKeyType {
  StorageAccessKey = 'StorageAccessKey',
  SharedAccessKey = 'SharedAccessKey',
}

/**
 * Defines values for AuthenticationType.
 * Possible values include: 'SQL', 'ADPassword'
 * @readonly
 * @enum {string}
 */
export enum AuthenticationType {
  SQL = 'SQL',
  ADPassword = 'ADPassword',
}

/**
 * Defines values for UnitType.
 * Possible values include: 'count', 'bytes', 'seconds', 'percent',
 * 'countPerSecond', 'bytesPerSecond'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: UnitType = <UnitType>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum UnitType {
  Count = 'count',
  Bytes = 'bytes',
  Seconds = 'seconds',
  Percent = 'percent',
  CountPerSecond = 'countPerSecond',
  BytesPerSecond = 'bytesPerSecond',
}

/**
 * Defines values for PrimaryAggregationType.
 * Possible values include: 'None', 'Average', 'Count', 'Minimum', 'Maximum',
 * 'Total'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: PrimaryAggregationType =
 * <PrimaryAggregationType>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum PrimaryAggregationType {
  None = 'None',
  Average = 'Average',
  Count = 'Count',
  Minimum = 'Minimum',
  Maximum = 'Maximum',
  Total = 'Total',
}

/**
 * Defines values for UnitDefinitionType.
 * Possible values include: 'Count', 'Bytes', 'Seconds', 'Percent',
 * 'CountPerSecond', 'BytesPerSecond'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: UnitDefinitionType =
 * <UnitDefinitionType>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum UnitDefinitionType {
  Count = 'Count',
  Bytes = 'Bytes',
  Seconds = 'Seconds',
  Percent = 'Percent',
  CountPerSecond = 'CountPerSecond',
  BytesPerSecond = 'BytesPerSecond',
}

/**
 * Defines values for ElasticPoolEdition.
 * Possible values include: 'Basic', 'Standard', 'Premium'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: ElasticPoolEdition =
 * <ElasticPoolEdition>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum ElasticPoolEdition {
  Basic = 'Basic',
  Standard = 'Standard',
  Premium = 'Premium',
}

/**
 * Defines values for ReplicationRole.
 * Possible values include: 'Primary', 'Secondary', 'NonReadableSecondary',
 * 'Source', 'Copy'
 * @readonly
 * @enum {string}
 */
export enum ReplicationRole {
  Primary = 'Primary',
  Secondary = 'Secondary',
  NonReadableSecondary = 'NonReadableSecondary',
  Source = 'Source',
  Copy = 'Copy',
}

/**
 * Defines values for ReplicationState.
 * Possible values include: 'PENDING', 'SEEDING', 'CATCH_UP', 'SUSPENDED'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: ReplicationState =
 * <ReplicationState>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum ReplicationState {
  PENDING = 'PENDING',
  SEEDING = 'SEEDING',
  CATCHUP = 'CATCH_UP',
  SUSPENDED = 'SUSPENDED',
}

/**
 * Defines values for RecommendedIndexAction.
 * Possible values include: 'Create', 'Drop', 'Rebuild'
 * @readonly
 * @enum {string}
 */
export enum RecommendedIndexAction {
  Create = 'Create',
  Drop = 'Drop',
  Rebuild = 'Rebuild',
}

/**
 * Defines values for RecommendedIndexState.
 * Possible values include: 'Active', 'Pending', 'Executing', 'Verifying',
 * 'Pending Revert', 'Reverting', 'Reverted', 'Ignored', 'Expired', 'Blocked',
 * 'Success'
 * @readonly
 * @enum {string}
 */
export enum RecommendedIndexState {
  Active = 'Active',
  Pending = 'Pending',
  Executing = 'Executing',
  Verifying = 'Verifying',
  PendingRevert = 'Pending Revert',
  Reverting = 'Reverting',
  Reverted = 'Reverted',
  Ignored = 'Ignored',
  Expired = 'Expired',
  Blocked = 'Blocked',
  Success = 'Success',
}

/**
 * Defines values for RecommendedIndexType.
 * Possible values include: 'CLUSTERED', 'NONCLUSTERED', 'COLUMNSTORE',
 * 'CLUSTERED COLUMNSTORE'
 * @readonly
 * @enum {string}
 */
export enum RecommendedIndexType {
  CLUSTERED = 'CLUSTERED',
  NONCLUSTERED = 'NONCLUSTERED',
  COLUMNSTORE = 'COLUMNSTORE',
  CLUSTEREDCOLUMNSTORE = 'CLUSTERED COLUMNSTORE',
}

/**
 * Defines values for TransparentDataEncryptionStatus.
 * Possible values include: 'Enabled', 'Disabled'
 * @readonly
 * @enum {string}
 */
export enum TransparentDataEncryptionStatus {
  Enabled = 'Enabled',
  Disabled = 'Disabled',
}

/**
 * Defines values for TransparentDataEncryptionActivityStatus.
 * Possible values include: 'Encrypting', 'Decrypting'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: TransparentDataEncryptionActivityStatus =
 * <TransparentDataEncryptionActivityStatus>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum TransparentDataEncryptionActivityStatus {
  Encrypting = 'Encrypting',
  Decrypting = 'Decrypting',
}

/**
 * Defines values for AutomaticTuningMode.
 * Possible values include: 'Inherit', 'Custom', 'Auto', 'Unspecified'
 * @readonly
 * @enum {string}
 */
export enum AutomaticTuningMode {
  Inherit = 'Inherit',
  Custom = 'Custom',
  Auto = 'Auto',
  Unspecified = 'Unspecified',
}

/**
 * Defines values for AutomaticTuningOptionModeDesired.
 * Possible values include: 'Off', 'On', 'Default'
 * @readonly
 * @enum {string}
 */
export enum AutomaticTuningOptionModeDesired {
  Off = 'Off',
  On = 'On',
  Default = 'Default',
}

/**
 * Defines values for AutomaticTuningOptionModeActual.
 * Possible values include: 'Off', 'On'
 * @readonly
 * @enum {string}
 */
export enum AutomaticTuningOptionModeActual {
  Off = 'Off',
  On = 'On',
}

/**
 * Defines values for AutomaticTuningDisabledReason.
 * Possible values include: 'Default', 'Disabled', 'AutoConfigured',
 * 'InheritedFromServer', 'QueryStoreOff', 'QueryStoreReadOnly', 'NotSupported'
 * @readonly
 * @enum {string}
 */
export enum AutomaticTuningDisabledReason {
  Default = 'Default',
  Disabled = 'Disabled',
  AutoConfigured = 'AutoConfigured',
  InheritedFromServer = 'InheritedFromServer',
  QueryStoreOff = 'QueryStoreOff',
  QueryStoreReadOnly = 'QueryStoreReadOnly',
  NotSupported = 'NotSupported',
}

/**
 * Defines values for ServerKeyType.
 * Possible values include: 'ServiceManaged', 'AzureKeyVault'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: ServerKeyType =
 * <ServerKeyType>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum ServerKeyType {
  ServiceManaged = 'ServiceManaged',
  AzureKeyVault = 'AzureKeyVault',
}

/**
 * Defines values for ReadWriteEndpointFailoverPolicy.
 * Possible values include: 'Manual', 'Automatic'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: ReadWriteEndpointFailoverPolicy =
 * <ReadWriteEndpointFailoverPolicy>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum ReadWriteEndpointFailoverPolicy {
  Manual = 'Manual',
  Automatic = 'Automatic',
}

/**
 * Defines values for ReadOnlyEndpointFailoverPolicy.
 * Possible values include: 'Disabled', 'Enabled'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: ReadOnlyEndpointFailoverPolicy =
 * <ReadOnlyEndpointFailoverPolicy>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum ReadOnlyEndpointFailoverPolicy {
  Disabled = 'Disabled',
  Enabled = 'Enabled',
}

/**
 * Defines values for FailoverGroupReplicationRole.
 * Possible values include: 'Primary', 'Secondary'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: FailoverGroupReplicationRole =
 * <FailoverGroupReplicationRole>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum FailoverGroupReplicationRole {
  Primary = 'Primary',
  Secondary = 'Secondary',
}

/**
 * Defines values for IdentityType.
 * Possible values include: 'SystemAssigned'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: IdentityType =
 * <IdentityType>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum IdentityType {
  SystemAssigned = 'SystemAssigned',
}

/**
 * Defines values for OperationOrigin.
 * Possible values include: 'user', 'system'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: OperationOrigin =
 * <OperationOrigin>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum OperationOrigin {
  User = 'user',
  System = 'system',
}

/**
 * Defines values for SyncAgentState.
 * Possible values include: 'Online', 'Offline', 'NeverConnected'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: SyncAgentState =
 * <SyncAgentState>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum SyncAgentState {
  Online = 'Online',
  Offline = 'Offline',
  NeverConnected = 'NeverConnected',
}

/**
 * Defines values for SyncMemberDbType.
 * Possible values include: 'AzureSqlDatabase', 'SqlServerDatabase'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: SyncMemberDbType =
 * <SyncMemberDbType>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum SyncMemberDbType {
  AzureSqlDatabase = 'AzureSqlDatabase',
  SqlServerDatabase = 'SqlServerDatabase',
}

/**
 * Defines values for SyncGroupLogType.
 * Possible values include: 'All', 'Error', 'Warning', 'Success'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: SyncGroupLogType =
 * <SyncGroupLogType>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum SyncGroupLogType {
  All = 'All',
  Error = 'Error',
  Warning = 'Warning',
  Success = 'Success',
}

/**
 * Defines values for SyncConflictResolutionPolicy.
 * Possible values include: 'HubWin', 'MemberWin'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: SyncConflictResolutionPolicy =
 * <SyncConflictResolutionPolicy>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum SyncConflictResolutionPolicy {
  HubWin = 'HubWin',
  MemberWin = 'MemberWin',
}

/**
 * Defines values for SyncGroupState.
 * Possible values include: 'NotReady', 'Error', 'Warning', 'Progressing',
 * 'Good'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: SyncGroupState =
 * <SyncGroupState>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum SyncGroupState {
  NotReady = 'NotReady',
  Error = 'Error',
  Warning = 'Warning',
  Progressing = 'Progressing',
  Good = 'Good',
}

/**
 * Defines values for SyncDirection.
 * Possible values include: 'Bidirectional', 'OneWayMemberToHub',
 * 'OneWayHubToMember'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: SyncDirection =
 * <SyncDirection>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum SyncDirection {
  Bidirectional = 'Bidirectional',
  OneWayMemberToHub = 'OneWayMemberToHub',
  OneWayHubToMember = 'OneWayHubToMember',
}

/**
 * Defines values for SyncMemberState.
 * Possible values include: 'SyncInProgress', 'SyncSucceeded', 'SyncFailed',
 * 'DisabledTombstoneCleanup', 'DisabledBackupRestore',
 * 'SyncSucceededWithWarnings', 'SyncCancelling', 'SyncCancelled',
 * 'UnProvisioned', 'Provisioning', 'Provisioned', 'ProvisionFailed',
 * 'DeProvisioning', 'DeProvisioned', 'DeProvisionFailed', 'Reprovisioning',
 * 'ReprovisionFailed', 'UnReprovisioned'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: SyncMemberState =
 * <SyncMemberState>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum SyncMemberState {
  SyncInProgress = 'SyncInProgress',
  SyncSucceeded = 'SyncSucceeded',
  SyncFailed = 'SyncFailed',
  DisabledTombstoneCleanup = 'DisabledTombstoneCleanup',
  DisabledBackupRestore = 'DisabledBackupRestore',
  SyncSucceededWithWarnings = 'SyncSucceededWithWarnings',
  SyncCancelling = 'SyncCancelling',
  SyncCancelled = 'SyncCancelled',
  UnProvisioned = 'UnProvisioned',
  Provisioning = 'Provisioning',
  Provisioned = 'Provisioned',
  ProvisionFailed = 'ProvisionFailed',
  DeProvisioning = 'DeProvisioning',
  DeProvisioned = 'DeProvisioned',
  DeProvisionFailed = 'DeProvisionFailed',
  Reprovisioning = 'Reprovisioning',
  ReprovisionFailed = 'ReprovisionFailed',
  UnReprovisioned = 'UnReprovisioned',
}

/**
 * Defines values for VirtualNetworkRuleState.
 * Possible values include: 'Initializing', 'InProgress', 'Ready', 'Deleting',
 * 'Unknown'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: VirtualNetworkRuleState =
 * <VirtualNetworkRuleState>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum VirtualNetworkRuleState {
  Initializing = 'Initializing',
  InProgress = 'InProgress',
  Ready = 'Ready',
  Deleting = 'Deleting',
  Unknown = 'Unknown',
}

/**
 * Defines values for BlobAuditingPolicyState.
 * Possible values include: 'Enabled', 'Disabled'
 * @readonly
 * @enum {string}
 */
export enum BlobAuditingPolicyState {
  Enabled = 'Enabled',
  Disabled = 'Disabled',
}

/**
 * Defines values for JobAgentState.
 * Possible values include: 'Creating', 'Ready', 'Updating', 'Deleting',
 * 'Disabled'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: JobAgentState =
 * <JobAgentState>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum JobAgentState {
  Creating = 'Creating',
  Ready = 'Ready',
  Updating = 'Updating',
  Deleting = 'Deleting',
  Disabled = 'Disabled',
}

/**
 * Defines values for JobExecutionLifecycle.
 * Possible values include: 'Created', 'InProgress',
 * 'WaitingForChildJobExecutions', 'WaitingForRetry', 'Succeeded',
 * 'SucceededWithSkipped', 'Failed', 'TimedOut', 'Canceled', 'Skipped'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: JobExecutionLifecycle =
 * <JobExecutionLifecycle>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum JobExecutionLifecycle {
  Created = 'Created',
  InProgress = 'InProgress',
  WaitingForChildJobExecutions = 'WaitingForChildJobExecutions',
  WaitingForRetry = 'WaitingForRetry',
  Succeeded = 'Succeeded',
  SucceededWithSkipped = 'SucceededWithSkipped',
  Failed = 'Failed',
  TimedOut = 'TimedOut',
  Canceled = 'Canceled',
  Skipped = 'Skipped',
}

/**
 * Defines values for ProvisioningState.
 * Possible values include: 'Created', 'InProgress', 'Succeeded', 'Failed',
 * 'Canceled'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: ProvisioningState =
 * <ProvisioningState>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum ProvisioningState {
  Created = 'Created',
  InProgress = 'InProgress',
  Succeeded = 'Succeeded',
  Failed = 'Failed',
  Canceled = 'Canceled',
}

/**
 * Defines values for JobTargetType.
 * Possible values include: 'TargetGroup', 'SqlDatabase', 'SqlElasticPool',
 * 'SqlShardMap', 'SqlServer'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: JobTargetType =
 * <JobTargetType>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum JobTargetType {
  TargetGroup = 'TargetGroup',
  SqlDatabase = 'SqlDatabase',
  SqlElasticPool = 'SqlElasticPool',
  SqlShardMap = 'SqlShardMap',
  SqlServer = 'SqlServer',
}

/**
 * Defines values for JobScheduleType.
 * Possible values include: 'Once', 'Recurring'
 * @readonly
 * @enum {string}
 */
export enum JobScheduleType {
  Once = 'Once',
  Recurring = 'Recurring',
}

/**
 * Defines values for JobStepActionType.
 * Possible values include: 'TSql'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: JobStepActionType =
 * <JobStepActionType>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum JobStepActionType {
  TSql = 'TSql',
}

/**
 * Defines values for JobStepActionSource.
 * Possible values include: 'Inline'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: JobStepActionSource =
 * <JobStepActionSource>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum JobStepActionSource {
  Inline = 'Inline',
}

/**
 * Defines values for JobStepOutputType.
 * Possible values include: 'SqlDatabase'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: JobStepOutputType =
 * <JobStepOutputType>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum JobStepOutputType {
  SqlDatabase = 'SqlDatabase',
}

/**
 * Defines values for JobTargetGroupMembershipType.
 * Possible values include: 'Include', 'Exclude'
 * @readonly
 * @enum {string}
 */
export enum JobTargetGroupMembershipType {
  Include = 'Include',
  Exclude = 'Exclude',
}

/**
 * Defines values for ManagedDatabaseStatus.
 * Possible values include: 'Online', 'Offline', 'Shutdown', 'Creating',
 * 'Inaccessible'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: ManagedDatabaseStatus =
 * <ManagedDatabaseStatus>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum ManagedDatabaseStatus {
  Online = 'Online',
  Offline = 'Offline',
  Shutdown = 'Shutdown',
  Creating = 'Creating',
  Inaccessible = 'Inaccessible',
}

/**
 * Defines values for CatalogCollationType.
 * Possible values include: 'DATABASE_DEFAULT', 'SQL_Latin1_General_CP1_CI_AS'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: CatalogCollationType =
 * <CatalogCollationType>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum CatalogCollationType {
  DATABASEDEFAULT = 'DATABASE_DEFAULT',
  SQLLatin1GeneralCP1CIAS = 'SQL_Latin1_General_CP1_CI_AS',
}

/**
 * Defines values for ManagedDatabaseCreateMode.
 * Possible values include: 'Default', 'RestoreExternalBackup',
 * 'PointInTimeRestore'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: ManagedDatabaseCreateMode =
 * <ManagedDatabaseCreateMode>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum ManagedDatabaseCreateMode {
  Default = 'Default',
  RestoreExternalBackup = 'RestoreExternalBackup',
  PointInTimeRestore = 'PointInTimeRestore',
}

/**
 * Defines values for AutomaticTuningServerMode.
 * Possible values include: 'Custom', 'Auto', 'Unspecified'
 * @readonly
 * @enum {string}
 */
export enum AutomaticTuningServerMode {
  Custom = 'Custom',
  Auto = 'Auto',
  Unspecified = 'Unspecified',
}

/**
 * Defines values for AutomaticTuningServerReason.
 * Possible values include: 'Default', 'Disabled', 'AutoConfigured'
 * @readonly
 * @enum {string}
 */
export enum AutomaticTuningServerReason {
  Default = 'Default',
  Disabled = 'Disabled',
  AutoConfigured = 'AutoConfigured',
}

/**
 * Defines values for RestorePointType.
 * Possible values include: 'CONTINUOUS', 'DISCRETE'
 * @readonly
 * @enum {string}
 */
export enum RestorePointType {
  CONTINUOUS = 'CONTINUOUS',
  DISCRETE = 'DISCRETE',
}

/**
 * Defines values for ManagementOperationState.
 * Possible values include: 'Pending', 'InProgress', 'Succeeded', 'Failed',
 * 'CancelInProgress', 'Cancelled'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: ManagementOperationState =
 * <ManagementOperationState>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum ManagementOperationState {
  Pending = 'Pending',
  InProgress = 'InProgress',
  Succeeded = 'Succeeded',
  Failed = 'Failed',
  CancelInProgress = 'CancelInProgress',
  Cancelled = 'Cancelled',
}

/**
 * Defines values for MaxSizeUnit.
 * Possible values include: 'Megabytes', 'Gigabytes', 'Terabytes', 'Petabytes'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: MaxSizeUnit =
 * <MaxSizeUnit>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum MaxSizeUnit {
  Megabytes = 'Megabytes',
  Gigabytes = 'Gigabytes',
  Terabytes = 'Terabytes',
  Petabytes = 'Petabytes',
}

/**
 * Defines values for LogSizeUnit.
 * Possible values include: 'Megabytes', 'Gigabytes', 'Terabytes', 'Petabytes',
 * 'Percent'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: LogSizeUnit =
 * <LogSizeUnit>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum LogSizeUnit {
  Megabytes = 'Megabytes',
  Gigabytes = 'Gigabytes',
  Terabytes = 'Terabytes',
  Petabytes = 'Petabytes',
  Percent = 'Percent',
}

/**
 * Defines values for CapabilityStatus.
 * Possible values include: 'Visible', 'Available', 'Default', 'Disabled'
 * @readonly
 * @enum {string}
 */
export enum CapabilityStatus {
  Visible = 'Visible',
  Available = 'Available',
  Default = 'Default',
  Disabled = 'Disabled',
}

/**
 * Defines values for PerformanceLevelUnit.
 * Possible values include: 'DTU', 'VCores'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: PerformanceLevelUnit =
 * <PerformanceLevelUnit>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum PerformanceLevelUnit {
  DTU = 'DTU',
  VCores = 'VCores',
}

/**
 * Defines values for CreateMode.
 * Possible values include: 'Default', 'Copy', 'Secondary',
 * 'PointInTimeRestore', 'Restore', 'Recovery', 'RestoreExternalBackup',
 * 'RestoreExternalBackupSecondary', 'RestoreLongTermRetentionBackup',
 * 'OnlineSecondary'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: CreateMode = <CreateMode>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum CreateMode {
  Default = 'Default',
  Copy = 'Copy',
  Secondary = 'Secondary',
  PointInTimeRestore = 'PointInTimeRestore',
  Restore = 'Restore',
  Recovery = 'Recovery',
  RestoreExternalBackup = 'RestoreExternalBackup',
  RestoreExternalBackupSecondary = 'RestoreExternalBackupSecondary',
  RestoreLongTermRetentionBackup = 'RestoreLongTermRetentionBackup',
  OnlineSecondary = 'OnlineSecondary',
}

/**
 * Defines values for SampleName.
 * Possible values include: 'AdventureWorksLT', 'WideWorldImportersStd',
 * 'WideWorldImportersFull'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: SampleName = <SampleName>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum SampleName {
  AdventureWorksLT = 'AdventureWorksLT',
  WideWorldImportersStd = 'WideWorldImportersStd',
  WideWorldImportersFull = 'WideWorldImportersFull',
}

/**
 * Defines values for DatabaseStatus.
 * Possible values include: 'Online', 'Restoring', 'RecoveryPending',
 * 'Recovering', 'Suspect', 'Offline', 'Standby', 'Shutdown', 'EmergencyMode',
 * 'AutoClosed', 'Copying', 'Creating', 'Inaccessible', 'OfflineSecondary',
 * 'Pausing', 'Paused', 'Resuming', 'Scaling'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: DatabaseStatus =
 * <DatabaseStatus>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum DatabaseStatus {
  Online = 'Online',
  Restoring = 'Restoring',
  RecoveryPending = 'RecoveryPending',
  Recovering = 'Recovering',
  Suspect = 'Suspect',
  Offline = 'Offline',
  Standby = 'Standby',
  Shutdown = 'Shutdown',
  EmergencyMode = 'EmergencyMode',
  AutoClosed = 'AutoClosed',
  Copying = 'Copying',
  Creating = 'Creating',
  Inaccessible = 'Inaccessible',
  OfflineSecondary = 'OfflineSecondary',
  Pausing = 'Pausing',
  Paused = 'Paused',
  Resuming = 'Resuming',
  Scaling = 'Scaling',
}

/**
 * Defines values for DatabaseLicenseType.
 * Possible values include: 'LicenseIncluded', 'BasePrice'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: DatabaseLicenseType =
 * <DatabaseLicenseType>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum DatabaseLicenseType {
  LicenseIncluded = 'LicenseIncluded',
  BasePrice = 'BasePrice',
}

/**
 * Defines values for DatabaseReadScale.
 * Possible values include: 'Enabled', 'Disabled'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: DatabaseReadScale =
 * <DatabaseReadScale>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum DatabaseReadScale {
  Enabled = 'Enabled',
  Disabled = 'Disabled',
}

/**
 * Defines values for ElasticPoolState.
 * Possible values include: 'Creating', 'Ready', 'Disabled'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: ElasticPoolState =
 * <ElasticPoolState>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum ElasticPoolState {
  Creating = 'Creating',
  Ready = 'Ready',
  Disabled = 'Disabled',
}

/**
 * Defines values for ElasticPoolLicenseType.
 * Possible values include: 'LicenseIncluded', 'BasePrice'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: ElasticPoolLicenseType =
 * <ElasticPoolLicenseType>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum ElasticPoolLicenseType {
  LicenseIncluded = 'LicenseIncluded',
  BasePrice = 'BasePrice',
}

/**
 * Defines values for VulnerabilityAssessmentScanTriggerType.
 * Possible values include: 'OnDemand', 'Recurring'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: VulnerabilityAssessmentScanTriggerType =
 * <VulnerabilityAssessmentScanTriggerType>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum VulnerabilityAssessmentScanTriggerType {
  OnDemand = 'OnDemand',
  Recurring = 'Recurring',
}

/**
 * Defines values for VulnerabilityAssessmentScanState.
 * Possible values include: 'Passed', 'Failed', 'FailedToRun', 'InProgress'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: VulnerabilityAssessmentScanState =
 * <VulnerabilityAssessmentScanState>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum VulnerabilityAssessmentScanState {
  Passed = 'Passed',
  Failed = 'Failed',
  FailedToRun = 'FailedToRun',
  InProgress = 'InProgress',
}

/**
 * Defines values for InstanceFailoverGroupReplicationRole.
 * Possible values include: 'Primary', 'Secondary'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: InstanceFailoverGroupReplicationRole =
 * <InstanceFailoverGroupReplicationRole>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum InstanceFailoverGroupReplicationRole {
  Primary = 'Primary',
  Secondary = 'Secondary',
}

/**
 * Defines values for LongTermRetentionDatabaseState.
 * Possible values include: 'All', 'Live', 'Deleted'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: LongTermRetentionDatabaseState =
 * <LongTermRetentionDatabaseState>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum LongTermRetentionDatabaseState {
  All = 'All',
  Live = 'Live',
  Deleted = 'Deleted',
}

/**
 * Defines values for VulnerabilityAssessmentPolicyBaselineName.
 * Possible values include: 'master', 'default'
 * @readonly
 * @enum {string}
 */
export enum VulnerabilityAssessmentPolicyBaselineName {
  Master = 'master',
  Default = 'default',
}

/**
 * Defines values for CapabilityGroup.
 * Possible values include: 'supportedEditions',
 * 'supportedElasticPoolEditions', 'supportedManagedInstanceVersions'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: CapabilityGroup =
 * <CapabilityGroup>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum CapabilityGroup {
  SupportedEditions = 'supportedEditions',
  SupportedElasticPoolEditions = 'supportedElasticPoolEditions',
  SupportedManagedInstanceVersions = 'supportedManagedInstanceVersions',
}

/**
 * Defines values for Type.
 * Possible values include: 'All', 'Error', 'Warning', 'Success'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: Type = <Type>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum Type {
  All = 'All',
  Error = 'Error',
  Warning = 'Warning',
  Success = 'Success',
}

/**
 * Contains response data for the get operation.
 */
export type RecoverableDatabasesGetResponse = RecoverableDatabase & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecoverableDatabase;
    };
};

/**
 * Contains response data for the listByServer operation.
 */
export type RecoverableDatabasesListByServerResponse = RecoverableDatabaseListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecoverableDatabaseListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type RestorableDroppedDatabasesGetResponse = RestorableDroppedDatabase & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RestorableDroppedDatabase;
    };
};

/**
 * Contains response data for the listByServer operation.
 */
export type RestorableDroppedDatabasesListByServerResponse = RestorableDroppedDatabaseListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RestorableDroppedDatabaseListResult;
    };
};

/**
 * Contains response data for the checkNameAvailability operation.
 */
export type ServersCheckNameAvailabilityResponse = CheckNameAvailabilityResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CheckNameAvailabilityResponse;
    };
};

/**
 * Contains response data for the list operation.
 */
export type ServersListResponse = ServerListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerListResult;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type ServersListByResourceGroupResponse = ServerListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ServersGetResponse = Server & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Server;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ServersCreateOrUpdateResponse = Server & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Server;
    };
};

/**
 * Contains response data for the update operation.
 */
export type ServersUpdateResponse = Server & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Server;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type ServersBeginCreateOrUpdateResponse = Server & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Server;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type ServersBeginUpdateResponse = Server & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Server;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type ServersListNextResponse = ServerListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerListResult;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type ServersListByResourceGroupNextResponse = ServerListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerListResult;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ServerConnectionPoliciesCreateOrUpdateResponse = ServerConnectionPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerConnectionPolicy;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ServerConnectionPoliciesGetResponse = ServerConnectionPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerConnectionPolicy;
    };
};

/**
 * Contains response data for the get operation.
 */
export type DatabaseThreatDetectionPoliciesGetResponse = DatabaseSecurityAlertPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseSecurityAlertPolicy;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type DatabaseThreatDetectionPoliciesCreateOrUpdateResponse = DatabaseSecurityAlertPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseSecurityAlertPolicy;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type DataMaskingPoliciesCreateOrUpdateResponse = DataMaskingPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataMaskingPolicy;
    };
};

/**
 * Contains response data for the get operation.
 */
export type DataMaskingPoliciesGetResponse = DataMaskingPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataMaskingPolicy;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type DataMaskingRulesCreateOrUpdateResponse = DataMaskingRule & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataMaskingRule;
    };
};

/**
 * Contains response data for the listByDatabase operation.
 */
export type DataMaskingRulesListByDatabaseResponse = DataMaskingRuleListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataMaskingRuleListResult;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type FirewallRulesCreateOrUpdateResponse = FirewallRule & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FirewallRule;
    };
};

/**
 * Contains response data for the get operation.
 */
export type FirewallRulesGetResponse = FirewallRule & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FirewallRule;
    };
};

/**
 * Contains response data for the listByServer operation.
 */
export type FirewallRulesListByServerResponse = FirewallRuleListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FirewallRuleListResult;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type GeoBackupPoliciesCreateOrUpdateResponse = GeoBackupPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GeoBackupPolicy;
    };
};

/**
 * Contains response data for the get operation.
 */
export type GeoBackupPoliciesGetResponse = GeoBackupPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GeoBackupPolicy;
    };
};

/**
 * Contains response data for the listByDatabase operation.
 */
export type GeoBackupPoliciesListByDatabaseResponse = GeoBackupPolicyListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GeoBackupPolicyListResult;
    };
};

/**
 * Contains response data for the importMethod operation.
 */
export type DatabasesImportMethodResponse = ImportExportResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ImportExportResponse;
    };
};

/**
 * Contains response data for the createImportOperation operation.
 */
export type DatabasesCreateImportOperationResponse = ImportExportResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ImportExportResponse;
    };
};

/**
 * Contains response data for the exportMethod operation.
 */
export type DatabasesExportMethodResponse = ImportExportResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ImportExportResponse;
    };
};

/**
 * Contains response data for the listMetrics operation.
 */
export type DatabasesListMetricsResponse = MetricListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MetricListResult;
    };
};

/**
 * Contains response data for the listMetricDefinitions operation.
 */
export type DatabasesListMetricDefinitionsResponse = MetricDefinitionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MetricDefinitionListResult;
    };
};

/**
 * Contains response data for the listByServer operation.
 */
export type DatabasesListByServerResponse = DatabaseListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type DatabasesGetResponse = Database & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Database;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type DatabasesCreateOrUpdateResponse = Database & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Database;
    };
};

/**
 * Contains response data for the update operation.
 */
export type DatabasesUpdateResponse = Database & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Database;
    };
};

/**
 * Contains response data for the listByElasticPool operation.
 */
export type DatabasesListByElasticPoolResponse = DatabaseListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseListResult;
    };
};

/**
 * Contains response data for the pause operation.
 */
export type DatabasesPauseResponse = Database & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Database;
    };
};

/**
 * Contains response data for the resume operation.
 */
export type DatabasesResumeResponse = Database & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Database;
    };
};

/**
 * Contains response data for the beginImportMethod operation.
 */
export type DatabasesBeginImportMethodResponse = ImportExportResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ImportExportResponse;
    };
};

/**
 * Contains response data for the beginCreateImportOperation operation.
 */
export type DatabasesBeginCreateImportOperationResponse = ImportExportResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ImportExportResponse;
    };
};

/**
 * Contains response data for the beginExportMethod operation.
 */
export type DatabasesBeginExportMethodResponse = ImportExportResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ImportExportResponse;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type DatabasesBeginCreateOrUpdateResponse = Database & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Database;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type DatabasesBeginUpdateResponse = Database & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Database;
    };
};

/**
 * Contains response data for the beginPause operation.
 */
export type DatabasesBeginPauseResponse = Database & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Database;
    };
};

/**
 * Contains response data for the beginResume operation.
 */
export type DatabasesBeginResumeResponse = Database & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Database;
    };
};

/**
 * Contains response data for the listByServerNext operation.
 */
export type DatabasesListByServerNextResponse = DatabaseListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseListResult;
    };
};

/**
 * Contains response data for the listByElasticPoolNext operation.
 */
export type DatabasesListByElasticPoolNextResponse = DatabaseListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseListResult;
    };
};

/**
 * Contains response data for the listMetrics operation.
 */
export type ElasticPoolsListMetricsResponse = MetricListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MetricListResult;
    };
};

/**
 * Contains response data for the listMetricDefinitions operation.
 */
export type ElasticPoolsListMetricDefinitionsResponse = MetricDefinitionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MetricDefinitionListResult;
    };
};

/**
 * Contains response data for the listByServer operation.
 */
export type ElasticPoolsListByServerResponse = ElasticPoolListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ElasticPoolListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ElasticPoolsGetResponse = ElasticPool & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ElasticPool;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ElasticPoolsCreateOrUpdateResponse = ElasticPool & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ElasticPool;
    };
};

/**
 * Contains response data for the update operation.
 */
export type ElasticPoolsUpdateResponse = ElasticPool & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ElasticPool;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type ElasticPoolsBeginCreateOrUpdateResponse = ElasticPool & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ElasticPool;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type ElasticPoolsBeginUpdateResponse = ElasticPool & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ElasticPool;
    };
};

/**
 * Contains response data for the listByServerNext operation.
 */
export type ElasticPoolsListByServerNextResponse = ElasticPoolListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ElasticPoolListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type RecommendedElasticPoolsGetResponse = RecommendedElasticPool & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecommendedElasticPool;
    };
};

/**
 * Contains response data for the listByServer operation.
 */
export type RecommendedElasticPoolsListByServerResponse = RecommendedElasticPoolListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecommendedElasticPoolListResult;
    };
};

/**
 * Contains response data for the listMetrics operation.
 */
export type RecommendedElasticPoolsListMetricsResponse = RecommendedElasticPoolListMetricsResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecommendedElasticPoolListMetricsResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ReplicationLinksGetResponse = ReplicationLink & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReplicationLink;
    };
};

/**
 * Contains response data for the listByDatabase operation.
 */
export type ReplicationLinksListByDatabaseResponse = ReplicationLinkListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReplicationLinkListResult;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ServerAzureADAdministratorsCreateOrUpdateResponse = ServerAzureADAdministrator & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerAzureADAdministrator;
    };
};

/**
 * Contains response data for the deleteMethod operation.
 */
export type ServerAzureADAdministratorsDeleteMethodResponse = ServerAzureADAdministrator & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerAzureADAdministrator;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ServerAzureADAdministratorsGetResponse = ServerAzureADAdministrator & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerAzureADAdministrator;
    };
};

/**
 * Contains response data for the listByServer operation.
 */
export type ServerAzureADAdministratorsListByServerResponse = ServerAdministratorListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerAdministratorListResult;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type ServerAzureADAdministratorsBeginCreateOrUpdateResponse = ServerAzureADAdministrator & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerAzureADAdministrator;
    };
};

/**
 * Contains response data for the beginDeleteMethod operation.
 */
export type ServerAzureADAdministratorsBeginDeleteMethodResponse = ServerAzureADAdministrator & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerAzureADAdministrator;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ServerCommunicationLinksGetResponse = ServerCommunicationLink & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerCommunicationLink;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ServerCommunicationLinksCreateOrUpdateResponse = ServerCommunicationLink & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerCommunicationLink;
    };
};

/**
 * Contains response data for the listByServer operation.
 */
export type ServerCommunicationLinksListByServerResponse = ServerCommunicationLinkListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerCommunicationLinkListResult;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type ServerCommunicationLinksBeginCreateOrUpdateResponse = ServerCommunicationLink & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerCommunicationLink;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ServiceObjectivesGetResponse = ServiceObjective & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServiceObjective;
    };
};

/**
 * Contains response data for the listByServer operation.
 */
export type ServiceObjectivesListByServerResponse = ServiceObjectiveListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServiceObjectiveListResult;
    };
};

/**
 * Contains response data for the listByElasticPool operation.
 */
export type ElasticPoolActivitiesListByElasticPoolResponse = ElasticPoolActivityListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ElasticPoolActivityListResult;
    };
};

/**
 * Contains response data for the listByElasticPool operation.
 */
export type ElasticPoolDatabaseActivitiesListByElasticPoolResponse = ElasticPoolDatabaseActivityListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ElasticPoolDatabaseActivityListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ServiceTierAdvisorsGetResponse = ServiceTierAdvisor & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServiceTierAdvisor;
    };
};

/**
 * Contains response data for the listByDatabase operation.
 */
export type ServiceTierAdvisorsListByDatabaseResponse = ServiceTierAdvisorListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServiceTierAdvisorListResult;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type TransparentDataEncryptionsCreateOrUpdateResponse = TransparentDataEncryption & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TransparentDataEncryption;
    };
};

/**
 * Contains response data for the get operation.
 */
export type TransparentDataEncryptionsGetResponse = TransparentDataEncryption & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TransparentDataEncryption;
    };
};

/**
 * Contains response data for the listByConfiguration operation.
 */
export type TransparentDataEncryptionActivitiesListByConfigurationResponse = TransparentDataEncryptionActivityListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TransparentDataEncryptionActivityListResult;
    };
};

/**
 * Contains response data for the listByServer operation.
 */
export type ServerUsagesListByServerResponse = ServerUsageListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerUsageListResult;
    };
};

/**
 * Contains response data for the listByDatabase operation.
 */
export type DatabaseUsagesListByDatabaseResponse = DatabaseUsageListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseUsageListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type DatabaseAutomaticTuningGetResponse = DatabaseAutomaticTuning & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseAutomaticTuning;
    };
};

/**
 * Contains response data for the update operation.
 */
export type DatabaseAutomaticTuningUpdateResponse = DatabaseAutomaticTuning & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseAutomaticTuning;
    };
};

/**
 * Contains response data for the listByServer operation.
 */
export type EncryptionProtectorsListByServerResponse = EncryptionProtectorListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EncryptionProtectorListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type EncryptionProtectorsGetResponse = EncryptionProtector & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EncryptionProtector;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type EncryptionProtectorsCreateOrUpdateResponse = EncryptionProtector & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EncryptionProtector;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type EncryptionProtectorsBeginCreateOrUpdateResponse = EncryptionProtector & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EncryptionProtector;
    };
};

/**
 * Contains response data for the listByServerNext operation.
 */
export type EncryptionProtectorsListByServerNextResponse = EncryptionProtectorListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EncryptionProtectorListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type FailoverGroupsGetResponse = FailoverGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FailoverGroup;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type FailoverGroupsCreateOrUpdateResponse = FailoverGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FailoverGroup;
    };
};

/**
 * Contains response data for the update operation.
 */
export type FailoverGroupsUpdateResponse = FailoverGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FailoverGroup;
    };
};

/**
 * Contains response data for the listByServer operation.
 */
export type FailoverGroupsListByServerResponse = FailoverGroupListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FailoverGroupListResult;
    };
};

/**
 * Contains response data for the failover operation.
 */
export type FailoverGroupsFailoverResponse = FailoverGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FailoverGroup;
    };
};

/**
 * Contains response data for the forceFailoverAllowDataLoss operation.
 */
export type FailoverGroupsForceFailoverAllowDataLossResponse = FailoverGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FailoverGroup;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type FailoverGroupsBeginCreateOrUpdateResponse = FailoverGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FailoverGroup;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type FailoverGroupsBeginUpdateResponse = FailoverGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FailoverGroup;
    };
};

/**
 * Contains response data for the beginFailover operation.
 */
export type FailoverGroupsBeginFailoverResponse = FailoverGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FailoverGroup;
    };
};

/**
 * Contains response data for the beginForceFailoverAllowDataLoss operation.
 */
export type FailoverGroupsBeginForceFailoverAllowDataLossResponse = FailoverGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FailoverGroup;
    };
};

/**
 * Contains response data for the listByServerNext operation.
 */
export type FailoverGroupsListByServerNextResponse = FailoverGroupListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FailoverGroupListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type ManagedInstancesListResponse = ManagedInstanceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedInstanceListResult;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type ManagedInstancesListByResourceGroupResponse = ManagedInstanceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedInstanceListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ManagedInstancesGetResponse = ManagedInstance & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedInstance;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ManagedInstancesCreateOrUpdateResponse = ManagedInstance & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedInstance;
    };
};

/**
 * Contains response data for the update operation.
 */
export type ManagedInstancesUpdateResponse = ManagedInstance & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedInstance;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type ManagedInstancesBeginCreateOrUpdateResponse = ManagedInstance & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedInstance;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type ManagedInstancesBeginUpdateResponse = ManagedInstance & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedInstance;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type ManagedInstancesListNextResponse = ManagedInstanceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedInstanceListResult;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type ManagedInstancesListByResourceGroupNextResponse = ManagedInstanceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedInstanceListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type OperationsListNextResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationListResult;
    };
};

/**
 * Contains response data for the listByServer operation.
 */
export type ServerKeysListByServerResponse = ServerKeyListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerKeyListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ServerKeysGetResponse = ServerKey & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerKey;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ServerKeysCreateOrUpdateResponse = ServerKey & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerKey;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type ServerKeysBeginCreateOrUpdateResponse = ServerKey & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerKey;
    };
};

/**
 * Contains response data for the listByServerNext operation.
 */
export type ServerKeysListByServerNextResponse = ServerKeyListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerKeyListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type SyncAgentsGetResponse = SyncAgent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncAgent;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type SyncAgentsCreateOrUpdateResponse = SyncAgent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncAgent;
    };
};

/**
 * Contains response data for the listByServer operation.
 */
export type SyncAgentsListByServerResponse = SyncAgentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncAgentListResult;
    };
};

/**
 * Contains response data for the generateKey operation.
 */
export type SyncAgentsGenerateKeyResponse = SyncAgentKeyProperties & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncAgentKeyProperties;
    };
};

/**
 * Contains response data for the listLinkedDatabases operation.
 */
export type SyncAgentsListLinkedDatabasesResponse = SyncAgentLinkedDatabaseListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncAgentLinkedDatabaseListResult;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type SyncAgentsBeginCreateOrUpdateResponse = SyncAgent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncAgent;
    };
};

/**
 * Contains response data for the listByServerNext operation.
 */
export type SyncAgentsListByServerNextResponse = SyncAgentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncAgentListResult;
    };
};

/**
 * Contains response data for the listLinkedDatabasesNext operation.
 */
export type SyncAgentsListLinkedDatabasesNextResponse = SyncAgentLinkedDatabaseListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncAgentLinkedDatabaseListResult;
    };
};

/**
 * Contains response data for the listSyncDatabaseIds operation.
 */
export type SyncGroupsListSyncDatabaseIdsResponse = SyncDatabaseIdListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncDatabaseIdListResult;
    };
};

/**
 * Contains response data for the listHubSchemas operation.
 */
export type SyncGroupsListHubSchemasResponse = SyncFullSchemaPropertiesListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncFullSchemaPropertiesListResult;
    };
};

/**
 * Contains response data for the listLogs operation.
 */
export type SyncGroupsListLogsResponse = SyncGroupLogListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncGroupLogListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type SyncGroupsGetResponse = SyncGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncGroup;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type SyncGroupsCreateOrUpdateResponse = SyncGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncGroup;
    };
};

/**
 * Contains response data for the update operation.
 */
export type SyncGroupsUpdateResponse = SyncGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncGroup;
    };
};

/**
 * Contains response data for the listByDatabase operation.
 */
export type SyncGroupsListByDatabaseResponse = SyncGroupListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncGroupListResult;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type SyncGroupsBeginCreateOrUpdateResponse = SyncGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncGroup;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type SyncGroupsBeginUpdateResponse = SyncGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncGroup;
    };
};

/**
 * Contains response data for the listSyncDatabaseIdsNext operation.
 */
export type SyncGroupsListSyncDatabaseIdsNextResponse = SyncDatabaseIdListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncDatabaseIdListResult;
    };
};

/**
 * Contains response data for the listHubSchemasNext operation.
 */
export type SyncGroupsListHubSchemasNextResponse = SyncFullSchemaPropertiesListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncFullSchemaPropertiesListResult;
    };
};

/**
 * Contains response data for the listLogsNext operation.
 */
export type SyncGroupsListLogsNextResponse = SyncGroupLogListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncGroupLogListResult;
    };
};

/**
 * Contains response data for the listByDatabaseNext operation.
 */
export type SyncGroupsListByDatabaseNextResponse = SyncGroupListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncGroupListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type SyncMembersGetResponse = SyncMember & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncMember;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type SyncMembersCreateOrUpdateResponse = SyncMember & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncMember;
    };
};

/**
 * Contains response data for the update operation.
 */
export type SyncMembersUpdateResponse = SyncMember & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncMember;
    };
};

/**
 * Contains response data for the listBySyncGroup operation.
 */
export type SyncMembersListBySyncGroupResponse = SyncMemberListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncMemberListResult;
    };
};

/**
 * Contains response data for the listMemberSchemas operation.
 */
export type SyncMembersListMemberSchemasResponse = SyncFullSchemaPropertiesListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncFullSchemaPropertiesListResult;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type SyncMembersBeginCreateOrUpdateResponse = SyncMember & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncMember;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type SyncMembersBeginUpdateResponse = SyncMember & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncMember;
    };
};

/**
 * Contains response data for the listBySyncGroupNext operation.
 */
export type SyncMembersListBySyncGroupNextResponse = SyncMemberListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncMemberListResult;
    };
};

/**
 * Contains response data for the listMemberSchemasNext operation.
 */
export type SyncMembersListMemberSchemasNextResponse = SyncFullSchemaPropertiesListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncFullSchemaPropertiesListResult;
    };
};

/**
 * Contains response data for the listByLocation operation.
 */
export type SubscriptionUsagesListByLocationResponse = SubscriptionUsageListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SubscriptionUsageListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type SubscriptionUsagesGetResponse = SubscriptionUsage & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SubscriptionUsage;
    };
};

/**
 * Contains response data for the listByLocationNext operation.
 */
export type SubscriptionUsagesListByLocationNextResponse = SubscriptionUsageListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SubscriptionUsageListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type VirtualNetworkRulesGetResponse = VirtualNetworkRule & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualNetworkRule;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type VirtualNetworkRulesCreateOrUpdateResponse = VirtualNetworkRule & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualNetworkRule;
    };
};

/**
 * Contains response data for the listByServer operation.
 */
export type VirtualNetworkRulesListByServerResponse = VirtualNetworkRuleListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualNetworkRuleListResult;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type VirtualNetworkRulesBeginCreateOrUpdateResponse = VirtualNetworkRule & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualNetworkRule;
    };
};

/**
 * Contains response data for the listByServerNext operation.
 */
export type VirtualNetworkRulesListByServerNextResponse = VirtualNetworkRuleListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualNetworkRuleListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ExtendedDatabaseBlobAuditingPoliciesGetResponse = ExtendedDatabaseBlobAuditingPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ExtendedDatabaseBlobAuditingPolicy;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ExtendedDatabaseBlobAuditingPoliciesCreateOrUpdateResponse = ExtendedDatabaseBlobAuditingPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ExtendedDatabaseBlobAuditingPolicy;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ExtendedServerBlobAuditingPoliciesGetResponse = ExtendedServerBlobAuditingPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ExtendedServerBlobAuditingPolicy;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ExtendedServerBlobAuditingPoliciesCreateOrUpdateResponse = ExtendedServerBlobAuditingPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ExtendedServerBlobAuditingPolicy;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type ExtendedServerBlobAuditingPoliciesBeginCreateOrUpdateResponse = ExtendedServerBlobAuditingPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ExtendedServerBlobAuditingPolicy;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ServerBlobAuditingPoliciesGetResponse = ServerBlobAuditingPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerBlobAuditingPolicy;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ServerBlobAuditingPoliciesCreateOrUpdateResponse = ServerBlobAuditingPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerBlobAuditingPolicy;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type ServerBlobAuditingPoliciesBeginCreateOrUpdateResponse = ServerBlobAuditingPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerBlobAuditingPolicy;
    };
};

/**
 * Contains response data for the get operation.
 */
export type DatabaseBlobAuditingPoliciesGetResponse = DatabaseBlobAuditingPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseBlobAuditingPolicy;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type DatabaseBlobAuditingPoliciesCreateOrUpdateResponse = DatabaseBlobAuditingPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseBlobAuditingPolicy;
    };
};

/**
 * Contains response data for the get operation.
 */
export type DatabaseVulnerabilityAssessmentRuleBaselinesGetResponse = DatabaseVulnerabilityAssessmentRuleBaseline & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseVulnerabilityAssessmentRuleBaseline;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type DatabaseVulnerabilityAssessmentRuleBaselinesCreateOrUpdateResponse = DatabaseVulnerabilityAssessmentRuleBaseline & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseVulnerabilityAssessmentRuleBaseline;
    };
};

/**
 * Contains response data for the get operation.
 */
export type DatabaseVulnerabilityAssessmentsGetResponse = DatabaseVulnerabilityAssessment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseVulnerabilityAssessment;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type DatabaseVulnerabilityAssessmentsCreateOrUpdateResponse = DatabaseVulnerabilityAssessment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseVulnerabilityAssessment;
    };
};

/**
 * Contains response data for the listByDatabase operation.
 */
export type DatabaseVulnerabilityAssessmentsListByDatabaseResponse = DatabaseVulnerabilityAssessmentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseVulnerabilityAssessmentListResult;
    };
};

/**
 * Contains response data for the listByDatabaseNext operation.
 */
export type DatabaseVulnerabilityAssessmentsListByDatabaseNextResponse = DatabaseVulnerabilityAssessmentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseVulnerabilityAssessmentListResult;
    };
};

/**
 * Contains response data for the listByServer operation.
 */
export type JobAgentsListByServerResponse = JobAgentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobAgentListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type JobAgentsGetResponse = JobAgent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobAgent;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type JobAgentsCreateOrUpdateResponse = JobAgent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobAgent;
    };
};

/**
 * Contains response data for the update operation.
 */
export type JobAgentsUpdateResponse = JobAgent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobAgent;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type JobAgentsBeginCreateOrUpdateResponse = JobAgent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobAgent;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type JobAgentsBeginUpdateResponse = JobAgent & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobAgent;
    };
};

/**
 * Contains response data for the listByServerNext operation.
 */
export type JobAgentsListByServerNextResponse = JobAgentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobAgentListResult;
    };
};

/**
 * Contains response data for the listByAgent operation.
 */
export type JobCredentialsListByAgentResponse = JobCredentialListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobCredentialListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type JobCredentialsGetResponse = JobCredential & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobCredential;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type JobCredentialsCreateOrUpdateResponse = JobCredential & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobCredential;
    };
};

/**
 * Contains response data for the listByAgentNext operation.
 */
export type JobCredentialsListByAgentNextResponse = JobCredentialListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobCredentialListResult;
    };
};

/**
 * Contains response data for the listByAgent operation.
 */
export type JobExecutionsListByAgentResponse = JobExecutionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobExecutionListResult;
    };
};

/**
 * Contains response data for the create operation.
 */
export type JobExecutionsCreateResponse = JobExecution & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobExecution;
    };
};

/**
 * Contains response data for the listByJob operation.
 */
export type JobExecutionsListByJobResponse = JobExecutionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobExecutionListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type JobExecutionsGetResponse = JobExecution & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobExecution;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type JobExecutionsCreateOrUpdateResponse = JobExecution & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobExecution;
    };
};

/**
 * Contains response data for the beginCreate operation.
 */
export type JobExecutionsBeginCreateResponse = JobExecution & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobExecution;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type JobExecutionsBeginCreateOrUpdateResponse = JobExecution & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobExecution;
    };
};

/**
 * Contains response data for the listByAgentNext operation.
 */
export type JobExecutionsListByAgentNextResponse = JobExecutionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobExecutionListResult;
    };
};

/**
 * Contains response data for the listByJobNext operation.
 */
export type JobExecutionsListByJobNextResponse = JobExecutionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobExecutionListResult;
    };
};

/**
 * Contains response data for the listByAgent operation.
 */
export type JobsListByAgentResponse = JobListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type JobsGetResponse = Job & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Job;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type JobsCreateOrUpdateResponse = Job & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Job;
    };
};

/**
 * Contains response data for the listByAgentNext operation.
 */
export type JobsListByAgentNextResponse = JobListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobListResult;
    };
};

/**
 * Contains response data for the listByJobExecution operation.
 */
export type JobStepExecutionsListByJobExecutionResponse = JobExecutionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobExecutionListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type JobStepExecutionsGetResponse = JobExecution & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobExecution;
    };
};

/**
 * Contains response data for the listByJobExecutionNext operation.
 */
export type JobStepExecutionsListByJobExecutionNextResponse = JobExecutionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobExecutionListResult;
    };
};

/**
 * Contains response data for the listByVersion operation.
 */
export type JobStepsListByVersionResponse = JobStepListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobStepListResult;
    };
};

/**
 * Contains response data for the getByVersion operation.
 */
export type JobStepsGetByVersionResponse = JobStep & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobStep;
    };
};

/**
 * Contains response data for the listByJob operation.
 */
export type JobStepsListByJobResponse = JobStepListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobStepListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type JobStepsGetResponse = JobStep & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobStep;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type JobStepsCreateOrUpdateResponse = JobStep & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobStep;
    };
};

/**
 * Contains response data for the listByVersionNext operation.
 */
export type JobStepsListByVersionNextResponse = JobStepListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobStepListResult;
    };
};

/**
 * Contains response data for the listByJobNext operation.
 */
export type JobStepsListByJobNextResponse = JobStepListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobStepListResult;
    };
};

/**
 * Contains response data for the listByJobExecution operation.
 */
export type JobTargetExecutionsListByJobExecutionResponse = JobExecutionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobExecutionListResult;
    };
};

/**
 * Contains response data for the listByStep operation.
 */
export type JobTargetExecutionsListByStepResponse = JobExecutionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobExecutionListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type JobTargetExecutionsGetResponse = JobExecution & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobExecution;
    };
};

/**
 * Contains response data for the listByJobExecutionNext operation.
 */
export type JobTargetExecutionsListByJobExecutionNextResponse = JobExecutionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobExecutionListResult;
    };
};

/**
 * Contains response data for the listByStepNext operation.
 */
export type JobTargetExecutionsListByStepNextResponse = JobExecutionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobExecutionListResult;
    };
};

/**
 * Contains response data for the listByAgent operation.
 */
export type JobTargetGroupsListByAgentResponse = JobTargetGroupListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobTargetGroupListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type JobTargetGroupsGetResponse = JobTargetGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobTargetGroup;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type JobTargetGroupsCreateOrUpdateResponse = JobTargetGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobTargetGroup;
    };
};

/**
 * Contains response data for the listByAgentNext operation.
 */
export type JobTargetGroupsListByAgentNextResponse = JobTargetGroupListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobTargetGroupListResult;
    };
};

/**
 * Contains response data for the listByJob operation.
 */
export type JobVersionsListByJobResponse = JobVersionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobVersionListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type JobVersionsGetResponse = JobVersion & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobVersion;
    };
};

/**
 * Contains response data for the listByJobNext operation.
 */
export type JobVersionsListByJobNextResponse = JobVersionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobVersionListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type LongTermRetentionBackupsGetResponse = LongTermRetentionBackup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LongTermRetentionBackup;
    };
};

/**
 * Contains response data for the listByDatabase operation.
 */
export type LongTermRetentionBackupsListByDatabaseResponse = LongTermRetentionBackupListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LongTermRetentionBackupListResult;
    };
};

/**
 * Contains response data for the listByLocation operation.
 */
export type LongTermRetentionBackupsListByLocationResponse = LongTermRetentionBackupListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LongTermRetentionBackupListResult;
    };
};

/**
 * Contains response data for the listByServer operation.
 */
export type LongTermRetentionBackupsListByServerResponse = LongTermRetentionBackupListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LongTermRetentionBackupListResult;
    };
};

/**
 * Contains response data for the listByDatabaseNext operation.
 */
export type LongTermRetentionBackupsListByDatabaseNextResponse = LongTermRetentionBackupListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LongTermRetentionBackupListResult;
    };
};

/**
 * Contains response data for the listByLocationNext operation.
 */
export type LongTermRetentionBackupsListByLocationNextResponse = LongTermRetentionBackupListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LongTermRetentionBackupListResult;
    };
};

/**
 * Contains response data for the listByServerNext operation.
 */
export type LongTermRetentionBackupsListByServerNextResponse = LongTermRetentionBackupListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LongTermRetentionBackupListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type BackupLongTermRetentionPoliciesGetResponse = BackupLongTermRetentionPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupLongTermRetentionPolicy;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type BackupLongTermRetentionPoliciesCreateOrUpdateResponse = BackupLongTermRetentionPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupLongTermRetentionPolicy;
    };
};

/**
 * Contains response data for the listByDatabase operation.
 */
export type BackupLongTermRetentionPoliciesListByDatabaseResponse = BackupLongTermRetentionPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupLongTermRetentionPolicy;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type BackupLongTermRetentionPoliciesBeginCreateOrUpdateResponse = BackupLongTermRetentionPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupLongTermRetentionPolicy;
    };
};

/**
 * Contains response data for the listByInstance operation.
 */
export type ManagedDatabasesListByInstanceResponse = ManagedDatabaseListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedDatabaseListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ManagedDatabasesGetResponse = ManagedDatabase & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedDatabase;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ManagedDatabasesCreateOrUpdateResponse = ManagedDatabase & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedDatabase;
    };
};

/**
 * Contains response data for the update operation.
 */
export type ManagedDatabasesUpdateResponse = ManagedDatabase & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedDatabase;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type ManagedDatabasesBeginCreateOrUpdateResponse = ManagedDatabase & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedDatabase;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type ManagedDatabasesBeginUpdateResponse = ManagedDatabase & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedDatabase;
    };
};

/**
 * Contains response data for the listByInstanceNext operation.
 */
export type ManagedDatabasesListByInstanceNextResponse = ManagedDatabaseListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedDatabaseListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ServerAutomaticTuningGetResponse = ServerAutomaticTuning & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerAutomaticTuning;
    };
};

/**
 * Contains response data for the update operation.
 */
export type ServerAutomaticTuningUpdateResponse = ServerAutomaticTuning & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerAutomaticTuning;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ServerDnsAliasesGetResponse = ServerDnsAlias & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerDnsAlias;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ServerDnsAliasesCreateOrUpdateResponse = ServerDnsAlias & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerDnsAlias;
    };
};

/**
 * Contains response data for the listByServer operation.
 */
export type ServerDnsAliasesListByServerResponse = ServerDnsAliasListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerDnsAliasListResult;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type ServerDnsAliasesBeginCreateOrUpdateResponse = ServerDnsAlias & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerDnsAlias;
    };
};

/**
 * Contains response data for the listByServerNext operation.
 */
export type ServerDnsAliasesListByServerNextResponse = ServerDnsAliasListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerDnsAliasListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ServerSecurityAlertPoliciesGetResponse = ServerSecurityAlertPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerSecurityAlertPolicy;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ServerSecurityAlertPoliciesCreateOrUpdateResponse = ServerSecurityAlertPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerSecurityAlertPolicy;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type ServerSecurityAlertPoliciesBeginCreateOrUpdateResponse = ServerSecurityAlertPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerSecurityAlertPolicy;
    };
};

/**
 * Contains response data for the listByDatabase operation.
 */
export type RestorePointsListByDatabaseResponse = RestorePointListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RestorePointListResult;
    };
};

/**
 * Contains response data for the create operation.
 */
export type RestorePointsCreateResponse = RestorePoint & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RestorePoint;
    };
};

/**
 * Contains response data for the get operation.
 */
export type RestorePointsGetResponse = RestorePoint & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RestorePoint;
    };
};

/**
 * Contains response data for the beginCreate operation.
 */
export type RestorePointsBeginCreateResponse = RestorePoint & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RestorePoint;
    };
};

/**
 * Contains response data for the listByDatabase operation.
 */
export type DatabaseOperationsListByDatabaseResponse = DatabaseOperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseOperationListResult;
    };
};

/**
 * Contains response data for the listByDatabaseNext operation.
 */
export type DatabaseOperationsListByDatabaseNextResponse = DatabaseOperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseOperationListResult;
    };
};

/**
 * Contains response data for the listByElasticPool operation.
 */
export type ElasticPoolOperationsListByElasticPoolResponse = ElasticPoolOperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ElasticPoolOperationListResult;
    };
};

/**
 * Contains response data for the listByElasticPoolNext operation.
 */
export type ElasticPoolOperationsListByElasticPoolNextResponse = ElasticPoolOperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ElasticPoolOperationListResult;
    };
};

/**
 * Contains response data for the listByLocation operation.
 */
export type CapabilitiesListByLocationResponse = LocationCapabilities & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LocationCapabilities;
    };
};

/**
 * Contains response data for the get operation.
 */
export type DatabaseVulnerabilityAssessmentScansGetResponse = VulnerabilityAssessmentScanRecord & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VulnerabilityAssessmentScanRecord;
    };
};

/**
 * Contains response data for the listByDatabase operation.
 */
export type DatabaseVulnerabilityAssessmentScansListByDatabaseResponse = VulnerabilityAssessmentScanRecordListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VulnerabilityAssessmentScanRecordListResult;
    };
};

/**
 * Contains response data for the exportMethod operation.
 */
export type DatabaseVulnerabilityAssessmentScansExportMethodResponse = DatabaseVulnerabilityAssessmentScansExport & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseVulnerabilityAssessmentScansExport;
    };
};

/**
 * Contains response data for the listByDatabaseNext operation.
 */
export type DatabaseVulnerabilityAssessmentScansListByDatabaseNextResponse = VulnerabilityAssessmentScanRecordListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VulnerabilityAssessmentScanRecordListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ManagedDatabaseVulnerabilityAssessmentRuleBaselinesGetResponse = DatabaseVulnerabilityAssessmentRuleBaseline & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseVulnerabilityAssessmentRuleBaseline;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ManagedDatabaseVulnerabilityAssessmentRuleBaselinesCreateOrUpdateResponse = DatabaseVulnerabilityAssessmentRuleBaseline & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseVulnerabilityAssessmentRuleBaseline;
    };
};

/**
 * Contains response data for the listByDatabase operation.
 */
export type ManagedDatabaseVulnerabilityAssessmentScansListByDatabaseResponse = VulnerabilityAssessmentScanRecordListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VulnerabilityAssessmentScanRecordListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ManagedDatabaseVulnerabilityAssessmentScansGetResponse = VulnerabilityAssessmentScanRecord & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VulnerabilityAssessmentScanRecord;
    };
};

/**
 * Contains response data for the exportMethod operation.
 */
export type ManagedDatabaseVulnerabilityAssessmentScansExportMethodResponse = DatabaseVulnerabilityAssessmentScansExport & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseVulnerabilityAssessmentScansExport;
    };
};

/**
 * Contains response data for the listByDatabaseNext operation.
 */
export type ManagedDatabaseVulnerabilityAssessmentScansListByDatabaseNextResponse = VulnerabilityAssessmentScanRecordListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VulnerabilityAssessmentScanRecordListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ManagedDatabaseVulnerabilityAssessmentsGetResponse = DatabaseVulnerabilityAssessment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseVulnerabilityAssessment;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ManagedDatabaseVulnerabilityAssessmentsCreateOrUpdateResponse = DatabaseVulnerabilityAssessment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseVulnerabilityAssessment;
    };
};

/**
 * Contains response data for the listByDatabase operation.
 */
export type ManagedDatabaseVulnerabilityAssessmentsListByDatabaseResponse = DatabaseVulnerabilityAssessmentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseVulnerabilityAssessmentListResult;
    };
};

/**
 * Contains response data for the listByDatabaseNext operation.
 */
export type ManagedDatabaseVulnerabilityAssessmentsListByDatabaseNextResponse = DatabaseVulnerabilityAssessmentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DatabaseVulnerabilityAssessmentListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type InstanceFailoverGroupsGetResponse = InstanceFailoverGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: InstanceFailoverGroup;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type InstanceFailoverGroupsCreateOrUpdateResponse = InstanceFailoverGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: InstanceFailoverGroup;
    };
};

/**
 * Contains response data for the listByLocation operation.
 */
export type InstanceFailoverGroupsListByLocationResponse = InstanceFailoverGroupListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: InstanceFailoverGroupListResult;
    };
};

/**
 * Contains response data for the failover operation.
 */
export type InstanceFailoverGroupsFailoverResponse = InstanceFailoverGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: InstanceFailoverGroup;
    };
};

/**
 * Contains response data for the forceFailoverAllowDataLoss operation.
 */
export type InstanceFailoverGroupsForceFailoverAllowDataLossResponse = InstanceFailoverGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: InstanceFailoverGroup;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type InstanceFailoverGroupsBeginCreateOrUpdateResponse = InstanceFailoverGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: InstanceFailoverGroup;
    };
};

/**
 * Contains response data for the beginFailover operation.
 */
export type InstanceFailoverGroupsBeginFailoverResponse = InstanceFailoverGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: InstanceFailoverGroup;
    };
};

/**
 * Contains response data for the beginForceFailoverAllowDataLoss operation.
 */
export type InstanceFailoverGroupsBeginForceFailoverAllowDataLossResponse = InstanceFailoverGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: InstanceFailoverGroup;
    };
};

/**
 * Contains response data for the listByLocationNext operation.
 */
export type InstanceFailoverGroupsListByLocationNextResponse = InstanceFailoverGroupListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: InstanceFailoverGroupListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type BackupShortTermRetentionPoliciesGetResponse = BackupShortTermRetentionPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupShortTermRetentionPolicy;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type BackupShortTermRetentionPoliciesCreateOrUpdateResponse = BackupShortTermRetentionPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupShortTermRetentionPolicy;
    };
};

/**
 * Contains response data for the update operation.
 */
export type BackupShortTermRetentionPoliciesUpdateResponse = BackupShortTermRetentionPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupShortTermRetentionPolicy;
    };
};

/**
 * Contains response data for the listByDatabase operation.
 */
export type BackupShortTermRetentionPoliciesListByDatabaseResponse = BackupShortTermRetentionPolicyListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupShortTermRetentionPolicyListResult;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type BackupShortTermRetentionPoliciesBeginCreateOrUpdateResponse = BackupShortTermRetentionPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupShortTermRetentionPolicy;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type BackupShortTermRetentionPoliciesBeginUpdateResponse = BackupShortTermRetentionPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupShortTermRetentionPolicy;
    };
};

/**
 * Contains response data for the listByDatabaseNext operation.
 */
export type BackupShortTermRetentionPoliciesListByDatabaseNextResponse = BackupShortTermRetentionPolicyListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupShortTermRetentionPolicyListResult;
    };
};

/**
 * Contains response data for the listByInstance operation.
 */
export type ManagedInstanceKeysListByInstanceResponse = ManagedInstanceKeyListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedInstanceKeyListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ManagedInstanceKeysGetResponse = ManagedInstanceKey & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedInstanceKey;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ManagedInstanceKeysCreateOrUpdateResponse = ManagedInstanceKey & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedInstanceKey;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type ManagedInstanceKeysBeginCreateOrUpdateResponse = ManagedInstanceKey & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedInstanceKey;
    };
};

/**
 * Contains response data for the listByInstanceNext operation.
 */
export type ManagedInstanceKeysListByInstanceNextResponse = ManagedInstanceKeyListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedInstanceKeyListResult;
    };
};

/**
 * Contains response data for the listByInstance operation.
 */
export type ManagedInstanceEncryptionProtectorsListByInstanceResponse = ManagedInstanceEncryptionProtectorListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedInstanceEncryptionProtectorListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ManagedInstanceEncryptionProtectorsGetResponse = ManagedInstanceEncryptionProtector & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedInstanceEncryptionProtector;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ManagedInstanceEncryptionProtectorsCreateOrUpdateResponse = ManagedInstanceEncryptionProtector & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedInstanceEncryptionProtector;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type ManagedInstanceEncryptionProtectorsBeginCreateOrUpdateResponse = ManagedInstanceEncryptionProtector & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedInstanceEncryptionProtector;
    };
};

/**
 * Contains response data for the listByInstanceNext operation.
 */
export type ManagedInstanceEncryptionProtectorsListByInstanceNextResponse = ManagedInstanceEncryptionProtectorListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedInstanceEncryptionProtectorListResult;
    };
};
