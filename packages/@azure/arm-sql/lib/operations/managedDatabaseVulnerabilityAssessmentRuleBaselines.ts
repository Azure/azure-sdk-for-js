/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/managedDatabaseVulnerabilityAssessmentRuleBaselinesMappers";
import * as Parameters from "../models/parameters";
import { SqlManagementClientContext } from "../sqlManagementClientContext";

/** Class representing a ManagedDatabaseVulnerabilityAssessmentRuleBaselines. */
export class ManagedDatabaseVulnerabilityAssessmentRuleBaselines {
  private readonly client: SqlManagementClientContext;

  /**
   * Create a ManagedDatabaseVulnerabilityAssessmentRuleBaselines.
   * @param {SqlManagementClientContext} client Reference to the service client.
   */
  constructor(client: SqlManagementClientContext) {
    this.client = client;
  }

  /**
   * Gets a database's vulnerability assessment rule baseline.
   * @param resourceGroupName The name of the resource group that contains the resource. You can
   * obtain this value from the Azure Resource Manager API or the portal.
   * @param managedInstanceName The name of the managed instance.
   * @param databaseName The name of the database for which the vulnerability assessment rule
   * baseline is defined.
   * @param ruleId The vulnerability assessment rule ID.
   * @param baselineName The name of the vulnerability assessment rule baseline (default implies a
   * baseline on a database level rule and master for server level rule). Possible values include:
   * 'master', 'default'
   * @param [options] The optional parameters
   * @returns Promise<Models.ManagedDatabaseVulnerabilityAssessmentRuleBaselinesGetResponse>
   */
  get(resourceGroupName: string, managedInstanceName: string, databaseName: string, ruleId: string, baselineName: Models.VulnerabilityAssessmentPolicyBaselineName, options?: msRest.RequestOptionsBase): Promise<Models.ManagedDatabaseVulnerabilityAssessmentRuleBaselinesGetResponse>;
  /**
   * @param resourceGroupName The name of the resource group that contains the resource. You can
   * obtain this value from the Azure Resource Manager API or the portal.
   * @param managedInstanceName The name of the managed instance.
   * @param databaseName The name of the database for which the vulnerability assessment rule
   * baseline is defined.
   * @param ruleId The vulnerability assessment rule ID.
   * @param baselineName The name of the vulnerability assessment rule baseline (default implies a
   * baseline on a database level rule and master for server level rule). Possible values include:
   * 'master', 'default'
   * @param callback The callback
   */
  get(resourceGroupName: string, managedInstanceName: string, databaseName: string, ruleId: string, baselineName: Models.VulnerabilityAssessmentPolicyBaselineName, callback: msRest.ServiceCallback<Models.DatabaseVulnerabilityAssessmentRuleBaseline>): void;
  /**
   * @param resourceGroupName The name of the resource group that contains the resource. You can
   * obtain this value from the Azure Resource Manager API or the portal.
   * @param managedInstanceName The name of the managed instance.
   * @param databaseName The name of the database for which the vulnerability assessment rule
   * baseline is defined.
   * @param ruleId The vulnerability assessment rule ID.
   * @param baselineName The name of the vulnerability assessment rule baseline (default implies a
   * baseline on a database level rule and master for server level rule). Possible values include:
   * 'master', 'default'
   * @param options The optional parameters
   * @param callback The callback
   */
  get(resourceGroupName: string, managedInstanceName: string, databaseName: string, ruleId: string, baselineName: Models.VulnerabilityAssessmentPolicyBaselineName, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DatabaseVulnerabilityAssessmentRuleBaseline>): void;
  get(resourceGroupName: string, managedInstanceName: string, databaseName: string, ruleId: string, baselineName: Models.VulnerabilityAssessmentPolicyBaselineName, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.DatabaseVulnerabilityAssessmentRuleBaseline>, callback?: msRest.ServiceCallback<Models.DatabaseVulnerabilityAssessmentRuleBaseline>): Promise<Models.ManagedDatabaseVulnerabilityAssessmentRuleBaselinesGetResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        managedInstanceName,
        databaseName,
        ruleId,
        baselineName,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.ManagedDatabaseVulnerabilityAssessmentRuleBaselinesGetResponse>;
  }

  /**
   * Creates or updates a database's vulnerability assessment rule baseline.
   * @param resourceGroupName The name of the resource group that contains the resource. You can
   * obtain this value from the Azure Resource Manager API or the portal.
   * @param managedInstanceName The name of the managed instance.
   * @param databaseName The name of the database for which the vulnerability assessment rule
   * baseline is defined.
   * @param ruleId The vulnerability assessment rule ID.
   * @param baselineName The name of the vulnerability assessment rule baseline (default implies a
   * baseline on a database level rule and master for server level rule). Possible values include:
   * 'master', 'default'
   * @param parameters The requested rule baseline resource.
   * @param [options] The optional parameters
   * @returns
   * Promise<Models.ManagedDatabaseVulnerabilityAssessmentRuleBaselinesCreateOrUpdateResponse>
   */
  createOrUpdate(resourceGroupName: string, managedInstanceName: string, databaseName: string, ruleId: string, baselineName: Models.VulnerabilityAssessmentPolicyBaselineName, parameters: Models.DatabaseVulnerabilityAssessmentRuleBaseline, options?: msRest.RequestOptionsBase): Promise<Models.ManagedDatabaseVulnerabilityAssessmentRuleBaselinesCreateOrUpdateResponse>;
  /**
   * @param resourceGroupName The name of the resource group that contains the resource. You can
   * obtain this value from the Azure Resource Manager API or the portal.
   * @param managedInstanceName The name of the managed instance.
   * @param databaseName The name of the database for which the vulnerability assessment rule
   * baseline is defined.
   * @param ruleId The vulnerability assessment rule ID.
   * @param baselineName The name of the vulnerability assessment rule baseline (default implies a
   * baseline on a database level rule and master for server level rule). Possible values include:
   * 'master', 'default'
   * @param parameters The requested rule baseline resource.
   * @param callback The callback
   */
  createOrUpdate(resourceGroupName: string, managedInstanceName: string, databaseName: string, ruleId: string, baselineName: Models.VulnerabilityAssessmentPolicyBaselineName, parameters: Models.DatabaseVulnerabilityAssessmentRuleBaseline, callback: msRest.ServiceCallback<Models.DatabaseVulnerabilityAssessmentRuleBaseline>): void;
  /**
   * @param resourceGroupName The name of the resource group that contains the resource. You can
   * obtain this value from the Azure Resource Manager API or the portal.
   * @param managedInstanceName The name of the managed instance.
   * @param databaseName The name of the database for which the vulnerability assessment rule
   * baseline is defined.
   * @param ruleId The vulnerability assessment rule ID.
   * @param baselineName The name of the vulnerability assessment rule baseline (default implies a
   * baseline on a database level rule and master for server level rule). Possible values include:
   * 'master', 'default'
   * @param parameters The requested rule baseline resource.
   * @param options The optional parameters
   * @param callback The callback
   */
  createOrUpdate(resourceGroupName: string, managedInstanceName: string, databaseName: string, ruleId: string, baselineName: Models.VulnerabilityAssessmentPolicyBaselineName, parameters: Models.DatabaseVulnerabilityAssessmentRuleBaseline, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DatabaseVulnerabilityAssessmentRuleBaseline>): void;
  createOrUpdate(resourceGroupName: string, managedInstanceName: string, databaseName: string, ruleId: string, baselineName: Models.VulnerabilityAssessmentPolicyBaselineName, parameters: Models.DatabaseVulnerabilityAssessmentRuleBaseline, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.DatabaseVulnerabilityAssessmentRuleBaseline>, callback?: msRest.ServiceCallback<Models.DatabaseVulnerabilityAssessmentRuleBaseline>): Promise<Models.ManagedDatabaseVulnerabilityAssessmentRuleBaselinesCreateOrUpdateResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        managedInstanceName,
        databaseName,
        ruleId,
        baselineName,
        parameters,
        options
      },
      createOrUpdateOperationSpec,
      callback) as Promise<Models.ManagedDatabaseVulnerabilityAssessmentRuleBaselinesCreateOrUpdateResponse>;
  }

  /**
   * Removes the database's vulnerability assessment rule baseline.
   * @param resourceGroupName The name of the resource group that contains the resource. You can
   * obtain this value from the Azure Resource Manager API or the portal.
   * @param managedInstanceName The name of the managed instance.
   * @param databaseName The name of the database for which the vulnerability assessment rule
   * baseline is defined.
   * @param ruleId The vulnerability assessment rule ID.
   * @param baselineName The name of the vulnerability assessment rule baseline (default implies a
   * baseline on a database level rule and master for server level rule). Possible values include:
   * 'master', 'default'
   * @param [options] The optional parameters
   * @returns Promise<msRest.RestResponse>
   */
  deleteMethod(resourceGroupName: string, managedInstanceName: string, databaseName: string, ruleId: string, baselineName: Models.VulnerabilityAssessmentPolicyBaselineName, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
  /**
   * @param resourceGroupName The name of the resource group that contains the resource. You can
   * obtain this value from the Azure Resource Manager API or the portal.
   * @param managedInstanceName The name of the managed instance.
   * @param databaseName The name of the database for which the vulnerability assessment rule
   * baseline is defined.
   * @param ruleId The vulnerability assessment rule ID.
   * @param baselineName The name of the vulnerability assessment rule baseline (default implies a
   * baseline on a database level rule and master for server level rule). Possible values include:
   * 'master', 'default'
   * @param callback The callback
   */
  deleteMethod(resourceGroupName: string, managedInstanceName: string, databaseName: string, ruleId: string, baselineName: Models.VulnerabilityAssessmentPolicyBaselineName, callback: msRest.ServiceCallback<void>): void;
  /**
   * @param resourceGroupName The name of the resource group that contains the resource. You can
   * obtain this value from the Azure Resource Manager API or the portal.
   * @param managedInstanceName The name of the managed instance.
   * @param databaseName The name of the database for which the vulnerability assessment rule
   * baseline is defined.
   * @param ruleId The vulnerability assessment rule ID.
   * @param baselineName The name of the vulnerability assessment rule baseline (default implies a
   * baseline on a database level rule and master for server level rule). Possible values include:
   * 'master', 'default'
   * @param options The optional parameters
   * @param callback The callback
   */
  deleteMethod(resourceGroupName: string, managedInstanceName: string, databaseName: string, ruleId: string, baselineName: Models.VulnerabilityAssessmentPolicyBaselineName, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
  deleteMethod(resourceGroupName: string, managedInstanceName: string, databaseName: string, ruleId: string, baselineName: Models.VulnerabilityAssessmentPolicyBaselineName, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        managedInstanceName,
        databaseName,
        ruleId,
        baselineName,
        options
      },
      deleteMethodOperationSpec,
      callback);
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}/rules/{ruleId}/baselines/{baselineName}",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.managedInstanceName,
    Parameters.databaseName,
    Parameters.vulnerabilityAssessmentName,
    Parameters.ruleId,
    Parameters.baselineName,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion2
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.DatabaseVulnerabilityAssessmentRuleBaseline
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const createOrUpdateOperationSpec: msRest.OperationSpec = {
  httpMethod: "PUT",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}/rules/{ruleId}/baselines/{baselineName}",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.managedInstanceName,
    Parameters.databaseName,
    Parameters.vulnerabilityAssessmentName,
    Parameters.ruleId,
    Parameters.baselineName,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion2
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "parameters",
    mapper: {
      ...Mappers.DatabaseVulnerabilityAssessmentRuleBaseline,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.DatabaseVulnerabilityAssessmentRuleBaseline
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const deleteMethodOperationSpec: msRest.OperationSpec = {
  httpMethod: "DELETE",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}/rules/{ruleId}/baselines/{baselineName}",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.managedInstanceName,
    Parameters.databaseName,
    Parameters.vulnerabilityAssessmentName,
    Parameters.ruleId,
    Parameters.baselineName,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion2
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {},
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};
