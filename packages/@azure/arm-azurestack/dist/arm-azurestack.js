/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('ms-rest-azure-js'), require('ms-rest-js')) :
    typeof define === 'function' && define.amd ? define(['exports', 'ms-rest-azure-js', 'ms-rest-js'], factory) :
    (factory((global.Azure = global.Azure || {}, global.Azure.ArmAzurestack = {}),global.msRestAzure,global.msRest));
}(this, (function (exports,msRestAzure,msRest) { 'use strict';

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */
    /* global Reflect, Promise */

    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };

    function __extends(d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }

    var __assign = function() {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    /**
     * Defines values for ProvisioningState.
     * Possible values include: 'Creating', 'Failed', 'Succeeded', 'Canceled'
     * @readonly
     * @enum {string}
     */
    var ProvisioningState;
    (function (ProvisioningState) {
        ProvisioningState["Creating"] = "Creating";
        ProvisioningState["Failed"] = "Failed";
        ProvisioningState["Succeeded"] = "Succeeded";
        ProvisioningState["Canceled"] = "Canceled";
    })(ProvisioningState || (ProvisioningState = {}));
    /**
     * Defines values for ComputeRole.
     * Possible values include: 'None', 'IaaS', 'PaaS'
     * There could be more values for this enum apart from the ones defined here.If
     * you want to set a value that is not from the known values then you can do
     * the following:
     * let param: ComputeRole =
     * <ComputeRole>"someUnknownValueThatWillStillBeValid";
     * @readonly
     * @enum {string}
     */
    var ComputeRole;
    (function (ComputeRole) {
        ComputeRole["None"] = "None";
        ComputeRole["IaaS"] = "IaaS";
        ComputeRole["PaaS"] = "PaaS";
    })(ComputeRole || (ComputeRole = {}));
    /**
     * Defines values for OperatingSystem.
     * Possible values include: 'None', 'Windows', 'Linux'
     * There could be more values for this enum apart from the ones defined here.If
     * you want to set a value that is not from the known values then you can do
     * the following:
     * let param: OperatingSystem =
     * <OperatingSystem>"someUnknownValueThatWillStillBeValid";
     * @readonly
     * @enum {string}
     */
    var OperatingSystem;
    (function (OperatingSystem) {
        OperatingSystem["None"] = "None";
        OperatingSystem["Windows"] = "Windows";
        OperatingSystem["Linux"] = "Linux";
    })(OperatingSystem || (OperatingSystem = {}));
    /**
     * Defines values for Location.
     * Possible values include: 'global'
     * There could be more values for this enum apart from the ones defined here.If
     * you want to set a value that is not from the known values then you can do
     * the following:
     * let param: Location = <Location>"someUnknownValueThatWillStillBeValid";
     * @readonly
     * @enum {string}
     */
    var Location;
    (function (Location) {
        Location["Global"] = "global";
    })(Location || (Location = {}));

    var index = /*#__PURE__*/Object.freeze({
        get ProvisioningState () { return ProvisioningState; },
        get ComputeRole () { return ComputeRole; },
        get OperatingSystem () { return OperatingSystem; },
        get Location () { return Location; }
    });

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    var CloudError = msRestAzure.CloudErrorMapper;
    var BaseResource = msRestAzure.BaseResourceMapper;
    var Resource = {
        serializedName: "Resource",
        type: {
            name: "Composite",
            className: "Resource",
            modelProperties: {
                id: {
                    readOnly: true,
                    serializedName: "id",
                    type: {
                        name: "String"
                    }
                },
                name: {
                    readOnly: true,
                    serializedName: "name",
                    type: {
                        name: "String"
                    }
                },
                type: {
                    readOnly: true,
                    serializedName: "type",
                    type: {
                        name: "String"
                    }
                },
                etag: {
                    serializedName: "etag",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var TrackedResource = {
        serializedName: "TrackedResource",
        type: {
            name: "Composite",
            className: "TrackedResource",
            modelProperties: {
                id: {
                    readOnly: true,
                    serializedName: "id",
                    type: {
                        name: "String"
                    }
                },
                name: {
                    readOnly: true,
                    serializedName: "name",
                    type: {
                        name: "String"
                    }
                },
                type: {
                    readOnly: true,
                    serializedName: "type",
                    type: {
                        name: "String"
                    }
                },
                location: {
                    required: true,
                    isConstant: true,
                    serializedName: "location",
                    defaultValue: 'global',
                    type: {
                        name: "String"
                    }
                },
                tags: {
                    serializedName: "tags",
                    type: {
                        name: "Dictionary",
                        value: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                },
                etag: {
                    serializedName: "etag",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var Display = {
        serializedName: "Display",
        type: {
            name: "Composite",
            className: "Display",
            modelProperties: {
                provider: {
                    serializedName: "provider",
                    type: {
                        name: "String"
                    }
                },
                resource: {
                    serializedName: "resource",
                    type: {
                        name: "String"
                    }
                },
                operation: {
                    serializedName: "operation",
                    type: {
                        name: "String"
                    }
                },
                description: {
                    serializedName: "description",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var Operation = {
        serializedName: "Operation",
        type: {
            name: "Composite",
            className: "Operation",
            modelProperties: {
                name: {
                    serializedName: "name",
                    type: {
                        name: "String"
                    }
                },
                display: {
                    serializedName: "display",
                    type: {
                        name: "Composite",
                        className: "Display"
                    }
                },
                origin: {
                    serializedName: "origin",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var ErrorDetails = {
        serializedName: "ErrorDetails",
        type: {
            name: "Composite",
            className: "ErrorDetails",
            modelProperties: {
                code: {
                    readOnly: true,
                    serializedName: "code",
                    type: {
                        name: "String"
                    }
                },
                message: {
                    readOnly: true,
                    serializedName: "message",
                    type: {
                        name: "String"
                    }
                },
                target: {
                    readOnly: true,
                    serializedName: "target",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var ErrorResponse = {
        serializedName: "ErrorResponse",
        type: {
            name: "Composite",
            className: "ErrorResponse",
            modelProperties: {
                error: {
                    serializedName: "error",
                    type: {
                        name: "Composite",
                        className: "ErrorDetails"
                    }
                }
            }
        }
    };
    var Uri = {
        serializedName: "Uri",
        type: {
            name: "Composite",
            className: "Uri",
            modelProperties: {
                uri: {
                    readOnly: true,
                    serializedName: "uri",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var OsDiskImage = {
        serializedName: "OsDiskImage",
        type: {
            name: "Composite",
            className: "OsDiskImage",
            modelProperties: {
                operatingSystem: {
                    readOnly: true,
                    serializedName: "operatingSystem",
                    type: {
                        name: "String"
                    }
                },
                sourceBlobSasUri: {
                    readOnly: true,
                    serializedName: "sourceBlobSasUri",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var DataDiskImage = {
        serializedName: "DataDiskImage",
        type: {
            name: "Composite",
            className: "DataDiskImage",
            modelProperties: {
                lun: {
                    readOnly: true,
                    serializedName: "lun",
                    type: {
                        name: "Number"
                    }
                },
                sourceBlobSasUri: {
                    readOnly: true,
                    serializedName: "sourceBlobSasUri",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var ExtendedProductProperties = {
        serializedName: "ExtendedProductProperties",
        type: {
            name: "Composite",
            className: "ExtendedProductProperties",
            modelProperties: {
                computeRole: {
                    readOnly: true,
                    serializedName: "computeRole",
                    type: {
                        name: "String"
                    }
                },
                isSystemExtension: {
                    readOnly: true,
                    serializedName: "isSystemExtension",
                    type: {
                        name: "Boolean"
                    }
                },
                uri: {
                    readOnly: true,
                    serializedName: "sourceBlob.uri",
                    type: {
                        name: "String"
                    }
                },
                supportMultipleExtensions: {
                    readOnly: true,
                    serializedName: "supportMultipleExtensions",
                    type: {
                        name: "Boolean"
                    }
                },
                version: {
                    readOnly: true,
                    serializedName: "version",
                    type: {
                        name: "String"
                    }
                },
                vmOsType: {
                    readOnly: true,
                    serializedName: "vmOsType",
                    type: {
                        name: "String"
                    }
                },
                vmScaleSetEnabled: {
                    readOnly: true,
                    serializedName: "vmScaleSetEnabled",
                    type: {
                        name: "Boolean"
                    }
                },
                osDiskImage: {
                    readOnly: true,
                    serializedName: "osDiskImage",
                    type: {
                        name: "Composite",
                        className: "OsDiskImage"
                    }
                },
                dataDiskImages: {
                    readOnly: true,
                    serializedName: "dataDiskImages",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "DataDiskImage"
                            }
                        }
                    }
                }
            }
        }
    };
    var ExtendedProduct = {
        serializedName: "ExtendedProduct",
        type: {
            name: "Composite",
            className: "ExtendedProduct",
            modelProperties: {
                galleryPackageBlobSasUri: {
                    readOnly: true,
                    serializedName: "galleryPackageBlobSasUri",
                    type: {
                        name: "String"
                    }
                },
                productKind: {
                    readOnly: true,
                    serializedName: "productKind",
                    type: {
                        name: "String"
                    }
                },
                computeRole: {
                    readOnly: true,
                    serializedName: "properties.computeRole",
                    type: {
                        name: "String"
                    }
                },
                isSystemExtension: {
                    readOnly: true,
                    serializedName: "properties.isSystemExtension",
                    type: {
                        name: "Boolean"
                    }
                },
                uri: {
                    readOnly: true,
                    serializedName: "properties.sourceBlob.uri",
                    type: {
                        name: "String"
                    }
                },
                supportMultipleExtensions: {
                    readOnly: true,
                    serializedName: "properties.supportMultipleExtensions",
                    type: {
                        name: "Boolean"
                    }
                },
                version: {
                    readOnly: true,
                    serializedName: "properties.version",
                    type: {
                        name: "String"
                    }
                },
                vmOsType: {
                    readOnly: true,
                    serializedName: "properties.vmOsType",
                    type: {
                        name: "String"
                    }
                },
                vmScaleSetEnabled: {
                    readOnly: true,
                    serializedName: "properties.vmScaleSetEnabled",
                    type: {
                        name: "Boolean"
                    }
                },
                osDiskImage: {
                    readOnly: true,
                    serializedName: "properties.osDiskImage",
                    type: {
                        name: "Composite",
                        className: "OsDiskImage"
                    }
                },
                dataDiskImages: {
                    readOnly: true,
                    serializedName: "properties.dataDiskImages",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "DataDiskImage"
                            }
                        }
                    }
                }
            }
        }
    };
    var VirtualMachineExtensionProductProperties = {
        serializedName: "VirtualMachineExtensionProductProperties",
        type: {
            name: "Composite",
            className: "VirtualMachineExtensionProductProperties",
            modelProperties: {
                computeRole: {
                    readOnly: true,
                    serializedName: "computeRole",
                    type: {
                        name: "String"
                    }
                },
                isSystemExtension: {
                    readOnly: true,
                    serializedName: "isSystemExtension",
                    type: {
                        name: "Boolean"
                    }
                },
                uri: {
                    readOnly: true,
                    serializedName: "sourceBlob.uri",
                    type: {
                        name: "String"
                    }
                },
                supportMultipleExtensions: {
                    readOnly: true,
                    serializedName: "supportMultipleExtensions",
                    type: {
                        name: "Boolean"
                    }
                },
                version: {
                    readOnly: true,
                    serializedName: "version",
                    type: {
                        name: "String"
                    }
                },
                vmOsType: {
                    readOnly: true,
                    serializedName: "vmOsType",
                    type: {
                        name: "String"
                    }
                },
                vmScaleSetEnabled: {
                    readOnly: true,
                    serializedName: "vmScaleSetEnabled",
                    type: {
                        name: "Boolean"
                    }
                }
            }
        }
    };
    var VirtualMachineProductProperties = {
        serializedName: "VirtualMachineProductProperties",
        type: {
            name: "Composite",
            className: "VirtualMachineProductProperties",
            modelProperties: {
                version: {
                    readOnly: true,
                    serializedName: "version",
                    type: {
                        name: "String"
                    }
                },
                osDiskImage: {
                    readOnly: true,
                    serializedName: "osDiskImage",
                    type: {
                        name: "Composite",
                        className: "OsDiskImage"
                    }
                },
                dataDiskImages: {
                    readOnly: true,
                    serializedName: "dataDiskImages",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "DataDiskImage"
                            }
                        }
                    }
                }
            }
        }
    };
    var IconUris = {
        serializedName: "IconUris",
        type: {
            name: "Composite",
            className: "IconUris",
            modelProperties: {
                large: {
                    serializedName: "large",
                    type: {
                        name: "String"
                    }
                },
                wide: {
                    serializedName: "wide",
                    type: {
                        name: "String"
                    }
                },
                medium: {
                    serializedName: "medium",
                    type: {
                        name: "String"
                    }
                },
                small: {
                    serializedName: "small",
                    type: {
                        name: "String"
                    }
                },
                hero: {
                    serializedName: "hero",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var ProductLink = {
        serializedName: "ProductLink",
        type: {
            name: "Composite",
            className: "ProductLink",
            modelProperties: {
                displayName: {
                    serializedName: "displayName",
                    type: {
                        name: "String"
                    }
                },
                uri: {
                    serializedName: "uri",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var ProductProperties = {
        serializedName: "ProductProperties",
        type: {
            name: "Composite",
            className: "ProductProperties",
            modelProperties: {
                version: {
                    serializedName: "version",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var ProductNestedProperties = {
        serializedName: "ProductNestedProperties",
        type: {
            name: "Composite",
            className: "ProductNestedProperties",
            modelProperties: {
                displayName: {
                    serializedName: "displayName",
                    type: {
                        name: "String"
                    }
                },
                description: {
                    serializedName: "description",
                    type: {
                        name: "String"
                    }
                },
                publisherDisplayName: {
                    serializedName: "publisherDisplayName",
                    type: {
                        name: "String"
                    }
                },
                publisherIdentifier: {
                    serializedName: "publisherIdentifier",
                    type: {
                        name: "String"
                    }
                },
                offer: {
                    serializedName: "offer",
                    type: {
                        name: "String"
                    }
                },
                offerVersion: {
                    serializedName: "offerVersion",
                    type: {
                        name: "String"
                    }
                },
                sku: {
                    serializedName: "sku",
                    type: {
                        name: "String"
                    }
                },
                billingPartNumber: {
                    serializedName: "billingPartNumber",
                    type: {
                        name: "String"
                    }
                },
                vmExtensionType: {
                    serializedName: "vmExtensionType",
                    type: {
                        name: "String"
                    }
                },
                galleryItemIdentity: {
                    serializedName: "galleryItemIdentity",
                    type: {
                        name: "String"
                    }
                },
                iconUris: {
                    serializedName: "iconUris",
                    type: {
                        name: "Composite",
                        className: "IconUris"
                    }
                },
                links: {
                    serializedName: "links",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "ProductLink"
                            }
                        }
                    }
                },
                legalTerms: {
                    serializedName: "legalTerms",
                    type: {
                        name: "String"
                    }
                },
                privacyPolicy: {
                    serializedName: "privacyPolicy",
                    type: {
                        name: "String"
                    }
                },
                payloadLength: {
                    serializedName: "payloadLength",
                    type: {
                        name: "Number"
                    }
                },
                productKind: {
                    serializedName: "productKind",
                    type: {
                        name: "String"
                    }
                },
                productProperties: {
                    serializedName: "productProperties",
                    type: {
                        name: "Composite",
                        className: "ProductProperties"
                    }
                }
            }
        }
    };
    var Product = {
        serializedName: "Product",
        type: {
            name: "Composite",
            className: "Product",
            modelProperties: __assign({}, Resource.type.modelProperties, { displayName: {
                    serializedName: "properties.displayName",
                    type: {
                        name: "String"
                    }
                }, description: {
                    serializedName: "properties.description",
                    type: {
                        name: "String"
                    }
                }, publisherDisplayName: {
                    serializedName: "properties.publisherDisplayName",
                    type: {
                        name: "String"
                    }
                }, publisherIdentifier: {
                    serializedName: "properties.publisherIdentifier",
                    type: {
                        name: "String"
                    }
                }, offer: {
                    serializedName: "properties.offer",
                    type: {
                        name: "String"
                    }
                }, offerVersion: {
                    serializedName: "properties.offerVersion",
                    type: {
                        name: "String"
                    }
                }, sku: {
                    serializedName: "properties.sku",
                    type: {
                        name: "String"
                    }
                }, billingPartNumber: {
                    serializedName: "properties.billingPartNumber",
                    type: {
                        name: "String"
                    }
                }, vmExtensionType: {
                    serializedName: "properties.vmExtensionType",
                    type: {
                        name: "String"
                    }
                }, galleryItemIdentity: {
                    serializedName: "properties.galleryItemIdentity",
                    type: {
                        name: "String"
                    }
                }, iconUris: {
                    serializedName: "properties.iconUris",
                    type: {
                        name: "Composite",
                        className: "IconUris"
                    }
                }, links: {
                    serializedName: "properties.links",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "ProductLink"
                            }
                        }
                    }
                }, legalTerms: {
                    serializedName: "properties.legalTerms",
                    type: {
                        name: "String"
                    }
                }, privacyPolicy: {
                    serializedName: "properties.privacyPolicy",
                    type: {
                        name: "String"
                    }
                }, payloadLength: {
                    serializedName: "properties.payloadLength",
                    type: {
                        name: "Number"
                    }
                }, productKind: {
                    serializedName: "properties.productKind",
                    type: {
                        name: "String"
                    }
                }, productProperties: {
                    serializedName: "properties.productProperties",
                    type: {
                        name: "Composite",
                        className: "ProductProperties"
                    }
                } })
        }
    };
    var RegistrationProperties = {
        serializedName: "RegistrationProperties",
        type: {
            name: "Composite",
            className: "RegistrationProperties",
            modelProperties: {
                objectId: {
                    serializedName: "objectId",
                    type: {
                        name: "String"
                    }
                },
                cloudId: {
                    serializedName: "cloudId",
                    type: {
                        name: "String"
                    }
                },
                billingModel: {
                    serializedName: "billingModel",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var Registration = {
        serializedName: "Registration",
        type: {
            name: "Composite",
            className: "Registration",
            modelProperties: __assign({}, TrackedResource.type.modelProperties, { objectId: {
                    serializedName: "properties.objectId",
                    type: {
                        name: "String"
                    }
                }, cloudId: {
                    serializedName: "properties.cloudId",
                    type: {
                        name: "String"
                    }
                }, billingModel: {
                    serializedName: "properties.billingModel",
                    type: {
                        name: "String"
                    }
                } })
        }
    };
    var ActivationKeyResult = {
        serializedName: "ActivationKeyResult",
        type: {
            name: "Composite",
            className: "ActivationKeyResult",
            modelProperties: {
                activationKey: {
                    serializedName: "activationKey",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var RegistrationParameterProperties = {
        serializedName: "RegistrationParameterProperties",
        type: {
            name: "Composite",
            className: "RegistrationParameterProperties",
            modelProperties: {
                registrationToken: {
                    required: true,
                    serializedName: "registrationToken",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var RegistrationParameter = {
        serializedName: "RegistrationParameter",
        type: {
            name: "Composite",
            className: "RegistrationParameter",
            modelProperties: {
                registrationToken: {
                    required: true,
                    serializedName: "properties.registrationToken",
                    type: {
                        name: "String"
                    }
                },
                location: {
                    serializedName: "location",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CustomerSubscriptionProperties = {
        serializedName: "CustomerSubscriptionProperties",
        type: {
            name: "Composite",
            className: "CustomerSubscriptionProperties",
            modelProperties: {
                tenantId: {
                    serializedName: "tenantId",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var CustomerSubscription = {
        serializedName: "CustomerSubscription",
        type: {
            name: "Composite",
            className: "CustomerSubscription",
            modelProperties: __assign({}, Resource.type.modelProperties, { tenantId: {
                    serializedName: "properties.tenantId",
                    type: {
                        name: "String"
                    }
                } })
        }
    };
    var OperationList = {
        serializedName: "OperationList",
        type: {
            name: "Composite",
            className: "OperationList",
            modelProperties: {
                value: {
                    serializedName: "",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "Operation"
                            }
                        }
                    }
                },
                nextLink: {
                    serializedName: "nextLink",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var ProductList = {
        serializedName: "ProductList",
        type: {
            name: "Composite",
            className: "ProductList",
            modelProperties: {
                nextLink: {
                    serializedName: "nextLink",
                    type: {
                        name: "String"
                    }
                },
                value: {
                    serializedName: "",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "Product"
                            }
                        }
                    }
                }
            }
        }
    };
    var RegistrationList = {
        serializedName: "RegistrationList",
        type: {
            name: "Composite",
            className: "RegistrationList",
            modelProperties: {
                nextLink: {
                    serializedName: "nextLink",
                    type: {
                        name: "String"
                    }
                },
                value: {
                    serializedName: "",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "Registration"
                            }
                        }
                    }
                }
            }
        }
    };
    var CustomerSubscriptionList = {
        serializedName: "CustomerSubscriptionList",
        type: {
            name: "Composite",
            className: "CustomerSubscriptionList",
            modelProperties: {
                nextLink: {
                    serializedName: "nextLink",
                    type: {
                        name: "String"
                    }
                },
                value: {
                    serializedName: "",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "CustomerSubscription"
                            }
                        }
                    }
                }
            }
        }
    };

    var mappers = /*#__PURE__*/Object.freeze({
        CloudError: CloudError,
        BaseResource: BaseResource,
        Resource: Resource,
        TrackedResource: TrackedResource,
        Display: Display,
        Operation: Operation,
        ErrorDetails: ErrorDetails,
        ErrorResponse: ErrorResponse,
        Uri: Uri,
        OsDiskImage: OsDiskImage,
        DataDiskImage: DataDiskImage,
        ExtendedProductProperties: ExtendedProductProperties,
        ExtendedProduct: ExtendedProduct,
        VirtualMachineExtensionProductProperties: VirtualMachineExtensionProductProperties,
        VirtualMachineProductProperties: VirtualMachineProductProperties,
        IconUris: IconUris,
        ProductLink: ProductLink,
        ProductProperties: ProductProperties,
        ProductNestedProperties: ProductNestedProperties,
        Product: Product,
        RegistrationProperties: RegistrationProperties,
        Registration: Registration,
        ActivationKeyResult: ActivationKeyResult,
        RegistrationParameterProperties: RegistrationParameterProperties,
        RegistrationParameter: RegistrationParameter,
        CustomerSubscriptionProperties: CustomerSubscriptionProperties,
        CustomerSubscription: CustomerSubscription,
        OperationList: OperationList,
        ProductList: ProductList,
        RegistrationList: RegistrationList,
        CustomerSubscriptionList: CustomerSubscriptionList
    });

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */

    var Mappers = /*#__PURE__*/Object.freeze({
        OperationList: OperationList,
        Operation: Operation,
        Display: Display,
        CloudError: CloudError
    });

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    var acceptLanguage = {
        parameterPath: "acceptLanguage",
        mapper: {
            serializedName: "accept-language",
            defaultValue: 'en-US',
            type: {
                name: "String"
            }
        }
    };
    var apiVersion = {
        parameterPath: "apiVersion",
        mapper: {
            required: true,
            serializedName: "api-version",
            defaultValue: '2017-06-01',
            type: {
                name: "String"
            }
        }
    };
    var customerSubscriptionName = {
        parameterPath: "customerSubscriptionName",
        mapper: {
            required: true,
            serializedName: "customerSubscriptionName",
            type: {
                name: "String"
            }
        }
    };
    var nextPageLink = {
        parameterPath: "nextPageLink",
        mapper: {
            required: true,
            serializedName: "nextLink",
            type: {
                name: "String"
            }
        },
        skipEncoding: true
    };
    var productName = {
        parameterPath: "productName",
        mapper: {
            required: true,
            serializedName: "productName",
            type: {
                name: "String"
            }
        }
    };
    var registrationName = {
        parameterPath: "registrationName",
        mapper: {
            required: true,
            serializedName: "registrationName",
            type: {
                name: "String"
            }
        }
    };
    var resourceGroup = {
        parameterPath: "resourceGroup",
        mapper: {
            required: true,
            serializedName: "resourceGroup",
            type: {
                name: "String"
            }
        }
    };
    var subscriptionId = {
        parameterPath: "subscriptionId",
        mapper: {
            required: true,
            serializedName: "subscriptionId",
            type: {
                name: "String"
            }
        }
    };

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    /** Class representing a Operations. */
    var Operations = /** @class */ (function () {
        /**
         * Create a Operations.
         * @param {AzureStackManagementClientContext} client Reference to the service client.
         */
        function Operations(client) {
            this.client = client;
        }
        Operations.prototype.list = function (options, callback) {
            return this.client.sendOperationRequest({
                options: options
            }, listOperationSpec, callback);
        };
        Operations.prototype.listNext = function (nextPageLink$$1, options, callback) {
            return this.client.sendOperationRequest({
                nextPageLink: nextPageLink$$1,
                options: options
            }, listNextOperationSpec, callback);
        };
        return Operations;
    }());
    // Operation Specifications
    var serializer = new msRest.Serializer(Mappers);
    var listOperationSpec = {
        httpMethod: "GET",
        path: "providers/Microsoft.AzureStack/operations",
        queryParameters: [
            apiVersion
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            200: {
                bodyMapper: OperationList
            },
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer
    };
    var listNextOperationSpec = {
        httpMethod: "GET",
        baseUrl: "https://management.azure.com",
        path: "{nextLink}",
        urlParameters: [
            nextPageLink
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            200: {
                bodyMapper: OperationList
            },
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer
    };

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */

    var Mappers$1 = /*#__PURE__*/Object.freeze({
        ProductList: ProductList,
        Product: Product,
        Resource: Resource,
        BaseResource: BaseResource,
        IconUris: IconUris,
        ProductLink: ProductLink,
        ProductProperties: ProductProperties,
        ErrorResponse: ErrorResponse,
        ErrorDetails: ErrorDetails,
        ExtendedProduct: ExtendedProduct,
        OsDiskImage: OsDiskImage,
        DataDiskImage: DataDiskImage,
        CloudError: CloudError,
        TrackedResource: TrackedResource,
        Registration: Registration,
        CustomerSubscription: CustomerSubscription
    });

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    /** Class representing a Products. */
    var Products = /** @class */ (function () {
        /**
         * Create a Products.
         * @param {AzureStackManagementClientContext} client Reference to the service client.
         */
        function Products(client) {
            this.client = client;
        }
        Products.prototype.list = function (resourceGroup$$1, registrationName$$1, options, callback) {
            return this.client.sendOperationRequest({
                resourceGroup: resourceGroup$$1,
                registrationName: registrationName$$1,
                options: options
            }, listOperationSpec$1, callback);
        };
        Products.prototype.get = function (resourceGroup$$1, registrationName$$1, productName$$1, options, callback) {
            return this.client.sendOperationRequest({
                resourceGroup: resourceGroup$$1,
                registrationName: registrationName$$1,
                productName: productName$$1,
                options: options
            }, getOperationSpec, callback);
        };
        Products.prototype.listDetails = function (resourceGroup$$1, registrationName$$1, productName$$1, options, callback) {
            return this.client.sendOperationRequest({
                resourceGroup: resourceGroup$$1,
                registrationName: registrationName$$1,
                productName: productName$$1,
                options: options
            }, listDetailsOperationSpec, callback);
        };
        Products.prototype.listNext = function (nextPageLink$$1, options, callback) {
            return this.client.sendOperationRequest({
                nextPageLink: nextPageLink$$1,
                options: options
            }, listNextOperationSpec$1, callback);
        };
        return Products;
    }());
    // Operation Specifications
    var serializer$1 = new msRest.Serializer(Mappers$1);
    var listOperationSpec$1 = {
        httpMethod: "GET",
        path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.AzureStack/registrations/{registrationName}/products",
        urlParameters: [
            subscriptionId,
            resourceGroup,
            registrationName
        ],
        queryParameters: [
            apiVersion
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            200: {
                bodyMapper: ProductList
            },
            default: {
                bodyMapper: ErrorResponse
            }
        },
        serializer: serializer$1
    };
    var getOperationSpec = {
        httpMethod: "GET",
        path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.AzureStack/registrations/{registrationName}/products/{productName}",
        urlParameters: [
            subscriptionId,
            resourceGroup,
            registrationName,
            productName
        ],
        queryParameters: [
            apiVersion
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            200: {
                bodyMapper: Product
            },
            default: {
                bodyMapper: ErrorResponse
            }
        },
        serializer: serializer$1
    };
    var listDetailsOperationSpec = {
        httpMethod: "POST",
        path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.AzureStack/registrations/{registrationName}/products/{productName}/listDetails",
        urlParameters: [
            subscriptionId,
            resourceGroup,
            registrationName,
            productName
        ],
        queryParameters: [
            apiVersion
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            200: {
                bodyMapper: ExtendedProduct
            },
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer$1
    };
    var listNextOperationSpec$1 = {
        httpMethod: "GET",
        baseUrl: "https://management.azure.com",
        path: "{nextLink}",
        urlParameters: [
            nextPageLink
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            200: {
                bodyMapper: ProductList
            },
            default: {
                bodyMapper: ErrorResponse
            }
        },
        serializer: serializer$1
    };

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */

    var Mappers$2 = /*#__PURE__*/Object.freeze({
        RegistrationList: RegistrationList,
        Registration: Registration,
        TrackedResource: TrackedResource,
        BaseResource: BaseResource,
        ErrorResponse: ErrorResponse,
        ErrorDetails: ErrorDetails,
        RegistrationParameter: RegistrationParameter,
        CloudError: CloudError,
        ActivationKeyResult: ActivationKeyResult,
        Resource: Resource,
        Product: Product,
        IconUris: IconUris,
        ProductLink: ProductLink,
        ProductProperties: ProductProperties,
        CustomerSubscription: CustomerSubscription
    });

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    /** Class representing a Registrations. */
    var Registrations = /** @class */ (function () {
        /**
         * Create a Registrations.
         * @param {AzureStackManagementClientContext} client Reference to the service client.
         */
        function Registrations(client) {
            this.client = client;
        }
        Registrations.prototype.list = function (resourceGroup$$1, options, callback) {
            return this.client.sendOperationRequest({
                resourceGroup: resourceGroup$$1,
                options: options
            }, listOperationSpec$2, callback);
        };
        Registrations.prototype.get = function (resourceGroup$$1, registrationName$$1, options, callback) {
            return this.client.sendOperationRequest({
                resourceGroup: resourceGroup$$1,
                registrationName: registrationName$$1,
                options: options
            }, getOperationSpec$1, callback);
        };
        Registrations.prototype.deleteMethod = function (resourceGroup$$1, registrationName$$1, options, callback) {
            return this.client.sendOperationRequest({
                resourceGroup: resourceGroup$$1,
                registrationName: registrationName$$1,
                options: options
            }, deleteMethodOperationSpec, callback);
        };
        Registrations.prototype.createOrUpdate = function (resourceGroup$$1, registrationName$$1, token, options, callback) {
            return this.client.sendOperationRequest({
                resourceGroup: resourceGroup$$1,
                registrationName: registrationName$$1,
                token: token,
                options: options
            }, createOrUpdateOperationSpec, callback);
        };
        Registrations.prototype.update = function (resourceGroup$$1, registrationName$$1, token, options, callback) {
            return this.client.sendOperationRequest({
                resourceGroup: resourceGroup$$1,
                registrationName: registrationName$$1,
                token: token,
                options: options
            }, updateOperationSpec, callback);
        };
        Registrations.prototype.getActivationKey = function (resourceGroup$$1, registrationName$$1, options, callback) {
            return this.client.sendOperationRequest({
                resourceGroup: resourceGroup$$1,
                registrationName: registrationName$$1,
                options: options
            }, getActivationKeyOperationSpec, callback);
        };
        Registrations.prototype.listNext = function (nextPageLink$$1, options, callback) {
            return this.client.sendOperationRequest({
                nextPageLink: nextPageLink$$1,
                options: options
            }, listNextOperationSpec$2, callback);
        };
        return Registrations;
    }());
    // Operation Specifications
    var serializer$2 = new msRest.Serializer(Mappers$2);
    var listOperationSpec$2 = {
        httpMethod: "GET",
        path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.AzureStack/registrations",
        urlParameters: [
            subscriptionId,
            resourceGroup
        ],
        queryParameters: [
            apiVersion
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            200: {
                bodyMapper: RegistrationList
            },
            default: {
                bodyMapper: ErrorResponse
            }
        },
        serializer: serializer$2
    };
    var getOperationSpec$1 = {
        httpMethod: "GET",
        path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.AzureStack/registrations/{registrationName}",
        urlParameters: [
            subscriptionId,
            resourceGroup,
            registrationName
        ],
        queryParameters: [
            apiVersion
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            200: {
                bodyMapper: Registration
            },
            default: {
                bodyMapper: ErrorResponse
            }
        },
        serializer: serializer$2
    };
    var deleteMethodOperationSpec = {
        httpMethod: "DELETE",
        path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.AzureStack/registrations/{registrationName}",
        urlParameters: [
            subscriptionId,
            resourceGroup,
            registrationName
        ],
        queryParameters: [
            apiVersion
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            200: {},
            204: {},
            default: {
                bodyMapper: ErrorResponse
            }
        },
        serializer: serializer$2
    };
    var createOrUpdateOperationSpec = {
        httpMethod: "PUT",
        path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.AzureStack/registrations/{registrationName}",
        urlParameters: [
            subscriptionId,
            resourceGroup,
            registrationName
        ],
        queryParameters: [
            apiVersion
        ],
        headerParameters: [
            acceptLanguage
        ],
        requestBody: {
            parameterPath: "token",
            mapper: __assign({}, RegistrationParameter, { required: true })
        },
        responses: {
            200: {
                bodyMapper: Registration
            },
            201: {
                bodyMapper: Registration
            },
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer$2
    };
    var updateOperationSpec = {
        httpMethod: "PATCH",
        path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.AzureStack/registrations/{registrationName}",
        urlParameters: [
            subscriptionId,
            resourceGroup,
            registrationName
        ],
        queryParameters: [
            apiVersion
        ],
        headerParameters: [
            acceptLanguage
        ],
        requestBody: {
            parameterPath: "token",
            mapper: __assign({}, RegistrationParameter, { required: true })
        },
        responses: {
            200: {
                bodyMapper: Registration
            },
            default: {
                bodyMapper: ErrorResponse
            }
        },
        serializer: serializer$2
    };
    var getActivationKeyOperationSpec = {
        httpMethod: "POST",
        path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.AzureStack/registrations/{registrationName}/getactivationkey",
        urlParameters: [
            subscriptionId,
            resourceGroup,
            registrationName
        ],
        queryParameters: [
            apiVersion
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            200: {
                bodyMapper: ActivationKeyResult
            },
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer$2
    };
    var listNextOperationSpec$2 = {
        httpMethod: "GET",
        baseUrl: "https://management.azure.com",
        path: "{nextLink}",
        urlParameters: [
            nextPageLink
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            200: {
                bodyMapper: RegistrationList
            },
            default: {
                bodyMapper: ErrorResponse
            }
        },
        serializer: serializer$2
    };

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */

    var Mappers$3 = /*#__PURE__*/Object.freeze({
        CustomerSubscriptionList: CustomerSubscriptionList,
        CustomerSubscription: CustomerSubscription,
        Resource: Resource,
        BaseResource: BaseResource,
        ErrorResponse: ErrorResponse,
        ErrorDetails: ErrorDetails,
        CloudError: CloudError,
        TrackedResource: TrackedResource,
        Product: Product,
        IconUris: IconUris,
        ProductLink: ProductLink,
        ProductProperties: ProductProperties,
        Registration: Registration
    });

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    /** Class representing a CustomerSubscriptions. */
    var CustomerSubscriptions = /** @class */ (function () {
        /**
         * Create a CustomerSubscriptions.
         * @param {AzureStackManagementClientContext} client Reference to the service client.
         */
        function CustomerSubscriptions(client) {
            this.client = client;
        }
        CustomerSubscriptions.prototype.list = function (resourceGroup$$1, registrationName$$1, options, callback) {
            return this.client.sendOperationRequest({
                resourceGroup: resourceGroup$$1,
                registrationName: registrationName$$1,
                options: options
            }, listOperationSpec$3, callback);
        };
        CustomerSubscriptions.prototype.get = function (resourceGroup$$1, registrationName$$1, customerSubscriptionName$$1, options, callback) {
            return this.client.sendOperationRequest({
                resourceGroup: resourceGroup$$1,
                registrationName: registrationName$$1,
                customerSubscriptionName: customerSubscriptionName$$1,
                options: options
            }, getOperationSpec$2, callback);
        };
        CustomerSubscriptions.prototype.deleteMethod = function (resourceGroup$$1, registrationName$$1, customerSubscriptionName$$1, options, callback) {
            return this.client.sendOperationRequest({
                resourceGroup: resourceGroup$$1,
                registrationName: registrationName$$1,
                customerSubscriptionName: customerSubscriptionName$$1,
                options: options
            }, deleteMethodOperationSpec$1, callback);
        };
        CustomerSubscriptions.prototype.create = function (resourceGroup$$1, registrationName$$1, customerSubscriptionName$$1, customerCreationParameters, options, callback) {
            return this.client.sendOperationRequest({
                resourceGroup: resourceGroup$$1,
                registrationName: registrationName$$1,
                customerSubscriptionName: customerSubscriptionName$$1,
                customerCreationParameters: customerCreationParameters,
                options: options
            }, createOperationSpec, callback);
        };
        CustomerSubscriptions.prototype.listNext = function (nextPageLink$$1, options, callback) {
            return this.client.sendOperationRequest({
                nextPageLink: nextPageLink$$1,
                options: options
            }, listNextOperationSpec$3, callback);
        };
        return CustomerSubscriptions;
    }());
    // Operation Specifications
    var serializer$3 = new msRest.Serializer(Mappers$3);
    var listOperationSpec$3 = {
        httpMethod: "GET",
        path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.AzureStack/registrations/{registrationName}/customerSubscriptions",
        urlParameters: [
            subscriptionId,
            resourceGroup,
            registrationName
        ],
        queryParameters: [
            apiVersion
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            200: {
                bodyMapper: CustomerSubscriptionList
            },
            default: {
                bodyMapper: ErrorResponse
            }
        },
        serializer: serializer$3
    };
    var getOperationSpec$2 = {
        httpMethod: "GET",
        path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.AzureStack/registrations/{registrationName}/customerSubscriptions/{customerSubscriptionName}",
        urlParameters: [
            subscriptionId,
            resourceGroup,
            registrationName,
            customerSubscriptionName
        ],
        queryParameters: [
            apiVersion
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            200: {
                bodyMapper: CustomerSubscription
            },
            default: {
                bodyMapper: ErrorResponse
            }
        },
        serializer: serializer$3
    };
    var deleteMethodOperationSpec$1 = {
        httpMethod: "DELETE",
        path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.AzureStack/registrations/{registrationName}/customerSubscriptions/{customerSubscriptionName}",
        urlParameters: [
            subscriptionId,
            resourceGroup,
            registrationName,
            customerSubscriptionName
        ],
        queryParameters: [
            apiVersion
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            200: {},
            204: {},
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer$3
    };
    var createOperationSpec = {
        httpMethod: "PUT",
        path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.AzureStack/registrations/{registrationName}/customerSubscriptions/{customerSubscriptionName}",
        urlParameters: [
            subscriptionId,
            resourceGroup,
            registrationName,
            customerSubscriptionName
        ],
        queryParameters: [
            apiVersion
        ],
        headerParameters: [
            acceptLanguage
        ],
        requestBody: {
            parameterPath: "customerCreationParameters",
            mapper: __assign({}, CustomerSubscription, { required: true })
        },
        responses: {
            200: {
                bodyMapper: CustomerSubscription
            },
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer$3
    };
    var listNextOperationSpec$3 = {
        httpMethod: "GET",
        baseUrl: "https://management.azure.com",
        path: "{nextLink}",
        urlParameters: [
            nextPageLink
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            200: {
                bodyMapper: CustomerSubscriptionList
            },
            default: {
                bodyMapper: ErrorResponse
            }
        },
        serializer: serializer$3
    };

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    var packageName = "@azure/arm-azurestack";
    var packageVersion = "1.0.0";
    var AzureStackManagementClientContext = /** @class */ (function (_super) {
        __extends(AzureStackManagementClientContext, _super);
        /**
         * Initializes a new instance of the AzureStackManagementClient class.
         * @param credentials Credentials needed for the client to connect to Azure.
         * @param subscriptionId Subscription credentials that uniquely identify Microsoft Azure
         * subscription. The subscription ID forms part of the URI for every service call.
         * @param [options] The parameter options
         */
        function AzureStackManagementClientContext(credentials, subscriptionId, options) {
            var _this = this;
            if (credentials == undefined) {
                throw new Error('\'credentials\' cannot be null.');
            }
            if (subscriptionId == undefined) {
                throw new Error('\'subscriptionId\' cannot be null.');
            }
            if (!options) {
                options = {};
            }
            _this = _super.call(this, credentials, options) || this;
            _this.apiVersion = '2017-06-01';
            _this.acceptLanguage = 'en-US';
            _this.longRunningOperationRetryTimeout = 30;
            _this.baseUri = options.baseUri || _this.baseUri || "https://management.azure.com";
            _this.requestContentType = "application/json; charset=utf-8";
            _this.credentials = credentials;
            _this.subscriptionId = subscriptionId;
            _this.addUserAgentInfo(packageName + "/" + packageVersion);
            if (options.acceptLanguage !== null && options.acceptLanguage !== undefined) {
                _this.acceptLanguage = options.acceptLanguage;
            }
            if (options.longRunningOperationRetryTimeout !== null && options.longRunningOperationRetryTimeout !== undefined) {
                _this.longRunningOperationRetryTimeout = options.longRunningOperationRetryTimeout;
            }
            return _this;
        }
        return AzureStackManagementClientContext;
    }(msRestAzure.AzureServiceClient));

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    var AzureStackManagementClient = /** @class */ (function (_super) {
        __extends(AzureStackManagementClient, _super);
        /**
         * Initializes a new instance of the AzureStackManagementClient class.
         * @param credentials Credentials needed for the client to connect to Azure.
         * @param subscriptionId Subscription credentials that uniquely identify Microsoft Azure
         * subscription. The subscription ID forms part of the URI for every service call.
         * @param [options] The parameter options
         */
        function AzureStackManagementClient(credentials, subscriptionId, options) {
            var _this = _super.call(this, credentials, subscriptionId, options) || this;
            _this.operations = new Operations(_this);
            _this.products = new Products(_this);
            _this.registrations = new Registrations(_this);
            _this.customerSubscriptions = new CustomerSubscriptions(_this);
            return _this;
        }
        return AzureStackManagementClient;
    }(AzureStackManagementClientContext));

    exports.AzureStackManagementClient = AzureStackManagementClient;
    exports.AzureStackManagementClientContext = AzureStackManagementClientContext;
    exports.AzureStackManagementModels = index;
    exports.AzureStackManagementMappers = mappers;
    exports.Operations = Operations;
    exports.Products = Products;
    exports.Registrations = Registrations;
    exports.CustomerSubscriptions = CustomerSubscriptions;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=arm-azurestack.js.map
