/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "ms-rest-azure-js";
import * as msRest from "ms-rest-js";

export { BaseResource, CloudError };


/**
 * @interface
 * An interface representing AddUsersPayload.
 * Payload for Add Users operation on a Lab.
 *
 */
export interface AddUsersPayload {
  /**
   * @member {string[]} emailAddresses List of user emails addresses to add to
   * the lab.
   */
  emailAddresses: string[];
}

/**
 * @interface
 * An interface representing ReferenceVmCreationParameters.
 * Creation parameters for Reference Vm
 *
 */
export interface ReferenceVmCreationParameters {
  /**
   * @member {string} userName The username of the virtual machine
   */
  userName: string;
  /**
   * @member {string} password The password of the virtual machine.
   */
  password: string;
}

/**
 * @interface
 * An interface representing ResourceSettingCreationParameters.
 * Represents resource specific settings
 *
 */
export interface ResourceSettingCreationParameters {
  /**
   * @member {string} [location] The location where the virtual machine will
   * live
   */
  location?: string;
  /**
   * @member {string} [name] The name of the resource setting
   */
  name?: string;
  /**
   * @member {string} galleryImageResourceId The resource id of the gallery
   * image used for creating the virtual machine
   */
  galleryImageResourceId: string;
  /**
   * @member {ManagedLabVmSize} [size] The size of the virtual machine.
   * Possible values include: 'Basic', 'Standard', 'Performance'
   */
  size?: ManagedLabVmSize;
  /**
   * @member {ReferenceVmCreationParameters} referenceVmCreationParameters
   * Creation parameters for Reference Vm
   */
  referenceVmCreationParameters: ReferenceVmCreationParameters;
}

/**
 * @interface
 * An interface representing EnvironmentSettingCreationParameters.
 * Settings related to creating an environment setting
 *
 */
export interface EnvironmentSettingCreationParameters {
  /**
   * @member {ResourceSettingCreationParameters}
   * resourceSettingCreationParameters The resource specific settings
   */
  resourceSettingCreationParameters: ResourceSettingCreationParameters;
}

/**
 * @interface
 * An interface representing LabCreationParameters.
 * Settings related to creating a lab
 *
 */
export interface LabCreationParameters {
  /**
   * @member {number} [maxUsersInLab] Maximum number of users allowed in the
   * lab.
   */
  maxUsersInLab?: number;
}

/**
 * @interface
 * An interface representing CreateLabProperties.
 * Properties for creating a managed lab and a default environment setting
 *
 */
export interface CreateLabProperties {
  /**
   * @member {EnvironmentSettingCreationParameters}
   * [environmentSettingCreationParameters] Settings related to creating an
   * environment setting
   */
  environmentSettingCreationParameters?: EnvironmentSettingCreationParameters;
  /**
   * @member {LabCreationParameters} labCreationParameters Settings related to
   * creating a lab
   */
  labCreationParameters: LabCreationParameters;
  /**
   * @member {string} name The name of the resource
   */
  name: string;
  /**
   * @member {string} [location] The location of the resource
   */
  location?: string;
  /**
   * @member {{ [propertyName: string]: string }} [tags] The tags of the
   * resource.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * @interface
 * An interface representing ResourceSet.
 * Represents a VM and the setting Id it was created for.
 *
 */
export interface ResourceSet {
  /**
   * @member {string} [vmResourceId] VM resource Id for the environment
   */
  vmResourceId?: string;
  /**
   * @member {string} [resourceSettingId] resourceSettingId for the environment
   */
  resourceSettingId?: string;
}

/**
 * @interface
 * An interface representing NetworkInterface.
 * Network details of the environment
 *
 */
export interface NetworkInterface {
  /**
   * @member {string} [privateIpAddress] PrivateIp address of the Compute VM
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly privateIpAddress?: string;
  /**
   * @member {string} [sshAuthority] Connection information for Linux
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly sshAuthority?: string;
  /**
   * @member {string} [rdpAuthority] Connection information for Windows
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly rdpAuthority?: string;
  /**
   * @member {string} [username] Username of the VM
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly username?: string;
}

/**
 * @interface
 * An interface representing LatestOperationResult.
 * Details of the status of an operation.
 *
 */
export interface LatestOperationResult {
  /**
   * @member {string} [status] The current status of the operation.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly status?: string;
  /**
   * @member {string} [errorCode] Error code on failure.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly errorCode?: string;
  /**
   * @member {string} [errorMessage] The error message.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly errorMessage?: string;
  /**
   * @member {string} [requestUri] Request URI of the operation.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly requestUri?: string;
  /**
   * @member {string} [httpMethod] The HttpMethod - PUT/POST/DELETE for the
   * operation.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly httpMethod?: string;
  /**
   * @member {string} [operationUrl] The URL to use to check long-running
   * operation status
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly operationUrl?: string;
}

/**
 * @interface
 * An interface representing Resource.
 * An Azure resource.
 *
 * @extends BaseResource
 */
export interface Resource extends BaseResource {
  /**
   * @member {string} [id] The identifier of the resource.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [name] The name of the resource.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [type] The type of the resource.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: string;
  /**
   * @member {string} [location] The location of the resource.
   */
  location?: string;
  /**
   * @member {{ [propertyName: string]: string }} [tags] The tags of the
   * resource.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * @interface
 * An interface representing Environment.
 * Represents an environment instance
 *
 * @extends Resource
 */
export interface Environment extends Resource {
  /**
   * @member {ResourceSet} [resourceSets] The set of a VM and the setting id it
   * was created for
   */
  resourceSets?: ResourceSet;
  /**
   * @member {string} [claimedByUserObjectId] The AAD object Id of the user who
   * has claimed the environment
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly claimedByUserObjectId?: string;
  /**
   * @member {string} [claimedByUserPrincipalId] The user principal Id of the
   * user who has claimed the environment
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly claimedByUserPrincipalId?: string;
  /**
   * @member {string} [claimedByUserName] The name or email address of the user
   * who has claimed the environment
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly claimedByUserName?: string;
  /**
   * @member {boolean} [isClaimed] Is the environment claimed or not
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly isClaimed?: boolean;
  /**
   * @member {string} [lastKnownPowerState] Last known power state of the
   * environment
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly lastKnownPowerState?: string;
  /**
   * @member {NetworkInterface} [networkInterface] Network details of the
   * environment
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly networkInterface?: NetworkInterface;
  /**
   * @member {string} [totalUsage] How long the environment has been used by a
   * lab user
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly totalUsage?: string;
  /**
   * @member {Date} [passwordLastReset] When the password was last reset on the
   * environment.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly passwordLastReset?: Date;
  /**
   * @member {string} [provisioningState] The provisioning status of the
   * resource.
   */
  provisioningState?: string;
  /**
   * @member {string} [uniqueIdentifier] The unique immutable identifier of a
   * resource (Guid).
   */
  uniqueIdentifier?: string;
  /**
   * @member {LatestOperationResult} [latestOperationResult] The details of the
   * latest operation. ex: status, error
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly latestOperationResult?: LatestOperationResult;
}

/**
 * @interface
 * An interface representing VirtualMachineDetails.
 * Details of the backing virtual machine.
 *
 */
export interface VirtualMachineDetails {
  /**
   * @member {string} [provisioningState] Provisioning state of the Dtl VM
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provisioningState?: string;
  /**
   * @member {string} [rdpAuthority] Connection information for Windows
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly rdpAuthority?: string;
  /**
   * @member {string} [sshAuthority] Connection information for Linux
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly sshAuthority?: string;
  /**
   * @member {string} [privateIpAddress] PrivateIp address of the compute VM
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly privateIpAddress?: string;
  /**
   * @member {string} [userName] Compute VM login user name
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly userName?: string;
  /**
   * @member {string} [lastKnownPowerState] Last known compute power state
   * captured in DTL
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly lastKnownPowerState?: string;
}

/**
 * @interface
 * An interface representing EnvironmentDetails.
 * This represents the details about a User's environment and its state.
 *
 */
export interface EnvironmentDetails {
  /**
   * @member {string} [name] Name of the Environment
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [description] Description of the Environment
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
  /**
   * @member {string} [id] Resource Id of the environment
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [provisioningState] The provisioning state of the
   * environment. This also includes LabIsFull and NotYetProvisioned status.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provisioningState?: string;
  /**
   * @member {VirtualMachineDetails} [virtualMachineDetails] Details of backing
   * DTL virtual machine with compute and network details.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly virtualMachineDetails?: VirtualMachineDetails;
  /**
   * @member {LatestOperationResult} [latestOperationResult] The details of the
   * latest operation. ex: status, error
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly latestOperationResult?: LatestOperationResult;
  /**
   * @member {string} [environmentState] Publishing state of the environment
   * setting Possible values are Creating, Created, Failed
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly environmentState?: string;
  /**
   * @member {string} [totalUsage] How long the environment has been used by a
   * lab user
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly totalUsage?: string;
  /**
   * @member {Date} [passwordLastReset] When the password was last reset on the
   * environment.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly passwordLastReset?: Date;
}

/**
 * @interface
 * An interface representing ResourceSetFragment.
 * Represents a VM and the setting Id it was created for.
 *
 */
export interface ResourceSetFragment {
  /**
   * @member {string} [vmResourceId] VM resource Id for the environment
   */
  vmResourceId?: string;
  /**
   * @member {string} [resourceSettingId] resourceSettingId for the environment
   */
  resourceSettingId?: string;
}

/**
 * @interface
 * An interface representing EnvironmentFragment.
 * Represents an environment instance
 *
 * @extends Resource
 */
export interface EnvironmentFragment extends Resource {
  /**
   * @member {ResourceSetFragment} [resourceSets] The set of a VM and the
   * setting id it was created for
   */
  resourceSets?: ResourceSetFragment;
  /**
   * @member {string} [provisioningState] The provisioning status of the
   * resource.
   */
  provisioningState?: string;
  /**
   * @member {string} [uniqueIdentifier] The unique immutable identifier of a
   * resource (Guid).
   */
  uniqueIdentifier?: string;
}

/**
 * @interface
 * An interface representing EnvironmentOperationsPayload.
 * Represents payload for any Environment operations like get, start, stop,
 * connect
 *
 */
export interface EnvironmentOperationsPayload {
  /**
   * @member {string} environmentId The resourceId of the environment
   */
  environmentId: string;
}

/**
 * @interface
 * An interface representing VmStateDetails.
 * Details about the state of the reference virtual machine.
 *
 */
export interface VmStateDetails {
  /**
   * @member {string} [rdpAuthority] The RdpAuthority property is a server DNS
   * host name or IP address followed by the service port number for RDP
   * (Remote Desktop Protocol).
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly rdpAuthority?: string;
  /**
   * @member {string} [sshAuthority] The SshAuthority property is a server DNS
   * host name or IP address followed by the service port number for SSH.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly sshAuthority?: string;
  /**
   * @member {string} [powerState] The power state of the reference virtual
   * machine.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly powerState?: string;
  /**
   * @member {string} [lastKnownPowerState] Last known compute power state
   * captured in DTL
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly lastKnownPowerState?: string;
}

/**
 * @interface
 * An interface representing ReferenceVm.
 * Details of a Reference Vm
 *
 */
export interface ReferenceVm {
  /**
   * @member {string} userName The username of the virtual machine
   */
  userName: string;
  /**
   * @member {string} [password] The password of the virtual machine. This will
   * be set to null in GET resource API
   */
  password?: string;
  /**
   * @member {VmStateDetails} [vmStateDetails] The state details for the
   * reference virtual machine.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly vmStateDetails?: VmStateDetails;
  /**
   * @member {string} [vmResourceId] VM resource Id for the environment
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly vmResourceId?: string;
}

/**
 * @interface
 * An interface representing ResourceSettings.
 * Represents resource specific settings
 *
 */
export interface ResourceSettings {
  /**
   * @member {string} [id] The unique id of the resource setting
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [galleryImageResourceId] The resource id of the gallery
   * image used for creating the virtual machine
   */
  galleryImageResourceId?: string;
  /**
   * @member {string} [imageName] The name of the image used to created the
   * environment setting
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly imageName?: string;
  /**
   * @member {ManagedLabVmSize} [size] The size of the virtual machine.
   * Possible values include: 'Basic', 'Standard', 'Performance'
   */
  size?: ManagedLabVmSize;
  /**
   * @member {number} [cores] The translated compute cores of the virtual
   * machine
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly cores?: number;
  /**
   * @member {ReferenceVm} referenceVm Details specific to Reference Vm
   */
  referenceVm: ReferenceVm;
}

/**
 * @interface
 * An interface representing EnvironmentSetting.
 * Represents settings of an environment, from which environment instances
 * would be created
 *
 * @extends Resource
 */
export interface EnvironmentSetting extends Resource {
  /**
   * @member {PublishingState} [publishingState] Describes the readiness of
   * this environment setting. Possible values include: 'Draft', 'Publishing',
   * 'Published', 'PublishFailed', 'Scaling'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly publishingState?: PublishingState;
  /**
   * @member {ConfigurationState} [configurationState] Describes the user's
   * progress in configuring their environment setting. Possible values
   * include: 'NotApplicable', 'Completed'
   */
  configurationState?: ConfigurationState;
  /**
   * @member {string} [description] Describes the environment and its resource
   * settings
   */
  description?: string;
  /**
   * @member {string} [title] Brief title describing the environment and its
   * resource settings
   */
  title?: string;
  /**
   * @member {ResourceSettings} resourceSettings The resource specific settings
   */
  resourceSettings: ResourceSettings;
  /**
   * @member {Date} [lastChanged] Time when the template VM was last changed.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly lastChanged?: Date;
  /**
   * @member {Date} [lastPublished] Time when the template VM was last sent for
   * publishing.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly lastPublished?: Date;
  /**
   * @member {string} [provisioningState] The provisioning status of the
   * resource.
   */
  provisioningState?: string;
  /**
   * @member {string} [uniqueIdentifier] The unique immutable identifier of a
   * resource (Guid).
   */
  uniqueIdentifier?: string;
  /**
   * @member {LatestOperationResult} [latestOperationResult] The details of the
   * latest operation. ex: status, error
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly latestOperationResult?: LatestOperationResult;
}

/**
 * @interface
 * An interface representing ReferenceVmFragment.
 * Details of a Reference Vm
 *
 */
export interface ReferenceVmFragment {
  /**
   * @member {string} [userName] The username of the virtual machine
   */
  userName?: string;
  /**
   * @member {string} [password] The password of the virtual machine. This will
   * be set to null in GET resource API
   */
  password?: string;
}

/**
 * @interface
 * An interface representing ResourceSettingsFragment.
 * Represents resource specific settings
 *
 */
export interface ResourceSettingsFragment {
  /**
   * @member {string} [galleryImageResourceId] The resource id of the gallery
   * image used for creating the virtual machine
   */
  galleryImageResourceId?: string;
  /**
   * @member {ManagedLabVmSize} [size] The size of the virtual machine.
   * Possible values include: 'Basic', 'Standard', 'Performance'
   */
  size?: ManagedLabVmSize;
  /**
   * @member {ReferenceVmFragment} [referenceVm] Details specific to Reference
   * Vm
   */
  referenceVm?: ReferenceVmFragment;
}

/**
 * @interface
 * An interface representing EnvironmentSettingFragment.
 * Represents settings of an environment, from which environment instances
 * would be created
 *
 * @extends Resource
 */
export interface EnvironmentSettingFragment extends Resource {
  /**
   * @member {ConfigurationState} [configurationState] Describes the user's
   * progress in configuring their environment setting. Possible values
   * include: 'NotApplicable', 'Completed'
   */
  configurationState?: ConfigurationState;
  /**
   * @member {string} [description] Describes the environment and its resource
   * settings
   */
  description?: string;
  /**
   * @member {string} [title] Brief title describing the environment and its
   * resource settings
   */
  title?: string;
  /**
   * @member {ResourceSettingsFragment} [resourceSettings] The resource
   * specific settings
   */
  resourceSettings?: ResourceSettingsFragment;
  /**
   * @member {string} [provisioningState] The provisioning status of the
   * resource.
   */
  provisioningState?: string;
  /**
   * @member {string} [uniqueIdentifier] The unique immutable identifier of a
   * resource (Guid).
   */
  uniqueIdentifier?: string;
}

/**
 * @interface
 * An interface representing SizeInfo.
 * Contains detailed information about a size
 *
 */
export interface SizeInfo {
  /**
   * @member {string} [computeSize] Represents the actual compute size, e.g.
   * Standard_A2_v2.
   */
  computeSize?: string;
  /**
   * @member {number} [price] The pay-as-you-go price per hour this size will
   * cost. It does not include discounts and may not reflect the actual price
   * the size will cost.
   */
  price?: number;
  /**
   * @member {number} [numberOfCores] The number of cores a VM of this size
   * has.
   */
  numberOfCores?: number;
  /**
   * @member {number} [memory] The amount of memory available (in GB).
   */
  memory?: number;
}

/**
 * @interface
 * An interface representing EnvironmentSize.
 * Represents a size category supported by this Lab Account (small, medium or
 * large)
 *
 */
export interface EnvironmentSize {
  /**
   * @member {ManagedLabVmSize} [name] The size category. Possible values
   * include: 'Basic', 'Standard', 'Performance'
   */
  name?: ManagedLabVmSize;
  /**
   * @member {SizeInfo[]} [vmSizes] Represents a set of compute sizes that can
   * serve this given size type
   */
  vmSizes?: SizeInfo[];
  /**
   * @member {number} [maxPrice] The pay-as-you-go dollar price per hour this
   * size will cost. It does not include discounts and may not reflect the
   * actual price the size will cost. This is the maximum price of all prices
   * within this tier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly maxPrice?: number;
  /**
   * @member {number} [minNumberOfCores] The number of cores a VM of this size
   * has. This is the minimum number of cores within this tier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly minNumberOfCores?: number;
  /**
   * @member {number} [minMemory] The amount of memory available (in GB). This
   * is the minimum amount of memory within this tier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly minMemory?: number;
}

/**
 * @interface
 * An interface representing SizeInfoFragment.
 * Contains detailed information about a size
 *
 */
export interface SizeInfoFragment {
  /**
   * @member {string} [computeSize] Represents the actual compute size, e.g.
   * Standard_A2_v2.
   */
  computeSize?: string;
  /**
   * @member {number} [price] The pay-as-you-go price per hour this size will
   * cost. It does not include discounts and may not reflect the actual price
   * the size will cost.
   */
  price?: number;
  /**
   * @member {number} [numberOfCores] The number of cores a VM of this size
   * has.
   */
  numberOfCores?: number;
  /**
   * @member {number} [memory] The amount of memory available (in GB).
   */
  memory?: number;
}

/**
 * @interface
 * An interface representing EnvironmentSizeFragment.
 * Represents a size category supported by this Lab Account (small, medium or
 * large)
 *
 */
export interface EnvironmentSizeFragment {
  /**
   * @member {ManagedLabVmSize} [name] The size category. Possible values
   * include: 'Basic', 'Standard', 'Performance'
   */
  name?: ManagedLabVmSize;
  /**
   * @member {SizeInfoFragment[]} [vmSizes] Represents a set of compute sizes
   * that can serve this given size type
   */
  vmSizes?: SizeInfoFragment[];
}

/**
 * @interface
 * An interface representing GalleryImageReference.
 * The reference information for an Azure Marketplace image.
 *
 */
export interface GalleryImageReference {
  /**
   * @member {string} [offer] The offer of the gallery image.
   */
  offer?: string;
  /**
   * @member {string} [publisher] The publisher of the gallery image.
   */
  publisher?: string;
  /**
   * @member {string} [sku] The SKU of the gallery image.
   */
  sku?: string;
  /**
   * @member {string} [osType] The OS type of the gallery image.
   */
  osType?: string;
  /**
   * @member {string} [version] The version of the gallery image.
   */
  version?: string;
}

/**
 * @interface
 * An interface representing GalleryImage.
 * Represents an image from the Azure Marketplace
 *
 * @extends Resource
 */
export interface GalleryImage extends Resource {
  /**
   * @member {string} [author] The author of the gallery image.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly author?: string;
  /**
   * @member {Date} [createdDate] The creation date of the gallery image.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly createdDate?: Date;
  /**
   * @member {string} [description] The description of the gallery image.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
  /**
   * @member {GalleryImageReference} [imageReference] The image reference of
   * the gallery image.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly imageReference?: GalleryImageReference;
  /**
   * @member {string} [icon] The icon of the gallery image.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly icon?: string;
  /**
   * @member {boolean} [isEnabled] Indicates whether this gallery image is
   * enabled.
   */
  isEnabled?: boolean;
  /**
   * @member {boolean} [isOverride] Indicates whether this gallery has been
   * overridden for this lab account
   */
  isOverride?: boolean;
  /**
   * @member {string} [planId] The third party plan that applies to this image
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly planId?: string;
  /**
   * @member {boolean} [isPlanAuthorized] Indicates if the plan has been
   * authorized for programmatic deployment.
   */
  isPlanAuthorized?: boolean;
  /**
   * @member {string} [provisioningState] The provisioning status of the
   * resource.
   */
  provisioningState?: string;
  /**
   * @member {string} [uniqueIdentifier] The unique immutable identifier of a
   * resource (Guid).
   */
  uniqueIdentifier?: string;
  /**
   * @member {LatestOperationResult} [latestOperationResult] The details of the
   * latest operation. ex: status, error
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly latestOperationResult?: LatestOperationResult;
}

/**
 * @interface
 * An interface representing GalleryImageFragment.
 * Represents an image from the Azure Marketplace
 *
 * @extends Resource
 */
export interface GalleryImageFragment extends Resource {
  /**
   * @member {boolean} [isEnabled] Indicates whether this gallery image is
   * enabled.
   */
  isEnabled?: boolean;
  /**
   * @member {boolean} [isOverride] Indicates whether this gallery has been
   * overridden for this lab account
   */
  isOverride?: boolean;
  /**
   * @member {boolean} [isPlanAuthorized] Indicates if the plan has been
   * authorized for programmatic deployment.
   */
  isPlanAuthorized?: boolean;
  /**
   * @member {string} [provisioningState] The provisioning status of the
   * resource.
   */
  provisioningState?: string;
  /**
   * @member {string} [uniqueIdentifier] The unique immutable identifier of a
   * resource (Guid).
   */
  uniqueIdentifier?: string;
}

/**
 * @interface
 * An interface representing GalleryImageReferenceFragment.
 * The reference information for an Azure Marketplace image.
 *
 */
export interface GalleryImageReferenceFragment {
  /**
   * @member {string} [offer] The offer of the gallery image.
   */
  offer?: string;
  /**
   * @member {string} [publisher] The publisher of the gallery image.
   */
  publisher?: string;
  /**
   * @member {string} [sku] The SKU of the gallery image.
   */
  sku?: string;
  /**
   * @member {string} [osType] The OS type of the gallery image.
   */
  osType?: string;
  /**
   * @member {string} [version] The version of the gallery image.
   */
  version?: string;
}

/**
 * @interface
 * An interface representing GetEnvironmentResponse.
 * Represents the environments details
 *
 */
export interface GetEnvironmentResponse {
  /**
   * @member {EnvironmentDetails} [environment] Details of the environment
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly environment?: EnvironmentDetails;
}

/**
 * @interface
 * An interface representing GetPersonalPreferencesResponse.
 * Represents the PersonalPreferences for the user
 *
 */
export interface GetPersonalPreferencesResponse {
  /**
   * @member {string} [id] Id to be used by the cache orchestrator
   */
  id?: string;
  /**
   * @member {string[]} [favoriteLabResourceIds] Array of favorite lab resource
   * ids
   */
  favoriteLabResourceIds?: string[];
}

/**
 * @interface
 * An interface representing SizeAvailability.
 * Represents the size information
 *
 */
export interface SizeAvailability {
  /**
   * @member {ManagedLabVmSize} [sizeCategory] The category of the size (Basic,
   * Standard, Performance). Possible values include: 'Basic', 'Standard',
   * 'Performance'
   */
  sizeCategory?: ManagedLabVmSize;
  /**
   * @member {boolean} [isAvailable] Whether or not this size category is
   * available
   */
  isAvailable?: boolean;
}

/**
 * @interface
 * An interface representing RegionalAvailability.
 * The availability information of sizes across regions
 *
 */
export interface RegionalAvailability {
  /**
   * @member {string} [region] Corresponding region
   */
  region?: string;
  /**
   * @member {SizeAvailability[]} [sizeAvailabilities] List of all the size
   * information for the region
   */
  sizeAvailabilities?: SizeAvailability[];
}

/**
 * @interface
 * An interface representing GetRegionalAvailabilityResponse.
 * The response model from the GetRegionalAvailability action
 *
 */
export interface GetRegionalAvailabilityResponse {
  /**
   * @member {RegionalAvailability[]} [regionalAvailability] Availability
   * information for different size categories per region
   */
  regionalAvailability?: RegionalAvailability[];
}

/**
 * @interface
 * An interface representing Lab.
 * Represents a lab.
 *
 * @extends Resource
 */
export interface Lab extends Resource {
  /**
   * @member {number} [maxUsersInLab] Maximum number of users allowed in the
   * lab.
   */
  maxUsersInLab?: number;
  /**
   * @member {number} [userQuota] Maximum value MaxUsersInLab can be set to, as
   * specified by the service
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly userQuota?: number;
  /**
   * @member {string} [invitationCode] Invitation code that users can use to
   * join a lab.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly invitationCode?: string;
  /**
   * @member {string} [createdByObjectId] Object id of the user that created
   * the lab.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly createdByObjectId?: string;
  /**
   * @member {string} [usageQuota] Maximum duration a user can use an
   * environment for in the lab.
   */
  usageQuota?: string;
  /**
   * @member {LabUserAccessMode} [userAccessMode] Lab user access mode (open to
   * all vs. restricted to those listed on the lab). Possible values include:
   * 'Restricted', 'Open'
   */
  userAccessMode?: LabUserAccessMode;
  /**
   * @member {string} [createdByUserPrincipalName] Lab creator name
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly createdByUserPrincipalName?: string;
  /**
   * @member {Date} [createdDate] Creation date for the lab
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly createdDate?: Date;
  /**
   * @member {string} [provisioningState] The provisioning status of the
   * resource.
   */
  provisioningState?: string;
  /**
   * @member {string} [uniqueIdentifier] The unique immutable identifier of a
   * resource (Guid).
   */
  uniqueIdentifier?: string;
  /**
   * @member {LatestOperationResult} [latestOperationResult] The details of the
   * latest operation. ex: status, error
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly latestOperationResult?: LatestOperationResult;
}

/**
 * @interface
 * An interface representing SizeConfigurationProperties.
 * Represents the size configuration under the lab account
 *
 */
export interface SizeConfigurationProperties {
  /**
   * @member {EnvironmentSize[]} [environmentSizes] Represents a list of size
   * categories supported by this Lab Account (Small, Medium, Large)
   */
  environmentSizes?: EnvironmentSize[];
}

/**
 * @interface
 * An interface representing LabAccount.
 * Represents a lab account.
 *
 * @extends Resource
 */
export interface LabAccount extends Resource {
  /**
   * @member {SizeConfigurationProperties} [sizeConfiguration] Represents the
   * size configuration under the lab account
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly sizeConfiguration?: SizeConfigurationProperties;
  /**
   * @member {boolean} [enabledRegionSelection] Represents if region selection
   * is enabled
   */
  enabledRegionSelection?: boolean;
  /**
   * @member {string} [provisioningState] The provisioning status of the
   * resource.
   */
  provisioningState?: string;
  /**
   * @member {string} [uniqueIdentifier] The unique immutable identifier of a
   * resource (Guid).
   */
  uniqueIdentifier?: string;
  /**
   * @member {LatestOperationResult} [latestOperationResult] The details of the
   * latest operation. ex: status, error
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly latestOperationResult?: LatestOperationResult;
}

/**
 * @interface
 * An interface representing LabAccountFragment.
 * Represents a lab account.
 *
 * @extends Resource
 */
export interface LabAccountFragment extends Resource {
  /**
   * @member {boolean} [enabledRegionSelection] Represents if region selection
   * is enabled
   */
  enabledRegionSelection?: boolean;
  /**
   * @member {string} [provisioningState] The provisioning status of the
   * resource.
   */
  provisioningState?: string;
  /**
   * @member {string} [uniqueIdentifier] The unique immutable identifier of a
   * resource (Guid).
   */
  uniqueIdentifier?: string;
}

/**
 * @interface
 * An interface representing LabDetails.
 * This represents the details about a lab that the User is in, and its state.
 *
 */
export interface LabDetails {
  /**
   * @member {string} [name] Name of the lab
   */
  name?: string;
  /**
   * @member {string} [provisioningState] The provisioning state of the lab.
   */
  provisioningState?: string;
  /**
   * @member {string} [id] The Id of the lab.
   */
  id?: string;
  /**
   * @member {string} [usageQuota] The maximum duration a user can use a VM in
   * this lab.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly usageQuota?: string;
}

/**
 * @interface
 * An interface representing LabFragment.
 * Represents a lab.
 *
 * @extends Resource
 */
export interface LabFragment extends Resource {
  /**
   * @member {number} [maxUsersInLab] Maximum number of users allowed in the
   * lab.
   */
  maxUsersInLab?: number;
  /**
   * @member {string} [usageQuota] Maximum duration a user can use an
   * environment for in the lab.
   */
  usageQuota?: string;
  /**
   * @member {LabUserAccessMode} [userAccessMode] Lab user access mode (open to
   * all vs. restricted to those listed on the lab). Possible values include:
   * 'Restricted', 'Open'
   */
  userAccessMode?: LabUserAccessMode;
  /**
   * @member {string} [provisioningState] The provisioning status of the
   * resource.
   */
  provisioningState?: string;
  /**
   * @member {string} [uniqueIdentifier] The unique immutable identifier of a
   * resource (Guid).
   */
  uniqueIdentifier?: string;
}

/**
 * @interface
 * An interface representing ListEnvironmentsPayload.
 * Represents the payload to list environments owned by a user
 *
 */
export interface ListEnvironmentsPayload {
  /**
   * @member {string} [labId] The resource Id of the lab
   */
  labId?: string;
}

/**
 * @interface
 * An interface representing ListEnvironmentsResponse.
 * Represents the list of environments owned by a user
 *
 */
export interface ListEnvironmentsResponse {
  /**
   * @member {EnvironmentDetails[]} [environments] List of all the evironments
   */
  environments?: EnvironmentDetails[];
}

/**
 * @interface
 * An interface representing ListLabsResponse.
 * Lists the labs owned by a user
 *
 */
export interface ListLabsResponse {
  /**
   * @member {LabDetails[]} [labs] List of all the labs
   */
  labs?: LabDetails[];
}

/**
 * @interface
 * An interface representing OperationBatchStatusPayload.
 * Payload to get the status of an operation
 *
 */
export interface OperationBatchStatusPayload {
  /**
   * @member {string[]} urls The operation url of long running operation
   */
  urls: string[];
}

/**
 * @interface
 * An interface representing OperationBatchStatusResponseItem.
 * Represents the status of an operation that used the batch API.
 *
 */
export interface OperationBatchStatusResponseItem {
  /**
   * @member {string} [operationUrl] status of the long running operation for
   * an environment
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly operationUrl?: string;
  /**
   * @member {string} [status] status of the long running operation for an
   * environment
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly status?: string;
}

/**
 * @interface
 * An interface representing OperationBatchStatusResponse.
 * Status Details of the long running operation for an environment
 *
 */
export interface OperationBatchStatusResponse {
  /**
   * @member {OperationBatchStatusResponseItem[]} [items] Gets a collection of
   * items that contain the operation url and status.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly items?: OperationBatchStatusResponseItem[];
}

/**
 * @interface
 * An interface representing OperationError.
 * Error details for the operation in case of a failure.
 *
 */
export interface OperationError {
  /**
   * @member {string} [code] The error code of the operation error.
   */
  code?: string;
  /**
   * @member {string} [message] The error message of the operation error.
   */
  message?: string;
}

/**
 * @interface
 * An interface representing OperationMetadataDisplay.
 * The object that describes the operations
 *
 */
export interface OperationMetadataDisplay {
  /**
   * @member {string} [provider] Friendly name of the resource provider
   */
  provider?: string;
  /**
   * @member {string} [resource] Resource type on which the operation is
   * performed.
   */
  resource?: string;
  /**
   * @member {string} [operation] Operation type: read, write, delete,
   * listKeys/action, etc.
   */
  operation?: string;
  /**
   * @member {string} [description] Friendly name of the operation
   */
  description?: string;
}

/**
 * @interface
 * An interface representing OperationMetadata.
 * The REST API operation supported by ManagedLab ResourceProvider.
 *
 */
export interface OperationMetadata {
  /**
   * @member {string} [name] Operation name: {provider}/{resource}/{operation}
   */
  name?: string;
  /**
   * @member {OperationMetadataDisplay} [display] The object that describes the
   * operations
   */
  display?: OperationMetadataDisplay;
}

/**
 * @interface
 * An interface representing OperationResult.
 * An Operation Result
 *
 */
export interface OperationResult {
  /**
   * @member {string} [status] The operation status.
   */
  status?: string;
  /**
   * @member {OperationError} [error] Error details for the operation in case
   * of a failure.
   */
  error?: OperationError;
}

/**
 * @interface
 * An interface representing OperationStatusPayload.
 * Payload to get the status of an operation
 *
 */
export interface OperationStatusPayload {
  /**
   * @member {string} operationUrl The operation url of long running operation
   */
  operationUrl: string;
}

/**
 * @interface
 * An interface representing OperationStatusResponse.
 * Status Details of the long running operation for an environment
 *
 */
export interface OperationStatusResponse {
  /**
   * @member {string} [status] status of the long running operation for an
   * environment
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly status?: string;
}

/**
 * @interface
 * An interface representing PersonalPreferencesOperationsPayload.
 * Represents payload for any Environment operations like get, start, stop,
 * connect
 *
 */
export interface PersonalPreferencesOperationsPayload {
  /**
   * @member {string} [labAccountResourceId] Resource Id of the lab account
   */
  labAccountResourceId?: string;
  /**
   * @member {AddRemove} [addRemove] Enum indicating if user is adding or
   * removing a favorite lab. Possible values include: 'Add', 'Remove'
   */
  addRemove?: AddRemove;
  /**
   * @member {string} [labResourceId] Resource Id of the lab to add/remove from
   * the favorites list
   */
  labResourceId?: string;
}

/**
 * @interface
 * An interface representing PublishPayload.
 * Payload for Publish operation on EnvironmentSetting.
 *
 */
export interface PublishPayload {
  /**
   * @member {boolean} [useExistingImage] Whether to use existing VM custom
   * image when publishing.
   */
  useExistingImage?: boolean;
}

/**
 * @interface
 * An interface representing RegisterPayload.
 * Represents payload for Register action.
 *
 */
export interface RegisterPayload {
  /**
   * @member {string} [registrationCode] The registration code of the lab.
   */
  registrationCode?: string;
}

/**
 * @interface
 * An interface representing ResetPasswordPayload.
 * Represents the payload for resetting passwords.
 *
 */
export interface ResetPasswordPayload {
  /**
   * @member {string} environmentId The resourceId of the environment
   */
  environmentId: string;
  /**
   * @member {string} [username] The username for which the password will be
   * reset.
   */
  username?: string;
  /**
   * @member {string} [password] The password to assign to the user specified
   * in
   */
  password?: string;
}

/**
 * @interface
 * An interface representing SizeConfigurationPropertiesFragment.
 * Represents the size configuration under the lab account
 *
 */
export interface SizeConfigurationPropertiesFragment {
  /**
   * @member {EnvironmentSizeFragment[]} [environmentSizes] Represents a list
   * of size categories supported by this Lab Account (Small, Medium, Large)
   */
  environmentSizes?: EnvironmentSizeFragment[];
}

/**
 * @interface
 * An interface representing User.
 * The User registered to a lab
 *
 * @extends Resource
 */
export interface User extends Resource {
  /**
   * @member {string} [email] The user email address, as it was specified
   * during registration.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly email?: string;
  /**
   * @member {string} [familyName] The user family name, as it was specified
   * during registration.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly familyName?: string;
  /**
   * @member {string} [givenName] The user given name, as it was specified
   * during registration.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly givenName?: string;
  /**
   * @member {string} [tenantId] The user tenant ID, as it was specified during
   * registration.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly tenantId?: string;
  /**
   * @member {string} [totalUsage] How long the user has used his VMs in this
   * lab
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly totalUsage?: string;
  /**
   * @member {string} [provisioningState] The provisioning status of the
   * resource.
   */
  provisioningState?: string;
  /**
   * @member {string} [uniqueIdentifier] The unique immutable identifier of a
   * resource (Guid).
   */
  uniqueIdentifier?: string;
  /**
   * @member {LatestOperationResult} [latestOperationResult] The details of the
   * latest operation. ex: status, error
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly latestOperationResult?: LatestOperationResult;
}

/**
 * @interface
 * An interface representing UserFragment.
 * The User registered to a lab
 *
 * @extends Resource
 */
export interface UserFragment extends Resource {
  /**
   * @member {string} [provisioningState] The provisioning status of the
   * resource.
   */
  provisioningState?: string;
  /**
   * @member {string} [uniqueIdentifier] The unique immutable identifier of a
   * resource (Guid).
   */
  uniqueIdentifier?: string;
}

/**
 * @interface
 * An interface representing GlobalUsersGetEnvironmentOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface GlobalUsersGetEnvironmentOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [expand] Specify the $expand query. Example:
   * 'properties($expand=environment)'
   */
  expand?: string;
}

/**
 * @interface
 * An interface representing LabAccountsListBySubscriptionOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface LabAccountsListBySubscriptionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [expand] Specify the $expand query. Example:
   * 'properties($expand=sizeConfiguration)'
   */
  expand?: string;
  /**
   * @member {string} [filter] The filter to apply to the operation.
   */
  filter?: string;
  /**
   * @member {number} [top] The maximum number of resources to return from the
   * operation.
   */
  top?: number;
  /**
   * @member {string} [orderby] The ordering expression for the results, using
   * OData notation.
   */
  orderby?: string;
}

/**
 * @interface
 * An interface representing LabAccountsListByResourceGroupOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface LabAccountsListByResourceGroupOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [expand] Specify the $expand query. Example:
   * 'properties($expand=sizeConfiguration)'
   */
  expand?: string;
  /**
   * @member {string} [filter] The filter to apply to the operation.
   */
  filter?: string;
  /**
   * @member {number} [top] The maximum number of resources to return from the
   * operation.
   */
  top?: number;
  /**
   * @member {string} [orderby] The ordering expression for the results, using
   * OData notation.
   */
  orderby?: string;
}

/**
 * @interface
 * An interface representing LabAccountsGetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface LabAccountsGetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [expand] Specify the $expand query. Example:
   * 'properties($expand=sizeConfiguration)'
   */
  expand?: string;
}

/**
 * @interface
 * An interface representing GalleryImagesListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface GalleryImagesListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [expand] Specify the $expand query. Example:
   * 'properties($select=author)'
   */
  expand?: string;
  /**
   * @member {string} [filter] The filter to apply to the operation.
   */
  filter?: string;
  /**
   * @member {number} [top] The maximum number of resources to return from the
   * operation.
   */
  top?: number;
  /**
   * @member {string} [orderby] The ordering expression for the results, using
   * OData notation.
   */
  orderby?: string;
}

/**
 * @interface
 * An interface representing GalleryImagesGetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface GalleryImagesGetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [expand] Specify the $expand query. Example:
   * 'properties($select=author)'
   */
  expand?: string;
}

/**
 * @interface
 * An interface representing LabsListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface LabsListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [expand] Specify the $expand query. Example:
   * 'properties($select=maxUsersInLab)'
   */
  expand?: string;
  /**
   * @member {string} [filter] The filter to apply to the operation.
   */
  filter?: string;
  /**
   * @member {number} [top] The maximum number of resources to return from the
   * operation.
   */
  top?: number;
  /**
   * @member {string} [orderby] The ordering expression for the results, using
   * OData notation.
   */
  orderby?: string;
}

/**
 * @interface
 * An interface representing LabsGetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface LabsGetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [expand] Specify the $expand query. Example:
   * 'properties($select=maxUsersInLab)'
   */
  expand?: string;
}

/**
 * @interface
 * An interface representing EnvironmentSettingsListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface EnvironmentSettingsListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [expand] Specify the $expand query. Example:
   * 'properties($select=publishingState)'
   */
  expand?: string;
  /**
   * @member {string} [filter] The filter to apply to the operation.
   */
  filter?: string;
  /**
   * @member {number} [top] The maximum number of resources to return from the
   * operation.
   */
  top?: number;
  /**
   * @member {string} [orderby] The ordering expression for the results, using
   * OData notation.
   */
  orderby?: string;
}

/**
 * @interface
 * An interface representing EnvironmentSettingsGetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface EnvironmentSettingsGetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [expand] Specify the $expand query. Example:
   * 'properties($select=publishingState)'
   */
  expand?: string;
}

/**
 * @interface
 * An interface representing EnvironmentsListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface EnvironmentsListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [expand] Specify the $expand query. Example:
   * 'properties($expand=networkInterface)'
   */
  expand?: string;
  /**
   * @member {string} [filter] The filter to apply to the operation.
   */
  filter?: string;
  /**
   * @member {number} [top] The maximum number of resources to return from the
   * operation.
   */
  top?: number;
  /**
   * @member {string} [orderby] The ordering expression for the results, using
   * OData notation.
   */
  orderby?: string;
}

/**
 * @interface
 * An interface representing EnvironmentsGetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface EnvironmentsGetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [expand] Specify the $expand query. Example:
   * 'properties($expand=networkInterface)'
   */
  expand?: string;
}

/**
 * @interface
 * An interface representing UsersListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface UsersListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [expand] Specify the $expand query. Example:
   * 'properties($select=email)'
   */
  expand?: string;
  /**
   * @member {string} [filter] The filter to apply to the operation.
   */
  filter?: string;
  /**
   * @member {number} [top] The maximum number of resources to return from the
   * operation.
   */
  top?: number;
  /**
   * @member {string} [orderby] The ordering expression for the results, using
   * OData notation.
   */
  orderby?: string;
}

/**
 * @interface
 * An interface representing UsersGetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface UsersGetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [expand] Specify the $expand query. Example:
   * 'properties($select=email)'
   */
  expand?: string;
}

/**
 * @interface
 * An interface representing ManagedLabsClientOptions.
 * @extends AzureServiceClientOptions
 */
export interface ManagedLabsClientOptions extends AzureServiceClientOptions {
  /**
   * @member {string} [baseUri]
   */
  baseUri?: string;
}


/**
 * @interface
 * An interface representing the ProviderOperationResult.
 * Result of the request to list REST API operations
 *
 * @extends Array<OperationMetadata>
 */
export interface ProviderOperationResult extends Array<OperationMetadata> {
  /**
   * @member {string} [nextLink] URL to get the next set of operation list
   * results if there are any.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the ResponseWithContinuationLabAccount.
 * The response of a list operation.
 *
 * @extends Array<LabAccount>
 */
export interface ResponseWithContinuationLabAccount extends Array<LabAccount> {
  /**
   * @member {string} [nextLink] Link for next set of results.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the ResponseWithContinuationGalleryImage.
 * The response of a list operation.
 *
 * @extends Array<GalleryImage>
 */
export interface ResponseWithContinuationGalleryImage extends Array<GalleryImage> {
  /**
   * @member {string} [nextLink] Link for next set of results.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the ResponseWithContinuationLab.
 * The response of a list operation.
 *
 * @extends Array<Lab>
 */
export interface ResponseWithContinuationLab extends Array<Lab> {
  /**
   * @member {string} [nextLink] Link for next set of results.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the ResponseWithContinuationEnvironmentSetting.
 * The response of a list operation.
 *
 * @extends Array<EnvironmentSetting>
 */
export interface ResponseWithContinuationEnvironmentSetting extends Array<EnvironmentSetting> {
  /**
   * @member {string} [nextLink] Link for next set of results.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the ResponseWithContinuationEnvironment.
 * The response of a list operation.
 *
 * @extends Array<Environment>
 */
export interface ResponseWithContinuationEnvironment extends Array<Environment> {
  /**
   * @member {string} [nextLink] Link for next set of results.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the ResponseWithContinuationUser.
 * The response of a list operation.
 *
 * @extends Array<User>
 */
export interface ResponseWithContinuationUser extends Array<User> {
  /**
   * @member {string} [nextLink] Link for next set of results.
   */
  nextLink?: string;
}

/**
 * Defines values for ManagedLabVmSize.
 * Possible values include: 'Basic', 'Standard', 'Performance'
 * @readonly
 * @enum {string}
 */
export type ManagedLabVmSize = 'Basic' | 'Standard' | 'Performance';

/**
 * Defines values for PublishingState.
 * Possible values include: 'Draft', 'Publishing', 'Published', 'PublishFailed', 'Scaling'
 * @readonly
 * @enum {string}
 */
export type PublishingState = 'Draft' | 'Publishing' | 'Published' | 'PublishFailed' | 'Scaling';

/**
 * Defines values for ConfigurationState.
 * Possible values include: 'NotApplicable', 'Completed'
 * @readonly
 * @enum {string}
 */
export type ConfigurationState = 'NotApplicable' | 'Completed';

/**
 * Defines values for LabUserAccessMode.
 * Possible values include: 'Restricted', 'Open'
 * @readonly
 * @enum {string}
 */
export type LabUserAccessMode = 'Restricted' | 'Open';

/**
 * Defines values for AddRemove.
 * Possible values include: 'Add', 'Remove'
 * @readonly
 * @enum {string}
 */
export type AddRemove = 'Add' | 'Remove';

/**
 * Contains response data for the list operation.
 */
export type ProviderOperationsListResponse = ProviderOperationResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProviderOperationResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type ProviderOperationsListNextResponse = ProviderOperationResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProviderOperationResult;
    };
};

/**
 * Contains response data for the getEnvironment operation.
 */
export type GlobalUsersGetEnvironmentResponse = GetEnvironmentResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GetEnvironmentResponse;
    };
};

/**
 * Contains response data for the getOperationBatchStatus operation.
 */
export type GlobalUsersGetOperationBatchStatusResponse = OperationBatchStatusResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationBatchStatusResponse;
    };
};

/**
 * Contains response data for the getOperationStatus operation.
 */
export type GlobalUsersGetOperationStatusResponse = OperationStatusResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationStatusResponse;
    };
};

/**
 * Contains response data for the getPersonalPreferences operation.
 */
export type GlobalUsersGetPersonalPreferencesResponse = GetPersonalPreferencesResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GetPersonalPreferencesResponse;
    };
};

/**
 * Contains response data for the listEnvironments operation.
 */
export type GlobalUsersListEnvironmentsResponse = ListEnvironmentsResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ListEnvironmentsResponse;
    };
};

/**
 * Contains response data for the listLabs operation.
 */
export type GlobalUsersListLabsResponse = ListLabsResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ListLabsResponse;
    };
};

/**
 * Contains response data for the listBySubscription operation.
 */
export type LabAccountsListBySubscriptionResponse = ResponseWithContinuationLabAccount & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResponseWithContinuationLabAccount;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type LabAccountsListByResourceGroupResponse = ResponseWithContinuationLabAccount & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResponseWithContinuationLabAccount;
    };
};

/**
 * Contains response data for the get operation.
 */
export type LabAccountsGetResponse = LabAccount & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LabAccount;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type LabAccountsCreateOrUpdateResponse = LabAccount & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LabAccount;
    };
};

/**
 * Contains response data for the update operation.
 */
export type LabAccountsUpdateResponse = LabAccount & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LabAccount;
    };
};

/**
 * Contains response data for the getRegionalAvailability operation.
 */
export type LabAccountsGetRegionalAvailabilityResponse = GetRegionalAvailabilityResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GetRegionalAvailabilityResponse;
    };
};

/**
 * Contains response data for the listBySubscriptionNext operation.
 */
export type LabAccountsListBySubscriptionNextResponse = ResponseWithContinuationLabAccount & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResponseWithContinuationLabAccount;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type LabAccountsListByResourceGroupNextResponse = ResponseWithContinuationLabAccount & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResponseWithContinuationLabAccount;
    };
};

/**
 * Contains response data for the get operation.
 */
export type OperationsGetResponse = OperationResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type GalleryImagesListResponse = ResponseWithContinuationGalleryImage & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResponseWithContinuationGalleryImage;
    };
};

/**
 * Contains response data for the get operation.
 */
export type GalleryImagesGetResponse = GalleryImage & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GalleryImage;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type GalleryImagesCreateOrUpdateResponse = GalleryImage & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GalleryImage;
    };
};

/**
 * Contains response data for the update operation.
 */
export type GalleryImagesUpdateResponse = GalleryImage & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GalleryImage;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type GalleryImagesListNextResponse = ResponseWithContinuationGalleryImage & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResponseWithContinuationGalleryImage;
    };
};

/**
 * Contains response data for the list operation.
 */
export type LabsListResponse = ResponseWithContinuationLab & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResponseWithContinuationLab;
    };
};

/**
 * Contains response data for the get operation.
 */
export type LabsGetResponse = Lab & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Lab;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type LabsCreateOrUpdateResponse = Lab & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Lab;
    };
};

/**
 * Contains response data for the update operation.
 */
export type LabsUpdateResponse = Lab & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Lab;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type LabsListNextResponse = ResponseWithContinuationLab & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResponseWithContinuationLab;
    };
};

/**
 * Contains response data for the list operation.
 */
export type EnvironmentSettingsListResponse = ResponseWithContinuationEnvironmentSetting & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResponseWithContinuationEnvironmentSetting;
    };
};

/**
 * Contains response data for the get operation.
 */
export type EnvironmentSettingsGetResponse = EnvironmentSetting & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EnvironmentSetting;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type EnvironmentSettingsCreateOrUpdateResponse = EnvironmentSetting & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EnvironmentSetting;
    };
};

/**
 * Contains response data for the update operation.
 */
export type EnvironmentSettingsUpdateResponse = EnvironmentSetting & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EnvironmentSetting;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type EnvironmentSettingsBeginCreateOrUpdateResponse = EnvironmentSetting & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EnvironmentSetting;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type EnvironmentSettingsListNextResponse = ResponseWithContinuationEnvironmentSetting & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResponseWithContinuationEnvironmentSetting;
    };
};

/**
 * Contains response data for the list operation.
 */
export type EnvironmentsListResponse = ResponseWithContinuationEnvironment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResponseWithContinuationEnvironment;
    };
};

/**
 * Contains response data for the get operation.
 */
export type EnvironmentsGetResponse = Environment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Environment;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type EnvironmentsCreateOrUpdateResponse = Environment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Environment;
    };
};

/**
 * Contains response data for the update operation.
 */
export type EnvironmentsUpdateResponse = Environment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Environment;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type EnvironmentsListNextResponse = ResponseWithContinuationEnvironment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResponseWithContinuationEnvironment;
    };
};

/**
 * Contains response data for the list operation.
 */
export type UsersListResponse = ResponseWithContinuationUser & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResponseWithContinuationUser;
    };
};

/**
 * Contains response data for the get operation.
 */
export type UsersGetResponse = User & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: User;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type UsersCreateOrUpdateResponse = User & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: User;
    };
};

/**
 * Contains response data for the update operation.
 */
export type UsersUpdateResponse = User & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: User;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type UsersListNextResponse = ResponseWithContinuationUser & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResponseWithContinuationUser;
    };
};
