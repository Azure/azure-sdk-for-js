/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };


/**
 * @interface
 * An interface representing InformationalUrl.
 * Represents a group of URIs that provide terms of service, marketing, support
 * and privacy policy information about an application. The default value for
 * each string is null.
 *
 */
export interface InformationalUrl {
  /**
   * @member {string} [termsOfService] The terms of service URI
   */
  termsOfService?: string;
  /**
   * @member {string} [marketing] The marketing URI
   */
  marketing?: string;
  /**
   * @member {string} [privacy] The privacy policy URI
   */
  privacy?: string;
  /**
   * @member {string} [support] The support URI
   */
  support?: string;
}

/**
 * @interface
 * An interface representing OAuth2Permission.
 * Represents an OAuth 2.0 delegated permission scope. The specified OAuth 2.0
 * delegated permission scopes may be requested by client applications (through
 * the requiredResourceAccess collection on the Application object) when
 * calling a resource application. The oauth2Permissions property of the
 * ServicePrincipal entity and of the Application entity is a collection of
 * OAuth2Permission.
 *
 */
export interface OAuth2Permission {
  /**
   * @member {string} [adminConsentDescription] Permission help text that
   * appears in the admin consent and app assignment experiences.
   */
  adminConsentDescription?: string;
  /**
   * @member {string} [adminConsentDisplayName] Display name for the permission
   * that appears in the admin consent and app assignment experiences.
   */
  adminConsentDisplayName?: string;
  /**
   * @member {string} [id] Unique scope permission identifier inside the
   * oauth2Permissions collection.
   */
  id?: string;
  /**
   * @member {boolean} [isEnabled] When creating or updating a permission, this
   * property must be set to true (which is the default). To delete a
   * permission, this property must first be set to false. At that point, in a
   * subsequent call, the permission may be removed.
   */
  isEnabled?: boolean;
  /**
   * @member {string} [type] Specifies whether this scope permission can be
   * consented to by an end user, or whether it is a tenant-wide permission
   * that must be consented to by a Company Administrator. Possible values are
   * "User" or "Admin".
   */
  type?: string;
  /**
   * @member {string} [userConsentDescription] Permission help text that
   * appears in the end user consent experience.
   */
  userConsentDescription?: string;
  /**
   * @member {string} [userConsentDisplayName] Display name for the permission
   * that appears in the end user consent experience.
   */
  userConsentDisplayName?: string;
  /**
   * @member {string} [value] The value of the scope claim that the resource
   * application should expect in the OAuth 2.0 access token.
   */
  value?: string;
}

/**
 * @interface
 * An interface representing OptionalClaim.
 * Specifying the claims to be included in a token.
 *
 */
export interface OptionalClaim {
  /**
   * @member {string} [name] Claim name.
   */
  name?: string;
  /**
   * @member {string} [source] Claim source.
   */
  source?: string;
  /**
   * @member {boolean} [essential] Is this a required claim.
   */
  essential?: boolean;
  /**
   * @member {any} [additionalProperties]
   */
  additionalProperties?: any;
}

/**
 * @interface
 * An interface representing OptionalClaims.
 * Specifying the claims to be included in the token.
 *
 */
export interface OptionalClaims {
  /**
   * @member {OptionalClaim[]} [idToken] Optional claims requested to be
   * included in the id token.
   */
  idToken?: OptionalClaim[];
  /**
   * @member {OptionalClaim[]} [accessToken] Optional claims requested to be
   * included in the access token.
   */
  accessToken?: OptionalClaim[];
  /**
   * @member {OptionalClaim[]} [samlToken] Optional claims requested to be
   * included in the saml token.
   */
  samlToken?: OptionalClaim[];
}

/**
 * @interface
 * An interface representing PreAuthorizedApplicationPermission.
 * Contains information about the pre-authorized permissions.
 *
 */
export interface PreAuthorizedApplicationPermission {
  /**
   * @member {boolean} [directAccessGrant] Indicates whether the permission set
   * is DirectAccess or impersonation.
   */
  directAccessGrant?: boolean;
  /**
   * @member {string[]} [accessGrants] The list of permissions.
   */
  accessGrants?: string[];
}

/**
 * @interface
 * An interface representing PreAuthorizedApplicationExtension.
 * Representation of an app PreAuthorizedApplicationExtension required by a pre
 * authorized client app.
 *
 */
export interface PreAuthorizedApplicationExtension {
  /**
   * @member {string[]} [conditions] The extension's conditions.
   */
  conditions?: string[];
}

/**
 * @interface
 * An interface representing PreAuthorizedApplication.
 * Contains information about pre authorized client application.
 *
 */
export interface PreAuthorizedApplication {
  /**
   * @member {string} [appId] Represents the application id.
   */
  appId?: string;
  /**
   * @member {PreAuthorizedApplicationPermission[]} [permissions] Collection of
   * required app permissions/entitlements from the resource application.
   */
  permissions?: PreAuthorizedApplicationPermission[];
  /**
   * @member {PreAuthorizedApplicationExtension[]} [extensions] Collection of
   * extensions from the resource application.
   */
  extensions?: PreAuthorizedApplicationExtension[];
}

/**
 * @interface
 * An interface representing GraphError.
 * Active Directory error information.
 *
 */
export interface GraphError {
  /**
   * @member {string} [code] Error code.
   */
  code?: string;
  /**
   * @member {string} [message] Error message value.
   */
  message?: string;
}

/**
 * Contains the possible cases for DirectoryObject.
 */
export type DirectoryObjectUnion = DirectoryObject | Application | ADGroup | ServicePrincipal | User;

/**
 * @interface
 * An interface representing DirectoryObject.
 * Represents an Azure Active Directory object.
 *
 */
export interface DirectoryObject {
  /**
   * @member {string} objectType Polymorphic Discriminator
   */
  objectType: "DirectoryObject";
  /**
   * @member {string} [objectId] The object ID.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly objectId?: string;
  /**
   * @member {Date} [deletionTimestamp] The time at which the directory object
   * was deleted.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly deletionTimestamp?: Date;
  /**
   * @property Describes unknown properties. The value of an unknown property
   * can be of "any" type.
   */
  [property: string]: any;
}

/**
 * @interface
 * An interface representing KeyCredential.
 * Active Directory Key Credential information.
 *
 */
export interface KeyCredential {
  /**
   * @member {Date} [startDate] Start date.
   */
  startDate?: Date;
  /**
   * @member {Date} [endDate] End date.
   */
  endDate?: Date;
  /**
   * @member {string} [value] Key value.
   */
  value?: string;
  /**
   * @member {string} [keyId] Key ID.
   */
  keyId?: string;
  /**
   * @member {string} [usage] Usage. Acceptable values are 'Verify' and 'Sign'.
   */
  usage?: string;
  /**
   * @member {string} [type] Type. Acceptable values are 'AsymmetricX509Cert'
   * and 'Symmetric'.
   */
  type?: string;
  /**
   * @member {string} [customKeyIdentifier] Custom Key Identifier
   */
  customKeyIdentifier?: string;
  /**
   * @property Describes unknown properties. The value of an unknown property
   * can be of "any" type.
   */
  [property: string]: any;
}

/**
 * @interface
 * An interface representing PasswordCredential.
 * Active Directory Password Credential information.
 *
 */
export interface PasswordCredential {
  /**
   * @member {Date} [startDate] Start date.
   */
  startDate?: Date;
  /**
   * @member {Date} [endDate] End date.
   */
  endDate?: Date;
  /**
   * @member {string} [keyId] Key ID.
   */
  keyId?: string;
  /**
   * @member {string} [value] Key value.
   */
  value?: string;
  /**
   * @member {Uint8Array} [customKeyIdentifier] Custom Key Identifier
   */
  customKeyIdentifier?: Uint8Array;
  /**
   * @property Describes unknown properties. The value of an unknown property
   * can be of "any" type.
   */
  [property: string]: any;
}

/**
 * @interface
 * An interface representing ResourceAccess.
 * Specifies an OAuth 2.0 permission scope or an app role that an application
 * requires. The resourceAccess property of the RequiredResourceAccess type is
 * a collection of ResourceAccess.
 *
 */
export interface ResourceAccess {
  /**
   * @member {string} id The unique identifier for one of the OAuth2Permission
   * or AppRole instances that the resource application exposes.
   */
  id: string;
  /**
   * @member {string} [type] Specifies whether the id property references an
   * OAuth2Permission or an AppRole. Possible values are "scope" or "role".
   */
  type?: string;
  /**
   * @property Describes unknown properties. The value of an unknown property
   * can be of "any" type.
   */
  [property: string]: any;
}

/**
 * @interface
 * An interface representing RequiredResourceAccess.
 * Specifies the set of OAuth 2.0 permission scopes and app roles under the
 * specified resource that an application requires access to. The specified
 * OAuth 2.0 permission scopes may be requested by client applications (through
 * the requiredResourceAccess collection) when calling a resource application.
 * The requiredResourceAccess property of the Application entity is a
 * collection of RequiredResourceAccess.
 *
 */
export interface RequiredResourceAccess {
  /**
   * @member {ResourceAccess[]} resourceAccess The list of OAuth2.0 permission
   * scopes and app roles that the application requires from the specified
   * resource.
   */
  resourceAccess: ResourceAccess[];
  /**
   * @member {string} [resourceAppId] The unique identifier for the resource
   * that the application requires access to. This should be equal to the appId
   * declared on the target resource application.
   */
  resourceAppId?: string;
  /**
   * @property Describes unknown properties. The value of an unknown property
   * can be of "any" type.
   */
  [property: string]: any;
}

/**
 * @interface
 * An interface representing AppRole.
 */
export interface AppRole {
  /**
   * @member {string} [id] Unique role identifier inside the appRoles
   * collection.
   */
  id?: string;
  /**
   * @member {string[]} [allowedMemberTypes] Specifies whether this app role
   * definition can be assigned to users and groups by setting to 'User', or to
   * other applications (that are accessing this application in daemon service
   * scenarios) by setting to 'Application', or to both.
   */
  allowedMemberTypes?: string[];
  /**
   * @member {string} [description] Permission help text that appears in the
   * admin app assignment and consent experiences.
   */
  description?: string;
  /**
   * @member {string} [displayName] Display name for the permission that
   * appears in the admin consent and app assignment experiences.
   */
  displayName?: string;
  /**
   * @member {boolean} [isEnabled] When creating or updating a role definition,
   * this must be set to true (which is the default). To delete a role, this
   * must first be set to false. At that point, in a subsequent call, this role
   * may be removed.
   */
  isEnabled?: boolean;
  /**
   * @member {string} [value] Specifies the value of the roles claim that the
   * application should expect in the authentication and access tokens.
   */
  value?: string;
}

/**
 * @interface
 * An interface representing ApplicationBase.
 * Active Directive Application common properties shared among GET, POST and
 * PATCH
 *
 */
export interface ApplicationBase {
  /**
   * @member {boolean} [allowGuestsSignIn] A property on the application to
   * indicate if the application accepts other IDPs or not or partially
   * accepts.
   */
  allowGuestsSignIn?: boolean;
  /**
   * @member {boolean} [allowPassthroughUsers] Indicates that the application
   * supports pass through users who have no presence in the resource tenant.
   */
  allowPassthroughUsers?: boolean;
  /**
   * @member {string} [appLogoUrl] The url for the application logo image
   * stored in a CDN.
   */
  appLogoUrl?: string;
  /**
   * @member {AppRole[]} [appRoles] The collection of application roles that an
   * application may declare. These roles can be assigned to users, groups or
   * service principals.
   */
  appRoles?: AppRole[];
  /**
   * @member {string[]} [appPermissions] The application permissions.
   */
  appPermissions?: string[];
  /**
   * @member {boolean} [availableToOtherTenants] Whether the application is
   * available to other tenants.
   */
  availableToOtherTenants?: boolean;
  /**
   * @member {string} [errorUrl] A URL provided by the author of the
   * application to report errors when using the application.
   */
  errorUrl?: string;
  /**
   * @member {any} [groupMembershipClaims] Configures the groups claim issued
   * in a user or OAuth 2.0 access token that the app expects.
   */
  groupMembershipClaims?: any;
  /**
   * @member {string} [homepage] The home page of the application.
   */
  homepage?: string;
  /**
   * @member {InformationalUrl} [informationalUrls] urls with more informations
   * of the application.
   */
  informationalUrls?: InformationalUrl;
  /**
   * @member {boolean} [isDeviceOnlyAuthSupported] Specifies whether this
   * application supports device authentication without a user. The default is
   * false.
   */
  isDeviceOnlyAuthSupported?: boolean;
  /**
   * @member {KeyCredential[]} [keyCredentials] A collection of KeyCredential
   * objects.
   */
  keyCredentials?: KeyCredential[];
  /**
   * @member {string[]} [knownClientApplications] Client applications that are
   * tied to this resource application. Consent to any of the known client
   * applications will result in implicit consent to the resource application
   * through a combined consent dialog (showing the OAuth permission scopes
   * required by the client and the resource).
   */
  knownClientApplications?: string[];
  /**
   * @member {string} [logoutUrl] the url of the logout page
   */
  logoutUrl?: string;
  /**
   * @member {boolean} [oauth2AllowImplicitFlow] Whether to allow implicit
   * grant flow for OAuth2
   */
  oauth2AllowImplicitFlow?: boolean;
  /**
   * @member {boolean} [oauth2AllowUrlPathMatching] Specifies whether during a
   * token Request Azure AD will allow path matching of the redirect URI
   * against the applications collection of replyURLs. The default is false.
   */
  oauth2AllowUrlPathMatching?: boolean;
  /**
   * @member {OAuth2Permission[]} [oauth2Permissions] The collection of OAuth
   * 2.0 permission scopes that the web API (resource) application exposes to
   * client applications. These permission scopes may be granted to client
   * applications during consent.
   */
  oauth2Permissions?: OAuth2Permission[];
  /**
   * @member {boolean} [oauth2RequirePostResponse] Specifies whether, as part
   * of OAuth 2.0 token requests, Azure AD will allow POST requests, as opposed
   * to GET requests. The default is false, which specifies that only GET
   * requests will be allowed.
   */
  oauth2RequirePostResponse?: boolean;
  /**
   * @member {string[]} [orgRestrictions] A list of tenants allowed to access
   * application.
   */
  orgRestrictions?: string[];
  /**
   * @member {OptionalClaims} [optionalClaims]
   */
  optionalClaims?: OptionalClaims;
  /**
   * @member {PasswordCredential[]} [passwordCredentials] A collection of
   * PasswordCredential objects
   */
  passwordCredentials?: PasswordCredential[];
  /**
   * @member {PreAuthorizedApplication[]} [preAuthorizedApplications] list of
   * pre-authorized applications.
   */
  preAuthorizedApplications?: PreAuthorizedApplication[];
  /**
   * @member {boolean} [publicClient] Specifies whether this application is a
   * public client (such as an installed application running on a mobile
   * device). Default is false.
   */
  publicClient?: boolean;
  /**
   * @member {string} [publisherDomain] Reliable domain which can be used to
   * identify an application.
   */
  publisherDomain?: string;
  /**
   * @member {string[]} [replyUrls] A collection of reply URLs for the
   * application.
   */
  replyUrls?: string[];
  /**
   * @member {RequiredResourceAccess[]} [requiredResourceAccess] Specifies
   * resources that this application requires access to and the set of OAuth
   * permission scopes and application roles that it needs under each of those
   * resources. This pre-configuration of required resource access drives the
   * consent experience.
   */
  requiredResourceAccess?: RequiredResourceAccess[];
  /**
   * @member {string} [samlMetadataUrl] The URL to the SAML metadata for the
   * application.
   */
  samlMetadataUrl?: string;
  /**
   * @member {string} [signInAudience] Audience for signing in to the
   * application (AzureADMyOrganization, AzureADAllOrganizations,
   * AzureADAndMicrosoftAccounts).
   */
  signInAudience?: string;
  /**
   * @member {string} [wwwHomepage] The primary Web page.
   */
  wwwHomepage?: string;
}

/**
 * @interface
 * An interface representing ApplicationCreateParameters.
 * Request parameters for creating a new application.
 *
 * @extends ApplicationBase
 */
export interface ApplicationCreateParameters extends ApplicationBase {
  /**
   * @member {string} displayName The display name of the application.
   */
  displayName: string;
  /**
   * @member {string[]} identifierUris A collection of URIs for the
   * application.
   */
  identifierUris: string[];
}

/**
 * @interface
 * An interface representing ApplicationUpdateParameters.
 * Request parameters for updating a new application.
 *
 * @extends ApplicationBase
 */
export interface ApplicationUpdateParameters extends ApplicationBase {
  /**
   * @member {string} [displayName] The display name of the application.
   */
  displayName?: string;
  /**
   * @member {string[]} [identifierUris] A collection of URIs for the
   * application.
   */
  identifierUris?: string[];
}

/**
 * @interface
 * An interface representing Application.
 * Active Directory application information.
 *
 */
export interface Application {
  /**
   * @member {string} objectType Polymorphic Discriminator
   */
  objectType: "Application";
  /**
   * @member {string} [objectId] The object ID.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly objectId?: string;
  /**
   * @member {Date} [deletionTimestamp] The time at which the directory object
   * was deleted.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly deletionTimestamp?: Date;
  /**
   * @member {string} [appId] The application ID.
   */
  appId?: string;
  /**
   * @member {boolean} [allowGuestsSignIn] A property on the application to
   * indicate if the application accepts other IDPs or not or partially
   * accepts.
   */
  allowGuestsSignIn?: boolean;
  /**
   * @member {boolean} [allowPassthroughUsers] Indicates that the application
   * supports pass through users who have no presence in the resource tenant.
   */
  allowPassthroughUsers?: boolean;
  /**
   * @member {string} [appLogoUrl] The url for the application logo image
   * stored in a CDN.
   */
  appLogoUrl?: string;
  /**
   * @member {AppRole[]} [appRoles] The collection of application roles that an
   * application may declare. These roles can be assigned to users, groups or
   * service principals.
   */
  appRoles?: AppRole[];
  /**
   * @member {string[]} [appPermissions] The application permissions.
   */
  appPermissions?: string[];
  /**
   * @member {boolean} [availableToOtherTenants] Whether the application is
   * available to other tenants.
   */
  availableToOtherTenants?: boolean;
  /**
   * @member {string} [displayName] The display name of the application.
   */
  displayName?: string;
  /**
   * @member {string} [errorUrl] A URL provided by the author of the
   * application to report errors when using the application.
   */
  errorUrl?: string;
  /**
   * @member {any} [groupMembershipClaims] Configures the groups claim issued
   * in a user or OAuth 2.0 access token that the app expects.
   */
  groupMembershipClaims?: any;
  /**
   * @member {string} [homepage] The home page of the application.
   */
  homepage?: string;
  /**
   * @member {string[]} [identifierUris] A collection of URIs for the
   * application.
   */
  identifierUris?: string[];
  /**
   * @member {InformationalUrl} [informationalUrls] urls with more informations
   * of the application.
   */
  informationalUrls?: InformationalUrl;
  /**
   * @member {boolean} [isDeviceOnlyAuthSupported] Specifies whether this
   * application supports device authentication without a user. The default is
   * false.
   */
  isDeviceOnlyAuthSupported?: boolean;
  /**
   * @member {KeyCredential[]} [keyCredentials] A collection of KeyCredential
   * objects.
   */
  keyCredentials?: KeyCredential[];
  /**
   * @member {string[]} [knownClientApplications] Client applications that are
   * tied to this resource application. Consent to any of the known client
   * applications will result in implicit consent to the resource application
   * through a combined consent dialog (showing the OAuth permission scopes
   * required by the client and the resource).
   */
  knownClientApplications?: string[];
  /**
   * @member {string} [logoutUrl] the url of the logout page
   */
  logoutUrl?: string;
  /**
   * @member {boolean} [oauth2AllowImplicitFlow] Whether to allow implicit
   * grant flow for OAuth2
   */
  oauth2AllowImplicitFlow?: boolean;
  /**
   * @member {boolean} [oauth2AllowUrlPathMatching] Specifies whether during a
   * token Request Azure AD will allow path matching of the redirect URI
   * against the applications collection of replyURLs. The default is false.
   */
  oauth2AllowUrlPathMatching?: boolean;
  /**
   * @member {OAuth2Permission[]} [oauth2Permissions] The collection of OAuth
   * 2.0 permission scopes that the web API (resource) application exposes to
   * client applications. These permission scopes may be granted to client
   * applications during consent.
   */
  oauth2Permissions?: OAuth2Permission[];
  /**
   * @member {boolean} [oauth2RequirePostResponse] Specifies whether, as part
   * of OAuth 2.0 token requests, Azure AD will allow POST requests, as opposed
   * to GET requests. The default is false, which specifies that only GET
   * requests will be allowed.
   */
  oauth2RequirePostResponse?: boolean;
  /**
   * @member {string[]} [orgRestrictions] A list of tenants allowed to access
   * application.
   */
  orgRestrictions?: string[];
  /**
   * @member {OptionalClaims} [optionalClaims]
   */
  optionalClaims?: OptionalClaims;
  /**
   * @member {PasswordCredential[]} [passwordCredentials] A collection of
   * PasswordCredential objects
   */
  passwordCredentials?: PasswordCredential[];
  /**
   * @member {PreAuthorizedApplication[]} [preAuthorizedApplications] list of
   * pre-authorized applications.
   */
  preAuthorizedApplications?: PreAuthorizedApplication[];
  /**
   * @member {boolean} [publicClient] Specifies whether this application is a
   * public client (such as an installed application running on a mobile
   * device). Default is false.
   */
  publicClient?: boolean;
  /**
   * @member {string} [publisherDomain] Reliable domain which can be used to
   * identify an application.
   */
  publisherDomain?: string;
  /**
   * @member {string[]} [replyUrls] A collection of reply URLs for the
   * application.
   */
  replyUrls?: string[];
  /**
   * @member {RequiredResourceAccess[]} [requiredResourceAccess] Specifies
   * resources that this application requires access to and the set of OAuth
   * permission scopes and application roles that it needs under each of those
   * resources. This pre-configuration of required resource access drives the
   * consent experience.
   */
  requiredResourceAccess?: RequiredResourceAccess[];
  /**
   * @member {string} [samlMetadataUrl] The URL to the SAML metadata for the
   * application.
   */
  samlMetadataUrl?: string;
  /**
   * @member {string} [signInAudience] Audience for signing in to the
   * application (AzureADMyOrganization, AzureADAllOrganizations,
   * AzureADAndMicrosoftAccounts).
   */
  signInAudience?: string;
  /**
   * @member {string} [wwwHomepage] The primary Web page.
   */
  wwwHomepage?: string;
}

/**
 * @interface
 * An interface representing AddOwnerParameters.
 * Request parameters for adding a owner to an application.
 *
 */
export interface AddOwnerParameters {
  /**
   * @member {string} url A owner object URL, such as
   * "https://graph.windows.net/0b1f9851-1bf0-433f-aec3-cb9272f093dc/directoryObjects/f260bbc4-c254-447b-94cf-293b5ec434dd",
   * where "0b1f9851-1bf0-433f-aec3-cb9272f093dc" is the tenantId and
   * "f260bbc4-c254-447b-94cf-293b5ec434dd" is the objectId of the owner (user,
   * application, servicePrincipal, group) to be added.
   */
  url: string;
  /**
   * @property Describes unknown properties. The value of an unknown property
   * can be of "any" type.
   */
  [property: string]: any;
}

/**
 * @interface
 * An interface representing KeyCredentialsUpdateParameters.
 * Request parameters for a KeyCredentials update operation
 *
 */
export interface KeyCredentialsUpdateParameters {
  /**
   * @member {KeyCredential[]} value A collection of KeyCredentials.
   */
  value: KeyCredential[];
}

/**
 * @interface
 * An interface representing PasswordCredentialsUpdateParameters.
 * Request parameters for a PasswordCredentials update operation.
 *
 */
export interface PasswordCredentialsUpdateParameters {
  /**
   * @member {PasswordCredential[]} value A collection of PasswordCredentials.
   */
  value: PasswordCredential[];
}

/**
 * @interface
 * An interface representing GroupAddMemberParameters.
 * Request parameters for adding a member to a group.
 *
 */
export interface GroupAddMemberParameters {
  /**
   * @member {string} url A member object URL, such as
   * "https://graph.windows.net/0b1f9851-1bf0-433f-aec3-cb9272f093dc/directoryObjects/f260bbc4-c254-447b-94cf-293b5ec434dd",
   * where "0b1f9851-1bf0-433f-aec3-cb9272f093dc" is the tenantId and
   * "f260bbc4-c254-447b-94cf-293b5ec434dd" is the objectId of the member
   * (user, application, servicePrincipal, group) to be added.
   */
  url: string;
  /**
   * @property Describes unknown properties. The value of an unknown property
   * can be of "any" type.
   */
  [property: string]: any;
}

/**
 * @interface
 * An interface representing GroupCreateParameters.
 * Request parameters for creating a new group.
 *
 */
export interface GroupCreateParameters {
  /**
   * @member {string} displayName Group display name
   */
  displayName: string;
  /**
   * @member {string} mailNickname Mail nickname
   */
  mailNickname: string;
  /**
   * @property Describes unknown properties. The value of an unknown property
   * can be of "any" type.
   */
  [property: string]: any;
}

/**
 * @interface
 * An interface representing ADGroup.
 * Active Directory group information.
 *
 */
export interface ADGroup {
  /**
   * @member {string} objectType Polymorphic Discriminator
   */
  objectType: "Group";
  /**
   * @member {string} [objectId] The object ID.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly objectId?: string;
  /**
   * @member {Date} [deletionTimestamp] The time at which the directory object
   * was deleted.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly deletionTimestamp?: Date;
  /**
   * @member {string} [displayName] The display name of the group.
   */
  displayName?: string;
  /**
   * @member {boolean} [mailEnabled] Whether the group is mail-enabled. Must be
   * false. This is because only pure security groups can be created using the
   * Graph API.
   */
  mailEnabled?: boolean;
  /**
   * @member {string} [mailNickname] The mail alias for the group.
   */
  mailNickname?: string;
  /**
   * @member {boolean} [securityEnabled] Whether the group is security-enable.
   */
  securityEnabled?: boolean;
  /**
   * @member {string} [mail] The primary email address of the group.
   */
  mail?: string;
}

/**
 * @interface
 * An interface representing GroupGetMemberGroupsParameters.
 * Request parameters for GetMemberGroups API call.
 *
 */
export interface GroupGetMemberGroupsParameters {
  /**
   * @member {boolean} securityEnabledOnly If true, only membership in
   * security-enabled groups should be checked. Otherwise, membership in all
   * groups should be checked.
   */
  securityEnabledOnly: boolean;
  /**
   * @property Describes unknown properties. The value of an unknown property
   * can be of "any" type.
   */
  [property: string]: any;
}

/**
 * @interface
 * An interface representing CheckGroupMembershipParameters.
 * Request parameters for IsMemberOf API call.
 *
 */
export interface CheckGroupMembershipParameters {
  /**
   * @member {string} groupId The object ID of the group to check.
   */
  groupId: string;
  /**
   * @member {string} memberId The object ID of the contact, group, user, or
   * service principal to check for membership in the specified group.
   */
  memberId: string;
  /**
   * @property Describes unknown properties. The value of an unknown property
   * can be of "any" type.
   */
  [property: string]: any;
}

/**
 * @interface
 * An interface representing CheckGroupMembershipResult.
 * Server response for IsMemberOf API call
 *
 */
export interface CheckGroupMembershipResult {
  /**
   * @member {boolean} [value] True if the specified user, group, contact, or
   * service principal has either direct or transitive membership in the
   * specified group; otherwise, false.
   */
  value?: boolean;
  /**
   * @property Describes unknown properties. The value of an unknown property
   * can be of "any" type.
   */
  [property: string]: any;
}

/**
 * @interface
 * An interface representing ServicePrincipalBase.
 * Active Directory service principal common properties shared among GET, POST
 * and PATCH
 *
 */
export interface ServicePrincipalBase {
  /**
   * @member {string} [accountEnabled] whether or not the service principal
   * account is enabled
   */
  accountEnabled?: string;
  /**
   * @member {boolean} [appRoleAssignmentRequired] Specifies whether an
   * AppRoleAssignment to a user or group is required before Azure AD will
   * issue a user or access token to the application.
   */
  appRoleAssignmentRequired?: boolean;
  /**
   * @member {KeyCredential[]} [keyCredentials] The collection of key
   * credentials associated with the service principal.
   */
  keyCredentials?: KeyCredential[];
  /**
   * @member {PasswordCredential[]} [passwordCredentials] The collection of
   * password credentials associated with the service principal.
   */
  passwordCredentials?: PasswordCredential[];
  /**
   * @member {string} [servicePrincipalType] the type of the service principal
   */
  servicePrincipalType?: string;
  /**
   * @member {string[]} [tags] Optional list of tags that you can apply to your
   * service principals. Not nullable.
   */
  tags?: string[];
}

/**
 * @interface
 * An interface representing ServicePrincipalCreateParameters.
 * Request parameters for creating a new service principal.
 *
 * @extends ServicePrincipalBase
 */
export interface ServicePrincipalCreateParameters extends ServicePrincipalBase {
  /**
   * @member {string} appId The application ID.
   */
  appId: string;
}

/**
 * @interface
 * An interface representing ServicePrincipalUpdateParameters.
 * Request parameters for update an existing service principal.
 *
 * @extends ServicePrincipalBase
 */
export interface ServicePrincipalUpdateParameters extends ServicePrincipalBase {
}

/**
 * @interface
 * An interface representing ServicePrincipal.
 * Active Directory service principal information.
 *
 */
export interface ServicePrincipal {
  /**
   * @member {string} objectType Polymorphic Discriminator
   */
  objectType: "ServicePrincipal";
  /**
   * @member {string} [objectId] The object ID.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly objectId?: string;
  /**
   * @member {Date} [deletionTimestamp] The time at which the directory object
   * was deleted.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly deletionTimestamp?: Date;
  /**
   * @member {string} [accountEnabled] whether or not the service principal
   * account is enabled
   */
  accountEnabled?: string;
  /**
   * @member {string[]} [alternativeNames] alternative names
   */
  alternativeNames?: string[];
  /**
   * @member {string} [appDisplayName] The display name exposed by the
   * associated application.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly appDisplayName?: string;
  /**
   * @member {string} [appId] The application ID.
   */
  appId?: string;
  /**
   * @member {string} [appOwnerTenantId] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly appOwnerTenantId?: string;
  /**
   * @member {boolean} [appRoleAssignmentRequired] Specifies whether an
   * AppRoleAssignment to a user or group is required before Azure AD will
   * issue a user or access token to the application.
   */
  appRoleAssignmentRequired?: boolean;
  /**
   * @member {AppRole[]} [appRoles] The collection of application roles that an
   * application may declare. These roles can be assigned to users, groups or
   * service principals.
   */
  appRoles?: AppRole[];
  /**
   * @member {string} [displayName] The display name of the service principal.
   */
  displayName?: string;
  /**
   * @member {string} [errorUrl] A URL provided by the author of the associated
   * application to report errors when using the application.
   */
  errorUrl?: string;
  /**
   * @member {string} [homepage] The URL to the homepage of the associated
   * application.
   */
  homepage?: string;
  /**
   * @member {KeyCredential[]} [keyCredentials] The collection of key
   * credentials associated with the service principal.
   */
  keyCredentials?: KeyCredential[];
  /**
   * @member {string} [logoutUrl] A URL provided by the author of the
   * associated application to logout
   */
  logoutUrl?: string;
  /**
   * @member {OAuth2Permission[]} [oauth2Permissions] The OAuth 2.0 permissions
   * exposed by the associated application.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly oauth2Permissions?: OAuth2Permission[];
  /**
   * @member {PasswordCredential[]} [passwordCredentials] The collection of
   * password credentials associated with the service principal.
   */
  passwordCredentials?: PasswordCredential[];
  /**
   * @member {string} [preferredTokenSigningKeyThumbprint] The thumbprint of
   * preferred certificate to sign the token
   */
  preferredTokenSigningKeyThumbprint?: string;
  /**
   * @member {string} [publisherName] The publisher's name of the associated
   * application
   */
  publisherName?: string;
  /**
   * @member {string[]} [replyUrls] The URLs that user tokens are sent to for
   * sign in with the associated application.  The redirect URIs that the oAuth
   * 2.0 authorization code and access tokens are sent to for the associated
   * application.
   */
  replyUrls?: string[];
  /**
   * @member {string} [samlMetadataUrl] The URL to the SAML metadata of the
   * associated application
   */
  samlMetadataUrl?: string;
  /**
   * @member {string[]} [servicePrincipalNames] A collection of service
   * principal names.
   */
  servicePrincipalNames?: string[];
  /**
   * @member {string} [servicePrincipalType] the type of the service principal
   */
  servicePrincipalType?: string;
  /**
   * @member {string[]} [tags] Optional list of tags that you can apply to your
   * service principals. Not nullable.
   */
  tags?: string[];
}

/**
 * @interface
 * An interface representing PasswordProfile.
 * The password profile associated with a user.
 *
 */
export interface PasswordProfile {
  /**
   * @member {string} password Password
   */
  password: string;
  /**
   * @member {boolean} [forceChangePasswordNextLogin] Whether to force a
   * password change on next login.
   */
  forceChangePasswordNextLogin?: boolean;
  /**
   * @property Describes unknown properties. The value of an unknown property
   * can be of "any" type.
   */
  [property: string]: any;
}

/**
 * @interface
 * An interface representing UserBase.
 */
export interface UserBase {
  /**
   * @member {string} [immutableId] This must be specified if you are using a
   * federated domain for the user's userPrincipalName (UPN) property when
   * creating a new user account. It is used to associate an on-premises Active
   * Directory user account with their Azure AD user object.
   */
  immutableId?: string;
  /**
   * @member {string} [usageLocation] A two letter country code (ISO standard
   * 3166). Required for users that will be assigned licenses due to legal
   * requirement to check for availability of services in countries. Examples
   * include: "US", "JP", and "GB".
   */
  usageLocation?: string;
  /**
   * @member {string} [givenName] The given name for the user.
   */
  givenName?: string;
  /**
   * @member {string} [surname] The user's surname (family name or last name).
   */
  surname?: string;
  /**
   * @member {UserType} [userType] A string value that can be used to classify
   * user types in your directory, such as 'Member' and 'Guest'. Possible
   * values include: 'Member', 'Guest'
   */
  userType?: UserType;
  /**
   * @property Describes unknown properties. The value of an unknown property
   * can be of "any" type.
   */
  [property: string]: any;
}

/**
 * @interface
 * An interface representing UserCreateParameters.
 * Request parameters for creating a new work or school account user.
 *
 * @extends UserBase
 */
export interface UserCreateParameters extends UserBase {
  /**
   * @member {boolean} accountEnabled Whether the account is enabled.
   */
  accountEnabled: boolean;
  /**
   * @member {string} displayName The display name of the user.
   */
  displayName: string;
  /**
   * @member {PasswordProfile} passwordProfile Password Profile
   */
  passwordProfile: PasswordProfile;
  /**
   * @member {string} userPrincipalName The user principal name
   * (someuser@contoso.com). It must contain one of the verified domains for
   * the tenant.
   */
  userPrincipalName: string;
  /**
   * @member {string} mailNickname The mail alias for the user.
   */
  mailNickname: string;
  /**
   * @member {string} [mail] The primary email address of the user.
   */
  mail?: string;
}

/**
 * @interface
 * An interface representing UserUpdateParameters.
 * Request parameters for updating an existing work or school account user.
 *
 * @extends UserBase
 */
export interface UserUpdateParameters extends UserBase {
  /**
   * @member {boolean} [accountEnabled] Whether the account is enabled.
   */
  accountEnabled?: boolean;
  /**
   * @member {string} [displayName] The display name of the user.
   */
  displayName?: string;
  /**
   * @member {PasswordProfile} [passwordProfile] The password profile of the
   * user.
   */
  passwordProfile?: PasswordProfile;
  /**
   * @member {string} [userPrincipalName] The user principal name
   * (someuser@contoso.com). It must contain one of the verified domains for
   * the tenant.
   */
  userPrincipalName?: string;
  /**
   * @member {string} [mailNickname] The mail alias for the user.
   */
  mailNickname?: string;
}

/**
 * @interface
 * An interface representing SignInName.
 * Contains information about a sign-in name of a local account user in an
 * Azure Active Directory B2C tenant.
 *
 */
export interface SignInName {
  /**
   * @member {string} [type] A string value that can be used to classify user
   * sign-in types in your directory, such as 'emailAddress' or 'userName'.
   */
  type?: string;
  /**
   * @member {string} [value] The sign-in used by the local account. Must be
   * unique across the company/tenant. For example, 'johnc@example.com'.
   */
  value?: string;
  /**
   * @property Describes unknown properties. The value of an unknown property
   * can be of "any" type.
   */
  [property: string]: any;
}

/**
 * @interface
 * An interface representing User.
 * Active Directory user information.
 *
 */
export interface User {
  /**
   * @member {string} objectType Polymorphic Discriminator
   */
  objectType: "User";
  /**
   * @member {string} [objectId] The object ID.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly objectId?: string;
  /**
   * @member {Date} [deletionTimestamp] The time at which the directory object
   * was deleted.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly deletionTimestamp?: Date;
  /**
   * @member {string} [immutableId] This must be specified if you are using a
   * federated domain for the user's userPrincipalName (UPN) property when
   * creating a new user account. It is used to associate an on-premises Active
   * Directory user account with their Azure AD user object.
   */
  immutableId?: string;
  /**
   * @member {string} [usageLocation] A two letter country code (ISO standard
   * 3166). Required for users that will be assigned licenses due to legal
   * requirement to check for availability of services in countries. Examples
   * include: "US", "JP", and "GB".
   */
  usageLocation?: string;
  /**
   * @member {string} [givenName] The given name for the user.
   */
  givenName?: string;
  /**
   * @member {string} [surname] The user's surname (family name or last name).
   */
  surname?: string;
  /**
   * @member {UserType} [userType] A string value that can be used to classify
   * user types in your directory, such as 'Member' and 'Guest'. Possible
   * values include: 'Member', 'Guest'
   */
  userType?: UserType;
  /**
   * @member {boolean} [accountEnabled] Whether the account is enabled.
   */
  accountEnabled?: boolean;
  /**
   * @member {string} [displayName] The display name of the user.
   */
  displayName?: string;
  /**
   * @member {string} [userPrincipalName] The principal name of the user.
   */
  userPrincipalName?: string;
  /**
   * @member {string} [mailNickname] The mail alias for the user.
   */
  mailNickname?: string;
  /**
   * @member {string} [mail] The primary email address of the user.
   */
  mail?: string;
  /**
   * @member {SignInName[]} [signInNames] The sign-in names of the user.
   */
  signInNames?: SignInName[];
}

/**
 * @interface
 * An interface representing UserGetMemberGroupsParameters.
 * Request parameters for GetMemberGroups API call.
 *
 */
export interface UserGetMemberGroupsParameters {
  /**
   * @member {boolean} securityEnabledOnly If true, only membership in
   * security-enabled groups should be checked. Otherwise, membership in all
   * groups should be checked.
   */
  securityEnabledOnly: boolean;
  /**
   * @property Describes unknown properties. The value of an unknown property
   * can be of "any" type.
   */
  [property: string]: any;
}

/**
 * @interface
 * An interface representing GetObjectsParameters.
 * Request parameters for the GetObjectsByObjectIds API.
 *
 */
export interface GetObjectsParameters {
  /**
   * @member {string[]} [objectIds] The requested object IDs.
   */
  objectIds?: string[];
  /**
   * @member {string[]} [types] The requested object types.
   */
  types?: string[];
  /**
   * @member {boolean} [includeDirectoryObjectReferences] If true, also
   * searches for object IDs in the partner tenant.
   */
  includeDirectoryObjectReferences?: boolean;
  /**
   * @property Describes unknown properties. The value of an unknown property
   * can be of "any" type.
   */
  [property: string]: any;
}

/**
 * @interface
 * An interface representing Domain.
 * Active Directory Domain information.
 *
 */
export interface Domain {
  /**
   * @member {string} [authenticationType] the type of the authentication into
   * the domain.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly authenticationType?: string;
  /**
   * @member {boolean} [isDefault] if this is the default domain in the tenant.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly isDefault?: boolean;
  /**
   * @member {boolean} [isVerified] if this domain's ownership is verified.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly isVerified?: boolean;
  /**
   * @member {string} name the domain name.
   */
  name: string;
  /**
   * @property Describes unknown properties. The value of an unknown property
   * can be of "any" type.
   */
  [property: string]: any;
}

/**
 * @interface
 * An interface representing OAuth2PermissionGrant.
 */
export interface OAuth2PermissionGrant {
  /**
   * @member {string} [odatatype]
   * Microsoft.DirectoryServices.OAuth2PermissionGrant
   */
  odatatype?: string;
  /**
   * @member {string} [clientId] The id of the resource's service principal
   * granted consent to impersonate the user when accessing the resource
   * (represented by the resourceId property).
   */
  clientId?: string;
  /**
   * @member {string} [objectId] The id of the permission grant
   */
  objectId?: string;
  /**
   * @member {ConsentType} [consentType] Indicates if consent was provided by
   * the administrator (on behalf of the organization) or by an individual.
   * Possible values include: 'AllPrincipals', 'Principal'
   */
  consentType?: ConsentType;
  /**
   * @member {string} [principalId] When consent type is Principal, this
   * property specifies the id of the user that granted consent and applies
   * only for that user.
   */
  principalId?: string;
  /**
   * @member {string} [resourceId] Object Id of the resource you want to grant
   */
  resourceId?: string;
  /**
   * @member {string} [scope] Specifies the value of the scope claim that the
   * resource application should expect in the OAuth 2.0 access token. For
   * example, User.Read
   */
  scope?: string;
  /**
   * @member {string} [startTime] Start time for TTL
   */
  startTime?: string;
  /**
   * @member {string} [expiryTime] Expiry time for TTL
   */
  expiryTime?: string;
}

/**
 * @interface
 * An interface representing ApplicationsListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ApplicationsListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [filter] The filters to apply to the operation.
   */
  filter?: string;
}

/**
 * @interface
 * An interface representing DeletedApplicationsListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface DeletedApplicationsListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [filter] The filter to apply to the operation.
   */
  filter?: string;
}

/**
 * @interface
 * An interface representing GroupsListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface GroupsListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [filter] The filter to apply to the operation.
   */
  filter?: string;
}

/**
 * @interface
 * An interface representing ServicePrincipalsListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ServicePrincipalsListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [filter] The filter to apply to the operation.
   */
  filter?: string;
}

/**
 * @interface
 * An interface representing UsersListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface UsersListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [filter] The filter to apply to the operation.
   */
  filter?: string;
}

/**
 * @interface
 * An interface representing DomainsListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface DomainsListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [filter] The filter to apply to the operation.
   */
  filter?: string;
}

/**
 * @interface
 * An interface representing OAuth2PermissionGrantListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OAuth2PermissionGrantListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [filter] This is the Service Principal ObjectId
   * associated with the app
   */
  filter?: string;
}

/**
 * @interface
 * An interface representing OAuth2PermissionGrantCreateOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OAuth2PermissionGrantCreateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {OAuth2PermissionGrant} [body] The relevant app Service Principal
   * Object Id and the Service Principal Object Id you want to grant.
   */
  body?: OAuth2PermissionGrant;
}

/**
 * @interface
 * An interface representing GraphRbacManagementClientOptions.
 * @extends AzureServiceClientOptions
 */
export interface GraphRbacManagementClientOptions extends AzureServiceClientOptions {
  /**
   * @member {string} [baseUri]
   */
  baseUri?: string;
}


/**
 * @interface
 * An interface representing the DirectoryObjectListResult.
 * DirectoryObject list operation result.
 *
 * @extends Array<DirectoryObjectUnion>
 */
export interface DirectoryObjectListResult extends Array<DirectoryObjectUnion> {
  /**
   * @member {string} [odatanextLink] The URL to get the next set of results.
   */
  odatanextLink?: string;
}

/**
 * @interface
 * An interface representing the ApplicationListResult.
 * Application list operation result.
 *
 * @extends Array<Application>
 */
export interface ApplicationListResult extends Array<Application> {
  /**
   * @member {string} [odatanextLink] The URL to get the next set of results.
   */
  odatanextLink?: string;
}

/**
 * @interface
 * An interface representing the KeyCredentialListResult.
 * KeyCredential list operation result.
 *
 * @extends Array<KeyCredential>
 */
export interface KeyCredentialListResult extends Array<KeyCredential> {
}

/**
 * @interface
 * An interface representing the PasswordCredentialListResult.
 * PasswordCredential list operation result.
 *
 * @extends Array<PasswordCredential>
 */
export interface PasswordCredentialListResult extends Array<PasswordCredential> {
}

/**
 * @interface
 * An interface representing the GroupListResult.
 * Server response for Get tenant groups API call
 *
 * @extends Array<ADGroup>
 */
export interface GroupListResult extends Array<ADGroup> {
  /**
   * @member {string} [odatanextLink] The URL to get the next set of results.
   */
  odatanextLink?: string;
}

/**
 * @interface
 * An interface representing the GroupGetMemberGroupsResult.
 * Server response for GetMemberGroups API call.
 *
 * @extends Array<string>
 */
export interface GroupGetMemberGroupsResult extends Array<string> {
}

/**
 * @interface
 * An interface representing the ServicePrincipalListResult.
 * Server response for get tenant service principals API call.
 *
 * @extends Array<ServicePrincipal>
 */
export interface ServicePrincipalListResult extends Array<ServicePrincipal> {
  /**
   * @member {string} [odatanextLink] the URL to get the next set of results.
   */
  odatanextLink?: string;
}

/**
 * @interface
 * An interface representing the UserListResult.
 * Server response for Get tenant users API call.
 *
 * @extends Array<User>
 */
export interface UserListResult extends Array<User> {
  /**
   * @member {string} [odatanextLink] The URL to get the next set of results.
   */
  odatanextLink?: string;
}

/**
 * @interface
 * An interface representing the UserGetMemberGroupsResult.
 * Server response for GetMemberGroups API call.
 *
 * @extends Array<string>
 */
export interface UserGetMemberGroupsResult extends Array<string> {
}

/**
 * @interface
 * An interface representing the DomainListResult.
 * Server response for Get tenant domains API call.
 *
 * @extends Array<Domain>
 */
export interface DomainListResult extends Array<Domain> {
}

/**
 * @interface
 * An interface representing the OAuth2PermissionGrantListResult.
 * Server response for get oauth2 permissions grants
 *
 * @extends Array<OAuth2PermissionGrant>
 */
export interface OAuth2PermissionGrantListResult extends Array<OAuth2PermissionGrant> {
  /**
   * @member {string} [odatanextLink] the URL to get the next set of results.
   */
  odatanextLink?: string;
}

/**
 * Defines values for UserType.
 * Possible values include: 'Member', 'Guest'
 * @readonly
 * @enum {string}
 */
export type UserType = 'Member' | 'Guest';

/**
 * Defines values for ConsentType.
 * Possible values include: 'AllPrincipals', 'Principal'
 * @readonly
 * @enum {string}
 */
export type ConsentType = 'AllPrincipals' | 'Principal';

/**
 * Contains response data for the get operation.
 */
export type SignedInUserGetResponse = User & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: User;
    };
};

/**
 * Contains response data for the listOwnedObjects operation.
 */
export type SignedInUserListOwnedObjectsResponse = DirectoryObjectListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DirectoryObjectListResult;
    };
};

/**
 * Contains response data for the listOwnedObjectsNext operation.
 */
export type SignedInUserListOwnedObjectsNextResponse = DirectoryObjectListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DirectoryObjectListResult;
    };
};

/**
 * Contains response data for the create operation.
 */
export type ApplicationsCreateResponse = Application & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Application;
    };
};

/**
 * Contains response data for the list operation.
 */
export type ApplicationsListResponse = ApplicationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApplicationListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ApplicationsGetResponse = Application & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Application;
    };
};

/**
 * Contains response data for the listOwners operation.
 */
export type ApplicationsListOwnersResponse = DirectoryObjectListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DirectoryObjectListResult;
    };
};

/**
 * Contains response data for the listKeyCredentials operation.
 */
export type ApplicationsListKeyCredentialsResponse = KeyCredentialListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: KeyCredentialListResult;
    };
};

/**
 * Contains response data for the listPasswordCredentials operation.
 */
export type ApplicationsListPasswordCredentialsResponse = PasswordCredentialListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PasswordCredentialListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type ApplicationsListNextResponse = ApplicationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApplicationListResult;
    };
};

/**
 * Contains response data for the listOwnersNext operation.
 */
export type ApplicationsListOwnersNextResponse = DirectoryObjectListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DirectoryObjectListResult;
    };
};

/**
 * Contains response data for the restore operation.
 */
export type DeletedApplicationsRestoreResponse = Application & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Application;
    };
};

/**
 * Contains response data for the list operation.
 */
export type DeletedApplicationsListResponse = ApplicationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApplicationListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type DeletedApplicationsListNextResponse = ApplicationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApplicationListResult;
    };
};

/**
 * Contains response data for the isMemberOf operation.
 */
export type GroupsIsMemberOfResponse = CheckGroupMembershipResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CheckGroupMembershipResult;
    };
};

/**
 * Contains response data for the create operation.
 */
export type GroupsCreateResponse = ADGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ADGroup;
    };
};

/**
 * Contains response data for the list operation.
 */
export type GroupsListResponse = GroupListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GroupListResult;
    };
};

/**
 * Contains response data for the getGroupMembers operation.
 */
export type GroupsGetGroupMembersResponse = DirectoryObjectListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DirectoryObjectListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type GroupsGetResponse = ADGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ADGroup;
    };
};

/**
 * Contains response data for the getMemberGroups operation.
 */
export type GroupsGetMemberGroupsResponse = GroupGetMemberGroupsResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GroupGetMemberGroupsResult;
    };
};

/**
 * Contains response data for the listOwners operation.
 */
export type GroupsListOwnersResponse = DirectoryObjectListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DirectoryObjectListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type GroupsListNextResponse = GroupListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GroupListResult;
    };
};

/**
 * Contains response data for the getGroupMembersNext operation.
 */
export type GroupsGetGroupMembersNextResponse = DirectoryObjectListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DirectoryObjectListResult;
    };
};

/**
 * Contains response data for the listOwnersNext operation.
 */
export type GroupsListOwnersNextResponse = DirectoryObjectListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DirectoryObjectListResult;
    };
};

/**
 * Contains response data for the create operation.
 */
export type ServicePrincipalsCreateResponse = ServicePrincipal & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServicePrincipal;
    };
};

/**
 * Contains response data for the list operation.
 */
export type ServicePrincipalsListResponse = ServicePrincipalListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServicePrincipalListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ServicePrincipalsGetResponse = ServicePrincipal & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServicePrincipal;
    };
};

/**
 * Contains response data for the listOwners operation.
 */
export type ServicePrincipalsListOwnersResponse = DirectoryObjectListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DirectoryObjectListResult;
    };
};

/**
 * Contains response data for the listKeyCredentials operation.
 */
export type ServicePrincipalsListKeyCredentialsResponse = KeyCredentialListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: KeyCredentialListResult;
    };
};

/**
 * Contains response data for the listPasswordCredentials operation.
 */
export type ServicePrincipalsListPasswordCredentialsResponse = PasswordCredentialListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PasswordCredentialListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type ServicePrincipalsListNextResponse = ServicePrincipalListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServicePrincipalListResult;
    };
};

/**
 * Contains response data for the listOwnersNext operation.
 */
export type ServicePrincipalsListOwnersNextResponse = DirectoryObjectListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DirectoryObjectListResult;
    };
};

/**
 * Contains response data for the create operation.
 */
export type UsersCreateResponse = User & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: User;
    };
};

/**
 * Contains response data for the list operation.
 */
export type UsersListResponse = UserListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: UserListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type UsersGetResponse = User & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: User;
    };
};

/**
 * Contains response data for the getMemberGroups operation.
 */
export type UsersGetMemberGroupsResponse = UserGetMemberGroupsResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: UserGetMemberGroupsResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type UsersListNextResponse = UserListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: UserListResult;
    };
};

/**
 * Contains response data for the getObjectsByObjectIds operation.
 */
export type ObjectsGetObjectsByObjectIdsResponse = DirectoryObjectListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DirectoryObjectListResult;
    };
};

/**
 * Contains response data for the getObjectsByObjectIdsNext operation.
 */
export type ObjectsGetObjectsByObjectIdsNextResponse = DirectoryObjectListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DirectoryObjectListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type DomainsListResponse = DomainListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DomainListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type DomainsGetResponse = Domain & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Domain;
    };
};

/**
 * Contains response data for the list operation.
 */
export type OAuth2PermissionGrantListResponse = OAuth2PermissionGrantListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OAuth2PermissionGrantListResult;
    };
};

/**
 * Contains response data for the create operation.
 */
export type OAuth2PermissionGrantCreateResponse = OAuth2PermissionGrant & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OAuth2PermissionGrant;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type OAuth2PermissionGrantListNextResponse = OAuth2PermissionGrantListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OAuth2PermissionGrantListResult;
    };
};
