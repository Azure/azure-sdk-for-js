/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/reservationRecommendationsSingleOperationsMappers";
import * as Parameters from "../models/parameters";
import { ConsumptionManagementClientContext } from "../consumptionManagementClientContext";

/** Class representing a ReservationRecommendationsSingleOperations. */
export class ReservationRecommendationsSingleOperations {
  private readonly client: ConsumptionManagementClientContext;

  /**
   * Create a ReservationRecommendationsSingleOperations.
   * @param {ConsumptionManagementClientContext} client Reference to the service client.
   */
  constructor(client: ConsumptionManagementClientContext) {
    this.client = client;
  }

  /**
   * List of recommendations calculated based on past usage for the provided billingAccountId and
   * billingProfileId for each subscription within it.
   * @param billingAccountId BillingAccount ID
   * @param billingProfileId BillingProfile ID
   * @param [options] The optional parameters
   * @returns Promise<Models.ReservationRecommendationsSingleListByBillingProfileResponse>
   */
  listByBillingProfile(billingAccountId: string, billingProfileId: string, options?: msRest.RequestOptionsBase): Promise<Models.ReservationRecommendationsSingleListByBillingProfileResponse>;
  /**
   * @param billingAccountId BillingAccount ID
   * @param billingProfileId BillingProfile ID
   * @param callback The callback
   */
  listByBillingProfile(billingAccountId: string, billingProfileId: string, callback: msRest.ServiceCallback<Models.ReservationRecommendationsSingleListResult>): void;
  /**
   * @param billingAccountId BillingAccount ID
   * @param billingProfileId BillingProfile ID
   * @param options The optional parameters
   * @param callback The callback
   */
  listByBillingProfile(billingAccountId: string, billingProfileId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ReservationRecommendationsSingleListResult>): void;
  listByBillingProfile(billingAccountId: string, billingProfileId: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ReservationRecommendationsSingleListResult>, callback?: msRest.ServiceCallback<Models.ReservationRecommendationsSingleListResult>): Promise<Models.ReservationRecommendationsSingleListByBillingProfileResponse> {
    return this.client.sendOperationRequest(
      {
        billingAccountId,
        billingProfileId,
        options
      },
      listByBillingProfileOperationSpec,
      callback) as Promise<Models.ReservationRecommendationsSingleListByBillingProfileResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listByBillingProfileOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/providers/Microsoft.Consumption/singleReservationRecommendations",
  urlParameters: [
    Parameters.billingAccountId,
    Parameters.billingProfileId
  ],
  queryParameters: [
    Parameters.apiVersion,
    Parameters.lookBackPeriod
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ReservationRecommendationsSingleListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};
