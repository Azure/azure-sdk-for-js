/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/eventsByBillingProfileMappers";
import * as Parameters from "../models/parameters";
import { ConsumptionManagementClientContext } from "../consumptionManagementClientContext";

/** Class representing a EventsByBillingProfile. */
export class EventsByBillingProfile {
  private readonly client: ConsumptionManagementClientContext;

  /**
   * Create a EventsByBillingProfile.
   * @param {ConsumptionManagementClientContext} client Reference to the service client.
   */
  constructor(client: ConsumptionManagementClientContext) {
    this.client = client;
  }

  /**
   * Lists the events by billingAccountId and billingProfileId for given start and end date.
   * @param billingAccountId BillingAccount ID
   * @param billingProfileId Billing Profile Id.
   * @param startDate Start date
   * @param endDate End date
   * @param [options] The optional parameters
   * @returns Promise<Models.EventsByBillingProfileListResponse>
   */
  list(billingAccountId: string, billingProfileId: string, startDate: string, endDate: string, options?: msRest.RequestOptionsBase): Promise<Models.EventsByBillingProfileListResponse>;
  /**
   * @param billingAccountId BillingAccount ID
   * @param billingProfileId Billing Profile Id.
   * @param startDate Start date
   * @param endDate End date
   * @param callback The callback
   */
  list(billingAccountId: string, billingProfileId: string, startDate: string, endDate: string, callback: msRest.ServiceCallback<Models.Events>): void;
  /**
   * @param billingAccountId BillingAccount ID
   * @param billingProfileId Billing Profile Id.
   * @param startDate Start date
   * @param endDate End date
   * @param options The optional parameters
   * @param callback The callback
   */
  list(billingAccountId: string, billingProfileId: string, startDate: string, endDate: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.Events>): void;
  list(billingAccountId: string, billingProfileId: string, startDate: string, endDate: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.Events>, callback?: msRest.ServiceCallback<Models.Events>): Promise<Models.EventsByBillingProfileListResponse> {
    return this.client.sendOperationRequest(
      {
        billingAccountId,
        billingProfileId,
        startDate,
        endDate,
        options
      },
      listOperationSpec,
      callback) as Promise<Models.EventsByBillingProfileListResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/providers/Microsoft.Consumption/events",
  urlParameters: [
    Parameters.billingAccountId,
    Parameters.billingProfileId
  ],
  queryParameters: [
    Parameters.apiVersion,
    Parameters.startDate,
    Parameters.endDate
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.Events
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};
