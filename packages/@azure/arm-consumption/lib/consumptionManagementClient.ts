/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "./models";
import * as Mappers from "./models/mappers";
import * as operations from "./operations";
import { ConsumptionManagementClientContext } from "./consumptionManagementClientContext";


class ConsumptionManagementClient extends ConsumptionManagementClientContext {
  // Operation groups
  budgets: operations.Budgets;
  operations: operations.Operations;
  creditSummaryByBillingProfile: operations.CreditSummaryByBillingProfile;
  eventsByBillingProfile: operations.EventsByBillingProfile;
  lotsByBillingProfile: operations.LotsByBillingProfile;
  invoicePricesheet: operations.InvoicePricesheet;
  billingProfilePricesheet: operations.BillingProfilePricesheet;
  chargesByBillingAccount: operations.ChargesByBillingAccount;
  chargesByBillingProfile: operations.ChargesByBillingProfile;
  chargesByInvoiceSection: operations.ChargesByInvoiceSection;

  /**
   * Initializes a new instance of the ConsumptionManagementClient class.
   * @param credentials Credentials needed for the client to connect to Azure.
   * @param subscriptionId Azure Subscription ID.
   * @param name Budget name.
   * @param [options] The parameter options
   */
  constructor(credentials: msRest.ServiceClientCredentials, subscriptionId: string, name: string, options?: Models.ConsumptionManagementClientOptions) {
    super(credentials, subscriptionId, name, options);
    this.budgets = new operations.Budgets(this);
    this.operations = new operations.Operations(this);
    this.creditSummaryByBillingProfile = new operations.CreditSummaryByBillingProfile(this);
    this.eventsByBillingProfile = new operations.EventsByBillingProfile(this);
    this.lotsByBillingProfile = new operations.LotsByBillingProfile(this);
    this.invoicePricesheet = new operations.InvoicePricesheet(this);
    this.billingProfilePricesheet = new operations.BillingProfilePricesheet(this);
    this.chargesByBillingAccount = new operations.ChargesByBillingAccount(this);
    this.chargesByBillingProfile = new operations.ChargesByBillingProfile(this);
    this.chargesByInvoiceSection = new operations.ChargesByInvoiceSection(this);
  }
}

// Operation Specifications

export {
  ConsumptionManagementClient,
  ConsumptionManagementClientContext,
  Models as ConsumptionManagementModels,
  Mappers as ConsumptionManagementMappers
};
export * from "./operations";
