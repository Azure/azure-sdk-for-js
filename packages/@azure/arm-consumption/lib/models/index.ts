/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };


/**
 * @interface
 * An interface representing EnrollmentPolicies.
 * The attributes associated with legacy enrollment
 *
 */
export interface EnrollmentPolicies {
  /**
   * @member {boolean} [accountOwnerViewCharges] The accountOwnerViewCharges
   * flag for Enrollment
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly accountOwnerViewCharges?: boolean;
  /**
   * @member {boolean} [departmentAdminViewCharges] The
   * departmentAdminViewCharges flag for Enrollment
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly departmentAdminViewCharges?: boolean;
  /**
   * @member {boolean} [marketplacesEnabled] The marketplaces flag for
   * Enrollment
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly marketplacesEnabled?: boolean;
  /**
   * @member {boolean} [reservedInstancesEnabled] The reserved instances flag
   * for Enrollment
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly reservedInstancesEnabled?: boolean;
}

/**
 * @interface
 * An interface representing Enrollment.
 * Current entity level details
 *
 */
export interface Enrollment {
  /**
   * @member {Date} [startDate] Enrollment Start Date
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly startDate?: Date;
  /**
   * @member {Date} [endDate] Enrollment End Date
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly endDate?: Date;
  /**
   * @member {string} [currency] The currency associated with enrollment
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly currency?: string;
  /**
   * @member {string} [channel] The channel for Enrollment
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly channel?: string;
  /**
   * @member {EnrollmentPolicies} [policies] The attributes associated with
   * legacy enrollment.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly policies?: EnrollmentPolicies;
  /**
   * @member {string} [language] The language for Enrollment
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly language?: string;
  /**
   * @member {string} [countryCode] The countryCode for Enrollment
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly countryCode?: string;
  /**
   * @member {string} [status] Enrollment status
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly status?: string;
  /**
   * @member {string} [billingCycle] Enrollment billing cycle
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly billingCycle?: string;
}

/**
 * @interface
 * An interface representing Resource.
 * The Resource model definition.
 *
 * @extends BaseResource
 */
export interface Resource extends BaseResource {
  /**
   * @member {string} [id] Resource Id.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [name] Resource name.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [type] Resource type.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: string;
  /**
   * @member {{ [propertyName: string]: string }} [tags] Resource tags.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly tags?: { [propertyName: string]: string };
}

/**
 * @interface
 * An interface representing Department.
 * A department resource.
 *
 * @extends Resource
 */
export interface Department extends Resource {
  /**
   * @member {string} [departmentName] The name for department.
   */
  departmentName?: string;
  /**
   * @member {string} [costCenter] The cost center name.
   */
  costCenter?: string;
  /**
   * @member {string} [status] The status for department.
   */
  status?: string;
  /**
   * @member {EnrollmentAccount[]} [enrollmentAccounts] Associated enrollment
   * accounts. By default this is not populated, unless it's specified in
   * $expand.
   */
  enrollmentAccounts?: EnrollmentAccount[];
}

/**
 * @interface
 * An interface representing EnrollmentAccount.
 * An account resource.
 *
 * @extends Resource
 */
export interface EnrollmentAccount extends Resource {
  /**
   * @member {string} [accountName] The account name.
   */
  accountName?: string;
  /**
   * @member {string} [costCenter] The cost center name.
   */
  costCenter?: string;
  /**
   * @member {string} [accountOwner] The account owner
   */
  accountOwner?: string;
  /**
   * @member {string} [status] The status for account.
   */
  status?: string;
  /**
   * @member {Date} [startDate] Account Start Date
   */
  startDate?: Date;
  /**
   * @member {Date} [endDate] Account End Date
   */
  endDate?: Date;
  /**
   * @member {Department} [department] Associated department. By default this
   * is not populated, unless it's specified in $expand.
   */
  department?: Department;
}

/**
 * @interface
 * An interface representing Address.
 * Address details.
 *
 */
export interface Address {
  /**
   * @member {string} [addressLine1] Address Line1.
   */
  addressLine1?: string;
  /**
   * @member {string} [addressLine2] Address Line2.
   */
  addressLine2?: string;
  /**
   * @member {string} [addressLine3] Address Line3.
   */
  addressLine3?: string;
  /**
   * @member {string} [city] Address City.
   */
  city?: string;
  /**
   * @member {string} [region] Address Region.
   */
  region?: string;
  /**
   * @member {string} [country] Country code uses ISO2, 2-digit format..
   */
  country?: string;
  /**
   * @member {string} [postalCode] Postal Code.
   */
  postalCode?: string;
  /**
   * @member {string} [phoneNumber] Phone Number.
   */
  phoneNumber?: string;
}

/**
 * @interface
 * An interface representing BillingProfile.
 * A billing profile resource.
 *
 * @extends Resource
 */
export interface BillingProfile extends Resource {
  /**
   * @member {string} [displayName] The billing profile name.
   */
  displayName?: string;
  /**
   * @member {string} [poNumber] Purchase order number.
   */
  poNumber?: string;
  /**
   * @member {Address} [billingAddress] Billing address.
   */
  billingAddress?: Address;
  /**
   * @member {string} [billingContact] Billing contact.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly billingContact?: string;
  /**
   * @member {boolean} [emailInvoice] Email invoice.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly emailInvoice?: boolean;
  /**
   * @member {number} [invoiceDay] Invoice day.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly invoiceDay?: number;
  /**
   * @member {string} [currency] Currency on the billing profile.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly currency?: string;
}

/**
 * @interface
 * An interface representing InvoiceSection.
 * An InvoiceSection resource.
 *
 * @extends Resource
 */
export interface InvoiceSection extends Resource {
  /**
   * @member {string} [displayName] The name of the InvoiceSection.
   */
  displayName?: string;
  /**
   * @member {BillingProfile[]} [billingProfiles] The billing profiles
   * associated to the billing account.
   */
  billingProfiles?: BillingProfile[];
}

/**
 * @interface
 * An interface representing BillingAccount.
 * A billing account resource.
 *
 * @extends Resource
 */
export interface BillingAccount extends Resource {
  /**
   * @member {string} [company] The Company this billing account belongs to.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly company?: string;
  /**
   * @member {AccountType} [accountType] The billing account Type. Possible
   * values include: 'CommerceRoot', 'Enrollment'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly accountType?: AccountType;
  /**
   * @member {Address} [address] The address associated with billing account.
   */
  address?: Address;
  /**
   * @member {string} [defaultCurrency] The ISO currency, for example, USD.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly defaultCurrency?: string;
  /**
   * @member {string} [country] The country associated with billing account.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly country?: string;
  /**
   * @member {string} [agreements] Agreements associated with billing account
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly agreements?: string;
  /**
   * @member {InvoiceSection[]} [invoiceSections] The invoiceSections
   * associated to the billing account.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly invoiceSections?: InvoiceSection[];
  /**
   * @member {BillingProfile[]} [billingProfiles] The billing profiles
   * associated to the billing account.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly billingProfiles?: BillingProfile[];
  /**
   * @member {Enrollment} [enrollmentDetails] The details about the associated
   * legacy enrollment. By default this is not populated, unless it's specified
   * in $expand.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly enrollmentDetails?: Enrollment;
  /**
   * @member {Department[]} [departments] The departments associated to the
   * enrollment.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly departments?: Department[];
  /**
   * @member {EnrollmentAccount[]} [enrollmentAccounts] The accounts associated
   * to the enrollment.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly enrollmentAccounts?: EnrollmentAccount[];
}

/**
 * @interface
 * An interface representing Amount.
 * Object to represent monetary quantities.
 *
 */
export interface Amount {
  /**
   * @member {string} [currency] The currency for the amount value.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly currency?: string;
  /**
   * @member {number} [value] Amount value.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly value?: number;
}

/**
 * @interface
 * An interface representing PricesheetDownloadResponse.
 * Download response of Pricesheets.
 *
 * @extends Resource
 */
export interface PricesheetDownloadResponse extends Resource {
  /**
   * @member {string} [downloadUrl] The URL to the PDF file.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly downloadUrl?: string;
  /**
   * @member {string} [expiryTime] The time in UTC at which this download URL
   * will expire.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly expiryTime?: string;
}

/**
 * @interface
 * An interface representing CreditBalanceSummary.
 * Summary of credit balances.
 *
 */
export interface CreditBalanceSummary {
  /**
   * @member {Amount} [estimatedBalance] Estimated balance.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly estimatedBalance?: Amount;
  /**
   * @member {Amount} [currentBalance] Current balance.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly currentBalance?: Amount;
}

/**
 * @interface
 * An interface representing CreditSummary.
 * A credit summary resource.
 *
 * @extends Resource
 */
export interface CreditSummary extends Resource {
  /**
   * @member {CreditBalanceSummary} [balanceSummary] Summary of balances
   * associated with this credit summary.
   */
  balanceSummary?: CreditBalanceSummary;
  /**
   * @member {Amount} [pendingCreditAdjustments] Pending Credit Adjustments.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly pendingCreditAdjustments?: Amount;
  /**
   * @member {Amount} [expiredCredit] Expired Credit.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly expiredCredit?: Amount;
  /**
   * @member {Amount} [pendingEligibleCharges] Pending Eligible Charges.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly pendingEligibleCharges?: Amount;
}

/**
 * @interface
 * An interface representing EventSummary.
 * An event summary resource.
 *
 * @extends Resource
 */
export interface EventSummary extends Resource {
  /**
   * @member {Date} [transactionDate] Transaction Date.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly transactionDate?: Date;
  /**
   * @member {string} [description] Transaction description.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
  /**
   * @member {Amount} [newCredit] New Credit.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly newCredit?: Amount;
  /**
   * @member {Amount} [adjustments] Credit Adjustments.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly adjustments?: Amount;
  /**
   * @member {Amount} [creditExpired] Credit Expired.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly creditExpired?: Amount;
  /**
   * @member {Amount} [charges] Credit Eligible Charges.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly charges?: Amount;
  /**
   * @member {Amount} [closedBalance] Closed Balance.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly closedBalance?: Amount;
  /**
   * @member {EventType} [eventType] The type of event. Possible values
   * include: 'NewCredit', 'ExpiredCredit', 'SettledCharges'
   */
  eventType?: EventType;
  /**
   * @member {string} [invoiceNumber] Invoice Number.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly invoiceNumber?: string;
}

/**
 * @interface
 * An interface representing Events.
 * Result of listing event summary.
 *
 */
export interface Events {
  /**
   * @member {EventSummary[]} [value] The list of event summary.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly value?: EventSummary[];
}

/**
 * @interface
 * An interface representing LotSummary.
 * A lot summary resource.
 *
 * @extends Resource
 */
export interface LotSummary extends Resource {
  /**
   * @member {Amount} [originalAmount] Original Amount.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly originalAmount?: Amount;
  /**
   * @member {Amount} [closedBalance] Closed Balance.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly closedBalance?: Amount;
  /**
   * @member {LotSource} [source] Lot source. Possible values include:
   * 'PurchasedCredit', 'PromotionalCredit'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly source?: LotSource;
  /**
   * @member {Date} [startDate] Start Date.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly startDate?: Date;
  /**
   * @member {Date} [expirationDate] Expiration Date.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly expirationDate?: Date;
  /**
   * @member {string} [poNumber] PO Number.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly poNumber?: string;
}

/**
 * @interface
 * An interface representing Lots.
 * Result of listing lot summary.
 *
 */
export interface Lots {
  /**
   * @member {LotSummary[]} [value] The list of lot summary.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly value?: LotSummary[];
}

/**
 * @interface
 * An interface representing ChargeSummaryByBillingAccount.
 * A charge summary resource by billing account.
 *
 * @extends Resource
 */
export interface ChargeSummaryByBillingAccount extends Resource {
  /**
   * @member {string} [billingPeriodId] The id of the billing period resource
   * that the usage belongs to.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly billingPeriodId?: string;
  /**
   * @member {string} [usageStart] Billing period start date.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly usageStart?: string;
  /**
   * @member {string} [usageEnd] Billing period end date.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly usageEnd?: string;
  /**
   * @member {Amount} [azureCharges] Azure Charges.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly azureCharges?: Amount;
  /**
   * @member {Amount} [chargesBilledSeparately] Charges Billed separately.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly chargesBilledSeparately?: Amount;
  /**
   * @member {Amount} [marketplaceCharges] Marketplace Charges.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly marketplaceCharges?: Amount;
  /**
   * @member {string} [billingAccountId] The id of the billing account resource
   * that the charge belongs to.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly billingAccountId?: string;
  /**
   * @member {string} [billingProfileId] The id of the billing profile resource
   * that the charge belongs to.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly billingProfileId?: string;
  /**
   * @member {string} [invoiceSectionId] The id of the invoice section resource
   * that the charge belongs to.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly invoiceSectionId?: string;
}

/**
 * @interface
 * An interface representing ChargesListByBillingAccount.
 * Result of listing charge summary by billing account. It contains a list of
 * available change summaries in reverse chronological order by billing period.
 *
 */
export interface ChargesListByBillingAccount {
  /**
   * @member {ChargeSummaryByBillingAccount[]} [value] The list of charge
   * summary by billing account.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly value?: ChargeSummaryByBillingAccount[];
}

/**
 * @interface
 * An interface representing ChargeSummaryByBillingProfile.
 * A charge summary resource by billing profile.
 *
 * @extends Resource
 */
export interface ChargeSummaryByBillingProfile extends Resource {
  /**
   * @member {string} [billingPeriodId] The id of the billing period resource
   * that the usage belongs to.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly billingPeriodId?: string;
  /**
   * @member {string} [usageStart] Billing period start date.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly usageStart?: string;
  /**
   * @member {string} [usageEnd] Billing period end date.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly usageEnd?: string;
  /**
   * @member {Amount} [azureCharges] Azure Charges.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly azureCharges?: Amount;
  /**
   * @member {Amount} [chargesBilledSeparately] Charges Billed separately.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly chargesBilledSeparately?: Amount;
  /**
   * @member {Amount} [marketplaceCharges] Marketplace Charges.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly marketplaceCharges?: Amount;
  /**
   * @member {string} [billingAccountId] The id of the billing account resource
   * that the charge belongs to.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly billingAccountId?: string;
  /**
   * @member {string} [billingProfileId] The id of the billing profile resource
   * that the charge belongs to.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly billingProfileId?: string;
  /**
   * @member {string} [invoiceSectionId] The id of the invoice section resource
   * that the charge belongs to.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly invoiceSectionId?: string;
}

/**
 * @interface
 * An interface representing ChargesListByBillingProfile.
 * Result of listing charge summary by billing profile. It contains a list of
 * available change summaries in reverse chronological order by billing period.
 *
 */
export interface ChargesListByBillingProfile {
  /**
   * @member {ChargeSummaryByBillingProfile[]} [value] The list of charge
   * summary by billing profile.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly value?: ChargeSummaryByBillingProfile[];
}

/**
 * @interface
 * An interface representing ChargeSummaryByInvoiceSection.
 * A charge summary resource by invoiceSection.
 *
 * @extends Resource
 */
export interface ChargeSummaryByInvoiceSection extends Resource {
  /**
   * @member {string} [billingPeriodId] The id of the billing period resource
   * that the usage belongs to.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly billingPeriodId?: string;
  /**
   * @member {string} [usageStart] Billing period start date.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly usageStart?: string;
  /**
   * @member {string} [usageEnd] Billing period end date.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly usageEnd?: string;
  /**
   * @member {Amount} [azureCharges] Azure Charges.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly azureCharges?: Amount;
  /**
   * @member {Amount} [chargesBilledSeparately] Charges Billed separately.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly chargesBilledSeparately?: Amount;
  /**
   * @member {Amount} [marketplaceCharges] Marketplace Charges.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly marketplaceCharges?: Amount;
  /**
   * @member {string} [billingAccountId] The id of the billing account resource
   * that the charge belongs to.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly billingAccountId?: string;
  /**
   * @member {string} [billingProfileId] The id of the billing profile resource
   * that the charge belongs to.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly billingProfileId?: string;
  /**
   * @member {string} [invoiceSectionId] The id of the invoice section resource
   * that the charge belongs to.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly invoiceSectionId?: string;
}

/**
 * @interface
 * An interface representing ChargesListByInvoiceSection.
 * Result of listing charge summary by invoiceSection. It contains a list of
 * available change summaries in reverse chronological order by billing period.
 *
 */
export interface ChargesListByInvoiceSection {
  /**
   * @member {ChargeSummaryByInvoiceSection[]} [value] The list of charge
   * summary by invoiceSection.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly value?: ChargeSummaryByInvoiceSection[];
}

/**
 * @interface
 * An interface representing OperationDisplay.
 * The object that represents the operation.
 *
 */
export interface OperationDisplay {
  /**
   * @member {string} [provider] Service provider: Microsoft.Consumption.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provider?: string;
  /**
   * @member {string} [resource] Resource on which the operation is performed:
   * UsageDetail, etc.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly resource?: string;
  /**
   * @member {string} [operation] Operation type: Read, write, delete, etc.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly operation?: string;
}

/**
 * @interface
 * An interface representing Operation.
 * A Consumption REST API operation.
 *
 */
export interface Operation {
  /**
   * @member {string} [name] Operation name: {provider}/{resource}/{operation}.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {OperationDisplay} [display] The object that represents the
   * operation.
   */
  display?: OperationDisplay;
}

/**
 * @interface
 * An interface representing ErrorDetails.
 * The details of the error.
 *
 */
export interface ErrorDetails {
  /**
   * @member {string} [code] Error code.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly code?: string;
  /**
   * @member {string} [message] Error message indicating why the operation
   * failed.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly message?: string;
}

/**
 * @interface
 * An interface representing ErrorResponse.
 * Error response indicates that the service is not able to process the
 * incoming request. The reason is provided in the error message.
 *
 */
export interface ErrorResponse {
  /**
   * @member {ErrorDetails} [error] The details of the error.
   */
  error?: ErrorDetails;
}

/**
 * @interface
 * An interface representing ProxyResource.
 * The Resource model definition.
 *
 * @extends BaseResource
 */
export interface ProxyResource extends BaseResource {
  /**
   * @member {string} [id] Resource Id.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [name] Resource name.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [type] Resource type.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: string;
  /**
   * @member {string} [eTag] eTag of the resource. To handle concurrent update
   * scenario, this field will be used to determine whether the user is
   * updating the latest version or not.
   */
  eTag?: string;
}

/**
 * @interface
 * An interface representing ChargesByBillingAccountListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ChargesByBillingAccountListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [apply] May be used to group charges by
   * properties/billingProfileId, or properties/invoiceSectionId.
   */
  apply?: string;
}

/**
 * @interface
 * An interface representing ChargesByInvoiceSectionListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ChargesByInvoiceSectionListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [apply] May be used to group charges by
   * properties/productName.
   */
  apply?: string;
}

/**
 * @interface
 * An interface representing ConsumptionManagementClientOptions.
 * @extends AzureServiceClientOptions
 */
export interface ConsumptionManagementClientOptions extends AzureServiceClientOptions {
  /**
   * @member {string} [baseUri]
   */
  baseUri?: string;
}

/**
 * @interface
 * An interface representing InvoicePricesheetDownloadHeaders.
 * Defines headers for Download operation.
 *
 */
export interface InvoicePricesheetDownloadHeaders {
  /**
   * @member {string} [location] GET this URL to retrieve the status of the
   * asynchronous operation.
   */
  location: string;
  /**
   * @member {string} [retryAfter] The amount of delay to use while the status
   * of the operation is checked. The value is expressed in seconds.
   */
  retryAfter: string;
  /**
   * @member {string} [azureAsyncOperation] To get the progress of the
   * operation, call GET operation on the URL in Azure-AsyncOperation header
   * field.
   */
  azureAsyncOperation: string;
  /**
   * @member {string} [oDataEntityId] The operation entity Id GUID.
   */
  oDataEntityId: string;
}

/**
 * @interface
 * An interface representing BillingProfilePricesheetDownloadHeaders.
 * Defines headers for Download operation.
 *
 */
export interface BillingProfilePricesheetDownloadHeaders {
  /**
   * @member {string} [location] GET this URL to retrieve the status of the
   * asynchronous operation.
   */
  location: string;
  /**
   * @member {string} [retryAfter] The amount of delay to use while the status
   * of the operation is checked. The value is expressed in seconds.
   */
  retryAfter: string;
  /**
   * @member {string} [azureAsyncOperation] To get the progress of the
   * operation, call GET operation on the URL in Azure-AsyncOperation header
   * field.
   */
  azureAsyncOperation: string;
  /**
   * @member {string} [oDataEntityId] The operation entity Id GUID.
   */
  oDataEntityId: string;
}


/**
 * @interface
 * An interface representing the OperationListResult.
 * Result of listing consumption operations. It contains a list of operations
 * and a URL link to get the next set of results.
 *
 * @extends Array<Operation>
 */
export interface OperationListResult extends Array<Operation> {
  /**
   * @member {string} [nextLink] URL to get the next set of operation list
   * results if there are any.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * Defines values for EventType.
 * Possible values include: 'NewCredit', 'ExpiredCredit', 'SettledCharges'
 * @readonly
 * @enum {string}
 */
export type EventType = 'NewCredit' | 'ExpiredCredit' | 'SettledCharges';

/**
 * Defines values for LotSource.
 * Possible values include: 'PurchasedCredit', 'PromotionalCredit'
 * @readonly
 * @enum {string}
 */
export type LotSource = 'PurchasedCredit' | 'PromotionalCredit';

/**
 * Defines values for AccountType.
 * Possible values include: 'CommerceRoot', 'Enrollment'
 * @readonly
 * @enum {string}
 */
export type AccountType = 'CommerceRoot' | 'Enrollment';

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type OperationsListNextResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type CreditSummaryByBillingProfileGetResponse = CreditSummary & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CreditSummary;
    };
};

/**
 * Contains response data for the list operation.
 */
export type EventsByBillingProfileListResponse = Events & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Events;
    };
};

/**
 * Contains response data for the list operation.
 */
export type LotsByBillingProfileListResponse = Lots & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Lots;
    };
};

/**
 * Contains response data for the download operation.
 */
export type InvoicePricesheetDownloadResponse = PricesheetDownloadResponse & InvoicePricesheetDownloadHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: InvoicePricesheetDownloadHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PricesheetDownloadResponse;
    };
};

/**
 * Contains response data for the download operation.
 */
export type BillingProfilePricesheetDownloadResponse = PricesheetDownloadResponse & BillingProfilePricesheetDownloadHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: BillingProfilePricesheetDownloadHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PricesheetDownloadResponse;
    };
};

/**
 * Contains response data for the list operation.
 */
export type ChargesByBillingAccountListResponse = ChargesListByBillingAccount & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ChargesListByBillingAccount;
    };
};

/**
 * Contains response data for the list operation.
 */
export type ChargesByBillingProfileListResponse = ChargesListByBillingProfile & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ChargesListByBillingProfile;
    };
};

/**
 * Contains response data for the list operation.
 */
export type ChargesByInvoiceSectionListResponse = ChargesListByInvoiceSection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ChargesListByInvoiceSection;
    };
};
