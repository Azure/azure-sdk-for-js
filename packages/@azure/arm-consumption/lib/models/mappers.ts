/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { CloudErrorMapper, BaseResourceMapper } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export const CloudError = CloudErrorMapper;
export const BaseResource = BaseResourceMapper;

export const EnrollmentPolicies: msRest.CompositeMapper = {
  serializedName: "EnrollmentPolicies",
  type: {
    name: "Composite",
    className: "EnrollmentPolicies",
    modelProperties: {
      accountOwnerViewCharges: {
        readOnly: true,
        serializedName: "accountOwnerViewCharges",
        type: {
          name: "Boolean"
        }
      },
      departmentAdminViewCharges: {
        readOnly: true,
        serializedName: "departmentAdminViewCharges",
        type: {
          name: "Boolean"
        }
      },
      marketplacesEnabled: {
        readOnly: true,
        serializedName: "marketplacesEnabled",
        type: {
          name: "Boolean"
        }
      },
      reservedInstancesEnabled: {
        readOnly: true,
        serializedName: "reservedInstancesEnabled",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Enrollment: msRest.CompositeMapper = {
  serializedName: "Enrollment",
  type: {
    name: "Composite",
    className: "Enrollment",
    modelProperties: {
      startDate: {
        readOnly: true,
        serializedName: "startDate",
        type: {
          name: "DateTime"
        }
      },
      endDate: {
        readOnly: true,
        serializedName: "endDate",
        type: {
          name: "DateTime"
        }
      },
      currency: {
        readOnly: true,
        serializedName: "currency",
        type: {
          name: "String"
        }
      },
      channel: {
        readOnly: true,
        serializedName: "channel",
        type: {
          name: "String"
        }
      },
      policies: {
        readOnly: true,
        serializedName: "policies",
        type: {
          name: "Composite",
          className: "EnrollmentPolicies"
        }
      },
      language: {
        readOnly: true,
        serializedName: "language",
        type: {
          name: "String"
        }
      },
      countryCode: {
        readOnly: true,
        serializedName: "countryCode",
        type: {
          name: "String"
        }
      },
      status: {
        readOnly: true,
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      billingCylce: {
        readOnly: true,
        serializedName: "billingCylce",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Resource: msRest.CompositeMapper = {
  serializedName: "Resource",
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      tags: {
        readOnly: true,
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Department: msRest.CompositeMapper = {
  serializedName: "Department",
  type: {
    name: "Composite",
    className: "Department",
    modelProperties: {
      ...Resource.type.modelProperties,
      departmentName: {
        serializedName: "properties.departmentName",
        type: {
          name: "String"
        }
      },
      costCenter: {
        serializedName: "properties.costCenter",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "properties.status",
        type: {
          name: "String"
        }
      },
      enrollmentAccounts: {
        serializedName: "properties.enrollmentAccounts",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EnrollmentAccount"
            }
          }
        }
      }
    }
  }
};

export const EnrollmentAccount: msRest.CompositeMapper = {
  serializedName: "EnrollmentAccount",
  type: {
    name: "Composite",
    className: "EnrollmentAccount",
    modelProperties: {
      ...Resource.type.modelProperties,
      accountName: {
        serializedName: "properties.accountName",
        type: {
          name: "String"
        }
      },
      costCenter: {
        serializedName: "properties.costCenter",
        type: {
          name: "String"
        }
      },
      accountOwner: {
        serializedName: "properties.accountOwner",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "properties.status",
        type: {
          name: "String"
        }
      },
      startDate: {
        serializedName: "properties.startDate",
        type: {
          name: "DateTime"
        }
      },
      endDate: {
        serializedName: "properties.endDate",
        type: {
          name: "DateTime"
        }
      },
      department: {
        serializedName: "properties.department",
        type: {
          name: "Composite",
          className: "Department"
        }
      }
    }
  }
};

export const Address: msRest.CompositeMapper = {
  serializedName: "Address",
  type: {
    name: "Composite",
    className: "Address",
    modelProperties: {
      addressLine1: {
        serializedName: "addressLine1",
        type: {
          name: "String"
        }
      },
      addressLine2: {
        serializedName: "addressLine2",
        type: {
          name: "String"
        }
      },
      addressLine3: {
        serializedName: "addressLine3",
        type: {
          name: "String"
        }
      },
      city: {
        serializedName: "city",
        type: {
          name: "String"
        }
      },
      region: {
        serializedName: "region",
        type: {
          name: "String"
        }
      },
      country: {
        serializedName: "country",
        type: {
          name: "String"
        }
      },
      postalCode: {
        serializedName: "postalCode",
        type: {
          name: "String"
        }
      },
      phoneNumber: {
        serializedName: "phoneNumber",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BillingProfile: msRest.CompositeMapper = {
  serializedName: "BillingProfile",
  type: {
    name: "Composite",
    className: "BillingProfile",
    modelProperties: {
      ...Resource.type.modelProperties,
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      poNumber: {
        serializedName: "properties.poNumber",
        type: {
          name: "String"
        }
      },
      billingAddress: {
        serializedName: "properties.billingAddress",
        type: {
          name: "Composite",
          className: "Address"
        }
      },
      billingContact: {
        readOnly: true,
        serializedName: "properties.billingContact",
        type: {
          name: "String"
        }
      },
      emailInvoice: {
        readOnly: true,
        serializedName: "properties.emailInvoice",
        type: {
          name: "Boolean"
        }
      },
      invoiceDay: {
        readOnly: true,
        serializedName: "properties.invoiceDay",
        type: {
          name: "Number"
        }
      },
      currency: {
        readOnly: true,
        serializedName: "properties.currency",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const InvoiceSection: msRest.CompositeMapper = {
  serializedName: "InvoiceSection",
  type: {
    name: "Composite",
    className: "InvoiceSection",
    modelProperties: {
      ...Resource.type.modelProperties,
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      billingProfiles: {
        serializedName: "properties.billingProfiles",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "BillingProfile"
            }
          }
        }
      }
    }
  }
};

export const BillingAccount: msRest.CompositeMapper = {
  serializedName: "BillingAccount",
  type: {
    name: "Composite",
    className: "BillingAccount",
    modelProperties: {
      ...Resource.type.modelProperties,
      company: {
        readOnly: true,
        serializedName: "properties.company",
        type: {
          name: "String"
        }
      },
      accountType: {
        readOnly: true,
        serializedName: "properties.accountType",
        type: {
          name: "String"
        }
      },
      address: {
        serializedName: "properties.address",
        type: {
          name: "Composite",
          className: "Address"
        }
      },
      defaultCurrency: {
        readOnly: true,
        serializedName: "properties.defaultCurrency",
        type: {
          name: "String"
        }
      },
      country: {
        readOnly: true,
        serializedName: "properties.country",
        type: {
          name: "String"
        }
      },
      agreements: {
        readOnly: true,
        serializedName: "properties.agreements",
        type: {
          name: "String"
        }
      },
      invoiceSections: {
        readOnly: true,
        serializedName: "properties.invoiceSections",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "InvoiceSection"
            }
          }
        }
      },
      billingProfiles: {
        readOnly: true,
        serializedName: "properties.billingProfiles",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "BillingProfile"
            }
          }
        }
      },
      enrollmentDetails: {
        readOnly: true,
        serializedName: "properties.enrollmentDetails",
        type: {
          name: "Composite",
          className: "Enrollment"
        }
      },
      departments: {
        readOnly: true,
        serializedName: "properties.departments",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Department"
            }
          }
        }
      },
      enrollmentAccounts: {
        readOnly: true,
        serializedName: "properties.enrollmentAccounts",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EnrollmentAccount"
            }
          }
        }
      }
    }
  }
};

export const Amount: msRest.CompositeMapper = {
  serializedName: "Amount",
  type: {
    name: "Composite",
    className: "Amount",
    modelProperties: {
      currency: {
        readOnly: true,
        serializedName: "currency",
        type: {
          name: "String"
        }
      },
      value: {
        readOnly: true,
        serializedName: "value",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const PricesheetDownloadResponse: msRest.CompositeMapper = {
  serializedName: "PricesheetDownloadResponse",
  type: {
    name: "Composite",
    className: "PricesheetDownloadResponse",
    modelProperties: {
      ...Resource.type.modelProperties,
      downloadUrl: {
        readOnly: true,
        serializedName: "properties.downloadUrl",
        type: {
          name: "String"
        }
      },
      expiryTime: {
        readOnly: true,
        serializedName: "properties.expiryTime",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BudgetTimePeriod: msRest.CompositeMapper = {
  serializedName: "BudgetTimePeriod",
  type: {
    name: "Composite",
    className: "BudgetTimePeriod",
    modelProperties: {
      startDate: {
        required: true,
        serializedName: "startDate",
        type: {
          name: "DateTime"
        }
      },
      endDate: {
        serializedName: "endDate",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const CurrentSpend: msRest.CompositeMapper = {
  serializedName: "CurrentSpend",
  type: {
    name: "Composite",
    className: "CurrentSpend",
    modelProperties: {
      amount: {
        readOnly: true,
        serializedName: "amount",
        type: {
          name: "Number"
        }
      },
      unit: {
        readOnly: true,
        serializedName: "unit",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Notification: msRest.CompositeMapper = {
  serializedName: "Notification",
  type: {
    name: "Composite",
    className: "Notification",
    modelProperties: {
      enabled: {
        required: true,
        serializedName: "enabled",
        type: {
          name: "Boolean"
        }
      },
      operator: {
        required: true,
        serializedName: "operator",
        type: {
          name: "String"
        }
      },
      threshold: {
        required: true,
        serializedName: "threshold",
        type: {
          name: "Number"
        }
      },
      contactEmails: {
        required: true,
        serializedName: "contactEmails",
        constraints: {
          MaxItems: 50,
          MinItems: 1
        },
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      contactRoles: {
        serializedName: "contactRoles",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ProxyResource: msRest.CompositeMapper = {
  serializedName: "ProxyResource",
  type: {
    name: "Composite",
    className: "ProxyResource",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      eTag: {
        serializedName: "eTag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Budget: msRest.CompositeMapper = {
  serializedName: "Budget",
  type: {
    name: "Composite",
    className: "Budget",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      category: {
        required: true,
        isConstant: true,
        serializedName: "properties.category",
        defaultValue: 'Cost',
        type: {
          name: "String"
        }
      },
      amount: {
        required: true,
        serializedName: "properties.amount",
        type: {
          name: "Number"
        }
      },
      timeGrain: {
        required: true,
        serializedName: "properties.timeGrain",
        type: {
          name: "String"
        }
      },
      timePeriod: {
        required: true,
        serializedName: "properties.timePeriod",
        type: {
          name: "Composite",
          className: "BudgetTimePeriod"
        }
      },
      currentSpend: {
        readOnly: true,
        serializedName: "properties.currentSpend",
        type: {
          name: "Composite",
          className: "CurrentSpend"
        }
      },
      notifications: {
        serializedName: "properties.notifications",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className: "Notification"
            }
          }
        }
      }
    }
  }
};

export const CreditBalanceSummary: msRest.CompositeMapper = {
  serializedName: "CreditBalanceSummary",
  type: {
    name: "Composite",
    className: "CreditBalanceSummary",
    modelProperties: {
      estimatedBalance: {
        readOnly: true,
        serializedName: "estimatedBalance",
        type: {
          name: "Composite",
          className: "Amount"
        }
      },
      currentBalance: {
        readOnly: true,
        serializedName: "currentBalance",
        type: {
          name: "Composite",
          className: "Amount"
        }
      }
    }
  }
};

export const CreditSummary: msRest.CompositeMapper = {
  serializedName: "CreditSummary",
  type: {
    name: "Composite",
    className: "CreditSummary",
    modelProperties: {
      ...Resource.type.modelProperties,
      balanceSummary: {
        serializedName: "properties.balanceSummary",
        type: {
          name: "Composite",
          className: "CreditBalanceSummary"
        }
      },
      pendingCreditAdjustments: {
        readOnly: true,
        serializedName: "properties.pendingCreditAdjustments",
        type: {
          name: "Composite",
          className: "Amount"
        }
      },
      expiredCredit: {
        readOnly: true,
        serializedName: "properties.expiredCredit",
        type: {
          name: "Composite",
          className: "Amount"
        }
      },
      pendingEligibleCharges: {
        readOnly: true,
        serializedName: "properties.pendingEligibleCharges",
        type: {
          name: "Composite",
          className: "Amount"
        }
      }
    }
  }
};

export const EventSummary: msRest.CompositeMapper = {
  serializedName: "EventSummary",
  type: {
    name: "Composite",
    className: "EventSummary",
    modelProperties: {
      ...Resource.type.modelProperties,
      transactionDate: {
        readOnly: true,
        serializedName: "properties.transactionDate",
        type: {
          name: "DateTime"
        }
      },
      description: {
        readOnly: true,
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      newCredit: {
        readOnly: true,
        serializedName: "properties.newCredit",
        type: {
          name: "Composite",
          className: "Amount"
        }
      },
      adjustments: {
        readOnly: true,
        serializedName: "properties.adjustments",
        type: {
          name: "Composite",
          className: "Amount"
        }
      },
      creditExpired: {
        readOnly: true,
        serializedName: "properties.creditExpired",
        type: {
          name: "Composite",
          className: "Amount"
        }
      },
      charges: {
        readOnly: true,
        serializedName: "properties.charges",
        type: {
          name: "Composite",
          className: "Amount"
        }
      },
      closedBalance: {
        readOnly: true,
        serializedName: "properties.closedBalance",
        type: {
          name: "Composite",
          className: "Amount"
        }
      },
      eventType: {
        serializedName: "properties.eventType",
        type: {
          name: "String"
        }
      },
      invoiceNumber: {
        readOnly: true,
        serializedName: "properties.invoiceNumber",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Events: msRest.CompositeMapper = {
  serializedName: "Events",
  type: {
    name: "Composite",
    className: "Events",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EventSummary"
            }
          }
        }
      }
    }
  }
};

export const LotSummary: msRest.CompositeMapper = {
  serializedName: "LotSummary",
  type: {
    name: "Composite",
    className: "LotSummary",
    modelProperties: {
      ...Resource.type.modelProperties,
      originalAmount: {
        readOnly: true,
        serializedName: "properties.originalAmount",
        type: {
          name: "Composite",
          className: "Amount"
        }
      },
      closedBalance: {
        readOnly: true,
        serializedName: "properties.closedBalance",
        type: {
          name: "Composite",
          className: "Amount"
        }
      },
      source: {
        readOnly: true,
        serializedName: "properties.source",
        type: {
          name: "String"
        }
      },
      startDate: {
        readOnly: true,
        serializedName: "properties.startDate",
        type: {
          name: "DateTime"
        }
      },
      expirationDate: {
        readOnly: true,
        serializedName: "properties.expirationDate",
        type: {
          name: "DateTime"
        }
      },
      poNumber: {
        readOnly: true,
        serializedName: "properties.poNumber",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Lots: msRest.CompositeMapper = {
  serializedName: "Lots",
  type: {
    name: "Composite",
    className: "Lots",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "LotSummary"
            }
          }
        }
      }
    }
  }
};

export const ChargeSummaryByBillingAccount: msRest.CompositeMapper = {
  serializedName: "ChargeSummaryByBillingAccount",
  type: {
    name: "Composite",
    className: "ChargeSummaryByBillingAccount",
    modelProperties: {
      ...Resource.type.modelProperties,
      billingPeriodId: {
        readOnly: true,
        serializedName: "properties.billingPeriodId",
        type: {
          name: "String"
        }
      },
      usageStart: {
        readOnly: true,
        serializedName: "properties.usageStart",
        type: {
          name: "String"
        }
      },
      usageEnd: {
        readOnly: true,
        serializedName: "properties.usageEnd",
        type: {
          name: "String"
        }
      },
      azureCharges: {
        readOnly: true,
        serializedName: "properties.azureCharges",
        type: {
          name: "Composite",
          className: "Amount"
        }
      },
      chargesBilledSeparately: {
        readOnly: true,
        serializedName: "properties.chargesBilledSeparately",
        type: {
          name: "Composite",
          className: "Amount"
        }
      },
      marketplaceCharges: {
        readOnly: true,
        serializedName: "properties.marketplaceCharges",
        type: {
          name: "Composite",
          className: "Amount"
        }
      },
      billingAccountId: {
        readOnly: true,
        serializedName: "properties.billingAccountId",
        type: {
          name: "String"
        }
      },
      billingProfileId: {
        readOnly: true,
        serializedName: "properties.billingProfileId",
        type: {
          name: "String"
        }
      },
      invoiceSectionId: {
        readOnly: true,
        serializedName: "properties.invoiceSectionId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ChargesListByBillingAccount: msRest.CompositeMapper = {
  serializedName: "ChargesListByBillingAccount",
  type: {
    name: "Composite",
    className: "ChargesListByBillingAccount",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ChargeSummaryByBillingAccount"
            }
          }
        }
      }
    }
  }
};

export const ChargeSummaryByBillingProfile: msRest.CompositeMapper = {
  serializedName: "ChargeSummaryByBillingProfile",
  type: {
    name: "Composite",
    className: "ChargeSummaryByBillingProfile",
    modelProperties: {
      ...Resource.type.modelProperties,
      billingPeriodId: {
        readOnly: true,
        serializedName: "properties.billingPeriodId",
        type: {
          name: "String"
        }
      },
      usageStart: {
        readOnly: true,
        serializedName: "properties.usageStart",
        type: {
          name: "String"
        }
      },
      usageEnd: {
        readOnly: true,
        serializedName: "properties.usageEnd",
        type: {
          name: "String"
        }
      },
      azureCharges: {
        readOnly: true,
        serializedName: "properties.azureCharges",
        type: {
          name: "Composite",
          className: "Amount"
        }
      },
      chargesBilledSeparately: {
        readOnly: true,
        serializedName: "properties.chargesBilledSeparately",
        type: {
          name: "Composite",
          className: "Amount"
        }
      },
      marketplaceCharges: {
        readOnly: true,
        serializedName: "properties.marketplaceCharges",
        type: {
          name: "Composite",
          className: "Amount"
        }
      },
      billingAccountId: {
        readOnly: true,
        serializedName: "properties.billingAccountId",
        type: {
          name: "String"
        }
      },
      billingProfileId: {
        readOnly: true,
        serializedName: "properties.billingProfileId",
        type: {
          name: "String"
        }
      },
      invoiceSectionId: {
        readOnly: true,
        serializedName: "properties.invoiceSectionId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ChargesListByBillingProfile: msRest.CompositeMapper = {
  serializedName: "ChargesListByBillingProfile",
  type: {
    name: "Composite",
    className: "ChargesListByBillingProfile",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ChargeSummaryByBillingProfile"
            }
          }
        }
      }
    }
  }
};

export const ChargeSummaryByInvoiceSection: msRest.CompositeMapper = {
  serializedName: "ChargeSummaryByInvoiceSection",
  type: {
    name: "Composite",
    className: "ChargeSummaryByInvoiceSection",
    modelProperties: {
      ...Resource.type.modelProperties,
      billingPeriodId: {
        readOnly: true,
        serializedName: "properties.billingPeriodId",
        type: {
          name: "String"
        }
      },
      usageStart: {
        readOnly: true,
        serializedName: "properties.usageStart",
        type: {
          name: "String"
        }
      },
      usageEnd: {
        readOnly: true,
        serializedName: "properties.usageEnd",
        type: {
          name: "String"
        }
      },
      azureCharges: {
        readOnly: true,
        serializedName: "properties.azureCharges",
        type: {
          name: "Composite",
          className: "Amount"
        }
      },
      chargesBilledSeparately: {
        readOnly: true,
        serializedName: "properties.chargesBilledSeparately",
        type: {
          name: "Composite",
          className: "Amount"
        }
      },
      marketplaceCharges: {
        readOnly: true,
        serializedName: "properties.marketplaceCharges",
        type: {
          name: "Composite",
          className: "Amount"
        }
      },
      billingAccountId: {
        readOnly: true,
        serializedName: "properties.billingAccountId",
        type: {
          name: "String"
        }
      },
      billingProfileId: {
        readOnly: true,
        serializedName: "properties.billingProfileId",
        type: {
          name: "String"
        }
      },
      invoiceSectionId: {
        readOnly: true,
        serializedName: "properties.invoiceSectionId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ChargesListByInvoiceSection: msRest.CompositeMapper = {
  serializedName: "ChargesListByInvoiceSection",
  type: {
    name: "Composite",
    className: "ChargesListByInvoiceSection",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ChargeSummaryByInvoiceSection"
            }
          }
        }
      }
    }
  }
};

export const OperationDisplay: msRest.CompositeMapper = {
  serializedName: "Operation_display",
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        readOnly: true,
        serializedName: "provider",
        type: {
          name: "String"
        }
      },
      resource: {
        readOnly: true,
        serializedName: "resource",
        type: {
          name: "String"
        }
      },
      operation: {
        readOnly: true,
        serializedName: "operation",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Operation: msRest.CompositeMapper = {
  serializedName: "Operation",
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay"
        }
      }
    }
  }
};

export const ErrorDetails: msRest.CompositeMapper = {
  serializedName: "ErrorDetails",
  type: {
    name: "Composite",
    className: "ErrorDetails",
    modelProperties: {
      code: {
        readOnly: true,
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        readOnly: true,
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorResponse: msRest.CompositeMapper = {
  serializedName: "ErrorResponse",
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorDetails"
        }
      }
    }
  }
};

export const InvoicePricesheetDownloadHeaders: msRest.CompositeMapper = {
  serializedName: "invoicepricesheet-download-headers",
  type: {
    name: "Composite",
    className: "InvoicePricesheetDownloadHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "String"
        }
      },
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String"
        }
      },
      oDataEntityId: {
        serializedName: "odata-entityid",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BillingProfilePricesheetDownloadHeaders: msRest.CompositeMapper = {
  serializedName: "billingprofilepricesheet-download-headers",
  type: {
    name: "Composite",
    className: "BillingProfilePricesheetDownloadHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "String"
        }
      },
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String"
        }
      },
      oDataEntityId: {
        serializedName: "odata-entityid",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BudgetsListResult: msRest.CompositeMapper = {
  serializedName: "BudgetsListResult",
  type: {
    name: "Composite",
    className: "BudgetsListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Budget"
            }
          }
        }
      }
    }
  }
};

export const OperationListResult: msRest.CompositeMapper = {
  serializedName: "OperationListResult",
  type: {
    name: "Composite",
    className: "OperationListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};
