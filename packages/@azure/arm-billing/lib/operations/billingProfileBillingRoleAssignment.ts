/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/billingProfileBillingRoleAssignmentMappers";
import * as Parameters from "../models/parameters";
import { BillingManagementClientContext } from "../billingManagementClientContext";

/** Class representing a BillingProfileBillingRoleAssignment. */
export class BillingProfileBillingRoleAssignment {
  private readonly client: BillingManagementClientContext;

  /**
   * Create a BillingProfileBillingRoleAssignment.
   * @param {BillingManagementClientContext} client Reference to the service client.
   */
  constructor(client: BillingManagementClientContext) {
    this.client = client;
  }

  /**
   * Get the role assignment for the caller on the Billing Profile
   * @param billingAccountName billing Account Id.
   * @param billingProfileName Billing Profile Id.
   * @param billingRoleAssignmentName role assignment id.
   * @param [options] The optional parameters
   * @returns Promise<Models.BillingProfileBillingRoleAssignmentGetResponse>
   */
  get(billingAccountName: string, billingProfileName: string, billingRoleAssignmentName: string, options?: msRest.RequestOptionsBase): Promise<Models.BillingProfileBillingRoleAssignmentGetResponse>;
  /**
   * @param billingAccountName billing Account Id.
   * @param billingProfileName Billing Profile Id.
   * @param billingRoleAssignmentName role assignment id.
   * @param callback The callback
   */
  get(billingAccountName: string, billingProfileName: string, billingRoleAssignmentName: string, callback: msRest.ServiceCallback<Models.BillingRoleAssignment>): void;
  /**
   * @param billingAccountName billing Account Id.
   * @param billingProfileName Billing Profile Id.
   * @param billingRoleAssignmentName role assignment id.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(billingAccountName: string, billingProfileName: string, billingRoleAssignmentName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.BillingRoleAssignment>): void;
  get(billingAccountName: string, billingProfileName: string, billingRoleAssignmentName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.BillingRoleAssignment>, callback?: msRest.ServiceCallback<Models.BillingRoleAssignment>): Promise<Models.BillingProfileBillingRoleAssignmentGetResponse> {
    return this.client.sendOperationRequest(
      {
        billingAccountName,
        billingProfileName,
        billingRoleAssignmentName,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.BillingProfileBillingRoleAssignmentGetResponse>;
  }

  /**
   * Delete the role assignment on this Billing Profile
   * @param billingAccountName billing Account Id.
   * @param billingProfileName Billing Profile Id.
   * @param billingRoleAssignmentName role assignment id.
   * @param [options] The optional parameters
   * @returns Promise<Models.BillingProfileBillingRoleAssignmentDeleteMethodResponse>
   */
  deleteMethod(billingAccountName: string, billingProfileName: string, billingRoleAssignmentName: string, options?: msRest.RequestOptionsBase): Promise<Models.BillingProfileBillingRoleAssignmentDeleteMethodResponse>;
  /**
   * @param billingAccountName billing Account Id.
   * @param billingProfileName Billing Profile Id.
   * @param billingRoleAssignmentName role assignment id.
   * @param callback The callback
   */
  deleteMethod(billingAccountName: string, billingProfileName: string, billingRoleAssignmentName: string, callback: msRest.ServiceCallback<Models.BillingRoleAssignment>): void;
  /**
   * @param billingAccountName billing Account Id.
   * @param billingProfileName Billing Profile Id.
   * @param billingRoleAssignmentName role assignment id.
   * @param options The optional parameters
   * @param callback The callback
   */
  deleteMethod(billingAccountName: string, billingProfileName: string, billingRoleAssignmentName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.BillingRoleAssignment>): void;
  deleteMethod(billingAccountName: string, billingProfileName: string, billingRoleAssignmentName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.BillingRoleAssignment>, callback?: msRest.ServiceCallback<Models.BillingRoleAssignment>): Promise<Models.BillingProfileBillingRoleAssignmentDeleteMethodResponse> {
    return this.client.sendOperationRequest(
      {
        billingAccountName,
        billingProfileName,
        billingRoleAssignmentName,
        options
      },
      deleteMethodOperationSpec,
      callback) as Promise<Models.BillingProfileBillingRoleAssignmentDeleteMethodResponse>;
  }

  /**
   * Get the role assignments on the Billing Profile
   * @param billingAccountName billing Account Id.
   * @param billingProfileName Billing Profile Id.
   * @param [options] The optional parameters
   * @returns Promise<Models.BillingProfileBillingRoleAssignmentListResponse>
   */
  list(billingAccountName: string, billingProfileName: string, options?: msRest.RequestOptionsBase): Promise<Models.BillingProfileBillingRoleAssignmentListResponse>;
  /**
   * @param billingAccountName billing Account Id.
   * @param billingProfileName Billing Profile Id.
   * @param callback The callback
   */
  list(billingAccountName: string, billingProfileName: string, callback: msRest.ServiceCallback<Models.BillingRoleAssignmentListResult>): void;
  /**
   * @param billingAccountName billing Account Id.
   * @param billingProfileName Billing Profile Id.
   * @param options The optional parameters
   * @param callback The callback
   */
  list(billingAccountName: string, billingProfileName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.BillingRoleAssignmentListResult>): void;
  list(billingAccountName: string, billingProfileName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.BillingRoleAssignmentListResult>, callback?: msRest.ServiceCallback<Models.BillingRoleAssignmentListResult>): Promise<Models.BillingProfileBillingRoleAssignmentListResponse> {
    return this.client.sendOperationRequest(
      {
        billingAccountName,
        billingProfileName,
        options
      },
      listOperationSpec,
      callback) as Promise<Models.BillingProfileBillingRoleAssignmentListResponse>;
  }

  /**
   * The operation to add a role assignment to a billing profile.
   * @param billingAccountName billing Account Id.
   * @param billingProfileName Billing Profile Id.
   * @param [options] The optional parameters
   * @returns Promise<Models.BillingProfileBillingRoleAssignmentAddResponse>
   */
  add(billingAccountName: string, billingProfileName: string, options?: msRest.RequestOptionsBase): Promise<Models.BillingProfileBillingRoleAssignmentAddResponse>;
  /**
   * @param billingAccountName billing Account Id.
   * @param billingProfileName Billing Profile Id.
   * @param callback The callback
   */
  add(billingAccountName: string, billingProfileName: string, callback: msRest.ServiceCallback<Models.BillingRoleAssignmentListResult>): void;
  /**
   * @param billingAccountName billing Account Id.
   * @param billingProfileName Billing Profile Id.
   * @param options The optional parameters
   * @param callback The callback
   */
  add(billingAccountName: string, billingProfileName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.BillingRoleAssignmentListResult>): void;
  add(billingAccountName: string, billingProfileName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.BillingRoleAssignmentListResult>, callback?: msRest.ServiceCallback<Models.BillingRoleAssignmentListResult>): Promise<Models.BillingProfileBillingRoleAssignmentAddResponse> {
    return this.client.sendOperationRequest(
      {
        billingAccountName,
        billingProfileName,
        options
      },
      addOperationSpec,
      callback) as Promise<Models.BillingProfileBillingRoleAssignmentAddResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/providers/Microsoft.Billing/billingRoleAssignments/{billingRoleAssignmentName}",
  urlParameters: [
    Parameters.billingAccountName,
    Parameters.billingProfileName,
    Parameters.billingRoleAssignmentName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.BillingRoleAssignment
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const deleteMethodOperationSpec: msRest.OperationSpec = {
  httpMethod: "DELETE",
  path: "providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/providers/Microsoft.Billing/billingRoleAssignments/{billingRoleAssignmentName}",
  urlParameters: [
    Parameters.billingAccountName,
    Parameters.billingProfileName,
    Parameters.billingRoleAssignmentName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.BillingRoleAssignment
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/providers/Microsoft.Billing/billingRoleAssignments",
  urlParameters: [
    Parameters.billingAccountName,
    Parameters.billingProfileName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.BillingRoleAssignmentListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const addOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/providers/Microsoft.Billing/createBillingRoleAssignment",
  urlParameters: [
    Parameters.billingAccountName,
    Parameters.billingProfileName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "parameters",
    mapper: {
      ...Mappers.BillingRoleAssignmentPayload,
      required: true
    }
  },
  responses: {
    201: {
      bodyMapper: Mappers.BillingRoleAssignmentListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};
