/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";

export const acceptLanguage: msRest.OperationParameter = {
  parameterPath: "acceptLanguage",
  mapper: {
    serializedName: "accept-language",
    defaultValue: 'en-US',
    type: {
      name: "String"
    }
  }
};
export const apiVersion: msRest.OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    required: true,
    serializedName: "api-version",
    type: {
      name: "String"
    }
  }
};
export const billingAccountId: msRest.OperationURLParameter = {
  parameterPath: "billingAccountId",
  mapper: {
    required: true,
    serializedName: "billingAccountId",
    type: {
      name: "String"
    }
  }
};
export const billingProfileId: msRest.OperationURLParameter = {
  parameterPath: "billingProfileId",
  mapper: {
    required: true,
    serializedName: "billingProfileId",
    type: {
      name: "String"
    }
  }
};
export const billingSubscriptionId: msRest.OperationURLParameter = {
  parameterPath: "billingSubscriptionId",
  mapper: {
    required: true,
    serializedName: "billingSubscriptionId",
    type: {
      name: "String"
    }
  }
};
export const departmentId: msRest.OperationURLParameter = {
  parameterPath: "departmentId",
  mapper: {
    required: true,
    serializedName: "departmentId",
    type: {
      name: "String"
    }
  }
};
export const endDate: msRest.OperationQueryParameter = {
  parameterPath: "endDate",
  mapper: {
    required: true,
    serializedName: "endDate",
    type: {
      name: "String"
    }
  }
};
export const enrollmentAccountId: msRest.OperationURLParameter = {
  parameterPath: "enrollmentAccountId",
  mapper: {
    required: true,
    serializedName: "enrollmentAccountId",
    type: {
      name: "String"
    }
  }
};
export const expand: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "expand"
  ],
  mapper: {
    serializedName: "$expand",
    type: {
      name: "String"
    }
  }
};
export const filter: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "filter"
  ],
  mapper: {
    serializedName: "$filter",
    type: {
      name: "String"
    }
  }
};
export const invoiceName: msRest.OperationURLParameter = {
  parameterPath: "invoiceName",
  mapper: {
    required: true,
    serializedName: "invoiceName",
    type: {
      name: "String"
    }
  }
};
export const invoiceSectionId: msRest.OperationURLParameter = {
  parameterPath: "invoiceSectionId",
  mapper: {
    required: true,
    serializedName: "invoiceSectionId",
    type: {
      name: "String"
    }
  }
};
export const nextPageLink: msRest.OperationURLParameter = {
  parameterPath: "nextPageLink",
  mapper: {
    required: true,
    serializedName: "nextLink",
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};
export const periodEndDate: msRest.OperationQueryParameter = {
  parameterPath: "periodEndDate",
  mapper: {
    required: true,
    serializedName: "periodEndDate",
    type: {
      name: "String"
    }
  }
};
export const periodStartDate: msRest.OperationQueryParameter = {
  parameterPath: "periodStartDate",
  mapper: {
    required: true,
    serializedName: "periodStartDate",
    type: {
      name: "String"
    }
  }
};
export const productName: msRest.OperationURLParameter = {
  parameterPath: "productName",
  mapper: {
    required: true,
    serializedName: "productName",
    type: {
      name: "String"
    }
  }
};
export const startDate: msRest.OperationQueryParameter = {
  parameterPath: "startDate",
  mapper: {
    required: true,
    serializedName: "startDate",
    type: {
      name: "String"
    }
  }
};
export const subscriptionId: msRest.OperationURLParameter = {
  parameterPath: "subscriptionId",
  mapper: {
    required: true,
    serializedName: "subscriptionId",
    type: {
      name: "String"
    }
  }
};
