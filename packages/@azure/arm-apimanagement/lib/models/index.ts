/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };


/**
 * @interface
 * An interface representing ErrorFieldContract.
 * Error Field contract.
 *
 */
export interface ErrorFieldContract {
  /**
   * @member {string} [code] Property level error code.
   */
  code?: string;
  /**
   * @member {string} [message] Human-readable representation of property-level
   * error.
   */
  message?: string;
  /**
   * @member {string} [target] Property name.
   */
  target?: string;
}

/**
 * @interface
 * An interface representing ErrorResponseBody.
 * Error Body contract.
 *
 */
export interface ErrorResponseBody {
  /**
   * @member {string} [code] Service-defined error code. This code serves as a
   * sub-status for the HTTP error code specified in the response.
   */
  code?: string;
  /**
   * @member {string} [message] Human-readable representation of the error.
   */
  message?: string;
  /**
   * @member {ErrorFieldContract[]} [details] The list of invalid fields send
   * in request, in case of validation error.
   */
  details?: ErrorFieldContract[];
}

/**
 * @interface
 * An interface representing ErrorResponse.
 * Error Response.
 *
 */
export interface ErrorResponse {
  /**
   * @member {string} [code] Service-defined error code. This code serves as a
   * sub-status for the HTTP error code specified in the response.
   */
  code?: string;
  /**
   * @member {string} [message] Human-readable representation of the error.
   */
  message?: string;
  /**
   * @member {ErrorFieldContract[]} [details] The list of invalid fields send
   * in request, in case of validation error.
   */
  details?: ErrorFieldContract[];
}

/**
 * @interface
 * An interface representing Resource.
 * The Resource definition.
 *
 * @extends BaseResource
 */
export interface Resource extends BaseResource {
  /**
   * @member {string} [id] Resource ID.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [name] Resource name.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [type] Resource type for API Management resource.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: string;
}

/**
 * @interface
 * An interface representing PolicyContract.
 * Policy Contract details.
 *
 * @extends Resource
 */
export interface PolicyContract extends Resource {
  /**
   * @member {string} policyContent Json escaped Xml Encoded contents of the
   * Policy.
   */
  policyContent: string;
  /**
   * @member {PolicyContentFormat} [contentFormat] Format of the policyContent.
   * Possible values include: 'xml', 'xml-link', 'rawxml', 'rawxml-link'.
   * Default value: 'xml' .
   */
  contentFormat?: PolicyContentFormat;
}

/**
 * @interface
 * An interface representing PolicyCollection.
 * The response of the list policy operation.
 *
 */
export interface PolicyCollection {
  /**
   * @member {PolicyContract[]} [value] Policy Contract value.
   */
  value?: PolicyContract[];
  /**
   * @member {string} [nextLink] Next page link if any.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing PolicySnippetContract.
 * Policy snippet.
 *
 */
export interface PolicySnippetContract {
  /**
   * @member {string} [name] Snippet name.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [content] Snippet content.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly content?: string;
  /**
   * @member {string} [toolTip] Snippet toolTip.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly toolTip?: string;
  /**
   * @member {number} [scope] Binary OR value of the Snippet scope.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly scope?: number;
}

/**
 * @interface
 * An interface representing PolicySnippetsCollection.
 * The response of the list policy snippets operation.
 *
 */
export interface PolicySnippetsCollection {
  /**
   * @member {PolicySnippetContract[]} [value] Policy snippet value.
   */
  value?: PolicySnippetContract[];
}

/**
 * @interface
 * An interface representing RegionContract.
 * Region profile.
 *
 */
export interface RegionContract {
  /**
   * @member {string} [name] Region name.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {boolean} [isMasterRegion] whether Region is the master region.
   */
  isMasterRegion?: boolean;
  /**
   * @member {boolean} [isDeleted] whether Region is deleted.
   */
  isDeleted?: boolean;
}

/**
 * @interface
 * An interface representing ApiExportResult.
 * API Export result Blob Uri.
 *
 */
export interface ApiExportResult {
  /**
   * @member {string} [link] Link to the Storage Blob containing the result of
   * the export operation. The Blob Uri is only valid for 5 minutes.
   */
  link?: string;
}

/**
 * @interface
 * An interface representing ApiVersionSetContractDetails.
 * An API Version Set contains the common configuration for a set of API
 * Versions relating
 *
 */
export interface ApiVersionSetContractDetails {
  /**
   * @member {string} [id] Identifier for existing API Version Set. Omit this
   * value to create a new Version Set.
   */
  id?: string;
  /**
   * @member {string} [description] Description of API Version Set.
   */
  description?: string;
  /**
   * @member {VersioningScheme1} [versioningScheme] An value that determines
   * where the API Version identifer will be located in a HTTP request.
   * Possible values include: 'Segment', 'Query', 'Header'
   */
  versioningScheme?: VersioningScheme1;
  /**
   * @member {string} [versionQueryName] Name of query parameter that indicates
   * the API Version if versioningScheme is set to `query`.
   */
  versionQueryName?: string;
  /**
   * @member {string} [versionHeaderName] Name of HTTP header parameter that
   * indicates the API Version if versioningScheme is set to `header`.
   */
  versionHeaderName?: string;
}

/**
 * @interface
 * An interface representing ApiEntityBaseContract.
 * API base contract details.
 *
 */
export interface ApiEntityBaseContract {
  /**
   * @member {string} [description] Description of the API. May include HTML
   * formatting tags.
   */
  description?: string;
  /**
   * @member {AuthenticationSettingsContract} [authenticationSettings]
   * Collection of authentication settings included into this API.
   */
  authenticationSettings?: AuthenticationSettingsContract;
  /**
   * @member {SubscriptionKeyParameterNamesContract}
   * [subscriptionKeyParameterNames] Protocols over which API is made
   * available.
   */
  subscriptionKeyParameterNames?: SubscriptionKeyParameterNamesContract;
  /**
   * @member {ApiType} [apiType] Type of API. Possible values include: 'http',
   * 'soap'
   */
  apiType?: ApiType;
  /**
   * @member {string} [apiRevision] Describes the Revision of the Api. If no
   * value is provided, default revision 1 is created
   */
  apiRevision?: string;
  /**
   * @member {string} [apiVersion] Indicates the Version identifier of the API
   * if the API is versioned
   */
  apiVersion?: string;
  /**
   * @member {boolean} [isCurrent] Indicates if API revision is current api
   * revision.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly isCurrent?: boolean;
  /**
   * @member {boolean} [isOnline] Indicates if API revision is accessible via
   * the gateway.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly isOnline?: boolean;
  /**
   * @member {string} [apiRevisionDescription] Description of the Api Revision.
   */
  apiRevisionDescription?: string;
  /**
   * @member {string} [apiVersionDescription] Description of the Api Version.
   */
  apiVersionDescription?: string;
  /**
   * @member {string} [apiVersionSetId] A resource identifier for the related
   * ApiVersionSet.
   */
  apiVersionSetId?: string;
}

/**
 * @interface
 * An interface representing ApiContractProperties.
 * Api Entity Properties
 *
 * @extends ApiEntityBaseContract
 */
export interface ApiContractProperties extends ApiEntityBaseContract {
  /**
   * @member {string} [displayName] API name.
   */
  displayName?: string;
  /**
   * @member {string} [serviceUrl] Absolute URL of the backend service
   * implementing this API.
   */
  serviceUrl?: string;
  /**
   * @member {string} path Relative URL uniquely identifying this API and all
   * of its resource paths within the API Management service instance. It is
   * appended to the API endpoint base URL specified during the service
   * instance creation to form a public URL for this API.
   */
  path: string;
  /**
   * @member {Protocol[]} [protocols] Describes on which protocols the
   * operations in this API can be invoked.
   */
  protocols?: Protocol[];
  /**
   * @member {ApiVersionSetContractDetails} [apiVersionSet]
   */
  apiVersionSet?: ApiVersionSetContractDetails;
}

/**
 * @interface
 * An interface representing ApiContract.
 * API details.
 *
 * @extends Resource
 */
export interface ApiContract extends Resource {
  /**
   * @member {string} [description] Description of the API. May include HTML
   * formatting tags.
   */
  description?: string;
  /**
   * @member {AuthenticationSettingsContract} [authenticationSettings]
   * Collection of authentication settings included into this API.
   */
  authenticationSettings?: AuthenticationSettingsContract;
  /**
   * @member {SubscriptionKeyParameterNamesContract}
   * [subscriptionKeyParameterNames] Protocols over which API is made
   * available.
   */
  subscriptionKeyParameterNames?: SubscriptionKeyParameterNamesContract;
  /**
   * @member {ApiType} [apiType] Type of API. Possible values include: 'http',
   * 'soap'
   */
  apiType?: ApiType;
  /**
   * @member {string} [apiRevision] Describes the Revision of the Api. If no
   * value is provided, default revision 1 is created
   */
  apiRevision?: string;
  /**
   * @member {string} [apiVersion] Indicates the Version identifier of the API
   * if the API is versioned
   */
  apiVersion?: string;
  /**
   * @member {boolean} [isCurrent] Indicates if API revision is current api
   * revision.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly isCurrent?: boolean;
  /**
   * @member {boolean} [isOnline] Indicates if API revision is accessible via
   * the gateway.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly isOnline?: boolean;
  /**
   * @member {string} [apiRevisionDescription] Description of the Api Revision.
   */
  apiRevisionDescription?: string;
  /**
   * @member {string} [apiVersionDescription] Description of the Api Version.
   */
  apiVersionDescription?: string;
  /**
   * @member {string} [apiVersionSetId] A resource identifier for the related
   * ApiVersionSet.
   */
  apiVersionSetId?: string;
  /**
   * @member {string} [displayName] API name.
   */
  displayName?: string;
  /**
   * @member {string} [serviceUrl] Absolute URL of the backend service
   * implementing this API.
   */
  serviceUrl?: string;
  /**
   * @member {string} path Relative URL uniquely identifying this API and all
   * of its resource paths within the API Management service instance. It is
   * appended to the API endpoint base URL specified during the service
   * instance creation to form a public URL for this API.
   */
  path: string;
  /**
   * @member {Protocol[]} [protocols] Describes on which protocols the
   * operations in this API can be invoked.
   */
  protocols?: Protocol[];
  /**
   * @member {ApiVersionSetContractDetails} [apiVersionSet]
   */
  apiVersionSet?: ApiVersionSetContractDetails;
}

/**
 * @interface
 * An interface representing ApiCreateOrUpdatePropertiesWsdlSelector.
 * Criteria to limit import of WSDL to a subset of the document.
 *
 */
export interface ApiCreateOrUpdatePropertiesWsdlSelector {
  /**
   * @member {string} [wsdlServiceName] Name of service to import from WSDL
   */
  wsdlServiceName?: string;
  /**
   * @member {string} [wsdlEndpointName] Name of endpoint(port) to import from
   * WSDL
   */
  wsdlEndpointName?: string;
}

/**
 * @interface
 * An interface representing ApiCreateOrUpdateParameter.
 * API Create or Update Parameters.
 *
 */
export interface ApiCreateOrUpdateParameter {
  /**
   * @member {string} [description] Description of the API. May include HTML
   * formatting tags.
   */
  description?: string;
  /**
   * @member {AuthenticationSettingsContract} [authenticationSettings]
   * Collection of authentication settings included into this API.
   */
  authenticationSettings?: AuthenticationSettingsContract;
  /**
   * @member {SubscriptionKeyParameterNamesContract}
   * [subscriptionKeyParameterNames] Protocols over which API is made
   * available.
   */
  subscriptionKeyParameterNames?: SubscriptionKeyParameterNamesContract;
  /**
   * @member {ApiType} [apiType] Type of API. Possible values include: 'http',
   * 'soap'
   */
  apiType?: ApiType;
  /**
   * @member {string} [apiRevision] Describes the Revision of the Api. If no
   * value is provided, default revision 1 is created
   */
  apiRevision?: string;
  /**
   * @member {string} [apiVersion] Indicates the Version identifier of the API
   * if the API is versioned
   */
  apiVersion?: string;
  /**
   * @member {boolean} [isCurrent] Indicates if API revision is current api
   * revision.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly isCurrent?: boolean;
  /**
   * @member {boolean} [isOnline] Indicates if API revision is accessible via
   * the gateway.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly isOnline?: boolean;
  /**
   * @member {string} [apiRevisionDescription] Description of the Api Revision.
   */
  apiRevisionDescription?: string;
  /**
   * @member {string} [apiVersionDescription] Description of the Api Version.
   */
  apiVersionDescription?: string;
  /**
   * @member {string} [apiVersionSetId] A resource identifier for the related
   * ApiVersionSet.
   */
  apiVersionSetId?: string;
  /**
   * @member {string} [displayName] API name.
   */
  displayName?: string;
  /**
   * @member {string} [serviceUrl] Absolute URL of the backend service
   * implementing this API.
   */
  serviceUrl?: string;
  /**
   * @member {string} path Relative URL uniquely identifying this API and all
   * of its resource paths within the API Management service instance. It is
   * appended to the API endpoint base URL specified during the service
   * instance creation to form a public URL for this API.
   */
  path: string;
  /**
   * @member {Protocol[]} [protocols] Describes on which protocols the
   * operations in this API can be invoked.
   */
  protocols?: Protocol[];
  /**
   * @member {ApiVersionSetContractDetails} [apiVersionSet]
   */
  apiVersionSet?: ApiVersionSetContractDetails;
  /**
   * @member {string} [contentValue] Content value when Importing an API.
   */
  contentValue?: string;
  /**
   * @member {ContentFormat} [contentFormat] Format of the Content in which the
   * API is getting imported. Possible values include: 'wadl-xml',
   * 'wadl-link-json', 'swagger-json', 'swagger-link-json', 'wsdl', 'wsdl-link'
   */
  contentFormat?: ContentFormat;
  /**
   * @member {ApiCreateOrUpdatePropertiesWsdlSelector} [wsdlSelector] Criteria
   * to limit import of WSDL to a subset of the document.
   */
  wsdlSelector?: ApiCreateOrUpdatePropertiesWsdlSelector;
  /**
   * @member {SoapApiType} [soapApiType] Type of Api to create.
   * * `http` creates a SOAP to REST API
   * * `soap` creates a SOAP pass-through API. Possible values include:
   * 'SoapToRest', 'SoapPassThrough'
   */
  soapApiType?: SoapApiType;
}

/**
 * @interface
 * An interface representing ApiUpdateContract.
 * API update contract details.
 *
 */
export interface ApiUpdateContract {
  /**
   * @member {string} [description] Description of the API. May include HTML
   * formatting tags.
   */
  description?: string;
  /**
   * @member {AuthenticationSettingsContract} [authenticationSettings]
   * Collection of authentication settings included into this API.
   */
  authenticationSettings?: AuthenticationSettingsContract;
  /**
   * @member {SubscriptionKeyParameterNamesContract}
   * [subscriptionKeyParameterNames] Protocols over which API is made
   * available.
   */
  subscriptionKeyParameterNames?: SubscriptionKeyParameterNamesContract;
  /**
   * @member {ApiType} [apiType] Type of API. Possible values include: 'http',
   * 'soap'
   */
  apiType?: ApiType;
  /**
   * @member {string} [apiRevision] Describes the Revision of the Api. If no
   * value is provided, default revision 1 is created
   */
  apiRevision?: string;
  /**
   * @member {string} [apiVersion] Indicates the Version identifier of the API
   * if the API is versioned
   */
  apiVersion?: string;
  /**
   * @member {boolean} [isCurrent] Indicates if API revision is current api
   * revision.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly isCurrent?: boolean;
  /**
   * @member {boolean} [isOnline] Indicates if API revision is accessible via
   * the gateway.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly isOnline?: boolean;
  /**
   * @member {string} [apiRevisionDescription] Description of the Api Revision.
   */
  apiRevisionDescription?: string;
  /**
   * @member {string} [apiVersionDescription] Description of the Api Version.
   */
  apiVersionDescription?: string;
  /**
   * @member {string} [apiVersionSetId] A resource identifier for the related
   * ApiVersionSet.
   */
  apiVersionSetId?: string;
  /**
   * @member {string} [displayName] API name.
   */
  displayName?: string;
  /**
   * @member {string} [serviceUrl] Absolute URL of the backend service
   * implementing this API.
   */
  serviceUrl?: string;
  /**
   * @member {string} [path] Relative URL uniquely identifying this API and all
   * of its resource paths within the API Management service instance. It is
   * appended to the API endpoint base URL specified during the service
   * instance creation to form a public URL for this API.
   */
  path?: string;
  /**
   * @member {Protocol[]} [protocols] Describes on which protocols the
   * operations in this API can be invoked.
   */
  protocols?: Protocol[];
}

/**
 * @interface
 * An interface representing OAuth2AuthenticationSettingsContract.
 * API OAuth2 Authentication settings details.
 *
 */
export interface OAuth2AuthenticationSettingsContract {
  /**
   * @member {string} [authorizationServerId] OAuth authorization server
   * identifier.
   */
  authorizationServerId?: string;
  /**
   * @member {string} [scope] operations scope.
   */
  scope?: string;
}

/**
 * @interface
 * An interface representing OpenIdAuthenticationSettingsContract.
 * API OAuth2 Authentication settings details.
 *
 */
export interface OpenIdAuthenticationSettingsContract {
  /**
   * @member {string} [openidProviderId] OAuth authorization server identifier.
   */
  openidProviderId?: string;
  /**
   * @member {BearerTokenSendingMethods[]} [bearerTokenSendingMethods] How to
   * send token to the server.
   */
  bearerTokenSendingMethods?: BearerTokenSendingMethods[];
}

/**
 * @interface
 * An interface representing AuthenticationSettingsContract.
 * API Authentication Settings.
 *
 */
export interface AuthenticationSettingsContract {
  /**
   * @member {OAuth2AuthenticationSettingsContract} [oAuth2] OAuth2
   * Authentication settings
   */
  oAuth2?: OAuth2AuthenticationSettingsContract;
  /**
   * @member {OpenIdAuthenticationSettingsContract} [openid] OpenID Connect
   * Authentication Settings
   */
  openid?: OpenIdAuthenticationSettingsContract;
  /**
   * @member {boolean} [subscriptionKeyRequired] Specifies whether subscription
   * key is required during call to this API, true - API is included into
   * closed products only, false - API is included into open products alone,
   * null - there is a mix of products.
   */
  subscriptionKeyRequired?: boolean;
}

/**
 * @interface
 * An interface representing SubscriptionKeyParameterNamesContract.
 * Subscription key parameter names details.
 *
 */
export interface SubscriptionKeyParameterNamesContract {
  /**
   * @member {string} [header] Subscription key header name.
   */
  header?: string;
  /**
   * @member {string} [query] Subscription key query string parameter name.
   */
  query?: string;
}

/**
 * @interface
 * An interface representing ApiRevisionContract.
 * Summary of revision metadata.
 *
 */
export interface ApiRevisionContract {
  /**
   * @member {string} [apiId] Identifier of the API Revision.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly apiId?: string;
  /**
   * @member {string} [apiRevision] Revision number of API.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly apiRevision?: string;
  /**
   * @member {Date} [createdDateTime] The time the API Revision was created.
   * The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ as
   * specified by the ISO 8601 standard.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly createdDateTime?: Date;
  /**
   * @member {Date} [updatedDateTime] The time the API Revision were updated.
   * The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ as
   * specified by the ISO 8601 standard.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly updatedDateTime?: Date;
  /**
   * @member {string} [description] Description of the API Revision.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
  /**
   * @member {string} [privateUrl] Gateway URL for accessing the non-current
   * API Revision.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly privateUrl?: string;
  /**
   * @member {boolean} [isOnline] Indicates if API revision is the current api
   * revision.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly isOnline?: boolean;
  /**
   * @member {boolean} [isCurrent] Indicates if API revision is accessible via
   * the gateway.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly isCurrent?: boolean;
}

/**
 * @interface
 * An interface representing ApiRevisionInfoContract.
 * Object used to create an API Revision or Version based on an existing API
 * Revision
 *
 */
export interface ApiRevisionInfoContract {
  /**
   * @member {string} [sourceApiId] Resource identifier of API to be used to
   * create the revision from.
   */
  sourceApiId?: string;
  /**
   * @member {string} [apiVersionName] Version identifier for the new API
   * Version.
   */
  apiVersionName?: string;
  /**
   * @member {string} [apiRevisionDescription] Description of new API Revision.
   */
  apiRevisionDescription?: string;
  /**
   * @member {ApiVersionSetContractDetails} [apiVersionSet] Version set details
   */
  apiVersionSet?: ApiVersionSetContractDetails;
}

/**
 * @interface
 * An interface representing ApiReleaseContract.
 * Api Release details.
 *
 * @extends Resource
 */
export interface ApiReleaseContract extends Resource {
  /**
   * @member {string} [apiId] Identifier of the API the release belongs to.
   */
  apiId?: string;
  /**
   * @member {Date} [createdDateTime] The time the API was released. The date
   * conforms to the following format: yyyy-MM-ddTHH:mm:ssZ as specified by the
   * ISO 8601 standard.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly createdDateTime?: Date;
  /**
   * @member {Date} [updatedDateTime] The time the API release was updated.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly updatedDateTime?: Date;
  /**
   * @member {string} [notes] Release Notes
   */
  notes?: string;
}

/**
 * @interface
 * An interface representing OperationContract.
 * Api Operation details.
 *
 * @extends Resource
 */
export interface OperationContract extends Resource {
  /**
   * @member {ParameterContract[]} [templateParameters] Collection of URL
   * template parameters.
   */
  templateParameters?: ParameterContract[];
  /**
   * @member {string} [description] Description of the operation. May include
   * HTML formatting tags.
   */
  description?: string;
  /**
   * @member {RequestContract} [request] An entity containing request details.
   */
  request?: RequestContract;
  /**
   * @member {ResponseContract[]} [responses] Array of Operation responses.
   */
  responses?: ResponseContract[];
  /**
   * @member {string} [policies] Operation Policies
   */
  policies?: string;
  /**
   * @member {string} displayName Operation Name.
   */
  displayName: string;
  /**
   * @member {string} method A Valid HTTP Operation Method. Typical Http
   * Methods like GET, PUT, POST but not limited by only them.
   */
  method: string;
  /**
   * @member {string} urlTemplate Relative URL template identifying the target
   * resource for this operation. May include parameters. Example:
   * /customers/{cid}/orders/{oid}/?date={date}
   */
  urlTemplate: string;
}

/**
 * @interface
 * An interface representing ParameterContract.
 * Operation parameters details.
 *
 */
export interface ParameterContract {
  /**
   * @member {string} name Parameter name.
   */
  name: string;
  /**
   * @member {string} [description] Parameter description.
   */
  description?: string;
  /**
   * @member {string} type Parameter type.
   */
  type: string;
  /**
   * @member {string} [defaultValue] Default parameter value.
   */
  defaultValue?: string;
  /**
   * @member {boolean} [required] whether parameter is required or not.
   */
  required?: boolean;
  /**
   * @member {string[]} [values] Parameter values.
   */
  values?: string[];
}

/**
 * @interface
 * An interface representing RepresentationContract.
 * Operation request/response representation details.
 *
 */
export interface RepresentationContract {
  /**
   * @member {string} contentType Specifies a registered or custom content type
   * for this representation, e.g. application/xml.
   */
  contentType: string;
  /**
   * @member {string} [sample] An example of the representation.
   */
  sample?: string;
  /**
   * @member {string} [schemaId] Schema identifier. Applicable only if
   * 'contentType' value is neither 'application/x-www-form-urlencoded' nor
   * 'multipart/form-data'.
   */
  schemaId?: string;
  /**
   * @member {string} [typeName] Type name defined by the schema. Applicable
   * only if 'contentType' value is neither 'application/x-www-form-urlencoded'
   * nor 'multipart/form-data'.
   */
  typeName?: string;
  /**
   * @member {ParameterContract[]} [formParameters] Collection of form
   * parameters. Required if 'contentType' value is either
   * 'application/x-www-form-urlencoded' or 'multipart/form-data'..
   */
  formParameters?: ParameterContract[];
}

/**
 * @interface
 * An interface representing RequestContract.
 * Operation request details.
 *
 */
export interface RequestContract {
  /**
   * @member {string} [description] Operation request description.
   */
  description?: string;
  /**
   * @member {ParameterContract[]} [queryParameters] Collection of operation
   * request query parameters.
   */
  queryParameters?: ParameterContract[];
  /**
   * @member {ParameterContract[]} [headers] Collection of operation request
   * headers.
   */
  headers?: ParameterContract[];
  /**
   * @member {RepresentationContract[]} [representations] Collection of
   * operation request representations.
   */
  representations?: RepresentationContract[];
}

/**
 * @interface
 * An interface representing ResponseContract.
 * Operation response details.
 *
 */
export interface ResponseContract {
  /**
   * @member {number} statusCode Operation response HTTP status code.
   */
  statusCode: number;
  /**
   * @member {string} [description] Operation response description.
   */
  description?: string;
  /**
   * @member {RepresentationContract[]} [representations] Collection of
   * operation response representations.
   */
  representations?: RepresentationContract[];
  /**
   * @member {ParameterContract[]} [headers] Collection of operation response
   * headers.
   */
  headers?: ParameterContract[];
}

/**
 * @interface
 * An interface representing OperationEntityBaseContract.
 * Api Operation Entity Base Contract details.
 *
 */
export interface OperationEntityBaseContract {
  /**
   * @member {ParameterContract[]} [templateParameters] Collection of URL
   * template parameters.
   */
  templateParameters?: ParameterContract[];
  /**
   * @member {string} [description] Description of the operation. May include
   * HTML formatting tags.
   */
  description?: string;
  /**
   * @member {RequestContract} [request] An entity containing request details.
   */
  request?: RequestContract;
  /**
   * @member {ResponseContract[]} [responses] Array of Operation responses.
   */
  responses?: ResponseContract[];
  /**
   * @member {string} [policies] Operation Policies
   */
  policies?: string;
}

/**
 * @interface
 * An interface representing OperationUpdateContract.
 * Api Operation Update Contract details.
 *
 */
export interface OperationUpdateContract {
  /**
   * @member {ParameterContract[]} [templateParameters] Collection of URL
   * template parameters.
   */
  templateParameters?: ParameterContract[];
  /**
   * @member {string} [description] Description of the operation. May include
   * HTML formatting tags.
   */
  description?: string;
  /**
   * @member {RequestContract} [request] An entity containing request details.
   */
  request?: RequestContract;
  /**
   * @member {ResponseContract[]} [responses] Array of Operation responses.
   */
  responses?: ResponseContract[];
  /**
   * @member {string} [policies] Operation Policies
   */
  policies?: string;
  /**
   * @member {string} [displayName] Operation Name.
   */
  displayName?: string;
  /**
   * @member {string} [method] A Valid HTTP Operation Method. Typical Http
   * Methods like GET, PUT, POST but not limited by only them.
   */
  method?: string;
  /**
   * @member {string} [urlTemplate] Relative URL template identifying the
   * target resource for this operation. May include parameters. Example:
   * /customers/{cid}/orders/{oid}/?date={date}
   */
  urlTemplate?: string;
}

/**
 * @interface
 * An interface representing SchemaContract.
 * Schema Contract details.
 *
 * @extends Resource
 */
export interface SchemaContract extends Resource {
  /**
   * @member {string} contentType Must be a valid a media type used in a
   * Content-Type header as defined in the RFC 2616. Media type of the schema
   * document (e.g. application/json, application/xml).
   */
  contentType: string;
  /**
   * @member {string} [value] Json escaped string defining the document
   * representing the Schema.
   */
  value?: string;
}

/**
 * @interface
 * An interface representing IssueContract.
 * Issue Contract details.
 *
 * @extends Resource
 */
export interface IssueContract extends Resource {
  /**
   * @member {Date} [createdDate] Date and time when the issue was created.
   */
  createdDate?: Date;
  /**
   * @member {State} [state] Status of the issue. Possible values include:
   * 'proposed', 'open', 'removed', 'resolved', 'closed'
   */
  state?: State;
  /**
   * @member {string} [apiId] A resource identifier for the API the issue was
   * created for.
   */
  apiId?: string;
  /**
   * @member {string} title The issue title.
   */
  title: string;
  /**
   * @member {string} description Text describing the issue.
   */
  description: string;
  /**
   * @member {string} userId A resource identifier for the user created the
   * issue.
   */
  userId: string;
}

/**
 * @interface
 * An interface representing IssueUpdateContract.
 * Issue update Parameters.
 *
 */
export interface IssueUpdateContract {
  /**
   * @member {Date} [createdDate] Date and time when the issue was created.
   */
  createdDate?: Date;
  /**
   * @member {State} [state] Status of the issue. Possible values include:
   * 'proposed', 'open', 'removed', 'resolved', 'closed'
   */
  state?: State;
  /**
   * @member {string} [apiId] A resource identifier for the API the issue was
   * created for.
   */
  apiId?: string;
  /**
   * @member {string} [title] The issue title.
   */
  title?: string;
  /**
   * @member {string} [description] Text describing the issue.
   */
  description?: string;
  /**
   * @member {string} [userId] A resource identifier for the user created the
   * issue.
   */
  userId?: string;
}

/**
 * @interface
 * An interface representing IssueContractBaseProperties.
 * Issue contract Base Properties.
 *
 */
export interface IssueContractBaseProperties {
  /**
   * @member {Date} [createdDate] Date and time when the issue was created.
   */
  createdDate?: Date;
  /**
   * @member {State} [state] Status of the issue. Possible values include:
   * 'proposed', 'open', 'removed', 'resolved', 'closed'
   */
  state?: State;
  /**
   * @member {string} [apiId] A resource identifier for the API the issue was
   * created for.
   */
  apiId?: string;
}

/**
 * @interface
 * An interface representing IssueCommentContract.
 * Issue Comment Contract details.
 *
 * @extends Resource
 */
export interface IssueCommentContract extends Resource {
  /**
   * @member {string} text Comment text.
   */
  text: string;
  /**
   * @member {Date} [createdDate] Date and time when the comment was created.
   */
  createdDate?: Date;
  /**
   * @member {string} userId A resource identifier for the user who left the
   * comment.
   */
  userId: string;
}

/**
 * @interface
 * An interface representing IssueAttachmentContract.
 * Issue Attachment Contract details.
 *
 * @extends Resource
 */
export interface IssueAttachmentContract extends Resource {
  /**
   * @member {string} title Filename by which the binary data will be saved.
   */
  title: string;
  /**
   * @member {string} contentFormat Either 'link' if content is provided via an
   * HTTP link or the MIME type of the Base64-encoded binary data provided in
   * the 'content' property.
   */
  contentFormat: string;
  /**
   * @member {string} content An HTTP link or Base64-encoded binary data.
   */
  content: string;
}

/**
 * @interface
 * An interface representing LoggerContract.
 * Logger details.
 *
 * @extends Resource
 */
export interface LoggerContract extends Resource {
  /**
   * @member {LoggerType} loggerType Logger type. Possible values include:
   * 'azureEventHub', 'applicationInsights'
   */
  loggerType: LoggerType;
  /**
   * @member {string} [description] Logger description.
   */
  description?: string;
  /**
   * @member {{ [propertyName: string]: string }} credentials The name and
   * SendRule connection string of the event hub for azureEventHub logger.
   * Instrumentation key for applicationInsights logger.
   */
  credentials: { [propertyName: string]: string };
  /**
   * @member {boolean} [isBuffered] Whether records are buffered in the logger
   * before publishing. Default is assumed to be true.
   */
  isBuffered?: boolean;
}

/**
 * @interface
 * An interface representing DiagnosticContract.
 * Diagnostic details.
 *
 * @extends Resource
 */
export interface DiagnosticContract extends Resource {
  /**
   * @member {boolean} enabled Indicates whether a diagnostic should receive
   * data or not.
   */
  enabled: boolean;
}

/**
 * @interface
 * An interface representing ProductEntityBaseParameters.
 * Product Entity Base Parameters
 *
 */
export interface ProductEntityBaseParameters {
  /**
   * @member {string} [description] Product description. May include HTML
   * formatting tags.
   */
  description?: string;
  /**
   * @member {string} [terms] Product terms of use. Developers trying to
   * subscribe to the product will be presented and required to accept these
   * terms before they can complete the subscription process.
   */
  terms?: string;
  /**
   * @member {boolean} [subscriptionRequired] Whether a product subscription is
   * required for accessing APIs included in this product. If true, the product
   * is referred to as "protected" and a valid subscription key is required for
   * a request to an API included in the product to succeed. If false, the
   * product is referred to as "open" and requests to an API included in the
   * product can be made without a subscription key. If property is omitted
   * when creating a new product it's value is assumed to be true.
   */
  subscriptionRequired?: boolean;
  /**
   * @member {boolean} [approvalRequired] whether subscription approval is
   * required. If false, new subscriptions will be approved automatically
   * enabling developers to call the product’s APIs immediately after
   * subscribing. If true, administrators must manually approve the
   * subscription before the developer can any of the product’s APIs. Can be
   * present only if subscriptionRequired property is present and has a value
   * of false.
   */
  approvalRequired?: boolean;
  /**
   * @member {number} [subscriptionsLimit] Whether the number of subscriptions
   * a user can have to this product at the same time. Set to null or omit to
   * allow unlimited per user subscriptions. Can be present only if
   * subscriptionRequired property is present and has a value of false.
   */
  subscriptionsLimit?: number;
  /**
   * @member {ProductState} [state] whether product is published or not.
   * Published products are discoverable by users of developer portal. Non
   * published products are visible only to administrators. Default state of
   * Product is notPublished. Possible values include: 'notPublished',
   * 'published'
   */
  state?: ProductState;
}

/**
 * @interface
 * An interface representing ProductTagResourceContractProperties.
 * Product profile.
 *
 * @extends ProductEntityBaseParameters
 */
export interface ProductTagResourceContractProperties extends ProductEntityBaseParameters {
  /**
   * @member {string} [id] Identifier of the product in the form of
   * /products/{productId}
   */
  id?: string;
  /**
   * @member {string} name Product name.
   */
  name: string;
}

/**
 * @interface
 * An interface representing OperationTagResourceContractProperties.
 * Operation Entity contract Properties.
 *
 */
export interface OperationTagResourceContractProperties {
  /**
   * @member {string} [id] Identifier of the operation in form
   * /operations/{operationId}.
   */
  id?: string;
  /**
   * @member {string} [name] Operation name.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [apiName] Api Name.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly apiName?: string;
  /**
   * @member {string} [apiRevision] Api Revision.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly apiRevision?: string;
  /**
   * @member {string} [apiVersion] Api Version.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly apiVersion?: string;
  /**
   * @member {string} [description] Operation Description.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
  /**
   * @member {string} [method] A Valid HTTP Operation Method. Typical Http
   * Methods like GET, PUT, POST but not limited by only them.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly method?: string;
  /**
   * @member {string} [urlTemplate] Relative URL template identifying the
   * target resource for this operation. May include parameters. Example:
   * /customers/{cid}/orders/{oid}/?date={date}
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly urlTemplate?: string;
}

/**
 * @interface
 * An interface representing ApiTagResourceContractProperties.
 * API contract properties for the Tag Resources.
 *
 * @extends ApiEntityBaseContract
 */
export interface ApiTagResourceContractProperties extends ApiEntityBaseContract {
  /**
   * @member {string} [id] API identifier in the form /apis/{apiId}.
   */
  id?: string;
  /**
   * @member {string} [name] API name.
   */
  name?: string;
  /**
   * @member {string} [serviceUrl] Absolute URL of the backend service
   * implementing this API.
   */
  serviceUrl?: string;
  /**
   * @member {string} [path] Relative URL uniquely identifying this API and all
   * of its resource paths within the API Management service instance. It is
   * appended to the API endpoint base URL specified during the service
   * instance creation to form a public URL for this API.
   */
  path?: string;
  /**
   * @member {Protocol[]} [protocols] Describes on which protocols the
   * operations in this API can be invoked.
   */
  protocols?: Protocol[];
}

/**
 * @interface
 * An interface representing TagTagResourceContractProperties.
 * Contract defining the Tag property in the Tag Resource Contract
 *
 */
export interface TagTagResourceContractProperties {
  /**
   * @member {string} [id] Tag identifier
   */
  id?: string;
  /**
   * @member {string} [name] Tag Name
   */
  name?: string;
}

/**
 * @interface
 * An interface representing TagResourceContract.
 * TagResource contract properties.
 *
 */
export interface TagResourceContract {
  /**
   * @member {TagTagResourceContractProperties} tag Tag associated with the
   * resource.
   */
  tag: TagTagResourceContractProperties;
  /**
   * @member {ApiTagResourceContractProperties} [api] Api associated with the
   * tag.
   */
  api?: ApiTagResourceContractProperties;
  /**
   * @member {OperationTagResourceContractProperties} [operation] Operation
   * associated with the tag.
   */
  operation?: OperationTagResourceContractProperties;
  /**
   * @member {ProductTagResourceContractProperties} [product] Product
   * associated with the tag.
   */
  product?: ProductTagResourceContractProperties;
}

/**
 * @interface
 * An interface representing ProductContract.
 * Product details.
 *
 * @extends Resource
 */
export interface ProductContract extends Resource {
  /**
   * @member {string} [description] Product description. May include HTML
   * formatting tags.
   */
  description?: string;
  /**
   * @member {string} [terms] Product terms of use. Developers trying to
   * subscribe to the product will be presented and required to accept these
   * terms before they can complete the subscription process.
   */
  terms?: string;
  /**
   * @member {boolean} [subscriptionRequired] Whether a product subscription is
   * required for accessing APIs included in this product. If true, the product
   * is referred to as "protected" and a valid subscription key is required for
   * a request to an API included in the product to succeed. If false, the
   * product is referred to as "open" and requests to an API included in the
   * product can be made without a subscription key. If property is omitted
   * when creating a new product it's value is assumed to be true.
   */
  subscriptionRequired?: boolean;
  /**
   * @member {boolean} [approvalRequired] whether subscription approval is
   * required. If false, new subscriptions will be approved automatically
   * enabling developers to call the product’s APIs immediately after
   * subscribing. If true, administrators must manually approve the
   * subscription before the developer can any of the product’s APIs. Can be
   * present only if subscriptionRequired property is present and has a value
   * of false.
   */
  approvalRequired?: boolean;
  /**
   * @member {number} [subscriptionsLimit] Whether the number of subscriptions
   * a user can have to this product at the same time. Set to null or omit to
   * allow unlimited per user subscriptions. Can be present only if
   * subscriptionRequired property is present and has a value of false.
   */
  subscriptionsLimit?: number;
  /**
   * @member {ProductState} [state] whether product is published or not.
   * Published products are discoverable by users of developer portal. Non
   * published products are visible only to administrators. Default state of
   * Product is notPublished. Possible values include: 'notPublished',
   * 'published'
   */
  state?: ProductState;
  /**
   * @member {string} displayName Product name.
   */
  displayName: string;
}

/**
 * @interface
 * An interface representing AuthorizationServerContract.
 * External OAuth authorization server settings.
 *
 * @extends Resource
 */
export interface AuthorizationServerContract extends Resource {
  /**
   * @member {string} [description] Description of the authorization server.
   * Can contain HTML formatting tags.
   */
  description?: string;
  /**
   * @member {AuthorizationMethod[]} [authorizationMethods] HTTP verbs
   * supported by the authorization endpoint. GET must be always present. POST
   * is optional.
   */
  authorizationMethods?: AuthorizationMethod[];
  /**
   * @member {ClientAuthenticationMethod[]} [clientAuthenticationMethod] Method
   * of authentication supported by the token endpoint of this authorization
   * server. Possible values are Basic and/or Body. When Body is specified,
   * client credentials and other parameters are passed within the request body
   * in the application/x-www-form-urlencoded format.
   */
  clientAuthenticationMethod?: ClientAuthenticationMethod[];
  /**
   * @member {TokenBodyParameterContract[]} [tokenBodyParameters] Additional
   * parameters required by the token endpoint of this authorization server
   * represented as an array of JSON objects with name and value string
   * properties, i.e. {"name" : "name value", "value": "a value"}.
   */
  tokenBodyParameters?: TokenBodyParameterContract[];
  /**
   * @member {string} [tokenEndpoint] OAuth token endpoint. Contains absolute
   * URI to entity being referenced.
   */
  tokenEndpoint?: string;
  /**
   * @member {boolean} [supportState] If true, authorization server will
   * include state parameter from the authorization request to its response.
   * Client may use state parameter to raise protocol security.
   */
  supportState?: boolean;
  /**
   * @member {string} [defaultScope] Access token scope that is going to be
   * requested by default. Can be overridden at the API level. Should be
   * provided in the form of a string containing space-delimited values.
   */
  defaultScope?: string;
  /**
   * @member {BearerTokenSendingMethod[]} [bearerTokenSendingMethods] Specifies
   * the mechanism by which access token is passed to the API.
   */
  bearerTokenSendingMethods?: BearerTokenSendingMethod[];
  /**
   * @member {string} [clientSecret] Client or app secret registered with this
   * authorization server.
   */
  clientSecret?: string;
  /**
   * @member {string} [resourceOwnerUsername] Can be optionally specified when
   * resource owner password grant type is supported by this authorization
   * server. Default resource owner username.
   */
  resourceOwnerUsername?: string;
  /**
   * @member {string} [resourceOwnerPassword] Can be optionally specified when
   * resource owner password grant type is supported by this authorization
   * server. Default resource owner password.
   */
  resourceOwnerPassword?: string;
  /**
   * @member {string} displayName User-friendly authorization server name.
   */
  displayName: string;
  /**
   * @member {string} clientRegistrationEndpoint Optional reference to a page
   * where client or app registration for this authorization server is
   * performed. Contains absolute URL to entity being referenced.
   */
  clientRegistrationEndpoint: string;
  /**
   * @member {string} authorizationEndpoint OAuth authorization endpoint. See
   * http://tools.ietf.org/html/rfc6749#section-3.2.
   */
  authorizationEndpoint: string;
  /**
   * @member {GrantType[]} grantTypes Form of an authorization grant, which the
   * client uses to request the access token.
   */
  grantTypes: GrantType[];
  /**
   * @member {string} clientId Client or app id registered with this
   * authorization server.
   */
  clientId: string;
}

/**
 * @interface
 * An interface representing AuthorizationServerUpdateContract.
 * External OAuth authorization server settings.
 *
 * @extends Resource
 */
export interface AuthorizationServerUpdateContract extends Resource {
  /**
   * @member {string} [description] Description of the authorization server.
   * Can contain HTML formatting tags.
   */
  description?: string;
  /**
   * @member {AuthorizationMethod[]} [authorizationMethods] HTTP verbs
   * supported by the authorization endpoint. GET must be always present. POST
   * is optional.
   */
  authorizationMethods?: AuthorizationMethod[];
  /**
   * @member {ClientAuthenticationMethod[]} [clientAuthenticationMethod] Method
   * of authentication supported by the token endpoint of this authorization
   * server. Possible values are Basic and/or Body. When Body is specified,
   * client credentials and other parameters are passed within the request body
   * in the application/x-www-form-urlencoded format.
   */
  clientAuthenticationMethod?: ClientAuthenticationMethod[];
  /**
   * @member {TokenBodyParameterContract[]} [tokenBodyParameters] Additional
   * parameters required by the token endpoint of this authorization server
   * represented as an array of JSON objects with name and value string
   * properties, i.e. {"name" : "name value", "value": "a value"}.
   */
  tokenBodyParameters?: TokenBodyParameterContract[];
  /**
   * @member {string} [tokenEndpoint] OAuth token endpoint. Contains absolute
   * URI to entity being referenced.
   */
  tokenEndpoint?: string;
  /**
   * @member {boolean} [supportState] If true, authorization server will
   * include state parameter from the authorization request to its response.
   * Client may use state parameter to raise protocol security.
   */
  supportState?: boolean;
  /**
   * @member {string} [defaultScope] Access token scope that is going to be
   * requested by default. Can be overridden at the API level. Should be
   * provided in the form of a string containing space-delimited values.
   */
  defaultScope?: string;
  /**
   * @member {BearerTokenSendingMethod[]} [bearerTokenSendingMethods] Specifies
   * the mechanism by which access token is passed to the API.
   */
  bearerTokenSendingMethods?: BearerTokenSendingMethod[];
  /**
   * @member {string} [clientSecret] Client or app secret registered with this
   * authorization server.
   */
  clientSecret?: string;
  /**
   * @member {string} [resourceOwnerUsername] Can be optionally specified when
   * resource owner password grant type is supported by this authorization
   * server. Default resource owner username.
   */
  resourceOwnerUsername?: string;
  /**
   * @member {string} [resourceOwnerPassword] Can be optionally specified when
   * resource owner password grant type is supported by this authorization
   * server. Default resource owner password.
   */
  resourceOwnerPassword?: string;
  /**
   * @member {string} [displayName] User-friendly authorization server name.
   */
  displayName?: string;
  /**
   * @member {string} [clientRegistrationEndpoint] Optional reference to a page
   * where client or app registration for this authorization server is
   * performed. Contains absolute URL to entity being referenced.
   */
  clientRegistrationEndpoint?: string;
  /**
   * @member {string} [authorizationEndpoint] OAuth authorization endpoint. See
   * http://tools.ietf.org/html/rfc6749#section-3.2.
   */
  authorizationEndpoint?: string;
  /**
   * @member {GrantType[]} [grantTypes] Form of an authorization grant, which
   * the client uses to request the access token.
   */
  grantTypes?: GrantType[];
  /**
   * @member {string} [clientId] Client or app id registered with this
   * authorization server.
   */
  clientId?: string;
}

/**
 * @interface
 * An interface representing TokenBodyParameterContract.
 * OAuth acquire token request body parameter (www-url-form-encoded).
 *
 */
export interface TokenBodyParameterContract {
  /**
   * @member {string} name body parameter name.
   */
  name: string;
  /**
   * @member {string} value body parameter value.
   */
  value: string;
}

/**
 * @interface
 * An interface representing AuthorizationServerContractBaseProperties.
 * External OAuth authorization server Update settings contract.
 *
 */
export interface AuthorizationServerContractBaseProperties {
  /**
   * @member {string} [description] Description of the authorization server.
   * Can contain HTML formatting tags.
   */
  description?: string;
  /**
   * @member {AuthorizationMethod[]} [authorizationMethods] HTTP verbs
   * supported by the authorization endpoint. GET must be always present. POST
   * is optional.
   */
  authorizationMethods?: AuthorizationMethod[];
  /**
   * @member {ClientAuthenticationMethod[]} [clientAuthenticationMethod] Method
   * of authentication supported by the token endpoint of this authorization
   * server. Possible values are Basic and/or Body. When Body is specified,
   * client credentials and other parameters are passed within the request body
   * in the application/x-www-form-urlencoded format.
   */
  clientAuthenticationMethod?: ClientAuthenticationMethod[];
  /**
   * @member {TokenBodyParameterContract[]} [tokenBodyParameters] Additional
   * parameters required by the token endpoint of this authorization server
   * represented as an array of JSON objects with name and value string
   * properties, i.e. {"name" : "name value", "value": "a value"}.
   */
  tokenBodyParameters?: TokenBodyParameterContract[];
  /**
   * @member {string} [tokenEndpoint] OAuth token endpoint. Contains absolute
   * URI to entity being referenced.
   */
  tokenEndpoint?: string;
  /**
   * @member {boolean} [supportState] If true, authorization server will
   * include state parameter from the authorization request to its response.
   * Client may use state parameter to raise protocol security.
   */
  supportState?: boolean;
  /**
   * @member {string} [defaultScope] Access token scope that is going to be
   * requested by default. Can be overridden at the API level. Should be
   * provided in the form of a string containing space-delimited values.
   */
  defaultScope?: string;
  /**
   * @member {BearerTokenSendingMethod[]} [bearerTokenSendingMethods] Specifies
   * the mechanism by which access token is passed to the API.
   */
  bearerTokenSendingMethods?: BearerTokenSendingMethod[];
  /**
   * @member {string} [clientSecret] Client or app secret registered with this
   * authorization server.
   */
  clientSecret?: string;
  /**
   * @member {string} [resourceOwnerUsername] Can be optionally specified when
   * resource owner password grant type is supported by this authorization
   * server. Default resource owner username.
   */
  resourceOwnerUsername?: string;
  /**
   * @member {string} [resourceOwnerPassword] Can be optionally specified when
   * resource owner password grant type is supported by this authorization
   * server. Default resource owner password.
   */
  resourceOwnerPassword?: string;
}

/**
 * @interface
 * An interface representing BackendAuthorizationHeaderCredentials.
 * Authorization header information.
 *
 */
export interface BackendAuthorizationHeaderCredentials {
  /**
   * @member {string} scheme Authentication Scheme name.
   */
  scheme: string;
  /**
   * @member {string} parameter Authentication Parameter value.
   */
  parameter: string;
}

/**
 * @interface
 * An interface representing X509CertificateName.
 * Properties of server X509Names.
 *
 */
export interface X509CertificateName {
  /**
   * @member {string} [name] Common Name of the Certificate.
   */
  name?: string;
  /**
   * @member {string} [issuerCertificateThumbprint] Thumbprint for the Issuer
   * of the Certificate.
   */
  issuerCertificateThumbprint?: string;
}

/**
 * @interface
 * An interface representing BackendServiceFabricClusterProperties.
 * Properties of the Service Fabric Type Backend.
 *
 */
export interface BackendServiceFabricClusterProperties {
  /**
   * @member {string} clientCertificatethumbprint The client certificate
   * thumbprint for the management endpoint.
   */
  clientCertificatethumbprint: string;
  /**
   * @member {number} [maxPartitionResolutionRetries] Maximum number of retries
   * while attempting resolve the partition.
   */
  maxPartitionResolutionRetries?: number;
  /**
   * @member {string[]} managementEndpoints The cluster management endpoint.
   */
  managementEndpoints: string[];
  /**
   * @member {string[]} [serverCertificateThumbprints] Thumbprints of
   * certificates cluster management service uses for tls communication
   */
  serverCertificateThumbprints?: string[];
  /**
   * @member {X509CertificateName[]} [serverX509Names] Server X509 Certificate
   * Names Collection
   */
  serverX509Names?: X509CertificateName[];
}

/**
 * @interface
 * An interface representing BackendProperties.
 * Properties specific to the Backend Type.
 *
 */
export interface BackendProperties {
  /**
   * @member {BackendServiceFabricClusterProperties} [serviceFabricCluster]
   * Backend Service Fabric Cluster Properties
   */
  serviceFabricCluster?: BackendServiceFabricClusterProperties;
}

/**
 * @interface
 * An interface representing BackendCredentialsContract.
 * Details of the Credentials used to connect to Backend.
 *
 */
export interface BackendCredentialsContract {
  /**
   * @member {string[]} [certificate] List of Client Certificate Thumbprint.
   */
  certificate?: string[];
  /**
   * @member {{ [propertyName: string]: string[] }} [query] Query Parameter
   * description.
   */
  query?: { [propertyName: string]: string[] };
  /**
   * @member {{ [propertyName: string]: string[] }} [header] Header Parameter
   * description.
   */
  header?: { [propertyName: string]: string[] };
  /**
   * @member {BackendAuthorizationHeaderCredentials} [authorization]
   * Authorization header authentication
   */
  authorization?: BackendAuthorizationHeaderCredentials;
}

/**
 * @interface
 * An interface representing BackendProxyContract.
 * Details of the Backend WebProxy Server to use in the Request to Backend.
 *
 */
export interface BackendProxyContract {
  /**
   * @member {string} url WebProxy Server AbsoluteUri property which includes
   * the entire URI stored in the Uri instance, including all fragments and
   * query strings.
   */
  url: string;
  /**
   * @member {string} [username] Username to connect to the WebProxy server
   */
  username?: string;
  /**
   * @member {string} [password] Password to connect to the WebProxy Server
   */
  password?: string;
}

/**
 * @interface
 * An interface representing BackendTlsProperties.
 * Properties controlling TLS Certificate Validation.
 *
 */
export interface BackendTlsProperties {
  /**
   * @member {boolean} [validateCertificateChain] Flag indicating whether SSL
   * certificate chain validation should be done when using self-signed
   * certificates for this backend host. Default value: true .
   */
  validateCertificateChain?: boolean;
  /**
   * @member {boolean} [validateCertificateName] Flag indicating whether SSL
   * certificate name validation should be done when using self-signed
   * certificates for this backend host. Default value: true .
   */
  validateCertificateName?: boolean;
}

/**
 * @interface
 * An interface representing BackendBaseParameters.
 * Backend entity base Parameter set.
 *
 */
export interface BackendBaseParameters {
  /**
   * @member {string} [title] Backend Title.
   */
  title?: string;
  /**
   * @member {string} [description] Backend Description.
   */
  description?: string;
  /**
   * @member {string} [resourceId] Management Uri of the Resource in External
   * System. This url can be the Arm Resource Id of Logic Apps, Function Apps
   * or Api Apps.
   */
  resourceId?: string;
  /**
   * @member {BackendProperties} [properties] Backend Properties contract
   */
  properties?: BackendProperties;
  /**
   * @member {BackendCredentialsContract} [credentials] Backend Credentials
   * Contract Properties
   */
  credentials?: BackendCredentialsContract;
  /**
   * @member {BackendProxyContract} [proxy] Backend Proxy Contract Properties
   */
  proxy?: BackendProxyContract;
  /**
   * @member {BackendTlsProperties} [tls] Backend TLS Properties
   */
  tls?: BackendTlsProperties;
}

/**
 * @interface
 * An interface representing BackendContract.
 * Backend details.
 *
 * @extends Resource
 */
export interface BackendContract extends Resource {
  /**
   * @member {string} [title] Backend Title.
   */
  title?: string;
  /**
   * @member {string} [description] Backend Description.
   */
  description?: string;
  /**
   * @member {string} [resourceId] Management Uri of the Resource in External
   * System. This url can be the Arm Resource Id of Logic Apps, Function Apps
   * or Api Apps.
   */
  resourceId?: string;
  /**
   * @member {BackendProperties} [properties] Backend Properties contract
   */
  properties?: BackendProperties;
  /**
   * @member {BackendCredentialsContract} [credentials] Backend Credentials
   * Contract Properties
   */
  credentials?: BackendCredentialsContract;
  /**
   * @member {BackendProxyContract} [proxy] Backend Proxy Contract Properties
   */
  proxy?: BackendProxyContract;
  /**
   * @member {BackendTlsProperties} [tls] Backend TLS Properties
   */
  tls?: BackendTlsProperties;
  /**
   * @member {string} url Runtime Url of the Backend.
   */
  url: string;
  /**
   * @member {BackendProtocol} protocol Backend communication protocol.
   * Possible values include: 'http', 'soap'
   */
  protocol: BackendProtocol;
}

/**
 * @interface
 * An interface representing BackendUpdateParameters.
 * Backend update parameters.
 *
 */
export interface BackendUpdateParameters {
  /**
   * @member {string} [title] Backend Title.
   */
  title?: string;
  /**
   * @member {string} [description] Backend Description.
   */
  description?: string;
  /**
   * @member {string} [resourceId] Management Uri of the Resource in External
   * System. This url can be the Arm Resource Id of Logic Apps, Function Apps
   * or Api Apps.
   */
  resourceId?: string;
  /**
   * @member {BackendProperties} [properties] Backend Properties contract
   */
  properties?: BackendProperties;
  /**
   * @member {BackendCredentialsContract} [credentials] Backend Credentials
   * Contract Properties
   */
  credentials?: BackendCredentialsContract;
  /**
   * @member {BackendProxyContract} [proxy] Backend Proxy Contract Properties
   */
  proxy?: BackendProxyContract;
  /**
   * @member {BackendTlsProperties} [tls] Backend TLS Properties
   */
  tls?: BackendTlsProperties;
  /**
   * @member {string} [url] Runtime Url of the Backend.
   */
  url?: string;
  /**
   * @member {BackendProtocol} [protocol] Backend communication protocol.
   * Possible values include: 'http', 'soap'
   */
  protocol?: BackendProtocol;
}

/**
 * @interface
 * An interface representing BackendReconnectContract.
 * Reconnect request parameters.
 *
 * @extends Resource
 */
export interface BackendReconnectContract extends Resource {
  /**
   * @member {string} [after] Duration in ISO8601 format after which reconnect
   * will be initiated. Minimum duration of the Reconnect is PT2M.
   */
  after?: string;
}

/**
 * @interface
 * An interface representing CertificateContract.
 * Certificate details.
 *
 * @extends Resource
 */
export interface CertificateContract extends Resource {
  /**
   * @member {string} subject Subject attribute of the certificate.
   */
  subject: string;
  /**
   * @member {string} thumbprint Thumbprint of the certificate.
   */
  thumbprint: string;
  /**
   * @member {Date} expirationDate Expiration date of the certificate. The date
   * conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by
   * the ISO 8601 standard.
   */
  expirationDate: Date;
}

/**
 * @interface
 * An interface representing CertificateCreateOrUpdateParameters.
 * Certificate create or update details.
 *
 */
export interface CertificateCreateOrUpdateParameters {
  /**
   * @member {string} data Base 64 encoded certificate using the
   * application/x-pkcs12 representation.
   */
  data: string;
  /**
   * @member {string} password Password for the Certificate
   */
  password: string;
}

/**
 * @interface
 * An interface representing ResourceSku.
 * Describes an available API Management SKU.
 *
 */
export interface ResourceSku {
  /**
   * @member {SkuType} [name] Name of the Sku. Possible values include:
   * 'Developer', 'Standard', 'Premium', 'Basic'
   */
  name?: SkuType;
}

/**
 * @interface
 * An interface representing ResourceSkuCapacity.
 * Describes scaling information of a SKU.
 *
 */
export interface ResourceSkuCapacity {
  /**
   * @member {number} [minimum] The minimum capacity.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly minimum?: number;
  /**
   * @member {number} [maximum] The maximum capacity that can be set.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly maximum?: number;
  /**
   * @member {number} [default] The default capacity.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly default?: number;
  /**
   * @member {ResourceSkuCapacityScaleType} [scaleType] The scale type
   * applicable to the sku. Possible values include: 'automatic', 'manual',
   * 'none'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly scaleType?: ResourceSkuCapacityScaleType;
}

/**
 * @interface
 * An interface representing ResourceSkuResult.
 * Describes an available API Management service SKU.
 *
 */
export interface ResourceSkuResult {
  /**
   * @member {string} [resourceType] The type of resource the SKU applies to.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly resourceType?: string;
  /**
   * @member {ResourceSku} [sku] Specifies API Management SKU.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly sku?: ResourceSku;
  /**
   * @member {ResourceSkuCapacity} [capacity] Specifies the number of API
   * Management units.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly capacity?: ResourceSkuCapacity;
}

/**
 * @interface
 * An interface representing CertificateInformation.
 * SSL certificate information.
 *
 */
export interface CertificateInformation {
  /**
   * @member {Date} expiry Expiration date of the certificate. The date
   * conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by
   * the ISO 8601 standard.
   */
  expiry: Date;
  /**
   * @member {string} thumbprint Thumbprint of the certificate.
   */
  thumbprint: string;
  /**
   * @member {string} subject Subject of the certificate.
   */
  subject: string;
}

/**
 * @interface
 * An interface representing CertificateConfiguration.
 * Certificate configuration which consist of non-trusted intermediates and
 * root certificates.
 *
 */
export interface CertificateConfiguration {
  /**
   * @member {string} [encodedCertificate] Base64 Encoded certificate.
   */
  encodedCertificate?: string;
  /**
   * @member {string} [certificatePassword] Certificate Password.
   */
  certificatePassword?: string;
  /**
   * @member {StoreName} storeName The
   * System.Security.Cryptography.x509certificates.StoreName certificate store
   * location. Only Root and CertificateAuthority are valid locations. Possible
   * values include: 'CertificateAuthority', 'Root'
   */
  storeName: StoreName;
  /**
   * @member {CertificateInformation} [certificate] Certificate information.
   */
  certificate?: CertificateInformation;
}

/**
 * @interface
 * An interface representing HostnameConfiguration.
 * Custom hostname configuration.
 *
 */
export interface HostnameConfiguration {
  /**
   * @member {HostnameType} type Hostname type. Possible values include:
   * 'Proxy', 'Portal', 'Management', 'Scm'
   */
  type: HostnameType;
  /**
   * @member {string} hostName Hostname to configure on the Api Management
   * service.
   */
  hostName: string;
  /**
   * @member {string} [keyVaultId] Url to the KeyVault Secret containing the
   * Ssl Certificate. If absolute Url containing version is provided,
   * auto-update of ssl certificate will not work. This requires Api Management
   * service to be configured with MSI. The secret should be of type
   * *application/x-pkcs12*
   */
  keyVaultId?: string;
  /**
   * @member {string} [encodedCertificate] Base64 Encoded certificate.
   */
  encodedCertificate?: string;
  /**
   * @member {string} [certificatePassword] Certificate Password.
   */
  certificatePassword?: string;
  /**
   * @member {boolean} [defaultSslBinding] Specify true to setup the
   * certificate associated with this Hostname as the Default SSL Certificate.
   * If a client does not send the SNI header, then this will be the
   * certificate that will be challenged. The property is useful if a service
   * has multiple custom hostname enabled and it needs to decide on the default
   * ssl certificate. The setting only applied to Proxy Hostname Type. Default
   * value: false .
   */
  defaultSslBinding?: boolean;
  /**
   * @member {boolean} [negotiateClientCertificate] Specify true to always
   * negotiate client certificate on the hostname. Default Value is false.
   * Default value: false .
   */
  negotiateClientCertificate?: boolean;
  /**
   * @member {CertificateInformation} [certificate] Certificate information.
   */
  certificate?: CertificateInformation;
}

/**
 * @interface
 * An interface representing VirtualNetworkConfiguration.
 * Configuration of a virtual network to which API Management service is
 * deployed.
 *
 */
export interface VirtualNetworkConfiguration {
  /**
   * @member {string} [vnetid] The virtual network ID. This is typically a
   * GUID. Expect a null GUID by default.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly vnetid?: string;
  /**
   * @member {string} [subnetname] The name of the subnet.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly subnetname?: string;
  /**
   * @member {string} [subnetResourceId] The full resource ID of a subnet in a
   * virtual network to deploy the API Management service in.
   */
  subnetResourceId?: string;
}

/**
 * @interface
 * An interface representing ApiManagementServiceSkuProperties.
 * API Management service resource SKU properties.
 *
 */
export interface ApiManagementServiceSkuProperties {
  /**
   * @member {SkuType} name Name of the Sku. Possible values include:
   * 'Developer', 'Standard', 'Premium', 'Basic'
   */
  name: SkuType;
  /**
   * @member {number} [capacity] Capacity of the SKU (number of deployed units
   * of the SKU). The default value is 1. Default value: 1 .
   */
  capacity?: number;
}

/**
 * @interface
 * An interface representing AdditionalLocation.
 * Description of an additional API Management resource location.
 *
 */
export interface AdditionalLocation {
  /**
   * @member {string} location The location name of the additional region among
   * Azure Data center regions.
   */
  location: string;
  /**
   * @member {ApiManagementServiceSkuProperties} sku SKU properties of the API
   * Management service.
   */
  sku: ApiManagementServiceSkuProperties;
  /**
   * @member {string[]} [publicIPAddresses] Public Static Load Balanced IP
   * addresses of the API Management service in the additional location.
   * Available only for Basic, Standard and Premium SKU.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly publicIPAddresses?: string[];
  /**
   * @member {string[]} [privateIPAddresses] Private Static Load Balanced IP
   * addresses of the API Management service which is deployed in an Internal
   * Virtual Network in a particular additional location. Available only for
   * Basic, Standard and Premium SKU.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly privateIPAddresses?: string[];
  /**
   * @member {VirtualNetworkConfiguration} [virtualNetworkConfiguration]
   * Virtual network configuration for the location.
   */
  virtualNetworkConfiguration?: VirtualNetworkConfiguration;
  /**
   * @member {string} [gatewayRegionalUrl] Gateway URL of the API Management
   * service in the Region.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly gatewayRegionalUrl?: string;
}

/**
 * @interface
 * An interface representing ApiManagementServiceBackupRestoreParameters.
 * Parameters supplied to the Backup/Restore of an API Management service
 * operation.
 *
 */
export interface ApiManagementServiceBackupRestoreParameters {
  /**
   * @member {string} storageAccount Azure Cloud Storage account (used to
   * place/retrieve the backup) name.
   */
  storageAccount: string;
  /**
   * @member {string} accessKey Azure Cloud Storage account (used to
   * place/retrieve the backup) access key.
   */
  accessKey: string;
  /**
   * @member {string} containerName Azure Cloud Storage blob container name
   * used to place/retrieve the backup.
   */
  containerName: string;
  /**
   * @member {string} backupName The name of the backup file to create.
   */
  backupName: string;
}

/**
 * @interface
 * An interface representing ApiManagementServiceBaseProperties.
 * Base Properties of an API Management service resource description.
 *
 */
export interface ApiManagementServiceBaseProperties {
  /**
   * @member {string} [notificationSenderEmail] Email address from which the
   * notification will be sent.
   */
  notificationSenderEmail?: string;
  /**
   * @member {string} [provisioningState] The current provisioning state of the
   * API Management service which can be one of the following:
   * Created/Activating/Succeeded/Updating/Failed/Stopped/Terminating/TerminationFailed/Deleted.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provisioningState?: string;
  /**
   * @member {string} [targetProvisioningState] The provisioning state of the
   * API Management service, which is targeted by the long running operation
   * started on the service.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly targetProvisioningState?: string;
  /**
   * @member {Date} [createdAtUtc] Creation UTC date of the API Management
   * service.The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ`
   * as specified by the ISO 8601 standard.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly createdAtUtc?: Date;
  /**
   * @member {string} [gatewayUrl] Gateway URL of the API Management service.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly gatewayUrl?: string;
  /**
   * @member {string} [gatewayRegionalUrl] Gateway URL of the API Management
   * service in the Default Region.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly gatewayRegionalUrl?: string;
  /**
   * @member {string} [portalUrl] Publisher portal endpoint Url of the API
   * Management service.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly portalUrl?: string;
  /**
   * @member {string} [managementApiUrl] Management API endpoint URL of the API
   * Management service.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly managementApiUrl?: string;
  /**
   * @member {string} [scmUrl] SCM endpoint URL of the API Management service.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly scmUrl?: string;
  /**
   * @member {HostnameConfiguration[]} [hostnameConfigurations] Custom hostname
   * configuration of the API Management service.
   */
  hostnameConfigurations?: HostnameConfiguration[];
  /**
   * @member {string[]} [publicIPAddresses] Public Static Load Balanced IP
   * addresses of the API Management service in Primary region. Available only
   * for Basic, Standard and Premium SKU.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly publicIPAddresses?: string[];
  /**
   * @member {string[]} [privateIPAddresses] Private Static Load Balanced IP
   * addresses of the API Management service in Primary region which is
   * deployed in an Internal Virtual Network. Available only for Basic,
   * Standard and Premium SKU.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly privateIPAddresses?: string[];
  /**
   * @member {VirtualNetworkConfiguration} [virtualNetworkConfiguration]
   * Virtual network configuration of the API Management service.
   */
  virtualNetworkConfiguration?: VirtualNetworkConfiguration;
  /**
   * @member {AdditionalLocation[]} [additionalLocations] Additional datacenter
   * locations of the API Management service.
   */
  additionalLocations?: AdditionalLocation[];
  /**
   * @member {{ [propertyName: string]: string }} [customProperties] Custom
   * properties of the API Management service. Setting
   * `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TripleDes168`
   * will disable the cipher TLS_RSA_WITH_3DES_EDE_CBC_SHA for all TLS(1.0, 1.1
   * and 1.2). Setting
   * `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls11`
   * can be used to disable just TLS 1.1 and setting
   * `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls10`
   * can be used to disable TLS 1.0 on an API Management service.
   */
  customProperties?: { [propertyName: string]: string };
  /**
   * @member {CertificateConfiguration[]} [certificates] List of Certificates
   * that need to be installed in the API Management service. Max supported
   * certificates that can be installed is 10.
   */
  certificates?: CertificateConfiguration[];
  /**
   * @member {VirtualNetworkType} [virtualNetworkType] The type of VPN in which
   * API Management service needs to be configured in. None (Default Value)
   * means the API Management service is not part of any Virtual Network,
   * External means the API Management deployment is set up inside a Virtual
   * Network having an Internet Facing Endpoint, and Internal means that API
   * Management deployment is setup inside a Virtual Network having an Intranet
   * Facing Endpoint only. Possible values include: 'None', 'External',
   * 'Internal'. Default value: 'None' .
   */
  virtualNetworkType?: VirtualNetworkType;
}

/**
 * @interface
 * An interface representing ApiManagementServiceIdentity.
 * Identity properties of the Api Management service resource.
 *
 */
export interface ApiManagementServiceIdentity {
  /**
   * @member {string} [principalId] The principal id of the identity.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly principalId?: string;
  /**
   * @member {string} [tenantId] The client tenant id of the identity.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly tenantId?: string;
}

/**
 * @interface
 * An interface representing ApimResource.
 * The Resource definition.
 *
 * @extends BaseResource
 */
export interface ApimResource extends BaseResource {
  /**
   * @member {string} [id] Resource ID.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [name] Resource name.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [type] Resource type for API Management resource is set
   * to Microsoft.ApiManagement.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: string;
  /**
   * @member {{ [propertyName: string]: string }} [tags] Resource tags.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * @interface
 * An interface representing ApiManagementServiceResource.
 * A single API Management service resource in List or Get response.
 *
 * @extends ApimResource
 */
export interface ApiManagementServiceResource extends ApimResource {
  /**
   * @member {string} [notificationSenderEmail] Email address from which the
   * notification will be sent.
   */
  notificationSenderEmail?: string;
  /**
   * @member {string} [provisioningState] The current provisioning state of the
   * API Management service which can be one of the following:
   * Created/Activating/Succeeded/Updating/Failed/Stopped/Terminating/TerminationFailed/Deleted.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provisioningState?: string;
  /**
   * @member {string} [targetProvisioningState] The provisioning state of the
   * API Management service, which is targeted by the long running operation
   * started on the service.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly targetProvisioningState?: string;
  /**
   * @member {Date} [createdAtUtc] Creation UTC date of the API Management
   * service.The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ`
   * as specified by the ISO 8601 standard.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly createdAtUtc?: Date;
  /**
   * @member {string} [gatewayUrl] Gateway URL of the API Management service.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly gatewayUrl?: string;
  /**
   * @member {string} [gatewayRegionalUrl] Gateway URL of the API Management
   * service in the Default Region.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly gatewayRegionalUrl?: string;
  /**
   * @member {string} [portalUrl] Publisher portal endpoint Url of the API
   * Management service.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly portalUrl?: string;
  /**
   * @member {string} [managementApiUrl] Management API endpoint URL of the API
   * Management service.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly managementApiUrl?: string;
  /**
   * @member {string} [scmUrl] SCM endpoint URL of the API Management service.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly scmUrl?: string;
  /**
   * @member {HostnameConfiguration[]} [hostnameConfigurations] Custom hostname
   * configuration of the API Management service.
   */
  hostnameConfigurations?: HostnameConfiguration[];
  /**
   * @member {string[]} [publicIPAddresses] Public Static Load Balanced IP
   * addresses of the API Management service in Primary region. Available only
   * for Basic, Standard and Premium SKU.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly publicIPAddresses?: string[];
  /**
   * @member {string[]} [privateIPAddresses] Private Static Load Balanced IP
   * addresses of the API Management service in Primary region which is
   * deployed in an Internal Virtual Network. Available only for Basic,
   * Standard and Premium SKU.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly privateIPAddresses?: string[];
  /**
   * @member {VirtualNetworkConfiguration} [virtualNetworkConfiguration]
   * Virtual network configuration of the API Management service.
   */
  virtualNetworkConfiguration?: VirtualNetworkConfiguration;
  /**
   * @member {AdditionalLocation[]} [additionalLocations] Additional datacenter
   * locations of the API Management service.
   */
  additionalLocations?: AdditionalLocation[];
  /**
   * @member {{ [propertyName: string]: string }} [customProperties] Custom
   * properties of the API Management service. Setting
   * `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TripleDes168`
   * will disable the cipher TLS_RSA_WITH_3DES_EDE_CBC_SHA for all TLS(1.0, 1.1
   * and 1.2). Setting
   * `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls11`
   * can be used to disable just TLS 1.1 and setting
   * `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls10`
   * can be used to disable TLS 1.0 on an API Management service.
   */
  customProperties?: { [propertyName: string]: string };
  /**
   * @member {CertificateConfiguration[]} [certificates] List of Certificates
   * that need to be installed in the API Management service. Max supported
   * certificates that can be installed is 10.
   */
  certificates?: CertificateConfiguration[];
  /**
   * @member {VirtualNetworkType} [virtualNetworkType] The type of VPN in which
   * API Management service needs to be configured in. None (Default Value)
   * means the API Management service is not part of any Virtual Network,
   * External means the API Management deployment is set up inside a Virtual
   * Network having an Internet Facing Endpoint, and Internal means that API
   * Management deployment is setup inside a Virtual Network having an Intranet
   * Facing Endpoint only. Possible values include: 'None', 'External',
   * 'Internal'. Default value: 'None' .
   */
  virtualNetworkType?: VirtualNetworkType;
  /**
   * @member {string} publisherEmail Publisher email.
   */
  publisherEmail: string;
  /**
   * @member {string} publisherName Publisher name.
   */
  publisherName: string;
  /**
   * @member {ApiManagementServiceSkuProperties} sku SKU properties of the API
   * Management service.
   */
  sku: ApiManagementServiceSkuProperties;
  /**
   * @member {ApiManagementServiceIdentity} [identity] Managed service identity
   * of the Api Management service.
   */
  identity?: ApiManagementServiceIdentity;
  /**
   * @member {string} location Resource location.
   */
  location: string;
  /**
   * @member {string} [etag] ETag of the resource.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly etag?: string;
}

/**
 * @interface
 * An interface representing ApiManagementServiceUpdateParameters.
 * Parameter supplied to Update Api Management Service.
 *
 * @extends ApimResource
 */
export interface ApiManagementServiceUpdateParameters extends ApimResource {
  /**
   * @member {string} [notificationSenderEmail] Email address from which the
   * notification will be sent.
   */
  notificationSenderEmail?: string;
  /**
   * @member {string} [provisioningState] The current provisioning state of the
   * API Management service which can be one of the following:
   * Created/Activating/Succeeded/Updating/Failed/Stopped/Terminating/TerminationFailed/Deleted.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provisioningState?: string;
  /**
   * @member {string} [targetProvisioningState] The provisioning state of the
   * API Management service, which is targeted by the long running operation
   * started on the service.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly targetProvisioningState?: string;
  /**
   * @member {Date} [createdAtUtc] Creation UTC date of the API Management
   * service.The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ`
   * as specified by the ISO 8601 standard.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly createdAtUtc?: Date;
  /**
   * @member {string} [gatewayUrl] Gateway URL of the API Management service.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly gatewayUrl?: string;
  /**
   * @member {string} [gatewayRegionalUrl] Gateway URL of the API Management
   * service in the Default Region.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly gatewayRegionalUrl?: string;
  /**
   * @member {string} [portalUrl] Publisher portal endpoint Url of the API
   * Management service.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly portalUrl?: string;
  /**
   * @member {string} [managementApiUrl] Management API endpoint URL of the API
   * Management service.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly managementApiUrl?: string;
  /**
   * @member {string} [scmUrl] SCM endpoint URL of the API Management service.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly scmUrl?: string;
  /**
   * @member {HostnameConfiguration[]} [hostnameConfigurations] Custom hostname
   * configuration of the API Management service.
   */
  hostnameConfigurations?: HostnameConfiguration[];
  /**
   * @member {string[]} [publicIPAddresses] Public Static Load Balanced IP
   * addresses of the API Management service in Primary region. Available only
   * for Basic, Standard and Premium SKU.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly publicIPAddresses?: string[];
  /**
   * @member {string[]} [privateIPAddresses] Private Static Load Balanced IP
   * addresses of the API Management service in Primary region which is
   * deployed in an Internal Virtual Network. Available only for Basic,
   * Standard and Premium SKU.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly privateIPAddresses?: string[];
  /**
   * @member {VirtualNetworkConfiguration} [virtualNetworkConfiguration]
   * Virtual network configuration of the API Management service.
   */
  virtualNetworkConfiguration?: VirtualNetworkConfiguration;
  /**
   * @member {AdditionalLocation[]} [additionalLocations] Additional datacenter
   * locations of the API Management service.
   */
  additionalLocations?: AdditionalLocation[];
  /**
   * @member {{ [propertyName: string]: string }} [customProperties] Custom
   * properties of the API Management service. Setting
   * `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TripleDes168`
   * will disable the cipher TLS_RSA_WITH_3DES_EDE_CBC_SHA for all TLS(1.0, 1.1
   * and 1.2). Setting
   * `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls11`
   * can be used to disable just TLS 1.1 and setting
   * `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls10`
   * can be used to disable TLS 1.0 on an API Management service.
   */
  customProperties?: { [propertyName: string]: string };
  /**
   * @member {CertificateConfiguration[]} [certificates] List of Certificates
   * that need to be installed in the API Management service. Max supported
   * certificates that can be installed is 10.
   */
  certificates?: CertificateConfiguration[];
  /**
   * @member {VirtualNetworkType} [virtualNetworkType] The type of VPN in which
   * API Management service needs to be configured in. None (Default Value)
   * means the API Management service is not part of any Virtual Network,
   * External means the API Management deployment is set up inside a Virtual
   * Network having an Internet Facing Endpoint, and Internal means that API
   * Management deployment is setup inside a Virtual Network having an Intranet
   * Facing Endpoint only. Possible values include: 'None', 'External',
   * 'Internal'. Default value: 'None' .
   */
  virtualNetworkType?: VirtualNetworkType;
  /**
   * @member {string} [publisherEmail] Publisher email.
   */
  publisherEmail?: string;
  /**
   * @member {string} [publisherName] Publisher name.
   */
  publisherName?: string;
  /**
   * @member {ApiManagementServiceSkuProperties} [sku] SKU properties of the
   * API Management service.
   */
  sku?: ApiManagementServiceSkuProperties;
  /**
   * @member {ApiManagementServiceIdentity} [identity] Managed service identity
   * of the Api Management service.
   */
  identity?: ApiManagementServiceIdentity;
  /**
   * @member {string} [etag] ETag of the resource.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly etag?: string;
}

/**
 * @interface
 * An interface representing ApiManagementServiceGetSsoTokenResult.
 * The response of the GetSsoToken operation.
 *
 */
export interface ApiManagementServiceGetSsoTokenResult {
  /**
   * @member {string} [redirectUri] Redirect URL to the Publisher Portal
   * containing the SSO token.
   */
  redirectUri?: string;
}

/**
 * @interface
 * An interface representing ApiManagementServiceCheckNameAvailabilityParameters.
 * Parameters supplied to the CheckNameAvailability operation.
 *
 */
export interface ApiManagementServiceCheckNameAvailabilityParameters {
  /**
   * @member {string} name The name to check for availability.
   */
  name: string;
}

/**
 * @interface
 * An interface representing ApiManagementServiceNameAvailabilityResult.
 * Response of the CheckNameAvailability operation.
 *
 */
export interface ApiManagementServiceNameAvailabilityResult {
  /**
   * @member {boolean} [nameAvailable] True if the name is available and can be
   * used to create a new API Management service; otherwise false.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nameAvailable?: boolean;
  /**
   * @member {string} [message] If reason == invalid, provide the user with the
   * reason why the given name is invalid, and provide the resource naming
   * requirements so that the user can select a valid name. If reason ==
   * AlreadyExists, explain that <resourceName> is already in use, and direct
   * them to select a different name.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly message?: string;
  /**
   * @member {NameAvailabilityReason} [reason] Invalid indicates the name
   * provided does not match the resource provider’s naming requirements
   * (incorrect length, unsupported characters, etc.)  AlreadyExists indicates
   * that the name is already in use and is therefore unavailable. Possible
   * values include: 'Valid', 'Invalid', 'AlreadyExists'
   */
  reason?: NameAvailabilityReason;
}

/**
 * @interface
 * An interface representing ApiManagementServiceApplyNetworkConfigurationParameters.
 * Parameter supplied to the Apply Network configuration operation.
 *
 */
export interface ApiManagementServiceApplyNetworkConfigurationParameters {
  /**
   * @member {string} [location] Location of the Api Management service to
   * update for a multi-region service. For a service deployed in a single
   * region, this parameter is not required.
   */
  location?: string;
}

/**
 * @interface
 * An interface representing ApiManagementServiceUploadCertificateParameters.
 * Parameters supplied to the Upload SSL certificate for an API Management
 * service operation.
 *
 */
export interface ApiManagementServiceUploadCertificateParameters {
  /**
   * @member {HostnameType} type Hostname type. Possible values include:
   * 'Proxy', 'Portal', 'Management', 'Scm'
   */
  type: HostnameType;
  /**
   * @member {string} certificate Base64 Encoded certificate.
   */
  certificate: string;
  /**
   * @member {string} certificatePassword Certificate password.
   */
  certificatePassword: string;
}

/**
 * @interface
 * An interface representing HostnameConfigurationOld.
 * Custom hostname configuration.
 *
 */
export interface HostnameConfigurationOld {
  /**
   * @member {HostnameType} type Hostname type. Possible values include:
   * 'Proxy', 'Portal', 'Management', 'Scm'
   */
  type: HostnameType;
  /**
   * @member {string} hostname Hostname to configure.
   */
  hostname: string;
  /**
   * @member {CertificateInformation} certificate Certificate information.
   */
  certificate: CertificateInformation;
}

/**
 * @interface
 * An interface representing ApiManagementServiceUpdateHostnameParameters.
 * Parameters supplied to the UpdateHostname operation.
 *
 */
export interface ApiManagementServiceUpdateHostnameParameters {
  /**
   * @member {HostnameConfigurationOld[]} [update] Hostnames to create or
   * update.
   */
  update?: HostnameConfigurationOld[];
  /**
   * @member {HostnameType[]} [deleteProperty] Hostnames types to delete.
   */
  deleteProperty?: HostnameType[];
}

/**
 * @interface
 * An interface representing OperationDisplay.
 * The object that describes the operation.
 *
 */
export interface OperationDisplay {
  /**
   * @member {string} [provider] Friendly name of the resource provider
   */
  provider?: string;
  /**
   * @member {string} [operation] Operation type: read, write, delete,
   * listKeys/action, etc.
   */
  operation?: string;
  /**
   * @member {string} [resource] Resource type on which the operation is
   * performed.
   */
  resource?: string;
  /**
   * @member {string} [description] Friendly name of the operation
   */
  description?: string;
}

/**
 * @interface
 * An interface representing Operation.
 * REST API operation
 *
 */
export interface Operation {
  /**
   * @member {string} [name] Operation name: {provider}/{resource}/{operation}
   */
  name?: string;
  /**
   * @member {OperationDisplay} [display] The object that describes the
   * operation.
   */
  display?: OperationDisplay;
  /**
   * @member {string} [origin] The operation origin.
   */
  origin?: string;
  /**
   * @member {any} [properties] The operation properties.
   */
  properties?: any;
}

/**
 * @interface
 * An interface representing EmailTemplateParametersContractProperties.
 * Email Template Parameter contract.
 *
 */
export interface EmailTemplateParametersContractProperties {
  /**
   * @member {string} [name] Template parameter name.
   */
  name?: string;
  /**
   * @member {string} [title] Template parameter title.
   */
  title?: string;
  /**
   * @member {string} [description] Template parameter description.
   */
  description?: string;
}

/**
 * @interface
 * An interface representing EmailTemplateContract.
 * Email Template details.
 *
 * @extends Resource
 */
export interface EmailTemplateContract extends Resource {
  /**
   * @member {string} subject Subject of the Template.
   */
  subject: string;
  /**
   * @member {string} body Email Template Body. This should be a valid
   * XDocument
   */
  body: string;
  /**
   * @member {string} [title] Title of the Template.
   */
  title?: string;
  /**
   * @member {string} [description] Description of the Email Template.
   */
  description?: string;
  /**
   * @member {boolean} [isDefault] Whether the template is the default template
   * provided by Api Management or has been edited.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly isDefault?: boolean;
  /**
   * @member {EmailTemplateParametersContractProperties[]} [parameters] Email
   * Template Parameter values.
   */
  parameters?: EmailTemplateParametersContractProperties[];
}

/**
 * @interface
 * An interface representing EmailTemplateUpdateParameters.
 * Email Template update Parameters.
 *
 */
export interface EmailTemplateUpdateParameters {
  /**
   * @member {string} [subject] Subject of the Template.
   */
  subject?: string;
  /**
   * @member {string} [title] Title of the Template.
   */
  title?: string;
  /**
   * @member {string} [description] Description of the Email Template.
   */
  description?: string;
  /**
   * @member {string} [body] Email Template Body. This should be a valid
   * XDocument
   */
  body?: string;
  /**
   * @member {EmailTemplateParametersContractProperties[]} [parameters] Email
   * Template Parameter values.
   */
  parameters?: EmailTemplateParametersContractProperties[];
}

/**
 * @interface
 * An interface representing GroupContractProperties.
 * Group contract Properties.
 *
 */
export interface GroupContractProperties {
  /**
   * @member {string} displayName Group name.
   */
  displayName: string;
  /**
   * @member {string} [description] Group description. Can contain HTML
   * formatting tags.
   */
  description?: string;
  /**
   * @member {boolean} [builtIn] true if the group is one of the three system
   * groups (Administrators, Developers, or Guests); otherwise false.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly builtIn?: boolean;
  /**
   * @member {GroupType} [type] Group type. Possible values include: 'custom',
   * 'system', 'external'
   */
  type?: GroupType;
  /**
   * @member {string} [externalId] For external groups, this property contains
   * the id of the group from the external identity provider, e.g. for Azure
   * Active Directory aad://<tenant>.onmicrosoft.com/groups/<group object id>;
   * otherwise the value is null.
   */
  externalId?: string;
}

/**
 * @interface
 * An interface representing GroupContract.
 * Contract details.
 *
 * @extends Resource
 */
export interface GroupContract extends Resource {
  /**
   * @member {string} displayName Group name.
   */
  displayName: string;
  /**
   * @member {string} [description] Group description. Can contain HTML
   * formatting tags.
   */
  description?: string;
  /**
   * @member {boolean} [builtIn] true if the group is one of the three system
   * groups (Administrators, Developers, or Guests); otherwise false.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly builtIn?: boolean;
  /**
   * @member {GroupType} [groupContractType] Group type. Possible values
   * include: 'custom', 'system', 'external'
   */
  groupContractType?: GroupType;
  /**
   * @member {string} [externalId] For external groups, this property contains
   * the id of the group from the external identity provider, e.g. for Azure
   * Active Directory aad://<tenant>.onmicrosoft.com/groups/<group object id>;
   * otherwise the value is null.
   */
  externalId?: string;
}

/**
 * @interface
 * An interface representing GroupCreateParameters.
 * Parameters supplied to the Create Group operation.
 *
 */
export interface GroupCreateParameters {
  /**
   * @member {string} displayName Group name.
   */
  displayName: string;
  /**
   * @member {string} [description] Group description.
   */
  description?: string;
  /**
   * @member {GroupType} [type] Group type. Possible values include: 'custom',
   * 'system', 'external'
   */
  type?: GroupType;
  /**
   * @member {string} [externalId] Identifier of the external groups, this
   * property contains the id of the group from the external identity provider,
   * e.g. for Azure Active Directory
   * aad://<tenant>.onmicrosoft.com/groups/<group object id>; otherwise the
   * value is null.
   */
  externalId?: string;
}

/**
 * @interface
 * An interface representing GroupUpdateParameters.
 * Parameters supplied to the Update Group operation.
 *
 */
export interface GroupUpdateParameters {
  /**
   * @member {string} [displayName] Group name.
   */
  displayName?: string;
  /**
   * @member {string} [description] Group description.
   */
  description?: string;
  /**
   * @member {GroupType} [type] Group type. Possible values include: 'custom',
   * 'system', 'external'
   */
  type?: GroupType;
  /**
   * @member {string} [externalId] Identifier of the external groups, this
   * property contains the id of the group from the external identity provider,
   * e.g. for Azure Active Directory
   * aad://<tenant>.onmicrosoft.com/groups/<group object id>; otherwise the
   * value is null.
   */
  externalId?: string;
}

/**
 * @interface
 * An interface representing UserIdentityContract.
 * User identity details.
 *
 */
export interface UserIdentityContract {
  /**
   * @member {string} [provider] Identity provider name.
   */
  provider?: string;
  /**
   * @member {string} [id] Identifier value within provider.
   */
  id?: string;
}

/**
 * @interface
 * An interface representing UserEntityBaseParameters.
 * User Entity Base Parameters set.
 *
 */
export interface UserEntityBaseParameters {
  /**
   * @member {UserState} [state] Account state. Specifies whether the user is
   * active or not. Blocked users are unable to sign into the developer portal
   * or call any APIs of subscribed products. Default state is Active. Possible
   * values include: 'active', 'blocked', 'pending', 'deleted'. Default value:
   * 'active' .
   */
  state?: UserState;
  /**
   * @member {string} [note] Optional note about a user set by the
   * administrator.
   */
  note?: string;
  /**
   * @member {UserIdentityContract[]} [identities] Collection of user
   * identities.
   */
  identities?: UserIdentityContract[];
}

/**
 * @interface
 * An interface representing UserContract.
 * User details.
 *
 * @extends Resource
 */
export interface UserContract extends Resource {
  /**
   * @member {UserState} [state] Account state. Specifies whether the user is
   * active or not. Blocked users are unable to sign into the developer portal
   * or call any APIs of subscribed products. Default state is Active. Possible
   * values include: 'active', 'blocked', 'pending', 'deleted'. Default value:
   * 'active' .
   */
  state?: UserState;
  /**
   * @member {string} [note] Optional note about a user set by the
   * administrator.
   */
  note?: string;
  /**
   * @member {UserIdentityContract[]} [identities] Collection of user
   * identities.
   */
  identities?: UserIdentityContract[];
  /**
   * @member {string} [firstName] First name.
   */
  firstName?: string;
  /**
   * @member {string} [lastName] Last name.
   */
  lastName?: string;
  /**
   * @member {string} [email] Email address.
   */
  email?: string;
  /**
   * @member {Date} [registrationDate] Date of user registration. The date
   * conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by
   * the ISO 8601 standard.
   */
  registrationDate?: Date;
  /**
   * @member {GroupContractProperties[]} [groups] Collection of groups user is
   * part of.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly groups?: GroupContractProperties[];
}

/**
 * @interface
 * An interface representing IdentityProviderContract.
 * Identity Provider details.
 *
 * @extends Resource
 */
export interface IdentityProviderContract extends Resource {
  /**
   * @member {IdentityProviderType} [identityProviderContractType] Identity
   * Provider Type identifier. Possible values include: 'facebook', 'google',
   * 'microsoft', 'twitter', 'aad', 'aadB2C'
   */
  identityProviderContractType?: IdentityProviderType;
  /**
   * @member {string[]} [allowedTenants] List of Allowed Tenants when
   * configuring Azure Active Directory login.
   */
  allowedTenants?: string[];
  /**
   * @member {string} [signupPolicyName] Signup Policy Name. Only applies to
   * AAD B2C Identity Provider.
   */
  signupPolicyName?: string;
  /**
   * @member {string} [signinPolicyName] Signin Policy Name. Only applies to
   * AAD B2C Identity Provider.
   */
  signinPolicyName?: string;
  /**
   * @member {string} [profileEditingPolicyName] Profile Editing Policy Name.
   * Only applies to AAD B2C Identity Provider.
   */
  profileEditingPolicyName?: string;
  /**
   * @member {string} [passwordResetPolicyName] Password Reset Policy Name.
   * Only applies to AAD B2C Identity Provider.
   */
  passwordResetPolicyName?: string;
  /**
   * @member {string} clientId Client Id of the Application in the external
   * Identity Provider. It is App ID for Facebook login, Client ID for Google
   * login, App ID for Microsoft.
   */
  clientId: string;
  /**
   * @member {string} clientSecret Client secret of the Application in external
   * Identity Provider, used to authenticate login request. For example, it is
   * App Secret for Facebook login, API Key for Google login, Public Key for
   * Microsoft.
   */
  clientSecret: string;
}

/**
 * @interface
 * An interface representing IdentityProviderUpdateParameters.
 * Parameters supplied to update Identity Provider
 *
 */
export interface IdentityProviderUpdateParameters {
  /**
   * @member {IdentityProviderType} [type] Identity Provider Type identifier.
   * Possible values include: 'facebook', 'google', 'microsoft', 'twitter',
   * 'aad', 'aadB2C'
   */
  type?: IdentityProviderType;
  /**
   * @member {string[]} [allowedTenants] List of Allowed Tenants when
   * configuring Azure Active Directory login.
   */
  allowedTenants?: string[];
  /**
   * @member {string} [signupPolicyName] Signup Policy Name. Only applies to
   * AAD B2C Identity Provider.
   */
  signupPolicyName?: string;
  /**
   * @member {string} [signinPolicyName] Signin Policy Name. Only applies to
   * AAD B2C Identity Provider.
   */
  signinPolicyName?: string;
  /**
   * @member {string} [profileEditingPolicyName] Profile Editing Policy Name.
   * Only applies to AAD B2C Identity Provider.
   */
  profileEditingPolicyName?: string;
  /**
   * @member {string} [passwordResetPolicyName] Password Reset Policy Name.
   * Only applies to AAD B2C Identity Provider.
   */
  passwordResetPolicyName?: string;
  /**
   * @member {string} [clientId] Client Id of the Application in the external
   * Identity Provider. It is App ID for Facebook login, Client ID for Google
   * login, App ID for Microsoft.
   */
  clientId?: string;
  /**
   * @member {string} [clientSecret] Client secret of the Application in
   * external Identity Provider, used to authenticate login request. For
   * example, it is App Secret for Facebook login, API Key for Google login,
   * Public Key for Microsoft.
   */
  clientSecret?: string;
}

/**
 * @interface
 * An interface representing IdentityProviderBaseParameters.
 * Identity Provider Base Parameter Properties.
 *
 */
export interface IdentityProviderBaseParameters {
  /**
   * @member {IdentityProviderType} [type] Identity Provider Type identifier.
   * Possible values include: 'facebook', 'google', 'microsoft', 'twitter',
   * 'aad', 'aadB2C'
   */
  type?: IdentityProviderType;
  /**
   * @member {string[]} [allowedTenants] List of Allowed Tenants when
   * configuring Azure Active Directory login.
   */
  allowedTenants?: string[];
  /**
   * @member {string} [signupPolicyName] Signup Policy Name. Only applies to
   * AAD B2C Identity Provider.
   */
  signupPolicyName?: string;
  /**
   * @member {string} [signinPolicyName] Signin Policy Name. Only applies to
   * AAD B2C Identity Provider.
   */
  signinPolicyName?: string;
  /**
   * @member {string} [profileEditingPolicyName] Profile Editing Policy Name.
   * Only applies to AAD B2C Identity Provider.
   */
  profileEditingPolicyName?: string;
  /**
   * @member {string} [passwordResetPolicyName] Password Reset Policy Name.
   * Only applies to AAD B2C Identity Provider.
   */
  passwordResetPolicyName?: string;
}

/**
 * @interface
 * An interface representing LoggerUpdateContract.
 * Logger update contract.
 *
 */
export interface LoggerUpdateContract {
  /**
   * @member {LoggerType} [loggerType] Logger type. Possible values include:
   * 'azureEventHub', 'applicationInsights'
   */
  loggerType?: LoggerType;
  /**
   * @member {string} [description] Logger description.
   */
  description?: string;
  /**
   * @member {{ [propertyName: string]: string }} [credentials] Logger
   * credentials.
   */
  credentials?: { [propertyName: string]: string };
  /**
   * @member {boolean} [isBuffered] Whether records are buffered in the logger
   * before publishing. Default is assumed to be true.
   */
  isBuffered?: boolean;
}

/**
 * @interface
 * An interface representing RecipientsContractProperties.
 * Notification Parameter contract.
 *
 */
export interface RecipientsContractProperties {
  /**
   * @member {string[]} [emails] List of Emails subscribed for the
   * notification.
   */
  emails?: string[];
  /**
   * @member {string[]} [users] List of Users subscribed for the notification.
   */
  users?: string[];
}

/**
 * @interface
 * An interface representing NotificationContract.
 * Notification details.
 *
 * @extends Resource
 */
export interface NotificationContract extends Resource {
  /**
   * @member {string} title Title of the Notification.
   */
  title: string;
  /**
   * @member {string} [description] Description of the Notification.
   */
  description?: string;
  /**
   * @member {RecipientsContractProperties} [recipients] Recipient Parameter
   * values.
   */
  recipients?: RecipientsContractProperties;
}

/**
 * @interface
 * An interface representing RecipientUserContract.
 * Recipient User details.
 *
 * @extends Resource
 */
export interface RecipientUserContract extends Resource {
  /**
   * @member {string} [userId] API Management UserId subscribed to
   * notification.
   */
  userId?: string;
}

/**
 * @interface
 * An interface representing RecipientUserCollection.
 * Paged Recipient User list representation.
 *
 */
export interface RecipientUserCollection {
  /**
   * @member {RecipientUserContract[]} [value] Page values.
   */
  value?: RecipientUserContract[];
  /**
   * @member {string} [nextLink] Next page link if any.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing RecipientEmailContract.
 * Recipient Email details.
 *
 * @extends Resource
 */
export interface RecipientEmailContract extends Resource {
  /**
   * @member {string} [email] User Email subscribed to notification.
   */
  email?: string;
}

/**
 * @interface
 * An interface representing RecipientEmailCollection.
 * Paged Recipient User list representation.
 *
 */
export interface RecipientEmailCollection {
  /**
   * @member {RecipientEmailContract[]} [value] Page values.
   */
  value?: RecipientEmailContract[];
  /**
   * @member {string} [nextLink] Next page link if any.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing ConnectivityStatusContract.
 * Details about connectivity to a resource.
 *
 */
export interface ConnectivityStatusContract {
  /**
   * @member {string} name The hostname of the resource which the service
   * depends on. This can be the database, storage or any other azure resource
   * on which the service depends upon.
   */
  name: string;
  /**
   * @member {ConnectivityStatusType} status Resource Connectivity Status Type
   * identifier. Possible values include: 'initializing', 'success', 'failure'
   */
  status: ConnectivityStatusType;
  /**
   * @member {string} [error] Error details of the connectivity to the
   * resource.
   */
  error?: string;
  /**
   * @member {Date} lastUpdated The date when the resource connectivity status
   * was last updated. This status should be updated every 15 minutes. If this
   * status has not been updated, then it means that the service has lost
   * network connectivity to the resource, from inside the Virtual Network.The
   * date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified
   * by the ISO 8601 standard.
   */
  lastUpdated: Date;
  /**
   * @member {Date} lastStatusChange The date when the resource connectivity
   * status last Changed from success to failure or vice-versa. The date
   * conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by
   * the ISO 8601 standard.
   */
  lastStatusChange: Date;
}

/**
 * @interface
 * An interface representing NetworkStatusContract.
 * Network Status details.
 *
 */
export interface NetworkStatusContract {
  /**
   * @member {string[]} dnsServers Gets the list of DNS servers IPV4 addresses.
   */
  dnsServers: string[];
  /**
   * @member {ConnectivityStatusContract[]} connectivityStatus Gets the list of
   * Connectivity Status to the Resources on which the service depends upon.
   */
  connectivityStatus: ConnectivityStatusContract[];
}

/**
 * @interface
 * An interface representing NetworkStatusContractByLocation.
 * Network Status in the Location
 *
 */
export interface NetworkStatusContractByLocation {
  /**
   * @member {string} [location] Location of service
   */
  location?: string;
  /**
   * @member {NetworkStatusContract} [networkStatus] Network status in Location
   */
  networkStatus?: NetworkStatusContract;
}

/**
 * @interface
 * An interface representing OpenidConnectProviderContract.
 * OpenId Connect Provider details.
 *
 * @extends Resource
 */
export interface OpenidConnectProviderContract extends Resource {
  /**
   * @member {string} displayName User-friendly OpenID Connect Provider name.
   */
  displayName: string;
  /**
   * @member {string} [description] User-friendly description of OpenID Connect
   * Provider.
   */
  description?: string;
  /**
   * @member {string} metadataEndpoint Metadata endpoint URI.
   */
  metadataEndpoint: string;
  /**
   * @member {string} clientId Client ID of developer console which is the
   * client application.
   */
  clientId: string;
  /**
   * @member {string} [clientSecret] Client Secret of developer console which
   * is the client application.
   */
  clientSecret?: string;
}

/**
 * @interface
 * An interface representing OpenidConnectProviderUpdateContract.
 * Parameters supplied to the Update OpenID Connect Provider operation.
 *
 */
export interface OpenidConnectProviderUpdateContract {
  /**
   * @member {string} [displayName] User-friendly OpenID Connect Provider name.
   */
  displayName?: string;
  /**
   * @member {string} [description] User-friendly description of OpenID Connect
   * Provider.
   */
  description?: string;
  /**
   * @member {string} [metadataEndpoint] Metadata endpoint URI.
   */
  metadataEndpoint?: string;
  /**
   * @member {string} [clientId] Client ID of developer console which is the
   * client application.
   */
  clientId?: string;
  /**
   * @member {string} [clientSecret] Client Secret of developer console which
   * is the client application.
   */
  clientSecret?: string;
}

/**
 * @interface
 * An interface representing PortalSigninSettings.
 * Sign-In settings for the Developer Portal.
 *
 * @extends Resource
 */
export interface PortalSigninSettings extends Resource {
  /**
   * @member {boolean} [enabled] Redirect Anonymous users to the Sign-In page.
   */
  enabled?: boolean;
}

/**
 * @interface
 * An interface representing TermsOfServiceProperties.
 * Terms of service contract properties.
 *
 */
export interface TermsOfServiceProperties {
  /**
   * @member {string} [text] A terms of service text.
   */
  text?: string;
  /**
   * @member {boolean} [enabled] Display terms of service during a sign-up
   * process.
   */
  enabled?: boolean;
  /**
   * @member {boolean} [consentRequired] Ask user for consent to the terms of
   * service.
   */
  consentRequired?: boolean;
}

/**
 * @interface
 * An interface representing PortalSignupSettings.
 * Sign-Up settings for a developer portal.
 *
 * @extends Resource
 */
export interface PortalSignupSettings extends Resource {
  /**
   * @member {boolean} [enabled] Allow users to sign up on a developer portal.
   */
  enabled?: boolean;
  /**
   * @member {TermsOfServiceProperties} [termsOfService] Terms of service
   * contract properties.
   */
  termsOfService?: TermsOfServiceProperties;
}

/**
 * @interface
 * An interface representing SubscriptionsDelegationSettingsProperties.
 * Subscriptions delegation settings properties.
 *
 */
export interface SubscriptionsDelegationSettingsProperties {
  /**
   * @member {boolean} [enabled] Enable or disable delegation for
   * subscriptions.
   */
  enabled?: boolean;
}

/**
 * @interface
 * An interface representing RegistrationDelegationSettingsProperties.
 * User registration delegation settings properties.
 *
 */
export interface RegistrationDelegationSettingsProperties {
  /**
   * @member {boolean} [enabled] Enable or disable delegation for user
   * registration.
   */
  enabled?: boolean;
}

/**
 * @interface
 * An interface representing PortalDelegationSettings.
 * Delegation settings for a developer portal.
 *
 * @extends Resource
 */
export interface PortalDelegationSettings extends Resource {
  /**
   * @member {string} [url] A delegation Url.
   */
  url?: string;
  /**
   * @member {string} [validationKey] A base64-encoded validation key to
   * validate, that a request is coming from Azure API Management.
   */
  validationKey?: string;
  /**
   * @member {SubscriptionsDelegationSettingsProperties} [subscriptions]
   * Subscriptions delegation settings.
   */
  subscriptions?: SubscriptionsDelegationSettingsProperties;
  /**
   * @member {RegistrationDelegationSettingsProperties} [userRegistration] User
   * registration delegation settings.
   */
  userRegistration?: RegistrationDelegationSettingsProperties;
}

/**
 * @interface
 * An interface representing ProductUpdateParameters.
 * Product Update parameters.
 *
 */
export interface ProductUpdateParameters {
  /**
   * @member {string} [description] Product description. May include HTML
   * formatting tags.
   */
  description?: string;
  /**
   * @member {string} [terms] Product terms of use. Developers trying to
   * subscribe to the product will be presented and required to accept these
   * terms before they can complete the subscription process.
   */
  terms?: string;
  /**
   * @member {boolean} [subscriptionRequired] Whether a product subscription is
   * required for accessing APIs included in this product. If true, the product
   * is referred to as "protected" and a valid subscription key is required for
   * a request to an API included in the product to succeed. If false, the
   * product is referred to as "open" and requests to an API included in the
   * product can be made without a subscription key. If property is omitted
   * when creating a new product it's value is assumed to be true.
   */
  subscriptionRequired?: boolean;
  /**
   * @member {boolean} [approvalRequired] whether subscription approval is
   * required. If false, new subscriptions will be approved automatically
   * enabling developers to call the product’s APIs immediately after
   * subscribing. If true, administrators must manually approve the
   * subscription before the developer can any of the product’s APIs. Can be
   * present only if subscriptionRequired property is present and has a value
   * of false.
   */
  approvalRequired?: boolean;
  /**
   * @member {number} [subscriptionsLimit] Whether the number of subscriptions
   * a user can have to this product at the same time. Set to null or omit to
   * allow unlimited per user subscriptions. Can be present only if
   * subscriptionRequired property is present and has a value of false.
   */
  subscriptionsLimit?: number;
  /**
   * @member {ProductState} [state] whether product is published or not.
   * Published products are discoverable by users of developer portal. Non
   * published products are visible only to administrators. Default state of
   * Product is notPublished. Possible values include: 'notPublished',
   * 'published'
   */
  state?: ProductState;
  /**
   * @member {string} [displayName] Product name.
   */
  displayName?: string;
}

/**
 * @interface
 * An interface representing SubscriptionContract.
 * Subscription details.
 *
 * @extends Resource
 */
export interface SubscriptionContract extends Resource {
  /**
   * @member {string} userId The user resource identifier of the subscription
   * owner. The value is a valid relative URL in the format of /users/{uid}
   * where {uid} is a user identifier.
   */
  userId: string;
  /**
   * @member {string} productId The product resource identifier of the
   * subscribed product. The value is a valid relative URL in the format of
   * /products/{productId} where {productId} is a product identifier.
   */
  productId: string;
  /**
   * @member {string} [displayName] The name of the subscription, or null if
   * the subscription has no name.
   */
  displayName?: string;
  /**
   * @member {SubscriptionState} state Subscription state. Possible states are
   * * active – the subscription is active, * suspended – the subscription is
   * blocked, and the subscriber cannot call any APIs of the product, *
   * submitted – the subscription request has been made by the developer, but
   * has not yet been approved or rejected, * rejected – the subscription
   * request has been denied by an administrator, * cancelled – the
   * subscription has been cancelled by the developer or administrator, *
   * expired – the subscription reached its expiration date and was
   * deactivated. Possible values include: 'suspended', 'active', 'expired',
   * 'submitted', 'rejected', 'cancelled'
   */
  state: SubscriptionState;
  /**
   * @member {Date} [createdDate] Subscription creation date. The date conforms
   * to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO
   * 8601 standard.
   *
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly createdDate?: Date;
  /**
   * @member {Date} [startDate] Subscription activation date. The setting is
   * for audit purposes only and the subscription is not automatically
   * activated. The subscription lifecycle can be managed by using the `state`
   * property. The date conforms to the following format:
   * `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
   */
  startDate?: Date;
  /**
   * @member {Date} [expirationDate] Subscription expiration date. The setting
   * is for audit purposes only and the subscription is not automatically
   * expired. The subscription lifecycle can be managed by using the `state`
   * property. The date conforms to the following format:
   * `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
   */
  expirationDate?: Date;
  /**
   * @member {Date} [endDate] Date when subscription was cancelled or expired.
   * The setting is for audit purposes only and the subscription is not
   * automatically cancelled. The subscription lifecycle can be managed by
   * using the `state` property. The date conforms to the following format:
   * `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
   */
  endDate?: Date;
  /**
   * @member {Date} [notificationDate] Upcoming subscription expiration
   * notification date. The date conforms to the following format:
   * `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
   */
  notificationDate?: Date;
  /**
   * @member {string} primaryKey Subscription primary key.
   */
  primaryKey: string;
  /**
   * @member {string} secondaryKey Subscription secondary key.
   */
  secondaryKey: string;
  /**
   * @member {string} [stateComment] Optional subscription comment added by an
   * administrator.
   */
  stateComment?: string;
}

/**
 * @interface
 * An interface representing PropertyContract.
 * Property details.
 *
 * @extends Resource
 */
export interface PropertyContract extends Resource {
  /**
   * @member {string[]} [tags] Optional tags that when provided can be used to
   * filter the property list.
   */
  tags?: string[];
  /**
   * @member {boolean} [secret] Determines whether the value is a secret and
   * should be encrypted or not. Default value is false.
   */
  secret?: boolean;
  /**
   * @member {string} displayName Unique name of Property. It may contain only
   * letters, digits, period, dash, and underscore characters.
   */
  displayName: string;
  /**
   * @member {string} value Value of the property. Can contain policy
   * expressions. It may not be empty or consist only of whitespace.
   */
  value: string;
}

/**
 * @interface
 * An interface representing PropertyUpdateParameters.
 * Property update Parameters.
 *
 */
export interface PropertyUpdateParameters {
  /**
   * @member {string[]} [tags] Optional tags that when provided can be used to
   * filter the property list.
   */
  tags?: string[];
  /**
   * @member {boolean} [secret] Determines whether the value is a secret and
   * should be encrypted or not. Default value is false.
   */
  secret?: boolean;
  /**
   * @member {string} [displayName] Unique name of Property. It may contain
   * only letters, digits, period, dash, and underscore characters.
   */
  displayName?: string;
  /**
   * @member {string} [value] Value of the property. Can contain policy
   * expressions. It may not be empty or consist only of whitespace.
   */
  value?: string;
}

/**
 * @interface
 * An interface representing PropertyEntityBaseParameters.
 * Property Entity Base Parameters set.
 *
 */
export interface PropertyEntityBaseParameters {
  /**
   * @member {string[]} [tags] Optional tags that when provided can be used to
   * filter the property list.
   */
  tags?: string[];
  /**
   * @member {boolean} [secret] Determines whether the value is a secret and
   * should be encrypted or not. Default value is false.
   */
  secret?: boolean;
}

/**
 * @interface
 * An interface representing QuotaCounterValueContractProperties.
 * Quota counter value details.
 *
 */
export interface QuotaCounterValueContractProperties {
  /**
   * @member {number} [callsCount] Number of times Counter was called.
   */
  callsCount?: number;
  /**
   * @member {number} [kbTransferred] Data Transferred in KiloBytes.
   */
  kbTransferred?: number;
}

/**
 * @interface
 * An interface representing QuotaCounterContract.
 * Quota counter details.
 *
 */
export interface QuotaCounterContract {
  /**
   * @member {string} counterKey The Key value of the Counter. Must not be
   * empty.
   */
  counterKey: string;
  /**
   * @member {string} periodKey Identifier of the Period for which the counter
   * was collected. Must not be empty.
   */
  periodKey: string;
  /**
   * @member {Date} periodStartTime The date of the start of Counter Period.
   * The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as
   * specified by the ISO 8601 standard.
   */
  periodStartTime: Date;
  /**
   * @member {Date} periodEndTime The date of the end of Counter Period. The
   * date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified
   * by the ISO 8601 standard.
   */
  periodEndTime: Date;
  /**
   * @member {QuotaCounterValueContractProperties} [value] Quota Value
   * Properties
   */
  value?: QuotaCounterValueContractProperties;
}

/**
 * @interface
 * An interface representing QuotaCounterCollection.
 * Paged Quota Counter list representation.
 *
 */
export interface QuotaCounterCollection {
  /**
   * @member {QuotaCounterContract[]} [value] Quota counter values.
   */
  value?: QuotaCounterContract[];
  /**
   * @member {number} [count] Total record count number across all pages.
   */
  count?: number;
  /**
   * @member {string} [nextLink] Next page link if any.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing QuotaCounterValueContract.
 * Quota counter value details.
 *
 */
export interface QuotaCounterValueContract {
  /**
   * @member {number} [callsCount] Number of times Counter was called.
   */
  callsCount?: number;
  /**
   * @member {number} [kbTransferred] Data Transferred in KiloBytes.
   */
  kbTransferred?: number;
}

/**
 * @interface
 * An interface representing ReportRecordContract.
 * Report data.
 *
 */
export interface ReportRecordContract {
  /**
   * @member {string} [name] Name depending on report endpoint specifies
   * product, API, operation or developer name.
   */
  name?: string;
  /**
   * @member {Date} [timestamp] Start of aggregation period. The date conforms
   * to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO
   * 8601 standard.
   */
  timestamp?: Date;
  /**
   * @member {string} [interval] Length of aggregation period.  Interval must
   * be multiple of 15 minutes and may not be zero. The value should be in ISO
   * 8601 format (http://en.wikipedia.org/wiki/ISO_8601#Durations).
   */
  interval?: string;
  /**
   * @member {string} [country] Country to which this record data is related.
   */
  country?: string;
  /**
   * @member {string} [region] Country region to which this record data is
   * related.
   */
  region?: string;
  /**
   * @member {string} [zip] Zip code to which this record data is related.
   */
  zip?: string;
  /**
   * @member {string} [userId] User identifier path. /users/{userId}
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly userId?: string;
  /**
   * @member {string} [productId] Product identifier path.
   * /products/{productId}
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly productId?: string;
  /**
   * @member {string} [apiId] API identifier path. /apis/{apiId}
   */
  apiId?: string;
  /**
   * @member {string} [operationId] Operation identifier path.
   * /apis/{apiId}/operations/{operationId}
   */
  operationId?: string;
  /**
   * @member {string} [apiRegion] API region identifier.
   */
  apiRegion?: string;
  /**
   * @member {string} [subscriptionId] Subscription identifier path.
   * /subscriptions/{subscriptionId}
   */
  subscriptionId?: string;
  /**
   * @member {number} [callCountSuccess] Number of successful calls. This
   * includes calls returning HttpStatusCode <= 301 and
   * HttpStatusCode.NotModified and HttpStatusCode.TemporaryRedirect
   */
  callCountSuccess?: number;
  /**
   * @member {number} [callCountBlocked] Number of calls blocked due to invalid
   * credentials. This includes calls returning HttpStatusCode.Unauthorized and
   * HttpStatusCode.Forbidden and HttpStatusCode.TooManyRequests
   */
  callCountBlocked?: number;
  /**
   * @member {number} [callCountFailed] Number of calls failed due to proxy or
   * backend errors. This includes calls returning
   * HttpStatusCode.BadRequest(400) and any Code between
   * HttpStatusCode.InternalServerError (500) and 600
   */
  callCountFailed?: number;
  /**
   * @member {number} [callCountOther] Number of other calls.
   */
  callCountOther?: number;
  /**
   * @member {number} [callCountTotal] Total number of calls.
   */
  callCountTotal?: number;
  /**
   * @member {number} [bandwidth] Bandwidth consumed.
   */
  bandwidth?: number;
  /**
   * @member {number} [cacheHitCount] Number of times when content was served
   * from cache policy.
   */
  cacheHitCount?: number;
  /**
   * @member {number} [cacheMissCount] Number of times content was fetched from
   * backend.
   */
  cacheMissCount?: number;
  /**
   * @member {number} [apiTimeAvg] Average time it took to process request.
   */
  apiTimeAvg?: number;
  /**
   * @member {number} [apiTimeMin] Minimum time it took to process request.
   */
  apiTimeMin?: number;
  /**
   * @member {number} [apiTimeMax] Maximum time it took to process request.
   */
  apiTimeMax?: number;
  /**
   * @member {number} [serviceTimeAvg] Average time it took to process request
   * on backend.
   */
  serviceTimeAvg?: number;
  /**
   * @member {number} [serviceTimeMin] Minimum time it took to process request
   * on backend.
   */
  serviceTimeMin?: number;
  /**
   * @member {number} [serviceTimeMax] Maximum time it took to process request
   * on backend.
   */
  serviceTimeMax?: number;
}

/**
 * @interface
 * An interface representing RequestReportRecordContract.
 * Request Report data.
 *
 */
export interface RequestReportRecordContract {
  /**
   * @member {string} [apiId] API identifier path. /apis/{apiId}
   */
  apiId?: string;
  /**
   * @member {string} [operationId] Operation identifier path.
   * /apis/{apiId}/operations/{operationId}
   */
  operationId?: string;
  /**
   * @member {string} [productId] Product identifier path.
   * /products/{productId}
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly productId?: string;
  /**
   * @member {string} [userId] User identifier path. /users/{userId}
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly userId?: string;
  /**
   * @member {string} [method] The HTTP method associated with this request..
   */
  method?: string;
  /**
   * @member {string} [url] The full URL associated with this request.
   */
  url?: string;
  /**
   * @member {string} [ipAddress] The client IP address associated with this
   * request.
   */
  ipAddress?: string;
  /**
   * @member {string} [backendResponseCode] The HTTP status code received by
   * the gateway as a result of forwarding this request to the backend.
   */
  backendResponseCode?: string;
  /**
   * @member {number} [responseCode] The HTTP status code returned by the
   * gateway.
   */
  responseCode?: number;
  /**
   * @member {number} [responseSize] The size of the response returned by the
   * gateway.
   */
  responseSize?: number;
  /**
   * @member {Date} [timestamp] The date and time when this request was
   * received by the gateway in ISO 8601 format.
   */
  timestamp?: Date;
  /**
   * @member {string} [cache] Specifies if response cache was involved in
   * generating the response. If the value is none, the cache was not used. If
   * the value is hit, cached response was returned. If the value is miss, the
   * cache was used but lookup resulted in a miss and request was fulfilled by
   * the backend.
   */
  cache?: string;
  /**
   * @member {number} [apiTime] The total time it took to process this request.
   */
  apiTime?: number;
  /**
   * @member {number} [serviceTime] he time it took to forward this request to
   * the backend and get the response back.
   */
  serviceTime?: number;
  /**
   * @member {string} [apiRegion] Azure region where the gateway that processed
   * this request is located.
   */
  apiRegion?: string;
  /**
   * @member {string} [subscriptionId] Subscription identifier path.
   * /subscriptions/{subscriptionId}
   */
  subscriptionId?: string;
  /**
   * @member {string} [requestId] Request Identifier.
   */
  requestId?: string;
  /**
   * @member {number} [requestSize] The size of this request..
   */
  requestSize?: number;
}

/**
 * @interface
 * An interface representing SubscriptionCreateParameters.
 * Subscription create details.
 *
 */
export interface SubscriptionCreateParameters {
  /**
   * @member {string} userId User (user id path) for whom subscription is being
   * created in form /users/{uid}
   */
  userId: string;
  /**
   * @member {string} productId Product (product id path) for which
   * subscription is being created in form /products/{productId}
   */
  productId: string;
  /**
   * @member {string} displayName Subscription name.
   */
  displayName: string;
  /**
   * @member {string} [primaryKey] Primary subscription key. If not specified
   * during request key will be generated automatically.
   */
  primaryKey?: string;
  /**
   * @member {string} [secondaryKey] Secondary subscription key. If not
   * specified during request key will be generated automatically.
   */
  secondaryKey?: string;
  /**
   * @member {SubscriptionState} [state] Initial subscription state. If no
   * value is specified, subscription is created with Submitted state. Possible
   * states are * active – the subscription is active, * suspended – the
   * subscription is blocked, and the subscriber cannot call any APIs of the
   * product, * submitted – the subscription request has been made by the
   * developer, but has not yet been approved or rejected, * rejected – the
   * subscription request has been denied by an administrator, * cancelled –
   * the subscription has been cancelled by the developer or administrator, *
   * expired – the subscription reached its expiration date and was
   * deactivated. Possible values include: 'suspended', 'active', 'expired',
   * 'submitted', 'rejected', 'cancelled'
   */
  state?: SubscriptionState;
}

/**
 * @interface
 * An interface representing SubscriptionUpdateParameters.
 * Subscription update details.
 *
 */
export interface SubscriptionUpdateParameters {
  /**
   * @member {string} [userId] User identifier path: /users/{uid}
   */
  userId?: string;
  /**
   * @member {string} [productId] Product identifier path:
   * /products/{productId}
   */
  productId?: string;
  /**
   * @member {Date} [expirationDate] Subscription expiration date. The setting
   * is for audit purposes only and the subscription is not automatically
   * expired. The subscription lifecycle can be managed by using the `state`
   * property. The date conforms to the following format:
   * `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
   */
  expirationDate?: Date;
  /**
   * @member {string} [displayName] Subscription name.
   */
  displayName?: string;
  /**
   * @member {string} [primaryKey] Primary subscription key.
   */
  primaryKey?: string;
  /**
   * @member {string} [secondaryKey] Secondary subscription key.
   */
  secondaryKey?: string;
  /**
   * @member {SubscriptionState} [state] Subscription state. Possible states
   * are * active – the subscription is active, * suspended – the subscription
   * is blocked, and the subscriber cannot call any APIs of the product, *
   * submitted – the subscription request has been made by the developer, but
   * has not yet been approved or rejected, * rejected – the subscription
   * request has been denied by an administrator, * cancelled – the
   * subscription has been cancelled by the developer or administrator, *
   * expired – the subscription reached its expiration date and was
   * deactivated. Possible values include: 'suspended', 'active', 'expired',
   * 'submitted', 'rejected', 'cancelled'
   */
  state?: SubscriptionState;
  /**
   * @member {string} [stateComment] Comments describing subscription state
   * change by the administrator.
   */
  stateComment?: string;
}

/**
 * @interface
 * An interface representing TagContract.
 * Tag Contract details.
 *
 * @extends Resource
 */
export interface TagContract extends Resource {
  /**
   * @member {string} displayName Tag name.
   */
  displayName: string;
}

/**
 * @interface
 * An interface representing TagCreateUpdateParameters.
 * Parameters supplied to Create/Update Tag operations.
 *
 */
export interface TagCreateUpdateParameters {
  /**
   * @member {string} displayName Tag name.
   */
  displayName: string;
}

/**
 * @interface
 * An interface representing TagDescriptionContract.
 * Contract details.
 *
 * @extends Resource
 */
export interface TagDescriptionContract extends Resource {
  /**
   * @member {string} [description] Description of the Tag.
   */
  description?: string;
  /**
   * @member {string} [externalDocsUrl] Absolute URL of external resources
   * describing the tag.
   */
  externalDocsUrl?: string;
  /**
   * @member {string} [externalDocsDescription] Description of the external
   * resources describing the tag.
   */
  externalDocsDescription?: string;
  /**
   * @member {string} [displayName] Tag name.
   */
  displayName?: string;
}

/**
 * @interface
 * An interface representing TagDescriptionCreateParameters.
 * Parameters supplied to the Create TagDescription operation.
 *
 */
export interface TagDescriptionCreateParameters {
  /**
   * @member {string} [description] Description of the Tag.
   */
  description?: string;
  /**
   * @member {string} [externalDocsUrl] Absolute URL of external resources
   * describing the tag.
   */
  externalDocsUrl?: string;
  /**
   * @member {string} [externalDocsDescription] Description of the external
   * resources describing the tag.
   */
  externalDocsDescription?: string;
}

/**
 * @interface
 * An interface representing AccessInformationContract.
 * Tenant access information contract of the API Management service.
 *
 */
export interface AccessInformationContract {
  /**
   * @member {string} [id] Identifier.
   */
  id?: string;
  /**
   * @member {string} [primaryKey] Primary access key.
   */
  primaryKey?: string;
  /**
   * @member {string} [secondaryKey] Secondary access key.
   */
  secondaryKey?: string;
  /**
   * @member {boolean} [enabled] Tenant access information of the API
   * Management service.
   */
  enabled?: boolean;
}

/**
 * @interface
 * An interface representing AccessInformationUpdateParameters.
 * Tenant access information update parameters of the API Management service.
 *
 */
export interface AccessInformationUpdateParameters {
  /**
   * @member {boolean} [enabled] Tenant access information of the API
   * Management service.
   */
  enabled?: boolean;
}

/**
 * @interface
 * An interface representing DeployConfigurationParameters.
 * Parameters supplied to the Deploy Configuration operation.
 *
 */
export interface DeployConfigurationParameters {
  /**
   * @member {string} branch The name of the Git branch from which the
   * configuration is to be deployed to the configuration database.
   */
  branch: string;
  /**
   * @member {boolean} [force] The value enforcing deleting subscriptions to
   * products that are deleted in this update.
   */
  force?: boolean;
}

/**
 * @interface
 * An interface representing OperationResultLogItemContract.
 * Log of the entity being created, updated or deleted.
 *
 */
export interface OperationResultLogItemContract {
  /**
   * @member {string} [objectType] The type of entity contract.
   */
  objectType?: string;
  /**
   * @member {string} [action] Action like create/update/delete.
   */
  action?: string;
  /**
   * @member {string} [objectKey] Identifier of the entity being
   * created/updated/deleted.
   */
  objectKey?: string;
}

/**
 * @interface
 * An interface representing OperationResultContract.
 * Operation Result.
 *
 */
export interface OperationResultContract {
  /**
   * @member {string} [id] Operation result identifier.
   */
  id?: string;
  /**
   * @member {AsyncOperationStatus} [status] Status of an async operation.
   * Possible values include: 'Started', 'InProgress', 'Succeeded', 'Failed'
   */
  status?: AsyncOperationStatus;
  /**
   * @member {Date} [started] Start time of an async operation. The date
   * conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by
   * the ISO 8601 standard.
   */
  started?: Date;
  /**
   * @member {Date} [updated] Last update time of an async operation. The date
   * conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by
   * the ISO 8601 standard.
   */
  updated?: Date;
  /**
   * @member {string} [resultInfo] Optional result info.
   */
  resultInfo?: string;
  /**
   * @member {ErrorResponseBody} [error] Error Body Contract
   */
  error?: ErrorResponseBody;
  /**
   * @member {OperationResultLogItemContract[]} [actionLog] This property if
   * only provided as part of the TenantConfiguration_Validate operation. It
   * contains the log the entities which will be updated/created/deleted as
   * part of the TenantConfiguration_Deploy operation.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly actionLog?: OperationResultLogItemContract[];
}

/**
 * @interface
 * An interface representing SaveConfigurationParameter.
 * Parameters supplied to the Save Tenant Configuration operation.
 *
 */
export interface SaveConfigurationParameter {
  /**
   * @member {string} branch The name of the Git branch in which to commit the
   * current configuration snapshot.
   */
  branch: string;
  /**
   * @member {boolean} [force] The value if true, the current configuration
   * database is committed to the Git repository, even if the Git repository
   * has newer changes that would be overwritten.
   */
  force?: boolean;
}

/**
 * @interface
 * An interface representing TenantConfigurationSyncStateContract.
 * Tenant Configuration Synchronization State.
 *
 */
export interface TenantConfigurationSyncStateContract {
  /**
   * @member {string} [branch] The name of Git branch.
   */
  branch?: string;
  /**
   * @member {string} [commitId] The latest commit Id.
   */
  commitId?: string;
  /**
   * @member {boolean} [isExport] value indicating if last sync was save (true)
   * or deploy (false) operation.
   */
  isExport?: boolean;
  /**
   * @member {boolean} [isSynced] value indicating if last synchronization was
   * later than the configuration change.
   */
  isSynced?: boolean;
  /**
   * @member {boolean} [isGitEnabled] value indicating whether Git
   * configuration access is enabled.
   */
  isGitEnabled?: boolean;
  /**
   * @member {Date} [syncDate] The date of the latest synchronization. The date
   * conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by
   * the ISO 8601 standard.
   */
  syncDate?: Date;
  /**
   * @member {Date} [configurationChangeDate] The date of the latest
   * configuration change. The date conforms to the following format:
   * `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
   */
  configurationChangeDate?: Date;
}

/**
 * @interface
 * An interface representing GenerateSsoUrlResult.
 * Generate SSO Url operations response details.
 *
 */
export interface GenerateSsoUrlResult {
  /**
   * @member {string} [value] Redirect Url containing the SSO URL value.
   */
  value?: string;
}

/**
 * @interface
 * An interface representing UserCreateParameters.
 * User create details.
 *
 */
export interface UserCreateParameters {
  /**
   * @member {UserState} [state] Account state. Specifies whether the user is
   * active or not. Blocked users are unable to sign into the developer portal
   * or call any APIs of subscribed products. Default state is Active. Possible
   * values include: 'active', 'blocked', 'pending', 'deleted'. Default value:
   * 'active' .
   */
  state?: UserState;
  /**
   * @member {string} [note] Optional note about a user set by the
   * administrator.
   */
  note?: string;
  /**
   * @member {UserIdentityContract[]} [identities] Collection of user
   * identities.
   */
  identities?: UserIdentityContract[];
  /**
   * @member {string} email Email address. Must not be empty and must be unique
   * within the service instance.
   */
  email: string;
  /**
   * @member {string} firstName First name.
   */
  firstName: string;
  /**
   * @member {string} lastName Last name.
   */
  lastName: string;
  /**
   * @member {string} [password] User Password. If no value is provided, a
   * default password is generated.
   */
  password?: string;
  /**
   * @member {Confirmation} [confirmation] Determines the type of confirmation
   * e-mail that will be sent to the newly created user. Possible values
   * include: 'signup', 'invite'
   */
  confirmation?: Confirmation;
}

/**
 * @interface
 * An interface representing UserTokenParameters.
 * Parameters supplied to the Get User Token operation.
 *
 */
export interface UserTokenParameters {
  /**
   * @member {KeyType} keyType The Key to be used to generate token for user.
   * Possible values include: 'primary', 'secondary'. Default value: 'primary'
   * .
   */
  keyType: KeyType;
  /**
   * @member {Date} expiry The Expiry time of the Token. Maximum token expiry
   * time is set to 30 days. The date conforms to the following format:
   * `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.
   */
  expiry: Date;
}

/**
 * @interface
 * An interface representing UserTokenResult.
 * Get User Token response details.
 *
 */
export interface UserTokenResult {
  /**
   * @member {string} [value] Shared Access Authorization token for the User.
   */
  value?: string;
}

/**
 * @interface
 * An interface representing UserUpdateParameters.
 * User update parameters.
 *
 */
export interface UserUpdateParameters {
  /**
   * @member {UserState} [state] Account state. Specifies whether the user is
   * active or not. Blocked users are unable to sign into the developer portal
   * or call any APIs of subscribed products. Default state is Active. Possible
   * values include: 'active', 'blocked', 'pending', 'deleted'. Default value:
   * 'active' .
   */
  state?: UserState;
  /**
   * @member {string} [note] Optional note about a user set by the
   * administrator.
   */
  note?: string;
  /**
   * @member {UserIdentityContract[]} [identities] Collection of user
   * identities.
   */
  identities?: UserIdentityContract[];
  /**
   * @member {string} [email] Email address. Must not be empty and must be
   * unique within the service instance.
   */
  email?: string;
  /**
   * @member {string} [password] User Password.
   */
  password?: string;
  /**
   * @member {string} [firstName] First name.
   */
  firstName?: string;
  /**
   * @member {string} [lastName] Last name.
   */
  lastName?: string;
}

/**
 * @interface
 * An interface representing CurrentUserIdentity.
 */
export interface CurrentUserIdentity {
  /**
   * @member {string} [id] API Management service user id.
   */
  id?: string;
}

/**
 * @interface
 * An interface representing ApiVersionSetContract.
 * Api Version Set Contract details.
 *
 * @extends Resource
 */
export interface ApiVersionSetContract extends Resource {
  /**
   * @member {string} [description] Description of API Version Set.
   */
  description?: string;
  /**
   * @member {string} [versionQueryName] Name of query parameter that indicates
   * the API Version if versioningScheme is set to `query`.
   */
  versionQueryName?: string;
  /**
   * @member {string} [versionHeaderName] Name of HTTP header parameter that
   * indicates the API Version if versioningScheme is set to `header`.
   */
  versionHeaderName?: string;
  /**
   * @member {string} displayName Name of API Version Set
   */
  displayName: string;
  /**
   * @member {VersioningScheme} versioningScheme An value that determines where
   * the API Version identifer will be located in a HTTP request. Possible
   * values include: 'Segment', 'Query', 'Header'
   */
  versioningScheme: VersioningScheme;
}

/**
 * @interface
 * An interface representing ApiVersionSetEntityBase.
 * Api Version set base parameters
 *
 */
export interface ApiVersionSetEntityBase {
  /**
   * @member {string} [description] Description of API Version Set.
   */
  description?: string;
  /**
   * @member {string} [versionQueryName] Name of query parameter that indicates
   * the API Version if versioningScheme is set to `query`.
   */
  versionQueryName?: string;
  /**
   * @member {string} [versionHeaderName] Name of HTTP header parameter that
   * indicates the API Version if versioningScheme is set to `header`.
   */
  versionHeaderName?: string;
}

/**
 * @interface
 * An interface representing ApiVersionSetUpdateParameters.
 * Parameters to update or create an Api Version Set Contract.
 *
 */
export interface ApiVersionSetUpdateParameters {
  /**
   * @member {string} [description] Description of API Version Set.
   */
  description?: string;
  /**
   * @member {string} [versionQueryName] Name of query parameter that indicates
   * the API Version if versioningScheme is set to `query`.
   */
  versionQueryName?: string;
  /**
   * @member {string} [versionHeaderName] Name of HTTP header parameter that
   * indicates the API Version if versioningScheme is set to `header`.
   */
  versionHeaderName?: string;
  /**
   * @member {string} [displayName] Name of API Version Set
   */
  displayName?: string;
  /**
   * @member {VersioningScheme} [versioningScheme] An value that determines
   * where the API Version identifer will be located in a HTTP request.
   * Possible values include: 'Segment', 'Query', 'Header'
   */
  versioningScheme?: VersioningScheme;
}

/**
 * @interface
 * An interface representing PolicyListByServiceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface PolicyListByServiceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {PolicyScopeContract} [scope] Policy scope. Possible values
   * include: 'Tenant', 'Product', 'Api', 'Operation', 'All'
   */
  scope?: PolicyScopeContract;
}

/**
 * @interface
 * An interface representing PolicySnippetsListByServiceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface PolicySnippetsListByServiceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {PolicyScopeContract} [scope] Policy scope. Possible values
   * include: 'Tenant', 'Product', 'Api', 'Operation', 'All'
   */
  scope?: PolicyScopeContract;
}

/**
 * @interface
 * An interface representing ApiListByServiceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ApiListByServiceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [filter] | Field       | Supported operators    |
   * Supported functions               |
   * |-------------|------------------------|-----------------------------------|
   * | id          | ge, le, eq, ne, gt, lt | substringof, startswith, endswith
   * |
   * | name        | ge, le, eq, ne, gt, lt | substringof, startswith, endswith
   * |
   * | description | ge, le, eq, ne, gt, lt | substringof, startswith, endswith
   * |
   * | serviceUrl  | ge, le, eq, ne, gt, lt | substringof, startswith, endswith
   * |
   * | path        | ge, le, eq, ne, gt, lt | substringof, startswith, endswith
   * |
   */
  filter?: string;
  /**
   * @member {number} [top] Number of records to return.
   */
  top?: number;
  /**
   * @member {number} [skip] Number of records to skip.
   */
  skip?: number;
  /**
   * @member {boolean} [expandApiVersionSet] Include full ApiVersionSet
   * resource in response. Default value: false .
   */
  expandApiVersionSet?: boolean;
}

/**
 * @interface
 * An interface representing ApiCreateOrUpdateOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ApiCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [ifMatch] ETag of the Entity. Not required when creating
   * an entity, but required when updating an entity.
   */
  ifMatch?: string;
}

/**
 * @interface
 * An interface representing ApiDeleteMethodOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ApiDeleteMethodOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [deleteRevisions] Delete all revisions of the Api.
   */
  deleteRevisions?: boolean;
}

/**
 * @interface
 * An interface representing ApiListByTagsOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ApiListByTagsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [filter] | Field       | Supported operators    |
   * Supported functions                         |
   * |-------------|------------------------|---------------------------------------------|
   * | id          | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   * | name        | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   * | aid         | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   * | apiRevision | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   * | path        | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   * | description | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   * | serviceUrl  | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   * | isCurrent   | eq                     | substringof, contains,
   * startswith, endswith |
   */
  filter?: string;
  /**
   * @member {number} [top] Number of records to return.
   */
  top?: number;
  /**
   * @member {number} [skip] Number of records to skip.
   */
  skip?: number;
}

/**
 * @interface
 * An interface representing ApiRevisionsListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ApiRevisionsListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [filter] | Field       | Supported operators    |
   * Supported functions               |
   * |-------------|------------------------|-----------------------------------|
   *
   * |apiRevision | ge, le, eq, ne, gt, lt | substringof, contains, startswith,
   * endswith|
   */
  filter?: string;
  /**
   * @member {number} [top] Number of records to return.
   */
  top?: number;
  /**
   * @member {number} [skip] Number of records to skip.
   */
  skip?: number;
}

/**
 * @interface
 * An interface representing ApiReleaseListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ApiReleaseListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [filter] | Field | Supported operators    | Supported
   * functions                         |
   * |-------|------------------------|---------------------------------------------|
   * | name  | ge, le, eq, ne, gt, lt | substringof, contains, startswith,
   * endswith |
   * |notes|ge le eq ne gt lt|substringof contains startswith endswith|
   */
  filter?: string;
  /**
   * @member {number} [top] Number of records to return.
   */
  top?: number;
  /**
   * @member {number} [skip] Number of records to skip.
   */
  skip?: number;
}

/**
 * @interface
 * An interface representing ApiOperationListByApiOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ApiOperationListByApiOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [filter] | Field       | Supported operators    |
   * Supported functions               |
   * |-------------|------------------------|-----------------------------------|
   * | name        | ge, le, eq, ne, gt, lt | substringof, startswith, endswith
   * |
   * | method      | ge, le, eq, ne, gt, lt | substringof, startswith, endswith
   * |
   * | description | ge, le, eq, ne, gt, lt | substringof, startswith, endswith
   * |
   * | urlTemplate | ge, le, eq, ne, gt, lt | substringof, startswith, endswith
   * |
   */
  filter?: string;
  /**
   * @member {number} [top] Number of records to return.
   */
  top?: number;
  /**
   * @member {number} [skip] Number of records to skip.
   */
  skip?: number;
}

/**
 * @interface
 * An interface representing ApiOperationCreateOrUpdateOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ApiOperationCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [ifMatch] ETag of the Entity. Not required when creating
   * an entity, but required when updating an entity.
   */
  ifMatch?: string;
}

/**
 * @interface
 * An interface representing ApiOperationPolicyCreateOrUpdateOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ApiOperationPolicyCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [ifMatch] ETag of the Entity. Not required when creating
   * an entity, but required when updating an entity.
   */
  ifMatch?: string;
}

/**
 * @interface
 * An interface representing ApiProductListByApisOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ApiProductListByApisOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [filter] | Field | Supported operators    | Supported
   * functions                         |
   * |-------|------------------------|---------------------------------------------|
   * | name  | ge, le, eq, ne, gt, lt | substringof, contains, startswith,
   * endswith |
   */
  filter?: string;
  /**
   * @member {number} [top] Number of records to return.
   */
  top?: number;
  /**
   * @member {number} [skip] Number of records to skip.
   */
  skip?: number;
}

/**
 * @interface
 * An interface representing ApiPolicyCreateOrUpdateOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ApiPolicyCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [ifMatch] ETag of the Entity. Not required when creating
   * an entity, but required when updating an entity.
   */
  ifMatch?: string;
}

/**
 * @interface
 * An interface representing ApiSchemaCreateOrUpdateOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ApiSchemaCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [ifMatch] ETag of the Entity. Not required when creating
   * an entity, but required when updating an entity.
   */
  ifMatch?: string;
}

/**
 * @interface
 * An interface representing ApiDiagnosticListByServiceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ApiDiagnosticListByServiceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [filter] | Field       | Supported operators    |
   * Supported functions               |
   * |-------------|------------------------|-----------------------------------|
   * | id          | ge, le, eq, ne, gt, lt | substringof, startswith, endswith
   * |
   */
  filter?: string;
  /**
   * @member {number} [top] Number of records to return.
   */
  top?: number;
  /**
   * @member {number} [skip] Number of records to skip.
   */
  skip?: number;
}

/**
 * @interface
 * An interface representing ApiDiagnosticCreateOrUpdateOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ApiDiagnosticCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [ifMatch] ETag of the Entity. Not required when creating
   * an entity, but required when updating an entity.
   */
  ifMatch?: string;
}

/**
 * @interface
 * An interface representing ApiDiagnosticLoggerListByServiceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ApiDiagnosticLoggerListByServiceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [filter] | Field       | Supported operators    |
   * Supported functions               |
   * |-------------|------------------------|-----------------------------------|
   * | id          | ge, le, eq, ne, gt, lt | substringof, startswith, endswith
   * |
   * | type        | eq                     |
   * |
   */
  filter?: string;
  /**
   * @member {number} [top] Number of records to return.
   */
  top?: number;
  /**
   * @member {number} [skip] Number of records to skip.
   */
  skip?: number;
}

/**
 * @interface
 * An interface representing ApiIssueListByServiceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ApiIssueListByServiceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [filter] | Field       | Supported operators    |
   * Supported functions               |
   * |-------------|------------------------|-----------------------------------|
   * | id          | ge, le, eq, ne, gt, lt | substringof, startswith, endswith
   * |
   * | state        | eq                     |
   * |
   * | userId          | ge, le, eq, ne, gt, lt | substringof, startswith,
   * endswith |
   */
  filter?: string;
  /**
   * @member {number} [top] Number of records to return.
   */
  top?: number;
  /**
   * @member {number} [skip] Number of records to skip.
   */
  skip?: number;
}

/**
 * @interface
 * An interface representing ApiIssueCreateOrUpdateOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ApiIssueCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [ifMatch] ETag of the Issue Entity. ETag should match the
   * current entity state from the header response of the GET request or it
   * should be * for unconditional update.
   */
  ifMatch?: string;
}

/**
 * @interface
 * An interface representing ApiIssueUpdateOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ApiIssueUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [ifMatch] ETag of the Issue Entity. ETag should match the
   * current entity state from the header response of the GET request or it
   * should be * for unconditional update.
   */
  ifMatch?: string;
}

/**
 * @interface
 * An interface representing ApiIssueCommentListByServiceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ApiIssueCommentListByServiceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [filter] | Field       | Supported operators    |
   * Supported functions               |
   * |-------------|------------------------|-----------------------------------|
   * | id          | ge, le, eq, ne, gt, lt | substringof, startswith, endswith
   * |
   * | userId          | ge, le, eq, ne, gt, lt | substringof, startswith,
   * endswith |
   */
  filter?: string;
  /**
   * @member {number} [top] Number of records to return.
   */
  top?: number;
  /**
   * @member {number} [skip] Number of records to skip.
   */
  skip?: number;
}

/**
 * @interface
 * An interface representing ApiIssueCommentCreateOrUpdateOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ApiIssueCommentCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [ifMatch] ETag of the Issue Entity. ETag should match the
   * current entity state from the header response of the GET request or it
   * should be * for unconditional update.
   */
  ifMatch?: string;
}

/**
 * @interface
 * An interface representing ApiIssueAttachmentListByServiceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ApiIssueAttachmentListByServiceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [filter] | Field       | Supported operators    |
   * Supported functions               |
   * |-------------|------------------------|-----------------------------------|
   * | id          | ge, le, eq, ne, gt, lt | substringof, startswith, endswith
   * |
   * | userId          | ge, le, eq, ne, gt, lt | substringof, startswith,
   * endswith |
   */
  filter?: string;
  /**
   * @member {number} [top] Number of records to return.
   */
  top?: number;
  /**
   * @member {number} [skip] Number of records to skip.
   */
  skip?: number;
}

/**
 * @interface
 * An interface representing ApiIssueAttachmentCreateOrUpdateOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ApiIssueAttachmentCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [ifMatch] ETag of the Issue Entity. ETag should match the
   * current entity state from the header response of the GET request or it
   * should be * for unconditional update.
   */
  ifMatch?: string;
}

/**
 * @interface
 * An interface representing AuthorizationServerListByServiceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface AuthorizationServerListByServiceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [filter] | Field | Supported operators    | Supported
   * functions                         |
   * |-------|------------------------|---------------------------------------------|
   * | id    | ge, le, eq, ne, gt, lt | substringof, contains, startswith,
   * endswith |
   * | name  | ge, le, eq, ne, gt, lt | substringof, contains, startswith,
   * endswith |
   */
  filter?: string;
  /**
   * @member {number} [top] Number of records to return.
   */
  top?: number;
  /**
   * @member {number} [skip] Number of records to skip.
   */
  skip?: number;
}

/**
 * @interface
 * An interface representing AuthorizationServerCreateOrUpdateOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface AuthorizationServerCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [ifMatch] ETag of the Entity. Not required when creating
   * an entity, but required when updating an entity.
   */
  ifMatch?: string;
}

/**
 * @interface
 * An interface representing BackendListByServiceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface BackendListByServiceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [filter] | Field | Supported operators    | Supported
   * functions                         |
   * |-------|------------------------|---------------------------------------------|
   * | id    | ge, le, eq, ne, gt, lt | substringof, contains, startswith,
   * endswith |
   * | host  | ge, le, eq, ne, gt, lt | substringof, contains, startswith,
   * endswith |
   */
  filter?: string;
  /**
   * @member {number} [top] Number of records to return.
   */
  top?: number;
  /**
   * @member {number} [skip] Number of records to skip.
   */
  skip?: number;
}

/**
 * @interface
 * An interface representing BackendCreateOrUpdateOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface BackendCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [ifMatch] ETag of the Entity. Not required when creating
   * an entity, but required when updating an entity.
   */
  ifMatch?: string;
}

/**
 * @interface
 * An interface representing BackendReconnectOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface BackendReconnectOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {BackendReconnectContract} [parameters] Reconnect request
   * parameters.
   */
  parameters?: BackendReconnectContract;
}

/**
 * @interface
 * An interface representing CertificateListByServiceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface CertificateListByServiceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [filter] | Field          | Supported operators    |
   * Supported functions                         |
   * |----------------|------------------------|---------------------------------------------|
   * | id             | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   * | subject        | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   * | thumbprint     | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   * | expirationDate | ge, le, eq, ne, gt, lt | N/A
   * |
   */
  filter?: string;
  /**
   * @member {number} [top] Number of records to return.
   */
  top?: number;
  /**
   * @member {number} [skip] Number of records to skip.
   */
  skip?: number;
}

/**
 * @interface
 * An interface representing CertificateCreateOrUpdateOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface CertificateCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [ifMatch] ETag of the Entity. Not required when creating
   * an entity, but required when updating an entity.
   */
  ifMatch?: string;
}

/**
 * @interface
 * An interface representing ApiManagementServiceApplyNetworkConfigurationUpdatesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ApiManagementServiceApplyNetworkConfigurationUpdatesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {ApiManagementServiceApplyNetworkConfigurationParameters}
   * [parameters] Parameters supplied to the Apply Network Configuration
   * operation. If the parameters are empty, all the regions in which the Api
   * Management service is deployed will be updated sequentially without
   * incurring downtime in the region.
   */
  parameters?: ApiManagementServiceApplyNetworkConfigurationParameters;
}

/**
 * @interface
 * An interface representing ApiManagementServiceBeginApplyNetworkConfigurationUpdatesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ApiManagementServiceBeginApplyNetworkConfigurationUpdatesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {ApiManagementServiceApplyNetworkConfigurationParameters}
   * [parameters] Parameters supplied to the Apply Network Configuration
   * operation. If the parameters are empty, all the regions in which the Api
   * Management service is deployed will be updated sequentially without
   * incurring downtime in the region.
   */
  parameters?: ApiManagementServiceApplyNetworkConfigurationParameters;
}

/**
 * @interface
 * An interface representing DiagnosticListByServiceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface DiagnosticListByServiceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [filter] | Field       | Supported operators    |
   * Supported functions               |
   * |-------------|------------------------|-----------------------------------|
   * | id          | ge, le, eq, ne, gt, lt | substringof, startswith, endswith
   * |
   */
  filter?: string;
  /**
   * @member {number} [top] Number of records to return.
   */
  top?: number;
  /**
   * @member {number} [skip] Number of records to skip.
   */
  skip?: number;
}

/**
 * @interface
 * An interface representing DiagnosticCreateOrUpdateOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface DiagnosticCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [ifMatch] ETag of the Entity. Not required when creating
   * an entity, but required when updating an entity.
   */
  ifMatch?: string;
}

/**
 * @interface
 * An interface representing DiagnosticLoggerListByServiceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface DiagnosticLoggerListByServiceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [filter] | Field       | Supported operators    |
   * Supported functions               |
   * |-------------|------------------------|-----------------------------------|
   * | id          | ge, le, eq, ne, gt, lt | substringof, startswith, endswith
   * |
   * | type        | eq                     |
   * |
   */
  filter?: string;
  /**
   * @member {number} [top] Number of records to return.
   */
  top?: number;
  /**
   * @member {number} [skip] Number of records to skip.
   */
  skip?: number;
}

/**
 * @interface
 * An interface representing EmailTemplateListByServiceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface EmailTemplateListByServiceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [top] Number of records to return.
   */
  top?: number;
  /**
   * @member {number} [skip] Number of records to skip.
   */
  skip?: number;
}

/**
 * @interface
 * An interface representing EmailTemplateCreateOrUpdateOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface EmailTemplateCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [ifMatch] ETag of the Entity. Not required when creating
   * an entity, but required when updating an entity.
   */
  ifMatch?: string;
}

/**
 * @interface
 * An interface representing GroupListByServiceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface GroupListByServiceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [filter] | Field       | Supported operators    |
   * Supported functions                         |
   * |-------------|------------------------|---------------------------------------------|
   * | id          | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   * | name        | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   * | description | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   * | type        | eq, ne                 | N/A
   * |
   */
  filter?: string;
  /**
   * @member {number} [top] Number of records to return.
   */
  top?: number;
  /**
   * @member {number} [skip] Number of records to skip.
   */
  skip?: number;
}

/**
 * @interface
 * An interface representing GroupCreateOrUpdateOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface GroupCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [ifMatch] ETag of the Entity. Not required when creating
   * an entity, but required when updating an entity.
   */
  ifMatch?: string;
}

/**
 * @interface
 * An interface representing GroupUserListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface GroupUserListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [filter] | Field            | Supported operators    |
   * Supported functions               |
   * |------------------|------------------------|-----------------------------------|
   * | id               | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   * | firstName        | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   * | lastName         | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   * | email            | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   * | state            | eq                     | N/A
   * |
   * | registrationDate | ge, le, eq, ne, gt, lt | N/A
   * |
   * | note             | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   */
  filter?: string;
  /**
   * @member {number} [top] Number of records to return.
   */
  top?: number;
  /**
   * @member {number} [skip] Number of records to skip.
   */
  skip?: number;
}

/**
 * @interface
 * An interface representing IdentityProviderCreateOrUpdateOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface IdentityProviderCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [ifMatch] ETag of the Entity. Not required when creating
   * an entity, but required when updating an entity.
   */
  ifMatch?: string;
}

/**
 * @interface
 * An interface representing LoggerListByServiceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface LoggerListByServiceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [filter] | Field | Supported operators    | Supported
   * functions                         |
   * |-------|------------------------|---------------------------------------------|
   * | id    | ge, le, eq, ne, gt, lt | substringof, contains, startswith,
   * endswith |
   * | type  | eq                     |
   * |
   */
  filter?: string;
  /**
   * @member {number} [top] Number of records to return.
   */
  top?: number;
  /**
   * @member {number} [skip] Number of records to skip.
   */
  skip?: number;
}

/**
 * @interface
 * An interface representing LoggerCreateOrUpdateOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface LoggerCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [ifMatch] ETag of the Entity. Not required when creating
   * an entity, but required when updating an entity.
   */
  ifMatch?: string;
}

/**
 * @interface
 * An interface representing NotificationListByServiceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface NotificationListByServiceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [top] Number of records to return.
   */
  top?: number;
  /**
   * @member {number} [skip] Number of records to skip.
   */
  skip?: number;
}

/**
 * @interface
 * An interface representing NotificationCreateOrUpdateOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface NotificationCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [ifMatch] ETag of the Entity. Not required when creating
   * an entity, but required when updating an entity.
   */
  ifMatch?: string;
}

/**
 * @interface
 * An interface representing OpenIdConnectProviderListByServiceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenIdConnectProviderListByServiceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [filter] | Field | Supported operators    | Supported
   * functions                         |
   * |-------|------------------------|---------------------------------------------|
   * | id    | ge, le, eq, ne, gt, lt | substringof, contains, startswith,
   * endswith |
   * | name  | ge, le, eq, ne, gt, lt | substringof, contains, startswith,
   * endswith |
   */
  filter?: string;
  /**
   * @member {number} [top] Number of records to return.
   */
  top?: number;
  /**
   * @member {number} [skip] Number of records to skip.
   */
  skip?: number;
}

/**
 * @interface
 * An interface representing OpenIdConnectProviderCreateOrUpdateOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OpenIdConnectProviderCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [ifMatch] ETag of the Entity. Not required when creating
   * an entity, but required when updating an entity.
   */
  ifMatch?: string;
}

/**
 * @interface
 * An interface representing ProductListByServiceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ProductListByServiceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [filter] | Field       | Supported operators    |
   * Supported functions                         |
   * |-------------|------------------------|---------------------------------------------|
   * | id          | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   * | name        | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   * | description | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   * | terms       | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   * | state       | eq                     |
   * |
   */
  filter?: string;
  /**
   * @member {number} [top] Number of records to return.
   */
  top?: number;
  /**
   * @member {number} [skip] Number of records to skip.
   */
  skip?: number;
  /**
   * @member {boolean} [expandGroups] When set to true, the response contains
   * an array of groups that have visibility to the product. The default is
   * false.
   */
  expandGroups?: boolean;
}

/**
 * @interface
 * An interface representing ProductCreateOrUpdateOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ProductCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [ifMatch] ETag of the Entity. Not required when creating
   * an entity, but required when updating an entity.
   */
  ifMatch?: string;
}

/**
 * @interface
 * An interface representing ProductDeleteMethodOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ProductDeleteMethodOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [deleteSubscriptions] Delete existing subscriptions
   * associated with the product or not.
   */
  deleteSubscriptions?: boolean;
}

/**
 * @interface
 * An interface representing ProductApiListByProductOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ProductApiListByProductOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [filter] | Field       | Supported operators    |
   * Supported functions                         |
   * |-------------|------------------------|---------------------------------------------|
   * | id          | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   * | name        | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   * | description | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   * | serviceUrl  | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   * | path        | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   */
  filter?: string;
  /**
   * @member {number} [top] Number of records to return.
   */
  top?: number;
  /**
   * @member {number} [skip] Number of records to skip.
   */
  skip?: number;
}

/**
 * @interface
 * An interface representing ProductGroupListByProductOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ProductGroupListByProductOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [filter] | Field       | Supported operators    |
   * Supported functions                         |
   * |-------------|------------------------|---------------------------------------------|
   * | id          | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   * | name        | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   * | description | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   * | type        | eq, ne                 | N/A
   * |
   */
  filter?: string;
  /**
   * @member {number} [top] Number of records to return.
   */
  top?: number;
  /**
   * @member {number} [skip] Number of records to skip.
   */
  skip?: number;
}

/**
 * @interface
 * An interface representing ProductSubscriptionsListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ProductSubscriptionsListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [filter] | Field        | Supported operators    |
   * Supported functions                         |
   * |--------------|------------------------|---------------------------------------------|
   * | id           | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   * | name         | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   * | stateComment | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   * | userId       | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   * | productId    | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   * | state        | eq                     |
   * |
   */
  filter?: string;
  /**
   * @member {number} [top] Number of records to return.
   */
  top?: number;
  /**
   * @member {number} [skip] Number of records to skip.
   */
  skip?: number;
}

/**
 * @interface
 * An interface representing ProductPolicyCreateOrUpdateOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ProductPolicyCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [ifMatch] ETag of the Entity. Not required when creating
   * an entity, but required when updating an entity.
   */
  ifMatch?: string;
}

/**
 * @interface
 * An interface representing PropertyListByServiceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface PropertyListByServiceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [filter] | Field | Supported operators    | Supported
   * functions                                   |
   * |-------|------------------------|-------------------------------------------------------|
   * | tags  | ge, le, eq, ne, gt, lt | substringof, contains, startswith,
   * endswith, any, all |
   * | name  | ge, le, eq, ne, gt, lt | substringof, contains, startswith,
   * endswith           |
   */
  filter?: string;
  /**
   * @member {number} [top] Number of records to return.
   */
  top?: number;
  /**
   * @member {number} [skip] Number of records to skip.
   */
  skip?: number;
}

/**
 * @interface
 * An interface representing PropertyCreateOrUpdateOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface PropertyCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [ifMatch] ETag of the Entity. Not required when creating
   * an entity, but required when updating an entity.
   */
  ifMatch?: string;
}

/**
 * @interface
 * An interface representing ReportsListByApiOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ReportsListByApiOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [top] Number of records to return.
   */
  top?: number;
  /**
   * @member {number} [skip] Number of records to skip.
   */
  skip?: number;
}

/**
 * @interface
 * An interface representing ReportsListByUserOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ReportsListByUserOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [top] Number of records to return.
   */
  top?: number;
  /**
   * @member {number} [skip] Number of records to skip.
   */
  skip?: number;
}

/**
 * @interface
 * An interface representing ReportsListByOperationOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ReportsListByOperationOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [top] Number of records to return.
   */
  top?: number;
  /**
   * @member {number} [skip] Number of records to skip.
   */
  skip?: number;
}

/**
 * @interface
 * An interface representing ReportsListByProductOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ReportsListByProductOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [top] Number of records to return.
   */
  top?: number;
  /**
   * @member {number} [skip] Number of records to skip.
   */
  skip?: number;
}

/**
 * @interface
 * An interface representing ReportsListByGeoOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ReportsListByGeoOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [filter] The filter to apply on the operation.
   */
  filter?: string;
  /**
   * @member {number} [top] Number of records to return.
   */
  top?: number;
  /**
   * @member {number} [skip] Number of records to skip.
   */
  skip?: number;
}

/**
 * @interface
 * An interface representing ReportsListBySubscriptionOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ReportsListBySubscriptionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [filter] The filter to apply on the operation.
   */
  filter?: string;
  /**
   * @member {number} [top] Number of records to return.
   */
  top?: number;
  /**
   * @member {number} [skip] Number of records to skip.
   */
  skip?: number;
}

/**
 * @interface
 * An interface representing ReportsListByTimeOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ReportsListByTimeOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [filter] The filter to apply on the operation.
   */
  filter?: string;
  /**
   * @member {number} [top] Number of records to return.
   */
  top?: number;
  /**
   * @member {number} [skip] Number of records to skip.
   */
  skip?: number;
}

/**
 * @interface
 * An interface representing ReportsListByRequestOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ReportsListByRequestOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [top] Number of records to return.
   */
  top?: number;
  /**
   * @member {number} [skip] Number of records to skip.
   */
  skip?: number;
}

/**
 * @interface
 * An interface representing SubscriptionListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface SubscriptionListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [filter] | Field        | Supported operators    |
   * Supported functions                         |
   * |--------------|------------------------|---------------------------------------------|
   * | id           | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   * | name         | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   * | stateComment | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   * | userId       | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   * | productId    | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   * | state        | eq                     |
   * |
   */
  filter?: string;
  /**
   * @member {number} [top] Number of records to return.
   */
  top?: number;
  /**
   * @member {number} [skip] Number of records to skip.
   */
  skip?: number;
}

/**
 * @interface
 * An interface representing SubscriptionCreateOrUpdateOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface SubscriptionCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [notify] Notify change in Subscription State.
   * - If false, do not send any email notification for change of state of
   * subscription
   * - If true, send email notification of change of state of subscription
   */
  notify?: boolean;
  /**
   * @member {string} [ifMatch] ETag of the Entity. Not required when creating
   * an entity, but required when updating an entity.
   */
  ifMatch?: string;
}

/**
 * @interface
 * An interface representing SubscriptionUpdateOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface SubscriptionUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [notify] Notify change in Subscription State.
   * - If false, do not send any email notification for change of state of
   * subscription
   * - If true, send email notification of change of state of subscription
   */
  notify?: boolean;
}

/**
 * @interface
 * An interface representing TagResourceListByServiceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface TagResourceListByServiceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [filter] | Field       | Supported operators    |
   * Supported functions                         |
   * |-------------|------------------------|---------------------------------------------|
   * | id          | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   * | name        | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   * | aid         | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   * | apiName     | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   * | apiRevision | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   * | path        | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   * | description | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   * | serviceUrl  | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   * | method      | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   * | urlTemplate | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   * | terms       | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   * | state       | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   * | isCurrent   | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   */
  filter?: string;
  /**
   * @member {number} [top] Number of records to return.
   */
  top?: number;
  /**
   * @member {number} [skip] Number of records to skip.
   */
  skip?: number;
}

/**
 * @interface
 * An interface representing TagListByServiceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface TagListByServiceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [filter] | Field       | Supported operators    |
   * Supported functions                         |
   * |-------------|------------------------|---------------------------------------------|
   * | id          | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   * | name        | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   */
  filter?: string;
  /**
   * @member {number} [top] Number of records to return.
   */
  top?: number;
  /**
   * @member {number} [skip] Number of records to skip.
   */
  skip?: number;
}

/**
 * @interface
 * An interface representing TagListByApiOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface TagListByApiOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [filter] | Field       | Supported operators    |
   * Supported functions                         |
   * |-------------|------------------------|---------------------------------------------|
   * | id          | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   * | name        | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   */
  filter?: string;
  /**
   * @member {number} [top] Number of records to return.
   */
  top?: number;
  /**
   * @member {number} [skip] Number of records to skip.
   */
  skip?: number;
}

/**
 * @interface
 * An interface representing TagAssignToApiOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface TagAssignToApiOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [ifMatch] ETag of the Entity. Not required when creating
   * an entity, but required when updating an entity.
   */
  ifMatch?: string;
}

/**
 * @interface
 * An interface representing TagListByOperationOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface TagListByOperationOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [filter] | Field       | Supported operators    |
   * Supported functions                         |
   * |-------------|------------------------|---------------------------------------------|
   * | id          | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   * | name        | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   * | method     | ge, le, eq, ne, gt, lt | substringof, contains, startswith,
   * endswith |
   * | description | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   * | urlTemplate | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   */
  filter?: string;
  /**
   * @member {number} [top] Number of records to return.
   */
  top?: number;
  /**
   * @member {number} [skip] Number of records to skip.
   */
  skip?: number;
}

/**
 * @interface
 * An interface representing TagAssignToOperationOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface TagAssignToOperationOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [ifMatch] ETag of the Entity. Not required when creating
   * an entity, but required when updating an entity.
   */
  ifMatch?: string;
}

/**
 * @interface
 * An interface representing TagListByProductOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface TagListByProductOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [filter] | Field       | Supported operators    |
   * Supported functions                         |
   * |-------------|------------------------|---------------------------------------------|
   * | id          | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   * | name        | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   */
  filter?: string;
  /**
   * @member {number} [top] Number of records to return.
   */
  top?: number;
  /**
   * @member {number} [skip] Number of records to skip.
   */
  skip?: number;
}

/**
 * @interface
 * An interface representing TagAssignToProductOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface TagAssignToProductOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [ifMatch] ETag of the Entity. Not required when creating
   * an entity, but required when updating an entity.
   */
  ifMatch?: string;
}

/**
 * @interface
 * An interface representing TagDescriptionListByApiOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface TagDescriptionListByApiOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [filter] | Field       | Supported operators    |
   * Supported functions                         |
   * |-------------|------------------------|---------------------------------------------|
   * | id          | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   * | name        | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   */
  filter?: string;
  /**
   * @member {number} [top] Number of records to return.
   */
  top?: number;
  /**
   * @member {number} [skip] Number of records to skip.
   */
  skip?: number;
}

/**
 * @interface
 * An interface representing TagDescriptionCreateOrUpdateOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface TagDescriptionCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [ifMatch] ETag of the Entity. Not required when creating
   * an entity, but required when updating an entity.
   */
  ifMatch?: string;
}

/**
 * @interface
 * An interface representing OperationListByTagsOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface OperationListByTagsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [filter] | Field       | Supported operators    |
   * Supported functions                         |
   * |-------------|------------------------|---------------------------------------------|
   * | id          | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   * | name        | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   * | apiName     | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   * | description | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   * | method      | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   * | urlTemplate | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   */
  filter?: string;
  /**
   * @member {number} [top] Number of records to return.
   */
  top?: number;
  /**
   * @member {number} [skip] Number of records to skip.
   */
  skip?: number;
}

/**
 * @interface
 * An interface representing UserListByServiceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface UserListByServiceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [filter] | Field            | Supported operators    |
   * Supported functions               |
   * |------------------|------------------------|-----------------------------------|
   * | id               | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   * | firstName        | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   * | lastName         | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   * | email            | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   * | state            | eq                     | N/A
   * |
   * | registrationDate | ge, le, eq, ne, gt, lt | N/A
   * |
   * | note             | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   */
  filter?: string;
  /**
   * @member {number} [top] Number of records to return.
   */
  top?: number;
  /**
   * @member {number} [skip] Number of records to skip.
   */
  skip?: number;
}

/**
 * @interface
 * An interface representing UserCreateOrUpdateOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface UserCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [ifMatch] ETag of the Entity. Not required when creating
   * an entity, but required when updating an entity.
   */
  ifMatch?: string;
}

/**
 * @interface
 * An interface representing UserDeleteMethodOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface UserDeleteMethodOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [deleteSubscriptions] Whether to delete user's
   * subscription or not.
   */
  deleteSubscriptions?: boolean;
  /**
   * @member {boolean} [notify] Send an Account Closed Email notification to
   * the User.
   */
  notify?: boolean;
}

/**
 * @interface
 * An interface representing UserGroupListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface UserGroupListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [filter] | Field       | Supported operators    |
   * Supported functions                         |
   * |-------------|------------------------|---------------------------------------------|
   * | id          | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   * | name        | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   * | description | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   */
  filter?: string;
  /**
   * @member {number} [top] Number of records to return.
   */
  top?: number;
  /**
   * @member {number} [skip] Number of records to skip.
   */
  skip?: number;
}

/**
 * @interface
 * An interface representing UserSubscriptionListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface UserSubscriptionListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [filter] | Field        | Supported operators    |
   * Supported functions                         |
   * |--------------|------------------------|---------------------------------------------|
   * | id           | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   * | name         | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   * | stateComment | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   * | userId       | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   * | productId    | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   * | state        | eq                     |
   * |
   */
  filter?: string;
  /**
   * @member {number} [top] Number of records to return.
   */
  top?: number;
  /**
   * @member {number} [skip] Number of records to skip.
   */
  skip?: number;
}

/**
 * @interface
 * An interface representing ApiVersionSetListByServiceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ApiVersionSetListByServiceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [filter] | Field            | Supported operators    |
   * Supported functions               |
   * |------------------|------------------------|-----------------------------------|
   * | id               | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   * | firstName        | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   * | lastName         | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   * | email            | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   * | state            | eq                     | N/A
   * |
   * | registrationDate | ge, le, eq, ne, gt, lt | N/A
   * |
   * | note             | ge, le, eq, ne, gt, lt | substringof, contains,
   * startswith, endswith |
   */
  filter?: string;
  /**
   * @member {number} [top] Number of records to return.
   */
  top?: number;
  /**
   * @member {number} [skip] Number of records to skip.
   */
  skip?: number;
}

/**
 * @interface
 * An interface representing ApiVersionSetCreateOrUpdateOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ApiVersionSetCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [ifMatch] ETag of the Entity. Not required when creating
   * an entity, but required when updating an entity.
   */
  ifMatch?: string;
}

/**
 * @interface
 * An interface representing ApiManagementClientOptions.
 * @extends AzureServiceClientOptions
 */
export interface ApiManagementClientOptions extends AzureServiceClientOptions {
  /**
   * @member {string} [baseUri]
   */
  baseUri?: string;
}

/**
 * @interface
 * An interface representing PolicyGetEntityTagHeaders.
 * Defines headers for GetEntityTag operation.
 *
 */
export interface PolicyGetEntityTagHeaders {
  /**
   * @member {string} [eTag] Current entity state version. Should be treated as
   * opaque and used to make conditional HTTP requests.
   */
  eTag: string;
}

/**
 * @interface
 * An interface representing PolicyGetHeaders.
 * Defines headers for Get operation.
 *
 */
export interface PolicyGetHeaders {
  /**
   * @member {string} [eTag] Current entity state version. Should be treated as
   * opaque and used to make conditional HTTP requests.
   */
  eTag: string;
}

/**
 * @interface
 * An interface representing ApiGetEntityTagHeaders.
 * Defines headers for GetEntityTag operation.
 *
 */
export interface ApiGetEntityTagHeaders {
  /**
   * @member {string} [eTag] Current entity state version. Should be treated as
   * opaque and used to make conditional HTTP requests.
   */
  eTag: string;
}

/**
 * @interface
 * An interface representing ApiGetHeaders.
 * Defines headers for Get operation.
 *
 */
export interface ApiGetHeaders {
  /**
   * @member {string} [eTag] Current entity state version. Should be treated as
   * opaque and used to make conditional HTTP requests.
   */
  eTag: string;
}

/**
 * @interface
 * An interface representing ApiCreateOrUpdateHeaders.
 * Defines headers for CreateOrUpdate operation.
 *
 */
export interface ApiCreateOrUpdateHeaders {
  /**
   * @member {string} [eTag] Current entity state version. Should be treated as
   * opaque and used to make conditional HTTP requests.
   */
  eTag: string;
}

/**
 * @interface
 * An interface representing ApiReleaseGetEntityTagHeaders.
 * Defines headers for GetEntityTag operation.
 *
 */
export interface ApiReleaseGetEntityTagHeaders {
  /**
   * @member {string} [eTag] Current entity state version. Should be treated as
   * opaque and used to make conditional HTTP requests.
   */
  eTag: string;
}

/**
 * @interface
 * An interface representing ApiOperationGetEntityTagHeaders.
 * Defines headers for GetEntityTag operation.
 *
 */
export interface ApiOperationGetEntityTagHeaders {
  /**
   * @member {string} [eTag] Current entity state version. Should be treated as
   * opaque and used to make conditional HTTP requests.
   */
  eTag: string;
}

/**
 * @interface
 * An interface representing ApiOperationGetHeaders.
 * Defines headers for Get operation.
 *
 */
export interface ApiOperationGetHeaders {
  /**
   * @member {string} [eTag] Current entity state version. Should be treated as
   * opaque and used to make conditional HTTP requests.
   */
  eTag: string;
}

/**
 * @interface
 * An interface representing ApiOperationPolicyGetEntityTagHeaders.
 * Defines headers for GetEntityTag operation.
 *
 */
export interface ApiOperationPolicyGetEntityTagHeaders {
  /**
   * @member {string} [eTag] Current entity state version. Should be treated as
   * opaque and used to make conditional HTTP requests.
   */
  eTag: string;
}

/**
 * @interface
 * An interface representing ApiOperationPolicyGetHeaders.
 * Defines headers for Get operation.
 *
 */
export interface ApiOperationPolicyGetHeaders {
  /**
   * @member {string} [eTag] Current entity state version. Should be treated as
   * opaque and used to make conditional HTTP requests.
   */
  eTag: string;
}

/**
 * @interface
 * An interface representing ApiPolicyListByApiHeaders.
 * Defines headers for ListByApi operation.
 *
 */
export interface ApiPolicyListByApiHeaders {
  /**
   * @member {string} [eTag] Current entity state version. Should be treated as
   * opaque and used to make conditional HTTP requests.
   */
  eTag: string;
}

/**
 * @interface
 * An interface representing ApiPolicyGetEntityTagHeaders.
 * Defines headers for GetEntityTag operation.
 *
 */
export interface ApiPolicyGetEntityTagHeaders {
  /**
   * @member {string} [eTag] Current entity state version. Should be treated as
   * opaque and used to make conditional HTTP requests.
   */
  eTag: string;
}

/**
 * @interface
 * An interface representing ApiPolicyGetHeaders.
 * Defines headers for Get operation.
 *
 */
export interface ApiPolicyGetHeaders {
  /**
   * @member {string} [eTag] Current entity state version. Should be treated as
   * opaque and used to make conditional HTTP requests.
   */
  eTag: string;
}

/**
 * @interface
 * An interface representing ApiSchemaListByApiHeaders.
 * Defines headers for ListByApi operation.
 *
 */
export interface ApiSchemaListByApiHeaders {
  /**
   * @member {string} [eTag] Current entity state version. Should be treated as
   * opaque and used to make conditional HTTP requests.
   */
  eTag: string;
}

/**
 * @interface
 * An interface representing ApiSchemaGetEntityTagHeaders.
 * Defines headers for GetEntityTag operation.
 *
 */
export interface ApiSchemaGetEntityTagHeaders {
  /**
   * @member {string} [eTag] Current entity state version. Should be treated as
   * opaque and used to make conditional HTTP requests.
   */
  eTag: string;
}

/**
 * @interface
 * An interface representing ApiSchemaGetHeaders.
 * Defines headers for Get operation.
 *
 */
export interface ApiSchemaGetHeaders {
  /**
   * @member {string} [eTag] Current entity state version. Should be treated as
   * opaque and used to make conditional HTTP requests.
   */
  eTag: string;
}

/**
 * @interface
 * An interface representing ApiDiagnosticGetEntityTagHeaders.
 * Defines headers for GetEntityTag operation.
 *
 */
export interface ApiDiagnosticGetEntityTagHeaders {
  /**
   * @member {string} [eTag] Current entity state version. Should be treated as
   * opaque and used to make conditional HTTP requests.
   */
  eTag: string;
}

/**
 * @interface
 * An interface representing ApiDiagnosticGetHeaders.
 * Defines headers for Get operation.
 *
 */
export interface ApiDiagnosticGetHeaders {
  /**
   * @member {string} [eTag] Current entity state version. Should be treated as
   * opaque and used to make conditional HTTP requests.
   */
  eTag: string;
}

/**
 * @interface
 * An interface representing ApiIssueGetEntityTagHeaders.
 * Defines headers for GetEntityTag operation.
 *
 */
export interface ApiIssueGetEntityTagHeaders {
  /**
   * @member {string} [eTag] Current entity state version. Should be treated as
   * opaque and used to make conditional HTTP requests.
   */
  eTag: string;
}

/**
 * @interface
 * An interface representing ApiIssueGetHeaders.
 * Defines headers for Get operation.
 *
 */
export interface ApiIssueGetHeaders {
  /**
   * @member {string} [eTag] Current entity state version. Should be treated as
   * opaque and used to make conditional HTTP requests.
   */
  eTag: string;
}

/**
 * @interface
 * An interface representing ApiIssueCommentGetEntityTagHeaders.
 * Defines headers for GetEntityTag operation.
 *
 */
export interface ApiIssueCommentGetEntityTagHeaders {
  /**
   * @member {string} [eTag] Current entity state version. Should be treated as
   * opaque and used to make conditional HTTP requests.
   */
  eTag: string;
}

/**
 * @interface
 * An interface representing ApiIssueCommentGetHeaders.
 * Defines headers for Get operation.
 *
 */
export interface ApiIssueCommentGetHeaders {
  /**
   * @member {string} [eTag] Current entity state version. Should be treated as
   * opaque and used to make conditional HTTP requests.
   */
  eTag: string;
}

/**
 * @interface
 * An interface representing ApiIssueAttachmentGetEntityTagHeaders.
 * Defines headers for GetEntityTag operation.
 *
 */
export interface ApiIssueAttachmentGetEntityTagHeaders {
  /**
   * @member {string} [eTag] Current entity state version. Should be treated as
   * opaque and used to make conditional HTTP requests.
   */
  eTag: string;
}

/**
 * @interface
 * An interface representing ApiIssueAttachmentGetHeaders.
 * Defines headers for Get operation.
 *
 */
export interface ApiIssueAttachmentGetHeaders {
  /**
   * @member {string} [eTag] Current entity state version. Should be treated as
   * opaque and used to make conditional HTTP requests.
   */
  eTag: string;
}

/**
 * @interface
 * An interface representing AuthorizationServerGetEntityTagHeaders.
 * Defines headers for GetEntityTag operation.
 *
 */
export interface AuthorizationServerGetEntityTagHeaders {
  /**
   * @member {string} [eTag] Current entity state version. Should be treated as
   * opaque and used to make conditional HTTP requests.
   */
  eTag: string;
}

/**
 * @interface
 * An interface representing AuthorizationServerGetHeaders.
 * Defines headers for Get operation.
 *
 */
export interface AuthorizationServerGetHeaders {
  /**
   * @member {string} [eTag] Current entity state version. Should be treated as
   * opaque and used to make conditional HTTP requests.
   */
  eTag: string;
}

/**
 * @interface
 * An interface representing BackendGetEntityTagHeaders.
 * Defines headers for GetEntityTag operation.
 *
 */
export interface BackendGetEntityTagHeaders {
  /**
   * @member {string} [eTag] Current entity state version. Should be treated as
   * opaque and used to make conditional HTTP requests.
   */
  eTag: string;
}

/**
 * @interface
 * An interface representing BackendGetHeaders.
 * Defines headers for Get operation.
 *
 */
export interface BackendGetHeaders {
  /**
   * @member {string} [eTag] Current entity state version. Should be treated as
   * opaque and used to make conditional HTTP requests.
   */
  eTag: string;
}

/**
 * @interface
 * An interface representing CertificateGetEntityTagHeaders.
 * Defines headers for GetEntityTag operation.
 *
 */
export interface CertificateGetEntityTagHeaders {
  /**
   * @member {string} [eTag] Current entity state version. Should be treated as
   * opaque and used to make conditional HTTP requests.
   */
  eTag: string;
}

/**
 * @interface
 * An interface representing CertificateGetHeaders.
 * Defines headers for Get operation.
 *
 */
export interface CertificateGetHeaders {
  /**
   * @member {string} [eTag] Current entity state version. Should be treated as
   * opaque and used to make conditional HTTP requests.
   */
  eTag: string;
}

/**
 * @interface
 * An interface representing DiagnosticGetEntityTagHeaders.
 * Defines headers for GetEntityTag operation.
 *
 */
export interface DiagnosticGetEntityTagHeaders {
  /**
   * @member {string} [eTag] Current entity state version. Should be treated as
   * opaque and used to make conditional HTTP requests.
   */
  eTag: string;
}

/**
 * @interface
 * An interface representing DiagnosticGetHeaders.
 * Defines headers for Get operation.
 *
 */
export interface DiagnosticGetHeaders {
  /**
   * @member {string} [eTag] Current entity state version. Should be treated as
   * opaque and used to make conditional HTTP requests.
   */
  eTag: string;
}

/**
 * @interface
 * An interface representing EmailTemplateGetEntityTagHeaders.
 * Defines headers for GetEntityTag operation.
 *
 */
export interface EmailTemplateGetEntityTagHeaders {
  /**
   * @member {string} [eTag] Current entity state version. Should be treated as
   * opaque and used to make conditional HTTP requests.
   */
  eTag: string;
}

/**
 * @interface
 * An interface representing EmailTemplateGetHeaders.
 * Defines headers for Get operation.
 *
 */
export interface EmailTemplateGetHeaders {
  /**
   * @member {string} [eTag] Current entity state version. Should be treated as
   * opaque and used to make conditional HTTP requests.
   */
  eTag: string;
}

/**
 * @interface
 * An interface representing GroupGetEntityTagHeaders.
 * Defines headers for GetEntityTag operation.
 *
 */
export interface GroupGetEntityTagHeaders {
  /**
   * @member {string} [eTag] Current entity state version. Should be treated as
   * opaque and used to make conditional HTTP requests.
   */
  eTag: string;
}

/**
 * @interface
 * An interface representing GroupGetHeaders.
 * Defines headers for Get operation.
 *
 */
export interface GroupGetHeaders {
  /**
   * @member {string} [eTag] Current entity state version. Should be treated as
   * opaque and used to make conditional HTTP requests.
   */
  eTag: string;
}

/**
 * @interface
 * An interface representing IdentityProviderGetEntityTagHeaders.
 * Defines headers for GetEntityTag operation.
 *
 */
export interface IdentityProviderGetEntityTagHeaders {
  /**
   * @member {string} [eTag] Current entity state version. Should be treated as
   * opaque and used to make conditional HTTP requests.
   */
  eTag: string;
}

/**
 * @interface
 * An interface representing IdentityProviderGetHeaders.
 * Defines headers for Get operation.
 *
 */
export interface IdentityProviderGetHeaders {
  /**
   * @member {string} [eTag] Current entity state version. Should be treated as
   * opaque and used to make conditional HTTP requests.
   */
  eTag: string;
}

/**
 * @interface
 * An interface representing LoggerGetEntityTagHeaders.
 * Defines headers for GetEntityTag operation.
 *
 */
export interface LoggerGetEntityTagHeaders {
  /**
   * @member {string} [eTag] Current entity state version. Should be treated as
   * opaque and used to make conditional HTTP requests.
   */
  eTag: string;
}

/**
 * @interface
 * An interface representing LoggerGetHeaders.
 * Defines headers for Get operation.
 *
 */
export interface LoggerGetHeaders {
  /**
   * @member {string} [eTag] Current entity state version. Should be treated as
   * opaque and used to make conditional HTTP requests.
   */
  eTag: string;
}

/**
 * @interface
 * An interface representing OpenIdConnectProviderGetEntityTagHeaders.
 * Defines headers for GetEntityTag operation.
 *
 */
export interface OpenIdConnectProviderGetEntityTagHeaders {
  /**
   * @member {string} [eTag] Current entity state version. Should be treated as
   * opaque and used to make conditional HTTP requests.
   */
  eTag: string;
}

/**
 * @interface
 * An interface representing OpenIdConnectProviderGetHeaders.
 * Defines headers for Get operation.
 *
 */
export interface OpenIdConnectProviderGetHeaders {
  /**
   * @member {string} [eTag] Current entity state version. Should be treated as
   * opaque and used to make conditional HTTP requests.
   */
  eTag: string;
}

/**
 * @interface
 * An interface representing SignInSettingsGetEntityTagHeaders.
 * Defines headers for GetEntityTag operation.
 *
 */
export interface SignInSettingsGetEntityTagHeaders {
  /**
   * @member {string} [eTag] Current entity state version. Should be treated as
   * opaque and used to make conditional HTTP requests.
   */
  eTag: string;
}

/**
 * @interface
 * An interface representing SignInSettingsGetHeaders.
 * Defines headers for Get operation.
 *
 */
export interface SignInSettingsGetHeaders {
  /**
   * @member {string} [eTag] Current entity state version. Should be treated as
   * opaque and used to make conditional HTTP requests.
   */
  eTag: string;
}

/**
 * @interface
 * An interface representing SignUpSettingsGetEntityTagHeaders.
 * Defines headers for GetEntityTag operation.
 *
 */
export interface SignUpSettingsGetEntityTagHeaders {
  /**
   * @member {string} [eTag] Current entity state version. Should be treated as
   * opaque and used to make conditional HTTP requests.
   */
  eTag: string;
}

/**
 * @interface
 * An interface representing SignUpSettingsGetHeaders.
 * Defines headers for Get operation.
 *
 */
export interface SignUpSettingsGetHeaders {
  /**
   * @member {string} [eTag] Current entity state version. Should be treated as
   * opaque and used to make conditional HTTP requests.
   */
  eTag: string;
}

/**
 * @interface
 * An interface representing DelegationSettingsGetEntityTagHeaders.
 * Defines headers for GetEntityTag operation.
 *
 */
export interface DelegationSettingsGetEntityTagHeaders {
  /**
   * @member {string} [eTag] Current entity state version. Should be treated as
   * opaque and used to make conditional HTTP requests.
   */
  eTag: string;
}

/**
 * @interface
 * An interface representing DelegationSettingsGetHeaders.
 * Defines headers for Get operation.
 *
 */
export interface DelegationSettingsGetHeaders {
  /**
   * @member {string} [eTag] Current entity state version. Should be treated as
   * opaque and used to make conditional HTTP requests.
   */
  eTag: string;
}

/**
 * @interface
 * An interface representing ProductGetEntityTagHeaders.
 * Defines headers for GetEntityTag operation.
 *
 */
export interface ProductGetEntityTagHeaders {
  /**
   * @member {string} [eTag] Current entity state version. Should be treated as
   * opaque and used to make conditional HTTP requests.
   */
  eTag: string;
}

/**
 * @interface
 * An interface representing ProductGetHeaders.
 * Defines headers for Get operation.
 *
 */
export interface ProductGetHeaders {
  /**
   * @member {string} [eTag] Current entity state version. Should be treated as
   * opaque and used to make conditional HTTP requests.
   */
  eTag: string;
}

/**
 * @interface
 * An interface representing ProductPolicyListByProductHeaders.
 * Defines headers for ListByProduct operation.
 *
 */
export interface ProductPolicyListByProductHeaders {
  /**
   * @member {string} [eTag] Current entity state version. Should be treated as
   * opaque and used to make conditional HTTP requests.
   */
  eTag: string;
}

/**
 * @interface
 * An interface representing ProductPolicyGetEntityTagHeaders.
 * Defines headers for GetEntityTag operation.
 *
 */
export interface ProductPolicyGetEntityTagHeaders {
  /**
   * @member {string} [eTag] Current entity state version. Should be treated as
   * opaque and used to make conditional HTTP requests.
   */
  eTag: string;
}

/**
 * @interface
 * An interface representing ProductPolicyGetHeaders.
 * Defines headers for Get operation.
 *
 */
export interface ProductPolicyGetHeaders {
  /**
   * @member {string} [eTag] Current entity state version. Should be treated as
   * opaque and used to make conditional HTTP requests.
   */
  eTag: string;
}

/**
 * @interface
 * An interface representing PropertyGetEntityTagHeaders.
 * Defines headers for GetEntityTag operation.
 *
 */
export interface PropertyGetEntityTagHeaders {
  /**
   * @member {string} [eTag] Current entity state version. Should be treated as
   * opaque and used to make conditional HTTP requests.
   */
  eTag: string;
}

/**
 * @interface
 * An interface representing PropertyGetHeaders.
 * Defines headers for Get operation.
 *
 */
export interface PropertyGetHeaders {
  /**
   * @member {string} [eTag] Current entity state version. Should be treated as
   * opaque and used to make conditional HTTP requests.
   */
  eTag: string;
}

/**
 * @interface
 * An interface representing SubscriptionGetEntityTagHeaders.
 * Defines headers for GetEntityTag operation.
 *
 */
export interface SubscriptionGetEntityTagHeaders {
  /**
   * @member {string} [eTag] Current entity state version. Should be treated as
   * opaque and used to make conditional HTTP requests.
   */
  eTag: string;
}

/**
 * @interface
 * An interface representing SubscriptionGetHeaders.
 * Defines headers for Get operation.
 *
 */
export interface SubscriptionGetHeaders {
  /**
   * @member {string} [eTag] Current entity state version. Should be treated as
   * opaque and used to make conditional HTTP requests.
   */
  eTag: string;
}

/**
 * @interface
 * An interface representing TagGetEntityStateHeaders.
 * Defines headers for GetEntityState operation.
 *
 */
export interface TagGetEntityStateHeaders {
  /**
   * @member {string} [eTag] Current entity state version. Should be treated as
   * opaque and used to make conditional HTTP requests.
   */
  eTag: string;
}

/**
 * @interface
 * An interface representing TagGetHeaders.
 * Defines headers for Get operation.
 *
 */
export interface TagGetHeaders {
  /**
   * @member {string} [eTag] Current entity state version. Should be treated as
   * opaque and used to make conditional HTTP requests.
   */
  eTag: string;
}

/**
 * @interface
 * An interface representing TagGetEntityStateByApiHeaders.
 * Defines headers for GetEntityStateByApi operation.
 *
 */
export interface TagGetEntityStateByApiHeaders {
  /**
   * @member {string} [eTag] Current entity state version. Should be treated as
   * opaque and used to make conditional HTTP requests.
   */
  eTag: string;
}

/**
 * @interface
 * An interface representing TagGetByApiHeaders.
 * Defines headers for GetByApi operation.
 *
 */
export interface TagGetByApiHeaders {
  /**
   * @member {string} [eTag] Current entity state version. Should be treated as
   * opaque and used to make conditional HTTP requests.
   */
  eTag: string;
}

/**
 * @interface
 * An interface representing TagDescriptionGetEntityStateHeaders.
 * Defines headers for GetEntityState operation.
 *
 */
export interface TagDescriptionGetEntityStateHeaders {
  /**
   * @member {string} [eTag] Current entity state version. Should be treated as
   * opaque and used to make conditional HTTP requests.
   */
  eTag: string;
}

/**
 * @interface
 * An interface representing TagDescriptionGetHeaders.
 * Defines headers for Get operation.
 *
 */
export interface TagDescriptionGetHeaders {
  /**
   * @member {string} [eTag] Current entity state version. Should be treated as
   * opaque and used to make conditional HTTP requests.
   */
  eTag: string;
}

/**
 * @interface
 * An interface representing TagGetEntityStateByOperationHeaders.
 * Defines headers for GetEntityStateByOperation operation.
 *
 */
export interface TagGetEntityStateByOperationHeaders {
  /**
   * @member {string} [eTag] Current entity state version. Should be treated as
   * opaque and used to make conditional HTTP requests.
   */
  eTag: string;
}

/**
 * @interface
 * An interface representing TagGetByOperationHeaders.
 * Defines headers for GetByOperation operation.
 *
 */
export interface TagGetByOperationHeaders {
  /**
   * @member {string} [eTag] Current entity state version. Should be treated as
   * opaque and used to make conditional HTTP requests.
   */
  eTag: string;
}

/**
 * @interface
 * An interface representing TagGetEntityStateByProductHeaders.
 * Defines headers for GetEntityStateByProduct operation.
 *
 */
export interface TagGetEntityStateByProductHeaders {
  /**
   * @member {string} [eTag] Current entity state version. Should be treated as
   * opaque and used to make conditional HTTP requests.
   */
  eTag: string;
}

/**
 * @interface
 * An interface representing TagGetByProductHeaders.
 * Defines headers for GetByProduct operation.
 *
 */
export interface TagGetByProductHeaders {
  /**
   * @member {string} [eTag] Current entity state version. Should be treated as
   * opaque and used to make conditional HTTP requests.
   */
  eTag: string;
}

/**
 * @interface
 * An interface representing TenantAccessGetHeaders.
 * Defines headers for Get operation.
 *
 */
export interface TenantAccessGetHeaders {
  /**
   * @member {string} [eTag] Current entity state version. Should be treated as
   * opaque and used to make conditional HTTP requests.
   */
  eTag: string;
}

/**
 * @interface
 * An interface representing TenantAccessGitGetHeaders.
 * Defines headers for Get operation.
 *
 */
export interface TenantAccessGitGetHeaders {
  /**
   * @member {string} [eTag] Current entity state version. Should be treated as
   * opaque and used to make conditional HTTP requests.
   */
  eTag: string;
}

/**
 * @interface
 * An interface representing UserGetEntityTagHeaders.
 * Defines headers for GetEntityTag operation.
 *
 */
export interface UserGetEntityTagHeaders {
  /**
   * @member {string} [eTag] Current entity state version. Should be treated as
   * opaque and used to make conditional HTTP requests.
   */
  eTag: string;
}

/**
 * @interface
 * An interface representing UserGetHeaders.
 * Defines headers for Get operation.
 *
 */
export interface UserGetHeaders {
  /**
   * @member {string} [eTag] Current entity state version. Should be treated as
   * opaque and used to make conditional HTTP requests.
   */
  eTag: string;
}

/**
 * @interface
 * An interface representing ApiVersionSetGetEntityTagHeaders.
 * Defines headers for GetEntityTag operation.
 *
 */
export interface ApiVersionSetGetEntityTagHeaders {
  /**
   * @member {string} [eTag] Current entity state version. Should be treated as
   * opaque and used to make conditional HTTP requests.
   */
  eTag: string;
}

/**
 * @interface
 * An interface representing ApiVersionSetGetHeaders.
 * Defines headers for Get operation.
 *
 */
export interface ApiVersionSetGetHeaders {
  /**
   * @member {string} [eTag] Current entity state version. Should be treated as
   * opaque and used to make conditional HTTP requests.
   */
  eTag: string;
}


/**
 * @interface
 * An interface representing the RegionListResult.
 * Lists Regions operation response details.
 *
 * @extends Array<RegionContract>
 */
export interface RegionListResult extends Array<RegionContract> {
  /**
   * @member {number} [count] Total record count number across all pages.
   */
  count?: number;
  /**
   * @member {string} [nextLink] Next page link if any.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the ApiCollection.
 * Paged Api list representation.
 *
 * @extends Array<ApiContract>
 */
export interface ApiCollection extends Array<ApiContract> {
  /**
   * @member {string} [nextLink] Next page link if any.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the TagResourceCollection.
 * Paged Tag list representation.
 *
 * @extends Array<TagResourceContract>
 */
export interface TagResourceCollection extends Array<TagResourceContract> {
  /**
   * @member {number} [count] Total record count number across all pages.
   */
  count?: number;
  /**
   * @member {string} [nextLink] Next page link if any.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the ApiRevisionCollection.
 * Paged Api Revision list representation.
 *
 * @extends Array<ApiRevisionContract>
 */
export interface ApiRevisionCollection extends Array<ApiRevisionContract> {
  /**
   * @member {string} [nextLink] Next page link if any.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the ApiReleaseCollection.
 * Paged Api Revision list representation.
 *
 * @extends Array<ApiReleaseContract>
 */
export interface ApiReleaseCollection extends Array<ApiReleaseContract> {
  /**
   * @member {string} [nextLink] Next page link if any.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the OperationCollection.
 * Paged Operation list representation.
 *
 * @extends Array<OperationContract>
 */
export interface OperationCollection extends Array<OperationContract> {
  /**
   * @member {string} [nextLink] Next page link if any.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the ProductCollection.
 * Paged Products list representation.
 *
 * @extends Array<ProductContract>
 */
export interface ProductCollection extends Array<ProductContract> {
  /**
   * @member {string} [nextLink] Next page link if any.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the SchemaCollection.
 * The response of the list schema operation.
 *
 * @extends Array<SchemaContract>
 */
export interface SchemaCollection extends Array<SchemaContract> {
  /**
   * @member {string} [nextLink] Next page link if any.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the DiagnosticCollection.
 * Paged Diagnostic list representation.
 *
 * @extends Array<DiagnosticContract>
 */
export interface DiagnosticCollection extends Array<DiagnosticContract> {
  /**
   * @member {string} [nextLink] Next page link if any.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the LoggerCollection.
 * Paged Logger list representation.
 *
 * @extends Array<LoggerContract>
 */
export interface LoggerCollection extends Array<LoggerContract> {
  /**
   * @member {number} [count] Total record count number across all pages.
   */
  count?: number;
  /**
   * @member {string} [nextLink] Next page link if any.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the IssueCollection.
 * Paged Issue list representation.
 *
 * @extends Array<IssueContract>
 */
export interface IssueCollection extends Array<IssueContract> {
  /**
   * @member {string} [nextLink] Next page link if any.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the IssueCommentCollection.
 * Paged Issue Comment list representation.
 *
 * @extends Array<IssueCommentContract>
 */
export interface IssueCommentCollection extends Array<IssueCommentContract> {
  /**
   * @member {string} [nextLink] Next page link if any.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the IssueAttachmentCollection.
 * Paged Issue Attachment list representation.
 *
 * @extends Array<IssueAttachmentContract>
 */
export interface IssueAttachmentCollection extends Array<IssueAttachmentContract> {
  /**
   * @member {string} [nextLink] Next page link if any.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the AuthorizationServerCollection.
 * Paged OAuth2 Authorization Servers list representation.
 *
 * @extends Array<AuthorizationServerContract>
 */
export interface AuthorizationServerCollection extends Array<AuthorizationServerContract> {
  /**
   * @member {number} [count] Total record count number across all pages.
   */
  count?: number;
  /**
   * @member {string} [nextLink] Next page link if any.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the BackendCollection.
 * Paged Backend list representation.
 *
 * @extends Array<BackendContract>
 */
export interface BackendCollection extends Array<BackendContract> {
  /**
   * @member {string} [nextLink] Next page link if any.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the CertificateCollection.
 * Paged Certificates list representation.
 *
 * @extends Array<CertificateContract>
 */
export interface CertificateCollection extends Array<CertificateContract> {
  /**
   * @member {string} [nextLink] Next page link if any.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the OperationListResult.
 * Result of the request to list REST API operations. It contains a list of
 * operations and a URL nextLink to get the next set of results.
 *
 * @extends Array<Operation>
 */
export interface OperationListResult extends Array<Operation> {
  /**
   * @member {string} [nextLink] URL to get the next set of operation list
   * results if there are any.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the ResourceSkuResults.
 * The API Management service SKUs operation response.
 *
 * @extends Array<ResourceSkuResult>
 */
export interface ResourceSkuResults extends Array<ResourceSkuResult> {
  /**
   * @member {string} [nextLink] The uri to fetch the next page of API
   * Management service Skus.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the ApiManagementServiceListResult.
 * The response of the List API Management services operation.
 *
 * @extends Array<ApiManagementServiceResource>
 */
export interface ApiManagementServiceListResult extends Array<ApiManagementServiceResource> {
  /**
   * @member {string} [nextLink] Link to the next set of results. Not empty if
   * Value contains incomplete list of API Management services.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the EmailTemplateCollection.
 * Paged email template list representation.
 *
 * @extends Array<EmailTemplateContract>
 */
export interface EmailTemplateCollection extends Array<EmailTemplateContract> {
  /**
   * @member {string} [nextLink] Next page link if any.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the GroupCollection.
 * Paged Group list representation.
 *
 * @extends Array<GroupContract>
 */
export interface GroupCollection extends Array<GroupContract> {
  /**
   * @member {string} [nextLink] Next page link if any.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the UserCollection.
 * Paged Users list representation.
 *
 * @extends Array<UserContract>
 */
export interface UserCollection extends Array<UserContract> {
  /**
   * @member {string} [nextLink] Next page link if any.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the IdentityProviderList.
 * List of all the Identity Providers configured on the service instance.
 *
 * @extends Array<IdentityProviderContract>
 */
export interface IdentityProviderList extends Array<IdentityProviderContract> {
  /**
   * @member {string} [nextLink] Next page link if any.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the NotificationCollection.
 * Paged Notification list representation.
 *
 * @extends Array<NotificationContract>
 */
export interface NotificationCollection extends Array<NotificationContract> {
  /**
   * @member {string} [nextLink] Next page link if any.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the OpenIdConnectProviderCollection.
 * Paged OpenIdProviders list representation.
 *
 * @extends Array<OpenidConnectProviderContract>
 */
export interface OpenIdConnectProviderCollection extends Array<OpenidConnectProviderContract> {
  /**
   * @member {string} [nextLink] Next page link if any.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the SubscriptionCollection.
 * Paged Subscriptions list representation.
 *
 * @extends Array<SubscriptionContract>
 */
export interface SubscriptionCollection extends Array<SubscriptionContract> {
  /**
   * @member {string} [nextLink] Next page link if any.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the PropertyCollection.
 * Paged Property list representation.
 *
 * @extends Array<PropertyContract>
 */
export interface PropertyCollection extends Array<PropertyContract> {
  /**
   * @member {string} [nextLink] Next page link if any.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the ReportCollection.
 * Paged Report records list representation.
 *
 * @extends Array<ReportRecordContract>
 */
export interface ReportCollection extends Array<ReportRecordContract> {
  /**
   * @member {number} [count] Total record count number across all pages.
   */
  count?: number;
  /**
   * @member {string} [nextLink] Next page link if any.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the RequestReportCollection.
 * Paged Report records list representation.
 *
 * @extends Array<RequestReportRecordContract>
 */
export interface RequestReportCollection extends Array<RequestReportRecordContract> {
  /**
   * @member {number} [count] Total record count number across all pages.
   */
  count?: number;
}

/**
 * @interface
 * An interface representing the TagCollection.
 * Paged Tag list representation.
 *
 * @extends Array<TagContract>
 */
export interface TagCollection extends Array<TagContract> {
  /**
   * @member {string} [nextLink] Next page link if any.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the TagDescriptionCollection.
 * Paged TagDescription list representation.
 *
 * @extends Array<TagDescriptionContract>
 */
export interface TagDescriptionCollection extends Array<TagDescriptionContract> {
  /**
   * @member {string} [nextLink] Next page link if any.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the UserIdentityCollection.
 * List of Users Identity list representation.
 *
 * @extends Array<UserIdentityContract>
 */
export interface UserIdentityCollection extends Array<UserIdentityContract> {
  /**
   * @member {number} [count] Total record count number across all pages.
   */
  count?: number;
  /**
   * @member {string} [nextLink] Next page link if any.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the ApiVersionSetCollection.
 * Paged Api Version Set list representation.
 *
 * @extends Array<ApiVersionSetContract>
 */
export interface ApiVersionSetCollection extends Array<ApiVersionSetContract> {
  /**
   * @member {string} [nextLink] Next page link if any.
   */
  nextLink?: string;
}

/**
 * Defines values for PolicyContentFormat.
 * Possible values include: 'xml', 'xml-link', 'rawxml', 'rawxml-link'
 * @readonly
 * @enum {string}
 */
export type PolicyContentFormat = 'xml' | 'xml-link' | 'rawxml' | 'rawxml-link';

/**
 * Defines values for Protocol.
 * Possible values include: 'http', 'https'
 * @readonly
 * @enum {string}
 */
export type Protocol = 'http' | 'https';

/**
 * Defines values for ContentFormat.
 * Possible values include: 'wadl-xml', 'wadl-link-json', 'swagger-json', 'swagger-link-json',
 * 'wsdl', 'wsdl-link'
 * @readonly
 * @enum {string}
 */
export type ContentFormat = 'wadl-xml' | 'wadl-link-json' | 'swagger-json' | 'swagger-link-json' | 'wsdl' | 'wsdl-link';

/**
 * Defines values for SoapApiType.
 * Possible values include: 'SoapToRest', 'SoapPassThrough'
 * @readonly
 * @enum {string}
 */
export type SoapApiType = 'http' | 'soap';

/**
 * Defines values for BearerTokenSendingMethods.
 * Possible values include: 'authorizationHeader', 'query'
 * @readonly
 * @enum {string}
 */
export type BearerTokenSendingMethods = 'authorizationHeader' | 'query';

/**
 * Defines values for ApiType.
 * Possible values include: 'http', 'soap'
 * @readonly
 * @enum {string}
 */
export type ApiType = 'http' | 'soap';

/**
 * Defines values for State.
 * Possible values include: 'proposed', 'open', 'removed', 'resolved', 'closed'
 * @readonly
 * @enum {string}
 */
export type State = 'proposed' | 'open' | 'removed' | 'resolved' | 'closed';

/**
 * Defines values for LoggerType.
 * Possible values include: 'azureEventHub', 'applicationInsights'
 * @readonly
 * @enum {string}
 */
export type LoggerType = 'azureEventHub' | 'applicationInsights';

/**
 * Defines values for ProductState.
 * Possible values include: 'notPublished', 'published'
 * @readonly
 * @enum {string}
 */
export type ProductState = 'notPublished' | 'published';

/**
 * Defines values for GrantType.
 * Possible values include: 'authorizationCode', 'implicit', 'resourceOwnerPassword',
 * 'clientCredentials'
 * @readonly
 * @enum {string}
 */
export type GrantType = 'authorizationCode' | 'implicit' | 'resourceOwnerPassword' | 'clientCredentials';

/**
 * Defines values for AuthorizationMethod.
 * Possible values include: 'HEAD', 'OPTIONS', 'TRACE', 'GET', 'POST', 'PUT', 'PATCH', 'DELETE'
 * @readonly
 * @enum {string}
 */
export type AuthorizationMethod = 'HEAD' | 'OPTIONS' | 'TRACE' | 'GET' | 'POST' | 'PUT' | 'PATCH' | 'DELETE';

/**
 * Defines values for ClientAuthenticationMethod.
 * Possible values include: 'Basic', 'Body'
 * @readonly
 * @enum {string}
 */
export type ClientAuthenticationMethod = 'Basic' | 'Body';

/**
 * Defines values for BearerTokenSendingMethod.
 * Possible values include: 'authorizationHeader', 'query'
 * @readonly
 * @enum {string}
 */
export type BearerTokenSendingMethod = 'authorizationHeader' | 'query';

/**
 * Defines values for BackendProtocol.
 * Possible values include: 'http', 'soap'
 * @readonly
 * @enum {string}
 */
export type BackendProtocol = 'http' | 'soap';

/**
 * Defines values for SkuType.
 * Possible values include: 'Developer', 'Standard', 'Premium', 'Basic'
 * @readonly
 * @enum {string}
 */
export type SkuType = 'Developer' | 'Standard' | 'Premium' | 'Basic';

/**
 * Defines values for ResourceSkuCapacityScaleType.
 * Possible values include: 'automatic', 'manual', 'none'
 * @readonly
 * @enum {string}
 */
export type ResourceSkuCapacityScaleType = 'automatic' | 'manual' | 'none';

/**
 * Defines values for HostnameType.
 * Possible values include: 'Proxy', 'Portal', 'Management', 'Scm'
 * @readonly
 * @enum {string}
 */
export type HostnameType = 'Proxy' | 'Portal' | 'Management' | 'Scm';

/**
 * Defines values for VirtualNetworkType.
 * Possible values include: 'None', 'External', 'Internal'
 * @readonly
 * @enum {string}
 */
export type VirtualNetworkType = 'None' | 'External' | 'Internal';

/**
 * Defines values for NameAvailabilityReason.
 * Possible values include: 'Valid', 'Invalid', 'AlreadyExists'
 * @readonly
 * @enum {string}
 */
export type NameAvailabilityReason = 'Valid' | 'Invalid' | 'AlreadyExists';

/**
 * Defines values for GroupType.
 * Possible values include: 'custom', 'system', 'external'
 * @readonly
 * @enum {string}
 */
export type GroupType = 'custom' | 'system' | 'external';

/**
 * Defines values for Confirmation.
 * Possible values include: 'signup', 'invite'
 * @readonly
 * @enum {string}
 */
export type Confirmation = 'signup' | 'invite';

/**
 * Defines values for UserState.
 * Possible values include: 'active', 'blocked', 'pending', 'deleted'
 * @readonly
 * @enum {string}
 */
export type UserState = 'active' | 'blocked' | 'pending' | 'deleted';

/**
 * Defines values for IdentityProviderType.
 * Possible values include: 'facebook', 'google', 'microsoft', 'twitter', 'aad', 'aadB2C'
 * @readonly
 * @enum {string}
 */
export type IdentityProviderType = 'facebook' | 'google' | 'microsoft' | 'twitter' | 'aad' | 'aadB2C';

/**
 * Defines values for ConnectivityStatusType.
 * Possible values include: 'initializing', 'success', 'failure'
 * @readonly
 * @enum {string}
 */
export type ConnectivityStatusType = 'initializing' | 'success' | 'failure';

/**
 * Defines values for SubscriptionState.
 * Possible values include: 'suspended', 'active', 'expired', 'submitted', 'rejected', 'cancelled'
 * @readonly
 * @enum {string}
 */
export type SubscriptionState = 'suspended' | 'active' | 'expired' | 'submitted' | 'rejected' | 'cancelled';

/**
 * Defines values for AsyncOperationStatus.
 * Possible values include: 'Started', 'InProgress', 'Succeeded', 'Failed'
 * @readonly
 * @enum {string}
 */
export type AsyncOperationStatus = 'Started' | 'InProgress' | 'Succeeded' | 'Failed';

/**
 * Defines values for KeyType.
 * Possible values include: 'primary', 'secondary'
 * @readonly
 * @enum {string}
 */
export type KeyType = 'primary' | 'secondary';

/**
 * Defines values for VersioningScheme.
 * Possible values include: 'Segment', 'Query', 'Header'
 * @readonly
 * @enum {string}
 */
export type VersioningScheme = 'Segment' | 'Query' | 'Header';

/**
 * Defines values for TemplateName.
 * Possible values include: 'applicationApprovedNotificationMessage', 'accountClosedDeveloper',
 * 'quotaLimitApproachingDeveloperNotificationMessage', 'newDeveloperNotificationMessage',
 * 'emailChangeIdentityDefault', 'inviteUserNotificationMessage', 'newCommentNotificationMessage',
 * 'confirmSignUpIdentityDefault', 'newIssueNotificationMessage',
 * 'purchaseDeveloperNotificationMessage', 'passwordResetIdentityDefault',
 * 'passwordResetByAdminNotificationMessage', 'rejectDeveloperNotificationMessage',
 * 'requestDeveloperNotificationMessage'
 * @readonly
 * @enum {string}
 */
export type TemplateName = 'applicationApprovedNotificationMessage' | 'accountClosedDeveloper' | 'quotaLimitApproachingDeveloperNotificationMessage' | 'newDeveloperNotificationMessage' | 'emailChangeIdentityDefault' | 'inviteUserNotificationMessage' | 'newCommentNotificationMessage' | 'confirmSignUpIdentityDefault' | 'newIssueNotificationMessage' | 'purchaseDeveloperNotificationMessage' | 'passwordResetIdentityDefault' | 'passwordResetByAdminNotificationMessage' | 'rejectDeveloperNotificationMessage' | 'requestDeveloperNotificationMessage';

/**
 * Defines values for NotificationName.
 * Possible values include: 'RequestPublisherNotificationMessage',
 * 'PurchasePublisherNotificationMessage', 'NewApplicationNotificationMessage', 'BCC',
 * 'NewIssuePublisherNotificationMessage', 'AccountClosedPublisher',
 * 'QuotaLimitApproachingPublisherNotificationMessage'
 * @readonly
 * @enum {string}
 */
export type NotificationName = 'RequestPublisherNotificationMessage' | 'PurchasePublisherNotificationMessage' | 'NewApplicationNotificationMessage' | 'BCC' | 'NewIssuePublisherNotificationMessage' | 'AccountClosedPublisher' | 'QuotaLimitApproachingPublisherNotificationMessage';

/**
 * Defines values for PolicyScopeContract.
 * Possible values include: 'Tenant', 'Product', 'Api', 'Operation', 'All'
 * @readonly
 * @enum {string}
 */
export type PolicyScopeContract = 'Tenant' | 'Product' | 'Api' | 'Operation' | 'All';

/**
 * Defines values for ExportFormat.
 * Possible values include: 'Swagger', 'Wsdl', 'Wadl'
 * @readonly
 * @enum {string}
 */
export type ExportFormat = 'swagger-link' | 'wsdl-link' | 'wadl-link';

/**
 * Defines values for VersioningScheme1.
 * Possible values include: 'Segment', 'Query', 'Header'
 * @readonly
 * @enum {string}
 */
export type VersioningScheme1 = 'Segment' | 'Query' | 'Header';

/**
 * Defines values for StoreName.
 * Possible values include: 'CertificateAuthority', 'Root'
 * @readonly
 * @enum {string}
 */
export type StoreName = 'CertificateAuthority' | 'Root';

/**
 * Contains response data for the listByService operation.
 */
export type PolicyListByServiceResponse = PolicyCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyCollection;
    };
};

/**
 * Contains response data for the getEntityTag operation.
 */
export type PolicyGetEntityTagResponse = PolicyGetEntityTagHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: PolicyGetEntityTagHeaders;
    };
};

/**
 * Contains response data for the get operation.
 */
export type PolicyGetResponse = PolicyContract & PolicyGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: PolicyGetHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyContract;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type PolicyCreateOrUpdateResponse = PolicyContract & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyContract;
    };
};

/**
 * Contains response data for the listByService operation.
 */
export type PolicySnippetsListByServiceResponse = PolicySnippetsCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicySnippetsCollection;
    };
};

/**
 * Contains response data for the listByService operation.
 */
export type RegionsListByServiceResponse = RegionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RegionListResult;
    };
};

/**
 * Contains response data for the listByServiceNext operation.
 */
export type RegionsListByServiceNextResponse = RegionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RegionListResult;
    };
};

/**
 * Contains response data for the listByService operation.
 */
export type ApiListByServiceResponse = ApiCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApiCollection;
    };
};

/**
 * Contains response data for the getEntityTag operation.
 */
export type ApiGetEntityTagResponse = ApiGetEntityTagHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ApiGetEntityTagHeaders;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ApiGetResponse = ApiContract & ApiGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ApiGetHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApiContract;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ApiCreateOrUpdateResponse = ApiContract & ApiCreateOrUpdateHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ApiCreateOrUpdateHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApiContract;
    };
};

/**
 * Contains response data for the listByTags operation.
 */
export type ApiListByTagsResponse = TagResourceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TagResourceCollection;
    };
};

/**
 * Contains response data for the listByServiceNext operation.
 */
export type ApiListByServiceNextResponse = ApiCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApiCollection;
    };
};

/**
 * Contains response data for the listByTagsNext operation.
 */
export type ApiListByTagsNextResponse = TagResourceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TagResourceCollection;
    };
};

/**
 * Contains response data for the list operation.
 */
export type ApiRevisionsListResponse = ApiRevisionCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApiRevisionCollection;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type ApiRevisionsListNextResponse = ApiRevisionCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApiRevisionCollection;
    };
};

/**
 * Contains response data for the list operation.
 */
export type ApiReleaseListResponse = ApiReleaseCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApiReleaseCollection;
    };
};

/**
 * Contains response data for the getEntityTag operation.
 */
export type ApiReleaseGetEntityTagResponse = ApiReleaseGetEntityTagHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ApiReleaseGetEntityTagHeaders;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ApiReleaseGetResponse = ApiReleaseContract & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApiReleaseContract;
    };
};

/**
 * Contains response data for the create operation.
 */
export type ApiReleaseCreateResponse = ApiReleaseContract & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApiReleaseContract;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type ApiReleaseListNextResponse = ApiReleaseCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApiReleaseCollection;
    };
};

/**
 * Contains response data for the listByApi operation.
 */
export type ApiOperationListByApiResponse = OperationCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationCollection;
    };
};

/**
 * Contains response data for the getEntityTag operation.
 */
export type ApiOperationGetEntityTagResponse = ApiOperationGetEntityTagHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ApiOperationGetEntityTagHeaders;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ApiOperationGetResponse = OperationContract & ApiOperationGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ApiOperationGetHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationContract;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ApiOperationCreateOrUpdateResponse = OperationContract & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationContract;
    };
};

/**
 * Contains response data for the listByApiNext operation.
 */
export type ApiOperationListByApiNextResponse = OperationCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationCollection;
    };
};

/**
 * Contains response data for the listByOperation operation.
 */
export type ApiOperationPolicyListByOperationResponse = PolicyCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyCollection;
    };
};

/**
 * Contains response data for the getEntityTag operation.
 */
export type ApiOperationPolicyGetEntityTagResponse = ApiOperationPolicyGetEntityTagHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ApiOperationPolicyGetEntityTagHeaders;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ApiOperationPolicyGetResponse = PolicyContract & ApiOperationPolicyGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ApiOperationPolicyGetHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyContract;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ApiOperationPolicyCreateOrUpdateResponse = PolicyContract & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyContract;
    };
};

/**
 * Contains response data for the listByApis operation.
 */
export type ApiProductListByApisResponse = ProductCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProductCollection;
    };
};

/**
 * Contains response data for the listByApisNext operation.
 */
export type ApiProductListByApisNextResponse = ProductCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProductCollection;
    };
};

/**
 * Contains response data for the listByApi operation.
 */
export type ApiPolicyListByApiResponse = PolicyCollection & ApiPolicyListByApiHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ApiPolicyListByApiHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyCollection;
    };
};

/**
 * Contains response data for the getEntityTag operation.
 */
export type ApiPolicyGetEntityTagResponse = ApiPolicyGetEntityTagHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ApiPolicyGetEntityTagHeaders;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ApiPolicyGetResponse = PolicyContract & ApiPolicyGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ApiPolicyGetHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyContract;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ApiPolicyCreateOrUpdateResponse = PolicyContract & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyContract;
    };
};

/**
 * Contains response data for the listByApi operation.
 */
export type ApiSchemaListByApiResponse = SchemaCollection & ApiSchemaListByApiHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ApiSchemaListByApiHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SchemaCollection;
    };
};

/**
 * Contains response data for the getEntityTag operation.
 */
export type ApiSchemaGetEntityTagResponse = ApiSchemaGetEntityTagHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ApiSchemaGetEntityTagHeaders;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ApiSchemaGetResponse = SchemaContract & ApiSchemaGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ApiSchemaGetHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SchemaContract;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ApiSchemaCreateOrUpdateResponse = SchemaContract & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SchemaContract;
    };
};

/**
 * Contains response data for the listByService operation.
 */
export type ApiDiagnosticListByServiceResponse = DiagnosticCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiagnosticCollection;
    };
};

/**
 * Contains response data for the getEntityTag operation.
 */
export type ApiDiagnosticGetEntityTagResponse = ApiDiagnosticGetEntityTagHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ApiDiagnosticGetEntityTagHeaders;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ApiDiagnosticGetResponse = DiagnosticContract & ApiDiagnosticGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ApiDiagnosticGetHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiagnosticContract;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ApiDiagnosticCreateOrUpdateResponse = DiagnosticContract & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiagnosticContract;
    };
};

/**
 * Contains response data for the listByServiceNext operation.
 */
export type ApiDiagnosticListByServiceNextResponse = DiagnosticCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiagnosticCollection;
    };
};

/**
 * Contains response data for the listByService operation.
 */
export type ApiDiagnosticLoggerListByServiceResponse = LoggerCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LoggerCollection;
    };
};

/**
 * Contains response data for the checkEntityExists operation.
 */
export type ApiDiagnosticLoggerCheckEntityExistsResponse = {
  /**
   * The parsed response body.
   */
  body: boolean;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: boolean;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ApiDiagnosticLoggerCreateOrUpdateResponse = LoggerContract & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LoggerContract;
    };
};

/**
 * Contains response data for the listByServiceNext operation.
 */
export type ApiDiagnosticLoggerListByServiceNextResponse = LoggerCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LoggerCollection;
    };
};

/**
 * Contains response data for the listByService operation.
 */
export type ApiIssueListByServiceResponse = IssueCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IssueCollection;
    };
};

/**
 * Contains response data for the getEntityTag operation.
 */
export type ApiIssueGetEntityTagResponse = ApiIssueGetEntityTagHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ApiIssueGetEntityTagHeaders;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ApiIssueGetResponse = IssueContract & ApiIssueGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ApiIssueGetHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IssueContract;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ApiIssueCreateOrUpdateResponse = IssueContract & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IssueContract;
    };
};

/**
 * Contains response data for the listByServiceNext operation.
 */
export type ApiIssueListByServiceNextResponse = IssueCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IssueCollection;
    };
};

/**
 * Contains response data for the listByService operation.
 */
export type ApiIssueCommentListByServiceResponse = IssueCommentCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IssueCommentCollection;
    };
};

/**
 * Contains response data for the getEntityTag operation.
 */
export type ApiIssueCommentGetEntityTagResponse = ApiIssueCommentGetEntityTagHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ApiIssueCommentGetEntityTagHeaders;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ApiIssueCommentGetResponse = IssueCommentContract & ApiIssueCommentGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ApiIssueCommentGetHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IssueCommentContract;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ApiIssueCommentCreateOrUpdateResponse = IssueCommentContract & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IssueCommentContract;
    };
};

/**
 * Contains response data for the listByServiceNext operation.
 */
export type ApiIssueCommentListByServiceNextResponse = IssueCommentCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IssueCommentCollection;
    };
};

/**
 * Contains response data for the listByService operation.
 */
export type ApiIssueAttachmentListByServiceResponse = IssueAttachmentCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IssueAttachmentCollection;
    };
};

/**
 * Contains response data for the getEntityTag operation.
 */
export type ApiIssueAttachmentGetEntityTagResponse = ApiIssueAttachmentGetEntityTagHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ApiIssueAttachmentGetEntityTagHeaders;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ApiIssueAttachmentGetResponse = IssueAttachmentContract & ApiIssueAttachmentGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ApiIssueAttachmentGetHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IssueAttachmentContract;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ApiIssueAttachmentCreateOrUpdateResponse = IssueAttachmentContract & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IssueAttachmentContract;
    };
};

/**
 * Contains response data for the listByServiceNext operation.
 */
export type ApiIssueAttachmentListByServiceNextResponse = IssueAttachmentCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IssueAttachmentCollection;
    };
};

/**
 * Contains response data for the listByService operation.
 */
export type AuthorizationServerListByServiceResponse = AuthorizationServerCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AuthorizationServerCollection;
    };
};

/**
 * Contains response data for the getEntityTag operation.
 */
export type AuthorizationServerGetEntityTagResponse = AuthorizationServerGetEntityTagHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: AuthorizationServerGetEntityTagHeaders;
    };
};

/**
 * Contains response data for the get operation.
 */
export type AuthorizationServerGetResponse = AuthorizationServerContract & AuthorizationServerGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: AuthorizationServerGetHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AuthorizationServerContract;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type AuthorizationServerCreateOrUpdateResponse = AuthorizationServerContract & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AuthorizationServerContract;
    };
};

/**
 * Contains response data for the listByServiceNext operation.
 */
export type AuthorizationServerListByServiceNextResponse = AuthorizationServerCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AuthorizationServerCollection;
    };
};

/**
 * Contains response data for the listByService operation.
 */
export type BackendListByServiceResponse = BackendCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackendCollection;
    };
};

/**
 * Contains response data for the getEntityTag operation.
 */
export type BackendGetEntityTagResponse = BackendGetEntityTagHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: BackendGetEntityTagHeaders;
    };
};

/**
 * Contains response data for the get operation.
 */
export type BackendGetResponse = BackendContract & BackendGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: BackendGetHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackendContract;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type BackendCreateOrUpdateResponse = BackendContract & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackendContract;
    };
};

/**
 * Contains response data for the listByServiceNext operation.
 */
export type BackendListByServiceNextResponse = BackendCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackendCollection;
    };
};

/**
 * Contains response data for the listByService operation.
 */
export type CertificateListByServiceResponse = CertificateCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CertificateCollection;
    };
};

/**
 * Contains response data for the getEntityTag operation.
 */
export type CertificateGetEntityTagResponse = CertificateGetEntityTagHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: CertificateGetEntityTagHeaders;
    };
};

/**
 * Contains response data for the get operation.
 */
export type CertificateGetResponse = CertificateContract & CertificateGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: CertificateGetHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CertificateContract;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type CertificateCreateOrUpdateResponse = CertificateContract & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CertificateContract;
    };
};

/**
 * Contains response data for the listByServiceNext operation.
 */
export type CertificateListByServiceNextResponse = CertificateCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CertificateCollection;
    };
};

/**
 * Contains response data for the list operation.
 */
export type ApiManagementOperationsListResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type ApiManagementOperationsListNextResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationListResult;
    };
};

/**
 * Contains response data for the listAvailableServiceSkus operation.
 */
export type ApiManagementServiceSkusListAvailableServiceSkusResponse = ResourceSkuResults & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceSkuResults;
    };
};

/**
 * Contains response data for the listAvailableServiceSkusNext operation.
 */
export type ApiManagementServiceSkusListAvailableServiceSkusNextResponse = ResourceSkuResults & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceSkuResults;
    };
};

/**
 * Contains response data for the restore operation.
 */
export type ApiManagementServiceRestoreResponse = ApiManagementServiceResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApiManagementServiceResource;
    };
};

/**
 * Contains response data for the backup operation.
 */
export type ApiManagementServiceBackupResponse = ApiManagementServiceResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApiManagementServiceResource;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ApiManagementServiceCreateOrUpdateResponse = ApiManagementServiceResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApiManagementServiceResource;
    };
};

/**
 * Contains response data for the update operation.
 */
export type ApiManagementServiceUpdateResponse = ApiManagementServiceResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApiManagementServiceResource;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ApiManagementServiceGetResponse = ApiManagementServiceResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApiManagementServiceResource;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type ApiManagementServiceListByResourceGroupResponse = ApiManagementServiceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApiManagementServiceListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type ApiManagementServiceListResponse = ApiManagementServiceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApiManagementServiceListResult;
    };
};

/**
 * Contains response data for the getSsoToken operation.
 */
export type ApiManagementServiceGetSsoTokenResponse = ApiManagementServiceGetSsoTokenResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApiManagementServiceGetSsoTokenResult;
    };
};

/**
 * Contains response data for the checkNameAvailability operation.
 */
export type ApiManagementServiceCheckNameAvailabilityResponse = ApiManagementServiceNameAvailabilityResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApiManagementServiceNameAvailabilityResult;
    };
};

/**
 * Contains response data for the applyNetworkConfigurationUpdates operation.
 */
export type ApiManagementServiceApplyNetworkConfigurationUpdatesResponse = ApiManagementServiceResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApiManagementServiceResource;
    };
};

/**
 * Contains response data for the uploadCertificate operation.
 */
export type ApiManagementServiceUploadCertificateResponse = CertificateInformation & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CertificateInformation;
    };
};

/**
 * Contains response data for the updateHostname operation.
 */
export type ApiManagementServiceUpdateHostnameResponse = ApiManagementServiceResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApiManagementServiceResource;
    };
};

/**
 * Contains response data for the beginRestore operation.
 */
export type ApiManagementServiceBeginRestoreResponse = ApiManagementServiceResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApiManagementServiceResource;
    };
};

/**
 * Contains response data for the beginBackup operation.
 */
export type ApiManagementServiceBeginBackupResponse = ApiManagementServiceResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApiManagementServiceResource;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type ApiManagementServiceBeginCreateOrUpdateResponse = ApiManagementServiceResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApiManagementServiceResource;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type ApiManagementServiceBeginUpdateResponse = ApiManagementServiceResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApiManagementServiceResource;
    };
};

/**
 * Contains response data for the beginApplyNetworkConfigurationUpdates operation.
 */
export type ApiManagementServiceBeginApplyNetworkConfigurationUpdatesResponse = ApiManagementServiceResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApiManagementServiceResource;
    };
};

/**
 * Contains response data for the beginUpdateHostname operation.
 */
export type ApiManagementServiceBeginUpdateHostnameResponse = ApiManagementServiceResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApiManagementServiceResource;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type ApiManagementServiceListByResourceGroupNextResponse = ApiManagementServiceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApiManagementServiceListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type ApiManagementServiceListNextResponse = ApiManagementServiceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApiManagementServiceListResult;
    };
};

/**
 * Contains response data for the listByService operation.
 */
export type DiagnosticListByServiceResponse = DiagnosticCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiagnosticCollection;
    };
};

/**
 * Contains response data for the getEntityTag operation.
 */
export type DiagnosticGetEntityTagResponse = DiagnosticGetEntityTagHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: DiagnosticGetEntityTagHeaders;
    };
};

/**
 * Contains response data for the get operation.
 */
export type DiagnosticGetResponse = DiagnosticContract & DiagnosticGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: DiagnosticGetHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiagnosticContract;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type DiagnosticCreateOrUpdateResponse = DiagnosticContract & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiagnosticContract;
    };
};

/**
 * Contains response data for the listByServiceNext operation.
 */
export type DiagnosticListByServiceNextResponse = DiagnosticCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiagnosticCollection;
    };
};

/**
 * Contains response data for the listByService operation.
 */
export type DiagnosticLoggerListByServiceResponse = LoggerCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LoggerCollection;
    };
};

/**
 * Contains response data for the checkEntityExists operation.
 */
export type DiagnosticLoggerCheckEntityExistsResponse = {
  /**
   * The parsed response body.
   */
  body: boolean;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: boolean;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type DiagnosticLoggerCreateOrUpdateResponse = LoggerContract & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LoggerContract;
    };
};

/**
 * Contains response data for the listByServiceNext operation.
 */
export type DiagnosticLoggerListByServiceNextResponse = LoggerCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LoggerCollection;
    };
};

/**
 * Contains response data for the listByService operation.
 */
export type EmailTemplateListByServiceResponse = EmailTemplateCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EmailTemplateCollection;
    };
};

/**
 * Contains response data for the getEntityTag operation.
 */
export type EmailTemplateGetEntityTagResponse = EmailTemplateGetEntityTagHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: EmailTemplateGetEntityTagHeaders;
    };
};

/**
 * Contains response data for the get operation.
 */
export type EmailTemplateGetResponse = EmailTemplateContract & EmailTemplateGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: EmailTemplateGetHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EmailTemplateContract;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type EmailTemplateCreateOrUpdateResponse = EmailTemplateContract & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EmailTemplateContract;
    };
};

/**
 * Contains response data for the listByServiceNext operation.
 */
export type EmailTemplateListByServiceNextResponse = EmailTemplateCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EmailTemplateCollection;
    };
};

/**
 * Contains response data for the listByService operation.
 */
export type GroupListByServiceResponse = GroupCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GroupCollection;
    };
};

/**
 * Contains response data for the getEntityTag operation.
 */
export type GroupGetEntityTagResponse = GroupGetEntityTagHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: GroupGetEntityTagHeaders;
    };
};

/**
 * Contains response data for the get operation.
 */
export type GroupGetResponse = GroupContract & GroupGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: GroupGetHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GroupContract;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type GroupCreateOrUpdateResponse = GroupContract & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GroupContract;
    };
};

/**
 * Contains response data for the listByServiceNext operation.
 */
export type GroupListByServiceNextResponse = GroupCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GroupCollection;
    };
};

/**
 * Contains response data for the list operation.
 */
export type GroupUserListResponse = UserCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: UserCollection;
    };
};

/**
 * Contains response data for the checkEntityExists operation.
 */
export type GroupUserCheckEntityExistsResponse = {
  /**
   * The parsed response body.
   */
  body: boolean;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: boolean;
    };
};

/**
 * Contains response data for the create operation.
 */
export type GroupUserCreateResponse = UserContract & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: UserContract;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type GroupUserListNextResponse = UserCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: UserCollection;
    };
};

/**
 * Contains response data for the listByService operation.
 */
export type IdentityProviderListByServiceResponse = IdentityProviderList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IdentityProviderList;
    };
};

/**
 * Contains response data for the getEntityTag operation.
 */
export type IdentityProviderGetEntityTagResponse = IdentityProviderGetEntityTagHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: IdentityProviderGetEntityTagHeaders;
    };
};

/**
 * Contains response data for the get operation.
 */
export type IdentityProviderGetResponse = IdentityProviderContract & IdentityProviderGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: IdentityProviderGetHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IdentityProviderContract;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type IdentityProviderCreateOrUpdateResponse = IdentityProviderContract & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IdentityProviderContract;
    };
};

/**
 * Contains response data for the listByServiceNext operation.
 */
export type IdentityProviderListByServiceNextResponse = IdentityProviderList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IdentityProviderList;
    };
};

/**
 * Contains response data for the listByService operation.
 */
export type LoggerListByServiceResponse = LoggerCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LoggerCollection;
    };
};

/**
 * Contains response data for the getEntityTag operation.
 */
export type LoggerGetEntityTagResponse = LoggerGetEntityTagHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LoggerGetEntityTagHeaders;
    };
};

/**
 * Contains response data for the get operation.
 */
export type LoggerGetResponse = LoggerContract & LoggerGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LoggerGetHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LoggerContract;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type LoggerCreateOrUpdateResponse = LoggerContract & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LoggerContract;
    };
};

/**
 * Contains response data for the listByServiceNext operation.
 */
export type LoggerListByServiceNextResponse = LoggerCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LoggerCollection;
    };
};

/**
 * Contains response data for the listByService operation.
 */
export type NotificationListByServiceResponse = NotificationCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NotificationCollection;
    };
};

/**
 * Contains response data for the get operation.
 */
export type NotificationGetResponse = NotificationContract & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NotificationContract;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type NotificationCreateOrUpdateResponse = NotificationContract & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NotificationContract;
    };
};

/**
 * Contains response data for the listByServiceNext operation.
 */
export type NotificationListByServiceNextResponse = NotificationCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NotificationCollection;
    };
};

/**
 * Contains response data for the listByNotification operation.
 */
export type NotificationRecipientUserListByNotificationResponse = RecipientUserCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecipientUserCollection;
    };
};

/**
 * Contains response data for the checkEntityExists operation.
 */
export type NotificationRecipientUserCheckEntityExistsResponse = {
  /**
   * The parsed response body.
   */
  body: boolean;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: boolean;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type NotificationRecipientUserCreateOrUpdateResponse = RecipientUserContract & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecipientUserContract;
    };
};

/**
 * Contains response data for the listByNotification operation.
 */
export type NotificationRecipientEmailListByNotificationResponse = RecipientEmailCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecipientEmailCollection;
    };
};

/**
 * Contains response data for the checkEntityExists operation.
 */
export type NotificationRecipientEmailCheckEntityExistsResponse = {
  /**
   * The parsed response body.
   */
  body: boolean;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: boolean;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type NotificationRecipientEmailCreateOrUpdateResponse = RecipientEmailContract & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecipientEmailContract;
    };
};

/**
 * Contains response data for the listByService operation.
 */
export type NetworkStatusListByServiceResponse = Array<NetworkStatusContractByLocation> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NetworkStatusContractByLocation[];
    };
};

/**
 * Contains response data for the listByLocation operation.
 */
export type NetworkStatusListByLocationResponse = NetworkStatusContract & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NetworkStatusContract;
    };
};

/**
 * Contains response data for the listByService operation.
 */
export type OpenIdConnectProviderListByServiceResponse = OpenIdConnectProviderCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OpenIdConnectProviderCollection;
    };
};

/**
 * Contains response data for the getEntityTag operation.
 */
export type OpenIdConnectProviderGetEntityTagResponse = OpenIdConnectProviderGetEntityTagHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: OpenIdConnectProviderGetEntityTagHeaders;
    };
};

/**
 * Contains response data for the get operation.
 */
export type OpenIdConnectProviderGetResponse = OpenidConnectProviderContract & OpenIdConnectProviderGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: OpenIdConnectProviderGetHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OpenidConnectProviderContract;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type OpenIdConnectProviderCreateOrUpdateResponse = OpenidConnectProviderContract & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OpenidConnectProviderContract;
    };
};

/**
 * Contains response data for the listByServiceNext operation.
 */
export type OpenIdConnectProviderListByServiceNextResponse = OpenIdConnectProviderCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OpenIdConnectProviderCollection;
    };
};

/**
 * Contains response data for the getEntityTag operation.
 */
export type SignInSettingsGetEntityTagResponse = SignInSettingsGetEntityTagHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: SignInSettingsGetEntityTagHeaders;
    };
};

/**
 * Contains response data for the get operation.
 */
export type SignInSettingsGetResponse = PortalSigninSettings & SignInSettingsGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: SignInSettingsGetHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PortalSigninSettings;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type SignInSettingsCreateOrUpdateResponse = PortalSigninSettings & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PortalSigninSettings;
    };
};

/**
 * Contains response data for the getEntityTag operation.
 */
export type SignUpSettingsGetEntityTagResponse = SignUpSettingsGetEntityTagHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: SignUpSettingsGetEntityTagHeaders;
    };
};

/**
 * Contains response data for the get operation.
 */
export type SignUpSettingsGetResponse = PortalSignupSettings & SignUpSettingsGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: SignUpSettingsGetHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PortalSignupSettings;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type SignUpSettingsCreateOrUpdateResponse = PortalSignupSettings & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PortalSignupSettings;
    };
};

/**
 * Contains response data for the getEntityTag operation.
 */
export type DelegationSettingsGetEntityTagResponse = DelegationSettingsGetEntityTagHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: DelegationSettingsGetEntityTagHeaders;
    };
};

/**
 * Contains response data for the get operation.
 */
export type DelegationSettingsGetResponse = PortalDelegationSettings & DelegationSettingsGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: DelegationSettingsGetHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PortalDelegationSettings;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type DelegationSettingsCreateOrUpdateResponse = PortalDelegationSettings & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PortalDelegationSettings;
    };
};

/**
 * Contains response data for the listByService operation.
 */
export type ProductListByServiceResponse = ProductCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProductCollection;
    };
};

/**
 * Contains response data for the getEntityTag operation.
 */
export type ProductGetEntityTagResponse = ProductGetEntityTagHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ProductGetEntityTagHeaders;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ProductGetResponse = ProductContract & ProductGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ProductGetHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProductContract;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ProductCreateOrUpdateResponse = ProductContract & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProductContract;
    };
};

/**
 * Contains response data for the listByServiceNext operation.
 */
export type ProductListByServiceNextResponse = ProductCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProductCollection;
    };
};

/**
 * Contains response data for the listByProduct operation.
 */
export type ProductApiListByProductResponse = ApiCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApiCollection;
    };
};

/**
 * Contains response data for the checkEntityExists operation.
 */
export type ProductApiCheckEntityExistsResponse = {
  /**
   * The parsed response body.
   */
  body: boolean;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: boolean;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ProductApiCreateOrUpdateResponse = ApiContract & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApiContract;
    };
};

/**
 * Contains response data for the listByProductNext operation.
 */
export type ProductApiListByProductNextResponse = ApiCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApiCollection;
    };
};

/**
 * Contains response data for the listByProduct operation.
 */
export type ProductGroupListByProductResponse = GroupCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GroupCollection;
    };
};

/**
 * Contains response data for the checkEntityExists operation.
 */
export type ProductGroupCheckEntityExistsResponse = {
  /**
   * The parsed response body.
   */
  body: boolean;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: boolean;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ProductGroupCreateOrUpdateResponse = GroupContract & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GroupContract;
    };
};

/**
 * Contains response data for the listByProductNext operation.
 */
export type ProductGroupListByProductNextResponse = GroupCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GroupCollection;
    };
};

/**
 * Contains response data for the list operation.
 */
export type ProductSubscriptionsListResponse = SubscriptionCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SubscriptionCollection;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type ProductSubscriptionsListNextResponse = SubscriptionCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SubscriptionCollection;
    };
};

/**
 * Contains response data for the listByProduct operation.
 */
export type ProductPolicyListByProductResponse = PolicyCollection & ProductPolicyListByProductHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ProductPolicyListByProductHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyCollection;
    };
};

/**
 * Contains response data for the getEntityTag operation.
 */
export type ProductPolicyGetEntityTagResponse = ProductPolicyGetEntityTagHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ProductPolicyGetEntityTagHeaders;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ProductPolicyGetResponse = PolicyContract & ProductPolicyGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ProductPolicyGetHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyContract;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ProductPolicyCreateOrUpdateResponse = PolicyContract & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PolicyContract;
    };
};

/**
 * Contains response data for the listByService operation.
 */
export type PropertyListByServiceResponse = PropertyCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PropertyCollection;
    };
};

/**
 * Contains response data for the getEntityTag operation.
 */
export type PropertyGetEntityTagResponse = PropertyGetEntityTagHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: PropertyGetEntityTagHeaders;
    };
};

/**
 * Contains response data for the get operation.
 */
export type PropertyGetResponse = PropertyContract & PropertyGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: PropertyGetHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PropertyContract;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type PropertyCreateOrUpdateResponse = PropertyContract & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PropertyContract;
    };
};

/**
 * Contains response data for the listByServiceNext operation.
 */
export type PropertyListByServiceNextResponse = PropertyCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PropertyCollection;
    };
};

/**
 * Contains response data for the listByService operation.
 */
export type QuotaByCounterKeysListByServiceResponse = QuotaCounterCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: QuotaCounterCollection;
    };
};

/**
 * Contains response data for the get operation.
 */
export type QuotaByPeriodKeysGetResponse = QuotaCounterContract & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: QuotaCounterContract;
    };
};

/**
 * Contains response data for the listByApi operation.
 */
export type ReportsListByApiResponse = ReportCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReportCollection;
    };
};

/**
 * Contains response data for the listByUser operation.
 */
export type ReportsListByUserResponse = ReportCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReportCollection;
    };
};

/**
 * Contains response data for the listByOperation operation.
 */
export type ReportsListByOperationResponse = ReportCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReportCollection;
    };
};

/**
 * Contains response data for the listByProduct operation.
 */
export type ReportsListByProductResponse = ReportCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReportCollection;
    };
};

/**
 * Contains response data for the listByGeo operation.
 */
export type ReportsListByGeoResponse = ReportCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReportCollection;
    };
};

/**
 * Contains response data for the listBySubscription operation.
 */
export type ReportsListBySubscriptionResponse = ReportCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReportCollection;
    };
};

/**
 * Contains response data for the listByTime operation.
 */
export type ReportsListByTimeResponse = ReportCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReportCollection;
    };
};

/**
 * Contains response data for the listByRequest operation.
 */
export type ReportsListByRequestResponse = RequestReportCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RequestReportCollection;
    };
};

/**
 * Contains response data for the listByApiNext operation.
 */
export type ReportsListByApiNextResponse = ReportCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReportCollection;
    };
};

/**
 * Contains response data for the listByUserNext operation.
 */
export type ReportsListByUserNextResponse = ReportCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReportCollection;
    };
};

/**
 * Contains response data for the listByOperationNext operation.
 */
export type ReportsListByOperationNextResponse = ReportCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReportCollection;
    };
};

/**
 * Contains response data for the listByProductNext operation.
 */
export type ReportsListByProductNextResponse = ReportCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReportCollection;
    };
};

/**
 * Contains response data for the listByGeoNext operation.
 */
export type ReportsListByGeoNextResponse = ReportCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReportCollection;
    };
};

/**
 * Contains response data for the listBySubscriptionNext operation.
 */
export type ReportsListBySubscriptionNextResponse = ReportCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReportCollection;
    };
};

/**
 * Contains response data for the listByTimeNext operation.
 */
export type ReportsListByTimeNextResponse = ReportCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReportCollection;
    };
};

/**
 * Contains response data for the list operation.
 */
export type SubscriptionListResponse = SubscriptionCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SubscriptionCollection;
    };
};

/**
 * Contains response data for the getEntityTag operation.
 */
export type SubscriptionGetEntityTagResponse = SubscriptionGetEntityTagHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: SubscriptionGetEntityTagHeaders;
    };
};

/**
 * Contains response data for the get operation.
 */
export type SubscriptionGetResponse = SubscriptionContract & SubscriptionGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: SubscriptionGetHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SubscriptionContract;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type SubscriptionCreateOrUpdateResponse = SubscriptionContract & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SubscriptionContract;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type SubscriptionListNextResponse = SubscriptionCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SubscriptionCollection;
    };
};

/**
 * Contains response data for the listByService operation.
 */
export type TagResourceListByServiceResponse = TagResourceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TagResourceCollection;
    };
};

/**
 * Contains response data for the listByServiceNext operation.
 */
export type TagResourceListByServiceNextResponse = TagResourceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TagResourceCollection;
    };
};

/**
 * Contains response data for the listByService operation.
 */
export type TagListByServiceResponse = TagCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TagCollection;
    };
};

/**
 * Contains response data for the getEntityState operation.
 */
export type TagGetEntityStateResponse = TagGetEntityStateHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: TagGetEntityStateHeaders;
    };
};

/**
 * Contains response data for the get operation.
 */
export type TagGetResponse = TagContract & TagGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: TagGetHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TagContract;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type TagCreateOrUpdateResponse = TagContract & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TagContract;
    };
};

/**
 * Contains response data for the listByApi operation.
 */
export type TagListByApiResponse = TagCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TagCollection;
    };
};

/**
 * Contains response data for the getEntityStateByApi operation.
 */
export type TagGetEntityStateByApiResponse = TagGetEntityStateByApiHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: TagGetEntityStateByApiHeaders;
    };
};

/**
 * Contains response data for the getByApi operation.
 */
export type TagGetByApiResponse = TagContract & TagGetByApiHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: TagGetByApiHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TagContract;
    };
};

/**
 * Contains response data for the assignToApi operation.
 */
export type TagAssignToApiResponse = TagContract & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TagContract;
    };
};

/**
 * Contains response data for the listByOperation operation.
 */
export type TagListByOperationResponse = TagCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TagCollection;
    };
};

/**
 * Contains response data for the getEntityStateByOperation operation.
 */
export type TagGetEntityStateByOperationResponse = TagGetEntityStateByOperationHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: TagGetEntityStateByOperationHeaders;
    };
};

/**
 * Contains response data for the getByOperation operation.
 */
export type TagGetByOperationResponse = TagContract & TagGetByOperationHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: TagGetByOperationHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TagContract;
    };
};

/**
 * Contains response data for the assignToOperation operation.
 */
export type TagAssignToOperationResponse = TagContract & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TagContract;
    };
};

/**
 * Contains response data for the listByProduct operation.
 */
export type TagListByProductResponse = TagCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TagCollection;
    };
};

/**
 * Contains response data for the getEntityStateByProduct operation.
 */
export type TagGetEntityStateByProductResponse = TagGetEntityStateByProductHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: TagGetEntityStateByProductHeaders;
    };
};

/**
 * Contains response data for the getByProduct operation.
 */
export type TagGetByProductResponse = TagContract & TagGetByProductHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: TagGetByProductHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TagContract;
    };
};

/**
 * Contains response data for the assignToProduct operation.
 */
export type TagAssignToProductResponse = TagContract & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TagContract;
    };
};

/**
 * Contains response data for the listByServiceNext operation.
 */
export type TagListByServiceNextResponse = TagCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TagCollection;
    };
};

/**
 * Contains response data for the listByApiNext operation.
 */
export type TagListByApiNextResponse = TagCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TagCollection;
    };
};

/**
 * Contains response data for the listByOperationNext operation.
 */
export type TagListByOperationNextResponse = TagCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TagCollection;
    };
};

/**
 * Contains response data for the listByProductNext operation.
 */
export type TagListByProductNextResponse = TagCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TagCollection;
    };
};

/**
 * Contains response data for the listByApi operation.
 */
export type TagDescriptionListByApiResponse = TagDescriptionCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TagDescriptionCollection;
    };
};

/**
 * Contains response data for the getEntityState operation.
 */
export type TagDescriptionGetEntityStateResponse = TagDescriptionGetEntityStateHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: TagDescriptionGetEntityStateHeaders;
    };
};

/**
 * Contains response data for the get operation.
 */
export type TagDescriptionGetResponse = TagDescriptionContract & TagDescriptionGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: TagDescriptionGetHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TagDescriptionContract;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type TagDescriptionCreateOrUpdateResponse = TagDescriptionContract & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TagDescriptionContract;
    };
};

/**
 * Contains response data for the listByApiNext operation.
 */
export type TagDescriptionListByApiNextResponse = TagDescriptionCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TagDescriptionCollection;
    };
};

/**
 * Contains response data for the listByTags operation.
 */
export type OperationListByTagsResponse = TagResourceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TagResourceCollection;
    };
};

/**
 * Contains response data for the listByTagsNext operation.
 */
export type OperationListByTagsNextResponse = TagResourceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TagResourceCollection;
    };
};

/**
 * Contains response data for the get operation.
 */
export type TenantAccessGetResponse = AccessInformationContract & TenantAccessGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: TenantAccessGetHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AccessInformationContract;
    };
};

/**
 * Contains response data for the get operation.
 */
export type TenantAccessGitGetResponse = AccessInformationContract & TenantAccessGitGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: TenantAccessGitGetHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AccessInformationContract;
    };
};

/**
 * Contains response data for the deploy operation.
 */
export type TenantConfigurationDeployResponse = OperationResultContract & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationResultContract;
    };
};

/**
 * Contains response data for the save operation.
 */
export type TenantConfigurationSaveResponse = OperationResultContract & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationResultContract;
    };
};

/**
 * Contains response data for the validate operation.
 */
export type TenantConfigurationValidateResponse = OperationResultContract & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationResultContract;
    };
};

/**
 * Contains response data for the getSyncState operation.
 */
export type TenantConfigurationGetSyncStateResponse = TenantConfigurationSyncStateContract & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TenantConfigurationSyncStateContract;
    };
};

/**
 * Contains response data for the beginDeploy operation.
 */
export type TenantConfigurationBeginDeployResponse = OperationResultContract & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationResultContract;
    };
};

/**
 * Contains response data for the beginSave operation.
 */
export type TenantConfigurationBeginSaveResponse = OperationResultContract & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationResultContract;
    };
};

/**
 * Contains response data for the beginValidate operation.
 */
export type TenantConfigurationBeginValidateResponse = OperationResultContract & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationResultContract;
    };
};

/**
 * Contains response data for the getIdentity operation.
 */
export type UserGetIdentityResponse = CurrentUserIdentity & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CurrentUserIdentity;
    };
};

/**
 * Contains response data for the listByService operation.
 */
export type UserListByServiceResponse = UserCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: UserCollection;
    };
};

/**
 * Contains response data for the getEntityTag operation.
 */
export type UserGetEntityTagResponse = UserGetEntityTagHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: UserGetEntityTagHeaders;
    };
};

/**
 * Contains response data for the get operation.
 */
export type UserGetResponse = UserContract & UserGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: UserGetHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: UserContract;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type UserCreateOrUpdateResponse = UserContract & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: UserContract;
    };
};

/**
 * Contains response data for the generateSsoUrl operation.
 */
export type UserGenerateSsoUrlResponse = GenerateSsoUrlResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GenerateSsoUrlResult;
    };
};

/**
 * Contains response data for the getSharedAccessToken operation.
 */
export type UserGetSharedAccessTokenResponse = UserTokenResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: UserTokenResult;
    };
};

/**
 * Contains response data for the listByServiceNext operation.
 */
export type UserListByServiceNextResponse = UserCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: UserCollection;
    };
};

/**
 * Contains response data for the list operation.
 */
export type UserGroupListResponse = GroupCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GroupCollection;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type UserGroupListNextResponse = GroupCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GroupCollection;
    };
};

/**
 * Contains response data for the list operation.
 */
export type UserSubscriptionListResponse = SubscriptionCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SubscriptionCollection;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type UserSubscriptionListNextResponse = SubscriptionCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SubscriptionCollection;
    };
};

/**
 * Contains response data for the list operation.
 */
export type UserIdentitiesListResponse = UserIdentityCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: UserIdentityCollection;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type UserIdentitiesListNextResponse = UserIdentityCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: UserIdentityCollection;
    };
};

/**
 * Contains response data for the listByService operation.
 */
export type ApiVersionSetListByServiceResponse = ApiVersionSetCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApiVersionSetCollection;
    };
};

/**
 * Contains response data for the getEntityTag operation.
 */
export type ApiVersionSetGetEntityTagResponse = ApiVersionSetGetEntityTagHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ApiVersionSetGetEntityTagHeaders;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ApiVersionSetGetResponse = ApiVersionSetContract & ApiVersionSetGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ApiVersionSetGetHeaders;
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApiVersionSetContract;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ApiVersionSetCreateOrUpdateResponse = ApiVersionSetContract & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApiVersionSetContract;
    };
};

/**
 * Contains response data for the listByServiceNext operation.
 */
export type ApiVersionSetListByServiceNextResponse = ApiVersionSetCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApiVersionSetCollection;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ApiExportGetResponse = ApiExportResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApiExportResult;
    };
};
