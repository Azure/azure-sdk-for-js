/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/commitmentAssociationsMappers";
import * as Parameters from "../models/parameters";
import { AzureMLCommitmentPlansManagementClientContext } from "../azureMLCommitmentPlansManagementClientContext";

/** Class representing a CommitmentAssociations. */
export class CommitmentAssociations {
  private readonly client: AzureMLCommitmentPlansManagementClientContext;

  /**
   * Create a CommitmentAssociations.
   * @param {AzureMLCommitmentPlansManagementClientContext} client Reference to the service client.
   */
  constructor(client: AzureMLCommitmentPlansManagementClientContext) {
    this.client = client;
  }

  /**
   * Get a commitment association.
   * @param resourceGroupName The resource group name.
   * @param commitmentPlanName The Azure ML commitment plan name.
   * @param commitmentAssociationName The commitment association name.
   * @param [options] The optional parameters
   * @returns Promise<Models.CommitmentAssociationsGetResponse>
   */
  get(resourceGroupName: string, commitmentPlanName: string, commitmentAssociationName: string, options?: msRest.RequestOptionsBase): Promise<Models.CommitmentAssociationsGetResponse>;
  /**
   * @param resourceGroupName The resource group name.
   * @param commitmentPlanName The Azure ML commitment plan name.
   * @param commitmentAssociationName The commitment association name.
   * @param callback The callback
   */
  get(resourceGroupName: string, commitmentPlanName: string, commitmentAssociationName: string, callback: msRest.ServiceCallback<Models.CommitmentAssociation>): void;
  /**
   * @param resourceGroupName The resource group name.
   * @param commitmentPlanName The Azure ML commitment plan name.
   * @param commitmentAssociationName The commitment association name.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(resourceGroupName: string, commitmentPlanName: string, commitmentAssociationName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.CommitmentAssociation>): void;
  get(resourceGroupName: string, commitmentPlanName: string, commitmentAssociationName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.CommitmentAssociation>, callback?: msRest.ServiceCallback<Models.CommitmentAssociation>): Promise<Models.CommitmentAssociationsGetResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        commitmentPlanName,
        commitmentAssociationName,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.CommitmentAssociationsGetResponse>;
  }

  /**
   * Get all commitment associations for a parent commitment plan.
   * @param resourceGroupName The resource group name.
   * @param commitmentPlanName The Azure ML commitment plan name.
   * @param [options] The optional parameters
   * @returns Promise<Models.CommitmentAssociationsListResponse>
   */
  list(resourceGroupName: string, commitmentPlanName: string, options?: Models.CommitmentAssociationsListOptionalParams): Promise<Models.CommitmentAssociationsListResponse>;
  /**
   * @param resourceGroupName The resource group name.
   * @param commitmentPlanName The Azure ML commitment plan name.
   * @param callback The callback
   */
  list(resourceGroupName: string, commitmentPlanName: string, callback: msRest.ServiceCallback<Models.CommitmentAssociationListResult>): void;
  /**
   * @param resourceGroupName The resource group name.
   * @param commitmentPlanName The Azure ML commitment plan name.
   * @param options The optional parameters
   * @param callback The callback
   */
  list(resourceGroupName: string, commitmentPlanName: string, options: Models.CommitmentAssociationsListOptionalParams, callback: msRest.ServiceCallback<Models.CommitmentAssociationListResult>): void;
  list(resourceGroupName: string, commitmentPlanName: string, options?: Models.CommitmentAssociationsListOptionalParams | msRest.ServiceCallback<Models.CommitmentAssociationListResult>, callback?: msRest.ServiceCallback<Models.CommitmentAssociationListResult>): Promise<Models.CommitmentAssociationsListResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        commitmentPlanName,
        options
      },
      listOperationSpec,
      callback) as Promise<Models.CommitmentAssociationsListResponse>;
  }

  /**
   * Re-parent a commitment association from one commitment plan to another.
   * @param resourceGroupName The resource group name.
   * @param commitmentPlanName The Azure ML commitment plan name.
   * @param commitmentAssociationName The commitment association name.
   * @param movePayload The move request payload.
   * @param [options] The optional parameters
   * @returns Promise<Models.CommitmentAssociationsMoveResponse>
   */
  move(resourceGroupName: string, commitmentPlanName: string, commitmentAssociationName: string, movePayload: Models.MoveCommitmentAssociationRequest, options?: msRest.RequestOptionsBase): Promise<Models.CommitmentAssociationsMoveResponse>;
  /**
   * @param resourceGroupName The resource group name.
   * @param commitmentPlanName The Azure ML commitment plan name.
   * @param commitmentAssociationName The commitment association name.
   * @param movePayload The move request payload.
   * @param callback The callback
   */
  move(resourceGroupName: string, commitmentPlanName: string, commitmentAssociationName: string, movePayload: Models.MoveCommitmentAssociationRequest, callback: msRest.ServiceCallback<Models.CommitmentAssociation>): void;
  /**
   * @param resourceGroupName The resource group name.
   * @param commitmentPlanName The Azure ML commitment plan name.
   * @param commitmentAssociationName The commitment association name.
   * @param movePayload The move request payload.
   * @param options The optional parameters
   * @param callback The callback
   */
  move(resourceGroupName: string, commitmentPlanName: string, commitmentAssociationName: string, movePayload: Models.MoveCommitmentAssociationRequest, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.CommitmentAssociation>): void;
  move(resourceGroupName: string, commitmentPlanName: string, commitmentAssociationName: string, movePayload: Models.MoveCommitmentAssociationRequest, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.CommitmentAssociation>, callback?: msRest.ServiceCallback<Models.CommitmentAssociation>): Promise<Models.CommitmentAssociationsMoveResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        commitmentPlanName,
        commitmentAssociationName,
        movePayload,
        options
      },
      moveOperationSpec,
      callback) as Promise<Models.CommitmentAssociationsMoveResponse>;
  }

  /**
   * Get all commitment associations for a parent commitment plan.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.CommitmentAssociationsListNextResponse>
   */
  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.CommitmentAssociationsListNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.CommitmentAssociationListResult>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.CommitmentAssociationListResult>): void;
  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.CommitmentAssociationListResult>, callback?: msRest.ServiceCallback<Models.CommitmentAssociationListResult>): Promise<Models.CommitmentAssociationsListNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listNextOperationSpec,
      callback) as Promise<Models.CommitmentAssociationsListNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearning/commitmentPlans/{commitmentPlanName}/commitmentAssociations/{commitmentAssociationName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.commitmentPlanName,
    Parameters.commitmentAssociationName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.CommitmentAssociation
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearning/commitmentPlans/{commitmentPlanName}/commitmentAssociations",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.commitmentPlanName
  ],
  queryParameters: [
    Parameters.skipToken,
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.CommitmentAssociationListResult
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const moveOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearning/commitmentPlans/{commitmentPlanName}/commitmentAssociations/{commitmentAssociationName}/move",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.commitmentPlanName,
    Parameters.commitmentAssociationName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "movePayload",
    mapper: {
      ...Mappers.MoveCommitmentAssociationRequest,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.CommitmentAssociation
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.CommitmentAssociationListResult
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};
