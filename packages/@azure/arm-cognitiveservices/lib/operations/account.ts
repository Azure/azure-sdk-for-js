/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/accountMappers";
import * as Parameters from "../models/parameters";
import { CognitiveServicesManagementClientContext } from "../cognitiveServicesManagementClientContext";

/** Class representing a Account. */
export class Account {
  private readonly client: CognitiveServicesManagementClientContext;

  /**
   * Create a Account.
   * @param {CognitiveServicesManagementClientContext} client Reference to the service client.
   */
  constructor(client: CognitiveServicesManagementClientContext) {
    this.client = client;
  }

  /**
   * Check available SKUs.
   * @param location Resource location.
   * @param subdomainName The subdomain name to use.
   * @param type The Type of the resource.
   * @param [options] The optional parameters
   * @returns Promise<Models.AccountCheckDomainAvailabilityPostResponse>
   */
  checkDomainAvailabilityPost(location: string, subdomainName: string, type: string, options?: msRest.RequestOptionsBase): Promise<Models.AccountCheckDomainAvailabilityPostResponse>;
  /**
   * @param location Resource location.
   * @param subdomainName The subdomain name to use.
   * @param type The Type of the resource.
   * @param callback The callback
   */
  checkDomainAvailabilityPost(location: string, subdomainName: string, type: string, callback: msRest.ServiceCallback<Models.CheckDomainAvailabilityResult>): void;
  /**
   * @param location Resource location.
   * @param subdomainName The subdomain name to use.
   * @param type The Type of the resource.
   * @param options The optional parameters
   * @param callback The callback
   */
  checkDomainAvailabilityPost(location: string, subdomainName: string, type: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.CheckDomainAvailabilityResult>): void;
  checkDomainAvailabilityPost(location: string, subdomainName: string, type: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.CheckDomainAvailabilityResult>, callback?: msRest.ServiceCallback<Models.CheckDomainAvailabilityResult>): Promise<Models.AccountCheckDomainAvailabilityPostResponse> {
    return this.client.sendOperationRequest(
      {
        location,
        subdomainName,
        type,
        options
      },
      checkDomainAvailabilityPostOperationSpec,
      callback) as Promise<Models.AccountCheckDomainAvailabilityPostResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const checkDomainAvailabilityPostOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "subscriptions/{subscriptionId}/providers/Microsoft.CognitiveServices/locations/{location}/checkDomainAvailability",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.location
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: {
      subdomainName: "subdomainName",
      type: "type"
    },
    mapper: {
      ...Mappers.CheckDomainAvailabilityParameter,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.CheckDomainAvailabilityResult
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};
