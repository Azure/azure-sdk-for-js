/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/workspacesMappers";
import * as Parameters from "../models/parameters";
import { PowerBIEmbeddedManagementClientContext } from "../powerBIEmbeddedManagementClientContext";

/** Class representing a Workspaces. */
export class Workspaces {
  private readonly client: PowerBIEmbeddedManagementClientContext;

  /**
   * Create a Workspaces.
   * @param {PowerBIEmbeddedManagementClientContext} client Reference to the service client.
   */
  constructor(client: PowerBIEmbeddedManagementClientContext) {
    this.client = client;
  }

  /**
   * Retrieves all existing Power BI workspaces in the specified workspace collection.
   * @param resourceGroupName Azure resource group
   * @param workspaceCollectionName Power BI Embedded Workspace Collection name
   * @param [options] The optional parameters
   * @returns Promise<Models.WorkspacesListResponse>
   */
  list(resourceGroupName: string, workspaceCollectionName: string, options?: msRest.RequestOptionsBase): Promise<Models.WorkspacesListResponse>;
  /**
   * @param resourceGroupName Azure resource group
   * @param workspaceCollectionName Power BI Embedded Workspace Collection name
   * @param callback The callback
   */
  list(resourceGroupName: string, workspaceCollectionName: string, callback: msRest.ServiceCallback<Models.WorkspaceList>): void;
  /**
   * @param resourceGroupName Azure resource group
   * @param workspaceCollectionName Power BI Embedded Workspace Collection name
   * @param options The optional parameters
   * @param callback The callback
   */
  list(resourceGroupName: string, workspaceCollectionName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.WorkspaceList>): void;
  list(resourceGroupName: string, workspaceCollectionName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.WorkspaceList>, callback?: msRest.ServiceCallback<Models.WorkspaceList>): Promise<Models.WorkspacesListResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        workspaceCollectionName,
        options
      },
      listOperationSpec,
      callback) as Promise<Models.WorkspacesListResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PowerBI/workspaceCollections/{workspaceCollectionName}/workspaces",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.workspaceCollectionName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.WorkspaceList
    },
    default: {
      bodyMapper: Mappers.ErrorModel
    }
  },
  serializer
};
