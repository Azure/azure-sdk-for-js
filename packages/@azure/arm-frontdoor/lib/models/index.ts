/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "ms-rest-azure-js";
import * as msRest from "ms-rest-js";

export { BaseResource, CloudError };


/**
 * @interface
 * An interface representing Resource.
 * Common resource representation.
 *
 * @extends BaseResource
 */
export interface Resource extends BaseResource {
  /**
   * @member {string} [id] Resource ID.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [name] Resource name.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [type] Resource type.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: string;
  /**
   * @member {string} [location] Resource location.
   */
  location?: string;
  /**
   * @member {{ [propertyName: string]: string }} [tags] Resource tags.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * @interface
 * An interface representing FrontDoor.
 * Front Door represents a collection of backend endpoints to route traffic to
 * along with rules that specify how traffic is sent there.
 *
 * @extends Resource
 */
export interface FrontDoor extends Resource {
  /**
   * @member {string} [friendlyName] A friendly name for the frontDoor
   */
  friendlyName?: string;
  /**
   * @member {RoutingRule[]} [routingRules] Routing rules associated with this
   * Front Door.
   */
  routingRules?: RoutingRule[];
  /**
   * @member {LoadBalancingSettingsModel[]} [loadBalancingSettings] Load
   * balancing settings associated with this Front Door instance.
   */
  loadBalancingSettings?: LoadBalancingSettingsModel[];
  /**
   * @member {HealthProbeSettingsModel[]} [healthProbeSettings] Health probe
   * settings associated with this Front Door instance.
   */
  healthProbeSettings?: HealthProbeSettingsModel[];
  /**
   * @member {BackendPool[]} [backendPools] Backend pools available to routing
   * rules.
   */
  backendPools?: BackendPool[];
  /**
   * @member {FrontendEndpoint[]} [frontendEndpoints] Frontend endpoints
   * available to routing rules.
   */
  frontendEndpoints?: FrontendEndpoint[];
  /**
   * @member {FrontDoorEnabledState} [enabledState] Operational status of the
   * Front Door load balancer. Permitted values are 'Enabled' or 'Disabled'.
   * Possible values include: 'Enabled', 'Disabled'
   */
  enabledState?: FrontDoorEnabledState;
  /**
   * @member {FrontDoorResourceState} [resourceState] Resource status of the
   * Front Door. Possible values include: 'Creating', 'Enabling', 'Enabled',
   * 'Disabling', 'Disabled', 'Deleting'
   */
  resourceState?: FrontDoorResourceState;
  /**
   * @member {string} [provisioningState] Provisioning state of the Front Door.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provisioningState?: string;
  /**
   * @member {string} [cname] The host that each frontendEndpoint must CNAME
   * to.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly cname?: string;
}

/**
 * @interface
 * An interface representing SubResource.
 * Reference to another subresource.
 *
 * @extends BaseResource
 */
export interface SubResource extends BaseResource {
  /**
   * @member {string} [id] Resource ID.
   */
  id?: string;
}

/**
 * @interface
 * An interface representing RoutingRule.
 * A routing rule represents a specification for traffic to treat and where to
 * send it, along with health probe information.
 *
 * @extends SubResource
 */
export interface RoutingRule extends SubResource {
  /**
   * @member {SubResource[]} [frontendEndpoints] Frontend endpoints associated
   * with this rule
   */
  frontendEndpoints?: SubResource[];
  /**
   * @member {FrontDoorProtocol[]} [acceptedProtocols] Protocol schemes to
   * match for this rule
   */
  acceptedProtocols?: FrontDoorProtocol[];
  /**
   * @member {string[]} [patternsToMatch] The route patterns of the rule.
   */
  patternsToMatch?: string[];
  /**
   * @member {string} [customForwardingPath] A custom path used to rewrite
   * resource paths matched by this rule. Leave empty to use incoming path.
   */
  customForwardingPath?: string;
  /**
   * @member {FrontDoorForwardingProtocol} [forwardingProtocol] Protocol this
   * rule will use when forwarding traffic to backends. Possible values
   * include: 'HttpOnly', 'HttpsOnly', 'MatchRequest'
   */
  forwardingProtocol?: FrontDoorForwardingProtocol;
  /**
   * @member {CacheConfiguration} [cacheConfiguration] The caching
   * configuration associated with this rule.
   */
  cacheConfiguration?: CacheConfiguration;
  /**
   * @member {SubResource} [backendPool] A reference to the BackendPool which
   * this rule routes to.
   */
  backendPool?: SubResource;
  /**
   * @member {FrontDoorEnabledState} [enabledState] Whether to enable use of
   * this rule. Permitted values are 'Enabled' or 'Disabled'. Possible values
   * include: 'Enabled', 'Disabled'
   */
  enabledState?: FrontDoorEnabledState;
  /**
   * @member {FrontDoorResourceState} [resourceState] Resource status. Possible
   * values include: 'Creating', 'Enabling', 'Enabled', 'Disabling',
   * 'Disabled', 'Deleting'
   */
  resourceState?: FrontDoorResourceState;
  /**
   * @member {string} [name] Resource name.
   */
  name?: string;
  /**
   * @member {string} [type] Resource type.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: string;
}

/**
 * @interface
 * An interface representing LoadBalancingSettingsModel.
 * Load balancing settings for a backend pool
 *
 * @extends SubResource
 */
export interface LoadBalancingSettingsModel extends SubResource {
  /**
   * @member {number} [sampleSize] The number of samples to consider for load
   * balancing decisions
   */
  sampleSize?: number;
  /**
   * @member {number} [successfulSamplesRequired] The number of samples within
   * the sample period that must succeed
   */
  successfulSamplesRequired?: number;
  /**
   * @member {number} [additionalLatencyMilliseconds] The additional latency in
   * milliseconds for probes to fall into the lowest latency bucket
   */
  additionalLatencyMilliseconds?: number;
  /**
   * @member {FrontDoorResourceState} [resourceState] Resource status. Possible
   * values include: 'Creating', 'Enabling', 'Enabled', 'Disabling',
   * 'Disabled', 'Deleting'
   */
  resourceState?: FrontDoorResourceState;
  /**
   * @member {string} [name] Resource name.
   */
  name?: string;
  /**
   * @member {string} [type] Resource type.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: string;
}

/**
 * @interface
 * An interface representing HealthProbeSettingsModel.
 * Load balancing settings for a backend pool
 *
 * @extends SubResource
 */
export interface HealthProbeSettingsModel extends SubResource {
  /**
   * @member {string} [path] The path to use for the health probe. Default is /
   */
  path?: string;
  /**
   * @member {FrontDoorProtocol} [protocol] Protocol scheme to use for this
   * probe. Possible values include: 'Http', 'Https'
   */
  protocol?: FrontDoorProtocol;
  /**
   * @member {number} [intervalInSeconds] The number of seconds between health
   * probes.
   */
  intervalInSeconds?: number;
  /**
   * @member {FrontDoorResourceState} [resourceState] Resource status. Possible
   * values include: 'Creating', 'Enabling', 'Enabled', 'Disabling',
   * 'Disabled', 'Deleting'
   */
  resourceState?: FrontDoorResourceState;
  /**
   * @member {string} [name] Resource name.
   */
  name?: string;
  /**
   * @member {string} [type] Resource type.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: string;
}

/**
 * @interface
 * An interface representing BackendPool.
 * A backend pool is a collection of backends that can be routed to.
 *
 * @extends SubResource
 */
export interface BackendPool extends SubResource {
  /**
   * @member {Backend[]} [backends] The set of backends for this pool
   */
  backends?: Backend[];
  /**
   * @member {SubResource} [loadBalancingSettings] Load balancing settings for
   * a backend pool
   */
  loadBalancingSettings?: SubResource;
  /**
   * @member {SubResource} [healthProbeSettings] L7 health probe settings for a
   * backend pool
   */
  healthProbeSettings?: SubResource;
  /**
   * @member {FrontDoorResourceState} [resourceState] Resource status. Possible
   * values include: 'Creating', 'Enabling', 'Enabled', 'Disabling',
   * 'Disabled', 'Deleting'
   */
  resourceState?: FrontDoorResourceState;
  /**
   * @member {string} [name] Resource name.
   */
  name?: string;
  /**
   * @member {string} [type] Resource type.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: string;
}

/**
 * @interface
 * An interface representing KeyVaultCertificateSourceParametersVault.
 * The Key Vault containing the SSL certificate
 *
 */
export interface KeyVaultCertificateSourceParametersVault {
  /**
   * @member {string} [id] Resource ID.
   */
  id?: string;
}

/**
 * @interface
 * An interface representing CustomHttpsConfiguration.
 * Https settings for a domain
 *
 */
export interface CustomHttpsConfiguration {
  /**
   * @member {FrontDoorCertificateSource} [certificateSource] Defines the
   * source of the SSL certificate. Possible values include: 'AzureKeyVault',
   * 'FrontDoor'
   */
  certificateSource?: FrontDoorCertificateSource;
  /**
   * @member {FrontDoorTlsProtocolType} [protocolType] Defines the TLS
   * extension protocol that is used for secure delivery. Possible values
   * include: 'ServerNameIndication'
   */
  protocolType?: FrontDoorTlsProtocolType;
  /**
   * @member {KeyVaultCertificateSourceParametersVault} [vault] The Key Vault
   * containing the SSL certificate
   */
  vault?: KeyVaultCertificateSourceParametersVault;
  /**
   * @member {string} [secretName] The name of the Key Vault secret
   * representing the full certificate PFX
   */
  secretName?: string;
  /**
   * @member {string} [secretVersion] The version of the Key Vault secret
   * representing the full certificate PFX
   */
  secretVersion?: string;
  /**
   * @member {FrontDoorCertificateType} [certificateType] Defines the type of
   * the certificate used for secure connections to a frontendEndpoint.
   * Possible values include: 'Dedicated'
   */
  certificateType?: FrontDoorCertificateType;
}

/**
 * @interface
 * An interface representing FrontendEndpoint.
 * A frontend endpoint used for routing.
 *
 * @extends SubResource
 */
export interface FrontendEndpoint extends SubResource {
  /**
   * @member {string} [hostName] The host name of the frontendEndpoint. Must be
   * a domain name.
   */
  hostName?: string;
  /**
   * @member {SessionAffinityEnabledState} [sessionAffinityEnabledState]
   * Whether to allow session affinity on this host. Valid options are
   * 'Enabled' or 'Disabled'. Possible values include: 'Enabled', 'Disabled'
   */
  sessionAffinityEnabledState?: SessionAffinityEnabledState;
  /**
   * @member {number} [sessionAffinityTtlSeconds] UNUSED. This field will be
   * ignored. The TTL to use in seconds for session affinity, if applicable.
   */
  sessionAffinityTtlSeconds?: number;
  /**
   * @member {FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLink}
   * [webApplicationFirewallPolicyLink] Defines the Web Application Firewall
   * policy for each host (if applicable)
   */
  webApplicationFirewallPolicyLink?: FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLink;
  /**
   * @member {FrontDoorResourceState} [resourceState] Resource status. Possible
   * values include: 'Creating', 'Enabling', 'Enabled', 'Disabling',
   * 'Disabled', 'Deleting'
   */
  resourceState?: FrontDoorResourceState;
  /**
   * @member {CustomHttpsProvisioningState} [customHttpsProvisioningState]
   * Provisioning status of Custom Https of the frontendEndpoint. Possible
   * values include: 'Enabling', 'Enabled', 'Disabling', 'Disabled', 'Failed'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly customHttpsProvisioningState?: CustomHttpsProvisioningState;
  /**
   * @member {CustomHttpsProvisioningSubstate}
   * [customHttpsProvisioningSubstate] Provisioning substate shows the progress
   * of custom HTTPS enabling/disabling process step by step. Possible values
   * include: 'SubmittingDomainControlValidationRequest',
   * 'PendingDomainControlValidationREquestApproval',
   * 'DomainControlValidationRequestApproved',
   * 'DomainControlValidationRequestRejected',
   * 'DomainControlValidationRequestTimedOut', 'IssuingCertificate',
   * 'DeployingCertificate', 'CertificateDeployed', 'DeletingCertificate',
   * 'CertificateDeleted'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly customHttpsProvisioningSubstate?: CustomHttpsProvisioningSubstate;
  /**
   * @member {CustomHttpsConfiguration} [customHttpsConfiguration] The
   * configuration specifying how to enable HTTPS
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly customHttpsConfiguration?: CustomHttpsConfiguration;
  /**
   * @member {string} [name] Resource name.
   */
  name?: string;
  /**
   * @member {string} [type] Resource type.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: string;
}

/**
 * @interface
 * An interface representing FrontDoorUpdateParameters.
 * The properties needed to update a Front Door
 *
 */
export interface FrontDoorUpdateParameters {
  /**
   * @member {string} [friendlyName] A friendly name for the frontDoor
   */
  friendlyName?: string;
  /**
   * @member {RoutingRule[]} [routingRules] Routing rules associated with this
   * Front Door.
   */
  routingRules?: RoutingRule[];
  /**
   * @member {LoadBalancingSettingsModel[]} [loadBalancingSettings] Load
   * balancing settings associated with this Front Door instance.
   */
  loadBalancingSettings?: LoadBalancingSettingsModel[];
  /**
   * @member {HealthProbeSettingsModel[]} [healthProbeSettings] Health probe
   * settings associated with this Front Door instance.
   */
  healthProbeSettings?: HealthProbeSettingsModel[];
  /**
   * @member {BackendPool[]} [backendPools] Backend pools available to routing
   * rules.
   */
  backendPools?: BackendPool[];
  /**
   * @member {FrontendEndpoint[]} [frontendEndpoints] Frontend endpoints
   * available to routing rules.
   */
  frontendEndpoints?: FrontendEndpoint[];
  /**
   * @member {FrontDoorEnabledState} [enabledState] Operational status of the
   * Front Door load balancer. Permitted values are 'Enabled' or 'Disabled'.
   * Possible values include: 'Enabled', 'Disabled'
   */
  enabledState?: FrontDoorEnabledState;
}

/**
 * @interface
 * An interface representing PurgeParameters.
 * Parameters required for content purge.
 *
 */
export interface PurgeParameters {
  /**
   * @member {string[]} contentPaths The path to the content to be purged. Can
   * describe a file path or a wild card directory.
   */
  contentPaths: string[];
}

/**
 * @interface
 * An interface representing CacheConfiguration.
 * Caching settings for a caching-type route. To disable caching, do not
 * provide a cacheConfiguration object.
 *
 */
export interface CacheConfiguration {
  /**
   * @member {FrontDoorQuery} [queryParameterStripDirective] Treatment of URL
   * query terms when forming the cache key. Possible values include:
   * 'StripNone', 'StripAll'
   */
  queryParameterStripDirective?: FrontDoorQuery;
  /**
   * @member {DynamicCompressionEnabled} [dynamicCompression] Whether to use
   * dynamic compression for cached content. Possible values include:
   * 'Enabled', 'Disabled'
   */
  dynamicCompression?: DynamicCompressionEnabled;
}

/**
 * @interface
 * An interface representing RoutingRuleUpdateParameters.
 * Routing rules to apply to an endpoint
 *
 */
export interface RoutingRuleUpdateParameters {
  /**
   * @member {SubResource[]} [frontendEndpoints] Frontend endpoints associated
   * with this rule
   */
  frontendEndpoints?: SubResource[];
  /**
   * @member {FrontDoorProtocol[]} [acceptedProtocols] Protocol schemes to
   * match for this rule
   */
  acceptedProtocols?: FrontDoorProtocol[];
  /**
   * @member {string[]} [patternsToMatch] The route patterns of the rule.
   */
  patternsToMatch?: string[];
  /**
   * @member {string} [customForwardingPath] A custom path used to rewrite
   * resource paths matched by this rule. Leave empty to use incoming path.
   */
  customForwardingPath?: string;
  /**
   * @member {FrontDoorForwardingProtocol} [forwardingProtocol] Protocol this
   * rule will use when forwarding traffic to backends. Possible values
   * include: 'HttpOnly', 'HttpsOnly', 'MatchRequest'
   */
  forwardingProtocol?: FrontDoorForwardingProtocol;
  /**
   * @member {CacheConfiguration} [cacheConfiguration] The caching
   * configuration associated with this rule.
   */
  cacheConfiguration?: CacheConfiguration;
  /**
   * @member {SubResource} [backendPool] A reference to the BackendPool which
   * this rule routes to.
   */
  backendPool?: SubResource;
  /**
   * @member {FrontDoorEnabledState} [enabledState] Whether to enable use of
   * this rule. Permitted values are 'Enabled' or 'Disabled'. Possible values
   * include: 'Enabled', 'Disabled'
   */
  enabledState?: FrontDoorEnabledState;
}

/**
 * @interface
 * An interface representing Backend.
 * Backend address of a frontDoor load balancer.
 *
 */
export interface Backend {
  /**
   * @member {string} [address] Location of the backend (IP address or FQDN)
   */
  address?: string;
  /**
   * @member {number} [httpPort] The HTTP TCP port number. Must be between 1
   * and 65535.
   */
  httpPort?: number;
  /**
   * @member {number} [httpsPort] The HTTPS TCP port number. Must be between 1
   * and 65535.
   */
  httpsPort?: number;
  /**
   * @member {FrontDoorEnabledState} [enabledState] Whether to enable use of
   * this backend. Permitted values are 'Enabled' or 'Disabled'. Possible
   * values include: 'Enabled', 'Disabled'
   */
  enabledState?: FrontDoorEnabledState;
  /**
   * @member {number} [priority] Priority to use for load balancing. Higher
   * priorities will not be used for load balancing if any lower priority
   * backend is healthy.
   */
  priority?: number;
  /**
   * @member {number} [weight] Weight of this endpoint for load balancing
   * purposes.
   */
  weight?: number;
  /**
   * @member {string} [backendHostHeader] The value to use as the host header
   * sent to the backend. If blank or unspecified, this defaults to the
   * incoming host.
   */
  backendHostHeader?: string;
}

/**
 * @interface
 * An interface representing LoadBalancingSettingsUpdateParameters.
 * Round-Robin load balancing settings for a backend pool
 *
 */
export interface LoadBalancingSettingsUpdateParameters {
  /**
   * @member {number} [sampleSize] The number of samples to consider for load
   * balancing decisions
   */
  sampleSize?: number;
  /**
   * @member {number} [successfulSamplesRequired] The number of samples within
   * the sample period that must succeed
   */
  successfulSamplesRequired?: number;
  /**
   * @member {number} [additionalLatencyMilliseconds] The additional latency in
   * milliseconds for probes to fall into the lowest latency bucket
   */
  additionalLatencyMilliseconds?: number;
}

/**
 * @interface
 * An interface representing HealthProbeSettingsUpdateParameters.
 * L7 health probe settings for a backend pool
 *
 */
export interface HealthProbeSettingsUpdateParameters {
  /**
   * @member {string} [path] The path to use for the health probe. Default is /
   */
  path?: string;
  /**
   * @member {FrontDoorProtocol} [protocol] Protocol scheme to use for this
   * probe. Possible values include: 'Http', 'Https'
   */
  protocol?: FrontDoorProtocol;
  /**
   * @member {number} [intervalInSeconds] The number of seconds between health
   * probes.
   */
  intervalInSeconds?: number;
}

/**
 * @interface
 * An interface representing BackendPoolUpdateParameters.
 * A collection of backends that can be routed to.
 *
 */
export interface BackendPoolUpdateParameters {
  /**
   * @member {Backend[]} [backends] The set of backends for this pool
   */
  backends?: Backend[];
  /**
   * @member {SubResource} [loadBalancingSettings] Load balancing settings for
   * a backend pool
   */
  loadBalancingSettings?: SubResource;
  /**
   * @member {SubResource} [healthProbeSettings] L7 health probe settings for a
   * backend pool
   */
  healthProbeSettings?: SubResource;
}

/**
 * @interface
 * An interface representing FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLink.
 * Defines the Web Application Firewall policy for each host (if applicable)
 *
 */
export interface FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLink {
  /**
   * @member {string} [id] Resource ID.
   */
  id?: string;
}

/**
 * @interface
 * An interface representing FrontendEndpointUpdateParameters.
 * Frontend endpoint used in routing rule
 *
 */
export interface FrontendEndpointUpdateParameters {
  /**
   * @member {string} [hostName] The host name of the frontendEndpoint. Must be
   * a domain name.
   */
  hostName?: string;
  /**
   * @member {SessionAffinityEnabledState} [sessionAffinityEnabledState]
   * Whether to allow session affinity on this host. Valid options are
   * 'Enabled' or 'Disabled'. Possible values include: 'Enabled', 'Disabled'
   */
  sessionAffinityEnabledState?: SessionAffinityEnabledState;
  /**
   * @member {number} [sessionAffinityTtlSeconds] UNUSED. This field will be
   * ignored. The TTL to use in seconds for session affinity, if applicable.
   */
  sessionAffinityTtlSeconds?: number;
  /**
   * @member {FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLink}
   * [webApplicationFirewallPolicyLink] Defines the Web Application Firewall
   * policy for each host (if applicable)
   */
  webApplicationFirewallPolicyLink?: FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLink;
}

/**
 * @interface
 * An interface representing ValidateCustomDomainInput.
 * Input of the custom domain to be validated for DNS mapping.
 *
 */
export interface ValidateCustomDomainInput {
  /**
   * @member {string} hostName The host name of the custom domain. Must be a
   * domain name.
   */
  hostName: string;
}

/**
 * @interface
 * An interface representing ValidateCustomDomainOutput.
 * Output of custom domain validation.
 *
 */
export interface ValidateCustomDomainOutput {
  /**
   * @member {boolean} [customDomainValidated] Indicates whether the custom
   * domain is valid or not.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly customDomainValidated?: boolean;
  /**
   * @member {string} [reason] The reason why the custom domain is not valid.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly reason?: string;
  /**
   * @member {string} [message] Error message describing why the custom domain
   * is not valid.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly message?: string;
}

/**
 * @interface
 * An interface representing ErrorResponse.
 * Error reponse indicates Front Door service is not able to process the
 * incoming request. The reason is provided in the error message.
 *
 */
export interface ErrorResponse {
  /**
   * @member {string} [code] Error code.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly code?: string;
  /**
   * @member {string} [message] Error message indicating why the operation
   * failed.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly message?: string;
}

/**
 * @interface
 * An interface representing CheckNameAvailabilityInput.
 * Input of CheckNameAvailability API.
 *
 */
export interface CheckNameAvailabilityInput {
  /**
   * @member {string} name The resource name to validate.
   */
  name: string;
  /**
   * @member {ResourceType} type The type of the resource whose name is to be
   * validated. Possible values include: 'Microsoft.Network/frontDoors',
   * 'Microsoft.Network/frontDoors/frontendEndpoints'
   */
  type: ResourceType;
}

/**
 * @interface
 * An interface representing CheckNameAvailabilityOutput.
 * Output of check name availability API.
 *
 */
export interface CheckNameAvailabilityOutput {
  /**
   * @member {Availability} [nameAvailability] Indicates whether the name is
   * available. Possible values include: 'Available', 'Unavailable'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nameAvailability?: Availability;
  /**
   * @member {string} [reason] The reason why the name is not available.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly reason?: string;
  /**
   * @member {string} [message] The detailed error message describing why the
   * name is not available.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly message?: string;
}

/**
 * @interface
 * An interface representing ErrorDetails.
 */
export interface ErrorDetails {
  /**
   * @member {string} [code]
   */
  code?: string;
  /**
   * @member {string} [target]
   */
  target?: string;
  /**
   * @member {string} [message]
   */
  message?: string;
}

/**
 * @interface
 * An interface representing ErrorModel.
 */
export interface ErrorModel {
  /**
   * @member {string} [code]
   */
  code?: string;
  /**
   * @member {string} [message]
   */
  message?: string;
  /**
   * @member {string} [target]
   */
  target?: string;
  /**
   * @member {ErrorDetails[]} [details]
   */
  details?: ErrorDetails[];
  /**
   * @member {string} [innerError]
   */
  innerError?: string;
}

/**
 * @interface
 * An interface representing AzureAsyncOperationResult.
 * The response body contains the status of the specified asynchronous
 * operation, indicating whether it has succeeded, is in progress, or has
 * failed. Note that this status is distinct from the HTTP status code returned
 * for the Get Operation Status operation itself. If the asynchronous operation
 * succeeded, the response body includes the HTTP status code for the
 * successful request. If the asynchronous operation failed, the response body
 * includes the HTTP status code for the failed request and error information
 * regarding the failure.
 *
 */
export interface AzureAsyncOperationResult {
  /**
   * @member {NetworkOperationStatus} [status] Status of the Azure async
   * operation. Possible values are: 'InProgress', 'Succeeded', and 'Failed'.
   * Possible values include: 'InProgress', 'Succeeded', 'Failed'
   */
  status?: NetworkOperationStatus;
  /**
   * @member {ErrorModel} [error]
   */
  error?: ErrorModel;
}

/**
 * @interface
 * An interface representing TagsObject.
 * Tags object for patch operations.
 *
 */
export interface TagsObject {
  /**
   * @member {{ [propertyName: string]: string }} [tags] Resource tags.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * @interface
 * An interface representing PolicySettings.
 * Defines contents of a web application firewall global configuration
 *
 */
export interface PolicySettings {
  /**
   * @member {EnabledState} [enabledState] describes if the policy is in
   * enabled state or disabled state. Possible values include: 'Disabled',
   * 'Enabled'
   */
  enabledState?: EnabledState;
  /**
   * @member {Mode} [mode] Describes if it is in detection mode  or prevention
   * mode at policy level. Possible values include: 'Prevention', 'Detection'
   */
  mode?: Mode;
}

/**
 * @interface
 * An interface representing MatchCondition1.
 * Define match conditions
 *
 */
export interface MatchCondition1 {
  /**
   * @member {MatchCondition} matchVariable Match Variable. Possible values
   * include: 'RemoteAddr', 'RequestMethod', 'QueryString', 'PostArgs',
   * 'RequestUri', 'RequestHeader', 'RequestBody'
   */
  matchVariable: MatchCondition;
  /**
   * @member {string} [selector] Name of selector in RequestHeader or
   * RequestBody to be matched
   */
  selector?: string;
  /**
   * @member {Operator} operator Describes operator to be matched. Possible
   * values include: 'Any', 'IPMatch', 'GeoMatch', 'Equal', 'Contains',
   * 'LessThan', 'GreaterThan', 'LessThanOrEqual', 'GreaterThanOrEqual',
   * 'BeginsWith', 'EndsWith'
   */
  operator: Operator;
  /**
   * @member {boolean} [negateCondition] Describes if this is negate condition
   * or not
   */
  negateCondition?: boolean;
  /**
   * @member {string[]} matchValue Match value
   */
  matchValue: string[];
}

/**
 * @interface
 * An interface representing CustomRule.
 * Defines contents of a web application rule
 *
 */
export interface CustomRule {
  /**
   * @member {string} [name] Gets name of the resource that is unique within a
   * policy. This name can be used to access the resource.
   */
  name?: string;
  /**
   * @member {string} [etag] Gets a unique read-only string that changes
   * whenever the resource is updated.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly etag?: string;
  /**
   * @member {number} priority Describes priority of the rule. Rules with a
   * lower value will be evaluated before rules with a higher value
   */
  priority: number;
  /**
   * @member {RuleType} ruleType Describes type of rule. Possible values
   * include: 'MatchRule', 'RateLimitRule'
   */
  ruleType: RuleType;
  /**
   * @member {number} [rateLimitDurationInMinutes] Defines rate limit duration.
   * Default - 1 minute
   */
  rateLimitDurationInMinutes?: number;
  /**
   * @member {number} [rateLimitThreshold] Defines rate limit thresold
   */
  rateLimitThreshold?: number;
  /**
   * @member {MatchCondition1[]} matchConditions List of match conditions
   */
  matchConditions: MatchCondition1[];
  /**
   * @member {Action} action Type of Actions. Possible values include: 'Allow',
   * 'Block', 'Log'
   */
  action: Action;
  /**
   * @member {Transform[]} [transforms] List of transforms
   */
  transforms?: Transform[];
}

/**
 * @interface
 * An interface representing CustomRules.
 * Defines contents of custom rules
 *
 */
export interface CustomRules {
  /**
   * @member {CustomRule[]} [rules] List of rules
   */
  rules?: CustomRule[];
}

/**
 * Contains the possible cases for ManagedRuleSet.
 */
export type ManagedRuleSetUnion = ManagedRuleSet | AzureManagedRuleSet;

/**
 * @interface
 * An interface representing ManagedRuleSet.
 * Base class for all types of ManagedRuleSet.
 *
 */
export interface ManagedRuleSet {
  /**
   * @member {string} ruleSetType Polymorphic Discriminator
   */
  ruleSetType: "Unknown";
  /**
   * @member {number} [priority] Describes priority of the rule
   */
  priority?: number;
  /**
   * @member {number} [version] defines version of the ruleset
   */
  version?: number;
}

/**
 * @interface
 * An interface representing ManagedRuleSets.
 * Defines ManagedRuleSets - array of managedRuleSet
 *
 */
export interface ManagedRuleSets {
  /**
   * @member {ManagedRuleSetUnion[]} [ruleSets] List of rules
   */
  ruleSets?: ManagedRuleSetUnion[];
}

/**
 * @interface
 * An interface representing WebApplicationFirewallPolicy1.
 * Defines web application firewall policy.
 *
 * @extends Resource
 */
export interface WebApplicationFirewallPolicy1 extends Resource {
  /**
   * @member {PolicySettings} [policySettings] Describes  policySettings for
   * policy
   */
  policySettings?: PolicySettings;
  /**
   * @member {CustomRules} [customRules] Describes custom rules inside the
   * policy
   */
  customRules?: CustomRules;
  /**
   * @member {ManagedRuleSets} [managedRules] Describes managed rules inside
   * the policy
   */
  managedRules?: ManagedRuleSets;
  /**
   * @member {string} [provisioningState] Provisioning state of the
   * WebApplicationFirewallPolicy.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provisioningState?: string;
  /**
   * @member {WebApplicationFirewallPolicy} [resourceState] Resource status of
   * the policy. Possible values include: 'Creating', 'Enabling', 'Enabled',
   * 'Disabling', 'Disabled', 'Deleting'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly resourceState?: WebApplicationFirewallPolicy;
  /**
   * @member {string} [etag] Gets a unique read-only string that changes
   * whenever the resource is updated.
   */
  etag?: string;
}

/**
 * @interface
 * An interface representing AzureManagedOverrideRuleGroup.
 * Defines contents of a web application rule
 *
 */
export interface AzureManagedOverrideRuleGroup {
  /**
   * @member {RuleGroupOverride} ruleGroupOverride Describes overrideruleGroup.
   * Possible values include: 'SqlInjection', 'XSS'
   */
  ruleGroupOverride: RuleGroupOverride;
  /**
   * @member {Action} action Type of Actions. Possible values include: 'Allow',
   * 'Block', 'Log'
   */
  action: Action;
}

/**
 * @interface
 * An interface representing AzureManagedRuleSet.
 * Describes azure managed provider.
 *
 */
export interface AzureManagedRuleSet {
  /**
   * @member {string} ruleSetType Polymorphic Discriminator
   */
  ruleSetType: "AzureManagedRuleSet";
  /**
   * @member {number} [priority] Describes priority of the rule
   */
  priority?: number;
  /**
   * @member {number} [version] defines version of the ruleset
   */
  version?: number;
  /**
   * @member {AzureManagedOverrideRuleGroup[]} [ruleGroupOverrides] List of
   * azure managed provider override configuration (optional)
   */
  ruleGroupOverrides?: AzureManagedOverrideRuleGroup[];
}

/**
 * @interface
 * An interface representing FrontDoorManagementClientOptions.
 * @extends AzureServiceClientOptions
 */
export interface FrontDoorManagementClientOptions extends AzureServiceClientOptions {
  /**
   * @member {string} [baseUri]
   */
  baseUri?: string;
}


/**
 * @interface
 * An interface representing the FrontDoorListResult.
 * Result of the request to list Front Doors. It contains a list of Front Door
 * objects and a URL link to get the the next set of results.
 *
 * @extends Array<FrontDoor>
 */
export interface FrontDoorListResult extends Array<FrontDoor> {
  /**
   * @member {string} [nextLink] URL to get the next set of Front Door objects
   * if there are any.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the RoutingRuleListResult.
 * Result of the request to list Routing Rules. It contains a list of Routing
 * Rule objects and a URL link to get the the next set of results.
 *
 * @extends Array<RoutingRule>
 */
export interface RoutingRuleListResult extends Array<RoutingRule> {
  /**
   * @member {string} [nextLink] URL to get the next set of RoutingRule objects
   * if there are any.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the HealthProbeSettingsListResult.
 * Result of the request to list HealthProbeSettings. It contains a list of
 * HealthProbeSettings objects and a URL link to get the the next set of
 * results.
 *
 * @extends Array<HealthProbeSettingsModel>
 */
export interface HealthProbeSettingsListResult extends Array<HealthProbeSettingsModel> {
  /**
   * @member {string} [nextLink] URL to get the next set of HealthProbeSettings
   * objects if there are any.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the LoadBalancingSettingsListResult.
 * Result of the request to list load balancing settings. It contains a list of
 * load balancing settings objects and a URL link to get the the next set of
 * results.
 *
 * @extends Array<LoadBalancingSettingsModel>
 */
export interface LoadBalancingSettingsListResult extends Array<LoadBalancingSettingsModel> {
  /**
   * @member {string} [nextLink] URL to get the next set of
   * LoadBalancingSettings objects if there are any.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the BackendPoolListResult.
 * Result of the request to list Backend Pools. It contains a list of Backend
 * Pools objects and a URL link to get the the next set of results.
 *
 * @extends Array<BackendPool>
 */
export interface BackendPoolListResult extends Array<BackendPool> {
  /**
   * @member {string} [nextLink] URL to get the next set of BackendPool objects
   * if there are any.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the FrontendEndpointsListResult.
 * Result of the request to list frontend endpoints. It contains a list of
 * Frontend endpoint objects and a URL link to get the the next set of results.
 *
 * @extends Array<FrontendEndpoint>
 */
export interface FrontendEndpointsListResult extends Array<FrontendEndpoint> {
  /**
   * @member {string} [nextLink] URL to get the next set of frontend endpoints
   * if there are any.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the WebApplicationFirewallPolicyListResult.
 * Result of the request to list WebApplicationFirewallPolicies. It contains a
 * list of WebApplicationFirewallPolicy objects and a URL link to get the the
 * next set of results.
 *
 * @extends Array<WebApplicationFirewallPolicy1>
 */
export interface WebApplicationFirewallPolicyListResult extends Array<WebApplicationFirewallPolicy1> {
  /**
   * @member {string} [nextLink] URL to get the next set of
   * WebApplicationFirewallPolicy objects if there are any.
   */
  nextLink?: string;
}

/**
 * Defines values for FrontDoorResourceState.
 * Possible values include: 'Creating', 'Enabling', 'Enabled', 'Disabling',
 * 'Disabled', 'Deleting'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: FrontDoorResourceState =
 * <FrontDoorResourceState>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum FrontDoorResourceState {
  Creating = 'Creating',
  Enabling = 'Enabling',
  Enabled = 'Enabled',
  Disabling = 'Disabling',
  Disabled = 'Disabled',
  Deleting = 'Deleting',
}

/**
 * Defines values for CustomHttpsProvisioningState.
 * Possible values include: 'Enabling', 'Enabled', 'Disabling', 'Disabled',
 * 'Failed'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: CustomHttpsProvisioningState =
 * <CustomHttpsProvisioningState>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum CustomHttpsProvisioningState {
  Enabling = 'Enabling',
  Enabled = 'Enabled',
  Disabling = 'Disabling',
  Disabled = 'Disabled',
  Failed = 'Failed',
}

/**
 * Defines values for CustomHttpsProvisioningSubstate.
 * Possible values include: 'SubmittingDomainControlValidationRequest',
 * 'PendingDomainControlValidationREquestApproval',
 * 'DomainControlValidationRequestApproved',
 * 'DomainControlValidationRequestRejected',
 * 'DomainControlValidationRequestTimedOut', 'IssuingCertificate',
 * 'DeployingCertificate', 'CertificateDeployed', 'DeletingCertificate',
 * 'CertificateDeleted'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: CustomHttpsProvisioningSubstate =
 * <CustomHttpsProvisioningSubstate>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum CustomHttpsProvisioningSubstate {
  SubmittingDomainControlValidationRequest = 'SubmittingDomainControlValidationRequest',
  PendingDomainControlValidationREquestApproval = 'PendingDomainControlValidationREquestApproval',
  DomainControlValidationRequestApproved = 'DomainControlValidationRequestApproved',
  DomainControlValidationRequestRejected = 'DomainControlValidationRequestRejected',
  DomainControlValidationRequestTimedOut = 'DomainControlValidationRequestTimedOut',
  IssuingCertificate = 'IssuingCertificate',
  DeployingCertificate = 'DeployingCertificate',
  CertificateDeployed = 'CertificateDeployed',
  DeletingCertificate = 'DeletingCertificate',
  CertificateDeleted = 'CertificateDeleted',
}

/**
 * Defines values for FrontDoorCertificateSource.
 * Possible values include: 'AzureKeyVault', 'FrontDoor'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: FrontDoorCertificateSource =
 * <FrontDoorCertificateSource>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum FrontDoorCertificateSource {
  AzureKeyVault = 'AzureKeyVault',
  FrontDoor = 'FrontDoor',
}

/**
 * Defines values for FrontDoorTlsProtocolType.
 * Possible values include: 'ServerNameIndication'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: FrontDoorTlsProtocolType =
 * <FrontDoorTlsProtocolType>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum FrontDoorTlsProtocolType {
  ServerNameIndication = 'ServerNameIndication',
}

/**
 * Defines values for FrontDoorCertificateType.
 * Possible values include: 'Dedicated'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: FrontDoorCertificateType =
 * <FrontDoorCertificateType>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum FrontDoorCertificateType {
  Dedicated = 'Dedicated',
}

/**
 * Defines values for FrontDoorEnabledState.
 * Possible values include: 'Enabled', 'Disabled'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: FrontDoorEnabledState =
 * <FrontDoorEnabledState>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum FrontDoorEnabledState {
  Enabled = 'Enabled',
  Disabled = 'Disabled',
}

/**
 * Defines values for FrontDoorProtocol.
 * Possible values include: 'Http', 'Https'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: FrontDoorProtocol =
 * <FrontDoorProtocol>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum FrontDoorProtocol {
  Http = 'Http',
  Https = 'Https',
}

/**
 * Defines values for FrontDoorForwardingProtocol.
 * Possible values include: 'HttpOnly', 'HttpsOnly', 'MatchRequest'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: FrontDoorForwardingProtocol =
 * <FrontDoorForwardingProtocol>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum FrontDoorForwardingProtocol {
  HttpOnly = 'HttpOnly',
  HttpsOnly = 'HttpsOnly',
  MatchRequest = 'MatchRequest',
}

/**
 * Defines values for FrontDoorQuery.
 * Possible values include: 'StripNone', 'StripAll'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: FrontDoorQuery =
 * <FrontDoorQuery>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum FrontDoorQuery {
  StripNone = 'StripNone',
  StripAll = 'StripAll',
}

/**
 * Defines values for DynamicCompressionEnabled.
 * Possible values include: 'Enabled', 'Disabled'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: DynamicCompressionEnabled =
 * <DynamicCompressionEnabled>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum DynamicCompressionEnabled {
  Enabled = 'Enabled',
  Disabled = 'Disabled',
}

/**
 * Defines values for SessionAffinityEnabledState.
 * Possible values include: 'Enabled', 'Disabled'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: SessionAffinityEnabledState =
 * <SessionAffinityEnabledState>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum SessionAffinityEnabledState {
  Enabled = 'Enabled',
  Disabled = 'Disabled',
}

/**
 * Defines values for ResourceType.
 * Possible values include: 'Microsoft.Network/frontDoors',
 * 'Microsoft.Network/frontDoors/frontendEndpoints'
 * @readonly
 * @enum {string}
 */
export enum ResourceType {
  MicrosoftNetworkfrontDoors = 'Microsoft.Network/frontDoors',
  MicrosoftNetworkfrontDoorsfrontendEndpoints = 'Microsoft.Network/frontDoors/frontendEndpoints',
}

/**
 * Defines values for Availability.
 * Possible values include: 'Available', 'Unavailable'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: Availability =
 * <Availability>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum Availability {
  Available = 'Available',
  Unavailable = 'Unavailable',
}

/**
 * Defines values for NetworkOperationStatus.
 * Possible values include: 'InProgress', 'Succeeded', 'Failed'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: NetworkOperationStatus =
 * <NetworkOperationStatus>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum NetworkOperationStatus {
  InProgress = 'InProgress',
  Succeeded = 'Succeeded',
  Failed = 'Failed',
}

/**
 * Defines values for EnabledState.
 * Possible values include: 'Disabled', 'Enabled'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: EnabledState =
 * <EnabledState>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum EnabledState {
  Disabled = 'Disabled',
  Enabled = 'Enabled',
}

/**
 * Defines values for Mode.
 * Possible values include: 'Prevention', 'Detection'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: Mode = <Mode>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum Mode {
  Prevention = 'Prevention',
  Detection = 'Detection',
}

/**
 * Defines values for RuleType.
 * Possible values include: 'MatchRule', 'RateLimitRule'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: RuleType = <RuleType>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum RuleType {
  MatchRule = 'MatchRule',
  RateLimitRule = 'RateLimitRule',
}

/**
 * Defines values for MatchCondition.
 * Possible values include: 'RemoteAddr', 'RequestMethod', 'QueryString',
 * 'PostArgs', 'RequestUri', 'RequestHeader', 'RequestBody'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: MatchCondition =
 * <MatchCondition>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum MatchCondition {
  RemoteAddr = 'RemoteAddr',
  RequestMethod = 'RequestMethod',
  QueryString = 'QueryString',
  PostArgs = 'PostArgs',
  RequestUri = 'RequestUri',
  RequestHeader = 'RequestHeader',
  RequestBody = 'RequestBody',
}

/**
 * Defines values for Operator.
 * Possible values include: 'Any', 'IPMatch', 'GeoMatch', 'Equal', 'Contains',
 * 'LessThan', 'GreaterThan', 'LessThanOrEqual', 'GreaterThanOrEqual',
 * 'BeginsWith', 'EndsWith'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: Operator = <Operator>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum Operator {
  Any = 'Any',
  IPMatch = 'IPMatch',
  GeoMatch = 'GeoMatch',
  Equal = 'Equal',
  Contains = 'Contains',
  LessThan = 'LessThan',
  GreaterThan = 'GreaterThan',
  LessThanOrEqual = 'LessThanOrEqual',
  GreaterThanOrEqual = 'GreaterThanOrEqual',
  BeginsWith = 'BeginsWith',
  EndsWith = 'EndsWith',
}

/**
 * Defines values for Action.
 * Possible values include: 'Allow', 'Block', 'Log'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: Action = <Action>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum Action {
  Allow = 'Allow',
  Block = 'Block',
  Log = 'Log',
}

/**
 * Defines values for Transform.
 * Possible values include: 'Lowercase', 'Uppercase', 'Trim', 'UrlDecode',
 * 'UrlEncode', 'RemoveNulls', 'HtmlEntityDecode'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: Transform = <Transform>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum Transform {
  Lowercase = 'Lowercase',
  Uppercase = 'Uppercase',
  Trim = 'Trim',
  UrlDecode = 'UrlDecode',
  UrlEncode = 'UrlEncode',
  RemoveNulls = 'RemoveNulls',
  HtmlEntityDecode = 'HtmlEntityDecode',
}

/**
 * Defines values for WebApplicationFirewallPolicy.
 * Possible values include: 'Creating', 'Enabling', 'Enabled', 'Disabling',
 * 'Disabled', 'Deleting'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: WebApplicationFirewallPolicy =
 * <WebApplicationFirewallPolicy>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum WebApplicationFirewallPolicy {
  Creating = 'Creating',
  Enabling = 'Enabling',
  Enabled = 'Enabled',
  Disabling = 'Disabling',
  Disabled = 'Disabled',
  Deleting = 'Deleting',
}

/**
 * Defines values for RuleGroupOverride.
 * Possible values include: 'SqlInjection', 'XSS'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: RuleGroupOverride =
 * <RuleGroupOverride>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum RuleGroupOverride {
  SqlInjection = 'SqlInjection',
  XSS = 'XSS',
}

/**
 * Contains response data for the checkFrontDoorNameAvailability operation.
 */
export type CheckFrontDoorNameAvailabilityResponse = CheckNameAvailabilityOutput & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CheckNameAvailabilityOutput;
    };
};

/**
 * Contains response data for the checkFrontDoorNameAvailabilityWithSubscription operation.
 */
export type CheckFrontDoorNameAvailabilityWithSubscriptionResponse = CheckNameAvailabilityOutput & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CheckNameAvailabilityOutput;
    };
};

/**
 * Contains response data for the list operation.
 */
export type FrontDoorsListResponse = FrontDoorListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FrontDoorListResult;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type FrontDoorsListByResourceGroupResponse = FrontDoorListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FrontDoorListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type FrontDoorsGetResponse = FrontDoor & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FrontDoor;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type FrontDoorsCreateOrUpdateResponse = FrontDoor & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FrontDoor;
    };
};

/**
 * Contains response data for the validateCustomDomain operation.
 */
export type FrontDoorsValidateCustomDomainResponse = ValidateCustomDomainOutput & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ValidateCustomDomainOutput;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type FrontDoorsBeginCreateOrUpdateResponse = FrontDoor & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FrontDoor;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type FrontDoorsListNextResponse = FrontDoorListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FrontDoorListResult;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type FrontDoorsListByResourceGroupNextResponse = FrontDoorListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FrontDoorListResult;
    };
};

/**
 * Contains response data for the listByFrontDoor operation.
 */
export type RoutingRulesListByFrontDoorResponse = RoutingRuleListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoutingRuleListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type RoutingRulesGetResponse = RoutingRule & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoutingRule;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type RoutingRulesCreateOrUpdateResponse = RoutingRule & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoutingRule;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type RoutingRulesBeginCreateOrUpdateResponse = RoutingRule & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoutingRule;
    };
};

/**
 * Contains response data for the listByFrontDoorNext operation.
 */
export type RoutingRulesListByFrontDoorNextResponse = RoutingRuleListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoutingRuleListResult;
    };
};

/**
 * Contains response data for the listByFrontDoor operation.
 */
export type HealthProbeSettingsListByFrontDoorResponse = HealthProbeSettingsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HealthProbeSettingsListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type HealthProbeSettingsGetResponse = HealthProbeSettingsModel & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HealthProbeSettingsModel;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type HealthProbeSettingsCreateOrUpdateResponse = HealthProbeSettingsModel & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HealthProbeSettingsModel;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type HealthProbeSettingsBeginCreateOrUpdateResponse = HealthProbeSettingsModel & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HealthProbeSettingsModel;
    };
};

/**
 * Contains response data for the listByFrontDoorNext operation.
 */
export type HealthProbeSettingsListByFrontDoorNextResponse = HealthProbeSettingsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HealthProbeSettingsListResult;
    };
};

/**
 * Contains response data for the listByFrontDoor operation.
 */
export type LoadBalancingSettingsListByFrontDoorResponse = LoadBalancingSettingsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LoadBalancingSettingsListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type LoadBalancingSettingsGetResponse = LoadBalancingSettingsModel & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LoadBalancingSettingsModel;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type LoadBalancingSettingsCreateOrUpdateResponse = LoadBalancingSettingsModel & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LoadBalancingSettingsModel;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type LoadBalancingSettingsBeginCreateOrUpdateResponse = LoadBalancingSettingsModel & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LoadBalancingSettingsModel;
    };
};

/**
 * Contains response data for the listByFrontDoorNext operation.
 */
export type LoadBalancingSettingsListByFrontDoorNextResponse = LoadBalancingSettingsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LoadBalancingSettingsListResult;
    };
};

/**
 * Contains response data for the listByFrontDoor operation.
 */
export type BackendPoolsListByFrontDoorResponse = BackendPoolListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackendPoolListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type BackendPoolsGetResponse = BackendPool & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackendPool;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type BackendPoolsCreateOrUpdateResponse = BackendPool & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackendPool;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type BackendPoolsBeginCreateOrUpdateResponse = BackendPool & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackendPool;
    };
};

/**
 * Contains response data for the listByFrontDoorNext operation.
 */
export type BackendPoolsListByFrontDoorNextResponse = BackendPoolListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackendPoolListResult;
    };
};

/**
 * Contains response data for the listByFrontDoor operation.
 */
export type FrontendEndpointsListByFrontDoorResponse = FrontendEndpointsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FrontendEndpointsListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type FrontendEndpointsGetResponse = FrontendEndpoint & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FrontendEndpoint;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type FrontendEndpointsCreateOrUpdateResponse = FrontendEndpoint & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FrontendEndpoint;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type FrontendEndpointsBeginCreateOrUpdateResponse = FrontendEndpoint & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FrontendEndpoint;
    };
};

/**
 * Contains response data for the listByFrontDoorNext operation.
 */
export type FrontendEndpointsListByFrontDoorNextResponse = FrontendEndpointsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FrontendEndpointsListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type PoliciesListResponse = WebApplicationFirewallPolicyListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WebApplicationFirewallPolicyListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type PoliciesGetResponse = WebApplicationFirewallPolicy1 & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WebApplicationFirewallPolicy1;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type PoliciesCreateOrUpdateResponse = WebApplicationFirewallPolicy1 & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WebApplicationFirewallPolicy1;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type PoliciesListNextResponse = WebApplicationFirewallPolicyListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WebApplicationFirewallPolicyListResult;
    };
};
