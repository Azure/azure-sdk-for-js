/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };


/**
 * @interface
 * An interface representing Resource.
 * Common resource representation.
 *
 * @extends BaseResource
 */
export interface Resource extends BaseResource {
  /**
   * @member {string} [id] Resource ID.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [name] Resource name.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [type] Resource type.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: string;
  /**
   * @member {string} [location] Resource location.
   */
  location?: string;
  /**
   * @member {{ [propertyName: string]: string }} [tags] Resource tags.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * @interface
 * An interface representing FrontDoor.
 * Front Door represents a collection of backend endpoints to route traffic to
 * along with rules that specify how traffic is sent there.
 *
 * @extends Resource
 */
export interface FrontDoor extends Resource {
  /**
   * @member {string} [friendlyName] A friendly name for the frontDoor
   */
  friendlyName?: string;
  /**
   * @member {RoutingRule[]} [routingRules] Routing rules associated with this
   * Front Door.
   */
  routingRules?: RoutingRule[];
  /**
   * @member {LoadBalancingSettingsModel[]} [loadBalancingSettings] Load
   * balancing settings associated with this Front Door instance.
   */
  loadBalancingSettings?: LoadBalancingSettingsModel[];
  /**
   * @member {HealthProbeSettingsModel[]} [healthProbeSettings] Health probe
   * settings associated with this Front Door instance.
   */
  healthProbeSettings?: HealthProbeSettingsModel[];
  /**
   * @member {BackendPool[]} [backendPools] Backend pools available to routing
   * rules.
   */
  backendPools?: BackendPool[];
  /**
   * @member {FrontendEndpoint[]} [frontendEndpoints] Frontend endpoints
   * available to routing rules.
   */
  frontendEndpoints?: FrontendEndpoint[];
  /**
   * @member {BackendPoolsSettings} [backendPoolsSettings] Settings for all
   * backendPools
   */
  backendPoolsSettings?: BackendPoolsSettings;
  /**
   * @member {FrontDoorEnabledState} [enabledState] Operational status of the
   * Front Door load balancer. Permitted values are 'Enabled' or 'Disabled'.
   * Possible values include: 'Enabled', 'Disabled'
   */
  enabledState?: FrontDoorEnabledState;
  /**
   * @member {FrontDoorResourceState} [resourceState] Resource status of the
   * Front Door. Possible values include: 'Creating', 'Enabling', 'Enabled',
   * 'Disabling', 'Disabled', 'Deleting'
   */
  resourceState?: FrontDoorResourceState;
  /**
   * @member {string} [provisioningState] Provisioning state of the Front Door.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provisioningState?: string;
  /**
   * @member {string} [cname] The host that each frontendEndpoint must CNAME
   * to.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly cname?: string;
}

/**
 * @interface
 * An interface representing SubResource.
 * Reference to another subresource.
 *
 * @extends BaseResource
 */
export interface SubResource extends BaseResource {
  /**
   * @member {string} [id] Resource ID.
   */
  id?: string;
}

/**
 * @interface
 * An interface representing RoutingRule.
 * A routing rule represents a specification for traffic to treat and where to
 * send it, along with health probe information.
 *
 * @extends SubResource
 */
export interface RoutingRule extends SubResource {
  /**
   * @member {SubResource[]} [frontendEndpoints] Frontend endpoints associated
   * with this rule
   */
  frontendEndpoints?: SubResource[];
  /**
   * @member {FrontDoorProtocol[]} [acceptedProtocols] Protocol schemes to
   * match for this rule
   */
  acceptedProtocols?: FrontDoorProtocol[];
  /**
   * @member {string[]} [patternsToMatch] The route patterns of the rule.
   */
  patternsToMatch?: string[];
  /**
   * @member {RoutingRuleEnabledState} [enabledState] Whether to enable use of
   * this rule. Permitted values are 'Enabled' or 'Disabled'. Possible values
   * include: 'Enabled', 'Disabled'
   */
  enabledState?: RoutingRuleEnabledState;
  /**
   * @member {RouteConfigurationUnion} [routeConfiguration] A reference to the
   * routing configuration.
   */
  routeConfiguration?: RouteConfigurationUnion;
  /**
   * @member {FrontDoorResourceState} [resourceState] Resource status. Possible
   * values include: 'Creating', 'Enabling', 'Enabled', 'Disabling',
   * 'Disabled', 'Deleting'
   */
  resourceState?: FrontDoorResourceState;
  /**
   * @member {string} [name] Resource name.
   */
  name?: string;
  /**
   * @member {string} [type] Resource type.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: string;
}

/**
 * @interface
 * An interface representing LoadBalancingSettingsModel.
 * Load balancing settings for a backend pool
 *
 * @extends SubResource
 */
export interface LoadBalancingSettingsModel extends SubResource {
  /**
   * @member {number} [sampleSize] The number of samples to consider for load
   * balancing decisions
   */
  sampleSize?: number;
  /**
   * @member {number} [successfulSamplesRequired] The number of samples within
   * the sample period that must succeed
   */
  successfulSamplesRequired?: number;
  /**
   * @member {number} [additionalLatencyMilliseconds] The additional latency in
   * milliseconds for probes to fall into the lowest latency bucket
   */
  additionalLatencyMilliseconds?: number;
  /**
   * @member {FrontDoorResourceState} [resourceState] Resource status. Possible
   * values include: 'Creating', 'Enabling', 'Enabled', 'Disabling',
   * 'Disabled', 'Deleting'
   */
  resourceState?: FrontDoorResourceState;
  /**
   * @member {string} [name] Resource name.
   */
  name?: string;
  /**
   * @member {string} [type] Resource type.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: string;
}

/**
 * @interface
 * An interface representing HealthProbeSettingsModel.
 * Load balancing settings for a backend pool
 *
 * @extends SubResource
 */
export interface HealthProbeSettingsModel extends SubResource {
  /**
   * @member {string} [path] The path to use for the health probe. Default is /
   */
  path?: string;
  /**
   * @member {FrontDoorProtocol} [protocol] Protocol scheme to use for this
   * probe. Possible values include: 'Http', 'Https'
   */
  protocol?: FrontDoorProtocol;
  /**
   * @member {number} [intervalInSeconds] The number of seconds between health
   * probes.
   */
  intervalInSeconds?: number;
  /**
   * @member {FrontDoorResourceState} [resourceState] Resource status. Possible
   * values include: 'Creating', 'Enabling', 'Enabled', 'Disabling',
   * 'Disabled', 'Deleting'
   */
  resourceState?: FrontDoorResourceState;
  /**
   * @member {string} [name] Resource name.
   */
  name?: string;
  /**
   * @member {string} [type] Resource type.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: string;
}

/**
 * @interface
 * An interface representing BackendPool.
 * A backend pool is a collection of backends that can be routed to.
 *
 * @extends SubResource
 */
export interface BackendPool extends SubResource {
  /**
   * @member {Backend[]} [backends] The set of backends for this pool
   */
  backends?: Backend[];
  /**
   * @member {SubResource} [loadBalancingSettings] Load balancing settings for
   * a backend pool
   */
  loadBalancingSettings?: SubResource;
  /**
   * @member {SubResource} [healthProbeSettings] L7 health probe settings for a
   * backend pool
   */
  healthProbeSettings?: SubResource;
  /**
   * @member {FrontDoorResourceState} [resourceState] Resource status. Possible
   * values include: 'Creating', 'Enabling', 'Enabled', 'Disabling',
   * 'Disabled', 'Deleting'
   */
  resourceState?: FrontDoorResourceState;
  /**
   * @member {string} [name] Resource name.
   */
  name?: string;
  /**
   * @member {string} [type] Resource type.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: string;
}

/**
 * @interface
 * An interface representing KeyVaultCertificateSourceParametersVault.
 * The Key Vault containing the SSL certificate
 *
 */
export interface KeyVaultCertificateSourceParametersVault {
  /**
   * @member {string} [id] Resource ID.
   */
  id?: string;
}

/**
 * @interface
 * An interface representing CustomHttpsConfiguration.
 * Https settings for a domain
 *
 */
export interface CustomHttpsConfiguration {
  /**
   * @member {FrontDoorCertificateSource} [certificateSource] Defines the
   * source of the SSL certificate. Possible values include: 'AzureKeyVault',
   * 'FrontDoor'
   */
  certificateSource?: FrontDoorCertificateSource;
  /**
   * @member {FrontDoorTlsProtocolType} [protocolType] Defines the TLS
   * extension protocol that is used for secure delivery. Possible values
   * include: 'ServerNameIndication'
   */
  protocolType?: FrontDoorTlsProtocolType;
  /**
   * @member {KeyVaultCertificateSourceParametersVault} [vault] The Key Vault
   * containing the SSL certificate
   */
  vault?: KeyVaultCertificateSourceParametersVault;
  /**
   * @member {string} [secretName] The name of the Key Vault secret
   * representing the full certificate PFX
   */
  secretName?: string;
  /**
   * @member {string} [secretVersion] The version of the Key Vault secret
   * representing the full certificate PFX
   */
  secretVersion?: string;
  /**
   * @member {FrontDoorCertificateType} [certificateType] Defines the type of
   * the certificate used for secure connections to a frontendEndpoint.
   * Possible values include: 'Dedicated'
   */
  certificateType?: FrontDoorCertificateType;
}

/**
 * @interface
 * An interface representing FrontendEndpoint.
 * A frontend endpoint used for routing.
 *
 * @extends SubResource
 */
export interface FrontendEndpoint extends SubResource {
  /**
   * @member {string} [hostName] The host name of the frontendEndpoint. Must be
   * a domain name.
   */
  hostName?: string;
  /**
   * @member {SessionAffinityEnabledState} [sessionAffinityEnabledState]
   * Whether to allow session affinity on this host. Valid options are
   * 'Enabled' or 'Disabled'. Possible values include: 'Enabled', 'Disabled'
   */
  sessionAffinityEnabledState?: SessionAffinityEnabledState;
  /**
   * @member {number} [sessionAffinityTtlSeconds] UNUSED. This field will be
   * ignored. The TTL to use in seconds for session affinity, if applicable.
   */
  sessionAffinityTtlSeconds?: number;
  /**
   * @member {FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLink}
   * [webApplicationFirewallPolicyLink] Defines the Web Application Firewall
   * policy for each host (if applicable)
   */
  webApplicationFirewallPolicyLink?: FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLink;
  /**
   * @member {FrontDoorResourceState} [resourceState] Resource status. Possible
   * values include: 'Creating', 'Enabling', 'Enabled', 'Disabling',
   * 'Disabled', 'Deleting'
   */
  resourceState?: FrontDoorResourceState;
  /**
   * @member {CustomHttpsProvisioningState} [customHttpsProvisioningState]
   * Provisioning status of Custom Https of the frontendEndpoint. Possible
   * values include: 'Enabling', 'Enabled', 'Disabling', 'Disabled', 'Failed'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly customHttpsProvisioningState?: CustomHttpsProvisioningState;
  /**
   * @member {CustomHttpsProvisioningSubstate}
   * [customHttpsProvisioningSubstate] Provisioning substate shows the progress
   * of custom HTTPS enabling/disabling process step by step. Possible values
   * include: 'SubmittingDomainControlValidationRequest',
   * 'PendingDomainControlValidationREquestApproval',
   * 'DomainControlValidationRequestApproved',
   * 'DomainControlValidationRequestRejected',
   * 'DomainControlValidationRequestTimedOut', 'IssuingCertificate',
   * 'DeployingCertificate', 'CertificateDeployed', 'DeletingCertificate',
   * 'CertificateDeleted'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly customHttpsProvisioningSubstate?: CustomHttpsProvisioningSubstate;
  /**
   * @member {CustomHttpsConfiguration} [customHttpsConfiguration] The
   * configuration specifying how to enable HTTPS
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly customHttpsConfiguration?: CustomHttpsConfiguration;
  /**
   * @member {string} [name] Resource name.
   */
  name?: string;
  /**
   * @member {string} [type] Resource type.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: string;
}

/**
 * @interface
 * An interface representing BackendPoolsSettings.
 * Settings that apply to all backend pools.
 *
 */
export interface BackendPoolsSettings {
  /**
   * @member {EnforceCertificateNameCheckEnabledState}
   * [enforceCertificateNameCheck] Whether to enforce certificate name check on
   * HTTPS requests to all backend pools. No effect on non-HTTPS requests.
   * Possible values include: 'Enabled', 'Disabled'. Default value: 'Enabled' .
   */
  enforceCertificateNameCheck?: EnforceCertificateNameCheckEnabledState;
}

/**
 * @interface
 * An interface representing FrontDoorUpdateParameters.
 * The properties needed to update a Front Door
 *
 */
export interface FrontDoorUpdateParameters {
  /**
   * @member {string} [friendlyName] A friendly name for the frontDoor
   */
  friendlyName?: string;
  /**
   * @member {RoutingRule[]} [routingRules] Routing rules associated with this
   * Front Door.
   */
  routingRules?: RoutingRule[];
  /**
   * @member {LoadBalancingSettingsModel[]} [loadBalancingSettings] Load
   * balancing settings associated with this Front Door instance.
   */
  loadBalancingSettings?: LoadBalancingSettingsModel[];
  /**
   * @member {HealthProbeSettingsModel[]} [healthProbeSettings] Health probe
   * settings associated with this Front Door instance.
   */
  healthProbeSettings?: HealthProbeSettingsModel[];
  /**
   * @member {BackendPool[]} [backendPools] Backend pools available to routing
   * rules.
   */
  backendPools?: BackendPool[];
  /**
   * @member {FrontendEndpoint[]} [frontendEndpoints] Frontend endpoints
   * available to routing rules.
   */
  frontendEndpoints?: FrontendEndpoint[];
  /**
   * @member {BackendPoolsSettings} [backendPoolsSettings] Settings for all
   * backendPools
   */
  backendPoolsSettings?: BackendPoolsSettings;
  /**
   * @member {FrontDoorEnabledState} [enabledState] Operational status of the
   * Front Door load balancer. Permitted values are 'Enabled' or 'Disabled'.
   * Possible values include: 'Enabled', 'Disabled'
   */
  enabledState?: FrontDoorEnabledState;
}

/**
 * @interface
 * An interface representing PurgeParameters.
 * Parameters required for content purge.
 *
 */
export interface PurgeParameters {
  /**
   * @member {string[]} contentPaths The path to the content to be purged. Can
   * describe a file path or a wild card directory.
   */
  contentPaths: string[];
}

/**
 * Contains the possible cases for RouteConfiguration.
 */
export type RouteConfigurationUnion = RouteConfiguration | ForwardingConfiguration | RedirectConfiguration;

/**
 * @interface
 * An interface representing RouteConfiguration.
 * Base class for all types of Route.
 *
 */
export interface RouteConfiguration {
  /**
   * @member {string} odatatype Polymorphic Discriminator
   */
  odatatype: "RouteConfiguration";
}

/**
 * @interface
 * An interface representing RoutingRuleUpdateParameters.
 * Routing rules to apply to an endpoint
 *
 */
export interface RoutingRuleUpdateParameters {
  /**
   * @member {SubResource[]} [frontendEndpoints] Frontend endpoints associated
   * with this rule
   */
  frontendEndpoints?: SubResource[];
  /**
   * @member {FrontDoorProtocol[]} [acceptedProtocols] Protocol schemes to
   * match for this rule
   */
  acceptedProtocols?: FrontDoorProtocol[];
  /**
   * @member {string[]} [patternsToMatch] The route patterns of the rule.
   */
  patternsToMatch?: string[];
  /**
   * @member {RoutingRuleEnabledState} [enabledState] Whether to enable use of
   * this rule. Permitted values are 'Enabled' or 'Disabled'. Possible values
   * include: 'Enabled', 'Disabled'
   */
  enabledState?: RoutingRuleEnabledState;
  /**
   * @member {RouteConfigurationUnion} [routeConfiguration] A reference to the
   * routing configuration.
   */
  routeConfiguration?: RouteConfigurationUnion;
}

/**
 * @interface
 * An interface representing CacheConfiguration.
 * Caching settings for a caching-type route. To disable caching, do not
 * provide a cacheConfiguration object.
 *
 */
export interface CacheConfiguration {
  /**
   * @member {FrontDoorQuery} [queryParameterStripDirective] Treatment of URL
   * query terms when forming the cache key. Possible values include:
   * 'StripNone', 'StripAll'
   */
  queryParameterStripDirective?: FrontDoorQuery;
  /**
   * @member {DynamicCompressionEnabled} [dynamicCompression] Whether to use
   * dynamic compression for cached content. Possible values include:
   * 'Enabled', 'Disabled'
   */
  dynamicCompression?: DynamicCompressionEnabled;
}

/**
 * @interface
 * An interface representing ForwardingConfiguration.
 * Describes Forwarding Route.
 *
 */
export interface ForwardingConfiguration {
  /**
   * @member {string} odatatype Polymorphic Discriminator
   */
  odatatype: "#Microsoft.Azure.FrontDoor.Models.FrontdoorForwardingConfiguration";
  /**
   * @member {string} [customForwardingPath] A custom path used to rewrite
   * resource paths matched by this rule. Leave empty to use incoming path.
   */
  customForwardingPath?: string;
  /**
   * @member {FrontDoorForwardingProtocol} [forwardingProtocol] Protocol this
   * rule will use when forwarding traffic to backends. Possible values
   * include: 'HttpOnly', 'HttpsOnly', 'MatchRequest'
   */
  forwardingProtocol?: FrontDoorForwardingProtocol;
  /**
   * @member {CacheConfiguration} [cacheConfiguration] The caching
   * configuration associated with this rule.
   */
  cacheConfiguration?: CacheConfiguration;
  /**
   * @member {SubResource} [backendPool] A reference to the BackendPool which
   * this rule routes to.
   */
  backendPool?: SubResource;
}

/**
 * @interface
 * An interface representing RedirectConfiguration.
 * Describes Redirect Route.
 *
 */
export interface RedirectConfiguration {
  /**
   * @member {string} odatatype Polymorphic Discriminator
   */
  odatatype: "#Microsoft.Azure.FrontDoor.Models.FrontdoorRedirectConfiguration";
  /**
   * @member {FrontDoorRedirectType} [redirectType] The redirect type the rule
   * will use when redirecting traffic. Possible values include: 'Moved',
   * 'Found', 'TemporaryRedirect', 'PermanentRedirect'
   */
  redirectType?: FrontDoorRedirectType;
  /**
   * @member {FrontDoorRedirectProtocol} [redirectProtocol] The protocol of the
   * destination to where the traffic is redirected. Possible values include:
   * 'HttpOnly', 'HttpsOnly', 'MatchRequest'
   */
  redirectProtocol?: FrontDoorRedirectProtocol;
  /**
   * @member {string} [customHost] Host to redirect. Leave empty to use use the
   * incoming host as the destination host.
   */
  customHost?: string;
  /**
   * @member {string} [customPath] The full path to redirect. Path cannot be
   * empty and must start with /. Leave empty to use the incoming path as
   * destination path.
   */
  customPath?: string;
  /**
   * @member {string} [customFragment] Fragment to add to the redirect URL.
   * Fragment is the part of the URL that comes after #. Do not include the #.
   */
  customFragment?: string;
  /**
   * @member {string} [customQueryString] The set of query strings to be placed
   * in the redirect URL. Setting this value would replace any existing query
   * string; leave empty to preserve the incoming query string. Query string
   * must be in <key>=<value> format. The first ? and & will be added
   * automatically so do not include them in the front, but do separate
   * multiple query strings with &.
   */
  customQueryString?: string;
}

/**
 * @interface
 * An interface representing Backend.
 * Backend address of a frontDoor load balancer.
 *
 */
export interface Backend {
  /**
   * @member {string} [address] Location of the backend (IP address or FQDN)
   */
  address?: string;
  /**
   * @member {number} [httpPort] The HTTP TCP port number. Must be between 1
   * and 65535.
   */
  httpPort?: number;
  /**
   * @member {number} [httpsPort] The HTTPS TCP port number. Must be between 1
   * and 65535.
   */
  httpsPort?: number;
  /**
   * @member {BackendEnabledState} [enabledState] Whether to enable use of this
   * backend. Permitted values are 'Enabled' or 'Disabled'. Possible values
   * include: 'Enabled', 'Disabled'
   */
  enabledState?: BackendEnabledState;
  /**
   * @member {number} [priority] Priority to use for load balancing. Higher
   * priorities will not be used for load balancing if any lower priority
   * backend is healthy.
   */
  priority?: number;
  /**
   * @member {number} [weight] Weight of this endpoint for load balancing
   * purposes.
   */
  weight?: number;
  /**
   * @member {string} [backendHostHeader] The value to use as the host header
   * sent to the backend. If blank or unspecified, this defaults to the
   * incoming host.
   */
  backendHostHeader?: string;
}

/**
 * @interface
 * An interface representing LoadBalancingSettingsUpdateParameters.
 * Round-Robin load balancing settings for a backend pool
 *
 */
export interface LoadBalancingSettingsUpdateParameters {
  /**
   * @member {number} [sampleSize] The number of samples to consider for load
   * balancing decisions
   */
  sampleSize?: number;
  /**
   * @member {number} [successfulSamplesRequired] The number of samples within
   * the sample period that must succeed
   */
  successfulSamplesRequired?: number;
  /**
   * @member {number} [additionalLatencyMilliseconds] The additional latency in
   * milliseconds for probes to fall into the lowest latency bucket
   */
  additionalLatencyMilliseconds?: number;
}

/**
 * @interface
 * An interface representing HealthProbeSettingsUpdateParameters.
 * L7 health probe settings for a backend pool
 *
 */
export interface HealthProbeSettingsUpdateParameters {
  /**
   * @member {string} [path] The path to use for the health probe. Default is /
   */
  path?: string;
  /**
   * @member {FrontDoorProtocol} [protocol] Protocol scheme to use for this
   * probe. Possible values include: 'Http', 'Https'
   */
  protocol?: FrontDoorProtocol;
  /**
   * @member {number} [intervalInSeconds] The number of seconds between health
   * probes.
   */
  intervalInSeconds?: number;
}

/**
 * @interface
 * An interface representing BackendPoolUpdateParameters.
 * A collection of backends that can be routed to.
 *
 */
export interface BackendPoolUpdateParameters {
  /**
   * @member {Backend[]} [backends] The set of backends for this pool
   */
  backends?: Backend[];
  /**
   * @member {SubResource} [loadBalancingSettings] Load balancing settings for
   * a backend pool
   */
  loadBalancingSettings?: SubResource;
  /**
   * @member {SubResource} [healthProbeSettings] L7 health probe settings for a
   * backend pool
   */
  healthProbeSettings?: SubResource;
}

/**
 * @interface
 * An interface representing FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLink.
 * Defines the Web Application Firewall policy for each host (if applicable)
 *
 */
export interface FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLink {
  /**
   * @member {string} [id] Resource ID.
   */
  id?: string;
}

/**
 * @interface
 * An interface representing FrontendEndpointUpdateParameters.
 * Frontend endpoint used in routing rule
 *
 */
export interface FrontendEndpointUpdateParameters {
  /**
   * @member {string} [hostName] The host name of the frontendEndpoint. Must be
   * a domain name.
   */
  hostName?: string;
  /**
   * @member {SessionAffinityEnabledState} [sessionAffinityEnabledState]
   * Whether to allow session affinity on this host. Valid options are
   * 'Enabled' or 'Disabled'. Possible values include: 'Enabled', 'Disabled'
   */
  sessionAffinityEnabledState?: SessionAffinityEnabledState;
  /**
   * @member {number} [sessionAffinityTtlSeconds] UNUSED. This field will be
   * ignored. The TTL to use in seconds for session affinity, if applicable.
   */
  sessionAffinityTtlSeconds?: number;
  /**
   * @member {FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLink}
   * [webApplicationFirewallPolicyLink] Defines the Web Application Firewall
   * policy for each host (if applicable)
   */
  webApplicationFirewallPolicyLink?: FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLink;
}

/**
 * @interface
 * An interface representing ValidateCustomDomainInput.
 * Input of the custom domain to be validated for DNS mapping.
 *
 */
export interface ValidateCustomDomainInput {
  /**
   * @member {string} hostName The host name of the custom domain. Must be a
   * domain name.
   */
  hostName: string;
}

/**
 * @interface
 * An interface representing ValidateCustomDomainOutput.
 * Output of custom domain validation.
 *
 */
export interface ValidateCustomDomainOutput {
  /**
   * @member {boolean} [customDomainValidated] Indicates whether the custom
   * domain is valid or not.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly customDomainValidated?: boolean;
  /**
   * @member {string} [reason] The reason why the custom domain is not valid.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly reason?: string;
  /**
   * @member {string} [message] Error message describing why the custom domain
   * is not valid.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly message?: string;
}

/**
 * @interface
 * An interface representing ErrorResponse.
 * Error response indicates Front Door service is not able to process the
 * incoming request. The reason is provided in the error message.
 *
 */
export interface ErrorResponse {
  /**
   * @member {string} [code] Error code.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly code?: string;
  /**
   * @member {string} [message] Error message indicating why the operation
   * failed.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly message?: string;
}

/**
 * @interface
 * An interface representing CheckNameAvailabilityInput.
 * Input of CheckNameAvailability API.
 *
 */
export interface CheckNameAvailabilityInput {
  /**
   * @member {string} name The resource name to validate.
   */
  name: string;
  /**
   * @member {ResourceType} type The type of the resource whose name is to be
   * validated. Possible values include: 'Microsoft.Network/frontDoors',
   * 'Microsoft.Network/frontDoors/frontendEndpoints'
   */
  type: ResourceType;
}

/**
 * @interface
 * An interface representing CheckNameAvailabilityOutput.
 * Output of check name availability API.
 *
 */
export interface CheckNameAvailabilityOutput {
  /**
   * @member {Availability} [nameAvailability] Indicates whether the name is
   * available. Possible values include: 'Available', 'Unavailable'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nameAvailability?: Availability;
  /**
   * @member {string} [reason] The reason why the name is not available.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly reason?: string;
  /**
   * @member {string} [message] The detailed error message describing why the
   * name is not available.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly message?: string;
}

/**
 * @interface
 * An interface representing ErrorDetails.
 */
export interface ErrorDetails {
  /**
   * @member {string} [code]
   */
  code?: string;
  /**
   * @member {string} [target]
   */
  target?: string;
  /**
   * @member {string} [message]
   */
  message?: string;
}

/**
 * @interface
 * An interface representing ErrorModel.
 */
export interface ErrorModel {
  /**
   * @member {string} [code]
   */
  code?: string;
  /**
   * @member {string} [message]
   */
  message?: string;
  /**
   * @member {string} [target]
   */
  target?: string;
  /**
   * @member {ErrorDetails[]} [details]
   */
  details?: ErrorDetails[];
  /**
   * @member {string} [innerError]
   */
  innerError?: string;
}

/**
 * @interface
 * An interface representing AzureAsyncOperationResult.
 * The response body contains the status of the specified asynchronous
 * operation, indicating whether it has succeeded, is in progress, or has
 * failed. Note that this status is distinct from the HTTP status code returned
 * for the Get Operation Status operation itself. If the asynchronous operation
 * succeeded, the response body includes the HTTP status code for the
 * successful request. If the asynchronous operation failed, the response body
 * includes the HTTP status code for the failed request and error information
 * regarding the failure.
 *
 */
export interface AzureAsyncOperationResult {
  /**
   * @member {NetworkOperationStatus} [status] Status of the Azure async
   * operation. Possible values are: 'InProgress', 'Succeeded', and 'Failed'.
   * Possible values include: 'InProgress', 'Succeeded', 'Failed'
   */
  status?: NetworkOperationStatus;
  /**
   * @member {ErrorModel} [error]
   */
  error?: ErrorModel;
}

/**
 * @interface
 * An interface representing TagsObject.
 * Tags object for patch operations.
 *
 */
export interface TagsObject {
  /**
   * @member {{ [propertyName: string]: string }} [tags] Resource tags.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * @interface
 * An interface representing PolicySettings.
 * Defines top-level WebApplicationFirewallPolicy configuration settings.
 *
 */
export interface PolicySettings {
  /**
   * @member {PolicyEnabledState} [enabledState] Describes if the policy is in
   * enabled or disabled state. Defaults to Enabled if not specified. Possible
   * values include: 'Disabled', 'Enabled'
   */
  enabledState?: PolicyEnabledState;
  /**
   * @member {PolicyMode} [mode] Describes if it is in detection mode or
   * prevention mode at policy level. Possible values include: 'Prevention',
   * 'Detection'
   */
  mode?: PolicyMode;
  /**
   * @member {string} [redirectUrl] If action type is redirect, this field
   * represents redirect URL for the client.
   */
  redirectUrl?: string;
  /**
   * @member {number} [customBlockResponseStatusCode] If the action type is
   * block, customer can override the response status code.
   */
  customBlockResponseStatusCode?: number;
  /**
   * @member {string} [customBlockResponseBody] If the action type is block,
   * customer can override the response body. The body must be specified in
   * base64 encoding.
   */
  customBlockResponseBody?: string;
}

/**
 * @interface
 * An interface representing MatchCondition.
 * Define a match condition.
 *
 */
export interface MatchCondition {
  /**
   * @member {MatchVariable} matchVariable Match variable to compare against.
   * Possible values include: 'RemoteAddr', 'RequestMethod', 'QueryString',
   * 'PostArgs', 'RequestUri', 'RequestHeader', 'RequestBody', 'Cookies'
   */
  matchVariable: MatchVariable;
  /**
   * @member {string} [selector] Selector can used to match against a specific
   * key from QueryString, PostArgs, RequestHeader or Cookies.
   */
  selector?: string;
  /**
   * @member {Operator} operator Describes operator to be matched. Possible
   * values include: 'Any', 'IPMatch', 'GeoMatch', 'Equal', 'Contains',
   * 'LessThan', 'GreaterThan', 'LessThanOrEqual', 'GreaterThanOrEqual',
   * 'BeginsWith', 'EndsWith', 'RegEx'
   */
  operator: Operator;
  /**
   * @member {boolean} [negateCondition] Describes if the result of this
   * condition should be negated.
   */
  negateCondition?: boolean;
  /**
   * @member {string[]} matchValue List of possible match values.
   */
  matchValue: string[];
  /**
   * @member {TransformType[]} [transforms] List of transforms.
   */
  transforms?: TransformType[];
}

/**
 * @interface
 * An interface representing CustomRule.
 * Defines contents of a web application rule
 *
 */
export interface CustomRule {
  /**
   * @member {string} [name] Describes the name of the rule.
   */
  name?: string;
  /**
   * @member {number} priority Describes priority of the rule. Rules with a
   * lower value will be evaluated before rules with a higher value.
   */
  priority: number;
  /**
   * @member {CustomRuleEnabledState} [enabledState] Describes if the custom
   * rule is in enabled or disabled state. Defaults to Enabled if not
   * specified. Possible values include: 'Disabled', 'Enabled'
   */
  enabledState?: CustomRuleEnabledState;
  /**
   * @member {RuleType} ruleType Describes type of rule. Possible values
   * include: 'MatchRule', 'RateLimitRule'
   */
  ruleType: RuleType;
  /**
   * @member {number} [rateLimitDurationInMinutes] Defines rate limit duration.
   * Default is 1 minute.
   */
  rateLimitDurationInMinutes?: number;
  /**
   * @member {number} [rateLimitThreshold] Defines rate limit threshold.
   */
  rateLimitThreshold?: number;
  /**
   * @member {MatchCondition[]} matchConditions List of match conditions.
   */
  matchConditions: MatchCondition[];
  /**
   * @member {ActionType} action Describes what action to be applied when rule
   * matches. Possible values include: 'Allow', 'Block', 'Log', 'Redirect'
   */
  action: ActionType;
}

/**
 * @interface
 * An interface representing CustomRuleList.
 * Defines contents of custom rules
 *
 */
export interface CustomRuleList {
  /**
   * @member {CustomRule[]} [rules] List of rules
   */
  rules?: CustomRule[];
}

/**
 * @interface
 * An interface representing ManagedRuleOverride.
 * Defines a managed rule group override setting.
 *
 */
export interface ManagedRuleOverride {
  /**
   * @member {string} ruleId Identifier for the managed rule.
   */
  ruleId: string;
  /**
   * @member {ManagedRuleEnabledState} [enabledState] Describes if the managed
   * rule is in enabled or disabled state. Defaults to Disabled if not
   * specified. Possible values include: 'Disabled', 'Enabled'
   */
  enabledState?: ManagedRuleEnabledState;
  /**
   * @member {ActionType} [action] Describes the override action to be applied
   * when rule matches. Possible values include: 'Allow', 'Block', 'Log',
   * 'Redirect'
   */
  action?: ActionType;
}

/**
 * @interface
 * An interface representing ManagedRuleGroupOverride.
 * Defines a managed rule group override setting.
 *
 */
export interface ManagedRuleGroupOverride {
  /**
   * @member {string} ruleGroupName Describes the managed rule group to
   * override.
   */
  ruleGroupName: string;
  /**
   * @member {ManagedRuleOverride[]} [rules] List of rules that will be
   * disabled. If none specified, all rules in the group will be disabled.
   */
  rules?: ManagedRuleOverride[];
}

/**
 * @interface
 * An interface representing ManagedRuleSet.
 * Defines a managed rule set.
 *
 */
export interface ManagedRuleSet {
  /**
   * @member {string} ruleSetType Defines the rule set type to use.
   */
  ruleSetType: string;
  /**
   * @member {string} ruleSetVersion Defines the version of the rule set to
   * use.
   */
  ruleSetVersion: string;
  /**
   * @member {ManagedRuleGroupOverride[]} [ruleGroupOverrides] Defines the rule
   * group overrides to apply to the rule set.
   */
  ruleGroupOverrides?: ManagedRuleGroupOverride[];
}

/**
 * @interface
 * An interface representing ManagedRuleSetList.
 * Defines the list of managed rule sets for the policy.
 *
 */
export interface ManagedRuleSetList {
  /**
   * @member {ManagedRuleSet[]} [managedRuleSets] List of rule sets.
   */
  managedRuleSets?: ManagedRuleSet[];
}

/**
 * @interface
 * An interface representing FrontendEndpointLink.
 * Defines the Resource ID for a Frontend Endpoint.
 *
 */
export interface FrontendEndpointLink {
  /**
   * @member {string} [id] Resource ID.
   */
  id?: string;
}

/**
 * @interface
 * An interface representing WebApplicationFirewallPolicy.
 * Defines web application firewall policy.
 *
 * @extends Resource
 */
export interface WebApplicationFirewallPolicy extends Resource {
  /**
   * @member {PolicySettings} [policySettings] Describes settings for the
   * policy.
   */
  policySettings?: PolicySettings;
  /**
   * @member {CustomRuleList} [customRules] Describes custom rules inside the
   * policy.
   */
  customRules?: CustomRuleList;
  /**
   * @member {ManagedRuleSetList} [managedRules] Describes managed rules inside
   * the policy.
   */
  managedRules?: ManagedRuleSetList;
  /**
   * @member {FrontendEndpointLink[]} [frontendEndpointLinks] Describes
   * Frontend Endpoints associated with this Web Application Firewall policy.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly frontendEndpointLinks?: FrontendEndpointLink[];
  /**
   * @member {string} [provisioningState] Provisioning state of the policy.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provisioningState?: string;
  /**
   * @member {PolicyResourceState} [resourceState] Resource status of the
   * policy. Possible values include: 'Creating', 'Enabling', 'Enabled',
   * 'Disabling', 'Disabled', 'Deleting'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly resourceState?: PolicyResourceState;
  /**
   * @member {string} [etag] Gets a unique read-only string that changes
   * whenever the resource is updated.
   */
  etag?: string;
}

/**
 * @interface
 * An interface representing ManagedRuleDefinition.
 * Describes a managed rule definition.
 *
 */
export interface ManagedRuleDefinition {
  /**
   * @member {string} [ruleId] Identifier for the managed rule.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly ruleId?: string;
  /**
   * @member {string} [description] Describes the functionality of the managed
   * rule.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
}

/**
 * @interface
 * An interface representing ManagedRuleGroupDefinition.
 * Describes a managed rule group.
 *
 */
export interface ManagedRuleGroupDefinition {
  /**
   * @member {string} [ruleGroupName] Name of the managed rule group.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly ruleGroupName?: string;
  /**
   * @member {string} [description] Description of the managed rule group.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
  /**
   * @member {ManagedRuleDefinition[]} [rules] List of rules within the managed
   * rule group.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly rules?: ManagedRuleDefinition[];
}

/**
 * @interface
 * An interface representing ManagedRuleSetDefinition.
 * Describes the a managed rule set definition.
 *
 * @extends Resource
 */
export interface ManagedRuleSetDefinition extends Resource {
  /**
   * @member {string} [provisioningState] Provisioning state of the managed
   * rule set.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provisioningState?: string;
  /**
   * @member {string} [ruleSetType] Type of the managed rule set.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly ruleSetType?: string;
  /**
   * @member {string} [ruleSetVersion] Version of the managed rule set type.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly ruleSetVersion?: string;
  /**
   * @member {ManagedRuleGroupDefinition[]} [ruleGroups] Rule groups of the
   * managed rule set.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly ruleGroups?: ManagedRuleGroupDefinition[];
}

/**
 * @interface
 * An interface representing FrontDoorManagementClientOptions.
 * @extends AzureServiceClientOptions
 */
export interface FrontDoorManagementClientOptions extends AzureServiceClientOptions {
  /**
   * @member {string} [baseUri]
   */
  baseUri?: string;
}


/**
 * @interface
 * An interface representing the FrontDoorListResult.
 * Result of the request to list Front Doors. It contains a list of Front Door
 * objects and a URL link to get the next set of results.
 *
 * @extends Array<FrontDoor>
 */
export interface FrontDoorListResult extends Array<FrontDoor> {
  /**
   * @member {string} [nextLink] URL to get the next set of Front Door objects
   * if there are any.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the RoutingRuleListResult.
 * Result of the request to list Routing Rules. It contains a list of Routing
 * Rule objects and a URL link to get the next set of results.
 *
 * @extends Array<RoutingRule>
 */
export interface RoutingRuleListResult extends Array<RoutingRule> {
  /**
   * @member {string} [nextLink] URL to get the next set of RoutingRule objects
   * if there are any.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the HealthProbeSettingsListResult.
 * Result of the request to list HealthProbeSettings. It contains a list of
 * HealthProbeSettings objects and a URL link to get the next set of results.
 *
 * @extends Array<HealthProbeSettingsModel>
 */
export interface HealthProbeSettingsListResult extends Array<HealthProbeSettingsModel> {
  /**
   * @member {string} [nextLink] URL to get the next set of HealthProbeSettings
   * objects if there are any.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the LoadBalancingSettingsListResult.
 * Result of the request to list load balancing settings. It contains a list of
 * load balancing settings objects and a URL link to get the next set of
 * results.
 *
 * @extends Array<LoadBalancingSettingsModel>
 */
export interface LoadBalancingSettingsListResult extends Array<LoadBalancingSettingsModel> {
  /**
   * @member {string} [nextLink] URL to get the next set of
   * LoadBalancingSettings objects if there are any.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the BackendPoolListResult.
 * Result of the request to list Backend Pools. It contains a list of Backend
 * Pools objects and a URL link to get the next set of results.
 *
 * @extends Array<BackendPool>
 */
export interface BackendPoolListResult extends Array<BackendPool> {
  /**
   * @member {string} [nextLink] URL to get the next set of BackendPool objects
   * if there are any.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the FrontendEndpointsListResult.
 * Result of the request to list frontend endpoints. It contains a list of
 * Frontend endpoint objects and a URL link to get the next set of results.
 *
 * @extends Array<FrontendEndpoint>
 */
export interface FrontendEndpointsListResult extends Array<FrontendEndpoint> {
  /**
   * @member {string} [nextLink] URL to get the next set of frontend endpoints
   * if there are any.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the WebApplicationFirewallPolicyList.
 * Defines a list of WebApplicationFirewallPolicies. It contains a list of
 * WebApplicationFirewallPolicy objects and a URL link to get the the next set
 * of results.
 *
 * @extends Array<WebApplicationFirewallPolicy>
 */
export interface WebApplicationFirewallPolicyList extends Array<WebApplicationFirewallPolicy> {
  /**
   * @member {string} [nextLink] URL to get the next set of
   * WebApplicationFirewallPolicy objects if there are any.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the ManagedRuleSetDefinitionList.
 * List of managed rule set definitions available for use in a policy.
 *
 * @extends Array<ManagedRuleSetDefinition>
 */
export interface ManagedRuleSetDefinitionList extends Array<ManagedRuleSetDefinition> {
  /**
   * @member {string} [nextLink] URL to retrieve next set of managed rule set
   * definitions.
   */
  nextLink?: string;
}

/**
 * Defines values for FrontDoorResourceState.
 * Possible values include: 'Creating', 'Enabling', 'Enabled', 'Disabling', 'Disabled', 'Deleting'
 * @readonly
 * @enum {string}
 */
export type FrontDoorResourceState = 'Creating' | 'Enabling' | 'Enabled' | 'Disabling' | 'Disabled' | 'Deleting';

/**
 * Defines values for CustomHttpsProvisioningState.
 * Possible values include: 'Enabling', 'Enabled', 'Disabling', 'Disabled', 'Failed'
 * @readonly
 * @enum {string}
 */
export type CustomHttpsProvisioningState = 'Enabling' | 'Enabled' | 'Disabling' | 'Disabled' | 'Failed';

/**
 * Defines values for CustomHttpsProvisioningSubstate.
 * Possible values include: 'SubmittingDomainControlValidationRequest',
 * 'PendingDomainControlValidationREquestApproval', 'DomainControlValidationRequestApproved',
 * 'DomainControlValidationRequestRejected', 'DomainControlValidationRequestTimedOut',
 * 'IssuingCertificate', 'DeployingCertificate', 'CertificateDeployed', 'DeletingCertificate',
 * 'CertificateDeleted'
 * @readonly
 * @enum {string}
 */
export type CustomHttpsProvisioningSubstate = 'SubmittingDomainControlValidationRequest' | 'PendingDomainControlValidationREquestApproval' | 'DomainControlValidationRequestApproved' | 'DomainControlValidationRequestRejected' | 'DomainControlValidationRequestTimedOut' | 'IssuingCertificate' | 'DeployingCertificate' | 'CertificateDeployed' | 'DeletingCertificate' | 'CertificateDeleted';

/**
 * Defines values for FrontDoorCertificateSource.
 * Possible values include: 'AzureKeyVault', 'FrontDoor'
 * @readonly
 * @enum {string}
 */
export type FrontDoorCertificateSource = 'AzureKeyVault' | 'FrontDoor';

/**
 * Defines values for FrontDoorTlsProtocolType.
 * Possible values include: 'ServerNameIndication'
 * @readonly
 * @enum {string}
 */
export type FrontDoorTlsProtocolType = 'ServerNameIndication';

/**
 * Defines values for FrontDoorCertificateType.
 * Possible values include: 'Dedicated'
 * @readonly
 * @enum {string}
 */
export type FrontDoorCertificateType = 'Dedicated';

/**
 * Defines values for EnforceCertificateNameCheckEnabledState.
 * Possible values include: 'Enabled', 'Disabled'
 * @readonly
 * @enum {string}
 */
export type EnforceCertificateNameCheckEnabledState = 'Enabled' | 'Disabled';

/**
 * Defines values for FrontDoorEnabledState.
 * Possible values include: 'Enabled', 'Disabled'
 * @readonly
 * @enum {string}
 */
export type FrontDoorEnabledState = 'Enabled' | 'Disabled';

/**
 * Defines values for FrontDoorProtocol.
 * Possible values include: 'Http', 'Https'
 * @readonly
 * @enum {string}
 */
export type FrontDoorProtocol = 'Http' | 'Https';

/**
 * Defines values for RoutingRuleEnabledState.
 * Possible values include: 'Enabled', 'Disabled'
 * @readonly
 * @enum {string}
 */
export type RoutingRuleEnabledState = 'Enabled' | 'Disabled';

/**
 * Defines values for FrontDoorForwardingProtocol.
 * Possible values include: 'HttpOnly', 'HttpsOnly', 'MatchRequest'
 * @readonly
 * @enum {string}
 */
export type FrontDoorForwardingProtocol = 'HttpOnly' | 'HttpsOnly' | 'MatchRequest';

/**
 * Defines values for FrontDoorQuery.
 * Possible values include: 'StripNone', 'StripAll'
 * @readonly
 * @enum {string}
 */
export type FrontDoorQuery = 'StripNone' | 'StripAll';

/**
 * Defines values for DynamicCompressionEnabled.
 * Possible values include: 'Enabled', 'Disabled'
 * @readonly
 * @enum {string}
 */
export type DynamicCompressionEnabled = 'Enabled' | 'Disabled';

/**
 * Defines values for FrontDoorRedirectType.
 * Possible values include: 'Moved', 'Found', 'TemporaryRedirect', 'PermanentRedirect'
 * @readonly
 * @enum {string}
 */
export type FrontDoorRedirectType = 'Moved' | 'Found' | 'TemporaryRedirect' | 'PermanentRedirect';

/**
 * Defines values for FrontDoorRedirectProtocol.
 * Possible values include: 'HttpOnly', 'HttpsOnly', 'MatchRequest'
 * @readonly
 * @enum {string}
 */
export type FrontDoorRedirectProtocol = 'HttpOnly' | 'HttpsOnly' | 'MatchRequest';

/**
 * Defines values for BackendEnabledState.
 * Possible values include: 'Enabled', 'Disabled'
 * @readonly
 * @enum {string}
 */
export type BackendEnabledState = 'Enabled' | 'Disabled';

/**
 * Defines values for SessionAffinityEnabledState.
 * Possible values include: 'Enabled', 'Disabled'
 * @readonly
 * @enum {string}
 */
export type SessionAffinityEnabledState = 'Enabled' | 'Disabled';

/**
 * Defines values for ResourceType.
 * Possible values include: 'Microsoft.Network/frontDoors',
 * 'Microsoft.Network/frontDoors/frontendEndpoints'
 * @readonly
 * @enum {string}
 */
export type ResourceType = 'Microsoft.Network/frontDoors' | 'Microsoft.Network/frontDoors/frontendEndpoints';

/**
 * Defines values for Availability.
 * Possible values include: 'Available', 'Unavailable'
 * @readonly
 * @enum {string}
 */
export type Availability = 'Available' | 'Unavailable';

/**
 * Defines values for NetworkOperationStatus.
 * Possible values include: 'InProgress', 'Succeeded', 'Failed'
 * @readonly
 * @enum {string}
 */
export type NetworkOperationStatus = 'InProgress' | 'Succeeded' | 'Failed';

/**
 * Defines values for PolicyEnabledState.
 * Possible values include: 'Disabled', 'Enabled'
 * @readonly
 * @enum {string}
 */
export type PolicyEnabledState = 'Disabled' | 'Enabled';

/**
 * Defines values for PolicyMode.
 * Possible values include: 'Prevention', 'Detection'
 * @readonly
 * @enum {string}
 */
export type PolicyMode = 'Prevention' | 'Detection';

/**
 * Defines values for CustomRuleEnabledState.
 * Possible values include: 'Disabled', 'Enabled'
 * @readonly
 * @enum {string}
 */
export type CustomRuleEnabledState = 'Disabled' | 'Enabled';

/**
 * Defines values for RuleType.
 * Possible values include: 'MatchRule', 'RateLimitRule'
 * @readonly
 * @enum {string}
 */
export type RuleType = 'MatchRule' | 'RateLimitRule';

/**
 * Defines values for MatchVariable.
 * Possible values include: 'RemoteAddr', 'RequestMethod', 'QueryString', 'PostArgs', 'RequestUri',
 * 'RequestHeader', 'RequestBody', 'Cookies'
 * @readonly
 * @enum {string}
 */
export type MatchVariable = 'RemoteAddr' | 'RequestMethod' | 'QueryString' | 'PostArgs' | 'RequestUri' | 'RequestHeader' | 'RequestBody' | 'Cookies';

/**
 * Defines values for Operator.
 * Possible values include: 'Any', 'IPMatch', 'GeoMatch', 'Equal', 'Contains', 'LessThan',
 * 'GreaterThan', 'LessThanOrEqual', 'GreaterThanOrEqual', 'BeginsWith', 'EndsWith', 'RegEx'
 * @readonly
 * @enum {string}
 */
export type Operator = 'Any' | 'IPMatch' | 'GeoMatch' | 'Equal' | 'Contains' | 'LessThan' | 'GreaterThan' | 'LessThanOrEqual' | 'GreaterThanOrEqual' | 'BeginsWith' | 'EndsWith' | 'RegEx';

/**
 * Defines values for TransformType.
 * Possible values include: 'Lowercase', 'Uppercase', 'Trim', 'UrlDecode', 'UrlEncode',
 * 'RemoveNulls'
 * @readonly
 * @enum {string}
 */
export type TransformType = 'Lowercase' | 'Uppercase' | 'Trim' | 'UrlDecode' | 'UrlEncode' | 'RemoveNulls';

/**
 * Defines values for ActionType.
 * Possible values include: 'Allow', 'Block', 'Log', 'Redirect'
 * @readonly
 * @enum {string}
 */
export type ActionType = 'Allow' | 'Block' | 'Log' | 'Redirect';

/**
 * Defines values for ManagedRuleEnabledState.
 * Possible values include: 'Disabled', 'Enabled'
 * @readonly
 * @enum {string}
 */
export type ManagedRuleEnabledState = 'Disabled' | 'Enabled';

/**
 * Defines values for PolicyResourceState.
 * Possible values include: 'Creating', 'Enabling', 'Enabled', 'Disabling', 'Disabled', 'Deleting'
 * @readonly
 * @enum {string}
 */
export type PolicyResourceState = 'Creating' | 'Enabling' | 'Enabled' | 'Disabling' | 'Disabled' | 'Deleting';

/**
 * Contains response data for the checkFrontDoorNameAvailability operation.
 */
export type CheckFrontDoorNameAvailabilityResponse = CheckNameAvailabilityOutput & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CheckNameAvailabilityOutput;
    };
};

/**
 * Contains response data for the checkFrontDoorNameAvailabilityWithSubscription operation.
 */
export type CheckFrontDoorNameAvailabilityWithSubscriptionResponse = CheckNameAvailabilityOutput & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CheckNameAvailabilityOutput;
    };
};

/**
 * Contains response data for the list operation.
 */
export type FrontDoorsListResponse = FrontDoorListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FrontDoorListResult;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type FrontDoorsListByResourceGroupResponse = FrontDoorListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FrontDoorListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type FrontDoorsGetResponse = FrontDoor & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FrontDoor;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type FrontDoorsCreateOrUpdateResponse = FrontDoor & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FrontDoor;
    };
};

/**
 * Contains response data for the validateCustomDomain operation.
 */
export type FrontDoorsValidateCustomDomainResponse = ValidateCustomDomainOutput & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ValidateCustomDomainOutput;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type FrontDoorsBeginCreateOrUpdateResponse = FrontDoor & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FrontDoor;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type FrontDoorsListNextResponse = FrontDoorListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FrontDoorListResult;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type FrontDoorsListByResourceGroupNextResponse = FrontDoorListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FrontDoorListResult;
    };
};

/**
 * Contains response data for the listByFrontDoor operation.
 */
export type RoutingRulesListByFrontDoorResponse = RoutingRuleListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoutingRuleListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type RoutingRulesGetResponse = RoutingRule & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoutingRule;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type RoutingRulesCreateOrUpdateResponse = RoutingRule & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoutingRule;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type RoutingRulesBeginCreateOrUpdateResponse = RoutingRule & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoutingRule;
    };
};

/**
 * Contains response data for the listByFrontDoorNext operation.
 */
export type RoutingRulesListByFrontDoorNextResponse = RoutingRuleListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoutingRuleListResult;
    };
};

/**
 * Contains response data for the listByFrontDoor operation.
 */
export type HealthProbeSettingsListByFrontDoorResponse = HealthProbeSettingsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HealthProbeSettingsListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type HealthProbeSettingsGetResponse = HealthProbeSettingsModel & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HealthProbeSettingsModel;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type HealthProbeSettingsCreateOrUpdateResponse = HealthProbeSettingsModel & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HealthProbeSettingsModel;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type HealthProbeSettingsBeginCreateOrUpdateResponse = HealthProbeSettingsModel & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HealthProbeSettingsModel;
    };
};

/**
 * Contains response data for the listByFrontDoorNext operation.
 */
export type HealthProbeSettingsListByFrontDoorNextResponse = HealthProbeSettingsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HealthProbeSettingsListResult;
    };
};

/**
 * Contains response data for the listByFrontDoor operation.
 */
export type LoadBalancingSettingsListByFrontDoorResponse = LoadBalancingSettingsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LoadBalancingSettingsListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type LoadBalancingSettingsGetResponse = LoadBalancingSettingsModel & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LoadBalancingSettingsModel;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type LoadBalancingSettingsCreateOrUpdateResponse = LoadBalancingSettingsModel & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LoadBalancingSettingsModel;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type LoadBalancingSettingsBeginCreateOrUpdateResponse = LoadBalancingSettingsModel & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LoadBalancingSettingsModel;
    };
};

/**
 * Contains response data for the listByFrontDoorNext operation.
 */
export type LoadBalancingSettingsListByFrontDoorNextResponse = LoadBalancingSettingsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LoadBalancingSettingsListResult;
    };
};

/**
 * Contains response data for the listByFrontDoor operation.
 */
export type BackendPoolsListByFrontDoorResponse = BackendPoolListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackendPoolListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type BackendPoolsGetResponse = BackendPool & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackendPool;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type BackendPoolsCreateOrUpdateResponse = BackendPool & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackendPool;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type BackendPoolsBeginCreateOrUpdateResponse = BackendPool & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackendPool;
    };
};

/**
 * Contains response data for the listByFrontDoorNext operation.
 */
export type BackendPoolsListByFrontDoorNextResponse = BackendPoolListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackendPoolListResult;
    };
};

/**
 * Contains response data for the listByFrontDoor operation.
 */
export type FrontendEndpointsListByFrontDoorResponse = FrontendEndpointsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FrontendEndpointsListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type FrontendEndpointsGetResponse = FrontendEndpoint & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FrontendEndpoint;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type FrontendEndpointsCreateOrUpdateResponse = FrontendEndpoint & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FrontendEndpoint;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type FrontendEndpointsBeginCreateOrUpdateResponse = FrontendEndpoint & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FrontendEndpoint;
    };
};

/**
 * Contains response data for the listByFrontDoorNext operation.
 */
export type FrontendEndpointsListByFrontDoorNextResponse = FrontendEndpointsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FrontendEndpointsListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type PoliciesListResponse = WebApplicationFirewallPolicyList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WebApplicationFirewallPolicyList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type PoliciesGetResponse = WebApplicationFirewallPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WebApplicationFirewallPolicy;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type PoliciesCreateOrUpdateResponse = WebApplicationFirewallPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WebApplicationFirewallPolicy;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type PoliciesBeginCreateOrUpdateResponse = WebApplicationFirewallPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WebApplicationFirewallPolicy;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type PoliciesListNextResponse = WebApplicationFirewallPolicyList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WebApplicationFirewallPolicyList;
    };
};

/**
 * Contains response data for the list operation.
 */
export type ManagedRuleSetsListResponse = ManagedRuleSetDefinitionList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedRuleSetDefinitionList;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type ManagedRuleSetsListNextResponse = ManagedRuleSetDefinitionList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ManagedRuleSetDefinitionList;
    };
};
