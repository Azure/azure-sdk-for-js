/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";

export const acceptLanguage: msRest.OperationParameter = {
  parameterPath: "acceptLanguage",
  mapper: {
    serializedName: "accept-language",
    defaultValue: 'en-US',
    type: {
      name: "String"
    }
  }
};
export const apiVersion: msRest.OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    required: true,
    isConstant: true,
    serializedName: "api-version",
    defaultValue: '2018-08-01',
    type: {
      name: "String"
    }
  }
};
export const backendPoolName: msRest.OperationURLParameter = {
  parameterPath: "backendPoolName",
  mapper: {
    required: true,
    serializedName: "backendPoolName",
    constraints: {
      MaxLength: 90,
      MinLength: 1,
      Pattern: /^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$/
    },
    type: {
      name: "String"
    }
  }
};
export const frontDoorName: msRest.OperationURLParameter = {
  parameterPath: "frontDoorName",
  mapper: {
    required: true,
    serializedName: "frontDoorName",
    constraints: {
      MaxLength: 64,
      MinLength: 5,
      Pattern: /^[a-zA-Z0-9]+([-a-zA-Z0-9]?[a-zA-Z0-9])*$/
    },
    type: {
      name: "String"
    }
  }
};
export const frontendEndpointName: msRest.OperationURLParameter = {
  parameterPath: "frontendEndpointName",
  mapper: {
    required: true,
    serializedName: "frontendEndpointName",
    constraints: {
      MaxLength: 255,
      MinLength: 1,
      Pattern: /^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$/
    },
    type: {
      name: "String"
    }
  }
};
export const healthProbeSettingsName: msRest.OperationURLParameter = {
  parameterPath: "healthProbeSettingsName",
  mapper: {
    required: true,
    serializedName: "healthProbeSettingsName",
    constraints: {
      MaxLength: 90,
      MinLength: 1,
      Pattern: /^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$/
    },
    type: {
      name: "String"
    }
  }
};
export const loadBalancingSettingsName: msRest.OperationURLParameter = {
  parameterPath: "loadBalancingSettingsName",
  mapper: {
    required: true,
    serializedName: "loadBalancingSettingsName",
    constraints: {
      MaxLength: 90,
      MinLength: 1,
      Pattern: /^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$/
    },
    type: {
      name: "String"
    }
  }
};
export const nextPageLink: msRest.OperationURLParameter = {
  parameterPath: "nextPageLink",
  mapper: {
    required: true,
    serializedName: "nextLink",
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};
export const policyName: msRest.OperationURLParameter = {
  parameterPath: "policyName",
  mapper: {
    required: true,
    serializedName: "policyName",
    constraints: {
      MaxLength: 128
    },
    type: {
      name: "String"
    }
  }
};
export const resourceGroupName0: msRest.OperationURLParameter = {
  parameterPath: "resourceGroupName",
  mapper: {
    required: true,
    serializedName: "resourceGroupName",
    constraints: {
      MaxLength: 80,
      MinLength: 1,
      Pattern: /^[a-zA-Z0-9_\-\(\)\.]*[^\.]$/
    },
    type: {
      name: "String"
    }
  }
};
export const resourceGroupName1: msRest.OperationURLParameter = {
  parameterPath: "resourceGroupName",
  mapper: {
    required: true,
    serializedName: "resourceGroupName",
    type: {
      name: "String"
    }
  }
};
export const routingRuleName: msRest.OperationURLParameter = {
  parameterPath: "routingRuleName",
  mapper: {
    required: true,
    serializedName: "routingRuleName",
    constraints: {
      MaxLength: 90,
      MinLength: 1,
      Pattern: /^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$/
    },
    type: {
      name: "String"
    }
  }
};
export const subscriptionId: msRest.OperationURLParameter = {
  parameterPath: "subscriptionId",
  mapper: {
    required: true,
    serializedName: "subscriptionId",
    type: {
      name: "String"
    }
  }
};
