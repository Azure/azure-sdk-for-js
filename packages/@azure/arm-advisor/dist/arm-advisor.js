/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('ms-rest-azure-js'), require('ms-rest-js')) :
    typeof define === 'function' && define.amd ? define(['exports', 'ms-rest-azure-js', 'ms-rest-js'], factory) :
    (factory((global.Azure = global.Azure || {}, global.Azure.ArmAdvisor = {}),global.msRestAzure,global.msRest));
}(this, (function (exports,msRestAzure,msRest) { 'use strict';

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */
    /* global Reflect, Promise */

    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };

    function __extends(d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }

    var __assign = function() {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    /**
     * Defines values for Category.
     * Possible values include: 'HighAvailability', 'Security', 'Performance',
     * 'Cost'
     * There could be more values for this enum apart from the ones defined here.If
     * you want to set a value that is not from the known values then you can do
     * the following:
     * let param: Category = <Category>"someUnknownValueThatWillStillBeValid";
     * @readonly
     * @enum {string}
     */
    var Category;
    (function (Category) {
        Category["HighAvailability"] = "HighAvailability";
        Category["Security"] = "Security";
        Category["Performance"] = "Performance";
        Category["Cost"] = "Cost";
    })(Category || (Category = {}));
    /**
     * Defines values for Impact.
     * Possible values include: 'High', 'Medium', 'Low'
     * There could be more values for this enum apart from the ones defined here.If
     * you want to set a value that is not from the known values then you can do
     * the following:
     * let param: Impact = <Impact>"someUnknownValueThatWillStillBeValid";
     * @readonly
     * @enum {string}
     */
    var Impact;
    (function (Impact) {
        Impact["High"] = "High";
        Impact["Medium"] = "Medium";
        Impact["Low"] = "Low";
    })(Impact || (Impact = {}));
    /**
     * Defines values for Risk.
     * Possible values include: 'Error', 'Warning', 'None'
     * There could be more values for this enum apart from the ones defined here.If
     * you want to set a value that is not from the known values then you can do
     * the following:
     * let param: Risk = <Risk>"someUnknownValueThatWillStillBeValid";
     * @readonly
     * @enum {string}
     */
    var Risk;
    (function (Risk) {
        Risk["Error"] = "Error";
        Risk["Warning"] = "Warning";
        Risk["None"] = "None";
    })(Risk || (Risk = {}));

    var index = /*#__PURE__*/Object.freeze({
        get Category () { return Category; },
        get Impact () { return Impact; },
        get Risk () { return Risk; }
    });

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    var CloudError = msRestAzure.CloudErrorMapper;
    var BaseResource = msRestAzure.BaseResourceMapper;
    var ConfigDataProperties = {
        serializedName: "ConfigData_properties",
        type: {
            name: "Composite",
            className: "ConfigDataProperties",
            modelProperties: {
                exclude: {
                    serializedName: "exclude",
                    type: {
                        name: "Boolean"
                    }
                },
                lowCpuThreshold: {
                    serializedName: "low_cpu_threshold",
                    type: {
                        name: "String"
                    }
                }
            },
            additionalProperties: {
                type: {
                    name: "Object"
                }
            }
        }
    };
    var ConfigData = {
        serializedName: "ConfigData",
        type: {
            name: "Composite",
            className: "ConfigData",
            modelProperties: {
                id: {
                    serializedName: "id",
                    type: {
                        name: "String"
                    }
                },
                type: {
                    serializedName: "type",
                    type: {
                        name: "String"
                    }
                },
                name: {
                    serializedName: "name",
                    type: {
                        name: "String"
                    }
                },
                properties: {
                    serializedName: "properties",
                    type: {
                        name: "Composite",
                        className: "ConfigDataProperties",
                        additionalProperties: {
                            type: {
                                name: "Object"
                            }
                        }
                    }
                }
            }
        }
    };
    var ARMErrorResponseBody = {
        serializedName: "ARMErrorResponseBody",
        type: {
            name: "Composite",
            className: "ARMErrorResponseBody",
            modelProperties: {
                message: {
                    serializedName: "message",
                    type: {
                        name: "String"
                    }
                },
                code: {
                    serializedName: "code",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var ShortDescription = {
        serializedName: "ShortDescription",
        type: {
            name: "Composite",
            className: "ShortDescription",
            modelProperties: {
                problem: {
                    serializedName: "problem",
                    type: {
                        name: "String"
                    }
                },
                solution: {
                    serializedName: "solution",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var Resource = {
        serializedName: "Resource",
        type: {
            name: "Composite",
            className: "Resource",
            modelProperties: {
                id: {
                    readOnly: true,
                    serializedName: "id",
                    type: {
                        name: "String"
                    }
                },
                name: {
                    readOnly: true,
                    serializedName: "name",
                    type: {
                        name: "String"
                    }
                },
                type: {
                    readOnly: true,
                    serializedName: "type",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var ResourceRecommendationBase = {
        serializedName: "ResourceRecommendationBase",
        type: {
            name: "Composite",
            className: "ResourceRecommendationBase",
            modelProperties: __assign({}, Resource.type.modelProperties, { category: {
                    serializedName: "properties.category",
                    type: {
                        name: "String"
                    }
                }, impact: {
                    serializedName: "properties.impact",
                    type: {
                        name: "String"
                    }
                }, impactedField: {
                    serializedName: "properties.impactedField",
                    type: {
                        name: "String"
                    }
                }, impactedValue: {
                    serializedName: "properties.impactedValue",
                    type: {
                        name: "String"
                    }
                }, lastUpdated: {
                    serializedName: "properties.lastUpdated",
                    type: {
                        name: "DateTime"
                    }
                }, metadata: {
                    serializedName: "properties.metadata",
                    type: {
                        name: "Dictionary",
                        value: {
                            type: {
                                name: "Object"
                            }
                        }
                    }
                }, recommendationTypeId: {
                    serializedName: "properties.recommendationTypeId",
                    type: {
                        name: "String"
                    }
                }, risk: {
                    serializedName: "properties.risk",
                    type: {
                        name: "String"
                    }
                }, shortDescription: {
                    serializedName: "properties.shortDescription",
                    type: {
                        name: "Composite",
                        className: "ShortDescription"
                    }
                }, suppressionIds: {
                    serializedName: "properties.suppressionIds",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Uuid"
                            }
                        }
                    }
                }, extendedProperties: {
                    serializedName: "properties.extendedProperties",
                    type: {
                        name: "Dictionary",
                        value: {
                            type: {
                                name: "String"
                            }
                        }
                    }
                } })
        }
    };
    var OperationDisplayInfo = {
        serializedName: "OperationDisplayInfo",
        type: {
            name: "Composite",
            className: "OperationDisplayInfo",
            modelProperties: {
                description: {
                    serializedName: "description",
                    type: {
                        name: "String"
                    }
                },
                operation: {
                    serializedName: "operation",
                    type: {
                        name: "String"
                    }
                },
                provider: {
                    serializedName: "provider",
                    type: {
                        name: "String"
                    }
                },
                resource: {
                    serializedName: "resource",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var OperationEntity = {
        serializedName: "OperationEntity",
        type: {
            name: "Composite",
            className: "OperationEntity",
            modelProperties: {
                name: {
                    serializedName: "name",
                    type: {
                        name: "String"
                    }
                },
                display: {
                    serializedName: "display",
                    type: {
                        name: "Composite",
                        className: "OperationDisplayInfo"
                    }
                }
            }
        }
    };
    var SuppressionContract = {
        serializedName: "SuppressionContract",
        type: {
            name: "Composite",
            className: "SuppressionContract",
            modelProperties: __assign({}, Resource.type.modelProperties, { suppressionId: {
                    serializedName: "properties.suppressionId",
                    type: {
                        name: "String"
                    }
                }, ttl: {
                    serializedName: "properties.ttl",
                    type: {
                        name: "String"
                    }
                } })
        }
    };
    var RecommendationsGenerateHeaders = {
        serializedName: "recommendations-generate-headers",
        type: {
            name: "Composite",
            className: "RecommendationsGenerateHeaders",
            modelProperties: {
                location: {
                    serializedName: "location",
                    type: {
                        name: "String"
                    }
                },
                retryAfter: {
                    serializedName: "retry-after",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var ConfigurationListResult = {
        serializedName: "ConfigurationListResult",
        type: {
            name: "Composite",
            className: "ConfigurationListResult",
            modelProperties: {
                value: {
                    serializedName: "",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "ConfigData"
                            }
                        }
                    }
                },
                nextLink: {
                    serializedName: "nextLink",
                    type: {
                        name: "String"
                    }
                }
            }
        }
    };
    var ResourceRecommendationBaseListResult = {
        serializedName: "ResourceRecommendationBaseListResult",
        type: {
            name: "Composite",
            className: "ResourceRecommendationBaseListResult",
            modelProperties: {
                nextLink: {
                    serializedName: "nextLink",
                    type: {
                        name: "String"
                    }
                },
                value: {
                    serializedName: "",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "ResourceRecommendationBase"
                            }
                        }
                    }
                }
            }
        }
    };
    var OperationEntityListResult = {
        serializedName: "OperationEntityListResult",
        type: {
            name: "Composite",
            className: "OperationEntityListResult",
            modelProperties: {
                nextLink: {
                    serializedName: "nextLink",
                    type: {
                        name: "String"
                    }
                },
                value: {
                    serializedName: "",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "OperationEntity"
                            }
                        }
                    }
                }
            }
        }
    };
    var SuppressionContractListResult = {
        serializedName: "SuppressionContractListResult",
        type: {
            name: "Composite",
            className: "SuppressionContractListResult",
            modelProperties: {
                nextLink: {
                    serializedName: "nextLink",
                    type: {
                        name: "String"
                    }
                },
                value: {
                    serializedName: "",
                    type: {
                        name: "Sequence",
                        element: {
                            type: {
                                name: "Composite",
                                className: "SuppressionContract"
                            }
                        }
                    }
                }
            }
        }
    };

    var mappers = /*#__PURE__*/Object.freeze({
        CloudError: CloudError,
        BaseResource: BaseResource,
        ConfigDataProperties: ConfigDataProperties,
        ConfigData: ConfigData,
        ARMErrorResponseBody: ARMErrorResponseBody,
        ShortDescription: ShortDescription,
        Resource: Resource,
        ResourceRecommendationBase: ResourceRecommendationBase,
        OperationDisplayInfo: OperationDisplayInfo,
        OperationEntity: OperationEntity,
        SuppressionContract: SuppressionContract,
        RecommendationsGenerateHeaders: RecommendationsGenerateHeaders,
        ConfigurationListResult: ConfigurationListResult,
        ResourceRecommendationBaseListResult: ResourceRecommendationBaseListResult,
        OperationEntityListResult: OperationEntityListResult,
        SuppressionContractListResult: SuppressionContractListResult
    });

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */

    var Mappers = /*#__PURE__*/Object.freeze({
        ConfigurationListResult: ConfigurationListResult,
        ConfigData: ConfigData,
        ConfigDataProperties: ConfigDataProperties,
        CloudError: CloudError,
        ARMErrorResponseBody: ARMErrorResponseBody
    });

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    var acceptLanguage = {
        parameterPath: "acceptLanguage",
        mapper: {
            serializedName: "accept-language",
            defaultValue: 'en-US',
            type: {
                name: "String"
            }
        }
    };
    var apiVersion = {
        parameterPath: "apiVersion",
        mapper: {
            required: true,
            serializedName: "api-version",
            type: {
                name: "String"
            }
        }
    };
    var filter = {
        parameterPath: [
            "options",
            "filter"
        ],
        mapper: {
            serializedName: "$filter",
            type: {
                name: "String"
            }
        }
    };
    var name = {
        parameterPath: "name",
        mapper: {
            required: true,
            serializedName: "name",
            type: {
                name: "String"
            }
        }
    };
    var nextPageLink = {
        parameterPath: "nextPageLink",
        mapper: {
            required: true,
            serializedName: "nextLink",
            type: {
                name: "String"
            }
        },
        skipEncoding: true
    };
    var operationId = {
        parameterPath: "operationId",
        mapper: {
            required: true,
            serializedName: "operationId",
            type: {
                name: "Uuid"
            }
        }
    };
    var recommendationId = {
        parameterPath: "recommendationId",
        mapper: {
            required: true,
            serializedName: "recommendationId",
            type: {
                name: "String"
            }
        }
    };
    var resourceGroup = {
        parameterPath: "resourceGroup",
        mapper: {
            required: true,
            serializedName: "resourceGroup",
            type: {
                name: "String"
            }
        }
    };
    var resourceUri = {
        parameterPath: "resourceUri",
        mapper: {
            required: true,
            serializedName: "resourceUri",
            type: {
                name: "String"
            }
        }
    };
    var skipToken = {
        parameterPath: [
            "options",
            "skipToken"
        ],
        mapper: {
            serializedName: "$skipToken",
            type: {
                name: "String"
            }
        }
    };
    var subscriptionId = {
        parameterPath: "subscriptionId",
        mapper: {
            required: true,
            serializedName: "subscriptionId",
            type: {
                name: "String"
            }
        }
    };
    var top = {
        parameterPath: [
            "options",
            "top"
        ],
        mapper: {
            serializedName: "$top",
            type: {
                name: "Number"
            }
        }
    };

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    /** Class representing a Configurations. */
    var Configurations = /** @class */ (function () {
        /**
         * Create a Configurations.
         * @param {AdvisorManagementClientContext} client Reference to the service client.
         */
        function Configurations(client) {
            this.client = client;
        }
        Configurations.prototype.listBySubscription = function (options, callback) {
            return this.client.sendOperationRequest({
                options: options
            }, listBySubscriptionOperationSpec, callback);
        };
        Configurations.prototype.createInSubscription = function (configContract, options, callback) {
            return this.client.sendOperationRequest({
                configContract: configContract,
                options: options
            }, createInSubscriptionOperationSpec, callback);
        };
        Configurations.prototype.listByResourceGroup = function (resourceGroup$$1, options, callback) {
            return this.client.sendOperationRequest({
                resourceGroup: resourceGroup$$1,
                options: options
            }, listByResourceGroupOperationSpec, callback);
        };
        Configurations.prototype.createInResourceGroup = function (configContract, resourceGroup$$1, options, callback) {
            return this.client.sendOperationRequest({
                configContract: configContract,
                resourceGroup: resourceGroup$$1,
                options: options
            }, createInResourceGroupOperationSpec, callback);
        };
        Configurations.prototype.listBySubscriptionNext = function (nextPageLink$$1, options, callback) {
            return this.client.sendOperationRequest({
                nextPageLink: nextPageLink$$1,
                options: options
            }, listBySubscriptionNextOperationSpec, callback);
        };
        return Configurations;
    }());
    // Operation Specifications
    var serializer = new msRest.Serializer(Mappers);
    var listBySubscriptionOperationSpec = {
        httpMethod: "GET",
        path: "subscriptions/{subscriptionId}/providers/Microsoft.Advisor/configurations",
        urlParameters: [
            subscriptionId
        ],
        queryParameters: [
            apiVersion
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            200: {
                bodyMapper: ConfigurationListResult
            },
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer
    };
    var createInSubscriptionOperationSpec = {
        httpMethod: "PUT",
        path: "subscriptions/{subscriptionId}/providers/Microsoft.Advisor/configurations",
        urlParameters: [
            subscriptionId
        ],
        queryParameters: [
            apiVersion
        ],
        headerParameters: [
            acceptLanguage
        ],
        requestBody: {
            parameterPath: "configContract",
            mapper: __assign({}, ConfigData, { required: true })
        },
        responses: {
            204: {},
            400: {
                bodyMapper: ARMErrorResponseBody
            },
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer
    };
    var listByResourceGroupOperationSpec = {
        httpMethod: "GET",
        path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Advisor/configurations",
        urlParameters: [
            subscriptionId,
            resourceGroup
        ],
        queryParameters: [
            apiVersion
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            200: {
                bodyMapper: ConfigurationListResult
            },
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer
    };
    var createInResourceGroupOperationSpec = {
        httpMethod: "PUT",
        path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Advisor/configurations",
        urlParameters: [
            subscriptionId,
            resourceGroup
        ],
        queryParameters: [
            apiVersion
        ],
        headerParameters: [
            acceptLanguage
        ],
        requestBody: {
            parameterPath: "configContract",
            mapper: __assign({}, ConfigData, { required: true })
        },
        responses: {
            204: {},
            400: {
                bodyMapper: ARMErrorResponseBody
            },
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer
    };
    var listBySubscriptionNextOperationSpec = {
        httpMethod: "GET",
        baseUrl: "https://management.azure.com",
        path: "{nextLink}",
        urlParameters: [
            nextPageLink
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            200: {
                bodyMapper: ConfigurationListResult
            },
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer
    };

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */

    var Mappers$1 = /*#__PURE__*/Object.freeze({
        RecommendationsGenerateHeaders: RecommendationsGenerateHeaders,
        CloudError: CloudError,
        ResourceRecommendationBaseListResult: ResourceRecommendationBaseListResult,
        ResourceRecommendationBase: ResourceRecommendationBase,
        Resource: Resource,
        BaseResource: BaseResource,
        ShortDescription: ShortDescription,
        SuppressionContract: SuppressionContract
    });

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    /** Class representing a Recommendations. */
    var Recommendations = /** @class */ (function () {
        /**
         * Create a Recommendations.
         * @param {AdvisorManagementClientContext} client Reference to the service client.
         */
        function Recommendations(client) {
            this.client = client;
        }
        Recommendations.prototype.generate = function (options, callback) {
            return this.client.sendOperationRequest({
                options: options
            }, generateOperationSpec, callback);
        };
        Recommendations.prototype.getGenerateStatus = function (operationId$$1, options, callback) {
            return this.client.sendOperationRequest({
                operationId: operationId$$1,
                options: options
            }, getGenerateStatusOperationSpec, callback);
        };
        Recommendations.prototype.list = function (options, callback) {
            return this.client.sendOperationRequest({
                options: options
            }, listOperationSpec, callback);
        };
        Recommendations.prototype.get = function (resourceUri$$1, recommendationId$$1, options, callback) {
            return this.client.sendOperationRequest({
                resourceUri: resourceUri$$1,
                recommendationId: recommendationId$$1,
                options: options
            }, getOperationSpec, callback);
        };
        Recommendations.prototype.listNext = function (nextPageLink$$1, options, callback) {
            return this.client.sendOperationRequest({
                nextPageLink: nextPageLink$$1,
                options: options
            }, listNextOperationSpec, callback);
        };
        return Recommendations;
    }());
    // Operation Specifications
    var serializer$1 = new msRest.Serializer(Mappers$1);
    var generateOperationSpec = {
        httpMethod: "POST",
        path: "subscriptions/{subscriptionId}/providers/Microsoft.Advisor/generateRecommendations",
        urlParameters: [
            subscriptionId
        ],
        queryParameters: [
            apiVersion
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            202: {
                headersMapper: RecommendationsGenerateHeaders
            },
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer$1
    };
    var getGenerateStatusOperationSpec = {
        httpMethod: "GET",
        path: "subscriptions/{subscriptionId}/providers/Microsoft.Advisor/generateRecommendations/{operationId}",
        urlParameters: [
            subscriptionId,
            operationId
        ],
        queryParameters: [
            apiVersion
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            202: {},
            204: {},
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer$1
    };
    var listOperationSpec = {
        httpMethod: "GET",
        path: "subscriptions/{subscriptionId}/providers/Microsoft.Advisor/recommendations",
        urlParameters: [
            subscriptionId
        ],
        queryParameters: [
            apiVersion,
            filter,
            top,
            skipToken
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            200: {
                bodyMapper: ResourceRecommendationBaseListResult
            },
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer$1
    };
    var getOperationSpec = {
        httpMethod: "GET",
        path: "{resourceUri}/providers/Microsoft.Advisor/recommendations/{recommendationId}",
        urlParameters: [
            resourceUri,
            recommendationId
        ],
        queryParameters: [
            apiVersion
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            200: {
                bodyMapper: ResourceRecommendationBase
            },
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer$1
    };
    var listNextOperationSpec = {
        httpMethod: "GET",
        baseUrl: "https://management.azure.com",
        path: "{nextLink}",
        urlParameters: [
            nextPageLink
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            200: {
                bodyMapper: ResourceRecommendationBaseListResult
            },
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer$1
    };

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */

    var Mappers$2 = /*#__PURE__*/Object.freeze({
        OperationEntityListResult: OperationEntityListResult,
        OperationEntity: OperationEntity,
        OperationDisplayInfo: OperationDisplayInfo,
        CloudError: CloudError
    });

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    /** Class representing a Operations. */
    var Operations = /** @class */ (function () {
        /**
         * Create a Operations.
         * @param {AdvisorManagementClientContext} client Reference to the service client.
         */
        function Operations(client) {
            this.client = client;
        }
        Operations.prototype.list = function (options, callback) {
            return this.client.sendOperationRequest({
                options: options
            }, listOperationSpec$1, callback);
        };
        Operations.prototype.listNext = function (nextPageLink$$1, options, callback) {
            return this.client.sendOperationRequest({
                nextPageLink: nextPageLink$$1,
                options: options
            }, listNextOperationSpec$1, callback);
        };
        return Operations;
    }());
    // Operation Specifications
    var serializer$2 = new msRest.Serializer(Mappers$2);
    var listOperationSpec$1 = {
        httpMethod: "GET",
        path: "providers/Microsoft.Advisor/operations",
        queryParameters: [
            apiVersion
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            200: {
                bodyMapper: OperationEntityListResult
            },
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer$2
    };
    var listNextOperationSpec$1 = {
        httpMethod: "GET",
        baseUrl: "https://management.azure.com",
        path: "{nextLink}",
        urlParameters: [
            nextPageLink
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            200: {
                bodyMapper: OperationEntityListResult
            },
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer$2
    };

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */

    var Mappers$3 = /*#__PURE__*/Object.freeze({
        SuppressionContract: SuppressionContract,
        Resource: Resource,
        BaseResource: BaseResource,
        CloudError: CloudError,
        SuppressionContractListResult: SuppressionContractListResult,
        ResourceRecommendationBase: ResourceRecommendationBase,
        ShortDescription: ShortDescription
    });

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    /** Class representing a Suppressions. */
    var Suppressions = /** @class */ (function () {
        /**
         * Create a Suppressions.
         * @param {AdvisorManagementClientContext} client Reference to the service client.
         */
        function Suppressions(client) {
            this.client = client;
        }
        Suppressions.prototype.get = function (resourceUri$$1, recommendationId$$1, name$$1, options, callback) {
            return this.client.sendOperationRequest({
                resourceUri: resourceUri$$1,
                recommendationId: recommendationId$$1,
                name: name$$1,
                options: options
            }, getOperationSpec$1, callback);
        };
        Suppressions.prototype.create = function (resourceUri$$1, recommendationId$$1, name$$1, suppressionContract, options, callback) {
            return this.client.sendOperationRequest({
                resourceUri: resourceUri$$1,
                recommendationId: recommendationId$$1,
                name: name$$1,
                suppressionContract: suppressionContract,
                options: options
            }, createOperationSpec, callback);
        };
        Suppressions.prototype.deleteMethod = function (resourceUri$$1, recommendationId$$1, name$$1, options, callback) {
            return this.client.sendOperationRequest({
                resourceUri: resourceUri$$1,
                recommendationId: recommendationId$$1,
                name: name$$1,
                options: options
            }, deleteMethodOperationSpec, callback);
        };
        Suppressions.prototype.list = function (options, callback) {
            return this.client.sendOperationRequest({
                options: options
            }, listOperationSpec$2, callback);
        };
        Suppressions.prototype.listNext = function (nextPageLink$$1, options, callback) {
            return this.client.sendOperationRequest({
                nextPageLink: nextPageLink$$1,
                options: options
            }, listNextOperationSpec$2, callback);
        };
        return Suppressions;
    }());
    // Operation Specifications
    var serializer$3 = new msRest.Serializer(Mappers$3);
    var getOperationSpec$1 = {
        httpMethod: "GET",
        path: "{resourceUri}/providers/Microsoft.Advisor/recommendations/{recommendationId}/suppressions/{name}",
        urlParameters: [
            resourceUri,
            recommendationId,
            name
        ],
        queryParameters: [
            apiVersion
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            200: {
                bodyMapper: SuppressionContract
            },
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer$3
    };
    var createOperationSpec = {
        httpMethod: "PUT",
        path: "{resourceUri}/providers/Microsoft.Advisor/recommendations/{recommendationId}/suppressions/{name}",
        urlParameters: [
            resourceUri,
            recommendationId,
            name
        ],
        queryParameters: [
            apiVersion
        ],
        headerParameters: [
            acceptLanguage
        ],
        requestBody: {
            parameterPath: "suppressionContract",
            mapper: __assign({}, SuppressionContract, { required: true })
        },
        responses: {
            200: {
                bodyMapper: SuppressionContract
            },
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer$3
    };
    var deleteMethodOperationSpec = {
        httpMethod: "DELETE",
        path: "{resourceUri}/providers/Microsoft.Advisor/recommendations/{recommendationId}/suppressions/{name}",
        urlParameters: [
            resourceUri,
            recommendationId,
            name
        ],
        queryParameters: [
            apiVersion
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            204: {},
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer$3
    };
    var listOperationSpec$2 = {
        httpMethod: "GET",
        path: "subscriptions/{subscriptionId}/providers/Microsoft.Advisor/suppressions",
        urlParameters: [
            subscriptionId
        ],
        queryParameters: [
            apiVersion,
            top,
            skipToken
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            200: {
                bodyMapper: SuppressionContractListResult
            },
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer$3
    };
    var listNextOperationSpec$2 = {
        httpMethod: "GET",
        baseUrl: "https://management.azure.com",
        path: "{nextLink}",
        urlParameters: [
            nextPageLink
        ],
        headerParameters: [
            acceptLanguage
        ],
        responses: {
            200: {
                bodyMapper: SuppressionContractListResult
            },
            default: {
                bodyMapper: CloudError
            }
        },
        serializer: serializer$3
    };

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    var packageName = "@azure/arm-advisor";
    var packageVersion = "1.0.0";
    var AdvisorManagementClientContext = /** @class */ (function (_super) {
        __extends(AdvisorManagementClientContext, _super);
        /**
         * Initializes a new instance of the AdvisorManagementClient class.
         * @param credentials Credentials needed for the client to connect to Azure.
         * @param subscriptionId The Azure subscription ID.
         * @param [options] The parameter options
         */
        function AdvisorManagementClientContext(credentials, subscriptionId, options) {
            var _this = this;
            if (credentials == undefined) {
                throw new Error('\'credentials\' cannot be null.');
            }
            if (subscriptionId == undefined) {
                throw new Error('\'subscriptionId\' cannot be null.');
            }
            if (!options) {
                options = {};
            }
            _this = _super.call(this, credentials, options) || this;
            _this.apiVersion = '2017-04-19';
            _this.acceptLanguage = 'en-US';
            _this.longRunningOperationRetryTimeout = 30;
            _this.baseUri = options.baseUri || _this.baseUri || "https://management.azure.com";
            _this.requestContentType = "application/json; charset=utf-8";
            _this.credentials = credentials;
            _this.subscriptionId = subscriptionId;
            _this.addUserAgentInfo(packageName + "/" + packageVersion);
            if (options.acceptLanguage !== null && options.acceptLanguage !== undefined) {
                _this.acceptLanguage = options.acceptLanguage;
            }
            if (options.longRunningOperationRetryTimeout !== null && options.longRunningOperationRetryTimeout !== undefined) {
                _this.longRunningOperationRetryTimeout = options.longRunningOperationRetryTimeout;
            }
            return _this;
        }
        return AdvisorManagementClientContext;
    }(msRestAzure.AzureServiceClient));

    /*
     * Copyright (c) Microsoft Corporation. All rights reserved.
     * Licensed under the MIT License. See License.txt in the project root for
     * license information.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is
     * regenerated.
     */
    var AdvisorManagementClient = /** @class */ (function (_super) {
        __extends(AdvisorManagementClient, _super);
        /**
         * Initializes a new instance of the AdvisorManagementClient class.
         * @param credentials Credentials needed for the client to connect to Azure.
         * @param subscriptionId The Azure subscription ID.
         * @param [options] The parameter options
         */
        function AdvisorManagementClient(credentials, subscriptionId, options) {
            var _this = _super.call(this, credentials, subscriptionId, options) || this;
            _this.configurations = new Configurations(_this);
            _this.recommendations = new Recommendations(_this);
            _this.operations = new Operations(_this);
            _this.suppressions = new Suppressions(_this);
            return _this;
        }
        return AdvisorManagementClient;
    }(AdvisorManagementClientContext));

    exports.AdvisorManagementClient = AdvisorManagementClient;
    exports.AdvisorManagementClientContext = AdvisorManagementClientContext;
    exports.AdvisorManagementModels = index;
    exports.AdvisorManagementMappers = mappers;
    exports.Configurations = Configurations;
    exports.Recommendations = Recommendations;
    exports.Operations = Operations;
    exports.Suppressions = Suppressions;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=arm-advisor.js.map
