/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "ms-rest-azure-js";
import * as msRest from "ms-rest-js";

export { BaseResource, CloudError };


/**
 * @interface
 * An interface representing AppServiceCertificate.
 * Key Vault container for a certificate that is purchased through Azure.
 *
 */
export interface AppServiceCertificate {
  /**
   * @member {string} [keyVaultId] Key Vault resource Id.
   */
  keyVaultId?: string;
  /**
   * @member {string} [keyVaultSecretName] Key Vault secret name.
   */
  keyVaultSecretName?: string;
  /**
   * @member {KeyVaultSecretStatus} [provisioningState] Status of the Key Vault
   * secret. Possible values include: 'Initialized',
   * 'WaitingOnCertificateOrder', 'Succeeded', 'CertificateOrderFailed',
   * 'OperationNotPermittedOnKeyVault',
   * 'AzureServiceUnauthorizedToAccessKeyVault', 'KeyVaultDoesNotExist',
   * 'KeyVaultSecretDoesNotExist', 'UnknownError', 'ExternalPrivateKey',
   * 'Unknown'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provisioningState?: KeyVaultSecretStatus;
}

/**
 * @interface
 * An interface representing Resource.
 * Azure resource. This resource is tracked in Azure Resource Manager
 *
 * @extends BaseResource
 */
export interface Resource extends BaseResource {
  /**
   * @member {string} [id] Resource Id.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [name] Resource Name.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [kind] Kind of resource.
   */
  kind?: string;
  /**
   * @member {string} location Resource Location.
   */
  location: string;
  /**
   * @member {string} [type] Resource type.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: string;
  /**
   * @member {{ [propertyName: string]: string }} [tags] Resource tags.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * @interface
 * An interface representing AppServiceCertificateResource.
 * Key Vault container ARM resource for a certificate that is purchased through
 * Azure.
 *
 * @extends Resource
 */
export interface AppServiceCertificateResource extends Resource {
  /**
   * @member {string} [keyVaultId] Key Vault resource Id.
   */
  keyVaultId?: string;
  /**
   * @member {string} [keyVaultSecretName] Key Vault secret name.
   */
  keyVaultSecretName?: string;
  /**
   * @member {KeyVaultSecretStatus} [provisioningState] Status of the Key Vault
   * secret. Possible values include: 'Initialized',
   * 'WaitingOnCertificateOrder', 'Succeeded', 'CertificateOrderFailed',
   * 'OperationNotPermittedOnKeyVault',
   * 'AzureServiceUnauthorizedToAccessKeyVault', 'KeyVaultDoesNotExist',
   * 'KeyVaultSecretDoesNotExist', 'UnknownError', 'ExternalPrivateKey',
   * 'Unknown'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provisioningState?: KeyVaultSecretStatus;
}

/**
 * @interface
 * An interface representing CertificateDetails.
 * SSL certificate details.
 *
 */
export interface CertificateDetails {
  /**
   * @member {number} [version] Certificate Version.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly version?: number;
  /**
   * @member {string} [serialNumber] Certificate Serial Number.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly serialNumber?: string;
  /**
   * @member {string} [thumbprint] Certificate Thumbprint.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly thumbprint?: string;
  /**
   * @member {string} [subject] Certificate Subject.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly subject?: string;
  /**
   * @member {Date} [notBefore] Date Certificate is valid from.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly notBefore?: Date;
  /**
   * @member {Date} [notAfter] Date Certificate is valid to.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly notAfter?: Date;
  /**
   * @member {string} [signatureAlgorithm] Certificate Signature algorithm.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly signatureAlgorithm?: string;
  /**
   * @member {string} [issuer] Certificate Issuer.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly issuer?: string;
  /**
   * @member {string} [rawData] Raw certificate data.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly rawData?: string;
}

/**
 * @interface
 * An interface representing AppServiceCertificateOrder.
 * SSL certificate purchase order.
 *
 * @extends Resource
 */
export interface AppServiceCertificateOrder extends Resource {
  /**
   * @member {{ [propertyName: string]: AppServiceCertificate }} [certificates]
   * State of the Key Vault secret.
   */
  certificates?: { [propertyName: string]: AppServiceCertificate };
  /**
   * @member {string} [distinguishedName] Certificate distinguished name.
   */
  distinguishedName?: string;
  /**
   * @member {string} [domainVerificationToken] Domain verification token.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly domainVerificationToken?: string;
  /**
   * @member {number} [validityInYears] Duration in years (must be between 1
   * and 3). Default value: 1 .
   */
  validityInYears?: number;
  /**
   * @member {number} [keySize] Certificate key size. Default value: 2048 .
   */
  keySize?: number;
  /**
   * @member {CertificateProductType} productType Certificate product type.
   * Possible values include: 'StandardDomainValidatedSsl',
   * 'StandardDomainValidatedWildCardSsl'
   */
  productType: CertificateProductType;
  /**
   * @member {boolean} [autoRenew] <code>true</code> if the certificate should
   * be automatically renewed when it expires; otherwise, <code>false</code>.
   * Default value: true .
   */
  autoRenew?: boolean;
  /**
   * @member {ProvisioningState} [provisioningState] Status of certificate
   * order. Possible values include: 'Succeeded', 'Failed', 'Canceled',
   * 'InProgress', 'Deleting'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * @member {CertificateOrderStatus} [status] Current order status. Possible
   * values include: 'Pendingissuance', 'Issued', 'Revoked', 'Canceled',
   * 'Denied', 'Pendingrevocation', 'PendingRekey', 'Unused', 'Expired',
   * 'NotSubmitted'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly status?: CertificateOrderStatus;
  /**
   * @member {CertificateDetails} [signedCertificate] Signed certificate.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly signedCertificate?: CertificateDetails;
  /**
   * @member {string} [csr] Last CSR that was created for this order.
   */
  csr?: string;
  /**
   * @member {CertificateDetails} [intermediate] Intermediate certificate.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly intermediate?: CertificateDetails;
  /**
   * @member {CertificateDetails} [root] Root certificate.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly root?: CertificateDetails;
  /**
   * @member {string} [serialNumber] Current serial number of the certificate.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly serialNumber?: string;
  /**
   * @member {Date} [lastCertificateIssuanceTime] Certificate last issuance
   * time.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly lastCertificateIssuanceTime?: Date;
  /**
   * @member {Date} [expirationTime] Certificate expiration time.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly expirationTime?: Date;
  /**
   * @member {boolean} [isPrivateKeyExternal] <code>true</code> if private key
   * is external; otherwise, <code>false</code>.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly isPrivateKeyExternal?: boolean;
  /**
   * @member {string[]} [appServiceCertificateNotRenewableReasons] Reasons why
   * App Service Certificate is not renewable at the current moment.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly appServiceCertificateNotRenewableReasons?: string[];
  /**
   * @member {Date} [nextAutoRenewalTimeStamp] Time stamp when the certificate
   * would be auto renewed next
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextAutoRenewalTimeStamp?: Date;
}

/**
 * @interface
 * An interface representing ProxyOnlyResource.
 * Azure proxy only resource. This resource is not tracked by Azure Resource
 * Manager.
 *
 * @extends BaseResource
 */
export interface ProxyOnlyResource extends BaseResource {
  /**
   * @member {string} [id] Resource Id.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [name] Resource Name.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [kind] Kind of resource.
   */
  kind?: string;
  /**
   * @member {string} [type] Resource type.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: string;
}

/**
 * @interface
 * An interface representing AppServiceCertificateOrderPatchResource.
 * ARM resource for a certificate order that is purchased through Azure.
 *
 * @extends ProxyOnlyResource
 */
export interface AppServiceCertificateOrderPatchResource extends ProxyOnlyResource {
  /**
   * @member {{ [propertyName: string]: AppServiceCertificate }} [certificates]
   * State of the Key Vault secret.
   */
  certificates?: { [propertyName: string]: AppServiceCertificate };
  /**
   * @member {string} [distinguishedName] Certificate distinguished name.
   */
  distinguishedName?: string;
  /**
   * @member {string} [domainVerificationToken] Domain verification token.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly domainVerificationToken?: string;
  /**
   * @member {number} [validityInYears] Duration in years (must be between 1
   * and 3). Default value: 1 .
   */
  validityInYears?: number;
  /**
   * @member {number} [keySize] Certificate key size. Default value: 2048 .
   */
  keySize?: number;
  /**
   * @member {CertificateProductType} productType Certificate product type.
   * Possible values include: 'StandardDomainValidatedSsl',
   * 'StandardDomainValidatedWildCardSsl'
   */
  productType: CertificateProductType;
  /**
   * @member {boolean} [autoRenew] <code>true</code> if the certificate should
   * be automatically renewed when it expires; otherwise, <code>false</code>.
   * Default value: true .
   */
  autoRenew?: boolean;
  /**
   * @member {ProvisioningState} [provisioningState] Status of certificate
   * order. Possible values include: 'Succeeded', 'Failed', 'Canceled',
   * 'InProgress', 'Deleting'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * @member {CertificateOrderStatus} [status] Current order status. Possible
   * values include: 'Pendingissuance', 'Issued', 'Revoked', 'Canceled',
   * 'Denied', 'Pendingrevocation', 'PendingRekey', 'Unused', 'Expired',
   * 'NotSubmitted'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly status?: CertificateOrderStatus;
  /**
   * @member {CertificateDetails} [signedCertificate] Signed certificate.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly signedCertificate?: CertificateDetails;
  /**
   * @member {string} [csr] Last CSR that was created for this order.
   */
  csr?: string;
  /**
   * @member {CertificateDetails} [intermediate] Intermediate certificate.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly intermediate?: CertificateDetails;
  /**
   * @member {CertificateDetails} [root] Root certificate.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly root?: CertificateDetails;
  /**
   * @member {string} [serialNumber] Current serial number of the certificate.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly serialNumber?: string;
  /**
   * @member {Date} [lastCertificateIssuanceTime] Certificate last issuance
   * time.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly lastCertificateIssuanceTime?: Date;
  /**
   * @member {Date} [expirationTime] Certificate expiration time.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly expirationTime?: Date;
  /**
   * @member {boolean} [isPrivateKeyExternal] <code>true</code> if private key
   * is external; otherwise, <code>false</code>.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly isPrivateKeyExternal?: boolean;
  /**
   * @member {string[]} [appServiceCertificateNotRenewableReasons] Reasons why
   * App Service Certificate is not renewable at the current moment.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly appServiceCertificateNotRenewableReasons?: string[];
  /**
   * @member {Date} [nextAutoRenewalTimeStamp] Time stamp when the certificate
   * would be auto renewed next
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextAutoRenewalTimeStamp?: Date;
}

/**
 * @interface
 * An interface representing AppServiceCertificatePatchResource.
 * Key Vault container ARM resource for a certificate that is purchased through
 * Azure.
 *
 * @extends ProxyOnlyResource
 */
export interface AppServiceCertificatePatchResource extends ProxyOnlyResource {
  /**
   * @member {string} [keyVaultId] Key Vault resource Id.
   */
  keyVaultId?: string;
  /**
   * @member {string} [keyVaultSecretName] Key Vault secret name.
   */
  keyVaultSecretName?: string;
  /**
   * @member {KeyVaultSecretStatus} [provisioningState] Status of the Key Vault
   * secret. Possible values include: 'Initialized',
   * 'WaitingOnCertificateOrder', 'Succeeded', 'CertificateOrderFailed',
   * 'OperationNotPermittedOnKeyVault',
   * 'AzureServiceUnauthorizedToAccessKeyVault', 'KeyVaultDoesNotExist',
   * 'KeyVaultSecretDoesNotExist', 'UnknownError', 'ExternalPrivateKey',
   * 'Unknown'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provisioningState?: KeyVaultSecretStatus;
}

/**
 * @interface
 * An interface representing CertificateEmail.
 * SSL certificate email.
 *
 * @extends ProxyOnlyResource
 */
export interface CertificateEmail extends ProxyOnlyResource {
  /**
   * @member {string} [emailId] Email id.
   */
  emailId?: string;
  /**
   * @member {Date} [timeStamp] Time stamp.
   */
  timeStamp?: Date;
}

/**
 * @interface
 * An interface representing CertificateOrderAction.
 * Certificate order action.
 *
 * @extends ProxyOnlyResource
 */
export interface CertificateOrderAction extends ProxyOnlyResource {
  /**
   * @member {CertificateOrderActionType} [actionType] Action type. Possible
   * values include: 'CertificateIssued', 'CertificateOrderCanceled',
   * 'CertificateOrderCreated', 'CertificateRevoked',
   * 'DomainValidationComplete', 'FraudDetected', 'OrgNameChange',
   * 'OrgValidationComplete', 'SanDrop', 'FraudCleared', 'CertificateExpired',
   * 'CertificateExpirationWarning', 'FraudDocumentationRequired', 'Unknown'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly actionType?: CertificateOrderActionType;
  /**
   * @member {Date} [createdAt] Time at which the certificate action was
   * performed.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly createdAt?: Date;
}

/**
 * @interface
 * An interface representing ReissueCertificateOrderRequest.
 * Class representing certificate reissue request.
 *
 * @extends ProxyOnlyResource
 */
export interface ReissueCertificateOrderRequest extends ProxyOnlyResource {
  /**
   * @member {number} [keySize] Certificate Key Size.
   */
  keySize?: number;
  /**
   * @member {number} [delayExistingRevokeInHours] Delay in hours to revoke
   * existing certificate after the new certificate is issued.
   */
  delayExistingRevokeInHours?: number;
  /**
   * @member {string} [csr] Csr to be used for re-key operation.
   */
  csr?: string;
  /**
   * @member {boolean} [isPrivateKeyExternal] Should we change the ASC type
   * (from managed private key to external private key and vice versa).
   */
  isPrivateKeyExternal?: boolean;
}

/**
 * @interface
 * An interface representing RenewCertificateOrderRequest.
 * Class representing certificate renew request.
 *
 * @extends ProxyOnlyResource
 */
export interface RenewCertificateOrderRequest extends ProxyOnlyResource {
  /**
   * @member {number} [keySize] Certificate Key Size.
   */
  keySize?: number;
  /**
   * @member {string} [csr] Csr to be used for re-key operation.
   */
  csr?: string;
  /**
   * @member {boolean} [isPrivateKeyExternal] Should we change the ASC type
   * (from managed private key to external private key and vice versa).
   */
  isPrivateKeyExternal?: boolean;
}

/**
 * @interface
 * An interface representing SiteSeal.
 * Site seal
 *
 */
export interface SiteSeal {
  /**
   * @member {string} html HTML snippet
   */
  html: string;
}

/**
 * @interface
 * An interface representing SiteSealRequest.
 * Site seal request.
 *
 */
export interface SiteSealRequest {
  /**
   * @member {boolean} [lightTheme] If <code>true</code> use the light color
   * theme for site seal; otherwise, use the default color theme.
   */
  lightTheme?: boolean;
  /**
   * @member {string} [locale] Locale of site seal.
   */
  locale?: string;
}

/**
 * @interface
 * An interface representing VnetRoute.
 * Virtual Network route contract used to pass routing information for a
 * Virtual Network.
 *
 * @extends ProxyOnlyResource
 */
export interface VnetRoute extends ProxyOnlyResource {
  /**
   * @member {string} [startAddress] The starting address for this route. This
   * may also include a CIDR notation, in which case the end address must not
   * be specified.
   */
  startAddress?: string;
  /**
   * @member {string} [endAddress] The ending address for this route. If the
   * start address is specified in CIDR notation, this must be omitted.
   */
  endAddress?: string;
  /**
   * @member {RouteType} [routeType] The type of route this is:
   * DEFAULT - By default, every app has routes to the local address ranges
   * specified by RFC1918
   * INHERITED - Routes inherited from the real Virtual Network routes
   * STATIC - Static route set on the app only
   *
   * These values will be used for syncing an app's routes with those from a
   * Virtual Network. Possible values include: 'DEFAULT', 'INHERITED', 'STATIC'
   */
  routeType?: RouteType;
}

/**
 * @interface
 * An interface representing VnetInfo.
 * Virtual Network information contract.
 *
 * @extends ProxyOnlyResource
 */
export interface VnetInfo extends ProxyOnlyResource {
  /**
   * @member {string} [vnetResourceId] The Virtual Network's resource ID.
   */
  vnetResourceId?: string;
  /**
   * @member {string} [certThumbprint] The client certificate thumbprint.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly certThumbprint?: string;
  /**
   * @member {Uint8Array} [certBlob] A certificate file (.cer) blob containing
   * the public key of the private key used to authenticate a
   * Point-To-Site VPN connection.
   */
  certBlob?: Uint8Array;
  /**
   * @member {VnetRoute[]} [routes] The routes that this Virtual Network
   * connection uses.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly routes?: VnetRoute[];
  /**
   * @member {boolean} [resyncRequired] <code>true</code> if a resync is
   * required; otherwise, <code>false</code>.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly resyncRequired?: boolean;
  /**
   * @member {string} [dnsServers] DNS servers to be used by this Virtual
   * Network. This should be a comma-separated list of IP addresses.
   */
  dnsServers?: string;
}

/**
 * @interface
 * An interface representing VnetGateway.
 * The Virtual Network gateway contract. This is used to give the Virtual
 * Network gateway access to the VPN package.
 *
 * @extends ProxyOnlyResource
 */
export interface VnetGateway extends ProxyOnlyResource {
  /**
   * @member {string} [vnetName] The Virtual Network name.
   */
  vnetName?: string;
  /**
   * @member {string} vpnPackageUri The URI where the VPN package can be
   * downloaded.
   */
  vpnPackageUri: string;
}

/**
 * @interface
 * An interface representing User.
 * User crendentials used for publishing activity.
 *
 * @extends ProxyOnlyResource
 */
export interface User extends ProxyOnlyResource {
  /**
   * @member {string} publishingUserName Username used for publishing.
   */
  publishingUserName: string;
  /**
   * @member {string} [publishingPassword] Password used for publishing.
   */
  publishingPassword?: string;
  /**
   * @member {string} [publishingPasswordHash] Password hash used for
   * publishing.
   */
  publishingPasswordHash?: string;
  /**
   * @member {string} [publishingPasswordHashSalt] Password hash salt used for
   * publishing.
   */
  publishingPasswordHashSalt?: string;
  /**
   * @member {string} [scmUri] Url of SCM site.
   */
  scmUri?: string;
}

/**
 * @interface
 * An interface representing Snapshot.
 * A snapshot of an app.
 *
 * @extends ProxyOnlyResource
 */
export interface Snapshot extends ProxyOnlyResource {
  /**
   * @member {string} [time] The time the snapshot was taken.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly time?: string;
}

/**
 * @interface
 * An interface representing ResourceMetricAvailability.
 * Metrics availability and retention.
 *
 */
export interface ResourceMetricAvailability {
  /**
   * @member {string} [timeGrain] Time grain .
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly timeGrain?: string;
  /**
   * @member {string} [retention] Retention period for the current time grain.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly retention?: string;
}

/**
 * @interface
 * An interface representing ResourceMetricDefinition.
 * Metadata for the metrics.
 *
 * @extends ProxyOnlyResource
 */
export interface ResourceMetricDefinition extends ProxyOnlyResource {
  /**
   * @member {string} [unit] Unit of the metric.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly unit?: string;
  /**
   * @member {string} [primaryAggregationType] Primary aggregation type.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly primaryAggregationType?: string;
  /**
   * @member {ResourceMetricAvailability[]} [metricAvailabilities] List of time
   * grains supported for the metric together with retention period.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly metricAvailabilities?: ResourceMetricAvailability[];
  /**
   * @member {string} [resourceUri] Resource URI.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly resourceUri?: string;
  /**
   * @member {{ [propertyName: string]: string }} [properties] Resource metric
   * definition properties.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly properties?: { [propertyName: string]: string };
}

/**
 * @interface
 * An interface representing PushSettings.
 * Push settings for the App.
 *
 * @extends ProxyOnlyResource
 */
export interface PushSettings extends ProxyOnlyResource {
  /**
   * @member {boolean} isPushEnabled Gets or sets a flag indicating whether the
   * Push endpoint is enabled.
   */
  isPushEnabled: boolean;
  /**
   * @member {string} [tagWhitelistJson] Gets or sets a JSON string containing
   * a list of tags that are whitelisted for use by the push registration
   * endpoint.
   */
  tagWhitelistJson?: string;
  /**
   * @member {string} [tagsRequiringAuth] Gets or sets a JSON string containing
   * a list of tags that require user authentication to be used in the push
   * registration endpoint.
   * Tags can consist of alphanumeric characters and the following:
   * '_', '@', '#', '.', ':', '-'.
   * Validation should be performed at the PushRequestHandler.
   */
  tagsRequiringAuth?: string;
  /**
   * @member {string} [dynamicTagsJson] Gets or sets a JSON string containing a
   * list of dynamic tags that will be evaluated from user claims in the push
   * registration endpoint.
   */
  dynamicTagsJson?: string;
}

/**
 * @interface
 * An interface representing Identifier.
 * A domain specific resource identifier.
 *
 * @extends ProxyOnlyResource
 */
export interface Identifier extends ProxyOnlyResource {
  /**
   * @member {string} [identifierId] String representation of the identity.
   */
  identifierId?: string;
}

/**
 * @interface
 * An interface representing HybridConnectionKey.
 * Hybrid Connection key contract. This has the send key name and value for a
 * Hybrid Connection.
 *
 * @extends ProxyOnlyResource
 */
export interface HybridConnectionKey extends ProxyOnlyResource {
  /**
   * @member {string} [sendKeyName] The name of the send key.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly sendKeyName?: string;
  /**
   * @member {string} [sendKeyValue] The value of the send key.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly sendKeyValue?: string;
}

/**
 * @interface
 * An interface representing HybridConnection.
 * Hybrid Connection contract. This is used to configure a Hybrid Connection.
 *
 * @extends ProxyOnlyResource
 */
export interface HybridConnection extends ProxyOnlyResource {
  /**
   * @member {string} [serviceBusNamespace] The name of the Service Bus
   * namespace.
   */
  serviceBusNamespace?: string;
  /**
   * @member {string} [relayName] The name of the Service Bus relay.
   */
  relayName?: string;
  /**
   * @member {string} [relayArmUri] The ARM URI to the Service Bus relay.
   */
  relayArmUri?: string;
  /**
   * @member {string} [hostname] The hostname of the endpoint.
   */
  hostname?: string;
  /**
   * @member {number} [port] The port of the endpoint.
   */
  port?: number;
  /**
   * @member {string} [sendKeyName] The name of the Service Bus key which has
   * Send permissions. This is used to authenticate to Service Bus.
   */
  sendKeyName?: string;
  /**
   * @member {string} [sendKeyValue] The value of the Service Bus key. This is
   * used to authenticate to Service Bus. In ARM this key will not be returned
   * normally, use the POST /listKeys API instead.
   */
  sendKeyValue?: string;
  /**
   * @member {string} [serviceBusSuffix] The suffix for the service bus
   * endpoint. By default this is .servicebus.windows.net
   */
  serviceBusSuffix?: string;
}

/**
 * @interface
 * An interface representing DeletedSite.
 * A deleted app.
 *
 * @extends ProxyOnlyResource
 */
export interface DeletedSite extends ProxyOnlyResource {
  /**
   * @member {number} [deletedSiteId] Numeric id for the deleted site
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly deletedSiteId?: number;
  /**
   * @member {string} [deletedTimestamp] Time in UTC when the app was deleted.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly deletedTimestamp?: string;
  /**
   * @member {string} [subscription] Subscription containing the deleted site
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly subscription?: string;
  /**
   * @member {string} [resourceGroup] ResourceGroup that contained the deleted
   * site
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly resourceGroup?: string;
  /**
   * @member {string} [deletedSiteName] Name of the deleted site
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly deletedSiteName?: string;
  /**
   * @member {string} [slot] Slot of the deleted site
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly slot?: string;
  /**
   * @member {string} [deletedSiteKind] Kind of site that was deleted
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly deletedSiteKind?: string;
}

/**
 * @interface
 * An interface representing ManagedServiceIdentity.
 * Managed service identity.
 *
 */
export interface ManagedServiceIdentity {
  /**
   * @member {ManagedServiceIdentityType} [type] Type of managed service
   * identity. Possible values include: 'SystemAssigned', 'UserAssigned'
   */
  type?: ManagedServiceIdentityType;
  /**
   * @member {string} [tenantId] Tenant of managed service identity.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly tenantId?: string;
  /**
   * @member {string} [principalId] Principal Id of managed service identity.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly principalId?: string;
  /**
   * @member {string[]} [identityIds] Array of UserAssigned managed service
   * identities.
   */
  identityIds?: string[];
}

/**
 * @interface
 * An interface representing SlotSwapStatus.
 * The status of the last successfull slot swap operation.
 *
 */
export interface SlotSwapStatus {
  /**
   * @member {Date} [timestampUtc] The time the last successful slot swap
   * completed.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly timestampUtc?: Date;
  /**
   * @member {string} [sourceSlotName] The source slot of the last swap
   * operation.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly sourceSlotName?: string;
  /**
   * @member {string} [destinationSlotName] The destination slot of the last
   * swap operation.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly destinationSlotName?: string;
}

/**
 * @interface
 * An interface representing CloningInfo.
 * Information needed for cloning operation.
 *
 */
export interface CloningInfo {
  /**
   * @member {string} [correlationId] Correlation ID of cloning operation. This
   * ID ties multiple cloning operations
   * together to use the same snapshot.
   */
  correlationId?: string;
  /**
   * @member {boolean} [overwrite] <code>true</code> to overwrite destination
   * app; otherwise, <code>false</code>.
   */
  overwrite?: boolean;
  /**
   * @member {boolean} [cloneCustomHostNames] <code>true</code> to clone custom
   * hostnames from source app; otherwise, <code>false</code>.
   */
  cloneCustomHostNames?: boolean;
  /**
   * @member {boolean} [cloneSourceControl] <code>true</code> to clone source
   * control from source app; otherwise, <code>false</code>.
   */
  cloneSourceControl?: boolean;
  /**
   * @member {string} sourceWebAppId ARM resource ID of the source app. App
   * resource ID is of the form
   * /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}
   * for production slots and
   * /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName}
   * for other slots.
   */
  sourceWebAppId: string;
  /**
   * @member {string} [hostingEnvironment] App Service Environment.
   */
  hostingEnvironment?: string;
  /**
   * @member {{ [propertyName: string]: string }} [appSettingsOverrides]
   * Application setting overrides for cloned app. If specified, these settings
   * override the settings cloned
   * from source app. Otherwise, application settings from source app are
   * retained.
   */
  appSettingsOverrides?: { [propertyName: string]: string };
  /**
   * @member {boolean} [configureLoadBalancing] <code>true</code> to configure
   * load balancing for source and destination app.
   */
  configureLoadBalancing?: boolean;
  /**
   * @member {string} [trafficManagerProfileId] ARM resource ID of the Traffic
   * Manager profile to use, if it exists. Traffic Manager resource ID is of
   * the form
   * /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{profileName}.
   */
  trafficManagerProfileId?: string;
  /**
   * @member {string} [trafficManagerProfileName] Name of Traffic Manager
   * profile to create. This is only needed if Traffic Manager profile does not
   * already exist.
   */
  trafficManagerProfileName?: string;
}

/**
 * @interface
 * An interface representing HostingEnvironmentProfile.
 * Specification for an App Service Environment to use for this resource.
 *
 */
export interface HostingEnvironmentProfile {
  /**
   * @member {string} [id] Resource ID of the App Service Environment.
   */
  id?: string;
  /**
   * @member {string} [name] Name of the App Service Environment.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [type] Resource type of the App Service Environment.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: string;
}

/**
 * @interface
 * An interface representing IpSecurityRestriction.
 * IP security restriction on an app.
 *
 */
export interface IpSecurityRestriction {
  /**
   * @member {string} ipAddress IP address the security restriction is valid
   * for.
   * It can be in form of pure ipv4 address (required SubnetMask property) or
   * CIDR notation such as ipv4/mask (leading bit match). For CIDR,
   * SubnetMask property must not be specified.
   */
  ipAddress: string;
  /**
   * @member {string} [subnetMask] Subnet mask for the range of IP addresses
   * the restriction is valid for.
   */
  subnetMask?: string;
  /**
   * @member {string} [action] Allow or Deny access for this IP range.
   */
  action?: string;
  /**
   * @member {IpFilterTag} [tag] Defines what this IP filter will be used for.
   * This is to support IP filtering on proxies. Possible values include:
   * 'Default', 'XffProxy'
   */
  tag?: IpFilterTag;
  /**
   * @member {number} [priority] Priority of IP restriction rule.
   */
  priority?: number;
  /**
   * @member {string} [name] IP restriction rule name.
   */
  name?: string;
  /**
   * @member {string} [description] IP restriction rule description.
   */
  description?: string;
}

/**
 * @interface
 * An interface representing ApiDefinitionInfo.
 * Information about the formal API definition for the app.
 *
 */
export interface ApiDefinitionInfo {
  /**
   * @member {string} [url] The URL of the API definition.
   */
  url?: string;
}

/**
 * @interface
 * An interface representing CorsSettings.
 * Cross-Origin Resource Sharing (CORS) settings for the app.
 *
 */
export interface CorsSettings {
  /**
   * @member {string[]} [allowedOrigins] Gets or sets the list of origins that
   * should be allowed to make cross-origin
   * calls (for example: http://example.com:12345). Use "*" to allow all.
   */
  allowedOrigins?: string[];
}

/**
 * @interface
 * An interface representing AutoHealCustomAction.
 * Custom action to be executed
 * when an auto heal rule is triggered.
 *
 */
export interface AutoHealCustomAction {
  /**
   * @member {string} [exe] Executable to be run.
   */
  exe?: string;
  /**
   * @member {string} [parameters] Parameters for the executable.
   */
  parameters?: string;
}

/**
 * @interface
 * An interface representing AutoHealActions.
 * Actions which to take by the auto-heal module when a rule is triggered.
 *
 */
export interface AutoHealActions {
  /**
   * @member {AutoHealActionType} [actionType] Predefined action to be taken.
   * Possible values include: 'Recycle', 'LogEvent', 'CustomAction'
   */
  actionType?: AutoHealActionType;
  /**
   * @member {AutoHealCustomAction} [customAction] Custom action to be taken.
   */
  customAction?: AutoHealCustomAction;
  /**
   * @member {string} [minProcessExecutionTime] Minimum time the process must
   * execute
   * before taking the action
   */
  minProcessExecutionTime?: string;
}

/**
 * @interface
 * An interface representing SlowRequestsBasedTrigger.
 * Trigger based on request execution time.
 *
 */
export interface SlowRequestsBasedTrigger {
  /**
   * @member {string} [timeTaken] Time taken.
   */
  timeTaken?: string;
  /**
   * @member {number} [count] Request Count.
   */
  count?: number;
  /**
   * @member {string} [timeInterval] Time interval.
   */
  timeInterval?: string;
}

/**
 * @interface
 * An interface representing StatusCodesBasedTrigger.
 * Trigger based on status code.
 *
 */
export interface StatusCodesBasedTrigger {
  /**
   * @member {number} [status] HTTP status code.
   */
  status?: number;
  /**
   * @member {number} [subStatus] Request Sub Status.
   */
  subStatus?: number;
  /**
   * @member {number} [win32Status] Win32 error code.
   */
  win32Status?: number;
  /**
   * @member {number} [count] Request Count.
   */
  count?: number;
  /**
   * @member {string} [timeInterval] Time interval.
   */
  timeInterval?: string;
}

/**
 * @interface
 * An interface representing RequestsBasedTrigger.
 * Trigger based on total requests.
 *
 */
export interface RequestsBasedTrigger {
  /**
   * @member {number} [count] Request Count.
   */
  count?: number;
  /**
   * @member {string} [timeInterval] Time interval.
   */
  timeInterval?: string;
}

/**
 * @interface
 * An interface representing AutoHealTriggers.
 * Triggers for auto-heal.
 *
 */
export interface AutoHealTriggers {
  /**
   * @member {RequestsBasedTrigger} [requests] A rule based on total requests.
   */
  requests?: RequestsBasedTrigger;
  /**
   * @member {number} [privateBytesInKB] A rule based on private bytes.
   */
  privateBytesInKB?: number;
  /**
   * @member {StatusCodesBasedTrigger[]} [statusCodes] A rule based on status
   * codes.
   */
  statusCodes?: StatusCodesBasedTrigger[];
  /**
   * @member {SlowRequestsBasedTrigger} [slowRequests] A rule based on request
   * execution time.
   */
  slowRequests?: SlowRequestsBasedTrigger;
}

/**
 * @interface
 * An interface representing AutoHealRules.
 * Rules that can be defined for auto-heal.
 *
 */
export interface AutoHealRules {
  /**
   * @member {AutoHealTriggers} [triggers] Conditions that describe when to
   * execute the auto-heal actions.
   */
  triggers?: AutoHealTriggers;
  /**
   * @member {AutoHealActions} [actions] Actions to be executed when a rule is
   * triggered.
   */
  actions?: AutoHealActions;
}

/**
 * @interface
 * An interface representing SiteLimits.
 * Metric limits set on an app.
 *
 */
export interface SiteLimits {
  /**
   * @member {number} [maxPercentageCpu] Maximum allowed CPU usage percentage.
   */
  maxPercentageCpu?: number;
  /**
   * @member {number} [maxMemoryInMb] Maximum allowed memory usage in MB.
   */
  maxMemoryInMb?: number;
  /**
   * @member {number} [maxDiskSizeInMb] Maximum allowed disk size usage in MB.
   */
  maxDiskSizeInMb?: number;
}

/**
 * @interface
 * An interface representing RampUpRule.
 * Routing rules for ramp up testing. This rule allows to redirect static
 * traffic % to a slot or to gradually change routing % based on performance.
 *
 */
export interface RampUpRule {
  /**
   * @member {string} [actionHostName] Hostname of a slot to which the traffic
   * will be redirected if decided to. E.g. myapp-stage.azurewebsites.net.
   */
  actionHostName?: string;
  /**
   * @member {number} [reroutePercentage] Percentage of the traffic which will
   * be redirected to <code>ActionHostName</code>.
   */
  reroutePercentage?: number;
  /**
   * @member {number} [changeStep] In auto ramp up scenario this is the step to
   * to add/remove from <code>ReroutePercentage</code> until it reaches
   * <code>MinReroutePercentage</code> or <code>MaxReroutePercentage</code>.
   * Site metrics are checked every N minutes specificed in
   * <code>ChangeIntervalInMinutes</code>.
   * Custom decision algorithm can be provided in TiPCallback site extension
   * which URL can be specified in <code>ChangeDecisionCallbackUrl</code>.
   */
  changeStep?: number;
  /**
   * @member {number} [changeIntervalInMinutes] Specifies interval in mimuntes
   * to reevaluate ReroutePercentage.
   */
  changeIntervalInMinutes?: number;
  /**
   * @member {number} [minReroutePercentage] Specifies lower boundary above
   * which ReroutePercentage will stay.
   */
  minReroutePercentage?: number;
  /**
   * @member {number} [maxReroutePercentage] Specifies upper boundary below
   * which ReroutePercentage will stay.
   */
  maxReroutePercentage?: number;
  /**
   * @member {string} [changeDecisionCallbackUrl] Custom decision algorithm can
   * be provided in TiPCallback site extension which URL can be specified. See
   * TiPCallback site extension for the scaffold and contracts.
   * https://www.siteextensions.net/packages/TiPCallback/
   */
  changeDecisionCallbackUrl?: string;
  /**
   * @member {string} [name] Name of the routing rule. The recommended name
   * would be to point to the slot which will receive the traffic in the
   * experiment.
   */
  name?: string;
}

/**
 * @interface
 * An interface representing Experiments.
 * Routing rules in production experiments.
 *
 */
export interface Experiments {
  /**
   * @member {RampUpRule[]} [rampUpRules] List of ramp-up rules.
   */
  rampUpRules?: RampUpRule[];
}

/**
 * @interface
 * An interface representing VirtualDirectory.
 * Directory for virtual application.
 *
 */
export interface VirtualDirectory {
  /**
   * @member {string} [virtualPath] Path to virtual application.
   */
  virtualPath?: string;
  /**
   * @member {string} [physicalPath] Physical path.
   */
  physicalPath?: string;
}

/**
 * @interface
 * An interface representing VirtualApplication.
 * Virtual application in an app.
 *
 */
export interface VirtualApplication {
  /**
   * @member {string} [virtualPath] Virtual path.
   */
  virtualPath?: string;
  /**
   * @member {string} [physicalPath] Physical path.
   */
  physicalPath?: string;
  /**
   * @member {boolean} [preloadEnabled] <code>true</code> if preloading is
   * enabled; otherwise, <code>false</code>.
   */
  preloadEnabled?: boolean;
  /**
   * @member {VirtualDirectory[]} [virtualDirectories] Virtual directories for
   * virtual application.
   */
  virtualDirectories?: VirtualDirectory[];
}

/**
 * @interface
 * An interface representing HandlerMapping.
 * The IIS handler mappings used to define which handler processes HTTP
 * requests with certain extension.
 * For example, it is used to configure php-cgi.exe process to handle all HTTP
 * requests with *.php extension.
 *
 */
export interface HandlerMapping {
  /**
   * @member {string} [extension] Requests with this extension will be handled
   * using the specified FastCGI application.
   */
  extension?: string;
  /**
   * @member {string} [scriptProcessor] The absolute path to the FastCGI
   * application.
   */
  scriptProcessor?: string;
  /**
   * @member {string} [argumentsProperty] Command-line arguments to be passed
   * to the script processor.
   */
  argumentsProperty?: string;
}

/**
 * @interface
 * An interface representing SiteMachineKey.
 * MachineKey of an app.
 *
 */
export interface SiteMachineKey {
  /**
   * @member {string} [validation] MachineKey validation.
   */
  validation?: string;
  /**
   * @member {string} [validationKey] Validation key.
   */
  validationKey?: string;
  /**
   * @member {string} [decryption] Algorithm used for decryption.
   */
  decryption?: string;
  /**
   * @member {string} [decryptionKey] Decryption key.
   */
  decryptionKey?: string;
}

/**
 * @interface
 * An interface representing ConnStringInfo.
 * Database connection string information.
 *
 */
export interface ConnStringInfo {
  /**
   * @member {string} [name] Name of connection string.
   */
  name?: string;
  /**
   * @member {string} [connectionString] Connection string value.
   */
  connectionString?: string;
  /**
   * @member {ConnectionStringType} [type] Type of database. Possible values
   * include: 'MySql', 'SQLServer', 'SQLAzure', 'Custom', 'NotificationHub',
   * 'ServiceBus', 'EventHub', 'ApiHub', 'DocDb', 'RedisCache', 'PostgreSQL'
   */
  type?: ConnectionStringType;
}

/**
 * @interface
 * An interface representing AzureStorageInfoValue.
 * Azure Files or Blob Storage access information value for dictionary storage.
 *
 */
export interface AzureStorageInfoValue {
  /**
   * @member {AzureStorageType} [type] Type of storage. Possible values
   * include: 'AzureFiles', 'AzureBlob'
   */
  type?: AzureStorageType;
  /**
   * @member {string} [accountName] Name of the storage account.
   */
  accountName?: string;
  /**
   * @member {string} [shareName] Name of the file share (container name, for
   * Blob storage).
   */
  shareName?: string;
  /**
   * @member {string} [accessKey] Access key for the storage account.
   */
  accessKey?: string;
  /**
   * @member {string} [mountPath] Path to mount the storage within the site's
   * runtime environment.
   */
  mountPath?: string;
  /**
   * @member {AzureStorageState} [state] State of the storage account. Possible
   * values include: 'Ok', 'InvalidCredentials', 'InvalidShare'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly state?: AzureStorageState;
}

/**
 * @interface
 * An interface representing NameValuePair.
 * Name value pair.
 *
 */
export interface NameValuePair {
  /**
   * @member {string} [name] Pair name.
   */
  name?: string;
  /**
   * @member {string} [value] Pair value.
   */
  value?: string;
}

/**
 * @interface
 * An interface representing SiteConfig.
 * Configuration of an App Service app.
 *
 */
export interface SiteConfig {
  /**
   * @member {number} [numberOfWorkers] Number of workers.
   */
  numberOfWorkers?: number;
  /**
   * @member {string[]} [defaultDocuments] Default documents.
   */
  defaultDocuments?: string[];
  /**
   * @member {string} [netFrameworkVersion] .NET Framework version. Default
   * value: 'v4.6' .
   */
  netFrameworkVersion?: string;
  /**
   * @member {string} [phpVersion] Version of PHP.
   */
  phpVersion?: string;
  /**
   * @member {string} [pythonVersion] Version of Python.
   */
  pythonVersion?: string;
  /**
   * @member {string} [nodeVersion] Version of Node.js.
   */
  nodeVersion?: string;
  /**
   * @member {string} [linuxFxVersion] Linux App Framework and version
   */
  linuxFxVersion?: string;
  /**
   * @member {string} [windowsFxVersion] Xenon App Framework and version
   */
  windowsFxVersion?: string;
  /**
   * @member {boolean} [requestTracingEnabled] <code>true</code> if request
   * tracing is enabled; otherwise, <code>false</code>.
   */
  requestTracingEnabled?: boolean;
  /**
   * @member {Date} [requestTracingExpirationTime] Request tracing expiration
   * time.
   */
  requestTracingExpirationTime?: Date;
  /**
   * @member {boolean} [remoteDebuggingEnabled] <code>true</code> if remote
   * debugging is enabled; otherwise, <code>false</code>.
   */
  remoteDebuggingEnabled?: boolean;
  /**
   * @member {string} [remoteDebuggingVersion] Remote debugging version.
   */
  remoteDebuggingVersion?: string;
  /**
   * @member {boolean} [httpLoggingEnabled] <code>true</code> if HTTP logging
   * is enabled; otherwise, <code>false</code>.
   */
  httpLoggingEnabled?: boolean;
  /**
   * @member {number} [logsDirectorySizeLimit] HTTP logs directory size limit.
   */
  logsDirectorySizeLimit?: number;
  /**
   * @member {boolean} [detailedErrorLoggingEnabled] <code>true</code> if
   * detailed error logging is enabled; otherwise, <code>false</code>.
   */
  detailedErrorLoggingEnabled?: boolean;
  /**
   * @member {string} [publishingUsername] Publishing user name.
   */
  publishingUsername?: string;
  /**
   * @member {NameValuePair[]} [appSettings] Application settings.
   */
  appSettings?: NameValuePair[];
  /**
   * @member {{ [propertyName: string]: AzureStorageInfoValue }}
   * [azureStorageAccounts] User-provided Azure storage accounts.
   */
  azureStorageAccounts?: { [propertyName: string]: AzureStorageInfoValue };
  /**
   * @member {ConnStringInfo[]} [connectionStrings] Connection strings.
   */
  connectionStrings?: ConnStringInfo[];
  /**
   * @member {SiteMachineKey} [machineKey] Site MachineKey.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly machineKey?: SiteMachineKey;
  /**
   * @member {HandlerMapping[]} [handlerMappings] Handler mappings.
   */
  handlerMappings?: HandlerMapping[];
  /**
   * @member {string} [documentRoot] Document root.
   */
  documentRoot?: string;
  /**
   * @member {ScmType} [scmType] SCM type. Possible values include: 'None',
   * 'Dropbox', 'Tfs', 'LocalGit', 'GitHub', 'CodePlexGit', 'CodePlexHg',
   * 'BitbucketGit', 'BitbucketHg', 'ExternalGit', 'ExternalHg', 'OneDrive',
   * 'VSO'
   */
  scmType?: ScmType;
  /**
   * @member {boolean} [use32BitWorkerProcess] <code>true</code> to use 32-bit
   * worker process; otherwise, <code>false</code>.
   */
  use32BitWorkerProcess?: boolean;
  /**
   * @member {boolean} [webSocketsEnabled] <code>true</code> if WebSocket is
   * enabled; otherwise, <code>false</code>.
   */
  webSocketsEnabled?: boolean;
  /**
   * @member {boolean} [alwaysOn] <code>true</code> if Always On is enabled;
   * otherwise, <code>false</code>.
   */
  alwaysOn?: boolean;
  /**
   * @member {string} [javaVersion] Java version.
   */
  javaVersion?: string;
  /**
   * @member {string} [javaContainer] Java container.
   */
  javaContainer?: string;
  /**
   * @member {string} [javaContainerVersion] Java container version.
   */
  javaContainerVersion?: string;
  /**
   * @member {string} [appCommandLine] App command line to launch.
   */
  appCommandLine?: string;
  /**
   * @member {ManagedPipelineMode} [managedPipelineMode] Managed pipeline mode.
   * Possible values include: 'Integrated', 'Classic'
   */
  managedPipelineMode?: ManagedPipelineMode;
  /**
   * @member {VirtualApplication[]} [virtualApplications] Virtual applications.
   */
  virtualApplications?: VirtualApplication[];
  /**
   * @member {SiteLoadBalancing} [loadBalancing] Site load balancing. Possible
   * values include: 'WeightedRoundRobin', 'LeastRequests',
   * 'LeastResponseTime', 'WeightedTotalTraffic', 'RequestHash'
   */
  loadBalancing?: SiteLoadBalancing;
  /**
   * @member {Experiments} [experiments] This is work around for polymophic
   * types.
   */
  experiments?: Experiments;
  /**
   * @member {SiteLimits} [limits] Site limits.
   */
  limits?: SiteLimits;
  /**
   * @member {boolean} [autoHealEnabled] <code>true</code> if Auto Heal is
   * enabled; otherwise, <code>false</code>.
   */
  autoHealEnabled?: boolean;
  /**
   * @member {AutoHealRules} [autoHealRules] Auto Heal rules.
   */
  autoHealRules?: AutoHealRules;
  /**
   * @member {string} [tracingOptions] Tracing options.
   */
  tracingOptions?: string;
  /**
   * @member {string} [vnetName] Virtual Network name.
   */
  vnetName?: string;
  /**
   * @member {CorsSettings} [cors] Cross-Origin Resource Sharing (CORS)
   * settings.
   */
  cors?: CorsSettings;
  /**
   * @member {PushSettings} [push] Push endpoint settings.
   */
  push?: PushSettings;
  /**
   * @member {ApiDefinitionInfo} [apiDefinition] Information about the formal
   * API definition for the app.
   */
  apiDefinition?: ApiDefinitionInfo;
  /**
   * @member {string} [autoSwapSlotName] Auto-swap slot name.
   */
  autoSwapSlotName?: string;
  /**
   * @member {boolean} [localMySqlEnabled] <code>true</code> to enable local
   * MySQL; otherwise, <code>false</code>. Default value: false .
   */
  localMySqlEnabled?: boolean;
  /**
   * @member {number} [managedServiceIdentityId] Managed Service Identity Id
   */
  managedServiceIdentityId?: number;
  /**
   * @member {number} [xManagedServiceIdentityId] Explicit Managed Service
   * Identity Id
   */
  xManagedServiceIdentityId?: number;
  /**
   * @member {IpSecurityRestriction[]} [ipSecurityRestrictions] IP security
   * restrictions.
   */
  ipSecurityRestrictions?: IpSecurityRestriction[];
  /**
   * @member {boolean} [http20Enabled] Http20Enabled: configures a web site to
   * allow clients to connect over http2.0. Default value: true .
   */
  http20Enabled?: boolean;
  /**
   * @member {SupportedTlsVersions} [minTlsVersion] MinTlsVersion: configures
   * the minimum version of TLS required for SSL requests. Possible values
   * include: '1.0', '1.1', '1.2'
   */
  minTlsVersion?: SupportedTlsVersions;
  /**
   * @member {FtpsState} [ftpsState] State of FTP / FTPS service. Possible
   * values include: 'AllAllowed', 'FtpsOnly', 'Disabled'
   */
  ftpsState?: FtpsState;
  /**
   * @member {number} [reservedInstanceCount] Number of reserved instances.
   * This setting only applies to the Consumption Plan
   */
  reservedInstanceCount?: number;
}

/**
 * @interface
 * An interface representing HostNameSslState.
 * SSL-enabled hostname.
 *
 */
export interface HostNameSslState {
  /**
   * @member {string} [name] Hostname.
   */
  name?: string;
  /**
   * @member {SslState} [sslState] SSL type. Possible values include:
   * 'Disabled', 'SniEnabled', 'IpBasedEnabled'
   */
  sslState?: SslState;
  /**
   * @member {string} [virtualIP] Virtual IP address assigned to the hostname
   * if IP based SSL is enabled.
   */
  virtualIP?: string;
  /**
   * @member {string} [thumbprint] SSL certificate thumbprint.
   */
  thumbprint?: string;
  /**
   * @member {boolean} [toUpdate] Set to <code>true</code> to update existing
   * hostname.
   */
  toUpdate?: boolean;
  /**
   * @member {HostType} [hostType] Indicates whether the hostname is a standard
   * or repository hostname. Possible values include: 'Standard', 'Repository'
   */
  hostType?: HostType;
}

/**
 * @interface
 * An interface representing Site.
 * A web app, a mobile app backend, or an API app.
 *
 * @extends Resource
 */
export interface Site extends Resource {
  /**
   * @member {string} [state] Current state of the app.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly state?: string;
  /**
   * @member {string[]} [hostNames] Hostnames associated with the app.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly hostNames?: string[];
  /**
   * @member {string} [repositorySiteName] Name of the repository site.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly repositorySiteName?: string;
  /**
   * @member {UsageState} [usageState] State indicating whether the app has
   * exceeded its quota usage. Read-only. Possible values include: 'Normal',
   * 'Exceeded'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly usageState?: UsageState;
  /**
   * @member {boolean} [enabled] <code>true</code> if the app is enabled;
   * otherwise, <code>false</code>. Setting this value to false disables the
   * app (takes the app offline).
   */
  enabled?: boolean;
  /**
   * @member {string[]} [enabledHostNames] Enabled hostnames for the
   * app.Hostnames need to be assigned (see HostNames) AND enabled. Otherwise,
   * the app is not served on those hostnames.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly enabledHostNames?: string[];
  /**
   * @member {SiteAvailabilityState} [availabilityState] Management information
   * availability state for the app. Possible values include: 'Normal',
   * 'Limited', 'DisasterRecoveryMode'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly availabilityState?: SiteAvailabilityState;
  /**
   * @member {HostNameSslState[]} [hostNameSslStates] Hostname SSL states are
   * used to manage the SSL bindings for app's hostnames.
   */
  hostNameSslStates?: HostNameSslState[];
  /**
   * @member {string} [serverFarmId] Resource ID of the associated App Service
   * plan, formatted as:
   * "/subscriptions/{subscriptionID}/resourceGroups/{groupName}/providers/Microsoft.Web/serverfarms/{appServicePlanName}".
   */
  serverFarmId?: string;
  /**
   * @member {boolean} [reserved] <code>true</code> if reserved; otherwise,
   * <code>false</code>. Default value: false .
   */
  reserved?: boolean;
  /**
   * @member {boolean} [isXenon] Obsolete: Hyper-V sandbox. Default value:
   * false .
   */
  isXenon?: boolean;
  /**
   * @member {boolean} [hyperV] Hyper-V sandbox. Default value: false .
   */
  hyperV?: boolean;
  /**
   * @member {Date} [lastModifiedTimeUtc] Last time the app was modified, in
   * UTC. Read-only.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly lastModifiedTimeUtc?: Date;
  /**
   * @member {SiteConfig} [siteConfig] Configuration of the app.
   */
  siteConfig?: SiteConfig;
  /**
   * @member {string[]} [trafficManagerHostNames] Azure Traffic Manager
   * hostnames associated with the app. Read-only.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly trafficManagerHostNames?: string[];
  /**
   * @member {boolean} [scmSiteAlsoStopped] <code>true</code> to stop SCM
   * (KUDU) site when the app is stopped; otherwise, <code>false</code>. The
   * default is <code>false</code>. Default value: false .
   */
  scmSiteAlsoStopped?: boolean;
  /**
   * @member {string} [targetSwapSlot] Specifies which deployment slot this app
   * will swap into. Read-only.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly targetSwapSlot?: string;
  /**
   * @member {HostingEnvironmentProfile} [hostingEnvironmentProfile] App
   * Service Environment to use for the app.
   */
  hostingEnvironmentProfile?: HostingEnvironmentProfile;
  /**
   * @member {boolean} [clientAffinityEnabled] <code>true</code> to enable
   * client affinity; <code>false</code> to stop sending session affinity
   * cookies, which route client requests in the same session to the same
   * instance. Default is <code>true</code>.
   */
  clientAffinityEnabled?: boolean;
  /**
   * @member {boolean} [clientCertEnabled] <code>true</code> to enable client
   * certificate authentication (TLS mutual authentication); otherwise,
   * <code>false</code>. Default is <code>false</code>.
   */
  clientCertEnabled?: boolean;
  /**
   * @member {boolean} [hostNamesDisabled] <code>true</code> to disable the
   * public hostnames of the app; otherwise, <code>false</code>.
   * If <code>true</code>, the app is only accessible via API management
   * process.
   */
  hostNamesDisabled?: boolean;
  /**
   * @member {string} [outboundIpAddresses] List of IP addresses that the app
   * uses for outbound connections (e.g. database access). Includes VIPs from
   * tenants that site can be hosted with current settings. Read-only.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly outboundIpAddresses?: string;
  /**
   * @member {string} [possibleOutboundIpAddresses] List of IP addresses that
   * the app uses for outbound connections (e.g. database access). Includes
   * VIPs from all tenants. Read-only.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly possibleOutboundIpAddresses?: string;
  /**
   * @member {number} [containerSize] Size of the function container.
   */
  containerSize?: number;
  /**
   * @member {number} [dailyMemoryTimeQuota] Maximum allowed daily memory-time
   * quota (applicable on dynamic apps only).
   */
  dailyMemoryTimeQuota?: number;
  /**
   * @member {Date} [suspendedTill] App suspended till in case memory-time
   * quota is exceeded.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly suspendedTill?: Date;
  /**
   * @member {number} [maxNumberOfWorkers] Maximum number of workers.
   * This only applies to Functions container.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly maxNumberOfWorkers?: number;
  /**
   * @member {CloningInfo} [cloningInfo] If specified during app creation, the
   * app is cloned from a source app.
   */
  cloningInfo?: CloningInfo;
  /**
   * @member {string} [resourceGroup] Name of the resource group the app
   * belongs to. Read-only.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly resourceGroup?: string;
  /**
   * @member {boolean} [isDefaultContainer] <code>true</code> if the app is a
   * default container; otherwise, <code>false</code>.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly isDefaultContainer?: boolean;
  /**
   * @member {string} [defaultHostName] Default hostname of the app. Read-only.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly defaultHostName?: string;
  /**
   * @member {SlotSwapStatus} [slotSwapStatus] Status of the last deployment
   * slot swap operation.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly slotSwapStatus?: SlotSwapStatus;
  /**
   * @member {boolean} [httpsOnly] HttpsOnly: configures a web site to accept
   * only https requests. Issues redirect for
   * http requests
   */
  httpsOnly?: boolean;
  /**
   * @member {ManagedServiceIdentity} [identity]
   */
  identity?: ManagedServiceIdentity;
}

/**
 * @interface
 * An interface representing Capability.
 * Describes the capabilities/features allowed for a specific SKU.
 *
 */
export interface Capability {
  /**
   * @member {string} [name] Name of the SKU capability.
   */
  name?: string;
  /**
   * @member {string} [value] Value of the SKU capability.
   */
  value?: string;
  /**
   * @member {string} [reason] Reason of the SKU capability.
   */
  reason?: string;
}

/**
 * @interface
 * An interface representing SkuCapacity.
 * Description of the App Service plan scale options.
 *
 */
export interface SkuCapacity {
  /**
   * @member {number} [minimum] Minimum number of workers for this App Service
   * plan SKU.
   */
  minimum?: number;
  /**
   * @member {number} [maximum] Maximum number of workers for this App Service
   * plan SKU.
   */
  maximum?: number;
  /**
   * @member {number} [default] Default number of workers for this App Service
   * plan SKU.
   */
  default?: number;
  /**
   * @member {string} [scaleType] Available scale configurations for an App
   * Service plan.
   */
  scaleType?: string;
}

/**
 * @interface
 * An interface representing SkuDescription.
 * Description of a SKU for a scalable resource.
 *
 */
export interface SkuDescription {
  /**
   * @member {string} [name] Name of the resource SKU.
   */
  name?: string;
  /**
   * @member {string} [tier] Service tier of the resource SKU.
   */
  tier?: string;
  /**
   * @member {string} [size] Size specifier of the resource SKU.
   */
  size?: string;
  /**
   * @member {string} [family] Family code of the resource SKU.
   */
  family?: string;
  /**
   * @member {number} [capacity] Current number of instances assigned to the
   * resource.
   */
  capacity?: number;
  /**
   * @member {SkuCapacity} [skuCapacity] Min, max, and default scale values of
   * the SKU.
   */
  skuCapacity?: SkuCapacity;
  /**
   * @member {string[]} [locations] Locations of the SKU.
   */
  locations?: string[];
  /**
   * @member {Capability[]} [capabilities] Capabilities of the SKU, e.g., is
   * traffic manager enabled?
   */
  capabilities?: Capability[];
}

/**
 * @interface
 * An interface representing AppServicePlan.
 * App Service plan.
 *
 * @extends Resource
 */
export interface AppServicePlan extends Resource {
  /**
   * @member {string} [workerTierName] Target worker tier assigned to the App
   * Service plan.
   */
  workerTierName?: string;
  /**
   * @member {StatusOptions} [status] App Service plan status. Possible values
   * include: 'Ready', 'Pending', 'Creating'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly status?: StatusOptions;
  /**
   * @member {string} [subscription] App Service plan subscription.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly subscription?: string;
  /**
   * @member {string} [adminSiteName] App Service plan administration site.
   */
  adminSiteName?: string;
  /**
   * @member {HostingEnvironmentProfile} [hostingEnvironmentProfile]
   * Specification for the App Service Environment to use for the App Service
   * plan.
   */
  hostingEnvironmentProfile?: HostingEnvironmentProfile;
  /**
   * @member {number} [maximumNumberOfWorkers] Maximum number of instances that
   * can be assigned to this App Service plan.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly maximumNumberOfWorkers?: number;
  /**
   * @member {string} [geoRegion] Geographical location for the App Service
   * plan.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly geoRegion?: string;
  /**
   * @member {boolean} [perSiteScaling] If <code>true</code>, apps assigned to
   * this App Service plan can be scaled independently.
   * If <code>false</code>, apps assigned to this App Service plan will scale
   * to all instances of the plan. Default value: false .
   */
  perSiteScaling?: boolean;
  /**
   * @member {number} [maximumElasticWorkerCount] Maximum number of total
   * workers allowed for this ElasticScaleEnabled App Service Plan
   */
  maximumElasticWorkerCount?: number;
  /**
   * @member {number} [numberOfSites] Number of apps assigned to this App
   * Service plan.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly numberOfSites?: number;
  /**
   * @member {boolean} [isSpot] If <code>true</code>, this App Service Plan
   * owns spot instances.
   */
  isSpot?: boolean;
  /**
   * @member {Date} [spotExpirationTime] The time when the server farm expires.
   * Valid only if it is a spot server farm.
   */
  spotExpirationTime?: Date;
  /**
   * @member {Date} [freeOfferExpirationTime] The time when the server farm
   * free offer expires.
   */
  freeOfferExpirationTime?: Date;
  /**
   * @member {string} [resourceGroup] Resource group of the App Service plan.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly resourceGroup?: string;
  /**
   * @member {boolean} [reserved] If Linux app service plan <code>true</code>,
   * <code>false</code> otherwise. Default value: false .
   */
  reserved?: boolean;
  /**
   * @member {boolean} [isXenon] Obsolete: If Hyper-V container app service
   * plan <code>true</code>, <code>false</code> otherwise. Default value: false
   * .
   */
  isXenon?: boolean;
  /**
   * @member {boolean} [hyperV] If Hyper-V container app service plan
   * <code>true</code>, <code>false</code> otherwise. Default value: false .
   */
  hyperV?: boolean;
  /**
   * @member {number} [targetWorkerCount] Scaling worker count.
   */
  targetWorkerCount?: number;
  /**
   * @member {number} [targetWorkerSizeId] Scaling worker size ID.
   */
  targetWorkerSizeId?: number;
  /**
   * @member {ProvisioningState} [provisioningState] Provisioning state of the
   * App Service Environment. Possible values include: 'Succeeded', 'Failed',
   * 'Canceled', 'InProgress', 'Deleting'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * @member {SkuDescription} [sku]
   */
  sku?: SkuDescription;
}

/**
 * @interface
 * An interface representing DefaultErrorResponseErrorDetailsItem.
 * Detailed errors.
 *
 */
export interface DefaultErrorResponseErrorDetailsItem {
  /**
   * @member {string} [code] Standardized string to programmatically identify
   * the error.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly code?: string;
  /**
   * @member {string} [message] Detailed error description and debugging
   * information.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly message?: string;
  /**
   * @member {string} [target] Detailed error description and debugging
   * information.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly target?: string;
}

/**
 * @interface
 * An interface representing DefaultErrorResponseError.
 * Error model.
 *
 */
export interface DefaultErrorResponseError {
  /**
   * @member {string} [code] Standardized string to programmatically identify
   * the error.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly code?: string;
  /**
   * @member {string} [message] Detailed error description and debugging
   * information.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly message?: string;
  /**
   * @member {string} [target] Detailed error description and debugging
   * information.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly target?: string;
  /**
   * @member {DefaultErrorResponseErrorDetailsItem[]} [details]
   */
  details?: DefaultErrorResponseErrorDetailsItem[];
  /**
   * @member {string} [innererror] More information to debug error.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly innererror?: string;
}

/**
 * @interface
 * An interface representing DefaultErrorResponse.
 * App Service error response.
 *
 */
export interface DefaultErrorResponse {
  /**
   * @member {DefaultErrorResponseError} [error] Error model.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly error?: DefaultErrorResponseError;
}

/**
 * @interface
 * An interface representing NameIdentifier.
 * Identifies an object.
 *
 */
export interface NameIdentifier {
  /**
   * @member {string} [name] Name of the object.
   */
  name?: string;
}

/**
 * @interface
 * An interface representing LogSpecification.
 * Log Definition of a single resource metric.
 *
 */
export interface LogSpecification {
  /**
   * @member {string} [name]
   */
  name?: string;
  /**
   * @member {string} [displayName]
   */
  displayName?: string;
  /**
   * @member {string} [blobDuration]
   */
  blobDuration?: string;
}

/**
 * @interface
 * An interface representing MetricAvailability.
 * Retention policy of a resource metric.
 *
 */
export interface MetricAvailability {
  /**
   * @member {string} [timeGrain]
   */
  timeGrain?: string;
  /**
   * @member {string} [blobDuration]
   */
  blobDuration?: string;
}

/**
 * @interface
 * An interface representing Dimension.
 * Dimension of a resource metric. For e.g. instance specific HTTP requests for
 * a web app,
 * where instance name is dimension of the metric HTTP request
 *
 */
export interface Dimension {
  /**
   * @member {string} [name]
   */
  name?: string;
  /**
   * @member {string} [displayName]
   */
  displayName?: string;
  /**
   * @member {string} [internalName]
   */
  internalName?: string;
  /**
   * @member {boolean} [toBeExportedForShoebox]
   */
  toBeExportedForShoebox?: boolean;
}

/**
 * @interface
 * An interface representing MetricSpecification.
 * Definition of a single resource metric.
 *
 */
export interface MetricSpecification {
  /**
   * @member {string} [name]
   */
  name?: string;
  /**
   * @member {string} [displayName]
   */
  displayName?: string;
  /**
   * @member {string} [displayDescription]
   */
  displayDescription?: string;
  /**
   * @member {string} [unit]
   */
  unit?: string;
  /**
   * @member {string} [aggregationType]
   */
  aggregationType?: string;
  /**
   * @member {boolean} [supportsInstanceLevelAggregation]
   */
  supportsInstanceLevelAggregation?: boolean;
  /**
   * @member {boolean} [enableRegionalMdmAccount]
   */
  enableRegionalMdmAccount?: boolean;
  /**
   * @member {string} [sourceMdmAccount]
   */
  sourceMdmAccount?: string;
  /**
   * @member {string} [sourceMdmNamespace]
   */
  sourceMdmNamespace?: string;
  /**
   * @member {string} [metricFilterPattern]
   */
  metricFilterPattern?: string;
  /**
   * @member {boolean} [fillGapWithZero]
   */
  fillGapWithZero?: boolean;
  /**
   * @member {boolean} [isInternal]
   */
  isInternal?: boolean;
  /**
   * @member {Dimension[]} [dimensions]
   */
  dimensions?: Dimension[];
  /**
   * @member {string} [category]
   */
  category?: string;
  /**
   * @member {MetricAvailability[]} [availabilities]
   */
  availabilities?: MetricAvailability[];
}

/**
 * @interface
 * An interface representing ServiceSpecification.
 * Resource metrics service provided by Microsoft.Insights resource provider.
 *
 */
export interface ServiceSpecification {
  /**
   * @member {MetricSpecification[]} [metricSpecifications]
   */
  metricSpecifications?: MetricSpecification[];
  /**
   * @member {LogSpecification[]} [logSpecifications]
   */
  logSpecifications?: LogSpecification[];
}

/**
 * @interface
 * An interface representing CsmOperationDescriptionProperties.
 * Properties available for a Microsoft.Web resource provider operation.
 *
 */
export interface CsmOperationDescriptionProperties {
  /**
   * @member {ServiceSpecification} [serviceSpecification]
   */
  serviceSpecification?: ServiceSpecification;
}

/**
 * @interface
 * An interface representing CsmOperationDisplay.
 * Meta data about operation used for display in portal.
 *
 */
export interface CsmOperationDisplay {
  /**
   * @member {string} [provider]
   */
  provider?: string;
  /**
   * @member {string} [resource]
   */
  resource?: string;
  /**
   * @member {string} [operation]
   */
  operation?: string;
  /**
   * @member {string} [description]
   */
  description?: string;
}

/**
 * @interface
 * An interface representing CsmOperationDescription.
 * Description of an operation available for Microsoft.Web resource provider.
 *
 */
export interface CsmOperationDescription {
  /**
   * @member {string} [name]
   */
  name?: string;
  /**
   * @member {CsmOperationDisplay} [display]
   */
  display?: CsmOperationDisplay;
  /**
   * @member {string} [origin]
   */
  origin?: string;
  /**
   * @member {CsmOperationDescriptionProperties} [properties]
   */
  properties?: CsmOperationDescriptionProperties;
}

/**
 * @interface
 * An interface representing Address.
 * Address information for domain registration.
 *
 */
export interface Address {
  /**
   * @member {string} address1 First line of an Address.
   */
  address1: string;
  /**
   * @member {string} [address2] The second line of the Address. Optional.
   */
  address2?: string;
  /**
   * @member {string} city The city for the address.
   */
  city: string;
  /**
   * @member {string} country The country for the address.
   */
  country: string;
  /**
   * @member {string} postalCode The postal code for the address.
   */
  postalCode: string;
  /**
   * @member {string} state The state or province for the address.
   */
  state: string;
}

/**
 * @interface
 * An interface representing Contact.
 * Contact information for domain registration. If 'Domain Privacy' option is
 * not selected then the contact information is made publicly available through
 * the Whois
 * directories as per ICANN requirements.
 *
 */
export interface Contact {
  /**
   * @member {Address} [addressMailing] Mailing address.
   */
  addressMailing?: Address;
  /**
   * @member {string} email Email address.
   */
  email: string;
  /**
   * @member {string} [fax] Fax number.
   */
  fax?: string;
  /**
   * @member {string} [jobTitle] Job title.
   */
  jobTitle?: string;
  /**
   * @member {string} nameFirst First name.
   */
  nameFirst: string;
  /**
   * @member {string} nameLast Last name.
   */
  nameLast: string;
  /**
   * @member {string} [nameMiddle] Middle name.
   */
  nameMiddle?: string;
  /**
   * @member {string} [organization] Organization contact belongs to.
   */
  organization?: string;
  /**
   * @member {string} phone Phone number.
   */
  phone: string;
}

/**
 * @interface
 * An interface representing HostName.
 * Details of a hostname derived from a domain.
 *
 */
export interface HostName {
  /**
   * @member {string} [name] Name of the hostname.
   */
  name?: string;
  /**
   * @member {string[]} [siteNames] List of apps the hostname is assigned to.
   * This list will have more than one app only if the hostname is pointing to
   * a Traffic Manager.
   */
  siteNames?: string[];
  /**
   * @member {string} [azureResourceName] Name of the Azure resource the
   * hostname is assigned to. If it is assigned to a Traffic Manager then it
   * will be the Traffic Manager name otherwise it will be the app name.
   */
  azureResourceName?: string;
  /**
   * @member {AzureResourceType} [azureResourceType] Type of the Azure resource
   * the hostname is assigned to. Possible values include: 'Website',
   * 'TrafficManager'
   */
  azureResourceType?: AzureResourceType;
  /**
   * @member {CustomHostNameDnsRecordType} [customHostNameDnsRecordType] Type
   * of the DNS record. Possible values include: 'CName', 'A'
   */
  customHostNameDnsRecordType?: CustomHostNameDnsRecordType;
  /**
   * @member {HostNameType} [hostNameType] Type of the hostname. Possible
   * values include: 'Verified', 'Managed'
   */
  hostNameType?: HostNameType;
}

/**
 * @interface
 * An interface representing DomainPurchaseConsent.
 * Domain purchase consent object, representing acceptance of applicable legal
 * agreements.
 *
 */
export interface DomainPurchaseConsent {
  /**
   * @member {string[]} [agreementKeys] List of applicable legal agreement
   * keys. This list can be retrieved using ListLegalAgreements API under
   * <code>TopLevelDomain</code> resource.
   */
  agreementKeys?: string[];
  /**
   * @member {string} [agreedBy] Client IP address.
   */
  agreedBy?: string;
  /**
   * @member {Date} [agreedAt] Timestamp when the agreements were accepted.
   */
  agreedAt?: Date;
}

/**
 * @interface
 * An interface representing Domain.
 * Information about a domain.
 *
 * @extends Resource
 */
export interface Domain extends Resource {
  /**
   * @member {Contact} contactAdmin Administrative contact.
   */
  contactAdmin: Contact;
  /**
   * @member {Contact} contactBilling Billing contact.
   */
  contactBilling: Contact;
  /**
   * @member {Contact} contactRegistrant Registrant contact.
   */
  contactRegistrant: Contact;
  /**
   * @member {Contact} contactTech Technical contact.
   */
  contactTech: Contact;
  /**
   * @member {DomainStatus} [registrationStatus] Domain registration status.
   * Possible values include: 'Active', 'Awaiting', 'Cancelled', 'Confiscated',
   * 'Disabled', 'Excluded', 'Expired', 'Failed', 'Held', 'Locked', 'Parked',
   * 'Pending', 'Reserved', 'Reverted', 'Suspended', 'Transferred', 'Unknown',
   * 'Unlocked', 'Unparked', 'Updated', 'JsonConverterFailed'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly registrationStatus?: DomainStatus;
  /**
   * @member {ProvisioningState} [provisioningState] Domain provisioning state.
   * Possible values include: 'Succeeded', 'Failed', 'Canceled', 'InProgress',
   * 'Deleting'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * @member {string[]} [nameServers] Name servers.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nameServers?: string[];
  /**
   * @member {boolean} [privacy] <code>true</code> if domain privacy is enabled
   * for this domain; otherwise, <code>false</code>.
   */
  privacy?: boolean;
  /**
   * @member {Date} [createdTime] Domain creation timestamp.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly createdTime?: Date;
  /**
   * @member {Date} [expirationTime] Domain expiration timestamp.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly expirationTime?: Date;
  /**
   * @member {Date} [lastRenewedTime] Timestamp when the domain was renewed
   * last time.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly lastRenewedTime?: Date;
  /**
   * @member {boolean} [autoRenew] <code>true</code> if the domain should be
   * automatically renewed; otherwise, <code>false</code>. Default value: true
   * .
   */
  autoRenew?: boolean;
  /**
   * @member {boolean} [readyForDnsRecordManagement] <code>true</code> if Azure
   * can assign this domain to App Service apps; otherwise, <code>false</code>.
   * This value will be <code>true</code> if domain registration status is
   * active and
   * it is hosted on name servers Azure has programmatic access to.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly readyForDnsRecordManagement?: boolean;
  /**
   * @member {HostName[]} [managedHostNames] All hostnames derived from the
   * domain and assigned to Azure resources.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly managedHostNames?: HostName[];
  /**
   * @member {DomainPurchaseConsent} consent Legal agreement consent.
   */
  consent: DomainPurchaseConsent;
  /**
   * @member {string[]} [domainNotRenewableReasons] Reasons why domain is not
   * renewable.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly domainNotRenewableReasons?: string[];
  /**
   * @member {DnsType} [dnsType] Current DNS type. Possible values include:
   * 'AzureDns', 'DefaultDomainRegistrarDns'
   */
  dnsType?: DnsType;
  /**
   * @member {string} [dnsZoneId] Azure DNS Zone to use
   */
  dnsZoneId?: string;
  /**
   * @member {DnsType} [targetDnsType] Target DNS type (would be used for
   * migration). Possible values include: 'AzureDns',
   * 'DefaultDomainRegistrarDns'
   */
  targetDnsType?: DnsType;
  /**
   * @member {string} [authCode]
   */
  authCode?: string;
}

/**
 * @interface
 * An interface representing DomainAvailablilityCheckResult.
 * Domain availablility check result.
 *
 */
export interface DomainAvailablilityCheckResult {
  /**
   * @member {string} [name] Name of the domain.
   */
  name?: string;
  /**
   * @member {boolean} [available] <code>true</code> if domain can be purchased
   * using CreateDomain API; otherwise, <code>false</code>.
   */
  available?: boolean;
  /**
   * @member {DomainType} [domainType] Valid values are Regular domain: Azure
   * will charge the full price of domain registration, SoftDeleted: Purchasing
   * this domain will simply restore it and this operation will not cost
   * anything. Possible values include: 'Regular', 'SoftDeleted'
   */
  domainType?: DomainType;
}

/**
 * @interface
 * An interface representing DomainControlCenterSsoRequest.
 * Single sign-on request information for domain management.
 *
 */
export interface DomainControlCenterSsoRequest {
  /**
   * @member {string} [url] URL where the single sign-on request is to be made.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly url?: string;
  /**
   * @member {string} [postParameterKey] Post parameter key.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly postParameterKey?: string;
  /**
   * @member {string} [postParameterValue] Post parameter value. Client should
   * use 'application/x-www-form-urlencoded' encoding for this value.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly postParameterValue?: string;
}

/**
 * @interface
 * An interface representing DomainOwnershipIdentifier.
 * Domain ownership Identifier.
 *
 * @extends ProxyOnlyResource
 */
export interface DomainOwnershipIdentifier extends ProxyOnlyResource {
  /**
   * @member {string} [ownershipId] Ownership Id.
   */
  ownershipId?: string;
}

/**
 * @interface
 * An interface representing DomainPatchResource.
 * ARM resource for a domain.
 *
 * @extends ProxyOnlyResource
 */
export interface DomainPatchResource extends ProxyOnlyResource {
  /**
   * @member {Contact} contactAdmin Administrative contact.
   */
  contactAdmin: Contact;
  /**
   * @member {Contact} contactBilling Billing contact.
   */
  contactBilling: Contact;
  /**
   * @member {Contact} contactRegistrant Registrant contact.
   */
  contactRegistrant: Contact;
  /**
   * @member {Contact} contactTech Technical contact.
   */
  contactTech: Contact;
  /**
   * @member {DomainStatus} [registrationStatus] Domain registration status.
   * Possible values include: 'Active', 'Awaiting', 'Cancelled', 'Confiscated',
   * 'Disabled', 'Excluded', 'Expired', 'Failed', 'Held', 'Locked', 'Parked',
   * 'Pending', 'Reserved', 'Reverted', 'Suspended', 'Transferred', 'Unknown',
   * 'Unlocked', 'Unparked', 'Updated', 'JsonConverterFailed'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly registrationStatus?: DomainStatus;
  /**
   * @member {ProvisioningState} [provisioningState] Domain provisioning state.
   * Possible values include: 'Succeeded', 'Failed', 'Canceled', 'InProgress',
   * 'Deleting'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * @member {string[]} [nameServers] Name servers.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nameServers?: string[];
  /**
   * @member {boolean} [privacy] <code>true</code> if domain privacy is enabled
   * for this domain; otherwise, <code>false</code>.
   */
  privacy?: boolean;
  /**
   * @member {Date} [createdTime] Domain creation timestamp.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly createdTime?: Date;
  /**
   * @member {Date} [expirationTime] Domain expiration timestamp.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly expirationTime?: Date;
  /**
   * @member {Date} [lastRenewedTime] Timestamp when the domain was renewed
   * last time.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly lastRenewedTime?: Date;
  /**
   * @member {boolean} [autoRenew] <code>true</code> if the domain should be
   * automatically renewed; otherwise, <code>false</code>. Default value: true
   * .
   */
  autoRenew?: boolean;
  /**
   * @member {boolean} [readyForDnsRecordManagement] <code>true</code> if Azure
   * can assign this domain to App Service apps; otherwise, <code>false</code>.
   * This value will be <code>true</code> if domain registration status is
   * active and
   * it is hosted on name servers Azure has programmatic access to.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly readyForDnsRecordManagement?: boolean;
  /**
   * @member {HostName[]} [managedHostNames] All hostnames derived from the
   * domain and assigned to Azure resources.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly managedHostNames?: HostName[];
  /**
   * @member {DomainPurchaseConsent} consent Legal agreement consent.
   */
  consent: DomainPurchaseConsent;
  /**
   * @member {string[]} [domainNotRenewableReasons] Reasons why domain is not
   * renewable.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly domainNotRenewableReasons?: string[];
  /**
   * @member {DnsType} [dnsType] Current DNS type. Possible values include:
   * 'AzureDns', 'DefaultDomainRegistrarDns'
   */
  dnsType?: DnsType;
  /**
   * @member {string} [dnsZoneId] Azure DNS Zone to use
   */
  dnsZoneId?: string;
  /**
   * @member {DnsType} [targetDnsType] Target DNS type (would be used for
   * migration). Possible values include: 'AzureDns',
   * 'DefaultDomainRegistrarDns'
   */
  targetDnsType?: DnsType;
  /**
   * @member {string} [authCode]
   */
  authCode?: string;
}

/**
 * @interface
 * An interface representing DomainRecommendationSearchParameters.
 * Domain recommendation search parameters.
 *
 */
export interface DomainRecommendationSearchParameters {
  /**
   * @member {string} [keywords] Keywords to be used for generating domain
   * recommendations.
   */
  keywords?: string;
  /**
   * @member {number} [maxDomainRecommendations] Maximum number of
   * recommendations.
   */
  maxDomainRecommendations?: number;
}

/**
 * @interface
 * An interface representing TldLegalAgreement.
 * Legal agreement for a top level domain.
 *
 */
export interface TldLegalAgreement {
  /**
   * @member {string} agreementKey Unique identifier for the agreement.
   */
  agreementKey: string;
  /**
   * @member {string} title Agreement title.
   */
  title: string;
  /**
   * @member {string} content Agreement details.
   */
  content: string;
  /**
   * @member {string} [url] URL where a copy of the agreement details is
   * hosted.
   */
  url?: string;
}

/**
 * @interface
 * An interface representing TopLevelDomain.
 * A top level domain object.
 *
 * @extends ProxyOnlyResource
 */
export interface TopLevelDomain extends ProxyOnlyResource {
  /**
   * @member {boolean} [privacy] If <code>true</code>, then the top level
   * domain supports domain privacy; otherwise, <code>false</code>.
   */
  privacy?: boolean;
}

/**
 * @interface
 * An interface representing TopLevelDomainAgreementOption.
 * Options for retrieving the list of top level domain legal agreements.
 *
 */
export interface TopLevelDomainAgreementOption {
  /**
   * @member {boolean} [includePrivacy] If <code>true</code>, then the list of
   * agreements will include agreements for domain privacy as well; otherwise,
   * <code>false</code>.
   */
  includePrivacy?: boolean;
  /**
   * @member {boolean} [forTransfer] If <code>true</code>, then the list of
   * agreements will include agreements for domain transfer as well; otherwise,
   * <code>false</code>.
   */
  forTransfer?: boolean;
}

/**
 * @interface
 * An interface representing Certificate.
 * SSL certificate for an app.
 *
 * @extends Resource
 */
export interface Certificate extends Resource {
  /**
   * @member {string} [friendlyName] Friendly name of the certificate.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly friendlyName?: string;
  /**
   * @member {string} [subjectName] Subject name of the certificate.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly subjectName?: string;
  /**
   * @member {string[]} [hostNames] Host names the certificate applies to.
   */
  hostNames?: string[];
  /**
   * @member {Uint8Array} [pfxBlob] Pfx blob.
   */
  pfxBlob?: Uint8Array;
  /**
   * @member {string} [siteName] App name.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly siteName?: string;
  /**
   * @member {string} [selfLink] Self link.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly selfLink?: string;
  /**
   * @member {string} [issuer] Certificate issuer.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly issuer?: string;
  /**
   * @member {Date} [issueDate] Certificate issue Date.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly issueDate?: Date;
  /**
   * @member {Date} [expirationDate] Certificate expriration date.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly expirationDate?: Date;
  /**
   * @member {string} password Certificate password.
   */
  password: string;
  /**
   * @member {string} [thumbprint] Certificate thumbprint.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly thumbprint?: string;
  /**
   * @member {boolean} [valid] Is the certificate valid?.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly valid?: boolean;
  /**
   * @member {Uint8Array} [cerBlob] Raw bytes of .cer file
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly cerBlob?: Uint8Array;
  /**
   * @member {string} [publicKeyHash] Public key hash.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly publicKeyHash?: string;
  /**
   * @member {HostingEnvironmentProfile} [hostingEnvironmentProfile]
   * Specification for the App Service Environment to use for the certificate.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly hostingEnvironmentProfile?: HostingEnvironmentProfile;
  /**
   * @member {string} [keyVaultId] Key Vault Csm resource Id.
   */
  keyVaultId?: string;
  /**
   * @member {string} [keyVaultSecretName] Key Vault secret name.
   */
  keyVaultSecretName?: string;
  /**
   * @member {KeyVaultSecretStatus} [keyVaultSecretStatus] Status of the Key
   * Vault secret. Possible values include: 'Initialized',
   * 'WaitingOnCertificateOrder', 'Succeeded', 'CertificateOrderFailed',
   * 'OperationNotPermittedOnKeyVault',
   * 'AzureServiceUnauthorizedToAccessKeyVault', 'KeyVaultDoesNotExist',
   * 'KeyVaultSecretDoesNotExist', 'UnknownError', 'ExternalPrivateKey',
   * 'Unknown'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly keyVaultSecretStatus?: KeyVaultSecretStatus;
  /**
   * @member {string} [serverFarmId] Resource ID of the associated App Service
   * plan, formatted as:
   * "/subscriptions/{subscriptionID}/resourceGroups/{groupName}/providers/Microsoft.Web/serverfarms/{appServicePlanName}".
   */
  serverFarmId?: string;
}

/**
 * @interface
 * An interface representing CertificatePatchResource.
 * ARM resource for a certificate.
 *
 * @extends ProxyOnlyResource
 */
export interface CertificatePatchResource extends ProxyOnlyResource {
  /**
   * @member {string} [friendlyName] Friendly name of the certificate.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly friendlyName?: string;
  /**
   * @member {string} [subjectName] Subject name of the certificate.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly subjectName?: string;
  /**
   * @member {string[]} [hostNames] Host names the certificate applies to.
   */
  hostNames?: string[];
  /**
   * @member {Uint8Array} [pfxBlob] Pfx blob.
   */
  pfxBlob?: Uint8Array;
  /**
   * @member {string} [siteName] App name.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly siteName?: string;
  /**
   * @member {string} [selfLink] Self link.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly selfLink?: string;
  /**
   * @member {string} [issuer] Certificate issuer.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly issuer?: string;
  /**
   * @member {Date} [issueDate] Certificate issue Date.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly issueDate?: Date;
  /**
   * @member {Date} [expirationDate] Certificate expriration date.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly expirationDate?: Date;
  /**
   * @member {string} password Certificate password.
   */
  password: string;
  /**
   * @member {string} [thumbprint] Certificate thumbprint.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly thumbprint?: string;
  /**
   * @member {boolean} [valid] Is the certificate valid?.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly valid?: boolean;
  /**
   * @member {Uint8Array} [cerBlob] Raw bytes of .cer file
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly cerBlob?: Uint8Array;
  /**
   * @member {string} [publicKeyHash] Public key hash.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly publicKeyHash?: string;
  /**
   * @member {HostingEnvironmentProfile} [hostingEnvironmentProfile]
   * Specification for the App Service Environment to use for the certificate.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly hostingEnvironmentProfile?: HostingEnvironmentProfile;
  /**
   * @member {string} [keyVaultId] Key Vault Csm resource Id.
   */
  keyVaultId?: string;
  /**
   * @member {string} [keyVaultSecretName] Key Vault secret name.
   */
  keyVaultSecretName?: string;
  /**
   * @member {KeyVaultSecretStatus} [keyVaultSecretStatus] Status of the Key
   * Vault secret. Possible values include: 'Initialized',
   * 'WaitingOnCertificateOrder', 'Succeeded', 'CertificateOrderFailed',
   * 'OperationNotPermittedOnKeyVault',
   * 'AzureServiceUnauthorizedToAccessKeyVault', 'KeyVaultDoesNotExist',
   * 'KeyVaultSecretDoesNotExist', 'UnknownError', 'ExternalPrivateKey',
   * 'Unknown'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly keyVaultSecretStatus?: KeyVaultSecretStatus;
  /**
   * @member {string} [serverFarmId] Resource ID of the associated App Service
   * plan, formatted as:
   * "/subscriptions/{subscriptionID}/resourceGroups/{groupName}/providers/Microsoft.Web/serverfarms/{appServicePlanName}".
   */
  serverFarmId?: string;
}

/**
 * @interface
 * An interface representing VirtualNetworkProfile.
 * Specification for using a Virtual Network.
 *
 */
export interface VirtualNetworkProfile {
  /**
   * @member {string} [id] Resource id of the Virtual Network.
   */
  id?: string;
  /**
   * @member {string} [name] Name of the Virtual Network (read-only).
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [type] Resource type of the Virtual Network (read-only).
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: string;
  /**
   * @member {string} [subnet] Subnet within the Virtual Network.
   */
  subnet?: string;
}

/**
 * @interface
 * An interface representing WorkerPool.
 * Worker pool of an App Service Environment.
 *
 */
export interface WorkerPool {
  /**
   * @member {number} [workerSizeId] Worker size ID for referencing this worker
   * pool.
   */
  workerSizeId?: number;
  /**
   * @member {ComputeModeOptions} [computeMode] Shared or dedicated app
   * hosting. Possible values include: 'Shared', 'Dedicated', 'Dynamic'
   */
  computeMode?: ComputeModeOptions;
  /**
   * @member {string} [workerSize] VM size of the worker pool instances.
   */
  workerSize?: string;
  /**
   * @member {number} [workerCount] Number of instances in the worker pool.
   */
  workerCount?: number;
  /**
   * @member {string[]} [instanceNames] Names of all instances in the worker
   * pool (read only).
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly instanceNames?: string[];
}

/**
 * @interface
 * An interface representing VirtualIPMapping.
 * Virtual IP mapping.
 *
 */
export interface VirtualIPMapping {
  /**
   * @member {string} [virtualIP] Virtual IP address.
   */
  virtualIP?: string;
  /**
   * @member {number} [internalHttpPort] Internal HTTP port.
   */
  internalHttpPort?: number;
  /**
   * @member {number} [internalHttpsPort] Internal HTTPS port.
   */
  internalHttpsPort?: number;
  /**
   * @member {boolean} [inUse] Is virtual IP mapping in use.
   */
  inUse?: boolean;
}

/**
 * @interface
 * An interface representing StampCapacity.
 * Stamp capacity information.
 *
 */
export interface StampCapacity {
  /**
   * @member {string} [name] Name of the stamp.
   */
  name?: string;
  /**
   * @member {number} [availableCapacity] Available capacity (# of machines,
   * bytes of storage etc...).
   */
  availableCapacity?: number;
  /**
   * @member {number} [totalCapacity] Total capacity (# of machines, bytes of
   * storage etc...).
   */
  totalCapacity?: number;
  /**
   * @member {string} [unit] Name of the unit.
   */
  unit?: string;
  /**
   * @member {ComputeModeOptions} [computeMode] Shared/dedicated workers.
   * Possible values include: 'Shared', 'Dedicated', 'Dynamic'
   */
  computeMode?: ComputeModeOptions;
  /**
   * @member {WorkerSizeOptions} [workerSize] Size of the machines. Possible
   * values include: 'Small', 'Medium', 'Large', 'D1', 'D2', 'D3', 'Default'
   */
  workerSize?: WorkerSizeOptions;
  /**
   * @member {number} [workerSizeId] Size ID of machines:
   * 0 - Small
   * 1 - Medium
   * 2 - Large
   */
  workerSizeId?: number;
  /**
   * @member {boolean} [excludeFromCapacityAllocation] If <code>true</code>, it
   * includes basic apps.
   * Basic apps are not used for capacity allocation.
   */
  excludeFromCapacityAllocation?: boolean;
  /**
   * @member {boolean} [isApplicableForAllComputeModes] <code>true</code> if
   * capacity is applicable for all apps; otherwise, <code>false</code>.
   */
  isApplicableForAllComputeModes?: boolean;
  /**
   * @member {string} [siteMode] Shared or Dedicated.
   */
  siteMode?: string;
  /**
   * @member {boolean} [isLinux] Is this a linux stamp capacity
   */
  isLinux?: boolean;
}

/**
 * @interface
 * An interface representing NetworkAccessControlEntry.
 * Network access control entry.
 *
 */
export interface NetworkAccessControlEntry {
  /**
   * @member {AccessControlEntryAction} [action] Action object. Possible values
   * include: 'Permit', 'Deny'
   */
  action?: AccessControlEntryAction;
  /**
   * @member {string} [description] Description of network access control
   * entry.
   */
  description?: string;
  /**
   * @member {number} [order] Order of precedence.
   */
  order?: number;
  /**
   * @member {string} [remoteSubnet] Remote subnet.
   */
  remoteSubnet?: string;
}

/**
 * @interface
 * An interface representing AppServiceEnvironment.
 * Description of an App Service Environment.
 *
 */
export interface AppServiceEnvironment {
  /**
   * @member {string} name Name of the App Service Environment.
   */
  name: string;
  /**
   * @member {string} location Location of the App Service Environment, e.g.
   * "West US".
   */
  location: string;
  /**
   * @member {ProvisioningState} [provisioningState] Provisioning state of the
   * App Service Environment. Possible values include: 'Succeeded', 'Failed',
   * 'Canceled', 'InProgress', 'Deleting'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * @member {HostingEnvironmentStatus} [status] Current status of the App
   * Service Environment. Possible values include: 'Preparing', 'Ready',
   * 'Scaling', 'Deleting'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly status?: HostingEnvironmentStatus;
  /**
   * @member {string} [vnetName] Name of the Virtual Network for the App
   * Service Environment.
   */
  vnetName?: string;
  /**
   * @member {string} [vnetResourceGroupName] Resource group of the Virtual
   * Network.
   */
  vnetResourceGroupName?: string;
  /**
   * @member {string} [vnetSubnetName] Subnet of the Virtual Network.
   */
  vnetSubnetName?: string;
  /**
   * @member {VirtualNetworkProfile} virtualNetwork Description of the Virtual
   * Network.
   */
  virtualNetwork: VirtualNetworkProfile;
  /**
   * @member {InternalLoadBalancingMode} [internalLoadBalancingMode] Specifies
   * which endpoints to serve internally in the Virtual Network for the App
   * Service Environment. Possible values include: 'None', 'Web', 'Publishing'
   */
  internalLoadBalancingMode?: InternalLoadBalancingMode;
  /**
   * @member {string} [multiSize] Front-end VM size, e.g. "Medium", "Large".
   */
  multiSize?: string;
  /**
   * @member {number} [multiRoleCount] Number of front-end instances.
   */
  multiRoleCount?: number;
  /**
   * @member {WorkerPool[]} workerPools Description of worker pools with worker
   * size IDs, VM sizes, and number of workers in each pool.
   */
  workerPools: WorkerPool[];
  /**
   * @member {number} [ipsslAddressCount] Number of IP SSL addresses reserved
   * for the App Service Environment.
   */
  ipsslAddressCount?: number;
  /**
   * @member {string} [databaseEdition] Edition of the metadata database for
   * the App Service Environment, e.g. "Standard".
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly databaseEdition?: string;
  /**
   * @member {string} [databaseServiceObjective] Service objective of the
   * metadata database for the App Service Environment, e.g. "S0".
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly databaseServiceObjective?: string;
  /**
   * @member {number} [upgradeDomains] Number of upgrade domains of the App
   * Service Environment.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly upgradeDomains?: number;
  /**
   * @member {string} [subscriptionId] Subscription of the App Service
   * Environment.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly subscriptionId?: string;
  /**
   * @member {string} [dnsSuffix] DNS suffix of the App Service Environment.
   */
  dnsSuffix?: string;
  /**
   * @member {string} [lastAction] Last deployment action on the App Service
   * Environment.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly lastAction?: string;
  /**
   * @member {string} [lastActionResult] Result of the last deployment action
   * on the App Service Environment.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly lastActionResult?: string;
  /**
   * @member {string} [allowedMultiSizes] List of comma separated strings
   * describing which VM sizes are allowed for front-ends.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly allowedMultiSizes?: string;
  /**
   * @member {string} [allowedWorkerSizes] List of comma separated strings
   * describing which VM sizes are allowed for workers.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly allowedWorkerSizes?: string;
  /**
   * @member {number} [maximumNumberOfMachines] Maximum number of VMs in the
   * App Service Environment.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly maximumNumberOfMachines?: number;
  /**
   * @member {VirtualIPMapping[]} [vipMappings] Description of IP SSL mapping
   * for the App Service Environment.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly vipMappings?: VirtualIPMapping[];
  /**
   * @member {StampCapacity[]} [environmentCapacities] Current total, used, and
   * available worker capacities.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly environmentCapacities?: StampCapacity[];
  /**
   * @member {NetworkAccessControlEntry[]} [networkAccessControlList] Access
   * control list for controlling traffic to the App Service Environment.
   */
  networkAccessControlList?: NetworkAccessControlEntry[];
  /**
   * @member {boolean} [environmentIsHealthy] True/false indicating whether the
   * App Service Environment is healthy.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly environmentIsHealthy?: boolean;
  /**
   * @member {string} [environmentStatus] Detailed message about with results
   * of the last check of the App Service Environment.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly environmentStatus?: string;
  /**
   * @member {string} [resourceGroup] Resource group of the App Service
   * Environment.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly resourceGroup?: string;
  /**
   * @member {number} [frontEndScaleFactor] Scale factor for front-ends.
   */
  frontEndScaleFactor?: number;
  /**
   * @member {number} [defaultFrontEndScaleFactor] Default Scale Factor for
   * FrontEnds.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly defaultFrontEndScaleFactor?: number;
  /**
   * @member {string} [apiManagementAccountId] API Management Account
   * associated with the App Service Environment.
   */
  apiManagementAccountId?: string;
  /**
   * @member {boolean} [suspended] <code>true</code> if the App Service
   * Environment is suspended; otherwise, <code>false</code>. The environment
   * can be suspended, e.g. when the management endpoint is no longer available
   * (most likely because NSG blocked the incoming traffic).
   */
  suspended?: boolean;
  /**
   * @member {boolean} [dynamicCacheEnabled] True/false indicating whether the
   * App Service Environment is suspended. The environment can be suspended
   * e.g. when the management endpoint is no longer available
   * (most likely because NSG blocked the incoming traffic).
   */
  dynamicCacheEnabled?: boolean;
  /**
   * @member {NameValuePair[]} [clusterSettings] Custom settings for changing
   * the behavior of the App Service Environment.
   */
  clusterSettings?: NameValuePair[];
  /**
   * @member {string[]} [userWhitelistedIpRanges] User added ip ranges to
   * whitelist on ASE db
   */
  userWhitelistedIpRanges?: string[];
  /**
   * @member {boolean} [hasLinuxWorkers] Flag that displays whether an ASE has
   * linux workers or not
   */
  hasLinuxWorkers?: boolean;
  /**
   * @member {string} [sslCertKeyVaultId] Key Vault ID for ILB App Service
   * Environment default SSL certificate
   */
  sslCertKeyVaultId?: string;
  /**
   * @member {string} [sslCertKeyVaultSecretName] Key Vault Secret Name for ILB
   * App Service Environment default SSL certificate
   */
  sslCertKeyVaultSecretName?: string;
}

/**
 * @interface
 * An interface representing LocalizableString.
 * Localizable string object containing the name and a localized value.
 *
 */
export interface LocalizableString {
  /**
   * @member {string} [value] Non-localized name.
   */
  value?: string;
  /**
   * @member {string} [localizedValue] Localized name.
   */
  localizedValue?: string;
}

/**
 * @interface
 * An interface representing CsmUsageQuota.
 * Usage of the quota resource.
 *
 */
export interface CsmUsageQuota {
  /**
   * @member {string} [unit] Units of measurement for the quota resourse.
   */
  unit?: string;
  /**
   * @member {Date} [nextResetTime] Next reset time for the resource counter.
   */
  nextResetTime?: Date;
  /**
   * @member {number} [currentValue] The current value of the resource counter.
   */
  currentValue?: number;
  /**
   * @member {number} [limit] The resource limit.
   */
  limit?: number;
  /**
   * @member {LocalizableString} [name] Quota name.
   */
  name?: LocalizableString;
}

/**
 * @interface
 * An interface representing ErrorEntity.
 * Body of the error response returned from the API.
 *
 */
export interface ErrorEntity {
  /**
   * @member {string} [extendedCode] Type of error.
   */
  extendedCode?: string;
  /**
   * @member {string} [messageTemplate] Message template.
   */
  messageTemplate?: string;
  /**
   * @member {string[]} [parameters] Parameters for the template.
   */
  parameters?: string[];
  /**
   * @member {ErrorEntity[]} [innerErrors] Inner errors.
   */
  innerErrors?: ErrorEntity[];
  /**
   * @member {string} [code] Basic error code.
   */
  code?: string;
  /**
   * @member {string} [message] Any details of the error.
   */
  message?: string;
}

/**
 * @interface
 * An interface representing Operation.
 * An operation on a resource.
 *
 */
export interface Operation {
  /**
   * @member {string} [id] Operation ID.
   */
  id?: string;
  /**
   * @member {string} [name] Operation name.
   */
  name?: string;
  /**
   * @member {OperationStatus} [status] The current status of the operation.
   * Possible values include: 'InProgress', 'Failed', 'Succeeded', 'TimedOut',
   * 'Created'
   */
  status?: OperationStatus;
  /**
   * @member {ErrorEntity[]} [errors] Any errors associate with the operation.
   */
  errors?: ErrorEntity[];
  /**
   * @member {Date} [createdTime] Time when operation has started.
   */
  createdTime?: Date;
  /**
   * @member {Date} [modifiedTime] Time when operation has been updated.
   */
  modifiedTime?: Date;
  /**
   * @member {Date} [expirationTime] Time when operation will expire.
   */
  expirationTime?: Date;
  /**
   * @member {string} [geoMasterOperationId] Applicable only for stamp
   * operation ids.
   */
  geoMasterOperationId?: string;
}

/**
 * @interface
 * An interface representing ResourceMetricName.
 * Name of a metric for any resource .
 *
 */
export interface ResourceMetricName {
  /**
   * @member {string} [value] metric name value.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly value?: string;
  /**
   * @member {string} [localizedValue] Localized metric name value.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly localizedValue?: string;
}

/**
 * @interface
 * An interface representing ResourceMetricProperty.
 * Resource metric property.
 *
 */
export interface ResourceMetricProperty {
  /**
   * @member {string} [key] Key for resource metric property.
   */
  key?: string;
  /**
   * @member {string} [value] Value of pair.
   */
  value?: string;
}

/**
 * @interface
 * An interface representing ResourceMetricValue.
 * Value of resource metric.
 *
 */
export interface ResourceMetricValue {
  /**
   * @member {string} [timestamp] Value timestamp.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly timestamp?: string;
  /**
   * @member {number} [average] Value average.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly average?: number;
  /**
   * @member {number} [minimum] Value minimum.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly minimum?: number;
  /**
   * @member {number} [maximum] Value maximum.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly maximum?: number;
  /**
   * @member {number} [total] Value total.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly total?: number;
  /**
   * @member {number} [count] Value count.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly count?: number;
  /**
   * @member {ResourceMetricProperty[]} [properties] Resource metric properties
   * collection.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly properties?: ResourceMetricProperty[];
}

/**
 * @interface
 * An interface representing ResourceMetric.
 * Object representing a metric for any resource .
 *
 */
export interface ResourceMetric {
  /**
   * @member {ResourceMetricName} [name] Name of metric.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: ResourceMetricName;
  /**
   * @member {string} [unit] Metric unit.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly unit?: string;
  /**
   * @member {string} [timeGrain] Metric granularity. E.g PT1H, PT5M, P1D
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly timeGrain?: string;
  /**
   * @member {Date} [startTime] Metric start time.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly startTime?: Date;
  /**
   * @member {Date} [endTime] Metric end time.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly endTime?: Date;
  /**
   * @member {string} [resourceId] Metric resource Id.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly resourceId?: string;
  /**
   * @member {string} [id] Resource Id.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {ResourceMetricValue[]} [metricValues] Metric values.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly metricValues?: ResourceMetricValue[];
  /**
   * @member {ResourceMetricProperty[]} [properties] Resource metric properties
   * collection.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly properties?: ResourceMetricProperty[];
}

/**
 * @interface
 * An interface representing Solution.
 * Class Representing Solution for problems detected.
 *
 */
export interface Solution {
  /**
   * @member {number} [id] Solution Id.
   */
  id?: number;
  /**
   * @member {string} [displayName] Display Name of the solution
   */
  displayName?: string;
  /**
   * @member {number} [order] Order of the solution.
   */
  order?: number;
  /**
   * @member {string} [description] Description of the solution
   */
  description?: string;
  /**
   * @member {SolutionType} [type] Type of Solution. Possible values include:
   * 'QuickSolution', 'DeepInvestigation', 'BestPractices'
   */
  type?: SolutionType;
  /**
   * @member {NameValuePair[][]} [data] Solution Data.
   */
  data?: NameValuePair[][];
  /**
   * @member {NameValuePair[][]} [metadata] Solution Metadata.
   */
  metadata?: NameValuePair[][];
}

/**
 * @interface
 * An interface representing DetectorAbnormalTimePeriod.
 * Class representing Abnormal Time Period detected.
 *
 */
export interface DetectorAbnormalTimePeriod {
  /**
   * @member {Date} [startTime] Start time of the corelated event
   */
  startTime?: Date;
  /**
   * @member {Date} [endTime] End time of the corelated event
   */
  endTime?: Date;
  /**
   * @member {string} [message] Message describing the event
   */
  message?: string;
  /**
   * @member {string} [source] Represents the name of the Detector
   */
  source?: string;
  /**
   * @member {number} [priority] Represents the rank of the Detector
   */
  priority?: number;
  /**
   * @member {NameValuePair[][]} [metaData] Downtime metadata
   */
  metaData?: NameValuePair[][];
  /**
   * @member {IssueType} [type] Represents the type of the Detector. Possible
   * values include: 'ServiceIncident', 'AppDeployment', 'AppCrash',
   * 'RuntimeIssueDetected', 'AseDeployment', 'UserIssue', 'PlatformIssue',
   * 'Other'
   */
  type?: IssueType;
  /**
   * @member {Solution[]} [solutions] List of proposed solutions
   */
  solutions?: Solution[];
}

/**
 * @interface
 * An interface representing AbnormalTimePeriod.
 * Class representing Abnormal Time Period identified in diagnosis
 *
 */
export interface AbnormalTimePeriod {
  /**
   * @member {Date} [startTime] Start time of the downtime
   */
  startTime?: Date;
  /**
   * @member {Date} [endTime] End time of the downtime
   */
  endTime?: Date;
  /**
   * @member {DetectorAbnormalTimePeriod[]} [events] List of Possible Cause of
   * downtime
   */
  events?: DetectorAbnormalTimePeriod[];
  /**
   * @member {Solution[]} [solutions] List of proposed solutions
   */
  solutions?: Solution[];
}

/**
 * @interface
 * An interface representing DetectorDefinition.
 * Class representing detector definition
 *
 * @extends ProxyOnlyResource
 */
export interface DetectorDefinition extends ProxyOnlyResource {
  /**
   * @member {string} [displayName] Display name of the detector
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly displayName?: string;
  /**
   * @member {string} [description] Description of the detector
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
  /**
   * @member {number} [rank] Detector Rank
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly rank?: number;
  /**
   * @member {boolean} [isEnabled] Flag representing whether detector is
   * enabled or not.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly isEnabled?: boolean;
}

/**
 * @interface
 * An interface representing DiagnosticMetricSample.
 * Class representing Diagnostic Metric
 *
 */
export interface DiagnosticMetricSample {
  /**
   * @member {Date} [timestamp] Time at which metric is measured
   */
  timestamp?: Date;
  /**
   * @member {string} [roleInstance] Role Instance. Null if this counter is not
   * per instance
   * This is returned and should be whichever instance name we desire to be
   * returned
   * i.e. CPU and Memory return RDWORKERNAME (LargeDed..._IN_0)
   * where RDWORKERNAME is Machine name below and RoleInstance name in
   * parenthesis
   */
  roleInstance?: string;
  /**
   * @member {number} [total] Total value of the metric. If multiple
   * measurements are made this will have sum of all.
   */
  total?: number;
  /**
   * @member {number} [maximum] Maximum of the metric sampled during the time
   * period
   */
  maximum?: number;
  /**
   * @member {number} [minimum] Minimum of the metric sampled during the time
   * period
   */
  minimum?: number;
  /**
   * @member {boolean} [isAggregated] Whether the values are aggregates across
   * all workers or not
   */
  isAggregated?: boolean;
}

/**
 * @interface
 * An interface representing DiagnosticMetricSet.
 * Class representing Diagnostic Metric information
 *
 */
export interface DiagnosticMetricSet {
  /**
   * @member {string} [name] Name of the metric
   */
  name?: string;
  /**
   * @member {string} [unit] Metric's unit
   */
  unit?: string;
  /**
   * @member {Date} [startTime] Start time of the period
   */
  startTime?: Date;
  /**
   * @member {Date} [endTime] End time of the period
   */
  endTime?: Date;
  /**
   * @member {string} [timeGrain] Presented time grain. Supported grains at the
   * moment are PT1M, PT1H, P1D
   */
  timeGrain?: string;
  /**
   * @member {DiagnosticMetricSample[]} [values] Collection of metric values
   * for the selected period based on the
   * {Microsoft.Web.Hosting.Administration.DiagnosticMetricSet.TimeGrain}
   */
  values?: DiagnosticMetricSample[];
}

/**
 * @interface
 * An interface representing DataSource.
 * Class representing data source used by the detectors
 *
 */
export interface DataSource {
  /**
   * @member {string[]} [instructions] Instrunctions if any for the data source
   */
  instructions?: string[];
  /**
   * @member {NameValuePair[]} [dataSourceUri] Datasource Uri Links
   */
  dataSourceUri?: NameValuePair[];
}

/**
 * @interface
 * An interface representing ResponseMetaData.
 */
export interface ResponseMetaData {
  /**
   * @member {DataSource} [dataSource] Source of the Data
   */
  dataSource?: DataSource;
}

/**
 * @interface
 * An interface representing AnalysisData.
 * Class Representing Detector Evidence used for analysis
 *
 */
export interface AnalysisData {
  /**
   * @member {string} [source] Name of the Detector
   */
  source?: string;
  /**
   * @member {DetectorDefinition} [detectorDefinition] Detector Definition
   */
  detectorDefinition?: DetectorDefinition;
  /**
   * @member {DiagnosticMetricSet[]} [metrics] Source Metrics
   */
  metrics?: DiagnosticMetricSet[];
  /**
   * @member {NameValuePair[][]} [data] Additional Source Data
   */
  data?: NameValuePair[][];
  /**
   * @member {ResponseMetaData} [detectorMetaData] Detector Meta Data
   */
  detectorMetaData?: ResponseMetaData;
}

/**
 * @interface
 * An interface representing AnalysisDefinition.
 * Definition of Analysis
 *
 * @extends ProxyOnlyResource
 */
export interface AnalysisDefinition extends ProxyOnlyResource {
  /**
   * @member {string} [description] Description of the Analysis
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
}

/**
 * @interface
 * An interface representing DataTableResponseColumn.
 * Column definition
 *
 */
export interface DataTableResponseColumn {
  /**
   * @member {string} [columnName] Name of the column
   */
  columnName?: string;
  /**
   * @member {string} [dataType] Data type which looks like 'String' or
   * 'Int32'.
   */
  dataType?: string;
  /**
   * @member {string} [columnType] Column Type
   */
  columnType?: string;
}

/**
 * @interface
 * An interface representing DataTableResponseObject.
 * Data Table which defines columns and raw row values
 *
 */
export interface DataTableResponseObject {
  /**
   * @member {string} [tableName] Name of the table
   */
  tableName?: string;
  /**
   * @member {DataTableResponseColumn[]} [columns] List of columns with data
   * types
   */
  columns?: DataTableResponseColumn[];
  /**
   * @member {string[][]} [rows] Raw row values
   */
  rows?: string[][];
}

/**
 * @interface
 * An interface representing DetectorInfo.
 * Definition of Detector
 *
 */
export interface DetectorInfo {
  /**
   * @member {string} [description] Short description of the detector and its
   * purpose
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
  /**
   * @member {string} [category] Support Category
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly category?: string;
  /**
   * @member {string} [subCategory] Support Sub Category
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly subCategory?: string;
  /**
   * @member {string} [supportTopicId] Support Topic Id
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly supportTopicId?: string;
}

/**
 * @interface
 * An interface representing Rendering.
 * Instructions for rendering the data
 *
 */
export interface Rendering {
  /**
   * @member {RenderingType} [type] Rendering Type. Possible values include:
   * 'NoGraph', 'Table', 'TimeSeries', 'TimeSeriesPerInstance'
   */
  type?: RenderingType;
  /**
   * @member {string} [title] Title of data
   */
  title?: string;
  /**
   * @member {string} [description] Description of the data that will help it
   * be interpreted
   */
  description?: string;
}

/**
 * @interface
 * An interface representing DiagnosticData.
 * Set of data with rendering instructions
 *
 */
export interface DiagnosticData {
  /**
   * @member {DataTableResponseObject} [table] Data in table form
   */
  table?: DataTableResponseObject;
  /**
   * @member {Rendering} [renderingProperties] Properties that describe how the
   * table should be rendered
   */
  renderingProperties?: Rendering;
}

/**
 * @interface
 * An interface representing DetectorResponse.
 * Class representing Response from Detector
 *
 * @extends ProxyOnlyResource
 */
export interface DetectorResponse extends ProxyOnlyResource {
  /**
   * @member {DetectorInfo} [metadata] metadata for the detector
   */
  metadata?: DetectorInfo;
  /**
   * @member {DiagnosticData[]} [dataset] Data Set
   */
  dataset?: DiagnosticData[];
}

/**
 * @interface
 * An interface representing DiagnosticAnalysis.
 * Class representing a diagnostic analysis done on an application
 *
 * @extends ProxyOnlyResource
 */
export interface DiagnosticAnalysis extends ProxyOnlyResource {
  /**
   * @member {Date} [startTime] Start time of the period
   */
  startTime?: Date;
  /**
   * @member {Date} [endTime] End time of the period
   */
  endTime?: Date;
  /**
   * @member {AbnormalTimePeriod[]} [abnormalTimePeriods] List of time periods.
   */
  abnormalTimePeriods?: AbnormalTimePeriod[];
  /**
   * @member {AnalysisData[]} [payload] Data by each detector
   */
  payload?: AnalysisData[];
  /**
   * @member {DetectorDefinition[]} [nonCorrelatedDetectors] Data by each
   * detector for detectors that did not corelate
   */
  nonCorrelatedDetectors?: DetectorDefinition[];
}

/**
 * @interface
 * An interface representing DiagnosticCategory.
 * Class representing detector definition
 *
 * @extends ProxyOnlyResource
 */
export interface DiagnosticCategory extends ProxyOnlyResource {
  /**
   * @member {string} [description] Description of the diagnostic category
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
}

/**
 * @interface
 * An interface representing DiagnosticDetectorResponse.
 * Class representing Reponse from Diagnostic Detectors
 *
 * @extends ProxyOnlyResource
 */
export interface DiagnosticDetectorResponse extends ProxyOnlyResource {
  /**
   * @member {Date} [startTime] Start time of the period
   */
  startTime?: Date;
  /**
   * @member {Date} [endTime] End time of the period
   */
  endTime?: Date;
  /**
   * @member {boolean} [issueDetected] Flag representing Issue was detected.
   */
  issueDetected?: boolean;
  /**
   * @member {DetectorDefinition} [detectorDefinition] Detector's definition
   */
  detectorDefinition?: DetectorDefinition;
  /**
   * @member {DiagnosticMetricSet[]} [metrics] Metrics provided by the detector
   */
  metrics?: DiagnosticMetricSet[];
  /**
   * @member {DetectorAbnormalTimePeriod[]} [abnormalTimePeriods] List of
   * Correlated events found by the detector
   */
  abnormalTimePeriods?: DetectorAbnormalTimePeriod[];
  /**
   * @member {NameValuePair[][]} [data] Additional Data that detector wants to
   * send.
   */
  data?: NameValuePair[][];
  /**
   * @member {ResponseMetaData} [responseMetaData] Meta Data
   */
  responseMetaData?: ResponseMetaData;
}

/**
 * @interface
 * An interface representing StackMinorVersion.
 * Application stack minor version.
 *
 */
export interface StackMinorVersion {
  /**
   * @member {string} [displayVersion] Application stack minor version (display
   * only).
   */
  displayVersion?: string;
  /**
   * @member {string} [runtimeVersion] Application stack minor version (runtime
   * only).
   */
  runtimeVersion?: string;
  /**
   * @member {boolean} [isDefault] <code>true</code> if this is the default
   * minor version; otherwise, <code>false</code>.
   */
  isDefault?: boolean;
}

/**
 * @interface
 * An interface representing StackMajorVersion.
 * Application stack major version.
 *
 */
export interface StackMajorVersion {
  /**
   * @member {string} [displayVersion] Application stack major version (display
   * only).
   */
  displayVersion?: string;
  /**
   * @member {string} [runtimeVersion] Application stack major version (runtime
   * only).
   */
  runtimeVersion?: string;
  /**
   * @member {boolean} [isDefault] <code>true</code> if this is the default
   * major version; otherwise, <code>false</code>.
   */
  isDefault?: boolean;
  /**
   * @member {StackMinorVersion[]} [minorVersions] Minor versions associated
   * with the major version.
   */
  minorVersions?: StackMinorVersion[];
}

/**
 * @interface
 * An interface representing ApplicationStack.
 * Application stack.
 *
 */
export interface ApplicationStack {
  /**
   * @member {string} [name] Application stack name.
   */
  name?: string;
  /**
   * @member {string} [display] Application stack display name.
   */
  display?: string;
  /**
   * @member {string} [dependency] Application stack dependency.
   */
  dependency?: string;
  /**
   * @member {StackMajorVersion[]} [majorVersions] List of major versions
   * available.
   */
  majorVersions?: StackMajorVersion[];
  /**
   * @member {ApplicationStack[]} [frameworks] List of frameworks associated
   * with application stack.
   */
  frameworks?: ApplicationStack[];
}

/**
 * @interface
 * An interface representing Recommendation.
 * Represents a recommendation result generated by the recommendation engine.
 *
 * @extends ProxyOnlyResource
 */
export interface Recommendation extends ProxyOnlyResource {
  /**
   * @member {Date} [creationTime] Timestamp when this instance was created.
   */
  creationTime?: Date;
  /**
   * @member {string} [recommendationId] A GUID value that each recommendation
   * object is associated with.
   */
  recommendationId?: string;
  /**
   * @member {string} [resourceId] Full ARM resource ID string that this
   * recommendation object is associated with.
   */
  resourceId?: string;
  /**
   * @member {ResourceScopeType} [resourceScope] Name of a resource type this
   * recommendation applies, e.g. Subscription, ServerFarm, Site. Possible
   * values include: 'ServerFarm', 'Subscription', 'WebSite'
   */
  resourceScope?: ResourceScopeType;
  /**
   * @member {string} [ruleName] Unique name of the rule.
   */
  ruleName?: string;
  /**
   * @member {string} [displayName] UI friendly name of the rule (may not be
   * unique).
   */
  displayName?: string;
  /**
   * @member {string} [message] Recommendation text.
   */
  message?: string;
  /**
   * @member {NotificationLevel} [level] Level indicating how critical this
   * recommendation can impact. Possible values include: 'Critical', 'Warning',
   * 'Information', 'NonUrgentSuggestion'
   */
  level?: NotificationLevel;
  /**
   * @member {Channels} [channels] List of channels that this recommendation
   * can apply. Possible values include: 'Notification', 'Api', 'Email',
   * 'Webhook', 'All'
   */
  channels?: Channels;
  /**
   * @member {string[]} [categoryTags] The list of category tags that this
   * recommendation belongs to.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly categoryTags?: string[];
  /**
   * @member {string} [actionName] Name of action recommended by this object.
   */
  actionName?: string;
  /**
   * @member {number} [enabled] True if this recommendation is still valid
   * (i.e. "actionable"). False if it is invalid.
   */
  enabled?: number;
  /**
   * @member {string[]} [states] The list of states of this recommendation. If
   * it's null then it shoud be considered "Active".
   */
  states?: string[];
  /**
   * @member {Date} [startTime] The beginning time in UTC of a range that the
   * recommendation refers to.
   */
  startTime?: Date;
  /**
   * @member {Date} [endTime] The end time in UTC of a range that the
   * recommendation refers to.
   */
  endTime?: Date;
  /**
   * @member {Date} [nextNotificationTime] When to notify this recommendation
   * next in UTC. Null means that this will never be notified anymore.
   */
  nextNotificationTime?: Date;
  /**
   * @member {Date} [notificationExpirationTime] Date and time in UTC when this
   * notification expires.
   */
  notificationExpirationTime?: Date;
  /**
   * @member {Date} [notifiedTime] Last timestamp in UTC this instance was
   * actually notified. Null means that this recommendation hasn't been
   * notified yet.
   */
  notifiedTime?: Date;
  /**
   * @member {number} [score] A metric value measured by the rule.
   */
  score?: number;
  /**
   * @member {boolean} [isDynamic] True if this is associated with a
   * dynamically added rule
   */
  isDynamic?: boolean;
  /**
   * @member {string} [extensionName] Extension name of the portal if exists.
   */
  extensionName?: string;
  /**
   * @member {string} [bladeName] Deep link to a blade on the portal.
   */
  bladeName?: string;
  /**
   * @member {string} [forwardLink] Forward link to an external document
   * associated with the rule.
   */
  forwardLink?: string;
}

/**
 * @interface
 * An interface representing RecommendationRule.
 * Represents a recommendation rule that the recommendation engine can perform.
 *
 * @extends ProxyOnlyResource
 */
export interface RecommendationRule extends ProxyOnlyResource {
  /**
   * @member {string} [recommendationName] Unique name of the rule.
   */
  recommendationName?: string;
  /**
   * @member {string} [displayName] UI friendly name of the rule.
   */
  displayName?: string;
  /**
   * @member {string} [message] Localized name of the rule (Good for UI).
   */
  message?: string;
  /**
   * @member {string} [recommendationId] Recommendation ID of an associated
   * recommendation object tied to the rule, if exists.
   * If such an object doesn't exist, it is set to null.
   */
  recommendationId?: string;
  /**
   * @member {string} [description] Localized detailed description of the rule.
   */
  description?: string;
  /**
   * @member {string} [actionName] Name of action that is recommended by this
   * rule in string.
   */
  actionName?: string;
  /**
   * @member {NotificationLevel} [level] Level of impact indicating how
   * critical this rule is. Possible values include: 'Critical', 'Warning',
   * 'Information', 'NonUrgentSuggestion'
   */
  level?: NotificationLevel;
  /**
   * @member {Channels} [channels] List of available channels that this rule
   * applies. Possible values include: 'Notification', 'Api', 'Email',
   * 'Webhook', 'All'
   */
  channels?: Channels;
  /**
   * @member {string[]} [categoryTags] The list of category tags that this
   * recommendation rule belongs to.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly categoryTags?: string[];
  /**
   * @member {boolean} [isDynamic] True if this is associated with a
   * dynamically added rule
   */
  isDynamic?: boolean;
  /**
   * @member {string} [extensionName] Extension name of the portal if exists.
   * Applicable to dynamic rule only.
   */
  extensionName?: string;
  /**
   * @member {string} [bladeName] Deep link to a blade on the portal.
   * Applicable to dynamic rule only.
   */
  bladeName?: string;
  /**
   * @member {string} [forwardLink] Forward link to an external document
   * associated with the rule. Applicable to dynamic rule only.
   */
  forwardLink?: string;
}

/**
 * @interface
 * An interface representing BillingMeter.
 * App Service billing entity that contains information about meter which the
 * Azure billing system utilizes to charge users for services.
 *
 * @extends ProxyOnlyResource
 */
export interface BillingMeter extends ProxyOnlyResource {
  /**
   * @member {string} [meterId] Meter GUID onboarded in Commerce
   */
  meterId?: string;
  /**
   * @member {string} [billingLocation] Azure Location of billable resource
   */
  billingLocation?: string;
  /**
   * @member {string} [shortName] Short Name from App Service Azure pricing
   * Page
   */
  shortName?: string;
  /**
   * @member {string} [friendlyName] Friendly name of the meter
   */
  friendlyName?: string;
  /**
   * @member {string} [resourceType] App Service ResourceType meter used for
   */
  resourceType?: string;
  /**
   * @member {string} [osType] App Service OS type meter used for
   */
  osType?: string;
}

/**
 * @interface
 * An interface representing CsmMoveResourceEnvelope.
 * Object with a list of the resources that need to be moved and the resource
 * group they should be moved to.
 *
 */
export interface CsmMoveResourceEnvelope {
  /**
   * @member {string} [targetResourceGroup]
   */
  targetResourceGroup?: string;
  /**
   * @member {string[]} [resources]
   */
  resources?: string[];
}

/**
 * @interface
 * An interface representing GeoRegion.
 * Geographical region.
 *
 * @extends ProxyOnlyResource
 */
export interface GeoRegion extends ProxyOnlyResource {
  /**
   * @member {string} [description] Region description.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
  /**
   * @member {string} [displayName] Display name for region.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly displayName?: string;
}

/**
 * @interface
 * An interface representing HostingEnvironmentDeploymentInfo.
 * Information needed to create resources on an App Service Environment.
 *
 */
export interface HostingEnvironmentDeploymentInfo {
  /**
   * @member {string} [name] Name of the App Service Environment.
   */
  name?: string;
  /**
   * @member {string} [location] Location of the App Service Environment.
   */
  location?: string;
}

/**
 * @interface
 * An interface representing DeploymentLocations.
 * List of available locations (regions or App Service Environments) for
 * deployment of App Service resources.
 *
 */
export interface DeploymentLocations {
  /**
   * @member {GeoRegion[]} [locations] Available regions.
   */
  locations?: GeoRegion[];
  /**
   * @member {AppServiceEnvironment[]} [hostingEnvironments] Available App
   * Service Environments with full descriptions of the environments.
   */
  hostingEnvironments?: AppServiceEnvironment[];
  /**
   * @member {HostingEnvironmentDeploymentInfo[]}
   * [hostingEnvironmentDeploymentInfos] Available App Service Environments
   * with basic information.
   */
  hostingEnvironmentDeploymentInfos?: HostingEnvironmentDeploymentInfo[];
}

/**
 * @interface
 * An interface representing GlobalCsmSkuDescription.
 * A Global SKU Description.
 *
 */
export interface GlobalCsmSkuDescription {
  /**
   * @member {string} [name] Name of the resource SKU.
   */
  name?: string;
  /**
   * @member {string} [tier] Service Tier of the resource SKU.
   */
  tier?: string;
  /**
   * @member {string} [size] Size specifier of the resource SKU.
   */
  size?: string;
  /**
   * @member {string} [family] Family code of the resource SKU.
   */
  family?: string;
  /**
   * @member {SkuCapacity} [capacity] Min, max, and default scale values of the
   * SKU.
   */
  capacity?: SkuCapacity;
  /**
   * @member {string[]} [locations] Locations of the SKU.
   */
  locations?: string[];
  /**
   * @member {Capability[]} [capabilities] Capabilities of the SKU, e.g., is
   * traffic manager enabled?
   */
  capabilities?: Capability[];
}

/**
 * @interface
 * An interface representing PremierAddOnOffer.
 * Premier add-on offer.
 *
 * @extends ProxyOnlyResource
 */
export interface PremierAddOnOffer extends ProxyOnlyResource {
  /**
   * @member {string} [sku] Premier add on SKU.
   */
  sku?: string;
  /**
   * @member {string} [product] Premier add on offer Product.
   */
  product?: string;
  /**
   * @member {string} [vendor] Premier add on offer Vendor.
   */
  vendor?: string;
  /**
   * @member {boolean} [promoCodeRequired] <code>true</code> if promotion code
   * is required; otherwise, <code>false</code>.
   */
  promoCodeRequired?: boolean;
  /**
   * @member {number} [quota] Premier add on offer Quota.
   */
  quota?: number;
  /**
   * @member {AppServicePlanRestrictions} [webHostingPlanRestrictions] App
   * Service plans this offer is restricted to. Possible values include:
   * 'None', 'Free', 'Shared', 'Basic', 'Standard', 'Premium'
   */
  webHostingPlanRestrictions?: AppServicePlanRestrictions;
  /**
   * @member {string} [privacyPolicyUrl] Privacy policy URL.
   */
  privacyPolicyUrl?: string;
  /**
   * @member {string} [legalTermsUrl] Legal terms URL.
   */
  legalTermsUrl?: string;
  /**
   * @member {string} [marketplacePublisher] Marketplace publisher.
   */
  marketplacePublisher?: string;
  /**
   * @member {string} [marketplaceOffer] Marketplace offer.
   */
  marketplaceOffer?: string;
}

/**
 * @interface
 * An interface representing ResourceNameAvailability.
 * Information regarding availbility of a resource name.
 *
 */
export interface ResourceNameAvailability {
  /**
   * @member {boolean} [nameAvailable] <code>true</code> indicates name is
   * valid and available. <code>false</code> indicates the name is invalid,
   * unavailable, or both.
   */
  nameAvailable?: boolean;
  /**
   * @member {InAvailabilityReasonType} [reason] <code>Invalid</code> indicates
   * the name provided does not match Azure App Service naming requirements.
   * <code>AlreadyExists</code> indicates that the name is already in use and
   * is therefore unavailable. Possible values include: 'Invalid',
   * 'AlreadyExists'
   */
  reason?: InAvailabilityReasonType;
  /**
   * @member {string} [message] If reason == invalid, provide the user with the
   * reason why the given name is invalid, and provide the resource naming
   * requirements so that the user can select a valid name. If reason ==
   * AlreadyExists, explain that resource name is already in use, and direct
   * them to select a different name.
   */
  message?: string;
}

/**
 * @interface
 * An interface representing ResourceNameAvailabilityRequest.
 * Resource name availability request content.
 *
 */
export interface ResourceNameAvailabilityRequest {
  /**
   * @member {string} name Resource name to verify.
   */
  name: string;
  /**
   * @member {CheckNameResourceTypes} type Resource type used for verification.
   * Possible values include: 'Site', 'Slot', 'HostingEnvironment',
   * 'PublishingUser', 'Microsoft.Web/sites', 'Microsoft.Web/sites/slots',
   * 'Microsoft.Web/hostingEnvironments', 'Microsoft.Web/publishingUsers'
   */
  type: CheckNameResourceTypes;
  /**
   * @member {boolean} [isFqdn] Is fully qualified domain name.
   */
  isFqdn?: boolean;
}

/**
 * @interface
 * An interface representing SkuInfos.
 * Collection of SKU information.
 *
 */
export interface SkuInfos {
  /**
   * @member {string} [resourceType] Resource type that this SKU applies to.
   */
  resourceType?: string;
  /**
   * @member {GlobalCsmSkuDescription[]} [skus] List of SKUs the subscription
   * is able to use.
   */
  skus?: GlobalCsmSkuDescription[];
}

/**
 * @interface
 * An interface representing SourceControl.
 * The source control OAuth token.
 *
 * @extends ProxyOnlyResource
 */
export interface SourceControl extends ProxyOnlyResource {
  /**
   * @member {string} [token] OAuth access token.
   */
  token?: string;
  /**
   * @member {string} [tokenSecret] OAuth access token secret.
   */
  tokenSecret?: string;
  /**
   * @member {string} [refreshToken] OAuth refresh token.
   */
  refreshToken?: string;
  /**
   * @member {Date} [expirationTime] OAuth token expiration.
   */
  expirationTime?: Date;
}

/**
 * @interface
 * An interface representing ValidateRequest.
 * Resource validation request content.
 *
 */
export interface ValidateRequest {
  /**
   * @member {string} name Resource name to verify.
   */
  name: string;
  /**
   * @member {ValidateResourceTypes} type Resource type used for verification.
   * Possible values include: 'ServerFarm', 'Site'
   */
  type: ValidateResourceTypes;
  /**
   * @member {string} location Expected location of the resource.
   */
  location: string;
  /**
   * @member {string} [serverFarmId] ARM resource ID of an App Service plan
   * that would host the app.
   */
  serverFarmId?: string;
  /**
   * @member {string} [skuName] Name of the target SKU for the App Service
   * plan.
   */
  skuName?: string;
  /**
   * @member {boolean} [needLinuxWorkers] <code>true</code> if App Service plan
   * is for Linux workers; otherwise, <code>false</code>.
   */
  needLinuxWorkers?: boolean;
  /**
   * @member {boolean} [isSpot] <code>true</code> if App Service plan is for
   * Spot instances; otherwise, <code>false</code>.
   */
  isSpot?: boolean;
  /**
   * @member {number} [capacity] Target capacity of the App Service plan
   * (number of VM's).
   */
  capacity?: number;
  /**
   * @member {string} [hostingEnvironment] Name of App Service Environment
   * where app or App Service plan should be created.
   */
  hostingEnvironment?: string;
  /**
   * @member {boolean} [isXenon] <code>true</code> if App Service plan is
   * running as a windows container
   */
  isXenon?: boolean;
}

/**
 * @interface
 * An interface representing ValidateResponseError.
 * Error details for when validation fails.
 *
 */
export interface ValidateResponseError {
  /**
   * @member {string} [code] Validation error code.
   */
  code?: string;
  /**
   * @member {string} [message] Validation error message.
   */
  message?: string;
}

/**
 * @interface
 * An interface representing ValidateResponse.
 * Describes the result of resource validation.
 *
 */
export interface ValidateResponse {
  /**
   * @member {string} [status] Result of validation.
   */
  status?: string;
  /**
   * @member {ValidateResponseError} [error] Error details for the case when
   * validation fails.
   */
  error?: ValidateResponseError;
}

/**
 * @interface
 * An interface representing VnetParameters.
 * The required set of inputs to validate a VNET
 *
 * @extends ProxyOnlyResource
 */
export interface VnetParameters extends ProxyOnlyResource {
  /**
   * @member {string} [vnetResourceGroup] The Resource Group of the VNET to be
   * validated
   */
  vnetResourceGroup?: string;
  /**
   * @member {string} [vnetName] The name of the VNET to be validated
   */
  vnetName?: string;
  /**
   * @member {string} [vnetSubnetName] The subnet name to be validated
   */
  vnetSubnetName?: string;
}

/**
 * @interface
 * An interface representing VnetValidationTestFailure.
 * A class that describes a test that failed during NSG and UDR validation.
 *
 * @extends ProxyOnlyResource
 */
export interface VnetValidationTestFailure extends ProxyOnlyResource {
  /**
   * @member {string} [testName] The name of the test that failed.
   */
  testName?: string;
  /**
   * @member {string} [details] The details of what caused the failure, e.g.
   * the blocking rule name, etc.
   */
  details?: string;
}

/**
 * @interface
 * An interface representing VnetValidationFailureDetails.
 * A class that describes the reason for a validation failure.
 *
 * @extends ProxyOnlyResource
 */
export interface VnetValidationFailureDetails extends ProxyOnlyResource {
  /**
   * @member {boolean} [failed] A flag describing whether or not validation
   * failed.
   */
  failed?: boolean;
  /**
   * @member {VnetValidationTestFailure[]} [failedTests] A list of tests that
   * failed in the validation.
   */
  failedTests?: VnetValidationTestFailure[];
}

/**
 * @interface
 * An interface representing FileSystemApplicationLogsConfig.
 * Application logs to file system configuration.
 *
 */
export interface FileSystemApplicationLogsConfig {
  /**
   * @member {LogLevel} [level] Log level. Possible values include: 'Off',
   * 'Verbose', 'Information', 'Warning', 'Error'. Default value: 'Off' .
   */
  level?: LogLevel;
}

/**
 * @interface
 * An interface representing AzureTableStorageApplicationLogsConfig.
 * Application logs to Azure table storage configuration.
 *
 */
export interface AzureTableStorageApplicationLogsConfig {
  /**
   * @member {LogLevel} [level] Log level. Possible values include: 'Off',
   * 'Verbose', 'Information', 'Warning', 'Error'
   */
  level?: LogLevel;
  /**
   * @member {string} sasUrl SAS URL to an Azure table with add/query/delete
   * permissions.
   */
  sasUrl: string;
}

/**
 * @interface
 * An interface representing AzureBlobStorageApplicationLogsConfig.
 * Application logs azure blob storage configuration.
 *
 */
export interface AzureBlobStorageApplicationLogsConfig {
  /**
   * @member {LogLevel} [level] Log level. Possible values include: 'Off',
   * 'Verbose', 'Information', 'Warning', 'Error'
   */
  level?: LogLevel;
  /**
   * @member {string} [sasUrl] SAS url to a azure blob container with
   * read/write/list/delete permissions.
   */
  sasUrl?: string;
  /**
   * @member {number} [retentionInDays] Retention in days.
   * Remove blobs older than X days.
   * 0 or lower means no retention.
   */
  retentionInDays?: number;
}

/**
 * @interface
 * An interface representing ApplicationLogsConfig.
 * Application logs configuration.
 *
 */
export interface ApplicationLogsConfig {
  /**
   * @member {FileSystemApplicationLogsConfig} [fileSystem] Application logs to
   * file system configuration.
   */
  fileSystem?: FileSystemApplicationLogsConfig;
  /**
   * @member {AzureTableStorageApplicationLogsConfig} [azureTableStorage]
   * Application logs to azure table storage configuration.
   */
  azureTableStorage?: AzureTableStorageApplicationLogsConfig;
  /**
   * @member {AzureBlobStorageApplicationLogsConfig} [azureBlobStorage]
   * Application logs to blob storage configuration.
   */
  azureBlobStorage?: AzureBlobStorageApplicationLogsConfig;
}

/**
 * @interface
 * An interface representing AzureBlobStorageHttpLogsConfig.
 * Http logs to azure blob storage configuration.
 *
 */
export interface AzureBlobStorageHttpLogsConfig {
  /**
   * @member {string} [sasUrl] SAS url to a azure blob container with
   * read/write/list/delete permissions.
   */
  sasUrl?: string;
  /**
   * @member {number} [retentionInDays] Retention in days.
   * Remove blobs older than X days.
   * 0 or lower means no retention.
   */
  retentionInDays?: number;
  /**
   * @member {boolean} [enabled] True if configuration is enabled, false if it
   * is disabled and null if configuration is not set.
   */
  enabled?: boolean;
}

/**
 * @interface
 * An interface representing AzureStoragePropertyDictionaryResource.
 * AzureStorageInfo dictionary resource.
 *
 * @extends ProxyOnlyResource
 */
export interface AzureStoragePropertyDictionaryResource extends ProxyOnlyResource {
  /**
   * @member {{ [propertyName: string]: AzureStorageInfoValue }} [properties]
   * Azure storage accounts.
   */
  properties?: { [propertyName: string]: AzureStorageInfoValue };
}

/**
 * @interface
 * An interface representing DatabaseBackupSetting.
 * Database backup settings.
 *
 */
export interface DatabaseBackupSetting {
  /**
   * @member {DatabaseType} databaseType Database type (e.g. SqlAzure / MySql).
   * Possible values include: 'SqlAzure', 'MySql', 'LocalMySql', 'PostgreSql'
   */
  databaseType: DatabaseType;
  /**
   * @member {string} [name]
   */
  name?: string;
  /**
   * @member {string} [connectionStringName] Contains a connection string name
   * that is linked to the SiteConfig.ConnectionStrings.
   * This is used during restore with overwrite connection strings options.
   */
  connectionStringName?: string;
  /**
   * @member {string} [connectionString] Contains a connection string to a
   * database which is being backed up or restored. If the restore should
   * happen to a new database, the database name inside is the new one.
   */
  connectionString?: string;
}

/**
 * @interface
 * An interface representing BackupItem.
 * Backup description.
 *
 * @extends ProxyOnlyResource
 */
export interface BackupItem extends ProxyOnlyResource {
  /**
   * @member {number} [backupId] Id of the backup.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly backupId?: number;
  /**
   * @member {string} [storageAccountUrl] SAS URL for the storage account
   * container which contains this backup.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly storageAccountUrl?: string;
  /**
   * @member {string} [blobName] Name of the blob which contains data for this
   * backup.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly blobName?: string;
  /**
   * @member {string} [backupItemName] Name of this backup.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly backupItemName?: string;
  /**
   * @member {BackupItemStatus} [status] Backup status. Possible values
   * include: 'InProgress', 'Failed', 'Succeeded', 'TimedOut', 'Created',
   * 'Skipped', 'PartiallySucceeded', 'DeleteInProgress', 'DeleteFailed',
   * 'Deleted'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly status?: BackupItemStatus;
  /**
   * @member {number} [sizeInBytes] Size of the backup in bytes.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly sizeInBytes?: number;
  /**
   * @member {Date} [created] Timestamp of the backup creation.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly created?: Date;
  /**
   * @member {string} [log] Details regarding this backup. Might contain an
   * error message.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly log?: string;
  /**
   * @member {DatabaseBackupSetting[]} [databases] List of databases included
   * in the backup.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly databases?: DatabaseBackupSetting[];
  /**
   * @member {boolean} [scheduled] True if this backup has been created due to
   * a schedule being triggered.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly scheduled?: boolean;
  /**
   * @member {Date} [lastRestoreTimeStamp] Timestamp of a last restore
   * operation which used this backup.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly lastRestoreTimeStamp?: Date;
  /**
   * @member {Date} [finishedTimeStamp] Timestamp when this backup finished.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly finishedTimeStamp?: Date;
  /**
   * @member {string} [correlationId] Unique correlation identifier. Please use
   * this along with the timestamp while communicating with Azure support.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly correlationId?: string;
  /**
   * @member {number} [websiteSizeInBytes] Size of the original web app which
   * has been backed up.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly websiteSizeInBytes?: number;
}

/**
 * @interface
 * An interface representing BackupSchedule.
 * Description of a backup schedule. Describes how often should be the backup
 * performed and what should be the retention policy.
 *
 */
export interface BackupSchedule {
  /**
   * @member {number} frequencyInterval How often the backup should be executed
   * (e.g. for weekly backup, this should be set to 7 and FrequencyUnit should
   * be set to Day). Default value: 7 .
   */
  frequencyInterval: number;
  /**
   * @member {FrequencyUnit} frequencyUnit The unit of time for how often the
   * backup should be executed (e.g. for weekly backup, this should be set to
   * Day and FrequencyInterval should be set to 7). Possible values include:
   * 'Day', 'Hour'. Default value: 'Day' .
   */
  frequencyUnit: FrequencyUnit;
  /**
   * @member {boolean} keepAtLeastOneBackup True if the retention policy should
   * always keep at least one backup in the storage account, regardless how old
   * it is; false otherwise. Default value: true .
   */
  keepAtLeastOneBackup: boolean;
  /**
   * @member {number} retentionPeriodInDays After how many days backups should
   * be deleted. Default value: 30 .
   */
  retentionPeriodInDays: number;
  /**
   * @member {Date} [startTime] When the schedule should start working.
   */
  startTime?: Date;
  /**
   * @member {Date} [lastExecutionTime] Last time when this schedule was
   * triggered.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly lastExecutionTime?: Date;
}

/**
 * @interface
 * An interface representing BackupRequest.
 * Description of a backup which will be performed.
 *
 * @extends ProxyOnlyResource
 */
export interface BackupRequest extends ProxyOnlyResource {
  /**
   * @member {string} [backupName] Name of the backup.
   */
  backupName?: string;
  /**
   * @member {boolean} [enabled] True if the backup schedule is enabled (must
   * be included in that case), false if the backup schedule should be
   * disabled.
   */
  enabled?: boolean;
  /**
   * @member {string} storageAccountUrl SAS URL to the container.
   */
  storageAccountUrl: string;
  /**
   * @member {BackupSchedule} [backupSchedule] Schedule for the backup if it is
   * executed periodically.
   */
  backupSchedule?: BackupSchedule;
  /**
   * @member {DatabaseBackupSetting[]} [databases] Databases included in the
   * backup.
   */
  databases?: DatabaseBackupSetting[];
}

/**
 * @interface
 * An interface representing ConnStringValueTypePair.
 * Database connection string value to type pair.
 *
 */
export interface ConnStringValueTypePair {
  /**
   * @member {string} value Value of pair.
   */
  value: string;
  /**
   * @member {ConnectionStringType} type Type of database. Possible values
   * include: 'MySql', 'SQLServer', 'SQLAzure', 'Custom', 'NotificationHub',
   * 'ServiceBus', 'EventHub', 'ApiHub', 'DocDb', 'RedisCache', 'PostgreSQL'
   */
  type: ConnectionStringType;
}

/**
 * @interface
 * An interface representing ConnectionStringDictionary.
 * String dictionary resource.
 *
 * @extends ProxyOnlyResource
 */
export interface ConnectionStringDictionary extends ProxyOnlyResource {
  /**
   * @member {{ [propertyName: string]: ConnStringValueTypePair }} [properties]
   * Connection strings.
   */
  properties?: { [propertyName: string]: ConnStringValueTypePair };
}

/**
 * @interface
 * An interface representing ContinuousWebJob.
 * Continuous Web Job Information.
 *
 * @extends ProxyOnlyResource
 */
export interface ContinuousWebJob extends ProxyOnlyResource {
  /**
   * @member {ContinuousWebJobStatus} [status] Job status. Possible values
   * include: 'Initializing', 'Starting', 'Running', 'PendingRestart',
   * 'Stopped'
   */
  status?: ContinuousWebJobStatus;
  /**
   * @member {string} [detailedStatus] Detailed status.
   */
  detailedStatus?: string;
  /**
   * @member {string} [logUrl] Log URL.
   */
  logUrl?: string;
  /**
   * @member {string} [runCommand] Run command.
   */
  runCommand?: string;
  /**
   * @member {string} [url] Job URL.
   */
  url?: string;
  /**
   * @member {string} [extraInfoUrl] Extra Info URL.
   */
  extraInfoUrl?: string;
  /**
   * @member {WebJobType} [webJobType] Job type. Possible values include:
   * 'Continuous', 'Triggered'
   */
  webJobType?: WebJobType;
  /**
   * @member {string} [error] Error information.
   */
  error?: string;
  /**
   * @member {boolean} [usingSdk] Using SDK?
   */
  usingSdk?: boolean;
  /**
   * @member {{ [propertyName: string]: any }} [settings] Job settings.
   */
  settings?: { [propertyName: string]: any };
}

/**
 * @interface
 * An interface representing CsmPublishingProfileOptions.
 * Publishing options for requested profile.
 *
 */
export interface CsmPublishingProfileOptions {
  /**
   * @member {PublishingProfileFormat} [format] Name of the format. Valid
   * values are:
   * FileZilla3
   * WebDeploy -- default
   * Ftp. Possible values include: 'FileZilla3', 'WebDeploy', 'Ftp'
   */
  format?: PublishingProfileFormat;
  /**
   * @member {boolean} [includeDisasterRecoveryEndpoints] Include the
   * DisasterRecover endpoint if true
   */
  includeDisasterRecoveryEndpoints?: boolean;
}

/**
 * @interface
 * An interface representing CsmSlotEntity.
 * Deployment slot parameters.
 *
 */
export interface CsmSlotEntity {
  /**
   * @member {string} targetSlot Destination deployment slot during swap
   * operation.
   */
  targetSlot: string;
  /**
   * @member {boolean} preserveVnet <code>true</code> to preserve Virtual
   * Network to the slot during swap; otherwise, <code>false</code>.
   */
  preserveVnet: boolean;
}

/**
 * @interface
 * An interface representing CustomHostnameAnalysisResult.
 * Custom domain analysis.
 *
 * @extends ProxyOnlyResource
 */
export interface CustomHostnameAnalysisResult extends ProxyOnlyResource {
  /**
   * @member {boolean} [isHostnameAlreadyVerified] <code>true</code> if
   * hostname is already verified; otherwise, <code>false</code>.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly isHostnameAlreadyVerified?: boolean;
  /**
   * @member {DnsVerificationTestResult} [customDomainVerificationTest] DNS
   * verification test result. Possible values include: 'Passed', 'Failed',
   * 'Skipped'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly customDomainVerificationTest?: DnsVerificationTestResult;
  /**
   * @member {ErrorEntity} [customDomainVerificationFailureInfo] Raw failure
   * information if DNS verification fails.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly customDomainVerificationFailureInfo?: ErrorEntity;
  /**
   * @member {boolean} [hasConflictOnScaleUnit] <code>true</code> if there is a
   * conflict on a scale unit; otherwise, <code>false</code>.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly hasConflictOnScaleUnit?: boolean;
  /**
   * @member {boolean} [hasConflictAcrossSubscription] <code>true</code> if
   * htere is a conflict across subscriptions; otherwise, <code>false</code>.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly hasConflictAcrossSubscription?: boolean;
  /**
   * @member {string} [conflictingAppResourceId] Name of the conflicting app on
   * scale unit if it's within the same subscription.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly conflictingAppResourceId?: string;
  /**
   * @member {string[]} [cNameRecords] CName records controller can see for
   * this hostname.
   */
  cNameRecords?: string[];
  /**
   * @member {string[]} [txtRecords] TXT records controller can see for this
   * hostname.
   */
  txtRecords?: string[];
  /**
   * @member {string[]} [aRecords] A records controller can see for this
   * hostname.
   */
  aRecords?: string[];
  /**
   * @member {string[]} [alternateCNameRecords] Alternate CName records
   * controller can see for this hostname.
   */
  alternateCNameRecords?: string[];
  /**
   * @member {string[]} [alternateTxtRecords] Alternate TXT records controller
   * can see for this hostname.
   */
  alternateTxtRecords?: string[];
}

/**
 * @interface
 * An interface representing DeletedAppRestoreRequest.
 * Details about restoring a deleted app.
 *
 * @extends ProxyOnlyResource
 */
export interface DeletedAppRestoreRequest extends ProxyOnlyResource {
  /**
   * @member {string} [deletedSiteId] ARM resource ID of the deleted app.
   * Example:
   * /subscriptions/{subId}/providers/Microsoft.Web/deletedSites/{deletedSiteId}
   */
  deletedSiteId?: string;
  /**
   * @member {boolean} [recoverConfiguration] If true, deleted site
   * configuration, in addition to content, will be restored.
   */
  recoverConfiguration?: boolean;
  /**
   * @member {string} [snapshotTime] Point in time to restore the deleted app
   * from, formatted as a DateTime string.
   * If unspecified, default value is the time that the app was deleted.
   */
  snapshotTime?: string;
}

/**
 * @interface
 * An interface representing Deployment.
 * User crendentials used for publishing activity.
 *
 * @extends ProxyOnlyResource
 */
export interface Deployment extends ProxyOnlyResource {
  /**
   * @member {number} [status] Deployment status.
   */
  status?: number;
  /**
   * @member {string} [message] Details about deployment status.
   */
  message?: string;
  /**
   * @member {string} [author] Who authored the deployment.
   */
  author?: string;
  /**
   * @member {string} [deployer] Who performed the deployment.
   */
  deployer?: string;
  /**
   * @member {string} [authorEmail] Author email.
   */
  authorEmail?: string;
  /**
   * @member {Date} [startTime] Start time.
   */
  startTime?: Date;
  /**
   * @member {Date} [endTime] End time.
   */
  endTime?: Date;
  /**
   * @member {boolean} [active] True if deployment is currently active, false
   * if completed and null if not started.
   */
  active?: boolean;
  /**
   * @member {string} [details] Details on deployment.
   */
  details?: string;
}

/**
 * @interface
 * An interface representing EnabledConfig.
 * Enabled configuration.
 *
 */
export interface EnabledConfig {
  /**
   * @member {boolean} [enabled] True if configuration is enabled, false if it
   * is disabled and null if configuration is not set.
   */
  enabled?: boolean;
}

/**
 * @interface
 * An interface representing FileSystemHttpLogsConfig.
 * Http logs to file system configuration.
 *
 */
export interface FileSystemHttpLogsConfig {
  /**
   * @member {number} [retentionInMb] Maximum size in megabytes that http log
   * files can use.
   * When reached old log files will be removed to make space for new ones.
   * Value can range between 25 and 100.
   */
  retentionInMb?: number;
  /**
   * @member {number} [retentionInDays] Retention in days.
   * Remove files older than X days.
   * 0 or lower means no retention.
   */
  retentionInDays?: number;
  /**
   * @member {boolean} [enabled] True if configuration is enabled, false if it
   * is disabled and null if configuration is not set.
   */
  enabled?: boolean;
}

/**
 * @interface
 * An interface representing FunctionEnvelope.
 * Web Job Information.
 *
 * @extends ProxyOnlyResource
 */
export interface FunctionEnvelope extends ProxyOnlyResource {
  /**
   * @member {string} [functionAppId] Function App ID.
   */
  functionAppId?: string;
  /**
   * @member {string} [scriptRootPathHref] Script root path URI.
   */
  scriptRootPathHref?: string;
  /**
   * @member {string} [scriptHref] Script URI.
   */
  scriptHref?: string;
  /**
   * @member {string} [configHref] Config URI.
   */
  configHref?: string;
  /**
   * @member {string} [secretsFileHref] Secrets file URI.
   */
  secretsFileHref?: string;
  /**
   * @member {string} [href] Function URI.
   */
  href?: string;
  /**
   * @member {any} [config] Config information.
   */
  config?: any;
  /**
   * @member {{ [propertyName: string]: string }} [files] File list.
   */
  files?: { [propertyName: string]: string };
  /**
   * @member {string} [testData] Test data used when testing via the Azure
   * Portal.
   */
  testData?: string;
}

/**
 * @interface
 * An interface representing FunctionSecrets.
 * Function secrets.
 *
 * @extends ProxyOnlyResource
 */
export interface FunctionSecrets extends ProxyOnlyResource {
  /**
   * @member {string} [key] Secret key.
   */
  key?: string;
  /**
   * @member {string} [triggerUrl] Trigger URL.
   */
  triggerUrl?: string;
}

/**
 * @interface
 * An interface representing HostNameBinding.
 * A hostname binding object.
 *
 * @extends ProxyOnlyResource
 */
export interface HostNameBinding extends ProxyOnlyResource {
  /**
   * @member {string} [siteName] App Service app name.
   */
  siteName?: string;
  /**
   * @member {string} [domainId] Fully qualified ARM domain resource URI.
   */
  domainId?: string;
  /**
   * @member {string} [azureResourceName] Azure resource name.
   */
  azureResourceName?: string;
  /**
   * @member {AzureResourceType} [azureResourceType] Azure resource type.
   * Possible values include: 'Website', 'TrafficManager'
   */
  azureResourceType?: AzureResourceType;
  /**
   * @member {CustomHostNameDnsRecordType} [customHostNameDnsRecordType] Custom
   * DNS record type. Possible values include: 'CName', 'A'
   */
  customHostNameDnsRecordType?: CustomHostNameDnsRecordType;
  /**
   * @member {HostNameType} [hostNameType] Hostname type. Possible values
   * include: 'Verified', 'Managed'
   */
  hostNameType?: HostNameType;
  /**
   * @member {SslState} [sslState] SSL type. Possible values include:
   * 'Disabled', 'SniEnabled', 'IpBasedEnabled'
   */
  sslState?: SslState;
  /**
   * @member {string} [thumbprint] SSL certificate thumbprint
   */
  thumbprint?: string;
  /**
   * @member {string} [virtualIP] Virtual IP address assigned to the hostname
   * if IP based SSL is enabled.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly virtualIP?: string;
}

/**
 * @interface
 * An interface representing HttpLogsConfig.
 * Http logs configuration.
 *
 */
export interface HttpLogsConfig {
  /**
   * @member {FileSystemHttpLogsConfig} [fileSystem] Http logs to file system
   * configuration.
   */
  fileSystem?: FileSystemHttpLogsConfig;
  /**
   * @member {AzureBlobStorageHttpLogsConfig} [azureBlobStorage] Http logs to
   * azure blob storage configuration.
   */
  azureBlobStorage?: AzureBlobStorageHttpLogsConfig;
}

/**
 * @interface
 * An interface representing MSDeploy.
 * MSDeploy ARM PUT information
 *
 * @extends ProxyOnlyResource
 */
export interface MSDeploy extends ProxyOnlyResource {
  /**
   * @member {string} [packageUri] Package URI
   */
  packageUri?: string;
  /**
   * @member {string} [connectionString] SQL Connection String
   */
  connectionString?: string;
  /**
   * @member {string} [dbType] Database Type
   */
  dbType?: string;
  /**
   * @member {string} [setParametersXmlFileUri] URI of MSDeploy Parameters
   * file. Must not be set if SetParameters is used.
   */
  setParametersXmlFileUri?: string;
  /**
   * @member {{ [propertyName: string]: string }} [setParameters] MSDeploy
   * Parameters. Must not be set if SetParametersXmlFileUri is used.
   */
  setParameters?: { [propertyName: string]: string };
  /**
   * @member {boolean} [skipAppData] Controls whether the MSDeploy operation
   * skips the App_Data directory.
   * If set to <code>true</code>, the existing App_Data directory on the
   * destination
   * will not be deleted, and any App_Data directory in the source will be
   * ignored.
   * Setting is <code>false</code> by default.
   */
  skipAppData?: boolean;
  /**
   * @member {boolean} [appOffline] Sets the AppOffline rule while the MSDeploy
   * operation executes.
   * Setting is <code>false</code> by default.
   */
  appOffline?: boolean;
}

/**
 * @interface
 * An interface representing MSDeployLogEntry.
 * MSDeploy log entry
 *
 */
export interface MSDeployLogEntry {
  /**
   * @member {Date} [time] Timestamp of log entry
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly time?: Date;
  /**
   * @member {MSDeployLogEntryType} [type] Log entry type. Possible values
   * include: 'Message', 'Warning', 'Error'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: MSDeployLogEntryType;
  /**
   * @member {string} [message] Log entry message
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly message?: string;
}

/**
 * @interface
 * An interface representing MSDeployLog.
 * MSDeploy log
 *
 * @extends ProxyOnlyResource
 */
export interface MSDeployLog extends ProxyOnlyResource {
  /**
   * @member {MSDeployLogEntry[]} [entries] List of log entry messages
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly entries?: MSDeployLogEntry[];
}

/**
 * @interface
 * An interface representing MSDeployStatus.
 * MSDeploy ARM response
 *
 * @extends ProxyOnlyResource
 */
export interface MSDeployStatus extends ProxyOnlyResource {
  /**
   * @member {string} [deployer] Username of deployer
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly deployer?: string;
  /**
   * @member {MSDeployProvisioningState} [provisioningState] Provisioning
   * state. Possible values include: 'accepted', 'running', 'succeeded',
   * 'failed', 'canceled'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provisioningState?: MSDeployProvisioningState;
  /**
   * @member {Date} [startTime] Start time of deploy operation
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly startTime?: Date;
  /**
   * @member {Date} [endTime] End time of deploy operation
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly endTime?: Date;
  /**
   * @member {boolean} [complete] Whether the deployment operation has
   * completed
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly complete?: boolean;
}

/**
 * @interface
 * An interface representing MigrateMySqlRequest.
 * MySQL migration request.
 *
 * @extends ProxyOnlyResource
 */
export interface MigrateMySqlRequest extends ProxyOnlyResource {
  /**
   * @member {string} connectionString Connection string to the remote MySQL
   * database.
   */
  connectionString: string;
  /**
   * @member {MySqlMigrationType} migrationType The type of migration operation
   * to be done. Possible values include: 'LocalToRemote', 'RemoteToLocal'
   */
  migrationType: MySqlMigrationType;
}

/**
 * @interface
 * An interface representing MigrateMySqlStatus.
 * MySQL migration status.
 *
 * @extends ProxyOnlyResource
 */
export interface MigrateMySqlStatus extends ProxyOnlyResource {
  /**
   * @member {OperationStatus} [migrationOperationStatus] Status of the
   * migration task. Possible values include: 'InProgress', 'Failed',
   * 'Succeeded', 'TimedOut', 'Created'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly migrationOperationStatus?: OperationStatus;
  /**
   * @member {string} [operationId] Operation ID for the migration task.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly operationId?: string;
  /**
   * @member {boolean} [localMySqlEnabled] True if the web app has in app MySql
   * enabled
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly localMySqlEnabled?: boolean;
}

/**
 * @interface
 * An interface representing RelayServiceConnectionEntity.
 * Hybrid Connection for an App Service app.
 *
 * @extends ProxyOnlyResource
 */
export interface RelayServiceConnectionEntity extends ProxyOnlyResource {
  /**
   * @member {string} [entityName]
   */
  entityName?: string;
  /**
   * @member {string} [entityConnectionString]
   */
  entityConnectionString?: string;
  /**
   * @member {string} [resourceType]
   */
  resourceType?: string;
  /**
   * @member {string} [resourceConnectionString]
   */
  resourceConnectionString?: string;
  /**
   * @member {string} [hostname]
   */
  hostname?: string;
  /**
   * @member {number} [port]
   */
  port?: number;
  /**
   * @member {string} [biztalkUri]
   */
  biztalkUri?: string;
}

/**
 * @interface
 * An interface representing NetworkFeatures.
 * Full view of network features for an app (presently VNET integration and
 * Hybrid Connections).
 *
 * @extends ProxyOnlyResource
 */
export interface NetworkFeatures extends ProxyOnlyResource {
  /**
   * @member {string} [virtualNetworkName] The Virtual Network name.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly virtualNetworkName?: string;
  /**
   * @member {VnetInfo} [virtualNetworkConnection] The Virtual Network summary
   * view.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly virtualNetworkConnection?: VnetInfo;
  /**
   * @member {RelayServiceConnectionEntity[]} [hybridConnections] The Hybrid
   * Connections summary view.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly hybridConnections?: RelayServiceConnectionEntity[];
  /**
   * @member {HybridConnection[]} [hybridConnectionsV2] The Hybrid Connection
   * V2 (Service Bus) view.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly hybridConnectionsV2?: HybridConnection[];
}

/**
 * @interface
 * An interface representing NetworkTrace.
 * Network trace
 *
 */
export interface NetworkTrace {
  /**
   * @member {string} [path] Local file path for the captured network trace
   * file.
   */
  path?: string;
  /**
   * @member {string} [status] Current status of the network trace operation,
   * same as Operation.Status (InProgress/Succeeded/Failed).
   */
  status?: string;
  /**
   * @member {string} [message] Detailed message of a network trace operation,
   * e.g. error message in case of failure.
   */
  message?: string;
}

/**
 * @interface
 * An interface representing PerfMonSample.
 * Performance monitor sample in a set.
 *
 */
export interface PerfMonSample {
  /**
   * @member {Date} [time] Point in time for which counter was measured.
   */
  time?: Date;
  /**
   * @member {string} [instanceName] Name of the server on which the
   * measurement is made.
   */
  instanceName?: string;
  /**
   * @member {number} [value] Value of counter at a certain time.
   */
  value?: number;
}

/**
 * @interface
 * An interface representing PerfMonSet.
 * Metric information.
 *
 */
export interface PerfMonSet {
  /**
   * @member {string} [name] Unique key name of the counter.
   */
  name?: string;
  /**
   * @member {Date} [startTime] Start time of the period.
   */
  startTime?: Date;
  /**
   * @member {Date} [endTime] End time of the period.
   */
  endTime?: Date;
  /**
   * @member {string} [timeGrain] Presented time grain.
   */
  timeGrain?: string;
  /**
   * @member {PerfMonSample[]} [values] Collection of workers that are active
   * during this time.
   */
  values?: PerfMonSample[];
}

/**
 * @interface
 * An interface representing PerfMonResponse.
 * Performance monitor API response.
 *
 */
export interface PerfMonResponse {
  /**
   * @member {string} [code] The response code.
   */
  code?: string;
  /**
   * @member {string} [message] The message.
   */
  message?: string;
  /**
   * @member {PerfMonSet} [data] The performance monitor counters.
   */
  data?: PerfMonSet;
}

/**
 * @interface
 * An interface representing PremierAddOn.
 * Premier add-on.
 *
 * @extends Resource
 */
export interface PremierAddOn extends Resource {
  /**
   * @member {string} [sku] Premier add on SKU.
   */
  sku?: string;
  /**
   * @member {string} [product] Premier add on Product.
   */
  product?: string;
  /**
   * @member {string} [vendor] Premier add on Vendor.
   */
  vendor?: string;
  /**
   * @member {string} [marketplacePublisher] Premier add on Marketplace
   * publisher.
   */
  marketplacePublisher?: string;
  /**
   * @member {string} [marketplaceOffer] Premier add on Marketplace offer.
   */
  marketplaceOffer?: string;
}

/**
 * @interface
 * An interface representing PremierAddOnPatchResource.
 * ARM resource for a PremierAddOn.
 *
 * @extends ProxyOnlyResource
 */
export interface PremierAddOnPatchResource extends ProxyOnlyResource {
  /**
   * @member {string} [sku] Premier add on SKU.
   */
  sku?: string;
  /**
   * @member {string} [product] Premier add on Product.
   */
  product?: string;
  /**
   * @member {string} [vendor] Premier add on Vendor.
   */
  vendor?: string;
  /**
   * @member {string} [marketplacePublisher] Premier add on Marketplace
   * publisher.
   */
  marketplacePublisher?: string;
  /**
   * @member {string} [marketplaceOffer] Premier add on Marketplace offer.
   */
  marketplaceOffer?: string;
}

/**
 * @interface
 * An interface representing PrivateAccessSubnet.
 * Description of a Virtual Network subnet that is useable for private site
 * access.
 *
 */
export interface PrivateAccessSubnet {
  /**
   * @member {string} [name] The name of the subnet.
   */
  name?: string;
  /**
   * @member {number} [key] The key (ID) of the subnet.
   */
  key?: number;
}

/**
 * @interface
 * An interface representing PrivateAccessVirtualNetwork.
 * Description of a Virtual Network that is useable for private site access.
 *
 */
export interface PrivateAccessVirtualNetwork {
  /**
   * @member {string} [name] The name of the Virtual Network.
   */
  name?: string;
  /**
   * @member {number} [key] The key (ID) of the Virtual Network.
   */
  key?: number;
  /**
   * @member {string} [resourceId] The ARM uri of the Virtual Network
   */
  resourceId?: string;
  /**
   * @member {PrivateAccessSubnet[]} [subnets] A List of subnets that access is
   * allowed to on this Virtual Network. An empty array (but not null) is
   * interpreted to mean that all subnets are allowed within this Virtual
   * Network.
   */
  subnets?: PrivateAccessSubnet[];
}

/**
 * @interface
 * An interface representing PrivateAccess.
 * Description of the parameters of Private Access for a Web Site.
 *
 * @extends ProxyOnlyResource
 */
export interface PrivateAccess extends ProxyOnlyResource {
  /**
   * @member {boolean} [enabled] Whether private access is enabled or not.
   */
  enabled?: boolean;
  /**
   * @member {PrivateAccessVirtualNetwork[]} [virtualNetworks] The Virtual
   * Networks (and subnets) allowed to access the site privately.
   */
  virtualNetworks?: PrivateAccessVirtualNetwork[];
}

/**
 * @interface
 * An interface representing ProcessThreadInfo.
 * Process Thread Information.
 *
 * @extends ProxyOnlyResource
 */
export interface ProcessThreadInfo extends ProxyOnlyResource {
  /**
   * @member {number} [identifier] Site extension ID.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly identifier?: number;
  /**
   * @member {string} [href] HRef URI.
   */
  href?: string;
  /**
   * @member {string} [process] Process URI.
   */
  process?: string;
  /**
   * @member {string} [startAddress] Start address.
   */
  startAddress?: string;
  /**
   * @member {number} [currentPriority] Current thread priority.
   */
  currentPriority?: number;
  /**
   * @member {string} [priorityLevel] Thread priority level.
   */
  priorityLevel?: string;
  /**
   * @member {number} [basePriority] Base priority.
   */
  basePriority?: number;
  /**
   * @member {Date} [startTime] Start time.
   */
  startTime?: Date;
  /**
   * @member {string} [totalProcessorTime] Total processor time.
   */
  totalProcessorTime?: string;
  /**
   * @member {string} [userProcessorTime] User processor time.
   */
  userProcessorTime?: string;
  /**
   * @member {string} [priviledgedProcessorTime] Priviledged processor time.
   */
  priviledgedProcessorTime?: string;
  /**
   * @member {string} [state] Thread state.
   */
  state?: string;
  /**
   * @member {string} [waitReason] Wait reason.
   */
  waitReason?: string;
}

/**
 * @interface
 * An interface representing ProcessModuleInfo.
 * Process Module Information.
 *
 * @extends ProxyOnlyResource
 */
export interface ProcessModuleInfo extends ProxyOnlyResource {
  /**
   * @member {string} [baseAddress] Base address. Used as module identifier in
   * ARM resource URI.
   */
  baseAddress?: string;
  /**
   * @member {string} [fileName] File name.
   */
  fileName?: string;
  /**
   * @member {string} [href] HRef URI.
   */
  href?: string;
  /**
   * @member {string} [filePath] File path.
   */
  filePath?: string;
  /**
   * @member {number} [moduleMemorySize] Module memory size.
   */
  moduleMemorySize?: number;
  /**
   * @member {string} [fileVersion] File version.
   */
  fileVersion?: string;
  /**
   * @member {string} [fileDescription] File description.
   */
  fileDescription?: string;
  /**
   * @member {string} [product] Product name.
   */
  product?: string;
  /**
   * @member {string} [productVersion] Product version.
   */
  productVersion?: string;
  /**
   * @member {boolean} [isDebug] Is debug?
   */
  isDebug?: boolean;
  /**
   * @member {string} [language] Module language (locale).
   */
  language?: string;
}

/**
 * @interface
 * An interface representing ProcessInfo.
 * Process Information.
 *
 * @extends ProxyOnlyResource
 */
export interface ProcessInfo extends ProxyOnlyResource {
  /**
   * @member {number} [identifier] ARM Identifier for deployment.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly identifier?: number;
  /**
   * @member {string} [deploymentName] Deployment name.
   */
  deploymentName?: string;
  /**
   * @member {string} [href] HRef URI.
   */
  href?: string;
  /**
   * @member {string} [minidump] Minidump URI.
   */
  minidump?: string;
  /**
   * @member {boolean} [isProfileRunning] Is profile running?
   */
  isProfileRunning?: boolean;
  /**
   * @member {boolean} [isIisProfileRunning] Is the IIS Profile running?
   */
  isIisProfileRunning?: boolean;
  /**
   * @member {number} [iisProfileTimeoutInSeconds] IIS Profile timeout
   * (seconds).
   */
  iisProfileTimeoutInSeconds?: number;
  /**
   * @member {string} [parent] Parent process.
   */
  parent?: string;
  /**
   * @member {string[]} [children] Child process list.
   */
  children?: string[];
  /**
   * @member {ProcessThreadInfo[]} [threads] Thread list.
   */
  threads?: ProcessThreadInfo[];
  /**
   * @member {string[]} [openFileHandles] List of open files.
   */
  openFileHandles?: string[];
  /**
   * @member {ProcessModuleInfo[]} [modules] List of modules.
   */
  modules?: ProcessModuleInfo[];
  /**
   * @member {string} [fileName] File name of this process.
   */
  fileName?: string;
  /**
   * @member {string} [commandLine] Command line.
   */
  commandLine?: string;
  /**
   * @member {string} [userName] User name.
   */
  userName?: string;
  /**
   * @member {number} [handleCount] Handle count.
   */
  handleCount?: number;
  /**
   * @member {number} [moduleCount] Module count.
   */
  moduleCount?: number;
  /**
   * @member {number} [threadCount] Thread count.
   */
  threadCount?: number;
  /**
   * @member {Date} [startTime] Start time.
   */
  startTime?: Date;
  /**
   * @member {string} [totalCpuTime] Total CPU time.
   */
  totalCpuTime?: string;
  /**
   * @member {string} [userCpuTime] User CPU time.
   */
  userCpuTime?: string;
  /**
   * @member {string} [privilegedCpuTime] Privileged CPU time.
   */
  privilegedCpuTime?: string;
  /**
   * @member {number} [workingSet] Working set.
   */
  workingSet?: number;
  /**
   * @member {number} [peakWorkingSet] Peak working set.
   */
  peakWorkingSet?: number;
  /**
   * @member {number} [privateMemory] Private memory size.
   */
  privateMemory?: number;
  /**
   * @member {number} [virtualMemory] Virtual memory size.
   */
  virtualMemory?: number;
  /**
   * @member {number} [peakVirtualMemory] Peak virtual memory usage.
   */
  peakVirtualMemory?: number;
  /**
   * @member {number} [pagedSystemMemory] Paged system memory.
   */
  pagedSystemMemory?: number;
  /**
   * @member {number} [nonPagedSystemMemory] Non-paged system memory.
   */
  nonPagedSystemMemory?: number;
  /**
   * @member {number} [pagedMemory] Paged memory.
   */
  pagedMemory?: number;
  /**
   * @member {number} [peakPagedMemory] Peak paged memory.
   */
  peakPagedMemory?: number;
  /**
   * @member {Date} [timeStamp] Time stamp.
   */
  timeStamp?: Date;
  /**
   * @member {{ [propertyName: string]: string }} [environmentVariables] List
   * of environment variables.
   */
  environmentVariables?: { [propertyName: string]: string };
  /**
   * @member {boolean} [isScmSite] Is this the SCM site?
   */
  isScmSite?: boolean;
  /**
   * @member {boolean} [isWebjob] Is this a Web Job?
   */
  isWebjob?: boolean;
  /**
   * @member {string} [description] Description of process.
   */
  description?: string;
}

/**
 * @interface
 * An interface representing PublicCertificate.
 * Public certificate object
 *
 * @extends ProxyOnlyResource
 */
export interface PublicCertificate extends ProxyOnlyResource {
  /**
   * @member {Uint8Array} [blob] Public Certificate byte array
   */
  blob?: Uint8Array;
  /**
   * @member {PublicCertificateLocation} [publicCertificateLocation] Public
   * Certificate Location. Possible values include: 'CurrentUserMy',
   * 'LocalMachineMy', 'Unknown'
   */
  publicCertificateLocation?: PublicCertificateLocation;
  /**
   * @member {string} [thumbprint] Certificate Thumbprint
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly thumbprint?: string;
}

/**
 * @interface
 * An interface representing RestoreRequest.
 * Description of a restore request.
 *
 * @extends ProxyOnlyResource
 */
export interface RestoreRequest extends ProxyOnlyResource {
  /**
   * @member {string} storageAccountUrl SAS URL to the container.
   */
  storageAccountUrl: string;
  /**
   * @member {string} [blobName] Name of a blob which contains the backup.
   */
  blobName?: string;
  /**
   * @member {boolean} overwrite <code>true</code> if the restore operation can
   * overwrite target app; otherwise, <code>false</code>. <code>true</code> is
   * needed if trying to restore over an existing app.
   */
  overwrite: boolean;
  /**
   * @member {string} [siteName] Name of an app.
   */
  siteName?: string;
  /**
   * @member {DatabaseBackupSetting[]} [databases] Collection of databases
   * which should be restored. This list has to match the list of databases
   * included in the backup.
   */
  databases?: DatabaseBackupSetting[];
  /**
   * @member {boolean} [ignoreConflictingHostNames] Changes a logic when
   * restoring an app with custom domains. <code>true</code> to remove custom
   * domains automatically. If <code>false</code>, custom domains are added to
   * the app's object when it is being restored, but that might fail due to
   * conflicts during the operation. Default value: false .
   */
  ignoreConflictingHostNames?: boolean;
  /**
   * @member {boolean} [ignoreDatabases] Ignore the databases and only restore
   * the site content. Default value: false .
   */
  ignoreDatabases?: boolean;
  /**
   * @member {string} [appServicePlan] Specify app service plan that will own
   * restored site.
   */
  appServicePlan?: string;
  /**
   * @member {BackupRestoreOperationType} [operationType] Operation type.
   * Possible values include: 'Default', 'Clone', 'Relocation', 'Snapshot',
   * 'CloudFS'. Default value: 'Default' .
   */
  operationType?: BackupRestoreOperationType;
  /**
   * @member {boolean} [adjustConnectionStrings] <code>true</code> if
   * SiteConfig.ConnectionStrings should be set in new app; otherwise,
   * <code>false</code>.
   */
  adjustConnectionStrings?: boolean;
  /**
   * @member {string} [hostingEnvironment] App Service Environment name, if
   * needed (only when restoring an app to an App Service Environment).
   */
  hostingEnvironment?: string;
}

/**
 * @interface
 * An interface representing SiteAuthSettings.
 * Configuration settings for the Azure App Service Authentication /
 * Authorization feature.
 *
 * @extends ProxyOnlyResource
 */
export interface SiteAuthSettings extends ProxyOnlyResource {
  /**
   * @member {boolean} [enabled] <code>true</code> if the Authentication /
   * Authorization feature is enabled for the current app; otherwise,
   * <code>false</code>.
   */
  enabled?: boolean;
  /**
   * @member {string} [runtimeVersion] The RuntimeVersion of the Authentication
   * / Authorization feature in use for the current app.
   * The setting in this value can control the behavior of certain features in
   * the Authentication / Authorization module.
   */
  runtimeVersion?: string;
  /**
   * @member {UnauthenticatedClientAction} [unauthenticatedClientAction] The
   * action to take when an unauthenticated client attempts to access the app.
   * Possible values include: 'RedirectToLoginPage', 'AllowAnonymous'
   */
  unauthenticatedClientAction?: UnauthenticatedClientAction;
  /**
   * @member {boolean} [tokenStoreEnabled] <code>true</code> to durably store
   * platform-specific security tokens that are obtained during login flows;
   * otherwise, <code>false</code>.
   * The default is <code>false</code>.
   */
  tokenStoreEnabled?: boolean;
  /**
   * @member {string[]} [allowedExternalRedirectUrls] External URLs that can be
   * redirected to as part of logging in or logging out of the app. Note that
   * the query string part of the URL is ignored.
   * This is an advanced setting typically only needed by Windows Store
   * application backends.
   * Note that URLs within the current domain are always implicitly allowed.
   */
  allowedExternalRedirectUrls?: string[];
  /**
   * @member {BuiltInAuthenticationProvider} [defaultProvider] The default
   * authentication provider to use when multiple providers are configured.
   * This setting is only needed if multiple providers are configured and the
   * unauthenticated client
   * action is set to "RedirectToLoginPage". Possible values include:
   * 'AzureActiveDirectory', 'Facebook', 'Google', 'MicrosoftAccount',
   * 'Twitter'
   */
  defaultProvider?: BuiltInAuthenticationProvider;
  /**
   * @member {number} [tokenRefreshExtensionHours] The number of hours after
   * session token expiration that a session token can be used to
   * call the token refresh API. The default is 72 hours.
   */
  tokenRefreshExtensionHours?: number;
  /**
   * @member {string} [clientId] The Client ID of this relying party
   * application, known as the client_id.
   * This setting is required for enabling OpenID Connection authentication
   * with Azure Active Directory or
   * other 3rd party OpenID Connect providers.
   * More information on OpenID Connect:
   * http://openid.net/specs/openid-connect-core-1_0.html
   */
  clientId?: string;
  /**
   * @member {string} [clientSecret] The Client Secret of this relying party
   * application (in Azure Active Directory, this is also referred to as the
   * Key).
   * This setting is optional. If no client secret is configured, the OpenID
   * Connect implicit auth flow is used to authenticate end users.
   * Otherwise, the OpenID Connect Authorization Code Flow is used to
   * authenticate end users.
   * More information on OpenID Connect:
   * http://openid.net/specs/openid-connect-core-1_0.html
   */
  clientSecret?: string;
  /**
   * @member {string} [issuer] The OpenID Connect Issuer URI that represents
   * the entity which issues access tokens for this application.
   * When using Azure Active Directory, this value is the URI of the directory
   * tenant, e.g. https://sts.windows.net/{tenant-guid}/.
   * This URI is a case-sensitive identifier for the token issuer.
   * More information on OpenID Connect Discovery:
   * http://openid.net/specs/openid-connect-discovery-1_0.html
   */
  issuer?: string;
  /**
   * @member {boolean} [validateIssuer] Gets a value indicating whether the
   * issuer should be a valid HTTPS url and be validated as such.
   */
  validateIssuer?: boolean;
  /**
   * @member {string[]} [allowedAudiences] Allowed audience values to consider
   * when validating JWTs issued by
   * Azure Active Directory. Note that the <code>ClientID</code> value is
   * always considered an
   * allowed audience, regardless of this setting.
   */
  allowedAudiences?: string[];
  /**
   * @member {string[]} [additionalLoginParams] Login parameters to send to the
   * OpenID Connect authorization endpoint when
   * a user logs in. Each parameter must be in the form "key=value".
   */
  additionalLoginParams?: string[];
  /**
   * @member {string} [googleClientId] The OpenID Connect Client ID for the
   * Google web application.
   * This setting is required for enabling Google Sign-In.
   * Google Sign-In documentation:
   * https://developers.google.com/identity/sign-in/web/
   */
  googleClientId?: string;
  /**
   * @member {string} [googleClientSecret] The client secret associated with
   * the Google web application.
   * This setting is required for enabling Google Sign-In.
   * Google Sign-In documentation:
   * https://developers.google.com/identity/sign-in/web/
   */
  googleClientSecret?: string;
  /**
   * @member {string[]} [googleOAuthScopes] The OAuth 2.0 scopes that will be
   * requested as part of Google Sign-In authentication.
   * This setting is optional. If not specified, "openid", "profile", and
   * "email" are used as default scopes.
   * Google Sign-In documentation:
   * https://developers.google.com/identity/sign-in/web/
   */
  googleOAuthScopes?: string[];
  /**
   * @member {string} [facebookAppId] The App ID of the Facebook app used for
   * login.
   * This setting is required for enabling Facebook Login.
   * Facebook Login documentation:
   * https://developers.facebook.com/docs/facebook-login
   */
  facebookAppId?: string;
  /**
   * @member {string} [facebookAppSecret] The App Secret of the Facebook app
   * used for Facebook Login.
   * This setting is required for enabling Facebook Login.
   * Facebook Login documentation:
   * https://developers.facebook.com/docs/facebook-login
   */
  facebookAppSecret?: string;
  /**
   * @member {string[]} [facebookOAuthScopes] The OAuth 2.0 scopes that will be
   * requested as part of Facebook Login authentication.
   * This setting is optional.
   * Facebook Login documentation:
   * https://developers.facebook.com/docs/facebook-login
   */
  facebookOAuthScopes?: string[];
  /**
   * @member {string} [twitterConsumerKey] The OAuth 1.0a consumer key of the
   * Twitter application used for sign-in.
   * This setting is required for enabling Twitter Sign-In.
   * Twitter Sign-In documentation: https://dev.twitter.com/web/sign-in
   */
  twitterConsumerKey?: string;
  /**
   * @member {string} [twitterConsumerSecret] The OAuth 1.0a consumer secret of
   * the Twitter application used for sign-in.
   * This setting is required for enabling Twitter Sign-In.
   * Twitter Sign-In documentation: https://dev.twitter.com/web/sign-in
   */
  twitterConsumerSecret?: string;
  /**
   * @member {string} [microsoftAccountClientId] The OAuth 2.0 client ID that
   * was created for the app used for authentication.
   * This setting is required for enabling Microsoft Account authentication.
   * Microsoft Account OAuth documentation:
   * https://dev.onedrive.com/auth/msa_oauth.htm
   */
  microsoftAccountClientId?: string;
  /**
   * @member {string} [microsoftAccountClientSecret] The OAuth 2.0 client
   * secret that was created for the app used for authentication.
   * This setting is required for enabling Microsoft Account authentication.
   * Microsoft Account OAuth documentation:
   * https://dev.onedrive.com/auth/msa_oauth.htm
   */
  microsoftAccountClientSecret?: string;
  /**
   * @member {string[]} [microsoftAccountOAuthScopes] The OAuth 2.0 scopes that
   * will be requested as part of Microsoft Account authentication.
   * This setting is optional. If not specified, "wl.basic" is used as the
   * default scope.
   * Microsoft Account Scopes and permissions documentation:
   * https://msdn.microsoft.com/en-us/library/dn631845.aspx
   */
  microsoftAccountOAuthScopes?: string[];
}

/**
 * @interface
 * An interface representing SiteCloneabilityCriterion.
 * An app cloneability criterion.
 *
 */
export interface SiteCloneabilityCriterion {
  /**
   * @member {string} [name] Name of criterion.
   */
  name?: string;
  /**
   * @member {string} [description] Description of criterion.
   */
  description?: string;
}

/**
 * @interface
 * An interface representing SiteCloneability.
 * Represents whether or not an app is cloneable.
 *
 */
export interface SiteCloneability {
  /**
   * @member {CloneAbilityResult} [result] Name of app. Possible values
   * include: 'Cloneable', 'PartiallyCloneable', 'NotCloneable'
   */
  result?: CloneAbilityResult;
  /**
   * @member {SiteCloneabilityCriterion[]} [blockingFeatures] List of features
   * enabled on app that prevent cloning.
   */
  blockingFeatures?: SiteCloneabilityCriterion[];
  /**
   * @member {SiteCloneabilityCriterion[]} [unsupportedFeatures] List of
   * features enabled on app that are non-blocking but cannot be cloned. The
   * app can still be cloned
   * but the features in this list will not be set up on cloned app.
   */
  unsupportedFeatures?: SiteCloneabilityCriterion[];
  /**
   * @member {SiteCloneabilityCriterion[]} [blockingCharacteristics] List of
   * blocking application characteristics.
   */
  blockingCharacteristics?: SiteCloneabilityCriterion[];
}

/**
 * @interface
 * An interface representing SiteConfigResource.
 * Web app configuration ARM resource.
 *
 * @extends ProxyOnlyResource
 */
export interface SiteConfigResource extends ProxyOnlyResource {
  /**
   * @member {number} [numberOfWorkers] Number of workers.
   */
  numberOfWorkers?: number;
  /**
   * @member {string[]} [defaultDocuments] Default documents.
   */
  defaultDocuments?: string[];
  /**
   * @member {string} [netFrameworkVersion] .NET Framework version. Default
   * value: 'v4.6' .
   */
  netFrameworkVersion?: string;
  /**
   * @member {string} [phpVersion] Version of PHP.
   */
  phpVersion?: string;
  /**
   * @member {string} [pythonVersion] Version of Python.
   */
  pythonVersion?: string;
  /**
   * @member {string} [nodeVersion] Version of Node.js.
   */
  nodeVersion?: string;
  /**
   * @member {string} [linuxFxVersion] Linux App Framework and version
   */
  linuxFxVersion?: string;
  /**
   * @member {string} [windowsFxVersion] Xenon App Framework and version
   */
  windowsFxVersion?: string;
  /**
   * @member {boolean} [requestTracingEnabled] <code>true</code> if request
   * tracing is enabled; otherwise, <code>false</code>.
   */
  requestTracingEnabled?: boolean;
  /**
   * @member {Date} [requestTracingExpirationTime] Request tracing expiration
   * time.
   */
  requestTracingExpirationTime?: Date;
  /**
   * @member {boolean} [remoteDebuggingEnabled] <code>true</code> if remote
   * debugging is enabled; otherwise, <code>false</code>.
   */
  remoteDebuggingEnabled?: boolean;
  /**
   * @member {string} [remoteDebuggingVersion] Remote debugging version.
   */
  remoteDebuggingVersion?: string;
  /**
   * @member {boolean} [httpLoggingEnabled] <code>true</code> if HTTP logging
   * is enabled; otherwise, <code>false</code>.
   */
  httpLoggingEnabled?: boolean;
  /**
   * @member {number} [logsDirectorySizeLimit] HTTP logs directory size limit.
   */
  logsDirectorySizeLimit?: number;
  /**
   * @member {boolean} [detailedErrorLoggingEnabled] <code>true</code> if
   * detailed error logging is enabled; otherwise, <code>false</code>.
   */
  detailedErrorLoggingEnabled?: boolean;
  /**
   * @member {string} [publishingUsername] Publishing user name.
   */
  publishingUsername?: string;
  /**
   * @member {NameValuePair[]} [appSettings] Application settings.
   */
  appSettings?: NameValuePair[];
  /**
   * @member {{ [propertyName: string]: AzureStorageInfoValue }}
   * [azureStorageAccounts] User-provided Azure storage accounts.
   */
  azureStorageAccounts?: { [propertyName: string]: AzureStorageInfoValue };
  /**
   * @member {ConnStringInfo[]} [connectionStrings] Connection strings.
   */
  connectionStrings?: ConnStringInfo[];
  /**
   * @member {SiteMachineKey} [machineKey] Site MachineKey.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly machineKey?: SiteMachineKey;
  /**
   * @member {HandlerMapping[]} [handlerMappings] Handler mappings.
   */
  handlerMappings?: HandlerMapping[];
  /**
   * @member {string} [documentRoot] Document root.
   */
  documentRoot?: string;
  /**
   * @member {ScmType} [scmType] SCM type. Possible values include: 'None',
   * 'Dropbox', 'Tfs', 'LocalGit', 'GitHub', 'CodePlexGit', 'CodePlexHg',
   * 'BitbucketGit', 'BitbucketHg', 'ExternalGit', 'ExternalHg', 'OneDrive',
   * 'VSO'
   */
  scmType?: ScmType;
  /**
   * @member {boolean} [use32BitWorkerProcess] <code>true</code> to use 32-bit
   * worker process; otherwise, <code>false</code>.
   */
  use32BitWorkerProcess?: boolean;
  /**
   * @member {boolean} [webSocketsEnabled] <code>true</code> if WebSocket is
   * enabled; otherwise, <code>false</code>.
   */
  webSocketsEnabled?: boolean;
  /**
   * @member {boolean} [alwaysOn] <code>true</code> if Always On is enabled;
   * otherwise, <code>false</code>.
   */
  alwaysOn?: boolean;
  /**
   * @member {string} [javaVersion] Java version.
   */
  javaVersion?: string;
  /**
   * @member {string} [javaContainer] Java container.
   */
  javaContainer?: string;
  /**
   * @member {string} [javaContainerVersion] Java container version.
   */
  javaContainerVersion?: string;
  /**
   * @member {string} [appCommandLine] App command line to launch.
   */
  appCommandLine?: string;
  /**
   * @member {ManagedPipelineMode} [managedPipelineMode] Managed pipeline mode.
   * Possible values include: 'Integrated', 'Classic'
   */
  managedPipelineMode?: ManagedPipelineMode;
  /**
   * @member {VirtualApplication[]} [virtualApplications] Virtual applications.
   */
  virtualApplications?: VirtualApplication[];
  /**
   * @member {SiteLoadBalancing} [loadBalancing] Site load balancing. Possible
   * values include: 'WeightedRoundRobin', 'LeastRequests',
   * 'LeastResponseTime', 'WeightedTotalTraffic', 'RequestHash'
   */
  loadBalancing?: SiteLoadBalancing;
  /**
   * @member {Experiments} [experiments] This is work around for polymophic
   * types.
   */
  experiments?: Experiments;
  /**
   * @member {SiteLimits} [limits] Site limits.
   */
  limits?: SiteLimits;
  /**
   * @member {boolean} [autoHealEnabled] <code>true</code> if Auto Heal is
   * enabled; otherwise, <code>false</code>.
   */
  autoHealEnabled?: boolean;
  /**
   * @member {AutoHealRules} [autoHealRules] Auto Heal rules.
   */
  autoHealRules?: AutoHealRules;
  /**
   * @member {string} [tracingOptions] Tracing options.
   */
  tracingOptions?: string;
  /**
   * @member {string} [vnetName] Virtual Network name.
   */
  vnetName?: string;
  /**
   * @member {CorsSettings} [cors] Cross-Origin Resource Sharing (CORS)
   * settings.
   */
  cors?: CorsSettings;
  /**
   * @member {PushSettings} [push] Push endpoint settings.
   */
  push?: PushSettings;
  /**
   * @member {ApiDefinitionInfo} [apiDefinition] Information about the formal
   * API definition for the app.
   */
  apiDefinition?: ApiDefinitionInfo;
  /**
   * @member {string} [autoSwapSlotName] Auto-swap slot name.
   */
  autoSwapSlotName?: string;
  /**
   * @member {boolean} [localMySqlEnabled] <code>true</code> to enable local
   * MySQL; otherwise, <code>false</code>. Default value: false .
   */
  localMySqlEnabled?: boolean;
  /**
   * @member {number} [managedServiceIdentityId] Managed Service Identity Id
   */
  managedServiceIdentityId?: number;
  /**
   * @member {number} [xManagedServiceIdentityId] Explicit Managed Service
   * Identity Id
   */
  xManagedServiceIdentityId?: number;
  /**
   * @member {IpSecurityRestriction[]} [ipSecurityRestrictions] IP security
   * restrictions.
   */
  ipSecurityRestrictions?: IpSecurityRestriction[];
  /**
   * @member {boolean} [http20Enabled] Http20Enabled: configures a web site to
   * allow clients to connect over http2.0. Default value: true .
   */
  http20Enabled?: boolean;
  /**
   * @member {SupportedTlsVersions} [minTlsVersion] MinTlsVersion: configures
   * the minimum version of TLS required for SSL requests. Possible values
   * include: '1.0', '1.1', '1.2'
   */
  minTlsVersion?: SupportedTlsVersions;
  /**
   * @member {FtpsState} [ftpsState] State of FTP / FTPS service. Possible
   * values include: 'AllAllowed', 'FtpsOnly', 'Disabled'
   */
  ftpsState?: FtpsState;
  /**
   * @member {number} [reservedInstanceCount] Number of reserved instances.
   * This setting only applies to the Consumption Plan
   */
  reservedInstanceCount?: number;
}

/**
 * @interface
 * An interface representing SiteConfigurationSnapshotInfo.
 * A snapshot of a web app configuration.
 *
 * @extends ProxyOnlyResource
 */
export interface SiteConfigurationSnapshotInfo extends ProxyOnlyResource {
  /**
   * @member {Date} [time] The time the snapshot was taken.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly time?: Date;
  /**
   * @member {number} [snapshotId] The id of the snapshot
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly snapshotId?: number;
}

/**
 * @interface
 * An interface representing SiteExtensionInfo.
 * Site Extension Information.
 *
 * @extends ProxyOnlyResource
 */
export interface SiteExtensionInfo extends ProxyOnlyResource {
  /**
   * @member {string} [extensionId] Site extension ID.
   */
  extensionId?: string;
  /**
   * @member {string} [title]
   */
  title?: string;
  /**
   * @member {SiteExtensionType} [extensionType] Site extension type. Possible
   * values include: 'Gallery', 'WebRoot'
   */
  extensionType?: SiteExtensionType;
  /**
   * @member {string} [summary] Summary description.
   */
  summary?: string;
  /**
   * @member {string} [description] Detailed description.
   */
  description?: string;
  /**
   * @member {string} [version] Version information.
   */
  version?: string;
  /**
   * @member {string} [extensionUrl] Extension URL.
   */
  extensionUrl?: string;
  /**
   * @member {string} [projectUrl] Project URL.
   */
  projectUrl?: string;
  /**
   * @member {string} [iconUrl] Icon URL.
   */
  iconUrl?: string;
  /**
   * @member {string} [licenseUrl] License URL.
   */
  licenseUrl?: string;
  /**
   * @member {string} [feedUrl] Feed URL.
   */
  feedUrl?: string;
  /**
   * @member {string[]} [authors] List of authors.
   */
  authors?: string[];
  /**
   * @member {string} [installerCommandLineParams] Installer command line
   * parameters.
   */
  installerCommandLineParams?: string;
  /**
   * @member {Date} [publishedDateTime] Published timestamp.
   */
  publishedDateTime?: Date;
  /**
   * @member {number} [downloadCount] Count of downloads.
   */
  downloadCount?: number;
  /**
   * @member {boolean} [localIsLatestVersion] <code>true</code> if the local
   * version is the latest version; <code>false</code> otherwise.
   */
  localIsLatestVersion?: boolean;
  /**
   * @member {string} [localPath] Local path.
   */
  localPath?: string;
  /**
   * @member {Date} [installedDateTime] Installed timestamp.
   */
  installedDateTime?: Date;
  /**
   * @member {string} [provisioningState] Provisioning state.
   */
  provisioningState?: string;
  /**
   * @member {string} [comment] Site Extension comment.
   */
  comment?: string;
}

/**
 * @interface
 * An interface representing SiteInstance.
 * Instance of an app.
 *
 * @extends ProxyOnlyResource
 */
export interface SiteInstance extends ProxyOnlyResource {
  /**
   * @member {string} [siteInstanceName] Name of instance.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly siteInstanceName?: string;
}

/**
 * @interface
 * An interface representing SiteLogsConfig.
 * Configuration of App Service site logs.
 *
 * @extends ProxyOnlyResource
 */
export interface SiteLogsConfig extends ProxyOnlyResource {
  /**
   * @member {ApplicationLogsConfig} [applicationLogs] Application logs
   * configuration.
   */
  applicationLogs?: ApplicationLogsConfig;
  /**
   * @member {HttpLogsConfig} [httpLogs] HTTP logs configuration.
   */
  httpLogs?: HttpLogsConfig;
  /**
   * @member {EnabledConfig} [failedRequestsTracing] Failed requests tracing
   * configuration.
   */
  failedRequestsTracing?: EnabledConfig;
  /**
   * @member {EnabledConfig} [detailedErrorMessages] Detailed error messages
   * configuration.
   */
  detailedErrorMessages?: EnabledConfig;
}

/**
 * @interface
 * An interface representing SitePatchResource.
 * ARM resource for a site.
 *
 * @extends ProxyOnlyResource
 */
export interface SitePatchResource extends ProxyOnlyResource {
  /**
   * @member {string} [state] Current state of the app.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly state?: string;
  /**
   * @member {string[]} [hostNames] Hostnames associated with the app.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly hostNames?: string[];
  /**
   * @member {string} [repositorySiteName] Name of the repository site.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly repositorySiteName?: string;
  /**
   * @member {UsageState} [usageState] State indicating whether the app has
   * exceeded its quota usage. Read-only. Possible values include: 'Normal',
   * 'Exceeded'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly usageState?: UsageState;
  /**
   * @member {boolean} [enabled] <code>true</code> if the app is enabled;
   * otherwise, <code>false</code>. Setting this value to false disables the
   * app (takes the app offline).
   */
  enabled?: boolean;
  /**
   * @member {string[]} [enabledHostNames] Enabled hostnames for the
   * app.Hostnames need to be assigned (see HostNames) AND enabled. Otherwise,
   * the app is not served on those hostnames.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly enabledHostNames?: string[];
  /**
   * @member {SiteAvailabilityState} [availabilityState] Management information
   * availability state for the app. Possible values include: 'Normal',
   * 'Limited', 'DisasterRecoveryMode'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly availabilityState?: SiteAvailabilityState;
  /**
   * @member {HostNameSslState[]} [hostNameSslStates] Hostname SSL states are
   * used to manage the SSL bindings for app's hostnames.
   */
  hostNameSslStates?: HostNameSslState[];
  /**
   * @member {string} [serverFarmId] Resource ID of the associated App Service
   * plan, formatted as:
   * "/subscriptions/{subscriptionID}/resourceGroups/{groupName}/providers/Microsoft.Web/serverfarms/{appServicePlanName}".
   */
  serverFarmId?: string;
  /**
   * @member {boolean} [reserved] <code>true</code> if reserved; otherwise,
   * <code>false</code>. Default value: false .
   */
  reserved?: boolean;
  /**
   * @member {boolean} [isXenon] Obsolete: Hyper-V sandbox. Default value:
   * false .
   */
  isXenon?: boolean;
  /**
   * @member {boolean} [hyperV] Hyper-V sandbox. Default value: false .
   */
  hyperV?: boolean;
  /**
   * @member {Date} [lastModifiedTimeUtc] Last time the app was modified, in
   * UTC. Read-only.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly lastModifiedTimeUtc?: Date;
  /**
   * @member {SiteConfig} [siteConfig] Configuration of the app.
   */
  siteConfig?: SiteConfig;
  /**
   * @member {string[]} [trafficManagerHostNames] Azure Traffic Manager
   * hostnames associated with the app. Read-only.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly trafficManagerHostNames?: string[];
  /**
   * @member {boolean} [scmSiteAlsoStopped] <code>true</code> to stop SCM
   * (KUDU) site when the app is stopped; otherwise, <code>false</code>. The
   * default is <code>false</code>. Default value: false .
   */
  scmSiteAlsoStopped?: boolean;
  /**
   * @member {string} [targetSwapSlot] Specifies which deployment slot this app
   * will swap into. Read-only.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly targetSwapSlot?: string;
  /**
   * @member {HostingEnvironmentProfile} [hostingEnvironmentProfile] App
   * Service Environment to use for the app.
   */
  hostingEnvironmentProfile?: HostingEnvironmentProfile;
  /**
   * @member {boolean} [clientAffinityEnabled] <code>true</code> to enable
   * client affinity; <code>false</code> to stop sending session affinity
   * cookies, which route client requests in the same session to the same
   * instance. Default is <code>true</code>.
   */
  clientAffinityEnabled?: boolean;
  /**
   * @member {boolean} [clientCertEnabled] <code>true</code> to enable client
   * certificate authentication (TLS mutual authentication); otherwise,
   * <code>false</code>. Default is <code>false</code>.
   */
  clientCertEnabled?: boolean;
  /**
   * @member {boolean} [hostNamesDisabled] <code>true</code> to disable the
   * public hostnames of the app; otherwise, <code>false</code>.
   * If <code>true</code>, the app is only accessible via API management
   * process.
   */
  hostNamesDisabled?: boolean;
  /**
   * @member {string} [outboundIpAddresses] List of IP addresses that the app
   * uses for outbound connections (e.g. database access). Includes VIPs from
   * tenants that site can be hosted with current settings. Read-only.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly outboundIpAddresses?: string;
  /**
   * @member {string} [possibleOutboundIpAddresses] List of IP addresses that
   * the app uses for outbound connections (e.g. database access). Includes
   * VIPs from all tenants. Read-only.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly possibleOutboundIpAddresses?: string;
  /**
   * @member {number} [containerSize] Size of the function container.
   */
  containerSize?: number;
  /**
   * @member {number} [dailyMemoryTimeQuota] Maximum allowed daily memory-time
   * quota (applicable on dynamic apps only).
   */
  dailyMemoryTimeQuota?: number;
  /**
   * @member {Date} [suspendedTill] App suspended till in case memory-time
   * quota is exceeded.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly suspendedTill?: Date;
  /**
   * @member {number} [maxNumberOfWorkers] Maximum number of workers.
   * This only applies to Functions container.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly maxNumberOfWorkers?: number;
  /**
   * @member {CloningInfo} [cloningInfo] If specified during app creation, the
   * app is cloned from a source app.
   */
  cloningInfo?: CloningInfo;
  /**
   * @member {string} [resourceGroup] Name of the resource group the app
   * belongs to. Read-only.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly resourceGroup?: string;
  /**
   * @member {boolean} [isDefaultContainer] <code>true</code> if the app is a
   * default container; otherwise, <code>false</code>.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly isDefaultContainer?: boolean;
  /**
   * @member {string} [defaultHostName] Default hostname of the app. Read-only.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly defaultHostName?: string;
  /**
   * @member {SlotSwapStatus} [slotSwapStatus] Status of the last deployment
   * slot swap operation.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly slotSwapStatus?: SlotSwapStatus;
  /**
   * @member {boolean} [httpsOnly] HttpsOnly: configures a web site to accept
   * only https requests. Issues redirect for
   * http requests
   */
  httpsOnly?: boolean;
}

/**
 * @interface
 * An interface representing SitePhpErrorLogFlag.
 * Used for getting PHP error logging flag.
 *
 * @extends ProxyOnlyResource
 */
export interface SitePhpErrorLogFlag extends ProxyOnlyResource {
  /**
   * @member {string} [localLogErrors] Local log_errors setting.
   */
  localLogErrors?: string;
  /**
   * @member {string} [masterLogErrors] Master log_errors setting.
   */
  masterLogErrors?: string;
  /**
   * @member {string} [localLogErrorsMaxLength] Local log_errors_max_len
   * setting.
   */
  localLogErrorsMaxLength?: string;
  /**
   * @member {string} [masterLogErrorsMaxLength] Master log_errors_max_len
   * setting.
   */
  masterLogErrorsMaxLength?: string;
}

/**
 * @interface
 * An interface representing SiteSourceControl.
 * Source control configuration for an app.
 *
 * @extends ProxyOnlyResource
 */
export interface SiteSourceControl extends ProxyOnlyResource {
  /**
   * @member {string} [repoUrl] Repository or source control URL.
   */
  repoUrl?: string;
  /**
   * @member {string} [branch] Name of branch to use for deployment.
   */
  branch?: string;
  /**
   * @member {boolean} [isManualIntegration] <code>true</code> to limit to
   * manual integration; <code>false</code> to enable continuous integration
   * (which configures webhooks into online repos like GitHub).
   */
  isManualIntegration?: boolean;
  /**
   * @member {boolean} [deploymentRollbackEnabled] <code>true</code> to enable
   * deployment rollback; otherwise, <code>false</code>.
   */
  deploymentRollbackEnabled?: boolean;
  /**
   * @member {boolean} [isMercurial] <code>true</code> for a Mercurial
   * repository; <code>false</code> for a Git repository.
   */
  isMercurial?: boolean;
}

/**
 * @interface
 * An interface representing SlotConfigNamesResource.
 * Slot Config names azure resource.
 *
 * @extends ProxyOnlyResource
 */
export interface SlotConfigNamesResource extends ProxyOnlyResource {
  /**
   * @member {string[]} [connectionStringNames] List of connection string
   * names.
   */
  connectionStringNames?: string[];
  /**
   * @member {string[]} [appSettingNames] List of application settings names.
   */
  appSettingNames?: string[];
  /**
   * @member {string[]} [azureStorageConfigNames] List of external Azure
   * storage account identifiers.
   */
  azureStorageConfigNames?: string[];
}

/**
 * @interface
 * An interface representing SlotDifference.
 * A setting difference between two deployment slots of an app.
 *
 * @extends ProxyOnlyResource
 */
export interface SlotDifference extends ProxyOnlyResource {
  /**
   * @member {string} [level] Level of the difference: Information, Warning or
   * Error.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly level?: string;
  /**
   * @member {string} [settingType] The type of the setting: General,
   * AppSetting or ConnectionString.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly settingType?: string;
  /**
   * @member {string} [diffRule] Rule that describes how to process the setting
   * difference during a slot swap.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly diffRule?: string;
  /**
   * @member {string} [settingName] Name of the setting.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly settingName?: string;
  /**
   * @member {string} [valueInCurrentSlot] Value of the setting in the current
   * slot.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly valueInCurrentSlot?: string;
  /**
   * @member {string} [valueInTargetSlot] Value of the setting in the target
   * slot.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly valueInTargetSlot?: string;
  /**
   * @member {string} [description] Description of the setting difference.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
}

/**
 * @interface
 * An interface representing SnapshotRecoverySource.
 * Specifies the web app that snapshot contents will be retrieved from.
 *
 */
export interface SnapshotRecoverySource {
  /**
   * @member {string} [location] Geographical location of the source web app,
   * e.g. SouthEastAsia, SouthCentralUS
   */
  location?: string;
  /**
   * @member {string} [id] ARM resource ID of the source app.
   * /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}
   * for production slots and
   * /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName}
   * for other slots.
   */
  id?: string;
}

/**
 * @interface
 * An interface representing SnapshotRestoreRequest.
 * Details about app recovery operation.
 *
 * @extends ProxyOnlyResource
 */
export interface SnapshotRestoreRequest extends ProxyOnlyResource {
  /**
   * @member {string} [snapshotTime] Point in time in which the app restore
   * should be done, formatted as a DateTime string.
   */
  snapshotTime?: string;
  /**
   * @member {SnapshotRecoverySource} [recoverySource] Optional. Specifies the
   * web app that snapshot contents will be retrieved from.
   * If empty, the targeted web app will be used as the source.
   */
  recoverySource?: SnapshotRecoverySource;
  /**
   * @member {boolean} overwrite If <code>true</code> the restore operation can
   * overwrite source app; otherwise, <code>false</code>.
   */
  overwrite: boolean;
  /**
   * @member {boolean} [recoverConfiguration] If true, site configuration, in
   * addition to content, will be reverted.
   */
  recoverConfiguration?: boolean;
  /**
   * @member {boolean} [ignoreConflictingHostNames] If true, custom hostname
   * conflicts will be ignored when recovering to a target web app.
   * This setting is only necessary when RecoverConfiguration is enabled.
   */
  ignoreConflictingHostNames?: boolean;
}

/**
 * @interface
 * An interface representing StorageMigrationOptions.
 * Options for app content migration.
 *
 * @extends ProxyOnlyResource
 */
export interface StorageMigrationOptions extends ProxyOnlyResource {
  /**
   * @member {string} azurefilesConnectionString AzureFiles connection string.
   */
  azurefilesConnectionString: string;
  /**
   * @member {string} azurefilesShare AzureFiles share.
   */
  azurefilesShare: string;
  /**
   * @member {boolean} [switchSiteAfterMigration] <code>true</code>if the app
   * should be switched over; otherwise, <code>false</code>. Default value:
   * false .
   */
  switchSiteAfterMigration?: boolean;
  /**
   * @member {boolean} [blockWriteAccessToSite] <code>true</code> if the app
   * should be read only during copy operation; otherwise, <code>false</code>.
   * Default value: false .
   */
  blockWriteAccessToSite?: boolean;
}

/**
 * @interface
 * An interface representing StorageMigrationResponse.
 * Response for a migration of app content request.
 *
 * @extends ProxyOnlyResource
 */
export interface StorageMigrationResponse extends ProxyOnlyResource {
  /**
   * @member {string} [operationId] When server starts the migration process,
   * it will return an operation ID identifying that particular migration
   * operation.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly operationId?: string;
}

/**
 * @interface
 * An interface representing StringDictionary.
 * String dictionary resource.
 *
 * @extends ProxyOnlyResource
 */
export interface StringDictionary extends ProxyOnlyResource {
  /**
   * @member {{ [propertyName: string]: string }} [properties] Settings.
   */
  properties?: { [propertyName: string]: string };
}

/**
 * @interface
 * An interface representing SwiftVirtualNetwork.
 * Swift Virtual Network Contract. This is used to enable the new Swift way of
 * doing virtual network integration.
 *
 * @extends ProxyOnlyResource
 */
export interface SwiftVirtualNetwork extends ProxyOnlyResource {
  /**
   * @member {string} [subnetResourceId] The Virtual Network subnet's resource
   * ID. This is the subnet that this Web App will join. This subnet must have
   * a delegation to Microsoft.Web/serverFarms defined first.
   */
  subnetResourceId?: string;
  /**
   * @member {boolean} [swiftSupported] A flag that specifies if the scale unit
   * this Web App is on supports Swift integration.
   */
  swiftSupported?: boolean;
}

/**
 * @interface
 * An interface representing TriggeredJobRun.
 * Triggered Web Job Run Information.
 *
 * @extends ProxyOnlyResource
 */
export interface TriggeredJobRun extends ProxyOnlyResource {
  /**
   * @member {string} [webJobId] Job ID.
   */
  webJobId?: string;
  /**
   * @member {string} [webJobName] Job name.
   */
  webJobName?: string;
  /**
   * @member {TriggeredWebJobStatus} [status] Job status. Possible values
   * include: 'Success', 'Failed', 'Error'
   */
  status?: TriggeredWebJobStatus;
  /**
   * @member {Date} [startTime] Start time.
   */
  startTime?: Date;
  /**
   * @member {Date} [endTime] End time.
   */
  endTime?: Date;
  /**
   * @member {string} [duration] Job duration.
   */
  duration?: string;
  /**
   * @member {string} [outputUrl] Output URL.
   */
  outputUrl?: string;
  /**
   * @member {string} [errorUrl] Error URL.
   */
  errorUrl?: string;
  /**
   * @member {string} [url] Job URL.
   */
  url?: string;
  /**
   * @member {string} [jobName] Job name.
   */
  jobName?: string;
  /**
   * @member {string} [trigger] Job trigger.
   */
  trigger?: string;
}

/**
 * @interface
 * An interface representing TriggeredJobHistory.
 * Triggered Web Job History. List of Triggered Web Job Run Information
 * elements.
 *
 * @extends ProxyOnlyResource
 */
export interface TriggeredJobHistory extends ProxyOnlyResource {
  /**
   * @member {TriggeredJobRun[]} [runs] List of triggered web job runs.
   */
  runs?: TriggeredJobRun[];
}

/**
 * @interface
 * An interface representing TriggeredWebJob.
 * Triggered Web Job Information.
 *
 * @extends ProxyOnlyResource
 */
export interface TriggeredWebJob extends ProxyOnlyResource {
  /**
   * @member {TriggeredJobRun} [latestRun] Latest job run information.
   */
  latestRun?: TriggeredJobRun;
  /**
   * @member {string} [historyUrl] History URL.
   */
  historyUrl?: string;
  /**
   * @member {string} [schedulerLogsUrl] Scheduler Logs URL.
   */
  schedulerLogsUrl?: string;
  /**
   * @member {string} [runCommand] Run command.
   */
  runCommand?: string;
  /**
   * @member {string} [url] Job URL.
   */
  url?: string;
  /**
   * @member {string} [extraInfoUrl] Extra Info URL.
   */
  extraInfoUrl?: string;
  /**
   * @member {WebJobType} [webJobType] Job type. Possible values include:
   * 'Continuous', 'Triggered'
   */
  webJobType?: WebJobType;
  /**
   * @member {string} [error] Error information.
   */
  error?: string;
  /**
   * @member {boolean} [usingSdk] Using SDK?
   */
  usingSdk?: boolean;
  /**
   * @member {{ [propertyName: string]: any }} [settings] Job settings.
   */
  settings?: { [propertyName: string]: any };
}

/**
 * @interface
 * An interface representing WebJob.
 * Web Job Information.
 *
 * @extends ProxyOnlyResource
 */
export interface WebJob extends ProxyOnlyResource {
  /**
   * @member {string} [runCommand] Run command.
   */
  runCommand?: string;
  /**
   * @member {string} [url] Job URL.
   */
  url?: string;
  /**
   * @member {string} [extraInfoUrl] Extra Info URL.
   */
  extraInfoUrl?: string;
  /**
   * @member {WebJobType} [webJobType] Job type. Possible values include:
   * 'Continuous', 'Triggered'
   */
  webJobType?: WebJobType;
  /**
   * @member {string} [error] Error information.
   */
  error?: string;
  /**
   * @member {boolean} [usingSdk] Using SDK?
   */
  usingSdk?: boolean;
  /**
   * @member {{ [propertyName: string]: any }} [settings] Job settings.
   */
  settings?: { [propertyName: string]: any };
}

/**
 * @interface
 * An interface representing AddressResponse.
 * Describes main public IP address and any extra virtual IPs.
 *
 */
export interface AddressResponse {
  /**
   * @member {string} [serviceIpAddress] Main public virtual IP.
   */
  serviceIpAddress?: string;
  /**
   * @member {string} [internalIpAddress] Virtual Network internal IP address
   * of the App Service Environment if it is in internal load-balancing mode.
   */
  internalIpAddress?: string;
  /**
   * @member {string[]} [outboundIpAddresses] IP addresses appearing on
   * outbound connections.
   */
  outboundIpAddresses?: string[];
  /**
   * @member {VirtualIPMapping[]} [vipMappings] Additional virtual IPs.
   */
  vipMappings?: VirtualIPMapping[];
}

/**
 * @interface
 * An interface representing AppServiceEnvironmentResource.
 * App Service Environment ARM resource.
 *
 * @extends Resource
 */
export interface AppServiceEnvironmentResource extends Resource {
  /**
   * @member {string} appServiceEnvironmentResourceName Name of the App Service
   * Environment.
   */
  appServiceEnvironmentResourceName: string;
  /**
   * @member {string} appServiceEnvironmentResourceLocation Location of the App
   * Service Environment, e.g. "West US".
   */
  appServiceEnvironmentResourceLocation: string;
  /**
   * @member {ProvisioningState} [provisioningState] Provisioning state of the
   * App Service Environment. Possible values include: 'Succeeded', 'Failed',
   * 'Canceled', 'InProgress', 'Deleting'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * @member {HostingEnvironmentStatus} [status] Current status of the App
   * Service Environment. Possible values include: 'Preparing', 'Ready',
   * 'Scaling', 'Deleting'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly status?: HostingEnvironmentStatus;
  /**
   * @member {string} [vnetName] Name of the Virtual Network for the App
   * Service Environment.
   */
  vnetName?: string;
  /**
   * @member {string} [vnetResourceGroupName] Resource group of the Virtual
   * Network.
   */
  vnetResourceGroupName?: string;
  /**
   * @member {string} [vnetSubnetName] Subnet of the Virtual Network.
   */
  vnetSubnetName?: string;
  /**
   * @member {VirtualNetworkProfile} virtualNetwork Description of the Virtual
   * Network.
   */
  virtualNetwork: VirtualNetworkProfile;
  /**
   * @member {InternalLoadBalancingMode} [internalLoadBalancingMode] Specifies
   * which endpoints to serve internally in the Virtual Network for the App
   * Service Environment. Possible values include: 'None', 'Web', 'Publishing'
   */
  internalLoadBalancingMode?: InternalLoadBalancingMode;
  /**
   * @member {string} [multiSize] Front-end VM size, e.g. "Medium", "Large".
   */
  multiSize?: string;
  /**
   * @member {number} [multiRoleCount] Number of front-end instances.
   */
  multiRoleCount?: number;
  /**
   * @member {WorkerPool[]} workerPools Description of worker pools with worker
   * size IDs, VM sizes, and number of workers in each pool.
   */
  workerPools: WorkerPool[];
  /**
   * @member {number} [ipsslAddressCount] Number of IP SSL addresses reserved
   * for the App Service Environment.
   */
  ipsslAddressCount?: number;
  /**
   * @member {string} [databaseEdition] Edition of the metadata database for
   * the App Service Environment, e.g. "Standard".
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly databaseEdition?: string;
  /**
   * @member {string} [databaseServiceObjective] Service objective of the
   * metadata database for the App Service Environment, e.g. "S0".
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly databaseServiceObjective?: string;
  /**
   * @member {number} [upgradeDomains] Number of upgrade domains of the App
   * Service Environment.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly upgradeDomains?: number;
  /**
   * @member {string} [subscriptionId] Subscription of the App Service
   * Environment.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly subscriptionId?: string;
  /**
   * @member {string} [dnsSuffix] DNS suffix of the App Service Environment.
   */
  dnsSuffix?: string;
  /**
   * @member {string} [lastAction] Last deployment action on the App Service
   * Environment.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly lastAction?: string;
  /**
   * @member {string} [lastActionResult] Result of the last deployment action
   * on the App Service Environment.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly lastActionResult?: string;
  /**
   * @member {string} [allowedMultiSizes] List of comma separated strings
   * describing which VM sizes are allowed for front-ends.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly allowedMultiSizes?: string;
  /**
   * @member {string} [allowedWorkerSizes] List of comma separated strings
   * describing which VM sizes are allowed for workers.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly allowedWorkerSizes?: string;
  /**
   * @member {number} [maximumNumberOfMachines] Maximum number of VMs in the
   * App Service Environment.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly maximumNumberOfMachines?: number;
  /**
   * @member {VirtualIPMapping[]} [vipMappings] Description of IP SSL mapping
   * for the App Service Environment.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly vipMappings?: VirtualIPMapping[];
  /**
   * @member {StampCapacity[]} [environmentCapacities] Current total, used, and
   * available worker capacities.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly environmentCapacities?: StampCapacity[];
  /**
   * @member {NetworkAccessControlEntry[]} [networkAccessControlList] Access
   * control list for controlling traffic to the App Service Environment.
   */
  networkAccessControlList?: NetworkAccessControlEntry[];
  /**
   * @member {boolean} [environmentIsHealthy] True/false indicating whether the
   * App Service Environment is healthy.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly environmentIsHealthy?: boolean;
  /**
   * @member {string} [environmentStatus] Detailed message about with results
   * of the last check of the App Service Environment.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly environmentStatus?: string;
  /**
   * @member {string} [resourceGroup] Resource group of the App Service
   * Environment.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly resourceGroup?: string;
  /**
   * @member {number} [frontEndScaleFactor] Scale factor for front-ends.
   */
  frontEndScaleFactor?: number;
  /**
   * @member {number} [defaultFrontEndScaleFactor] Default Scale Factor for
   * FrontEnds.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly defaultFrontEndScaleFactor?: number;
  /**
   * @member {string} [apiManagementAccountId] API Management Account
   * associated with the App Service Environment.
   */
  apiManagementAccountId?: string;
  /**
   * @member {boolean} [suspended] <code>true</code> if the App Service
   * Environment is suspended; otherwise, <code>false</code>. The environment
   * can be suspended, e.g. when the management endpoint is no longer available
   * (most likely because NSG blocked the incoming traffic).
   */
  suspended?: boolean;
  /**
   * @member {boolean} [dynamicCacheEnabled] True/false indicating whether the
   * App Service Environment is suspended. The environment can be suspended
   * e.g. when the management endpoint is no longer available
   * (most likely because NSG blocked the incoming traffic).
   */
  dynamicCacheEnabled?: boolean;
  /**
   * @member {NameValuePair[]} [clusterSettings] Custom settings for changing
   * the behavior of the App Service Environment.
   */
  clusterSettings?: NameValuePair[];
  /**
   * @member {string[]} [userWhitelistedIpRanges] User added ip ranges to
   * whitelist on ASE db
   */
  userWhitelistedIpRanges?: string[];
  /**
   * @member {boolean} [hasLinuxWorkers] Flag that displays whether an ASE has
   * linux workers or not
   */
  hasLinuxWorkers?: boolean;
  /**
   * @member {string} [sslCertKeyVaultId] Key Vault ID for ILB App Service
   * Environment default SSL certificate
   */
  sslCertKeyVaultId?: string;
  /**
   * @member {string} [sslCertKeyVaultSecretName] Key Vault Secret Name for ILB
   * App Service Environment default SSL certificate
   */
  sslCertKeyVaultSecretName?: string;
}

/**
 * @interface
 * An interface representing AppServiceEnvironmentPatchResource.
 * ARM resource for a app service enviroment.
 *
 * @extends ProxyOnlyResource
 */
export interface AppServiceEnvironmentPatchResource extends ProxyOnlyResource {
  /**
   * @member {string} appServiceEnvironmentPatchResourceName Name of the App
   * Service Environment.
   */
  appServiceEnvironmentPatchResourceName: string;
  /**
   * @member {string} location Location of the App Service Environment, e.g.
   * "West US".
   */
  location: string;
  /**
   * @member {ProvisioningState} [provisioningState] Provisioning state of the
   * App Service Environment. Possible values include: 'Succeeded', 'Failed',
   * 'Canceled', 'InProgress', 'Deleting'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * @member {HostingEnvironmentStatus} [status] Current status of the App
   * Service Environment. Possible values include: 'Preparing', 'Ready',
   * 'Scaling', 'Deleting'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly status?: HostingEnvironmentStatus;
  /**
   * @member {string} [vnetName] Name of the Virtual Network for the App
   * Service Environment.
   */
  vnetName?: string;
  /**
   * @member {string} [vnetResourceGroupName] Resource group of the Virtual
   * Network.
   */
  vnetResourceGroupName?: string;
  /**
   * @member {string} [vnetSubnetName] Subnet of the Virtual Network.
   */
  vnetSubnetName?: string;
  /**
   * @member {VirtualNetworkProfile} virtualNetwork Description of the Virtual
   * Network.
   */
  virtualNetwork: VirtualNetworkProfile;
  /**
   * @member {InternalLoadBalancingMode} [internalLoadBalancingMode] Specifies
   * which endpoints to serve internally in the Virtual Network for the App
   * Service Environment. Possible values include: 'None', 'Web', 'Publishing'
   */
  internalLoadBalancingMode?: InternalLoadBalancingMode;
  /**
   * @member {string} [multiSize] Front-end VM size, e.g. "Medium", "Large".
   */
  multiSize?: string;
  /**
   * @member {number} [multiRoleCount] Number of front-end instances.
   */
  multiRoleCount?: number;
  /**
   * @member {WorkerPool[]} workerPools Description of worker pools with worker
   * size IDs, VM sizes, and number of workers in each pool.
   */
  workerPools: WorkerPool[];
  /**
   * @member {number} [ipsslAddressCount] Number of IP SSL addresses reserved
   * for the App Service Environment.
   */
  ipsslAddressCount?: number;
  /**
   * @member {string} [databaseEdition] Edition of the metadata database for
   * the App Service Environment, e.g. "Standard".
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly databaseEdition?: string;
  /**
   * @member {string} [databaseServiceObjective] Service objective of the
   * metadata database for the App Service Environment, e.g. "S0".
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly databaseServiceObjective?: string;
  /**
   * @member {number} [upgradeDomains] Number of upgrade domains of the App
   * Service Environment.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly upgradeDomains?: number;
  /**
   * @member {string} [subscriptionId] Subscription of the App Service
   * Environment.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly subscriptionId?: string;
  /**
   * @member {string} [dnsSuffix] DNS suffix of the App Service Environment.
   */
  dnsSuffix?: string;
  /**
   * @member {string} [lastAction] Last deployment action on the App Service
   * Environment.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly lastAction?: string;
  /**
   * @member {string} [lastActionResult] Result of the last deployment action
   * on the App Service Environment.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly lastActionResult?: string;
  /**
   * @member {string} [allowedMultiSizes] List of comma separated strings
   * describing which VM sizes are allowed for front-ends.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly allowedMultiSizes?: string;
  /**
   * @member {string} [allowedWorkerSizes] List of comma separated strings
   * describing which VM sizes are allowed for workers.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly allowedWorkerSizes?: string;
  /**
   * @member {number} [maximumNumberOfMachines] Maximum number of VMs in the
   * App Service Environment.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly maximumNumberOfMachines?: number;
  /**
   * @member {VirtualIPMapping[]} [vipMappings] Description of IP SSL mapping
   * for the App Service Environment.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly vipMappings?: VirtualIPMapping[];
  /**
   * @member {StampCapacity[]} [environmentCapacities] Current total, used, and
   * available worker capacities.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly environmentCapacities?: StampCapacity[];
  /**
   * @member {NetworkAccessControlEntry[]} [networkAccessControlList] Access
   * control list for controlling traffic to the App Service Environment.
   */
  networkAccessControlList?: NetworkAccessControlEntry[];
  /**
   * @member {boolean} [environmentIsHealthy] True/false indicating whether the
   * App Service Environment is healthy.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly environmentIsHealthy?: boolean;
  /**
   * @member {string} [environmentStatus] Detailed message about with results
   * of the last check of the App Service Environment.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly environmentStatus?: string;
  /**
   * @member {string} [resourceGroup] Resource group of the App Service
   * Environment.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly resourceGroup?: string;
  /**
   * @member {number} [frontEndScaleFactor] Scale factor for front-ends.
   */
  frontEndScaleFactor?: number;
  /**
   * @member {number} [defaultFrontEndScaleFactor] Default Scale Factor for
   * FrontEnds.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly defaultFrontEndScaleFactor?: number;
  /**
   * @member {string} [apiManagementAccountId] API Management Account
   * associated with the App Service Environment.
   */
  apiManagementAccountId?: string;
  /**
   * @member {boolean} [suspended] <code>true</code> if the App Service
   * Environment is suspended; otherwise, <code>false</code>. The environment
   * can be suspended, e.g. when the management endpoint is no longer available
   * (most likely because NSG blocked the incoming traffic).
   */
  suspended?: boolean;
  /**
   * @member {boolean} [dynamicCacheEnabled] True/false indicating whether the
   * App Service Environment is suspended. The environment can be suspended
   * e.g. when the management endpoint is no longer available
   * (most likely because NSG blocked the incoming traffic).
   */
  dynamicCacheEnabled?: boolean;
  /**
   * @member {NameValuePair[]} [clusterSettings] Custom settings for changing
   * the behavior of the App Service Environment.
   */
  clusterSettings?: NameValuePair[];
  /**
   * @member {string[]} [userWhitelistedIpRanges] User added ip ranges to
   * whitelist on ASE db
   */
  userWhitelistedIpRanges?: string[];
  /**
   * @member {boolean} [hasLinuxWorkers] Flag that displays whether an ASE has
   * linux workers or not
   */
  hasLinuxWorkers?: boolean;
  /**
   * @member {string} [sslCertKeyVaultId] Key Vault ID for ILB App Service
   * Environment default SSL certificate
   */
  sslCertKeyVaultId?: string;
  /**
   * @member {string} [sslCertKeyVaultSecretName] Key Vault Secret Name for ILB
   * App Service Environment default SSL certificate
   */
  sslCertKeyVaultSecretName?: string;
}

/**
 * @interface
 * An interface representing HostingEnvironmentDiagnostics.
 * Diagnostics for an App Service Environment.
 *
 */
export interface HostingEnvironmentDiagnostics {
  /**
   * @member {string} [name] Name/identifier of the diagnostics.
   */
  name?: string;
  /**
   * @member {string} [diagnosicsOutput] Diagnostics output.
   */
  diagnosicsOutput?: string;
}

/**
 * @interface
 * An interface representing MetricAvailabilily.
 * Metric availability and retention.
 *
 */
export interface MetricAvailabilily {
  /**
   * @member {string} [timeGrain] Time grain.
   */
  timeGrain?: string;
  /**
   * @member {string} [retention] Retention period for the current time grain.
   */
  retention?: string;
}

/**
 * @interface
 * An interface representing MetricDefinition.
 * Metadata for a metric.
 *
 * @extends ProxyOnlyResource
 */
export interface MetricDefinition extends ProxyOnlyResource {
  /**
   * @member {string} [unit] Unit of the metric.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly unit?: string;
  /**
   * @member {string} [primaryAggregationType] Primary aggregation type.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly primaryAggregationType?: string;
  /**
   * @member {MetricAvailabilily[]} [metricAvailabilities] List of time grains
   * supported for the metric together with retention period.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly metricAvailabilities?: MetricAvailabilily[];
  /**
   * @member {string} [displayName] Friendly name shown in the UI.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly displayName?: string;
}

/**
 * @interface
 * An interface representing SkuInfo.
 * SKU discovery information.
 *
 */
export interface SkuInfo {
  /**
   * @member {string} [resourceType] Resource type that this SKU applies to.
   */
  resourceType?: string;
  /**
   * @member {SkuDescription} [sku] Name and tier of the SKU.
   */
  sku?: SkuDescription;
  /**
   * @member {SkuCapacity} [capacity] Min, max, and default scale values of the
   * SKU.
   */
  capacity?: SkuCapacity;
}

/**
 * @interface
 * An interface representing Usage.
 * Usage of the quota resource.
 *
 * @extends ProxyOnlyResource
 */
export interface Usage extends ProxyOnlyResource {
  /**
   * @member {string} [displayName] Friendly name shown in the UI.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly displayName?: string;
  /**
   * @member {string} [resourceName] Name of the quota resource.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly resourceName?: string;
  /**
   * @member {string} [unit] Units of measurement for the quota resource.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly unit?: string;
  /**
   * @member {number} [currentValue] The current value of the resource counter.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly currentValue?: number;
  /**
   * @member {number} [limit] The resource limit.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly limit?: number;
  /**
   * @member {Date} [nextResetTime] Next reset time for the resource counter.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextResetTime?: Date;
  /**
   * @member {ComputeModeOptions} [computeMode] Compute mode used for this
   * usage. Possible values include: 'Shared', 'Dedicated', 'Dynamic'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly computeMode?: ComputeModeOptions;
  /**
   * @member {string} [siteMode] Site mode used for this usage.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly siteMode?: string;
}

/**
 * @interface
 * An interface representing WorkerPoolResource.
 * Worker pool of an App Service Environment ARM resource.
 *
 * @extends ProxyOnlyResource
 */
export interface WorkerPoolResource extends ProxyOnlyResource {
  /**
   * @member {number} [workerSizeId] Worker size ID for referencing this worker
   * pool.
   */
  workerSizeId?: number;
  /**
   * @member {ComputeModeOptions} [computeMode] Shared or dedicated app
   * hosting. Possible values include: 'Shared', 'Dedicated', 'Dynamic'
   */
  computeMode?: ComputeModeOptions;
  /**
   * @member {string} [workerSize] VM size of the worker pool instances.
   */
  workerSize?: string;
  /**
   * @member {number} [workerCount] Number of instances in the worker pool.
   */
  workerCount?: number;
  /**
   * @member {string[]} [instanceNames] Names of all instances in the worker
   * pool (read only).
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly instanceNames?: string[];
  /**
   * @member {SkuDescription} [sku]
   */
  sku?: SkuDescription;
}

/**
 * @interface
 * An interface representing AppServicePlanPatchResource.
 * ARM resource for a app service plan.
 *
 * @extends ProxyOnlyResource
 */
export interface AppServicePlanPatchResource extends ProxyOnlyResource {
  /**
   * @member {string} [workerTierName] Target worker tier assigned to the App
   * Service plan.
   */
  workerTierName?: string;
  /**
   * @member {StatusOptions} [status] App Service plan status. Possible values
   * include: 'Ready', 'Pending', 'Creating'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly status?: StatusOptions;
  /**
   * @member {string} [subscription] App Service plan subscription.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly subscription?: string;
  /**
   * @member {string} [adminSiteName] App Service plan administration site.
   */
  adminSiteName?: string;
  /**
   * @member {HostingEnvironmentProfile} [hostingEnvironmentProfile]
   * Specification for the App Service Environment to use for the App Service
   * plan.
   */
  hostingEnvironmentProfile?: HostingEnvironmentProfile;
  /**
   * @member {number} [maximumNumberOfWorkers] Maximum number of instances that
   * can be assigned to this App Service plan.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly maximumNumberOfWorkers?: number;
  /**
   * @member {string} [geoRegion] Geographical location for the App Service
   * plan.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly geoRegion?: string;
  /**
   * @member {boolean} [perSiteScaling] If <code>true</code>, apps assigned to
   * this App Service plan can be scaled independently.
   * If <code>false</code>, apps assigned to this App Service plan will scale
   * to all instances of the plan. Default value: false .
   */
  perSiteScaling?: boolean;
  /**
   * @member {number} [maximumElasticWorkerCount] Maximum number of total
   * workers allowed for this ElasticScaleEnabled App Service Plan
   */
  maximumElasticWorkerCount?: number;
  /**
   * @member {number} [numberOfSites] Number of apps assigned to this App
   * Service plan.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly numberOfSites?: number;
  /**
   * @member {boolean} [isSpot] If <code>true</code>, this App Service Plan
   * owns spot instances.
   */
  isSpot?: boolean;
  /**
   * @member {Date} [spotExpirationTime] The time when the server farm expires.
   * Valid only if it is a spot server farm.
   */
  spotExpirationTime?: Date;
  /**
   * @member {Date} [freeOfferExpirationTime] The time when the server farm
   * free offer expires.
   */
  freeOfferExpirationTime?: Date;
  /**
   * @member {string} [resourceGroup] Resource group of the App Service plan.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly resourceGroup?: string;
  /**
   * @member {boolean} [reserved] If Linux app service plan <code>true</code>,
   * <code>false</code> otherwise. Default value: false .
   */
  reserved?: boolean;
  /**
   * @member {boolean} [isXenon] Obsolete: If Hyper-V container app service
   * plan <code>true</code>, <code>false</code> otherwise. Default value: false
   * .
   */
  isXenon?: boolean;
  /**
   * @member {boolean} [hyperV] If Hyper-V container app service plan
   * <code>true</code>, <code>false</code> otherwise. Default value: false .
   */
  hyperV?: boolean;
  /**
   * @member {number} [targetWorkerCount] Scaling worker count.
   */
  targetWorkerCount?: number;
  /**
   * @member {number} [targetWorkerSizeId] Scaling worker size ID.
   */
  targetWorkerSizeId?: number;
  /**
   * @member {ProvisioningState} [provisioningState] Provisioning state of the
   * App Service Environment. Possible values include: 'Succeeded', 'Failed',
   * 'Canceled', 'InProgress', 'Deleting'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provisioningState?: ProvisioningState;
}

/**
 * @interface
 * An interface representing HybridConnectionLimits.
 * Hybrid Connection limits contract. This is used to return the plan limits of
 * Hybrid Connections.
 *
 * @extends ProxyOnlyResource
 */
export interface HybridConnectionLimits extends ProxyOnlyResource {
  /**
   * @member {number} [current] The current number of Hybrid Connections.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly current?: number;
  /**
   * @member {number} [maximum] The maximum number of Hybrid Connections
   * allowed.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly maximum?: number;
}

/**
 * @interface
 * An interface representing ResourceHealthMetadata.
 * Used for getting ResourceHealthCheck settings.
 *
 * @extends ProxyOnlyResource
 */
export interface ResourceHealthMetadata extends ProxyOnlyResource {
  /**
   * @member {string} [category] The category that the resource matches in the
   * RHC Policy File
   */
  category?: string;
  /**
   * @member {boolean} [signalAvailability] Is there a health signal for the
   * resource
   */
  signalAvailability?: boolean;
}

/**
 * @interface
 * An interface representing AppServiceCertificateOrdersResendRequestEmailsOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface AppServiceCertificateOrdersResendRequestEmailsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [name] Name of the object.
   */
  name?: string;
}

/**
 * @interface
 * An interface representing DomainsCheckAvailabilityOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface DomainsCheckAvailabilityOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [name] Name of the object.
   */
  name?: string;
}

/**
 * @interface
 * An interface representing DomainsDeleteMethodOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface DomainsDeleteMethodOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [forceHardDeleteDomain] Specify <code>true</code> to
   * delete the domain immediately. The default is <code>false</code> which
   * deletes the domain after 24 hours.
   */
  forceHardDeleteDomain?: boolean;
}

/**
 * @interface
 * An interface representing DiagnosticsGetHostingEnvironmentDetectorResponseOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface DiagnosticsGetHostingEnvironmentDetectorResponseOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {Date} [startTime] Start Time
   */
  startTime?: Date;
  /**
   * @member {Date} [endTime] End Time
   */
  endTime?: Date;
  /**
   * @member {string} [timeGrain] Time Grain
   */
  timeGrain?: string;
}

/**
 * @interface
 * An interface representing DiagnosticsGetSiteDetectorResponseOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface DiagnosticsGetSiteDetectorResponseOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {Date} [startTime] Start Time
   */
  startTime?: Date;
  /**
   * @member {Date} [endTime] End Time
   */
  endTime?: Date;
  /**
   * @member {string} [timeGrain] Time Grain
   */
  timeGrain?: string;
}

/**
 * @interface
 * An interface representing DiagnosticsExecuteSiteAnalysisOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface DiagnosticsExecuteSiteAnalysisOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {Date} [startTime] Start Time
   */
  startTime?: Date;
  /**
   * @member {Date} [endTime] End Time
   */
  endTime?: Date;
  /**
   * @member {string} [timeGrain] Time Grain
   */
  timeGrain?: string;
}

/**
 * @interface
 * An interface representing DiagnosticsExecuteSiteDetectorOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface DiagnosticsExecuteSiteDetectorOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {Date} [startTime] Start Time
   */
  startTime?: Date;
  /**
   * @member {Date} [endTime] End Time
   */
  endTime?: Date;
  /**
   * @member {string} [timeGrain] Time Grain
   */
  timeGrain?: string;
}

/**
 * @interface
 * An interface representing DiagnosticsGetSiteDetectorResponseSlotOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface DiagnosticsGetSiteDetectorResponseSlotOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {Date} [startTime] Start Time
   */
  startTime?: Date;
  /**
   * @member {Date} [endTime] End Time
   */
  endTime?: Date;
  /**
   * @member {string} [timeGrain] Time Grain
   */
  timeGrain?: string;
}

/**
 * @interface
 * An interface representing DiagnosticsExecuteSiteAnalysisSlotOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface DiagnosticsExecuteSiteAnalysisSlotOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {Date} [startTime] Start Time
   */
  startTime?: Date;
  /**
   * @member {Date} [endTime] End Time
   */
  endTime?: Date;
  /**
   * @member {string} [timeGrain] Time Grain
   */
  timeGrain?: string;
}

/**
 * @interface
 * An interface representing DiagnosticsExecuteSiteDetectorSlotOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface DiagnosticsExecuteSiteDetectorSlotOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {Date} [startTime] Start Time
   */
  startTime?: Date;
  /**
   * @member {Date} [endTime] End Time
   */
  endTime?: Date;
  /**
   * @member {string} [timeGrain] Time Grain
   */
  timeGrain?: string;
}

/**
 * @interface
 * An interface representing ProviderGetAvailableStacksOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ProviderGetAvailableStacksOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {OsTypeSelected} [osTypeSelected] Possible values include:
   * 'Windows', 'Linux', 'WindowsFunctions', 'LinuxFunctions'
   */
  osTypeSelected?: OsTypeSelected;
}

/**
 * @interface
 * An interface representing ProviderGetAvailableStacksOnPremOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ProviderGetAvailableStacksOnPremOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {OsTypeSelected1} [osTypeSelected] Possible values include:
   * 'Windows', 'Linux', 'WindowsFunctions', 'LinuxFunctions'
   */
  osTypeSelected?: OsTypeSelected1;
}

/**
 * @interface
 * An interface representing RecommendationsListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface RecommendationsListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [featured] Specify <code>true</code> to return only the
   * most critical recommendations. The default is <code>false</code>, which
   * returns all recommendations.
   */
  featured?: boolean;
  /**
   * @member {string} [filter] Filter is specified by using OData syntax.
   * Example: $filter=channel eq 'Api' or channel eq 'Notification' and
   * startTime eq 2014-01-01T00:00:00Z and endTime eq 2014-12-31T23:59:59Z and
   * timeGrain eq duration'[PT1H|PT1M|P1D]
   */
  filter?: string;
}

/**
 * @interface
 * An interface representing RecommendationsListHistoryForWebAppOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface RecommendationsListHistoryForWebAppOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [expiredOnly] Specify <code>false</code> to return all
   * recommendations. The default is <code>true</code>, which returns only
   * expired recommendations.
   */
  expiredOnly?: boolean;
  /**
   * @member {string} [filter] Filter is specified by using OData syntax.
   * Example: $filter=channel eq 'Api' or channel eq 'Notification' and
   * startTime eq 2014-01-01T00:00:00Z and endTime eq 2014-12-31T23:59:59Z and
   * timeGrain eq duration'[PT1H|PT1M|P1D]
   */
  filter?: string;
}

/**
 * @interface
 * An interface representing RecommendationsListRecommendedRulesForWebAppOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface RecommendationsListRecommendedRulesForWebAppOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [featured] Specify <code>true</code> to return only the
   * most critical recommendations. The default is <code>false</code>, which
   * returns all recommendations.
   */
  featured?: boolean;
  /**
   * @member {string} [filter] Return only channels specified in the filter.
   * Filter is specified by using OData syntax. Example: $filter=channel eq
   * 'Api' or channel eq 'Notification'
   */
  filter?: string;
}

/**
 * @interface
 * An interface representing RecommendationsGetRuleDetailsByWebAppOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface RecommendationsGetRuleDetailsByWebAppOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [updateSeen] Specify <code>true</code> to update the
   * last-seen timestamp of the recommendation object.
   */
  updateSeen?: boolean;
  /**
   * @member {string} [recommendationId] The GUID of the recommedation object
   * if you query an expired one. You don't need to specify it to query an
   * active entry.
   */
  recommendationId?: string;
}

/**
 * @interface
 * An interface representing WebSiteManagementClientListBillingMetersOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface WebSiteManagementClientListBillingMetersOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [billingLocation] Azure Location of billable resource
   */
  billingLocation?: string;
  /**
   * @member {string} [osType] App Service OS type meters used for
   */
  osType?: string;
}

/**
 * @interface
 * An interface representing WebSiteManagementClientCheckNameAvailabilityOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface WebSiteManagementClientCheckNameAvailabilityOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [isFqdn] Is fully qualified domain name.
   */
  isFqdn?: boolean;
}

/**
 * @interface
 * An interface representing WebSiteManagementClientListGeoRegionsOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface WebSiteManagementClientListGeoRegionsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {SkuName} [sku] Name of SKU used to filter the regions. Possible
   * values include: 'Free', 'Shared', 'Basic', 'Standard', 'Premium',
   * 'Dynamic', 'Isolated', 'PremiumV2', 'ElasticPremium', 'ElasticIsolated'
   */
  sku?: SkuName;
  /**
   * @member {boolean} [linuxWorkersEnabled] Specify <code>true</code> if you
   * want to filter to only regions that support Linux workers.
   */
  linuxWorkersEnabled?: boolean;
  /**
   * @member {boolean} [xenonWorkersEnabled] Specify <code>true</code> if you
   * want to filter to only regions that support Xenon workers.
   */
  xenonWorkersEnabled?: boolean;
  /**
   * @member {boolean} [linuxDynamicWorkersEnabled] Specify <code>true</code>
   * if you want to filter to only regions that support Linux Consumption
   * Workers.
   */
  linuxDynamicWorkersEnabled?: boolean;
}

/**
 * @interface
 * An interface representing WebSiteManagementClientListSiteIdentifiersAssignedToHostNameOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface WebSiteManagementClientListSiteIdentifiersAssignedToHostNameOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [name] Name of the object.
   */
  name?: string;
}

/**
 * @interface
 * An interface representing WebAppsListByResourceGroupOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface WebAppsListByResourceGroupOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [includeSlots] Specify <strong>true</strong> to include
   * deployment slots in results. The default is false, which only gives you
   * the production slot of all apps.
   */
  includeSlots?: boolean;
}

/**
 * @interface
 * An interface representing WebAppsDeleteMethodOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface WebAppsDeleteMethodOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [deleteMetrics] If true, web app metrics are also
   * deleted.
   */
  deleteMetrics?: boolean;
  /**
   * @member {boolean} [deleteEmptyServerFarm] Specify true if the App Service
   * plan will be empty after app deletion and you want to delete the empty App
   * Service plan. By default, the empty App Service plan is not deleted.
   */
  deleteEmptyServerFarm?: boolean;
}

/**
 * @interface
 * An interface representing WebAppsAnalyzeCustomHostnameOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface WebAppsAnalyzeCustomHostnameOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [hostName] Custom hostname.
   */
  hostName?: string;
}

/**
 * @interface
 * An interface representing WebAppsListMetricsOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface WebAppsListMetricsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [details] Specify "true" to include metric details in
   * the response. It is "false" by default.
   */
  details?: boolean;
  /**
   * @member {string} [filter] Return only metrics specified in the filter
   * (using OData syntax). For example: $filter=(name.value eq 'Metric1' or
   * name.value eq 'Metric2') and startTime eq 2014-01-01T00:00:00Z and endTime
   * eq 2014-12-31T23:59:59Z and timeGrain eq duration'[Hour|Minute|Day]'.
   */
  filter?: string;
}

/**
 * @interface
 * An interface representing WebAppsStartWebSiteNetworkTraceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface WebAppsStartWebSiteNetworkTraceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [durationInSeconds] The duration to keep capturing in
   * seconds.
   */
  durationInSeconds?: number;
  /**
   * @member {number} [maxFrameLength] The maximum frame length in bytes
   * (Optional).
   */
  maxFrameLength?: number;
  /**
   * @member {string} [sasUrl] The Blob URL to store capture file.
   */
  sasUrl?: string;
}

/**
 * @interface
 * An interface representing WebAppsStartWebSiteNetworkTraceOperationOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface WebAppsStartWebSiteNetworkTraceOperationOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [durationInSeconds] The duration to keep capturing in
   * seconds.
   */
  durationInSeconds?: number;
  /**
   * @member {number} [maxFrameLength] The maximum frame length in bytes
   * (Optional).
   */
  maxFrameLength?: number;
  /**
   * @member {string} [sasUrl] The Blob URL to store capture file.
   */
  sasUrl?: string;
}

/**
 * @interface
 * An interface representing WebAppsListPerfMonCountersOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface WebAppsListPerfMonCountersOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [filter] Return only usages/metrics specified in the
   * filter. Filter conforms to odata syntax. Example: $filter=(startTime eq
   * 2014-01-01T00:00:00Z and endTime eq 2014-12-31T23:59:59Z and timeGrain eq
   * duration'[Hour|Minute|Day]'.
   */
  filter?: string;
}

/**
 * @interface
 * An interface representing WebAppsRestartOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface WebAppsRestartOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [softRestart] Specify true to apply the configuration
   * settings and restarts the app only if necessary. By default, the API
   * always restarts and reprovisions the app.
   */
  softRestart?: boolean;
  /**
   * @member {boolean} [synchronous] Specify true to block until the app is
   * restarted. By default, it is set to false, and the API responds
   * immediately (asynchronous).
   */
  synchronous?: boolean;
}

/**
 * @interface
 * An interface representing WebAppsDeleteSlotOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface WebAppsDeleteSlotOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [deleteMetrics] If true, web app metrics are also
   * deleted.
   */
  deleteMetrics?: boolean;
  /**
   * @member {boolean} [deleteEmptyServerFarm] Specify true if the App Service
   * plan will be empty after app deletion and you want to delete the empty App
   * Service plan. By default, the empty App Service plan is not deleted.
   */
  deleteEmptyServerFarm?: boolean;
}

/**
 * @interface
 * An interface representing WebAppsAnalyzeCustomHostnameSlotOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface WebAppsAnalyzeCustomHostnameSlotOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [hostName] Custom hostname.
   */
  hostName?: string;
}

/**
 * @interface
 * An interface representing WebAppsListMetricsSlotOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface WebAppsListMetricsSlotOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [details] Specify "true" to include metric details in
   * the response. It is "false" by default.
   */
  details?: boolean;
  /**
   * @member {string} [filter] Return only metrics specified in the filter
   * (using OData syntax). For example: $filter=(name.value eq 'Metric1' or
   * name.value eq 'Metric2') and startTime eq 2014-01-01T00:00:00Z and endTime
   * eq 2014-12-31T23:59:59Z and timeGrain eq duration'[Hour|Minute|Day]'.
   */
  filter?: string;
}

/**
 * @interface
 * An interface representing WebAppsStartWebSiteNetworkTraceSlotOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface WebAppsStartWebSiteNetworkTraceSlotOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [durationInSeconds] The duration to keep capturing in
   * seconds.
   */
  durationInSeconds?: number;
  /**
   * @member {number} [maxFrameLength] The maximum frame length in bytes
   * (Optional).
   */
  maxFrameLength?: number;
  /**
   * @member {string} [sasUrl] The Blob URL to store capture file.
   */
  sasUrl?: string;
}

/**
 * @interface
 * An interface representing WebAppsStartWebSiteNetworkTraceOperationSlotOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface WebAppsStartWebSiteNetworkTraceOperationSlotOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [durationInSeconds] The duration to keep capturing in
   * seconds.
   */
  durationInSeconds?: number;
  /**
   * @member {number} [maxFrameLength] The maximum frame length in bytes
   * (Optional).
   */
  maxFrameLength?: number;
  /**
   * @member {string} [sasUrl] The Blob URL to store capture file.
   */
  sasUrl?: string;
}

/**
 * @interface
 * An interface representing WebAppsListPerfMonCountersSlotOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface WebAppsListPerfMonCountersSlotOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [filter] Return only usages/metrics specified in the
   * filter. Filter conforms to odata syntax. Example: $filter=(startTime eq
   * 2014-01-01T00:00:00Z and endTime eq 2014-12-31T23:59:59Z and timeGrain eq
   * duration'[Hour|Minute|Day]'.
   */
  filter?: string;
}

/**
 * @interface
 * An interface representing WebAppsRestartSlotOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface WebAppsRestartSlotOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [softRestart] Specify true to apply the configuration
   * settings and restarts the app only if necessary. By default, the API
   * always restarts and reprovisions the app.
   */
  softRestart?: boolean;
  /**
   * @member {boolean} [synchronous] Specify true to block until the app is
   * restarted. By default, it is set to false, and the API responds
   * immediately (asynchronous).
   */
  synchronous?: boolean;
}

/**
 * @interface
 * An interface representing WebAppsStartNetworkTraceSlotOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface WebAppsStartNetworkTraceSlotOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [durationInSeconds] The duration to keep capturing in
   * seconds.
   */
  durationInSeconds?: number;
  /**
   * @member {number} [maxFrameLength] The maximum frame length in bytes
   * (Optional).
   */
  maxFrameLength?: number;
  /**
   * @member {string} [sasUrl] The Blob URL to store capture file.
   */
  sasUrl?: string;
}

/**
 * @interface
 * An interface representing WebAppsListUsagesSlotOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface WebAppsListUsagesSlotOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [filter] Return only information specified in the filter
   * (using OData syntax). For example: $filter=(name.value eq 'Metric1' or
   * name.value eq 'Metric2') and startTime eq 2014-01-01T00:00:00Z and endTime
   * eq 2014-12-31T23:59:59Z and timeGrain eq duration'[Hour|Minute|Day]'.
   */
  filter?: string;
}

/**
 * @interface
 * An interface representing WebAppsStartNetworkTraceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface WebAppsStartNetworkTraceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [durationInSeconds] The duration to keep capturing in
   * seconds.
   */
  durationInSeconds?: number;
  /**
   * @member {number} [maxFrameLength] The maximum frame length in bytes
   * (Optional).
   */
  maxFrameLength?: number;
  /**
   * @member {string} [sasUrl] The Blob URL to store capture file.
   */
  sasUrl?: string;
}

/**
 * @interface
 * An interface representing WebAppsListUsagesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface WebAppsListUsagesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [filter] Return only information specified in the filter
   * (using OData syntax). For example: $filter=(name.value eq 'Metric1' or
   * name.value eq 'Metric2') and startTime eq 2014-01-01T00:00:00Z and endTime
   * eq 2014-12-31T23:59:59Z and timeGrain eq duration'[Hour|Minute|Day]'.
   */
  filter?: string;
}

/**
 * @interface
 * An interface representing WebAppsBeginStartWebSiteNetworkTraceOperationOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface WebAppsBeginStartWebSiteNetworkTraceOperationOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [durationInSeconds] The duration to keep capturing in
   * seconds.
   */
  durationInSeconds?: number;
  /**
   * @member {number} [maxFrameLength] The maximum frame length in bytes
   * (Optional).
   */
  maxFrameLength?: number;
  /**
   * @member {string} [sasUrl] The Blob URL to store capture file.
   */
  sasUrl?: string;
}

/**
 * @interface
 * An interface representing WebAppsBeginStartWebSiteNetworkTraceOperationSlotOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface WebAppsBeginStartWebSiteNetworkTraceOperationSlotOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [durationInSeconds] The duration to keep capturing in
   * seconds.
   */
  durationInSeconds?: number;
  /**
   * @member {number} [maxFrameLength] The maximum frame length in bytes
   * (Optional).
   */
  maxFrameLength?: number;
  /**
   * @member {string} [sasUrl] The Blob URL to store capture file.
   */
  sasUrl?: string;
}

/**
 * @interface
 * An interface representing WebAppsBeginStartNetworkTraceSlotOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface WebAppsBeginStartNetworkTraceSlotOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [durationInSeconds] The duration to keep capturing in
   * seconds.
   */
  durationInSeconds?: number;
  /**
   * @member {number} [maxFrameLength] The maximum frame length in bytes
   * (Optional).
   */
  maxFrameLength?: number;
  /**
   * @member {string} [sasUrl] The Blob URL to store capture file.
   */
  sasUrl?: string;
}

/**
 * @interface
 * An interface representing WebAppsBeginStartNetworkTraceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface WebAppsBeginStartNetworkTraceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [durationInSeconds] The duration to keep capturing in
   * seconds.
   */
  durationInSeconds?: number;
  /**
   * @member {number} [maxFrameLength] The maximum frame length in bytes
   * (Optional).
   */
  maxFrameLength?: number;
  /**
   * @member {string} [sasUrl] The Blob URL to store capture file.
   */
  sasUrl?: string;
}

/**
 * @interface
 * An interface representing AppServiceEnvironmentsDeleteMethodOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface AppServiceEnvironmentsDeleteMethodOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [forceDelete] Specify <code>true</code> to force the
   * deletion even if the App Service Environment contains resources. The
   * default is <code>false</code>.
   */
  forceDelete?: boolean;
}

/**
 * @interface
 * An interface representing AppServiceEnvironmentsListMetricsOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface AppServiceEnvironmentsListMetricsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [details] Specify <code>true</code> to include instance
   * details. The default is <code>false</code>.
   */
  details?: boolean;
  /**
   * @member {string} [filter] Return only usages/metrics specified in the
   * filter. Filter conforms to odata syntax. Example: $filter=(name.value eq
   * 'Metric1' or name.value eq 'Metric2') and startTime eq
   * 2014-01-01T00:00:00Z and endTime eq 2014-12-31T23:59:59Z and timeGrain eq
   * duration'[Hour|Minute|Day]'.
   */
  filter?: string;
}

/**
 * @interface
 * An interface representing AppServiceEnvironmentsListMultiRolePoolInstanceMetricsOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface AppServiceEnvironmentsListMultiRolePoolInstanceMetricsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [details] Specify <code>true</code> to include instance
   * details. The default is <code>false</code>.
   */
  details?: boolean;
}

/**
 * @interface
 * An interface representing AppServiceEnvironmentsListMultiRoleMetricsOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface AppServiceEnvironmentsListMultiRoleMetricsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [startTime] Beginning time of the metrics query.
   */
  startTime?: string;
  /**
   * @member {string} [endTime] End time of the metrics query.
   */
  endTime?: string;
  /**
   * @member {string} [timeGrain] Time granularity of the metrics query.
   */
  timeGrain?: string;
  /**
   * @member {boolean} [details] Specify <code>true</code> to include instance
   * details. The default is <code>false</code>.
   */
  details?: boolean;
  /**
   * @member {string} [filter] Return only usages/metrics specified in the
   * filter. Filter conforms to odata syntax. Example: $filter=(name.value eq
   * 'Metric1' or name.value eq 'Metric2') and startTime eq
   * 2014-01-01T00:00:00Z and endTime eq 2014-12-31T23:59:59Z and timeGrain eq
   * duration'[Hour|Minute|Day]'.
   */
  filter?: string;
}

/**
 * @interface
 * An interface representing AppServiceEnvironmentsListWebAppsOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface AppServiceEnvironmentsListWebAppsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [propertiesToInclude] Comma separated list of app
   * properties to include.
   */
  propertiesToInclude?: string;
}

/**
 * @interface
 * An interface representing AppServiceEnvironmentsListUsagesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface AppServiceEnvironmentsListUsagesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [filter] Return only usages/metrics specified in the
   * filter. Filter conforms to odata syntax. Example: $filter=(name.value eq
   * 'Metric1' or name.value eq 'Metric2') and startTime eq
   * 2014-01-01T00:00:00Z and endTime eq 2014-12-31T23:59:59Z and timeGrain eq
   * duration'[Hour|Minute|Day]'.
   */
  filter?: string;
}

/**
 * @interface
 * An interface representing AppServiceEnvironmentsListWorkerPoolInstanceMetricsOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface AppServiceEnvironmentsListWorkerPoolInstanceMetricsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [details] Specify <code>true</code> to include instance
   * details. The default is <code>false</code>.
   */
  details?: boolean;
  /**
   * @member {string} [filter] Return only usages/metrics specified in the
   * filter. Filter conforms to odata syntax. Example: $filter=(name.value eq
   * 'Metric1' or name.value eq 'Metric2') and startTime eq
   * 2014-01-01T00:00:00Z and endTime eq 2014-12-31T23:59:59Z and timeGrain eq
   * duration'[Hour|Minute|Day]'.
   */
  filter?: string;
}

/**
 * @interface
 * An interface representing AppServiceEnvironmentsListWebWorkerMetricsOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface AppServiceEnvironmentsListWebWorkerMetricsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [details] Specify <code>true</code> to include instance
   * details. The default is <code>false</code>.
   */
  details?: boolean;
  /**
   * @member {string} [filter] Return only usages/metrics specified in the
   * filter. Filter conforms to odata syntax. Example: $filter=(name.value eq
   * 'Metric1' or name.value eq 'Metric2') and startTime eq
   * 2014-01-01T00:00:00Z and endTime eq 2014-12-31T23:59:59Z and timeGrain eq
   * duration'[Hour|Minute|Day]'.
   */
  filter?: string;
}

/**
 * @interface
 * An interface representing AppServiceEnvironmentsBeginDeleteMethodOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface AppServiceEnvironmentsBeginDeleteMethodOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [forceDelete] Specify <code>true</code> to force the
   * deletion even if the App Service Environment contains resources. The
   * default is <code>false</code>.
   */
  forceDelete?: boolean;
}

/**
 * @interface
 * An interface representing AppServicePlansListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface AppServicePlansListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [detailed] Specify <code>true</code> to return all App
   * Service plan properties. The default is <code>false</code>, which returns
   * a subset of the properties.
   * Retrieval of all properties may increase the API latency.
   */
  detailed?: boolean;
}

/**
 * @interface
 * An interface representing AppServicePlansListMetricsOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface AppServicePlansListMetricsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [details] Specify <code>true</code> to include instance
   * details. The default is <code>false</code>.
   */
  details?: boolean;
  /**
   * @member {string} [filter] Return only usages/metrics specified in the
   * filter. Filter conforms to odata syntax. Example: $filter=(name.value eq
   * 'Metric1' or name.value eq 'Metric2') and startTime eq
   * 2014-01-01T00:00:00Z and endTime eq 2014-12-31T23:59:59Z and timeGrain eq
   * duration'[Hour|Minute|Day]'.
   */
  filter?: string;
}

/**
 * @interface
 * An interface representing AppServicePlansRestartWebAppsOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface AppServicePlansRestartWebAppsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [softRestart] Specify <code>true</code> to performa a
   * soft restart, applies the configuration settings and restarts the apps if
   * necessary. The default is <code>false</code>, which always restarts and
   * reprovisions the apps
   */
  softRestart?: boolean;
}

/**
 * @interface
 * An interface representing AppServicePlansListWebAppsOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface AppServicePlansListWebAppsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [skipToken] Skip to a web app in the list of webapps
   * associated with app service plan. If specified, the resulting list will
   * contain web apps starting from (including) the skipToken. Otherwise, the
   * resulting list contains web apps from the start of the list
   */
  skipToken?: string;
  /**
   * @member {string} [filter] Supported filter: $filter=state eq running.
   * Returns only web apps that are currently running
   */
  filter?: string;
  /**
   * @member {string} [top] List page size. If specified, results are paged.
   */
  top?: string;
}

/**
 * @interface
 * An interface representing AppServicePlansListUsagesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface AppServicePlansListUsagesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [filter] Return only usages/metrics specified in the
   * filter. Filter conforms to odata syntax. Example: $filter=(name.value eq
   * 'Metric1' or name.value eq 'Metric2').
   */
  filter?: string;
}

/**
 * @interface
 * An interface representing WebSiteManagementClientOptions.
 * @extends AzureServiceClientOptions
 */
export interface WebSiteManagementClientOptions extends AzureServiceClientOptions {
  /**
   * @member {string} [baseUri]
   */
  baseUri?: string;
}


/**
 * @interface
 * An interface representing the AppServiceCertificateOrderCollection.
 * Collection of certitificate orders.
 *
 * @extends Array<AppServiceCertificateOrder>
 */
export interface AppServiceCertificateOrderCollection extends Array<AppServiceCertificateOrder> {
  /**
   * @member {string} [nextLink] Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the AppServiceCertificateCollection.
 * Collection of certitificateorder certificates.
 *
 * @extends Array<AppServiceCertificateResource>
 */
export interface AppServiceCertificateCollection extends Array<AppServiceCertificateResource> {
  /**
   * @member {string} [nextLink] Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the CsmOperationCollection.
 * Collection of Azure resource manager operation metadata.
 *
 * @extends Array<CsmOperationDescription>
 */
export interface CsmOperationCollection extends Array<CsmOperationDescription> {
  /**
   * @member {string} [nextLink] Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the DomainCollection.
 * Collection of domains.
 *
 * @extends Array<Domain>
 */
export interface DomainCollection extends Array<Domain> {
  /**
   * @member {string} [nextLink] Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the NameIdentifierCollection.
 * Collection of domain name identifiers.
 *
 * @extends Array<NameIdentifier>
 */
export interface NameIdentifierCollection extends Array<NameIdentifier> {
  /**
   * @member {string} [nextLink] Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the DomainOwnershipIdentifierCollection.
 * Collection of domain ownership identifiers.
 *
 * @extends Array<DomainOwnershipIdentifier>
 */
export interface DomainOwnershipIdentifierCollection extends Array<DomainOwnershipIdentifier> {
  /**
   * @member {string} [nextLink] Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the TopLevelDomainCollection.
 * Collection of Top-level domains.
 *
 * @extends Array<TopLevelDomain>
 */
export interface TopLevelDomainCollection extends Array<TopLevelDomain> {
  /**
   * @member {string} [nextLink] Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the TldLegalAgreementCollection.
 * Collection of top-level domain legal agreements.
 *
 * @extends Array<TldLegalAgreement>
 */
export interface TldLegalAgreementCollection extends Array<TldLegalAgreement> {
  /**
   * @member {string} [nextLink] Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the CertificateCollection.
 * Collection of certificates.
 *
 * @extends Array<Certificate>
 */
export interface CertificateCollection extends Array<Certificate> {
  /**
   * @member {string} [nextLink] Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the DeletedWebAppCollection.
 * Collection of deleted apps.
 *
 * @extends Array<DeletedSite>
 */
export interface DeletedWebAppCollection extends Array<DeletedSite> {
  /**
   * @member {string} [nextLink] Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the DetectorResponseCollection.
 * Collection of detector responses
 *
 * @extends Array<DetectorResponse>
 */
export interface DetectorResponseCollection extends Array<DetectorResponse> {
  /**
   * @member {string} [nextLink] Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the DiagnosticCategoryCollection.
 * Collection of Diagnostic Categories
 *
 * @extends Array<DiagnosticCategory>
 */
export interface DiagnosticCategoryCollection extends Array<DiagnosticCategory> {
  /**
   * @member {string} [nextLink] Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the DiagnosticAnalysisCollection.
 * Collection of Diagnostic Analyses
 *
 * @extends Array<AnalysisDefinition>
 */
export interface DiagnosticAnalysisCollection extends Array<AnalysisDefinition> {
  /**
   * @member {string} [nextLink] Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the DiagnosticDetectorCollection.
 * Collection of Diagnostic Detectors
 *
 * @extends Array<DetectorDefinition>
 */
export interface DiagnosticDetectorCollection extends Array<DetectorDefinition> {
  /**
   * @member {string} [nextLink] Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the ApplicationStackCollection.
 * Collection of Application Stacks
 *
 * @extends Array<ApplicationStack>
 */
export interface ApplicationStackCollection extends Array<ApplicationStack> {
  /**
   * @member {string} [nextLink] Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the RecommendationCollection.
 * Collection of recommendations.
 *
 * @extends Array<Recommendation>
 */
export interface RecommendationCollection extends Array<Recommendation> {
  /**
   * @member {string} [nextLink] Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the SourceControlCollection.
 * Collection of source controls.
 *
 * @extends Array<SourceControl>
 */
export interface SourceControlCollection extends Array<SourceControl> {
  /**
   * @member {string} [nextLink] Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the BillingMeterCollection.
 * Collection of Billing Meters
 *
 * @extends Array<BillingMeter>
 */
export interface BillingMeterCollection extends Array<BillingMeter> {
  /**
   * @member {string} [nextLink] Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the GeoRegionCollection.
 * Collection of geographical regions.
 *
 * @extends Array<GeoRegion>
 */
export interface GeoRegionCollection extends Array<GeoRegion> {
  /**
   * @member {string} [nextLink] Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the IdentifierCollection.
 * Collection of identifiers.
 *
 * @extends Array<Identifier>
 */
export interface IdentifierCollection extends Array<Identifier> {
  /**
   * @member {string} [nextLink] Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the PremierAddOnOfferCollection.
 * Collection of premier add-on offers.
 *
 * @extends Array<PremierAddOnOffer>
 */
export interface PremierAddOnOfferCollection extends Array<PremierAddOnOffer> {
  /**
   * @member {string} [nextLink] Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the WebAppCollection.
 * Collection of App Service apps.
 *
 * @extends Array<Site>
 */
export interface WebAppCollection extends Array<Site> {
  /**
   * @member {string} [nextLink] Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the BackupItemCollection.
 * Collection of backup items.
 *
 * @extends Array<BackupItem>
 */
export interface BackupItemCollection extends Array<BackupItem> {
  /**
   * @member {string} [nextLink] Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the SiteConfigResourceCollection.
 * Collection of site configurations.
 *
 * @extends Array<SiteConfigResource>
 */
export interface SiteConfigResourceCollection extends Array<SiteConfigResource> {
  /**
   * @member {string} [nextLink] Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the SiteConfigurationSnapshotInfoCollection.
 * Collection of metadata for the app configuration snapshots that can be
 * restored.
 *
 * @extends Array<SiteConfigurationSnapshotInfo>
 */
export interface SiteConfigurationSnapshotInfoCollection extends Array<SiteConfigurationSnapshotInfo> {
  /**
   * @member {string} [nextLink] Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the ContinuousWebJobCollection.
 * Collection of Kudu continuous web job information elements.
 *
 * @extends Array<ContinuousWebJob>
 */
export interface ContinuousWebJobCollection extends Array<ContinuousWebJob> {
  /**
   * @member {string} [nextLink] Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the DeploymentCollection.
 * Collection of app deployments.
 *
 * @extends Array<Deployment>
 */
export interface DeploymentCollection extends Array<Deployment> {
  /**
   * @member {string} [nextLink] Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the FunctionEnvelopeCollection.
 * Collection of Kudu function information elements.
 *
 * @extends Array<FunctionEnvelope>
 */
export interface FunctionEnvelopeCollection extends Array<FunctionEnvelope> {
  /**
   * @member {string} [nextLink] Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the HostNameBindingCollection.
 * Collection of hostname bindings.
 *
 * @extends Array<HostNameBinding>
 */
export interface HostNameBindingCollection extends Array<HostNameBinding> {
  /**
   * @member {string} [nextLink] Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the WebAppInstanceCollection.
 * Collection of app instances.
 *
 * @extends Array<SiteInstance>
 */
export interface WebAppInstanceCollection extends Array<SiteInstance> {
  /**
   * @member {string} [nextLink] Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the ProcessInfoCollection.
 * Collection of Kudu process information elements.
 *
 * @extends Array<ProcessInfo>
 */
export interface ProcessInfoCollection extends Array<ProcessInfo> {
  /**
   * @member {string} [nextLink] Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the ProcessModuleInfoCollection.
 * Collection of Kudu thread information elements.
 *
 * @extends Array<ProcessModuleInfo>
 */
export interface ProcessModuleInfoCollection extends Array<ProcessModuleInfo> {
  /**
   * @member {string} [nextLink] Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the ProcessThreadInfoCollection.
 * Collection of Kudu thread information elements.
 *
 * @extends Array<ProcessThreadInfo>
 */
export interface ProcessThreadInfoCollection extends Array<ProcessThreadInfo> {
  /**
   * @member {string} [nextLink] Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the ResourceMetricDefinitionCollection.
 * Collection of metric definitions.
 *
 * @extends Array<ResourceMetricDefinition>
 */
export interface ResourceMetricDefinitionCollection extends Array<ResourceMetricDefinition> {
  /**
   * @member {string} [nextLink] Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the ResourceMetricCollection.
 * Collection of metric responses.
 *
 * @extends Array<ResourceMetric>
 */
export interface ResourceMetricCollection extends Array<ResourceMetric> {
  /**
   * @member {string} [nextLink] Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the PerfMonCounterCollection.
 * Collection of performance monitor counters.
 *
 * @extends Array<PerfMonResponse>
 */
export interface PerfMonCounterCollection extends Array<PerfMonResponse> {
  /**
   * @member {string} [nextLink] Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the PublicCertificateCollection.
 * Collection of public certificates
 *
 * @extends Array<PublicCertificate>
 */
export interface PublicCertificateCollection extends Array<PublicCertificate> {
  /**
   * @member {string} [nextLink] Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the SiteExtensionInfoCollection.
 * Collection of Kudu site extension information elements.
 *
 * @extends Array<SiteExtensionInfo>
 */
export interface SiteExtensionInfoCollection extends Array<SiteExtensionInfo> {
  /**
   * @member {string} [nextLink] Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the SlotDifferenceCollection.
 * Collection of slot differences.
 *
 * @extends Array<SlotDifference>
 */
export interface SlotDifferenceCollection extends Array<SlotDifference> {
  /**
   * @member {string} [nextLink] Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the SnapshotCollection.
 * Collection of snapshots which can be used to revert an app to a previous
 * time.
 *
 * @extends Array<Snapshot>
 */
export interface SnapshotCollection extends Array<Snapshot> {
  /**
   * @member {string} [nextLink] Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the TriggeredWebJobCollection.
 * Collection of Kudu continuous web job information elements.
 *
 * @extends Array<TriggeredWebJob>
 */
export interface TriggeredWebJobCollection extends Array<TriggeredWebJob> {
  /**
   * @member {string} [nextLink] Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the TriggeredJobHistoryCollection.
 * Collection of Kudu continuous web job information elements.
 *
 * @extends Array<TriggeredJobHistory>
 */
export interface TriggeredJobHistoryCollection extends Array<TriggeredJobHistory> {
  /**
   * @member {string} [nextLink] Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the CsmUsageQuotaCollection.
 * Collection of CSM usage quotas.
 *
 * @extends Array<CsmUsageQuota>
 */
export interface CsmUsageQuotaCollection extends Array<CsmUsageQuota> {
  /**
   * @member {string} [nextLink] Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the WebJobCollection.
 * Collection of Kudu web job information elements.
 *
 * @extends Array<WebJob>
 */
export interface WebJobCollection extends Array<WebJob> {
  /**
   * @member {string} [nextLink] Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the AppServiceEnvironmentCollection.
 * Collection of App Service Environments.
 *
 * @extends Array<AppServiceEnvironmentResource>
 */
export interface AppServiceEnvironmentCollection extends Array<AppServiceEnvironmentResource> {
  /**
   * @member {string} [nextLink] Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the StampCapacityCollection.
 * Collection of stamp capacities.
 *
 * @extends Array<StampCapacity>
 */
export interface StampCapacityCollection extends Array<StampCapacity> {
  /**
   * @member {string} [nextLink] Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the WorkerPoolCollection.
 * Collection of worker pools.
 *
 * @extends Array<WorkerPoolResource>
 */
export interface WorkerPoolCollection extends Array<WorkerPoolResource> {
  /**
   * @member {string} [nextLink] Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the SkuInfoCollection.
 * Collection of SKU information.
 *
 * @extends Array<SkuInfo>
 */
export interface SkuInfoCollection extends Array<SkuInfo> {
  /**
   * @member {string} [nextLink] Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the UsageCollection.
 * Collection of usages.
 *
 * @extends Array<Usage>
 */
export interface UsageCollection extends Array<Usage> {
  /**
   * @member {string} [nextLink] Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the AppServicePlanCollection.
 * Collection of App Service plans.
 *
 * @extends Array<AppServicePlan>
 */
export interface AppServicePlanCollection extends Array<AppServicePlan> {
  /**
   * @member {string} [nextLink] Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the ResourceCollection.
 * Collection of resources.
 *
 * @extends Array<string>
 */
export interface ResourceCollection extends Array<string> {
  /**
   * @member {string} [nextLink] Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the HybridConnectionCollection.
 * Collection of hostname bindings.
 *
 * @extends Array<HybridConnection>
 */
export interface HybridConnectionCollection extends Array<HybridConnection> {
  /**
   * @member {string} [nextLink] Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * An interface representing the ResourceHealthMetadataCollection.
 * Collection of resource health metadata.
 *
 * @extends Array<ResourceHealthMetadata>
 */
export interface ResourceHealthMetadataCollection extends Array<ResourceHealthMetadata> {
  /**
   * @member {string} [nextLink] Link to next page of resources.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly nextLink?: string;
}

/**
 * Defines values for KeyVaultSecretStatus.
 * Possible values include: 'Initialized', 'WaitingOnCertificateOrder',
 * 'Succeeded', 'CertificateOrderFailed', 'OperationNotPermittedOnKeyVault',
 * 'AzureServiceUnauthorizedToAccessKeyVault', 'KeyVaultDoesNotExist',
 * 'KeyVaultSecretDoesNotExist', 'UnknownError', 'ExternalPrivateKey',
 * 'Unknown'
 * @readonly
 * @enum {string}
 */
export enum KeyVaultSecretStatus {
  Initialized = 'Initialized',
  WaitingOnCertificateOrder = 'WaitingOnCertificateOrder',
  Succeeded = 'Succeeded',
  CertificateOrderFailed = 'CertificateOrderFailed',
  OperationNotPermittedOnKeyVault = 'OperationNotPermittedOnKeyVault',
  AzureServiceUnauthorizedToAccessKeyVault = 'AzureServiceUnauthorizedToAccessKeyVault',
  KeyVaultDoesNotExist = 'KeyVaultDoesNotExist',
  KeyVaultSecretDoesNotExist = 'KeyVaultSecretDoesNotExist',
  UnknownError = 'UnknownError',
  ExternalPrivateKey = 'ExternalPrivateKey',
  Unknown = 'Unknown',
}

/**
 * Defines values for CertificateProductType.
 * Possible values include: 'StandardDomainValidatedSsl',
 * 'StandardDomainValidatedWildCardSsl'
 * @readonly
 * @enum {string}
 */
export enum CertificateProductType {
  StandardDomainValidatedSsl = 'StandardDomainValidatedSsl',
  StandardDomainValidatedWildCardSsl = 'StandardDomainValidatedWildCardSsl',
}

/**
 * Defines values for ProvisioningState.
 * Possible values include: 'Succeeded', 'Failed', 'Canceled', 'InProgress',
 * 'Deleting'
 * @readonly
 * @enum {string}
 */
export enum ProvisioningState {
  Succeeded = 'Succeeded',
  Failed = 'Failed',
  Canceled = 'Canceled',
  InProgress = 'InProgress',
  Deleting = 'Deleting',
}

/**
 * Defines values for CertificateOrderStatus.
 * Possible values include: 'Pendingissuance', 'Issued', 'Revoked', 'Canceled',
 * 'Denied', 'Pendingrevocation', 'PendingRekey', 'Unused', 'Expired',
 * 'NotSubmitted'
 * @readonly
 * @enum {string}
 */
export enum CertificateOrderStatus {
  Pendingissuance = 'Pendingissuance',
  Issued = 'Issued',
  Revoked = 'Revoked',
  Canceled = 'Canceled',
  Denied = 'Denied',
  Pendingrevocation = 'Pendingrevocation',
  PendingRekey = 'PendingRekey',
  Unused = 'Unused',
  Expired = 'Expired',
  NotSubmitted = 'NotSubmitted',
}

/**
 * Defines values for CertificateOrderActionType.
 * Possible values include: 'CertificateIssued', 'CertificateOrderCanceled',
 * 'CertificateOrderCreated', 'CertificateRevoked', 'DomainValidationComplete',
 * 'FraudDetected', 'OrgNameChange', 'OrgValidationComplete', 'SanDrop',
 * 'FraudCleared', 'CertificateExpired', 'CertificateExpirationWarning',
 * 'FraudDocumentationRequired', 'Unknown'
 * @readonly
 * @enum {string}
 */
export enum CertificateOrderActionType {
  CertificateIssued = 'CertificateIssued',
  CertificateOrderCanceled = 'CertificateOrderCanceled',
  CertificateOrderCreated = 'CertificateOrderCreated',
  CertificateRevoked = 'CertificateRevoked',
  DomainValidationComplete = 'DomainValidationComplete',
  FraudDetected = 'FraudDetected',
  OrgNameChange = 'OrgNameChange',
  OrgValidationComplete = 'OrgValidationComplete',
  SanDrop = 'SanDrop',
  FraudCleared = 'FraudCleared',
  CertificateExpired = 'CertificateExpired',
  CertificateExpirationWarning = 'CertificateExpirationWarning',
  FraudDocumentationRequired = 'FraudDocumentationRequired',
  Unknown = 'Unknown',
}

/**
 * Defines values for RouteType.
 * Possible values include: 'DEFAULT', 'INHERITED', 'STATIC'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: RouteType = <RouteType>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum RouteType {
  DEFAULT = 'DEFAULT',
  INHERITED = 'INHERITED',
  STATIC = 'STATIC',
}

/**
 * Defines values for ManagedServiceIdentityType.
 * Possible values include: 'SystemAssigned', 'UserAssigned'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: ManagedServiceIdentityType =
 * <ManagedServiceIdentityType>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum ManagedServiceIdentityType {
  SystemAssigned = 'SystemAssigned',
  UserAssigned = 'UserAssigned',
}

/**
 * Defines values for IpFilterTag.
 * Possible values include: 'Default', 'XffProxy'
 * @readonly
 * @enum {string}
 */
export enum IpFilterTag {
  Default = 'Default',
  XffProxy = 'XffProxy',
}

/**
 * Defines values for AutoHealActionType.
 * Possible values include: 'Recycle', 'LogEvent', 'CustomAction'
 * @readonly
 * @enum {string}
 */
export enum AutoHealActionType {
  Recycle = 'Recycle',
  LogEvent = 'LogEvent',
  CustomAction = 'CustomAction',
}

/**
 * Defines values for ConnectionStringType.
 * Possible values include: 'MySql', 'SQLServer', 'SQLAzure', 'Custom',
 * 'NotificationHub', 'ServiceBus', 'EventHub', 'ApiHub', 'DocDb',
 * 'RedisCache', 'PostgreSQL'
 * @readonly
 * @enum {string}
 */
export enum ConnectionStringType {
  MySql = 'MySql',
  SQLServer = 'SQLServer',
  SQLAzure = 'SQLAzure',
  Custom = 'Custom',
  NotificationHub = 'NotificationHub',
  ServiceBus = 'ServiceBus',
  EventHub = 'EventHub',
  ApiHub = 'ApiHub',
  DocDb = 'DocDb',
  RedisCache = 'RedisCache',
  PostgreSQL = 'PostgreSQL',
}

/**
 * Defines values for AzureStorageType.
 * Possible values include: 'AzureFiles', 'AzureBlob'
 * @readonly
 * @enum {string}
 */
export enum AzureStorageType {
  AzureFiles = 'AzureFiles',
  AzureBlob = 'AzureBlob',
}

/**
 * Defines values for AzureStorageState.
 * Possible values include: 'Ok', 'InvalidCredentials', 'InvalidShare'
 * @readonly
 * @enum {string}
 */
export enum AzureStorageState {
  Ok = 'Ok',
  InvalidCredentials = 'InvalidCredentials',
  InvalidShare = 'InvalidShare',
}

/**
 * Defines values for ScmType.
 * Possible values include: 'None', 'Dropbox', 'Tfs', 'LocalGit', 'GitHub',
 * 'CodePlexGit', 'CodePlexHg', 'BitbucketGit', 'BitbucketHg', 'ExternalGit',
 * 'ExternalHg', 'OneDrive', 'VSO'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: ScmType = <ScmType>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum ScmType {
  None = 'None',
  Dropbox = 'Dropbox',
  Tfs = 'Tfs',
  LocalGit = 'LocalGit',
  GitHub = 'GitHub',
  CodePlexGit = 'CodePlexGit',
  CodePlexHg = 'CodePlexHg',
  BitbucketGit = 'BitbucketGit',
  BitbucketHg = 'BitbucketHg',
  ExternalGit = 'ExternalGit',
  ExternalHg = 'ExternalHg',
  OneDrive = 'OneDrive',
  VSO = 'VSO',
}

/**
 * Defines values for ManagedPipelineMode.
 * Possible values include: 'Integrated', 'Classic'
 * @readonly
 * @enum {string}
 */
export enum ManagedPipelineMode {
  Integrated = 'Integrated',
  Classic = 'Classic',
}

/**
 * Defines values for SiteLoadBalancing.
 * Possible values include: 'WeightedRoundRobin', 'LeastRequests',
 * 'LeastResponseTime', 'WeightedTotalTraffic', 'RequestHash'
 * @readonly
 * @enum {string}
 */
export enum SiteLoadBalancing {
  WeightedRoundRobin = 'WeightedRoundRobin',
  LeastRequests = 'LeastRequests',
  LeastResponseTime = 'LeastResponseTime',
  WeightedTotalTraffic = 'WeightedTotalTraffic',
  RequestHash = 'RequestHash',
}

/**
 * Defines values for SupportedTlsVersions.
 * Possible values include: '1.0', '1.1', '1.2'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: SupportedTlsVersions =
 * <SupportedTlsVersions>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum SupportedTlsVersions {
  OneFullStopZero = '1.0',
  OneFullStopOne = '1.1',
  OneFullStopTwo = '1.2',
}

/**
 * Defines values for FtpsState.
 * Possible values include: 'AllAllowed', 'FtpsOnly', 'Disabled'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: FtpsState = <FtpsState>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum FtpsState {
  AllAllowed = 'AllAllowed',
  FtpsOnly = 'FtpsOnly',
  Disabled = 'Disabled',
}

/**
 * Defines values for SslState.
 * Possible values include: 'Disabled', 'SniEnabled', 'IpBasedEnabled'
 * @readonly
 * @enum {string}
 */
export enum SslState {
  Disabled = 'Disabled',
  SniEnabled = 'SniEnabled',
  IpBasedEnabled = 'IpBasedEnabled',
}

/**
 * Defines values for HostType.
 * Possible values include: 'Standard', 'Repository'
 * @readonly
 * @enum {string}
 */
export enum HostType {
  Standard = 'Standard',
  Repository = 'Repository',
}

/**
 * Defines values for UsageState.
 * Possible values include: 'Normal', 'Exceeded'
 * @readonly
 * @enum {string}
 */
export enum UsageState {
  Normal = 'Normal',
  Exceeded = 'Exceeded',
}

/**
 * Defines values for SiteAvailabilityState.
 * Possible values include: 'Normal', 'Limited', 'DisasterRecoveryMode'
 * @readonly
 * @enum {string}
 */
export enum SiteAvailabilityState {
  Normal = 'Normal',
  Limited = 'Limited',
  DisasterRecoveryMode = 'DisasterRecoveryMode',
}

/**
 * Defines values for StatusOptions.
 * Possible values include: 'Ready', 'Pending', 'Creating'
 * @readonly
 * @enum {string}
 */
export enum StatusOptions {
  Ready = 'Ready',
  Pending = 'Pending',
  Creating = 'Creating',
}

/**
 * Defines values for DomainStatus.
 * Possible values include: 'Active', 'Awaiting', 'Cancelled', 'Confiscated',
 * 'Disabled', 'Excluded', 'Expired', 'Failed', 'Held', 'Locked', 'Parked',
 * 'Pending', 'Reserved', 'Reverted', 'Suspended', 'Transferred', 'Unknown',
 * 'Unlocked', 'Unparked', 'Updated', 'JsonConverterFailed'
 * @readonly
 * @enum {string}
 */
export enum DomainStatus {
  Active = 'Active',
  Awaiting = 'Awaiting',
  Cancelled = 'Cancelled',
  Confiscated = 'Confiscated',
  Disabled = 'Disabled',
  Excluded = 'Excluded',
  Expired = 'Expired',
  Failed = 'Failed',
  Held = 'Held',
  Locked = 'Locked',
  Parked = 'Parked',
  Pending = 'Pending',
  Reserved = 'Reserved',
  Reverted = 'Reverted',
  Suspended = 'Suspended',
  Transferred = 'Transferred',
  Unknown = 'Unknown',
  Unlocked = 'Unlocked',
  Unparked = 'Unparked',
  Updated = 'Updated',
  JsonConverterFailed = 'JsonConverterFailed',
}

/**
 * Defines values for AzureResourceType.
 * Possible values include: 'Website', 'TrafficManager'
 * @readonly
 * @enum {string}
 */
export enum AzureResourceType {
  Website = 'Website',
  TrafficManager = 'TrafficManager',
}

/**
 * Defines values for CustomHostNameDnsRecordType.
 * Possible values include: 'CName', 'A'
 * @readonly
 * @enum {string}
 */
export enum CustomHostNameDnsRecordType {
  CName = 'CName',
  A = 'A',
}

/**
 * Defines values for HostNameType.
 * Possible values include: 'Verified', 'Managed'
 * @readonly
 * @enum {string}
 */
export enum HostNameType {
  Verified = 'Verified',
  Managed = 'Managed',
}

/**
 * Defines values for DnsType.
 * Possible values include: 'AzureDns', 'DefaultDomainRegistrarDns'
 * @readonly
 * @enum {string}
 */
export enum DnsType {
  AzureDns = 'AzureDns',
  DefaultDomainRegistrarDns = 'DefaultDomainRegistrarDns',
}

/**
 * Defines values for DomainType.
 * Possible values include: 'Regular', 'SoftDeleted'
 * @readonly
 * @enum {string}
 */
export enum DomainType {
  Regular = 'Regular',
  SoftDeleted = 'SoftDeleted',
}

/**
 * Defines values for HostingEnvironmentStatus.
 * Possible values include: 'Preparing', 'Ready', 'Scaling', 'Deleting'
 * @readonly
 * @enum {string}
 */
export enum HostingEnvironmentStatus {
  Preparing = 'Preparing',
  Ready = 'Ready',
  Scaling = 'Scaling',
  Deleting = 'Deleting',
}

/**
 * Defines values for InternalLoadBalancingMode.
 * Possible values include: 'None', 'Web', 'Publishing'
 * @readonly
 * @enum {string}
 */
export enum InternalLoadBalancingMode {
  None = 'None',
  Web = 'Web',
  Publishing = 'Publishing',
}

/**
 * Defines values for ComputeModeOptions.
 * Possible values include: 'Shared', 'Dedicated', 'Dynamic'
 * @readonly
 * @enum {string}
 */
export enum ComputeModeOptions {
  Shared = 'Shared',
  Dedicated = 'Dedicated',
  Dynamic = 'Dynamic',
}

/**
 * Defines values for WorkerSizeOptions.
 * Possible values include: 'Small', 'Medium', 'Large', 'D1', 'D2', 'D3',
 * 'Default'
 * @readonly
 * @enum {string}
 */
export enum WorkerSizeOptions {
  Small = 'Small',
  Medium = 'Medium',
  Large = 'Large',
  D1 = 'D1',
  D2 = 'D2',
  D3 = 'D3',
  Default = 'Default',
}

/**
 * Defines values for AccessControlEntryAction.
 * Possible values include: 'Permit', 'Deny'
 * @readonly
 * @enum {string}
 */
export enum AccessControlEntryAction {
  Permit = 'Permit',
  Deny = 'Deny',
}

/**
 * Defines values for OperationStatus.
 * Possible values include: 'InProgress', 'Failed', 'Succeeded', 'TimedOut',
 * 'Created'
 * @readonly
 * @enum {string}
 */
export enum OperationStatus {
  InProgress = 'InProgress',
  Failed = 'Failed',
  Succeeded = 'Succeeded',
  TimedOut = 'TimedOut',
  Created = 'Created',
}

/**
 * Defines values for IssueType.
 * Possible values include: 'ServiceIncident', 'AppDeployment', 'AppCrash',
 * 'RuntimeIssueDetected', 'AseDeployment', 'UserIssue', 'PlatformIssue',
 * 'Other'
 * @readonly
 * @enum {string}
 */
export enum IssueType {
  ServiceIncident = 'ServiceIncident',
  AppDeployment = 'AppDeployment',
  AppCrash = 'AppCrash',
  RuntimeIssueDetected = 'RuntimeIssueDetected',
  AseDeployment = 'AseDeployment',
  UserIssue = 'UserIssue',
  PlatformIssue = 'PlatformIssue',
  Other = 'Other',
}

/**
 * Defines values for SolutionType.
 * Possible values include: 'QuickSolution', 'DeepInvestigation',
 * 'BestPractices'
 * @readonly
 * @enum {string}
 */
export enum SolutionType {
  QuickSolution = 'QuickSolution',
  DeepInvestigation = 'DeepInvestigation',
  BestPractices = 'BestPractices',
}

/**
 * Defines values for RenderingType.
 * Possible values include: 'NoGraph', 'Table', 'TimeSeries',
 * 'TimeSeriesPerInstance'
 * @readonly
 * @enum {string}
 */
export enum RenderingType {
  NoGraph = 'NoGraph',
  Table = 'Table',
  TimeSeries = 'TimeSeries',
  TimeSeriesPerInstance = 'TimeSeriesPerInstance',
}

/**
 * Defines values for ResourceScopeType.
 * Possible values include: 'ServerFarm', 'Subscription', 'WebSite'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: ResourceScopeType =
 * <ResourceScopeType>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum ResourceScopeType {
  ServerFarm = 'ServerFarm',
  Subscription = 'Subscription',
  WebSite = 'WebSite',
}

/**
 * Defines values for NotificationLevel.
 * Possible values include: 'Critical', 'Warning', 'Information',
 * 'NonUrgentSuggestion'
 * @readonly
 * @enum {string}
 */
export enum NotificationLevel {
  Critical = 'Critical',
  Warning = 'Warning',
  Information = 'Information',
  NonUrgentSuggestion = 'NonUrgentSuggestion',
}

/**
 * Defines values for Channels.
 * Possible values include: 'Notification', 'Api', 'Email', 'Webhook', 'All'
 * @readonly
 * @enum {string}
 */
export enum Channels {
  Notification = 'Notification',
  Api = 'Api',
  Email = 'Email',
  Webhook = 'Webhook',
  All = 'All',
}

/**
 * Defines values for AppServicePlanRestrictions.
 * Possible values include: 'None', 'Free', 'Shared', 'Basic', 'Standard',
 * 'Premium'
 * @readonly
 * @enum {string}
 */
export enum AppServicePlanRestrictions {
  None = 'None',
  Free = 'Free',
  Shared = 'Shared',
  Basic = 'Basic',
  Standard = 'Standard',
  Premium = 'Premium',
}

/**
 * Defines values for InAvailabilityReasonType.
 * Possible values include: 'Invalid', 'AlreadyExists'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: InAvailabilityReasonType =
 * <InAvailabilityReasonType>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum InAvailabilityReasonType {
  Invalid = 'Invalid',
  AlreadyExists = 'AlreadyExists',
}

/**
 * Defines values for CheckNameResourceTypes.
 * Possible values include: 'Site', 'Slot', 'HostingEnvironment',
 * 'PublishingUser', 'Microsoft.Web/sites', 'Microsoft.Web/sites/slots',
 * 'Microsoft.Web/hostingEnvironments', 'Microsoft.Web/publishingUsers'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: CheckNameResourceTypes =
 * <CheckNameResourceTypes>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum CheckNameResourceTypes {
  Site = 'Site',
  Slot = 'Slot',
  HostingEnvironment = 'HostingEnvironment',
  PublishingUser = 'PublishingUser',
  MicrosoftWebsites = 'Microsoft.Web/sites',
  MicrosoftWebsitesslots = 'Microsoft.Web/sites/slots',
  MicrosoftWebhostingEnvironments = 'Microsoft.Web/hostingEnvironments',
  MicrosoftWebpublishingUsers = 'Microsoft.Web/publishingUsers',
}

/**
 * Defines values for ValidateResourceTypes.
 * Possible values include: 'ServerFarm', 'Site'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: ValidateResourceTypes =
 * <ValidateResourceTypes>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum ValidateResourceTypes {
  ServerFarm = 'ServerFarm',
  Site = 'Site',
}

/**
 * Defines values for LogLevel.
 * Possible values include: 'Off', 'Verbose', 'Information', 'Warning', 'Error'
 * @readonly
 * @enum {string}
 */
export enum LogLevel {
  Off = 'Off',
  Verbose = 'Verbose',
  Information = 'Information',
  Warning = 'Warning',
  Error = 'Error',
}

/**
 * Defines values for BackupItemStatus.
 * Possible values include: 'InProgress', 'Failed', 'Succeeded', 'TimedOut',
 * 'Created', 'Skipped', 'PartiallySucceeded', 'DeleteInProgress',
 * 'DeleteFailed', 'Deleted'
 * @readonly
 * @enum {string}
 */
export enum BackupItemStatus {
  InProgress = 'InProgress',
  Failed = 'Failed',
  Succeeded = 'Succeeded',
  TimedOut = 'TimedOut',
  Created = 'Created',
  Skipped = 'Skipped',
  PartiallySucceeded = 'PartiallySucceeded',
  DeleteInProgress = 'DeleteInProgress',
  DeleteFailed = 'DeleteFailed',
  Deleted = 'Deleted',
}

/**
 * Defines values for DatabaseType.
 * Possible values include: 'SqlAzure', 'MySql', 'LocalMySql', 'PostgreSql'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: DatabaseType =
 * <DatabaseType>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum DatabaseType {
  SqlAzure = 'SqlAzure',
  MySql = 'MySql',
  LocalMySql = 'LocalMySql',
  PostgreSql = 'PostgreSql',
}

/**
 * Defines values for FrequencyUnit.
 * Possible values include: 'Day', 'Hour'
 * @readonly
 * @enum {string}
 */
export enum FrequencyUnit {
  Day = 'Day',
  Hour = 'Hour',
}

/**
 * Defines values for ContinuousWebJobStatus.
 * Possible values include: 'Initializing', 'Starting', 'Running',
 * 'PendingRestart', 'Stopped'
 * @readonly
 * @enum {string}
 */
export enum ContinuousWebJobStatus {
  Initializing = 'Initializing',
  Starting = 'Starting',
  Running = 'Running',
  PendingRestart = 'PendingRestart',
  Stopped = 'Stopped',
}

/**
 * Defines values for WebJobType.
 * Possible values include: 'Continuous', 'Triggered'
 * @readonly
 * @enum {string}
 */
export enum WebJobType {
  Continuous = 'Continuous',
  Triggered = 'Triggered',
}

/**
 * Defines values for PublishingProfileFormat.
 * Possible values include: 'FileZilla3', 'WebDeploy', 'Ftp'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: PublishingProfileFormat =
 * <PublishingProfileFormat>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum PublishingProfileFormat {
  FileZilla3 = 'FileZilla3',
  WebDeploy = 'WebDeploy',
  Ftp = 'Ftp',
}

/**
 * Defines values for DnsVerificationTestResult.
 * Possible values include: 'Passed', 'Failed', 'Skipped'
 * @readonly
 * @enum {string}
 */
export enum DnsVerificationTestResult {
  Passed = 'Passed',
  Failed = 'Failed',
  Skipped = 'Skipped',
}

/**
 * Defines values for MSDeployLogEntryType.
 * Possible values include: 'Message', 'Warning', 'Error'
 * @readonly
 * @enum {string}
 */
export enum MSDeployLogEntryType {
  Message = 'Message',
  Warning = 'Warning',
  Error = 'Error',
}

/**
 * Defines values for MSDeployProvisioningState.
 * Possible values include: 'accepted', 'running', 'succeeded', 'failed',
 * 'canceled'
 * @readonly
 * @enum {string}
 */
export enum MSDeployProvisioningState {
  Accepted = 'accepted',
  Running = 'running',
  Succeeded = 'succeeded',
  Failed = 'failed',
  Canceled = 'canceled',
}

/**
 * Defines values for MySqlMigrationType.
 * Possible values include: 'LocalToRemote', 'RemoteToLocal'
 * @readonly
 * @enum {string}
 */
export enum MySqlMigrationType {
  LocalToRemote = 'LocalToRemote',
  RemoteToLocal = 'RemoteToLocal',
}

/**
 * Defines values for PublicCertificateLocation.
 * Possible values include: 'CurrentUserMy', 'LocalMachineMy', 'Unknown'
 * @readonly
 * @enum {string}
 */
export enum PublicCertificateLocation {
  CurrentUserMy = 'CurrentUserMy',
  LocalMachineMy = 'LocalMachineMy',
  Unknown = 'Unknown',
}

/**
 * Defines values for BackupRestoreOperationType.
 * Possible values include: 'Default', 'Clone', 'Relocation', 'Snapshot',
 * 'CloudFS'
 * @readonly
 * @enum {string}
 */
export enum BackupRestoreOperationType {
  Default = 'Default',
  Clone = 'Clone',
  Relocation = 'Relocation',
  Snapshot = 'Snapshot',
  CloudFS = 'CloudFS',
}

/**
 * Defines values for UnauthenticatedClientAction.
 * Possible values include: 'RedirectToLoginPage', 'AllowAnonymous'
 * @readonly
 * @enum {string}
 */
export enum UnauthenticatedClientAction {
  RedirectToLoginPage = 'RedirectToLoginPage',
  AllowAnonymous = 'AllowAnonymous',
}

/**
 * Defines values for BuiltInAuthenticationProvider.
 * Possible values include: 'AzureActiveDirectory', 'Facebook', 'Google',
 * 'MicrosoftAccount', 'Twitter'
 * @readonly
 * @enum {string}
 */
export enum BuiltInAuthenticationProvider {
  AzureActiveDirectory = 'AzureActiveDirectory',
  Facebook = 'Facebook',
  Google = 'Google',
  MicrosoftAccount = 'MicrosoftAccount',
  Twitter = 'Twitter',
}

/**
 * Defines values for CloneAbilityResult.
 * Possible values include: 'Cloneable', 'PartiallyCloneable', 'NotCloneable'
 * @readonly
 * @enum {string}
 */
export enum CloneAbilityResult {
  Cloneable = 'Cloneable',
  PartiallyCloneable = 'PartiallyCloneable',
  NotCloneable = 'NotCloneable',
}

/**
 * Defines values for SiteExtensionType.
 * Possible values include: 'Gallery', 'WebRoot'
 * @readonly
 * @enum {string}
 */
export enum SiteExtensionType {
  Gallery = 'Gallery',
  WebRoot = 'WebRoot',
}

/**
 * Defines values for TriggeredWebJobStatus.
 * Possible values include: 'Success', 'Failed', 'Error'
 * @readonly
 * @enum {string}
 */
export enum TriggeredWebJobStatus {
  Success = 'Success',
  Failed = 'Failed',
  Error = 'Error',
}

/**
 * Defines values for SkuName.
 * Possible values include: 'Free', 'Shared', 'Basic', 'Standard', 'Premium',
 * 'Dynamic', 'Isolated', 'PremiumV2', 'ElasticPremium', 'ElasticIsolated'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: SkuName = <SkuName>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum SkuName {
  Free = 'Free',
  Shared = 'Shared',
  Basic = 'Basic',
  Standard = 'Standard',
  Premium = 'Premium',
  Dynamic = 'Dynamic',
  Isolated = 'Isolated',
  PremiumV2 = 'PremiumV2',
  ElasticPremium = 'ElasticPremium',
  ElasticIsolated = 'ElasticIsolated',
}

/**
 * Defines values for OsTypeSelected.
 * Possible values include: 'Windows', 'Linux', 'WindowsFunctions',
 * 'LinuxFunctions'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: OsTypeSelected =
 * <OsTypeSelected>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum OsTypeSelected {
  Windows = 'Windows',
  Linux = 'Linux',
  WindowsFunctions = 'WindowsFunctions',
  LinuxFunctions = 'LinuxFunctions',
}

/**
 * Defines values for OsTypeSelected1.
 * Possible values include: 'Windows', 'Linux', 'WindowsFunctions',
 * 'LinuxFunctions'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: OsTypeSelected1 =
 * <OsTypeSelected1>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum OsTypeSelected1 {
  Windows = 'Windows',
  Linux = 'Linux',
  WindowsFunctions = 'WindowsFunctions',
  LinuxFunctions = 'LinuxFunctions',
}

/**
 * Contains response data for the list operation.
 */
export type AppServiceCertificateOrdersListResponse = AppServiceCertificateOrderCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AppServiceCertificateOrderCollection;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type AppServiceCertificateOrdersListByResourceGroupResponse = AppServiceCertificateOrderCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AppServiceCertificateOrderCollection;
    };
};

/**
 * Contains response data for the get operation.
 */
export type AppServiceCertificateOrdersGetResponse = AppServiceCertificateOrder & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AppServiceCertificateOrder;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type AppServiceCertificateOrdersCreateOrUpdateResponse = AppServiceCertificateOrder & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AppServiceCertificateOrder;
    };
};

/**
 * Contains response data for the update operation.
 */
export type AppServiceCertificateOrdersUpdateResponse = AppServiceCertificateOrder & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AppServiceCertificateOrder;
    };
};

/**
 * Contains response data for the listCertificates operation.
 */
export type AppServiceCertificateOrdersListCertificatesResponse = AppServiceCertificateCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AppServiceCertificateCollection;
    };
};

/**
 * Contains response data for the getCertificate operation.
 */
export type AppServiceCertificateOrdersGetCertificateResponse = AppServiceCertificateResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AppServiceCertificateResource;
    };
};

/**
 * Contains response data for the createOrUpdateCertificate operation.
 */
export type AppServiceCertificateOrdersCreateOrUpdateCertificateResponse = AppServiceCertificateResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AppServiceCertificateResource;
    };
};

/**
 * Contains response data for the updateCertificate operation.
 */
export type AppServiceCertificateOrdersUpdateCertificateResponse = AppServiceCertificateResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AppServiceCertificateResource;
    };
};

/**
 * Contains response data for the retrieveSiteSeal operation.
 */
export type AppServiceCertificateOrdersRetrieveSiteSealResponse = SiteSeal & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteSeal;
    };
};

/**
 * Contains response data for the retrieveCertificateActions operation.
 */
export type AppServiceCertificateOrdersRetrieveCertificateActionsResponse = Array<CertificateOrderAction> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CertificateOrderAction[];
    };
};

/**
 * Contains response data for the retrieveCertificateEmailHistory operation.
 */
export type AppServiceCertificateOrdersRetrieveCertificateEmailHistoryResponse = Array<CertificateEmail> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CertificateEmail[];
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type AppServiceCertificateOrdersBeginCreateOrUpdateResponse = AppServiceCertificateOrder & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AppServiceCertificateOrder;
    };
};

/**
 * Contains response data for the beginCreateOrUpdateCertificate operation.
 */
export type AppServiceCertificateOrdersBeginCreateOrUpdateCertificateResponse = AppServiceCertificateResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AppServiceCertificateResource;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type AppServiceCertificateOrdersListNextResponse = AppServiceCertificateOrderCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AppServiceCertificateOrderCollection;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type AppServiceCertificateOrdersListByResourceGroupNextResponse = AppServiceCertificateOrderCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AppServiceCertificateOrderCollection;
    };
};

/**
 * Contains response data for the listCertificatesNext operation.
 */
export type AppServiceCertificateOrdersListCertificatesNextResponse = AppServiceCertificateCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AppServiceCertificateCollection;
    };
};

/**
 * Contains response data for the listOperations operation.
 */
export type CertificateRegistrationProviderListOperationsResponse = CsmOperationCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CsmOperationCollection;
    };
};

/**
 * Contains response data for the listOperationsNext operation.
 */
export type CertificateRegistrationProviderListOperationsNextResponse = CsmOperationCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CsmOperationCollection;
    };
};

/**
 * Contains response data for the checkAvailability operation.
 */
export type DomainsCheckAvailabilityResponse = DomainAvailablilityCheckResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DomainAvailablilityCheckResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type DomainsListResponse = DomainCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DomainCollection;
    };
};

/**
 * Contains response data for the getControlCenterSsoRequest operation.
 */
export type DomainsGetControlCenterSsoRequestResponse = DomainControlCenterSsoRequest & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DomainControlCenterSsoRequest;
    };
};

/**
 * Contains response data for the listRecommendations operation.
 */
export type DomainsListRecommendationsResponse = NameIdentifierCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NameIdentifierCollection;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type DomainsListByResourceGroupResponse = DomainCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DomainCollection;
    };
};

/**
 * Contains response data for the get operation.
 */
export type DomainsGetResponse = Domain & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Domain;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type DomainsCreateOrUpdateResponse = Domain & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Domain;
    };
};

/**
 * Contains response data for the update operation.
 */
export type DomainsUpdateResponse = Domain & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Domain;
    };
};

/**
 * Contains response data for the listOwnershipIdentifiers operation.
 */
export type DomainsListOwnershipIdentifiersResponse = DomainOwnershipIdentifierCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DomainOwnershipIdentifierCollection;
    };
};

/**
 * Contains response data for the getOwnershipIdentifier operation.
 */
export type DomainsGetOwnershipIdentifierResponse = DomainOwnershipIdentifier & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DomainOwnershipIdentifier;
    };
};

/**
 * Contains response data for the createOrUpdateOwnershipIdentifier operation.
 */
export type DomainsCreateOrUpdateOwnershipIdentifierResponse = DomainOwnershipIdentifier & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DomainOwnershipIdentifier;
    };
};

/**
 * Contains response data for the updateOwnershipIdentifier operation.
 */
export type DomainsUpdateOwnershipIdentifierResponse = DomainOwnershipIdentifier & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DomainOwnershipIdentifier;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type DomainsBeginCreateOrUpdateResponse = Domain & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Domain;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type DomainsListNextResponse = DomainCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DomainCollection;
    };
};

/**
 * Contains response data for the listRecommendationsNext operation.
 */
export type DomainsListRecommendationsNextResponse = NameIdentifierCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NameIdentifierCollection;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type DomainsListByResourceGroupNextResponse = DomainCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DomainCollection;
    };
};

/**
 * Contains response data for the listOwnershipIdentifiersNext operation.
 */
export type DomainsListOwnershipIdentifiersNextResponse = DomainOwnershipIdentifierCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DomainOwnershipIdentifierCollection;
    };
};

/**
 * Contains response data for the list operation.
 */
export type TopLevelDomainsListResponse = TopLevelDomainCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TopLevelDomainCollection;
    };
};

/**
 * Contains response data for the get operation.
 */
export type TopLevelDomainsGetResponse = TopLevelDomain & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TopLevelDomain;
    };
};

/**
 * Contains response data for the listAgreements operation.
 */
export type TopLevelDomainsListAgreementsResponse = TldLegalAgreementCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TldLegalAgreementCollection;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type TopLevelDomainsListNextResponse = TopLevelDomainCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TopLevelDomainCollection;
    };
};

/**
 * Contains response data for the listAgreementsNext operation.
 */
export type TopLevelDomainsListAgreementsNextResponse = TldLegalAgreementCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TldLegalAgreementCollection;
    };
};

/**
 * Contains response data for the listOperations operation.
 */
export type DomainRegistrationProviderListOperationsResponse = CsmOperationCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CsmOperationCollection;
    };
};

/**
 * Contains response data for the listOperationsNext operation.
 */
export type DomainRegistrationProviderListOperationsNextResponse = CsmOperationCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CsmOperationCollection;
    };
};

/**
 * Contains response data for the list operation.
 */
export type CertificatesListResponse = CertificateCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CertificateCollection;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type CertificatesListByResourceGroupResponse = CertificateCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CertificateCollection;
    };
};

/**
 * Contains response data for the get operation.
 */
export type CertificatesGetResponse = Certificate & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Certificate;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type CertificatesCreateOrUpdateResponse = Certificate & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Certificate;
    };
};

/**
 * Contains response data for the update operation.
 */
export type CertificatesUpdateResponse = Certificate & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Certificate;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type CertificatesListNextResponse = CertificateCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CertificateCollection;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type CertificatesListByResourceGroupNextResponse = CertificateCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CertificateCollection;
    };
};

/**
 * Contains response data for the list operation.
 */
export type DeletedWebAppsListResponse = DeletedWebAppCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DeletedWebAppCollection;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type DeletedWebAppsListNextResponse = DeletedWebAppCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DeletedWebAppCollection;
    };
};

/**
 * Contains response data for the listHostingEnvironmentDetectorResponses operation.
 */
export type DiagnosticsListHostingEnvironmentDetectorResponsesResponse = DetectorResponseCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DetectorResponseCollection;
    };
};

/**
 * Contains response data for the getHostingEnvironmentDetectorResponse operation.
 */
export type DiagnosticsGetHostingEnvironmentDetectorResponseResponse = DetectorResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DetectorResponse;
    };
};

/**
 * Contains response data for the listSiteDetectorResponses operation.
 */
export type DiagnosticsListSiteDetectorResponsesResponse = DetectorResponseCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DetectorResponseCollection;
    };
};

/**
 * Contains response data for the getSiteDetectorResponse operation.
 */
export type DiagnosticsGetSiteDetectorResponseResponse = DetectorResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DetectorResponse;
    };
};

/**
 * Contains response data for the listSiteDiagnosticCategories operation.
 */
export type DiagnosticsListSiteDiagnosticCategoriesResponse = DiagnosticCategoryCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiagnosticCategoryCollection;
    };
};

/**
 * Contains response data for the getSiteDiagnosticCategory operation.
 */
export type DiagnosticsGetSiteDiagnosticCategoryResponse = DiagnosticCategory & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiagnosticCategory;
    };
};

/**
 * Contains response data for the listSiteAnalyses operation.
 */
export type DiagnosticsListSiteAnalysesResponse = DiagnosticAnalysisCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiagnosticAnalysisCollection;
    };
};

/**
 * Contains response data for the getSiteAnalysis operation.
 */
export type DiagnosticsGetSiteAnalysisResponse = DiagnosticAnalysis & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiagnosticAnalysis;
    };
};

/**
 * Contains response data for the executeSiteAnalysis operation.
 */
export type DiagnosticsExecuteSiteAnalysisResponse = DiagnosticAnalysis & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiagnosticAnalysis;
    };
};

/**
 * Contains response data for the listSiteDetectors operation.
 */
export type DiagnosticsListSiteDetectorsResponse = DiagnosticDetectorCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiagnosticDetectorCollection;
    };
};

/**
 * Contains response data for the getSiteDetector operation.
 */
export type DiagnosticsGetSiteDetectorResponse = DiagnosticDetectorCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiagnosticDetectorCollection;
    };
};

/**
 * Contains response data for the executeSiteDetector operation.
 */
export type DiagnosticsExecuteSiteDetectorResponse = DiagnosticDetectorResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiagnosticDetectorResponse;
    };
};

/**
 * Contains response data for the listSiteDetectorResponsesSlot operation.
 */
export type DiagnosticsListSiteDetectorResponsesSlotResponse = DetectorResponseCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DetectorResponseCollection;
    };
};

/**
 * Contains response data for the getSiteDetectorResponseSlot operation.
 */
export type DiagnosticsGetSiteDetectorResponseSlotResponse = DetectorResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DetectorResponse;
    };
};

/**
 * Contains response data for the listSiteDiagnosticCategoriesSlot operation.
 */
export type DiagnosticsListSiteDiagnosticCategoriesSlotResponse = DiagnosticCategoryCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiagnosticCategoryCollection;
    };
};

/**
 * Contains response data for the getSiteDiagnosticCategorySlot operation.
 */
export type DiagnosticsGetSiteDiagnosticCategorySlotResponse = DiagnosticCategory & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiagnosticCategory;
    };
};

/**
 * Contains response data for the listSiteAnalysesSlot operation.
 */
export type DiagnosticsListSiteAnalysesSlotResponse = DiagnosticAnalysisCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiagnosticAnalysisCollection;
    };
};

/**
 * Contains response data for the getSiteAnalysisSlot operation.
 */
export type DiagnosticsGetSiteAnalysisSlotResponse = DiagnosticAnalysis & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiagnosticAnalysis;
    };
};

/**
 * Contains response data for the executeSiteAnalysisSlot operation.
 */
export type DiagnosticsExecuteSiteAnalysisSlotResponse = DiagnosticAnalysis & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiagnosticAnalysis;
    };
};

/**
 * Contains response data for the listSiteDetectorsSlot operation.
 */
export type DiagnosticsListSiteDetectorsSlotResponse = DiagnosticDetectorCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiagnosticDetectorCollection;
    };
};

/**
 * Contains response data for the getSiteDetectorSlot operation.
 */
export type DiagnosticsGetSiteDetectorSlotResponse = DiagnosticDetectorCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiagnosticDetectorCollection;
    };
};

/**
 * Contains response data for the executeSiteDetectorSlot operation.
 */
export type DiagnosticsExecuteSiteDetectorSlotResponse = DiagnosticDetectorResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiagnosticDetectorResponse;
    };
};

/**
 * Contains response data for the listHostingEnvironmentDetectorResponsesNext operation.
 */
export type DiagnosticsListHostingEnvironmentDetectorResponsesNextResponse = DetectorResponseCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DetectorResponseCollection;
    };
};

/**
 * Contains response data for the listSiteDetectorResponsesNext operation.
 */
export type DiagnosticsListSiteDetectorResponsesNextResponse = DetectorResponseCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DetectorResponseCollection;
    };
};

/**
 * Contains response data for the listSiteDiagnosticCategoriesNext operation.
 */
export type DiagnosticsListSiteDiagnosticCategoriesNextResponse = DiagnosticCategoryCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiagnosticCategoryCollection;
    };
};

/**
 * Contains response data for the listSiteAnalysesNext operation.
 */
export type DiagnosticsListSiteAnalysesNextResponse = DiagnosticAnalysisCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiagnosticAnalysisCollection;
    };
};

/**
 * Contains response data for the listSiteDetectorsNext operation.
 */
export type DiagnosticsListSiteDetectorsNextResponse = DiagnosticDetectorCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiagnosticDetectorCollection;
    };
};

/**
 * Contains response data for the getSiteDetectorNext operation.
 */
export type DiagnosticsGetSiteDetectorNextResponse = DiagnosticDetectorCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiagnosticDetectorCollection;
    };
};

/**
 * Contains response data for the listSiteDetectorResponsesSlotNext operation.
 */
export type DiagnosticsListSiteDetectorResponsesSlotNextResponse = DetectorResponseCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DetectorResponseCollection;
    };
};

/**
 * Contains response data for the listSiteDiagnosticCategoriesSlotNext operation.
 */
export type DiagnosticsListSiteDiagnosticCategoriesSlotNextResponse = DiagnosticCategoryCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiagnosticCategoryCollection;
    };
};

/**
 * Contains response data for the listSiteAnalysesSlotNext operation.
 */
export type DiagnosticsListSiteAnalysesSlotNextResponse = DiagnosticAnalysisCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiagnosticAnalysisCollection;
    };
};

/**
 * Contains response data for the listSiteDetectorsSlotNext operation.
 */
export type DiagnosticsListSiteDetectorsSlotNextResponse = DiagnosticDetectorCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiagnosticDetectorCollection;
    };
};

/**
 * Contains response data for the getSiteDetectorSlotNext operation.
 */
export type DiagnosticsGetSiteDetectorSlotNextResponse = DiagnosticDetectorCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiagnosticDetectorCollection;
    };
};

/**
 * Contains response data for the getAvailableStacks operation.
 */
export type ProviderGetAvailableStacksResponse = ApplicationStackCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApplicationStackCollection;
    };
};

/**
 * Contains response data for the listOperations operation.
 */
export type ProviderListOperationsResponse = CsmOperationCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CsmOperationCollection;
    };
};

/**
 * Contains response data for the getAvailableStacksOnPrem operation.
 */
export type ProviderGetAvailableStacksOnPremResponse = ApplicationStackCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApplicationStackCollection;
    };
};

/**
 * Contains response data for the getAvailableStacksNext operation.
 */
export type ProviderGetAvailableStacksNextResponse = ApplicationStackCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApplicationStackCollection;
    };
};

/**
 * Contains response data for the listOperationsNext operation.
 */
export type ProviderListOperationsNextResponse = CsmOperationCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CsmOperationCollection;
    };
};

/**
 * Contains response data for the getAvailableStacksOnPremNext operation.
 */
export type ProviderGetAvailableStacksOnPremNextResponse = ApplicationStackCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ApplicationStackCollection;
    };
};

/**
 * Contains response data for the list operation.
 */
export type RecommendationsListResponse = RecommendationCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecommendationCollection;
    };
};

/**
 * Contains response data for the listHistoryForWebApp operation.
 */
export type RecommendationsListHistoryForWebAppResponse = RecommendationCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecommendationCollection;
    };
};

/**
 * Contains response data for the listRecommendedRulesForWebApp operation.
 */
export type RecommendationsListRecommendedRulesForWebAppResponse = RecommendationCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecommendationCollection;
    };
};

/**
 * Contains response data for the getRuleDetailsByWebApp operation.
 */
export type RecommendationsGetRuleDetailsByWebAppResponse = RecommendationRule & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecommendationRule;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type RecommendationsListNextResponse = RecommendationCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecommendationCollection;
    };
};

/**
 * Contains response data for the listHistoryForWebAppNext operation.
 */
export type RecommendationsListHistoryForWebAppNextResponse = RecommendationCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecommendationCollection;
    };
};

/**
 * Contains response data for the listRecommendedRulesForWebAppNext operation.
 */
export type RecommendationsListRecommendedRulesForWebAppNextResponse = RecommendationCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecommendationCollection;
    };
};

/**
 * Contains response data for the getPublishingUser operation.
 */
export type GetPublishingUserResponse = User & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: User;
    };
};

/**
 * Contains response data for the updatePublishingUser operation.
 */
export type UpdatePublishingUserResponse = User & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: User;
    };
};

/**
 * Contains response data for the listSourceControls operation.
 */
export type ListSourceControlsResponse = SourceControlCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SourceControlCollection;
    };
};

/**
 * Contains response data for the getSourceControl operation.
 */
export type GetSourceControlResponse = SourceControl & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SourceControl;
    };
};

/**
 * Contains response data for the updateSourceControl operation.
 */
export type UpdateSourceControlResponse = SourceControl & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SourceControl;
    };
};

/**
 * Contains response data for the listBillingMeters operation.
 */
export type ListBillingMetersResponse = BillingMeterCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BillingMeterCollection;
    };
};

/**
 * Contains response data for the checkNameAvailability operation.
 */
export type CheckNameAvailabilityResponse = ResourceNameAvailability & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceNameAvailability;
    };
};

/**
 * Contains response data for the getSubscriptionDeploymentLocations operation.
 */
export type GetSubscriptionDeploymentLocationsResponse = DeploymentLocations & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DeploymentLocations;
    };
};

/**
 * Contains response data for the listGeoRegions operation.
 */
export type ListGeoRegionsResponse = GeoRegionCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GeoRegionCollection;
    };
};

/**
 * Contains response data for the listSiteIdentifiersAssignedToHostName operation.
 */
export type ListSiteIdentifiersAssignedToHostNameResponse = IdentifierCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IdentifierCollection;
    };
};

/**
 * Contains response data for the listPremierAddOnOffers operation.
 */
export type ListPremierAddOnOffersResponse = PremierAddOnOfferCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PremierAddOnOfferCollection;
    };
};

/**
 * Contains response data for the listSkus operation.
 */
export type ListSkusResponse = SkuInfos & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SkuInfos;
    };
};

/**
 * Contains response data for the verifyHostingEnvironmentVnet operation.
 */
export type VerifyHostingEnvironmentVnetResponse = VnetValidationFailureDetails & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VnetValidationFailureDetails;
    };
};

/**
 * Contains response data for the validate operation.
 */
export type ValidateResponse2 = ValidateResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ValidateResponse;
    };
};

/**
 * Contains response data for the listSourceControlsNext operation.
 */
export type ListSourceControlsNextResponse = SourceControlCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SourceControlCollection;
    };
};

/**
 * Contains response data for the listBillingMetersNext operation.
 */
export type ListBillingMetersNextResponse = BillingMeterCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BillingMeterCollection;
    };
};

/**
 * Contains response data for the listGeoRegionsNext operation.
 */
export type ListGeoRegionsNextResponse = GeoRegionCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GeoRegionCollection;
    };
};

/**
 * Contains response data for the listSiteIdentifiersAssignedToHostNameNext operation.
 */
export type ListSiteIdentifiersAssignedToHostNameNextResponse = IdentifierCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IdentifierCollection;
    };
};

/**
 * Contains response data for the listPremierAddOnOffersNext operation.
 */
export type ListPremierAddOnOffersNextResponse = PremierAddOnOfferCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PremierAddOnOfferCollection;
    };
};

/**
 * Contains response data for the list operation.
 */
export type WebAppsListResponse = WebAppCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WebAppCollection;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type WebAppsListByResourceGroupResponse = WebAppCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WebAppCollection;
    };
};

/**
 * Contains response data for the get operation.
 */
export type WebAppsGetResponse = Site & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Site;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type WebAppsCreateOrUpdateResponse = Site & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Site;
    };
};

/**
 * Contains response data for the update operation.
 */
export type WebAppsUpdateResponse = Site & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Site;
    };
};

/**
 * Contains response data for the analyzeCustomHostname operation.
 */
export type WebAppsAnalyzeCustomHostnameResponse = CustomHostnameAnalysisResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CustomHostnameAnalysisResult;
    };
};

/**
 * Contains response data for the backup operation.
 */
export type WebAppsBackupResponse = BackupItem & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupItem;
    };
};

/**
 * Contains response data for the listBackups operation.
 */
export type WebAppsListBackupsResponse = BackupItemCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupItemCollection;
    };
};

/**
 * Contains response data for the getBackupStatus operation.
 */
export type WebAppsGetBackupStatusResponse = BackupItem & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupItem;
    };
};

/**
 * Contains response data for the listBackupStatusSecrets operation.
 */
export type WebAppsListBackupStatusSecretsResponse = BackupItem & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupItem;
    };
};

/**
 * Contains response data for the listConfigurations operation.
 */
export type WebAppsListConfigurationsResponse = SiteConfigResourceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteConfigResourceCollection;
    };
};

/**
 * Contains response data for the updateApplicationSettings operation.
 */
export type WebAppsUpdateApplicationSettingsResponse = StringDictionary & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StringDictionary;
    };
};

/**
 * Contains response data for the listApplicationSettings operation.
 */
export type WebAppsListApplicationSettingsResponse = StringDictionary & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StringDictionary;
    };
};

/**
 * Contains response data for the updateAuthSettings operation.
 */
export type WebAppsUpdateAuthSettingsResponse = SiteAuthSettings & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteAuthSettings;
    };
};

/**
 * Contains response data for the getAuthSettings operation.
 */
export type WebAppsGetAuthSettingsResponse = SiteAuthSettings & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteAuthSettings;
    };
};

/**
 * Contains response data for the updateAzureStorageAccounts operation.
 */
export type WebAppsUpdateAzureStorageAccountsResponse = AzureStoragePropertyDictionaryResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AzureStoragePropertyDictionaryResource;
    };
};

/**
 * Contains response data for the listAzureStorageAccounts operation.
 */
export type WebAppsListAzureStorageAccountsResponse = AzureStoragePropertyDictionaryResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AzureStoragePropertyDictionaryResource;
    };
};

/**
 * Contains response data for the updateBackupConfiguration operation.
 */
export type WebAppsUpdateBackupConfigurationResponse = BackupRequest & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupRequest;
    };
};

/**
 * Contains response data for the getBackupConfiguration operation.
 */
export type WebAppsGetBackupConfigurationResponse = BackupRequest & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupRequest;
    };
};

/**
 * Contains response data for the updateConnectionStrings operation.
 */
export type WebAppsUpdateConnectionStringsResponse = ConnectionStringDictionary & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ConnectionStringDictionary;
    };
};

/**
 * Contains response data for the listConnectionStrings operation.
 */
export type WebAppsListConnectionStringsResponse = ConnectionStringDictionary & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ConnectionStringDictionary;
    };
};

/**
 * Contains response data for the getDiagnosticLogsConfiguration operation.
 */
export type WebAppsGetDiagnosticLogsConfigurationResponse = SiteLogsConfig & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteLogsConfig;
    };
};

/**
 * Contains response data for the updateDiagnosticLogsConfig operation.
 */
export type WebAppsUpdateDiagnosticLogsConfigResponse = SiteLogsConfig & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteLogsConfig;
    };
};

/**
 * Contains response data for the updateMetadata operation.
 */
export type WebAppsUpdateMetadataResponse = StringDictionary & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StringDictionary;
    };
};

/**
 * Contains response data for the listMetadata operation.
 */
export type WebAppsListMetadataResponse = StringDictionary & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StringDictionary;
    };
};

/**
 * Contains response data for the listPublishingCredentials operation.
 */
export type WebAppsListPublishingCredentialsResponse = User & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: User;
    };
};

/**
 * Contains response data for the updateSitePushSettings operation.
 */
export type WebAppsUpdateSitePushSettingsResponse = PushSettings & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PushSettings;
    };
};

/**
 * Contains response data for the listSitePushSettings operation.
 */
export type WebAppsListSitePushSettingsResponse = PushSettings & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PushSettings;
    };
};

/**
 * Contains response data for the listSlotConfigurationNames operation.
 */
export type WebAppsListSlotConfigurationNamesResponse = SlotConfigNamesResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SlotConfigNamesResource;
    };
};

/**
 * Contains response data for the updateSlotConfigurationNames operation.
 */
export type WebAppsUpdateSlotConfigurationNamesResponse = SlotConfigNamesResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SlotConfigNamesResource;
    };
};

/**
 * Contains response data for the getSwiftVirtualNetworkConnection operation.
 */
export type WebAppsGetSwiftVirtualNetworkConnectionResponse = SwiftVirtualNetwork & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SwiftVirtualNetwork;
    };
};

/**
 * Contains response data for the createOrUpdateSwiftVirtualNetworkConnection operation.
 */
export type WebAppsCreateOrUpdateSwiftVirtualNetworkConnectionResponse = SwiftVirtualNetwork & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SwiftVirtualNetwork;
    };
};

/**
 * Contains response data for the updateSwiftVirtualNetworkConnection operation.
 */
export type WebAppsUpdateSwiftVirtualNetworkConnectionResponse = SwiftVirtualNetwork & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SwiftVirtualNetwork;
    };
};

/**
 * Contains response data for the getConfiguration operation.
 */
export type WebAppsGetConfigurationResponse = SiteConfigResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteConfigResource;
    };
};

/**
 * Contains response data for the createOrUpdateConfiguration operation.
 */
export type WebAppsCreateOrUpdateConfigurationResponse = SiteConfigResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteConfigResource;
    };
};

/**
 * Contains response data for the updateConfiguration operation.
 */
export type WebAppsUpdateConfigurationResponse = SiteConfigResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteConfigResource;
    };
};

/**
 * Contains response data for the listConfigurationSnapshotInfo operation.
 */
export type WebAppsListConfigurationSnapshotInfoResponse = SiteConfigurationSnapshotInfoCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteConfigurationSnapshotInfoCollection;
    };
};

/**
 * Contains response data for the getConfigurationSnapshot operation.
 */
export type WebAppsGetConfigurationSnapshotResponse = SiteConfigResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteConfigResource;
    };
};

/**
 * Contains response data for the getWebSiteContainerLogs operation.
 */
export type WebAppsGetWebSiteContainerLogsResponse = {
  /**
   * BROWSER ONLY
   *
   * The response body as a browser Blob.
   * Always undefined in node.js.
   */
  blobBody?: Promise<Blob>;
  /**
   * NODEJS ONLY
   *
   * The response body as a node.js Readable stream.
   * Always undefined in the browser.
   */
  readableStreamBody?: NodeJS.ReadableStream;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse;
};

/**
 * Contains response data for the getContainerLogsZip operation.
 */
export type WebAppsGetContainerLogsZipResponse = {
  /**
   * BROWSER ONLY
   *
   * The response body as a browser Blob.
   * Always undefined in node.js.
   */
  blobBody?: Promise<Blob>;
  /**
   * NODEJS ONLY
   *
   * The response body as a node.js Readable stream.
   * Always undefined in the browser.
   */
  readableStreamBody?: NodeJS.ReadableStream;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse;
};

/**
 * Contains response data for the listContinuousWebJobs operation.
 */
export type WebAppsListContinuousWebJobsResponse = ContinuousWebJobCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ContinuousWebJobCollection;
    };
};

/**
 * Contains response data for the getContinuousWebJob operation.
 */
export type WebAppsGetContinuousWebJobResponse = ContinuousWebJob & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ContinuousWebJob;
    };
};

/**
 * Contains response data for the listDeployments operation.
 */
export type WebAppsListDeploymentsResponse = DeploymentCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DeploymentCollection;
    };
};

/**
 * Contains response data for the getDeployment operation.
 */
export type WebAppsGetDeploymentResponse = Deployment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Deployment;
    };
};

/**
 * Contains response data for the createDeployment operation.
 */
export type WebAppsCreateDeploymentResponse = Deployment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Deployment;
    };
};

/**
 * Contains response data for the listDeploymentLog operation.
 */
export type WebAppsListDeploymentLogResponse = Deployment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Deployment;
    };
};

/**
 * Contains response data for the discoverBackup operation.
 */
export type WebAppsDiscoverBackupResponse = RestoreRequest & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RestoreRequest;
    };
};

/**
 * Contains response data for the listDomainOwnershipIdentifiers operation.
 */
export type WebAppsListDomainOwnershipIdentifiersResponse = IdentifierCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IdentifierCollection;
    };
};

/**
 * Contains response data for the getDomainOwnershipIdentifier operation.
 */
export type WebAppsGetDomainOwnershipIdentifierResponse = Identifier & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Identifier;
    };
};

/**
 * Contains response data for the createOrUpdateDomainOwnershipIdentifier operation.
 */
export type WebAppsCreateOrUpdateDomainOwnershipIdentifierResponse = Identifier & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Identifier;
    };
};

/**
 * Contains response data for the updateDomainOwnershipIdentifier operation.
 */
export type WebAppsUpdateDomainOwnershipIdentifierResponse = Identifier & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Identifier;
    };
};

/**
 * Contains response data for the getMSDeployStatus operation.
 */
export type WebAppsGetMSDeployStatusResponse = MSDeployStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MSDeployStatus;
    };
};

/**
 * Contains response data for the createMSDeployOperation operation.
 */
export type WebAppsCreateMSDeployOperationResponse = MSDeployStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MSDeployStatus;
    };
};

/**
 * Contains response data for the getMSDeployLog operation.
 */
export type WebAppsGetMSDeployLogResponse = MSDeployLog & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MSDeployLog;
    };
};

/**
 * Contains response data for the listFunctions operation.
 */
export type WebAppsListFunctionsResponse = FunctionEnvelopeCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FunctionEnvelopeCollection;
    };
};

/**
 * Contains response data for the getFunctionsAdminToken operation.
 */
export type WebAppsGetFunctionsAdminTokenResponse = {
  /**
   * The parsed response body.
   */
  body: string;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the getFunction operation.
 */
export type WebAppsGetFunctionResponse = FunctionEnvelope & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FunctionEnvelope;
    };
};

/**
 * Contains response data for the createFunction operation.
 */
export type WebAppsCreateFunctionResponse = FunctionEnvelope & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FunctionEnvelope;
    };
};

/**
 * Contains response data for the listFunctionSecrets operation.
 */
export type WebAppsListFunctionSecretsResponse = FunctionSecrets & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FunctionSecrets;
    };
};

/**
 * Contains response data for the listHostNameBindings operation.
 */
export type WebAppsListHostNameBindingsResponse = HostNameBindingCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HostNameBindingCollection;
    };
};

/**
 * Contains response data for the getHostNameBinding operation.
 */
export type WebAppsGetHostNameBindingResponse = HostNameBinding & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HostNameBinding;
    };
};

/**
 * Contains response data for the createOrUpdateHostNameBinding operation.
 */
export type WebAppsCreateOrUpdateHostNameBindingResponse = HostNameBinding & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HostNameBinding;
    };
};

/**
 * Contains response data for the getHybridConnection operation.
 */
export type WebAppsGetHybridConnectionResponse = HybridConnection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HybridConnection;
    };
};

/**
 * Contains response data for the createOrUpdateHybridConnection operation.
 */
export type WebAppsCreateOrUpdateHybridConnectionResponse = HybridConnection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HybridConnection;
    };
};

/**
 * Contains response data for the updateHybridConnection operation.
 */
export type WebAppsUpdateHybridConnectionResponse = HybridConnection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HybridConnection;
    };
};

/**
 * Contains response data for the listHybridConnectionKeys operation.
 */
export type WebAppsListHybridConnectionKeysResponse = HybridConnectionKey & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HybridConnectionKey;
    };
};

/**
 * Contains response data for the listHybridConnections operation.
 */
export type WebAppsListHybridConnectionsResponse = HybridConnection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HybridConnection;
    };
};

/**
 * Contains response data for the listRelayServiceConnections operation.
 */
export type WebAppsListRelayServiceConnectionsResponse = RelayServiceConnectionEntity & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RelayServiceConnectionEntity;
    };
};

/**
 * Contains response data for the getRelayServiceConnection operation.
 */
export type WebAppsGetRelayServiceConnectionResponse = RelayServiceConnectionEntity & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RelayServiceConnectionEntity;
    };
};

/**
 * Contains response data for the createOrUpdateRelayServiceConnection operation.
 */
export type WebAppsCreateOrUpdateRelayServiceConnectionResponse = RelayServiceConnectionEntity & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RelayServiceConnectionEntity;
    };
};

/**
 * Contains response data for the updateRelayServiceConnection operation.
 */
export type WebAppsUpdateRelayServiceConnectionResponse = RelayServiceConnectionEntity & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RelayServiceConnectionEntity;
    };
};

/**
 * Contains response data for the listInstanceIdentifiers operation.
 */
export type WebAppsListInstanceIdentifiersResponse = WebAppInstanceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WebAppInstanceCollection;
    };
};

/**
 * Contains response data for the getInstanceMsDeployStatus operation.
 */
export type WebAppsGetInstanceMsDeployStatusResponse = MSDeployStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MSDeployStatus;
    };
};

/**
 * Contains response data for the createInstanceMSDeployOperation operation.
 */
export type WebAppsCreateInstanceMSDeployOperationResponse = MSDeployStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MSDeployStatus;
    };
};

/**
 * Contains response data for the getInstanceMSDeployLog operation.
 */
export type WebAppsGetInstanceMSDeployLogResponse = MSDeployLog & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MSDeployLog;
    };
};

/**
 * Contains response data for the listInstanceProcesses operation.
 */
export type WebAppsListInstanceProcessesResponse = ProcessInfoCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProcessInfoCollection;
    };
};

/**
 * Contains response data for the getInstanceProcess operation.
 */
export type WebAppsGetInstanceProcessResponse = ProcessInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProcessInfo;
    };
};

/**
 * Contains response data for the getInstanceProcessDump operation.
 */
export type WebAppsGetInstanceProcessDumpResponse = {
  /**
   * BROWSER ONLY
   *
   * The response body as a browser Blob.
   * Always undefined in node.js.
   */
  blobBody?: Promise<Blob>;
  /**
   * NODEJS ONLY
   *
   * The response body as a node.js Readable stream.
   * Always undefined in the browser.
   */
  readableStreamBody?: NodeJS.ReadableStream;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse;
};

/**
 * Contains response data for the listInstanceProcessModules operation.
 */
export type WebAppsListInstanceProcessModulesResponse = ProcessModuleInfoCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProcessModuleInfoCollection;
    };
};

/**
 * Contains response data for the getInstanceProcessModule operation.
 */
export type WebAppsGetInstanceProcessModuleResponse = ProcessModuleInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProcessModuleInfo;
    };
};

/**
 * Contains response data for the listInstanceProcessThreads operation.
 */
export type WebAppsListInstanceProcessThreadsResponse = ProcessThreadInfoCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProcessThreadInfoCollection;
    };
};

/**
 * Contains response data for the getInstanceProcessThread operation.
 */
export type WebAppsGetInstanceProcessThreadResponse = ProcessThreadInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProcessThreadInfo;
    };
};

/**
 * Contains response data for the isCloneable operation.
 */
export type WebAppsIsCloneableResponse = SiteCloneability & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteCloneability;
    };
};

/**
 * Contains response data for the listSyncFunctionTriggers operation.
 */
export type WebAppsListSyncFunctionTriggersResponse = FunctionSecrets & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FunctionSecrets;
    };
};

/**
 * Contains response data for the listMetricDefinitions operation.
 */
export type WebAppsListMetricDefinitionsResponse = ResourceMetricDefinitionCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceMetricDefinitionCollection;
    };
};

/**
 * Contains response data for the listMetrics operation.
 */
export type WebAppsListMetricsResponse = ResourceMetricCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceMetricCollection;
    };
};

/**
 * Contains response data for the migrateStorage operation.
 */
export type WebAppsMigrateStorageResponse = StorageMigrationResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StorageMigrationResponse;
    };
};

/**
 * Contains response data for the migrateMySql operation.
 */
export type WebAppsMigrateMySqlResponse = Operation & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Operation;
    };
};

/**
 * Contains response data for the getMigrateMySqlStatus operation.
 */
export type WebAppsGetMigrateMySqlStatusResponse = MigrateMySqlStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MigrateMySqlStatus;
    };
};

/**
 * Contains response data for the listNetworkFeatures operation.
 */
export type WebAppsListNetworkFeaturesResponse = NetworkFeatures & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NetworkFeatures;
    };
};

/**
 * Contains response data for the getNetworkTraceOperation operation.
 */
export type WebAppsGetNetworkTraceOperationResponse = {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the startWebSiteNetworkTrace operation.
 */
export type WebAppsStartWebSiteNetworkTraceResponse = {
  /**
   * The parsed response body.
   */
  body: string;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the startWebSiteNetworkTraceOperation operation.
 */
export type WebAppsStartWebSiteNetworkTraceOperationResponse = {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the getNetworkTraces operation.
 */
export type WebAppsGetNetworkTracesResponse = Array<NetworkTrace> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NetworkTrace[];
    };
};

/**
 * Contains response data for the getNetworkTraceOperationV2 operation.
 */
export type WebAppsGetNetworkTraceOperationV2Response = {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the getNetworkTracesV2 operation.
 */
export type WebAppsGetNetworkTracesV2Response = Array<NetworkTrace> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NetworkTrace[];
    };
};

/**
 * Contains response data for the listPerfMonCounters operation.
 */
export type WebAppsListPerfMonCountersResponse = PerfMonCounterCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PerfMonCounterCollection;
    };
};

/**
 * Contains response data for the getSitePhpErrorLogFlag operation.
 */
export type WebAppsGetSitePhpErrorLogFlagResponse = SitePhpErrorLogFlag & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SitePhpErrorLogFlag;
    };
};

/**
 * Contains response data for the listPremierAddOns operation.
 */
export type WebAppsListPremierAddOnsResponse = PremierAddOn & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PremierAddOn;
    };
};

/**
 * Contains response data for the getPremierAddOn operation.
 */
export type WebAppsGetPremierAddOnResponse = PremierAddOn & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PremierAddOn;
    };
};

/**
 * Contains response data for the addPremierAddOn operation.
 */
export type WebAppsAddPremierAddOnResponse = PremierAddOn & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PremierAddOn;
    };
};

/**
 * Contains response data for the updatePremierAddOn operation.
 */
export type WebAppsUpdatePremierAddOnResponse = PremierAddOn & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PremierAddOn;
    };
};

/**
 * Contains response data for the getPrivateAccess operation.
 */
export type WebAppsGetPrivateAccessResponse = PrivateAccess & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateAccess;
    };
};

/**
 * Contains response data for the putPrivateAccessVnet operation.
 */
export type WebAppsPutPrivateAccessVnetResponse = PrivateAccess & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateAccess;
    };
};

/**
 * Contains response data for the listProcesses operation.
 */
export type WebAppsListProcessesResponse = ProcessInfoCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProcessInfoCollection;
    };
};

/**
 * Contains response data for the getProcess operation.
 */
export type WebAppsGetProcessResponse = ProcessInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProcessInfo;
    };
};

/**
 * Contains response data for the getProcessDump operation.
 */
export type WebAppsGetProcessDumpResponse = {
  /**
   * BROWSER ONLY
   *
   * The response body as a browser Blob.
   * Always undefined in node.js.
   */
  blobBody?: Promise<Blob>;
  /**
   * NODEJS ONLY
   *
   * The response body as a node.js Readable stream.
   * Always undefined in the browser.
   */
  readableStreamBody?: NodeJS.ReadableStream;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse;
};

/**
 * Contains response data for the listProcessModules operation.
 */
export type WebAppsListProcessModulesResponse = ProcessModuleInfoCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProcessModuleInfoCollection;
    };
};

/**
 * Contains response data for the getProcessModule operation.
 */
export type WebAppsGetProcessModuleResponse = ProcessModuleInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProcessModuleInfo;
    };
};

/**
 * Contains response data for the listProcessThreads operation.
 */
export type WebAppsListProcessThreadsResponse = ProcessThreadInfoCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProcessThreadInfoCollection;
    };
};

/**
 * Contains response data for the getProcessThread operation.
 */
export type WebAppsGetProcessThreadResponse = ProcessThreadInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProcessThreadInfo;
    };
};

/**
 * Contains response data for the listPublicCertificates operation.
 */
export type WebAppsListPublicCertificatesResponse = PublicCertificateCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PublicCertificateCollection;
    };
};

/**
 * Contains response data for the getPublicCertificate operation.
 */
export type WebAppsGetPublicCertificateResponse = PublicCertificate & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PublicCertificate;
    };
};

/**
 * Contains response data for the createOrUpdatePublicCertificate operation.
 */
export type WebAppsCreateOrUpdatePublicCertificateResponse = PublicCertificate & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PublicCertificate;
    };
};

/**
 * Contains response data for the listPublishingProfileXmlWithSecrets operation.
 */
export type WebAppsListPublishingProfileXmlWithSecretsResponse = {
  /**
   * BROWSER ONLY
   *
   * The response body as a browser Blob.
   * Always undefined in node.js.
   */
  blobBody?: Promise<Blob>;
  /**
   * NODEJS ONLY
   *
   * The response body as a node.js Readable stream.
   * Always undefined in the browser.
   */
  readableStreamBody?: NodeJS.ReadableStream;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse;
};

/**
 * Contains response data for the listSiteExtensions operation.
 */
export type WebAppsListSiteExtensionsResponse = SiteExtensionInfoCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteExtensionInfoCollection;
    };
};

/**
 * Contains response data for the getSiteExtension operation.
 */
export type WebAppsGetSiteExtensionResponse = SiteExtensionInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteExtensionInfo;
    };
};

/**
 * Contains response data for the installSiteExtension operation.
 */
export type WebAppsInstallSiteExtensionResponse = SiteExtensionInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteExtensionInfo;
    };
};

/**
 * Contains response data for the listSlots operation.
 */
export type WebAppsListSlotsResponse = WebAppCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WebAppCollection;
    };
};

/**
 * Contains response data for the getSlot operation.
 */
export type WebAppsGetSlotResponse = Site & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Site;
    };
};

/**
 * Contains response data for the createOrUpdateSlot operation.
 */
export type WebAppsCreateOrUpdateSlotResponse = Site & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Site;
    };
};

/**
 * Contains response data for the updateSlot operation.
 */
export type WebAppsUpdateSlotResponse = Site & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Site;
    };
};

/**
 * Contains response data for the analyzeCustomHostnameSlot operation.
 */
export type WebAppsAnalyzeCustomHostnameSlotResponse = CustomHostnameAnalysisResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CustomHostnameAnalysisResult;
    };
};

/**
 * Contains response data for the backupSlot operation.
 */
export type WebAppsBackupSlotResponse = BackupItem & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupItem;
    };
};

/**
 * Contains response data for the listBackupsSlot operation.
 */
export type WebAppsListBackupsSlotResponse = BackupItemCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupItemCollection;
    };
};

/**
 * Contains response data for the getBackupStatusSlot operation.
 */
export type WebAppsGetBackupStatusSlotResponse = BackupItem & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupItem;
    };
};

/**
 * Contains response data for the listBackupStatusSecretsSlot operation.
 */
export type WebAppsListBackupStatusSecretsSlotResponse = BackupItem & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupItem;
    };
};

/**
 * Contains response data for the listConfigurationsSlot operation.
 */
export type WebAppsListConfigurationsSlotResponse = SiteConfigResourceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteConfigResourceCollection;
    };
};

/**
 * Contains response data for the updateApplicationSettingsSlot operation.
 */
export type WebAppsUpdateApplicationSettingsSlotResponse = StringDictionary & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StringDictionary;
    };
};

/**
 * Contains response data for the listApplicationSettingsSlot operation.
 */
export type WebAppsListApplicationSettingsSlotResponse = StringDictionary & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StringDictionary;
    };
};

/**
 * Contains response data for the updateAuthSettingsSlot operation.
 */
export type WebAppsUpdateAuthSettingsSlotResponse = SiteAuthSettings & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteAuthSettings;
    };
};

/**
 * Contains response data for the getAuthSettingsSlot operation.
 */
export type WebAppsGetAuthSettingsSlotResponse = SiteAuthSettings & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteAuthSettings;
    };
};

/**
 * Contains response data for the updateAzureStorageAccountsSlot operation.
 */
export type WebAppsUpdateAzureStorageAccountsSlotResponse = AzureStoragePropertyDictionaryResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AzureStoragePropertyDictionaryResource;
    };
};

/**
 * Contains response data for the listAzureStorageAccountsSlot operation.
 */
export type WebAppsListAzureStorageAccountsSlotResponse = AzureStoragePropertyDictionaryResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AzureStoragePropertyDictionaryResource;
    };
};

/**
 * Contains response data for the updateBackupConfigurationSlot operation.
 */
export type WebAppsUpdateBackupConfigurationSlotResponse = BackupRequest & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupRequest;
    };
};

/**
 * Contains response data for the getBackupConfigurationSlot operation.
 */
export type WebAppsGetBackupConfigurationSlotResponse = BackupRequest & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupRequest;
    };
};

/**
 * Contains response data for the updateConnectionStringsSlot operation.
 */
export type WebAppsUpdateConnectionStringsSlotResponse = ConnectionStringDictionary & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ConnectionStringDictionary;
    };
};

/**
 * Contains response data for the listConnectionStringsSlot operation.
 */
export type WebAppsListConnectionStringsSlotResponse = ConnectionStringDictionary & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ConnectionStringDictionary;
    };
};

/**
 * Contains response data for the getDiagnosticLogsConfigurationSlot operation.
 */
export type WebAppsGetDiagnosticLogsConfigurationSlotResponse = SiteLogsConfig & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteLogsConfig;
    };
};

/**
 * Contains response data for the updateDiagnosticLogsConfigSlot operation.
 */
export type WebAppsUpdateDiagnosticLogsConfigSlotResponse = SiteLogsConfig & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteLogsConfig;
    };
};

/**
 * Contains response data for the updateMetadataSlot operation.
 */
export type WebAppsUpdateMetadataSlotResponse = StringDictionary & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StringDictionary;
    };
};

/**
 * Contains response data for the listMetadataSlot operation.
 */
export type WebAppsListMetadataSlotResponse = StringDictionary & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StringDictionary;
    };
};

/**
 * Contains response data for the listPublishingCredentialsSlot operation.
 */
export type WebAppsListPublishingCredentialsSlotResponse = User & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: User;
    };
};

/**
 * Contains response data for the updateSitePushSettingsSlot operation.
 */
export type WebAppsUpdateSitePushSettingsSlotResponse = PushSettings & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PushSettings;
    };
};

/**
 * Contains response data for the listSitePushSettingsSlot operation.
 */
export type WebAppsListSitePushSettingsSlotResponse = PushSettings & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PushSettings;
    };
};

/**
 * Contains response data for the getSwiftVirtualNetworkConnectionSlot operation.
 */
export type WebAppsGetSwiftVirtualNetworkConnectionSlotResponse = SwiftVirtualNetwork & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SwiftVirtualNetwork;
    };
};

/**
 * Contains response data for the createOrUpdateSwiftVirtualNetworkConnectionSlot operation.
 */
export type WebAppsCreateOrUpdateSwiftVirtualNetworkConnectionSlotResponse = SwiftVirtualNetwork & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SwiftVirtualNetwork;
    };
};

/**
 * Contains response data for the updateSwiftVirtualNetworkConnectionSlot operation.
 */
export type WebAppsUpdateSwiftVirtualNetworkConnectionSlotResponse = SwiftVirtualNetwork & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SwiftVirtualNetwork;
    };
};

/**
 * Contains response data for the getConfigurationSlot operation.
 */
export type WebAppsGetConfigurationSlotResponse = SiteConfigResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteConfigResource;
    };
};

/**
 * Contains response data for the createOrUpdateConfigurationSlot operation.
 */
export type WebAppsCreateOrUpdateConfigurationSlotResponse = SiteConfigResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteConfigResource;
    };
};

/**
 * Contains response data for the updateConfigurationSlot operation.
 */
export type WebAppsUpdateConfigurationSlotResponse = SiteConfigResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteConfigResource;
    };
};

/**
 * Contains response data for the listConfigurationSnapshotInfoSlot operation.
 */
export type WebAppsListConfigurationSnapshotInfoSlotResponse = SiteConfigurationSnapshotInfoCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteConfigurationSnapshotInfoCollection;
    };
};

/**
 * Contains response data for the getConfigurationSnapshotSlot operation.
 */
export type WebAppsGetConfigurationSnapshotSlotResponse = SiteConfigResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteConfigResource;
    };
};

/**
 * Contains response data for the getWebSiteContainerLogsSlot operation.
 */
export type WebAppsGetWebSiteContainerLogsSlotResponse = {
  /**
   * BROWSER ONLY
   *
   * The response body as a browser Blob.
   * Always undefined in node.js.
   */
  blobBody?: Promise<Blob>;
  /**
   * NODEJS ONLY
   *
   * The response body as a node.js Readable stream.
   * Always undefined in the browser.
   */
  readableStreamBody?: NodeJS.ReadableStream;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse;
};

/**
 * Contains response data for the getContainerLogsZipSlot operation.
 */
export type WebAppsGetContainerLogsZipSlotResponse = {
  /**
   * BROWSER ONLY
   *
   * The response body as a browser Blob.
   * Always undefined in node.js.
   */
  blobBody?: Promise<Blob>;
  /**
   * NODEJS ONLY
   *
   * The response body as a node.js Readable stream.
   * Always undefined in the browser.
   */
  readableStreamBody?: NodeJS.ReadableStream;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse;
};

/**
 * Contains response data for the listContinuousWebJobsSlot operation.
 */
export type WebAppsListContinuousWebJobsSlotResponse = ContinuousWebJobCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ContinuousWebJobCollection;
    };
};

/**
 * Contains response data for the getContinuousWebJobSlot operation.
 */
export type WebAppsGetContinuousWebJobSlotResponse = ContinuousWebJob & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ContinuousWebJob;
    };
};

/**
 * Contains response data for the listDeploymentsSlot operation.
 */
export type WebAppsListDeploymentsSlotResponse = DeploymentCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DeploymentCollection;
    };
};

/**
 * Contains response data for the getDeploymentSlot operation.
 */
export type WebAppsGetDeploymentSlotResponse = Deployment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Deployment;
    };
};

/**
 * Contains response data for the createDeploymentSlot operation.
 */
export type WebAppsCreateDeploymentSlotResponse = Deployment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Deployment;
    };
};

/**
 * Contains response data for the listDeploymentLogSlot operation.
 */
export type WebAppsListDeploymentLogSlotResponse = Deployment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Deployment;
    };
};

/**
 * Contains response data for the discoverBackupSlot operation.
 */
export type WebAppsDiscoverBackupSlotResponse = RestoreRequest & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RestoreRequest;
    };
};

/**
 * Contains response data for the listDomainOwnershipIdentifiersSlot operation.
 */
export type WebAppsListDomainOwnershipIdentifiersSlotResponse = IdentifierCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IdentifierCollection;
    };
};

/**
 * Contains response data for the getDomainOwnershipIdentifierSlot operation.
 */
export type WebAppsGetDomainOwnershipIdentifierSlotResponse = Identifier & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Identifier;
    };
};

/**
 * Contains response data for the createOrUpdateDomainOwnershipIdentifierSlot operation.
 */
export type WebAppsCreateOrUpdateDomainOwnershipIdentifierSlotResponse = Identifier & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Identifier;
    };
};

/**
 * Contains response data for the updateDomainOwnershipIdentifierSlot operation.
 */
export type WebAppsUpdateDomainOwnershipIdentifierSlotResponse = Identifier & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Identifier;
    };
};

/**
 * Contains response data for the getMSDeployStatusSlot operation.
 */
export type WebAppsGetMSDeployStatusSlotResponse = MSDeployStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MSDeployStatus;
    };
};

/**
 * Contains response data for the createMSDeployOperationSlot operation.
 */
export type WebAppsCreateMSDeployOperationSlotResponse = MSDeployStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MSDeployStatus;
    };
};

/**
 * Contains response data for the getMSDeployLogSlot operation.
 */
export type WebAppsGetMSDeployLogSlotResponse = MSDeployLog & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MSDeployLog;
    };
};

/**
 * Contains response data for the listInstanceFunctionsSlot operation.
 */
export type WebAppsListInstanceFunctionsSlotResponse = FunctionEnvelopeCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FunctionEnvelopeCollection;
    };
};

/**
 * Contains response data for the getFunctionsAdminTokenSlot operation.
 */
export type WebAppsGetFunctionsAdminTokenSlotResponse = {
  /**
   * The parsed response body.
   */
  body: string;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the getInstanceFunctionSlot operation.
 */
export type WebAppsGetInstanceFunctionSlotResponse = FunctionEnvelope & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FunctionEnvelope;
    };
};

/**
 * Contains response data for the createInstanceFunctionSlot operation.
 */
export type WebAppsCreateInstanceFunctionSlotResponse = FunctionEnvelope & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FunctionEnvelope;
    };
};

/**
 * Contains response data for the listFunctionSecretsSlot operation.
 */
export type WebAppsListFunctionSecretsSlotResponse = FunctionSecrets & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FunctionSecrets;
    };
};

/**
 * Contains response data for the listHostNameBindingsSlot operation.
 */
export type WebAppsListHostNameBindingsSlotResponse = HostNameBindingCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HostNameBindingCollection;
    };
};

/**
 * Contains response data for the getHostNameBindingSlot operation.
 */
export type WebAppsGetHostNameBindingSlotResponse = HostNameBinding & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HostNameBinding;
    };
};

/**
 * Contains response data for the createOrUpdateHostNameBindingSlot operation.
 */
export type WebAppsCreateOrUpdateHostNameBindingSlotResponse = HostNameBinding & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HostNameBinding;
    };
};

/**
 * Contains response data for the getHybridConnectionSlot operation.
 */
export type WebAppsGetHybridConnectionSlotResponse = HybridConnection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HybridConnection;
    };
};

/**
 * Contains response data for the createOrUpdateHybridConnectionSlot operation.
 */
export type WebAppsCreateOrUpdateHybridConnectionSlotResponse = HybridConnection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HybridConnection;
    };
};

/**
 * Contains response data for the updateHybridConnectionSlot operation.
 */
export type WebAppsUpdateHybridConnectionSlotResponse = HybridConnection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HybridConnection;
    };
};

/**
 * Contains response data for the listHybridConnectionKeysSlot operation.
 */
export type WebAppsListHybridConnectionKeysSlotResponse = HybridConnectionKey & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HybridConnectionKey;
    };
};

/**
 * Contains response data for the listHybridConnectionsSlot operation.
 */
export type WebAppsListHybridConnectionsSlotResponse = HybridConnection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HybridConnection;
    };
};

/**
 * Contains response data for the listRelayServiceConnectionsSlot operation.
 */
export type WebAppsListRelayServiceConnectionsSlotResponse = RelayServiceConnectionEntity & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RelayServiceConnectionEntity;
    };
};

/**
 * Contains response data for the getRelayServiceConnectionSlot operation.
 */
export type WebAppsGetRelayServiceConnectionSlotResponse = RelayServiceConnectionEntity & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RelayServiceConnectionEntity;
    };
};

/**
 * Contains response data for the createOrUpdateRelayServiceConnectionSlot operation.
 */
export type WebAppsCreateOrUpdateRelayServiceConnectionSlotResponse = RelayServiceConnectionEntity & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RelayServiceConnectionEntity;
    };
};

/**
 * Contains response data for the updateRelayServiceConnectionSlot operation.
 */
export type WebAppsUpdateRelayServiceConnectionSlotResponse = RelayServiceConnectionEntity & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RelayServiceConnectionEntity;
    };
};

/**
 * Contains response data for the listInstanceIdentifiersSlot operation.
 */
export type WebAppsListInstanceIdentifiersSlotResponse = WebAppInstanceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WebAppInstanceCollection;
    };
};

/**
 * Contains response data for the getInstanceMsDeployStatusSlot operation.
 */
export type WebAppsGetInstanceMsDeployStatusSlotResponse = MSDeployStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MSDeployStatus;
    };
};

/**
 * Contains response data for the createInstanceMSDeployOperationSlot operation.
 */
export type WebAppsCreateInstanceMSDeployOperationSlotResponse = MSDeployStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MSDeployStatus;
    };
};

/**
 * Contains response data for the getInstanceMSDeployLogSlot operation.
 */
export type WebAppsGetInstanceMSDeployLogSlotResponse = MSDeployLog & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MSDeployLog;
    };
};

/**
 * Contains response data for the listInstanceProcessesSlot operation.
 */
export type WebAppsListInstanceProcessesSlotResponse = ProcessInfoCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProcessInfoCollection;
    };
};

/**
 * Contains response data for the getInstanceProcessSlot operation.
 */
export type WebAppsGetInstanceProcessSlotResponse = ProcessInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProcessInfo;
    };
};

/**
 * Contains response data for the getInstanceProcessDumpSlot operation.
 */
export type WebAppsGetInstanceProcessDumpSlotResponse = {
  /**
   * BROWSER ONLY
   *
   * The response body as a browser Blob.
   * Always undefined in node.js.
   */
  blobBody?: Promise<Blob>;
  /**
   * NODEJS ONLY
   *
   * The response body as a node.js Readable stream.
   * Always undefined in the browser.
   */
  readableStreamBody?: NodeJS.ReadableStream;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse;
};

/**
 * Contains response data for the listInstanceProcessModulesSlot operation.
 */
export type WebAppsListInstanceProcessModulesSlotResponse = ProcessModuleInfoCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProcessModuleInfoCollection;
    };
};

/**
 * Contains response data for the getInstanceProcessModuleSlot operation.
 */
export type WebAppsGetInstanceProcessModuleSlotResponse = ProcessModuleInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProcessModuleInfo;
    };
};

/**
 * Contains response data for the listInstanceProcessThreadsSlot operation.
 */
export type WebAppsListInstanceProcessThreadsSlotResponse = ProcessThreadInfoCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProcessThreadInfoCollection;
    };
};

/**
 * Contains response data for the getInstanceProcessThreadSlot operation.
 */
export type WebAppsGetInstanceProcessThreadSlotResponse = ProcessThreadInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProcessThreadInfo;
    };
};

/**
 * Contains response data for the isCloneableSlot operation.
 */
export type WebAppsIsCloneableSlotResponse = SiteCloneability & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteCloneability;
    };
};

/**
 * Contains response data for the listSyncFunctionTriggersSlot operation.
 */
export type WebAppsListSyncFunctionTriggersSlotResponse = FunctionSecrets & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FunctionSecrets;
    };
};

/**
 * Contains response data for the listMetricDefinitionsSlot operation.
 */
export type WebAppsListMetricDefinitionsSlotResponse = ResourceMetricDefinitionCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceMetricDefinitionCollection;
    };
};

/**
 * Contains response data for the listMetricsSlot operation.
 */
export type WebAppsListMetricsSlotResponse = ResourceMetricCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceMetricCollection;
    };
};

/**
 * Contains response data for the getMigrateMySqlStatusSlot operation.
 */
export type WebAppsGetMigrateMySqlStatusSlotResponse = MigrateMySqlStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MigrateMySqlStatus;
    };
};

/**
 * Contains response data for the listNetworkFeaturesSlot operation.
 */
export type WebAppsListNetworkFeaturesSlotResponse = NetworkFeatures & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NetworkFeatures;
    };
};

/**
 * Contains response data for the getNetworkTraceOperationSlot operation.
 */
export type WebAppsGetNetworkTraceOperationSlotResponse = {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the startWebSiteNetworkTraceSlot operation.
 */
export type WebAppsStartWebSiteNetworkTraceSlotResponse = {
  /**
   * The parsed response body.
   */
  body: string;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the startWebSiteNetworkTraceOperationSlot operation.
 */
export type WebAppsStartWebSiteNetworkTraceOperationSlotResponse = {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the getNetworkTracesSlot operation.
 */
export type WebAppsGetNetworkTracesSlotResponse = Array<NetworkTrace> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NetworkTrace[];
    };
};

/**
 * Contains response data for the getNetworkTraceOperationSlotV2 operation.
 */
export type WebAppsGetNetworkTraceOperationSlotV2Response = {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the getNetworkTracesSlotV2 operation.
 */
export type WebAppsGetNetworkTracesSlotV2Response = Array<NetworkTrace> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NetworkTrace[];
    };
};

/**
 * Contains response data for the listPerfMonCountersSlot operation.
 */
export type WebAppsListPerfMonCountersSlotResponse = PerfMonCounterCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PerfMonCounterCollection;
    };
};

/**
 * Contains response data for the getSitePhpErrorLogFlagSlot operation.
 */
export type WebAppsGetSitePhpErrorLogFlagSlotResponse = SitePhpErrorLogFlag & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SitePhpErrorLogFlag;
    };
};

/**
 * Contains response data for the listPremierAddOnsSlot operation.
 */
export type WebAppsListPremierAddOnsSlotResponse = PremierAddOn & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PremierAddOn;
    };
};

/**
 * Contains response data for the getPremierAddOnSlot operation.
 */
export type WebAppsGetPremierAddOnSlotResponse = PremierAddOn & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PremierAddOn;
    };
};

/**
 * Contains response data for the addPremierAddOnSlot operation.
 */
export type WebAppsAddPremierAddOnSlotResponse = PremierAddOn & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PremierAddOn;
    };
};

/**
 * Contains response data for the updatePremierAddOnSlot operation.
 */
export type WebAppsUpdatePremierAddOnSlotResponse = PremierAddOn & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PremierAddOn;
    };
};

/**
 * Contains response data for the getPrivateAccessSlot operation.
 */
export type WebAppsGetPrivateAccessSlotResponse = PrivateAccess & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateAccess;
    };
};

/**
 * Contains response data for the putPrivateAccessVnetSlot operation.
 */
export type WebAppsPutPrivateAccessVnetSlotResponse = PrivateAccess & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateAccess;
    };
};

/**
 * Contains response data for the listProcessesSlot operation.
 */
export type WebAppsListProcessesSlotResponse = ProcessInfoCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProcessInfoCollection;
    };
};

/**
 * Contains response data for the getProcessSlot operation.
 */
export type WebAppsGetProcessSlotResponse = ProcessInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProcessInfo;
    };
};

/**
 * Contains response data for the getProcessDumpSlot operation.
 */
export type WebAppsGetProcessDumpSlotResponse = {
  /**
   * BROWSER ONLY
   *
   * The response body as a browser Blob.
   * Always undefined in node.js.
   */
  blobBody?: Promise<Blob>;
  /**
   * NODEJS ONLY
   *
   * The response body as a node.js Readable stream.
   * Always undefined in the browser.
   */
  readableStreamBody?: NodeJS.ReadableStream;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse;
};

/**
 * Contains response data for the listProcessModulesSlot operation.
 */
export type WebAppsListProcessModulesSlotResponse = ProcessModuleInfoCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProcessModuleInfoCollection;
    };
};

/**
 * Contains response data for the getProcessModuleSlot operation.
 */
export type WebAppsGetProcessModuleSlotResponse = ProcessModuleInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProcessModuleInfo;
    };
};

/**
 * Contains response data for the listProcessThreadsSlot operation.
 */
export type WebAppsListProcessThreadsSlotResponse = ProcessThreadInfoCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProcessThreadInfoCollection;
    };
};

/**
 * Contains response data for the getProcessThreadSlot operation.
 */
export type WebAppsGetProcessThreadSlotResponse = ProcessThreadInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProcessThreadInfo;
    };
};

/**
 * Contains response data for the listPublicCertificatesSlot operation.
 */
export type WebAppsListPublicCertificatesSlotResponse = PublicCertificateCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PublicCertificateCollection;
    };
};

/**
 * Contains response data for the getPublicCertificateSlot operation.
 */
export type WebAppsGetPublicCertificateSlotResponse = PublicCertificate & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PublicCertificate;
    };
};

/**
 * Contains response data for the createOrUpdatePublicCertificateSlot operation.
 */
export type WebAppsCreateOrUpdatePublicCertificateSlotResponse = PublicCertificate & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PublicCertificate;
    };
};

/**
 * Contains response data for the listPublishingProfileXmlWithSecretsSlot operation.
 */
export type WebAppsListPublishingProfileXmlWithSecretsSlotResponse = {
  /**
   * BROWSER ONLY
   *
   * The response body as a browser Blob.
   * Always undefined in node.js.
   */
  blobBody?: Promise<Blob>;
  /**
   * NODEJS ONLY
   *
   * The response body as a node.js Readable stream.
   * Always undefined in the browser.
   */
  readableStreamBody?: NodeJS.ReadableStream;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse;
};

/**
 * Contains response data for the listSiteExtensionsSlot operation.
 */
export type WebAppsListSiteExtensionsSlotResponse = SiteExtensionInfoCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteExtensionInfoCollection;
    };
};

/**
 * Contains response data for the getSiteExtensionSlot operation.
 */
export type WebAppsGetSiteExtensionSlotResponse = SiteExtensionInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteExtensionInfo;
    };
};

/**
 * Contains response data for the installSiteExtensionSlot operation.
 */
export type WebAppsInstallSiteExtensionSlotResponse = SiteExtensionInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteExtensionInfo;
    };
};

/**
 * Contains response data for the listSlotDifferencesSlot operation.
 */
export type WebAppsListSlotDifferencesSlotResponse = SlotDifferenceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SlotDifferenceCollection;
    };
};

/**
 * Contains response data for the listSnapshotsSlot operation.
 */
export type WebAppsListSnapshotsSlotResponse = SnapshotCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SnapshotCollection;
    };
};

/**
 * Contains response data for the getSourceControlSlot operation.
 */
export type WebAppsGetSourceControlSlotResponse = SiteSourceControl & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteSourceControl;
    };
};

/**
 * Contains response data for the createOrUpdateSourceControlSlot operation.
 */
export type WebAppsCreateOrUpdateSourceControlSlotResponse = SiteSourceControl & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteSourceControl;
    };
};

/**
 * Contains response data for the updateSourceControlSlot operation.
 */
export type WebAppsUpdateSourceControlSlotResponse = SiteSourceControl & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteSourceControl;
    };
};

/**
 * Contains response data for the startNetworkTraceSlot operation.
 */
export type WebAppsStartNetworkTraceSlotResponse = {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the listTriggeredWebJobsSlot operation.
 */
export type WebAppsListTriggeredWebJobsSlotResponse = TriggeredWebJobCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TriggeredWebJobCollection;
    };
};

/**
 * Contains response data for the getTriggeredWebJobSlot operation.
 */
export type WebAppsGetTriggeredWebJobSlotResponse = TriggeredWebJob & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TriggeredWebJob;
    };
};

/**
 * Contains response data for the listTriggeredWebJobHistorySlot operation.
 */
export type WebAppsListTriggeredWebJobHistorySlotResponse = TriggeredJobHistoryCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TriggeredJobHistoryCollection;
    };
};

/**
 * Contains response data for the getTriggeredWebJobHistorySlot operation.
 */
export type WebAppsGetTriggeredWebJobHistorySlotResponse = TriggeredJobHistory & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TriggeredJobHistory;
    };
};

/**
 * Contains response data for the listUsagesSlot operation.
 */
export type WebAppsListUsagesSlotResponse = CsmUsageQuotaCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CsmUsageQuotaCollection;
    };
};

/**
 * Contains response data for the listVnetConnectionsSlot operation.
 */
export type WebAppsListVnetConnectionsSlotResponse = Array<VnetInfo> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VnetInfo[];
    };
};

/**
 * Contains response data for the getVnetConnectionSlot operation.
 */
export type WebAppsGetVnetConnectionSlotResponse = VnetInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VnetInfo;
    };
};

/**
 * Contains response data for the createOrUpdateVnetConnectionSlot operation.
 */
export type WebAppsCreateOrUpdateVnetConnectionSlotResponse = VnetInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VnetInfo;
    };
};

/**
 * Contains response data for the updateVnetConnectionSlot operation.
 */
export type WebAppsUpdateVnetConnectionSlotResponse = VnetInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VnetInfo;
    };
};

/**
 * Contains response data for the getVnetConnectionGatewaySlot operation.
 */
export type WebAppsGetVnetConnectionGatewaySlotResponse = VnetGateway & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VnetGateway;
    };
};

/**
 * Contains response data for the createOrUpdateVnetConnectionGatewaySlot operation.
 */
export type WebAppsCreateOrUpdateVnetConnectionGatewaySlotResponse = VnetGateway & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VnetGateway;
    };
};

/**
 * Contains response data for the updateVnetConnectionGatewaySlot operation.
 */
export type WebAppsUpdateVnetConnectionGatewaySlotResponse = VnetGateway & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VnetGateway;
    };
};

/**
 * Contains response data for the listWebJobsSlot operation.
 */
export type WebAppsListWebJobsSlotResponse = WebJobCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WebJobCollection;
    };
};

/**
 * Contains response data for the getWebJobSlot operation.
 */
export type WebAppsGetWebJobSlotResponse = WebJob & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WebJob;
    };
};

/**
 * Contains response data for the listSlotDifferencesFromProduction operation.
 */
export type WebAppsListSlotDifferencesFromProductionResponse = SlotDifferenceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SlotDifferenceCollection;
    };
};

/**
 * Contains response data for the listSnapshots operation.
 */
export type WebAppsListSnapshotsResponse = SnapshotCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SnapshotCollection;
    };
};

/**
 * Contains response data for the getSourceControl operation.
 */
export type WebAppsGetSourceControlResponse = SiteSourceControl & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteSourceControl;
    };
};

/**
 * Contains response data for the createOrUpdateSourceControl operation.
 */
export type WebAppsCreateOrUpdateSourceControlResponse = SiteSourceControl & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteSourceControl;
    };
};

/**
 * Contains response data for the updateSourceControl operation.
 */
export type WebAppsUpdateSourceControlResponse = SiteSourceControl & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteSourceControl;
    };
};

/**
 * Contains response data for the startNetworkTrace operation.
 */
export type WebAppsStartNetworkTraceResponse = {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the listTriggeredWebJobs operation.
 */
export type WebAppsListTriggeredWebJobsResponse = TriggeredWebJobCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TriggeredWebJobCollection;
    };
};

/**
 * Contains response data for the getTriggeredWebJob operation.
 */
export type WebAppsGetTriggeredWebJobResponse = TriggeredWebJob & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TriggeredWebJob;
    };
};

/**
 * Contains response data for the listTriggeredWebJobHistory operation.
 */
export type WebAppsListTriggeredWebJobHistoryResponse = TriggeredJobHistoryCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TriggeredJobHistoryCollection;
    };
};

/**
 * Contains response data for the getTriggeredWebJobHistory operation.
 */
export type WebAppsGetTriggeredWebJobHistoryResponse = TriggeredJobHistory & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TriggeredJobHistory;
    };
};

/**
 * Contains response data for the listUsages operation.
 */
export type WebAppsListUsagesResponse = CsmUsageQuotaCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CsmUsageQuotaCollection;
    };
};

/**
 * Contains response data for the listVnetConnections operation.
 */
export type WebAppsListVnetConnectionsResponse = Array<VnetInfo> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VnetInfo[];
    };
};

/**
 * Contains response data for the getVnetConnection operation.
 */
export type WebAppsGetVnetConnectionResponse = VnetInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VnetInfo;
    };
};

/**
 * Contains response data for the createOrUpdateVnetConnection operation.
 */
export type WebAppsCreateOrUpdateVnetConnectionResponse = VnetInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VnetInfo;
    };
};

/**
 * Contains response data for the updateVnetConnection operation.
 */
export type WebAppsUpdateVnetConnectionResponse = VnetInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VnetInfo;
    };
};

/**
 * Contains response data for the getVnetConnectionGateway operation.
 */
export type WebAppsGetVnetConnectionGatewayResponse = VnetGateway & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VnetGateway;
    };
};

/**
 * Contains response data for the createOrUpdateVnetConnectionGateway operation.
 */
export type WebAppsCreateOrUpdateVnetConnectionGatewayResponse = VnetGateway & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VnetGateway;
    };
};

/**
 * Contains response data for the updateVnetConnectionGateway operation.
 */
export type WebAppsUpdateVnetConnectionGatewayResponse = VnetGateway & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VnetGateway;
    };
};

/**
 * Contains response data for the listWebJobs operation.
 */
export type WebAppsListWebJobsResponse = WebJobCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WebJobCollection;
    };
};

/**
 * Contains response data for the getWebJob operation.
 */
export type WebAppsGetWebJobResponse = WebJob & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WebJob;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type WebAppsBeginCreateOrUpdateResponse = Site & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Site;
    };
};

/**
 * Contains response data for the beginListPublishingCredentials operation.
 */
export type WebAppsBeginListPublishingCredentialsResponse = User & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: User;
    };
};

/**
 * Contains response data for the beginCreateMSDeployOperation operation.
 */
export type WebAppsBeginCreateMSDeployOperationResponse = MSDeployStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MSDeployStatus;
    };
};

/**
 * Contains response data for the beginCreateFunction operation.
 */
export type WebAppsBeginCreateFunctionResponse = FunctionEnvelope & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FunctionEnvelope;
    };
};

/**
 * Contains response data for the beginCreateInstanceMSDeployOperation operation.
 */
export type WebAppsBeginCreateInstanceMSDeployOperationResponse = MSDeployStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MSDeployStatus;
    };
};

/**
 * Contains response data for the beginMigrateStorage operation.
 */
export type WebAppsBeginMigrateStorageResponse = StorageMigrationResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StorageMigrationResponse;
    };
};

/**
 * Contains response data for the beginMigrateMySql operation.
 */
export type WebAppsBeginMigrateMySqlResponse = Operation & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Operation;
    };
};

/**
 * Contains response data for the beginStartWebSiteNetworkTraceOperation operation.
 */
export type WebAppsBeginStartWebSiteNetworkTraceOperationResponse = {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the beginInstallSiteExtension operation.
 */
export type WebAppsBeginInstallSiteExtensionResponse = SiteExtensionInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteExtensionInfo;
    };
};

/**
 * Contains response data for the beginCreateOrUpdateSlot operation.
 */
export type WebAppsBeginCreateOrUpdateSlotResponse = Site & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Site;
    };
};

/**
 * Contains response data for the beginListPublishingCredentialsSlot operation.
 */
export type WebAppsBeginListPublishingCredentialsSlotResponse = User & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: User;
    };
};

/**
 * Contains response data for the beginCreateMSDeployOperationSlot operation.
 */
export type WebAppsBeginCreateMSDeployOperationSlotResponse = MSDeployStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MSDeployStatus;
    };
};

/**
 * Contains response data for the beginCreateInstanceFunctionSlot operation.
 */
export type WebAppsBeginCreateInstanceFunctionSlotResponse = FunctionEnvelope & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FunctionEnvelope;
    };
};

/**
 * Contains response data for the beginCreateInstanceMSDeployOperationSlot operation.
 */
export type WebAppsBeginCreateInstanceMSDeployOperationSlotResponse = MSDeployStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MSDeployStatus;
    };
};

/**
 * Contains response data for the beginStartWebSiteNetworkTraceOperationSlot operation.
 */
export type WebAppsBeginStartWebSiteNetworkTraceOperationSlotResponse = {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the beginInstallSiteExtensionSlot operation.
 */
export type WebAppsBeginInstallSiteExtensionSlotResponse = SiteExtensionInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteExtensionInfo;
    };
};

/**
 * Contains response data for the beginCreateOrUpdateSourceControlSlot operation.
 */
export type WebAppsBeginCreateOrUpdateSourceControlSlotResponse = SiteSourceControl & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteSourceControl;
    };
};

/**
 * Contains response data for the beginStartNetworkTraceSlot operation.
 */
export type WebAppsBeginStartNetworkTraceSlotResponse = {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the beginCreateOrUpdateSourceControl operation.
 */
export type WebAppsBeginCreateOrUpdateSourceControlResponse = SiteSourceControl & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteSourceControl;
    };
};

/**
 * Contains response data for the beginStartNetworkTrace operation.
 */
export type WebAppsBeginStartNetworkTraceResponse = {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type WebAppsListNextResponse = WebAppCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WebAppCollection;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type WebAppsListByResourceGroupNextResponse = WebAppCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WebAppCollection;
    };
};

/**
 * Contains response data for the listBackupsNext operation.
 */
export type WebAppsListBackupsNextResponse = BackupItemCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupItemCollection;
    };
};

/**
 * Contains response data for the listConfigurationsNext operation.
 */
export type WebAppsListConfigurationsNextResponse = SiteConfigResourceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteConfigResourceCollection;
    };
};

/**
 * Contains response data for the listConfigurationSnapshotInfoNext operation.
 */
export type WebAppsListConfigurationSnapshotInfoNextResponse = SiteConfigurationSnapshotInfoCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteConfigurationSnapshotInfoCollection;
    };
};

/**
 * Contains response data for the listContinuousWebJobsNext operation.
 */
export type WebAppsListContinuousWebJobsNextResponse = ContinuousWebJobCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ContinuousWebJobCollection;
    };
};

/**
 * Contains response data for the listDeploymentsNext operation.
 */
export type WebAppsListDeploymentsNextResponse = DeploymentCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DeploymentCollection;
    };
};

/**
 * Contains response data for the listDomainOwnershipIdentifiersNext operation.
 */
export type WebAppsListDomainOwnershipIdentifiersNextResponse = IdentifierCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IdentifierCollection;
    };
};

/**
 * Contains response data for the listFunctionsNext operation.
 */
export type WebAppsListFunctionsNextResponse = FunctionEnvelopeCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FunctionEnvelopeCollection;
    };
};

/**
 * Contains response data for the listHostNameBindingsNext operation.
 */
export type WebAppsListHostNameBindingsNextResponse = HostNameBindingCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HostNameBindingCollection;
    };
};

/**
 * Contains response data for the listInstanceIdentifiersNext operation.
 */
export type WebAppsListInstanceIdentifiersNextResponse = WebAppInstanceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WebAppInstanceCollection;
    };
};

/**
 * Contains response data for the listInstanceProcessesNext operation.
 */
export type WebAppsListInstanceProcessesNextResponse = ProcessInfoCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProcessInfoCollection;
    };
};

/**
 * Contains response data for the listInstanceProcessModulesNext operation.
 */
export type WebAppsListInstanceProcessModulesNextResponse = ProcessModuleInfoCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProcessModuleInfoCollection;
    };
};

/**
 * Contains response data for the listInstanceProcessThreadsNext operation.
 */
export type WebAppsListInstanceProcessThreadsNextResponse = ProcessThreadInfoCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProcessThreadInfoCollection;
    };
};

/**
 * Contains response data for the listMetricDefinitionsNext operation.
 */
export type WebAppsListMetricDefinitionsNextResponse = ResourceMetricDefinitionCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceMetricDefinitionCollection;
    };
};

/**
 * Contains response data for the listMetricsNext operation.
 */
export type WebAppsListMetricsNextResponse = ResourceMetricCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceMetricCollection;
    };
};

/**
 * Contains response data for the listPerfMonCountersNext operation.
 */
export type WebAppsListPerfMonCountersNextResponse = PerfMonCounterCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PerfMonCounterCollection;
    };
};

/**
 * Contains response data for the listProcessesNext operation.
 */
export type WebAppsListProcessesNextResponse = ProcessInfoCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProcessInfoCollection;
    };
};

/**
 * Contains response data for the listProcessModulesNext operation.
 */
export type WebAppsListProcessModulesNextResponse = ProcessModuleInfoCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProcessModuleInfoCollection;
    };
};

/**
 * Contains response data for the listProcessThreadsNext operation.
 */
export type WebAppsListProcessThreadsNextResponse = ProcessThreadInfoCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProcessThreadInfoCollection;
    };
};

/**
 * Contains response data for the listPublicCertificatesNext operation.
 */
export type WebAppsListPublicCertificatesNextResponse = PublicCertificateCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PublicCertificateCollection;
    };
};

/**
 * Contains response data for the listSiteExtensionsNext operation.
 */
export type WebAppsListSiteExtensionsNextResponse = SiteExtensionInfoCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteExtensionInfoCollection;
    };
};

/**
 * Contains response data for the listSlotsNext operation.
 */
export type WebAppsListSlotsNextResponse = WebAppCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WebAppCollection;
    };
};

/**
 * Contains response data for the listBackupsSlotNext operation.
 */
export type WebAppsListBackupsSlotNextResponse = BackupItemCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BackupItemCollection;
    };
};

/**
 * Contains response data for the listConfigurationsSlotNext operation.
 */
export type WebAppsListConfigurationsSlotNextResponse = SiteConfigResourceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteConfigResourceCollection;
    };
};

/**
 * Contains response data for the listConfigurationSnapshotInfoSlotNext operation.
 */
export type WebAppsListConfigurationSnapshotInfoSlotNextResponse = SiteConfigurationSnapshotInfoCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteConfigurationSnapshotInfoCollection;
    };
};

/**
 * Contains response data for the listContinuousWebJobsSlotNext operation.
 */
export type WebAppsListContinuousWebJobsSlotNextResponse = ContinuousWebJobCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ContinuousWebJobCollection;
    };
};

/**
 * Contains response data for the listDeploymentsSlotNext operation.
 */
export type WebAppsListDeploymentsSlotNextResponse = DeploymentCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DeploymentCollection;
    };
};

/**
 * Contains response data for the listDomainOwnershipIdentifiersSlotNext operation.
 */
export type WebAppsListDomainOwnershipIdentifiersSlotNextResponse = IdentifierCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IdentifierCollection;
    };
};

/**
 * Contains response data for the listInstanceFunctionsSlotNext operation.
 */
export type WebAppsListInstanceFunctionsSlotNextResponse = FunctionEnvelopeCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FunctionEnvelopeCollection;
    };
};

/**
 * Contains response data for the listHostNameBindingsSlotNext operation.
 */
export type WebAppsListHostNameBindingsSlotNextResponse = HostNameBindingCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HostNameBindingCollection;
    };
};

/**
 * Contains response data for the listInstanceIdentifiersSlotNext operation.
 */
export type WebAppsListInstanceIdentifiersSlotNextResponse = WebAppInstanceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WebAppInstanceCollection;
    };
};

/**
 * Contains response data for the listInstanceProcessesSlotNext operation.
 */
export type WebAppsListInstanceProcessesSlotNextResponse = ProcessInfoCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProcessInfoCollection;
    };
};

/**
 * Contains response data for the listInstanceProcessModulesSlotNext operation.
 */
export type WebAppsListInstanceProcessModulesSlotNextResponse = ProcessModuleInfoCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProcessModuleInfoCollection;
    };
};

/**
 * Contains response data for the listInstanceProcessThreadsSlotNext operation.
 */
export type WebAppsListInstanceProcessThreadsSlotNextResponse = ProcessThreadInfoCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProcessThreadInfoCollection;
    };
};

/**
 * Contains response data for the listMetricDefinitionsSlotNext operation.
 */
export type WebAppsListMetricDefinitionsSlotNextResponse = ResourceMetricDefinitionCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceMetricDefinitionCollection;
    };
};

/**
 * Contains response data for the listMetricsSlotNext operation.
 */
export type WebAppsListMetricsSlotNextResponse = ResourceMetricCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceMetricCollection;
    };
};

/**
 * Contains response data for the listPerfMonCountersSlotNext operation.
 */
export type WebAppsListPerfMonCountersSlotNextResponse = PerfMonCounterCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PerfMonCounterCollection;
    };
};

/**
 * Contains response data for the listProcessesSlotNext operation.
 */
export type WebAppsListProcessesSlotNextResponse = ProcessInfoCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProcessInfoCollection;
    };
};

/**
 * Contains response data for the listProcessModulesSlotNext operation.
 */
export type WebAppsListProcessModulesSlotNextResponse = ProcessModuleInfoCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProcessModuleInfoCollection;
    };
};

/**
 * Contains response data for the listProcessThreadsSlotNext operation.
 */
export type WebAppsListProcessThreadsSlotNextResponse = ProcessThreadInfoCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProcessThreadInfoCollection;
    };
};

/**
 * Contains response data for the listPublicCertificatesSlotNext operation.
 */
export type WebAppsListPublicCertificatesSlotNextResponse = PublicCertificateCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PublicCertificateCollection;
    };
};

/**
 * Contains response data for the listSiteExtensionsSlotNext operation.
 */
export type WebAppsListSiteExtensionsSlotNextResponse = SiteExtensionInfoCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SiteExtensionInfoCollection;
    };
};

/**
 * Contains response data for the listSlotDifferencesSlotNext operation.
 */
export type WebAppsListSlotDifferencesSlotNextResponse = SlotDifferenceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SlotDifferenceCollection;
    };
};

/**
 * Contains response data for the listSnapshotsSlotNext operation.
 */
export type WebAppsListSnapshotsSlotNextResponse = SnapshotCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SnapshotCollection;
    };
};

/**
 * Contains response data for the listTriggeredWebJobsSlotNext operation.
 */
export type WebAppsListTriggeredWebJobsSlotNextResponse = TriggeredWebJobCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TriggeredWebJobCollection;
    };
};

/**
 * Contains response data for the listTriggeredWebJobHistorySlotNext operation.
 */
export type WebAppsListTriggeredWebJobHistorySlotNextResponse = TriggeredJobHistoryCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TriggeredJobHistoryCollection;
    };
};

/**
 * Contains response data for the listUsagesSlotNext operation.
 */
export type WebAppsListUsagesSlotNextResponse = CsmUsageQuotaCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CsmUsageQuotaCollection;
    };
};

/**
 * Contains response data for the listWebJobsSlotNext operation.
 */
export type WebAppsListWebJobsSlotNextResponse = WebJobCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WebJobCollection;
    };
};

/**
 * Contains response data for the listSlotDifferencesFromProductionNext operation.
 */
export type WebAppsListSlotDifferencesFromProductionNextResponse = SlotDifferenceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SlotDifferenceCollection;
    };
};

/**
 * Contains response data for the listSnapshotsNext operation.
 */
export type WebAppsListSnapshotsNextResponse = SnapshotCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SnapshotCollection;
    };
};

/**
 * Contains response data for the listTriggeredWebJobsNext operation.
 */
export type WebAppsListTriggeredWebJobsNextResponse = TriggeredWebJobCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TriggeredWebJobCollection;
    };
};

/**
 * Contains response data for the listTriggeredWebJobHistoryNext operation.
 */
export type WebAppsListTriggeredWebJobHistoryNextResponse = TriggeredJobHistoryCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TriggeredJobHistoryCollection;
    };
};

/**
 * Contains response data for the listUsagesNext operation.
 */
export type WebAppsListUsagesNextResponse = CsmUsageQuotaCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CsmUsageQuotaCollection;
    };
};

/**
 * Contains response data for the listWebJobsNext operation.
 */
export type WebAppsListWebJobsNextResponse = WebJobCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WebJobCollection;
    };
};

/**
 * Contains response data for the list operation.
 */
export type AppServiceEnvironmentsListResponse = AppServiceEnvironmentCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AppServiceEnvironmentCollection;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type AppServiceEnvironmentsListByResourceGroupResponse = AppServiceEnvironmentCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AppServiceEnvironmentCollection;
    };
};

/**
 * Contains response data for the get operation.
 */
export type AppServiceEnvironmentsGetResponse = AppServiceEnvironmentResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AppServiceEnvironmentResource;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type AppServiceEnvironmentsCreateOrUpdateResponse = AppServiceEnvironmentResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AppServiceEnvironmentResource;
    };
};

/**
 * Contains response data for the update operation.
 */
export type AppServiceEnvironmentsUpdateResponse = AppServiceEnvironmentResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AppServiceEnvironmentResource;
    };
};

/**
 * Contains response data for the listCapacities operation.
 */
export type AppServiceEnvironmentsListCapacitiesResponse = StampCapacityCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StampCapacityCollection;
    };
};

/**
 * Contains response data for the listVips operation.
 */
export type AppServiceEnvironmentsListVipsResponse = AddressResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AddressResponse;
    };
};

/**
 * Contains response data for the changeVnet operation.
 */
export type AppServiceEnvironmentsChangeVnetResponse = WebAppCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WebAppCollection;
    };
};

/**
 * Contains response data for the listDiagnostics operation.
 */
export type AppServiceEnvironmentsListDiagnosticsResponse = Array<HostingEnvironmentDiagnostics> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HostingEnvironmentDiagnostics[];
    };
};

/**
 * Contains response data for the getDiagnosticsItem operation.
 */
export type AppServiceEnvironmentsGetDiagnosticsItemResponse = HostingEnvironmentDiagnostics & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HostingEnvironmentDiagnostics;
    };
};

/**
 * Contains response data for the listMetricDefinitions operation.
 */
export type AppServiceEnvironmentsListMetricDefinitionsResponse = MetricDefinition & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MetricDefinition;
    };
};

/**
 * Contains response data for the listMetrics operation.
 */
export type AppServiceEnvironmentsListMetricsResponse = ResourceMetricCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceMetricCollection;
    };
};

/**
 * Contains response data for the listMultiRolePools operation.
 */
export type AppServiceEnvironmentsListMultiRolePoolsResponse = WorkerPoolCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkerPoolCollection;
    };
};

/**
 * Contains response data for the getMultiRolePool operation.
 */
export type AppServiceEnvironmentsGetMultiRolePoolResponse = WorkerPoolResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkerPoolResource;
    };
};

/**
 * Contains response data for the createOrUpdateMultiRolePool operation.
 */
export type AppServiceEnvironmentsCreateOrUpdateMultiRolePoolResponse = WorkerPoolResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkerPoolResource;
    };
};

/**
 * Contains response data for the updateMultiRolePool operation.
 */
export type AppServiceEnvironmentsUpdateMultiRolePoolResponse = WorkerPoolResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkerPoolResource;
    };
};

/**
 * Contains response data for the listMultiRolePoolInstanceMetricDefinitions operation.
 */
export type AppServiceEnvironmentsListMultiRolePoolInstanceMetricDefinitionsResponse = ResourceMetricDefinitionCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceMetricDefinitionCollection;
    };
};

/**
 * Contains response data for the listMultiRolePoolInstanceMetrics operation.
 */
export type AppServiceEnvironmentsListMultiRolePoolInstanceMetricsResponse = ResourceMetricCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceMetricCollection;
    };
};

/**
 * Contains response data for the listMultiRoleMetricDefinitions operation.
 */
export type AppServiceEnvironmentsListMultiRoleMetricDefinitionsResponse = ResourceMetricDefinitionCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceMetricDefinitionCollection;
    };
};

/**
 * Contains response data for the listMultiRoleMetrics operation.
 */
export type AppServiceEnvironmentsListMultiRoleMetricsResponse = ResourceMetricCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceMetricCollection;
    };
};

/**
 * Contains response data for the listMultiRolePoolSkus operation.
 */
export type AppServiceEnvironmentsListMultiRolePoolSkusResponse = SkuInfoCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SkuInfoCollection;
    };
};

/**
 * Contains response data for the listMultiRoleUsages operation.
 */
export type AppServiceEnvironmentsListMultiRoleUsagesResponse = UsageCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: UsageCollection;
    };
};

/**
 * Contains response data for the listOperations operation.
 */
export type AppServiceEnvironmentsListOperationsResponse = Array<Operation> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Operation[];
    };
};

/**
 * Contains response data for the resume operation.
 */
export type AppServiceEnvironmentsResumeResponse = WebAppCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WebAppCollection;
    };
};

/**
 * Contains response data for the listAppServicePlans operation.
 */
export type AppServiceEnvironmentsListAppServicePlansResponse = AppServicePlanCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AppServicePlanCollection;
    };
};

/**
 * Contains response data for the listWebApps operation.
 */
export type AppServiceEnvironmentsListWebAppsResponse = WebAppCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WebAppCollection;
    };
};

/**
 * Contains response data for the suspend operation.
 */
export type AppServiceEnvironmentsSuspendResponse = WebAppCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WebAppCollection;
    };
};

/**
 * Contains response data for the listUsages operation.
 */
export type AppServiceEnvironmentsListUsagesResponse = CsmUsageQuotaCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CsmUsageQuotaCollection;
    };
};

/**
 * Contains response data for the listWorkerPools operation.
 */
export type AppServiceEnvironmentsListWorkerPoolsResponse = WorkerPoolCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkerPoolCollection;
    };
};

/**
 * Contains response data for the getWorkerPool operation.
 */
export type AppServiceEnvironmentsGetWorkerPoolResponse = WorkerPoolResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkerPoolResource;
    };
};

/**
 * Contains response data for the createOrUpdateWorkerPool operation.
 */
export type AppServiceEnvironmentsCreateOrUpdateWorkerPoolResponse = WorkerPoolResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkerPoolResource;
    };
};

/**
 * Contains response data for the updateWorkerPool operation.
 */
export type AppServiceEnvironmentsUpdateWorkerPoolResponse = WorkerPoolResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkerPoolResource;
    };
};

/**
 * Contains response data for the listWorkerPoolInstanceMetricDefinitions operation.
 */
export type AppServiceEnvironmentsListWorkerPoolInstanceMetricDefinitionsResponse = ResourceMetricDefinitionCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceMetricDefinitionCollection;
    };
};

/**
 * Contains response data for the listWorkerPoolInstanceMetrics operation.
 */
export type AppServiceEnvironmentsListWorkerPoolInstanceMetricsResponse = ResourceMetricCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceMetricCollection;
    };
};

/**
 * Contains response data for the listWebWorkerMetricDefinitions operation.
 */
export type AppServiceEnvironmentsListWebWorkerMetricDefinitionsResponse = ResourceMetricDefinitionCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceMetricDefinitionCollection;
    };
};

/**
 * Contains response data for the listWebWorkerMetrics operation.
 */
export type AppServiceEnvironmentsListWebWorkerMetricsResponse = ResourceMetricCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceMetricCollection;
    };
};

/**
 * Contains response data for the listWorkerPoolSkus operation.
 */
export type AppServiceEnvironmentsListWorkerPoolSkusResponse = SkuInfoCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SkuInfoCollection;
    };
};

/**
 * Contains response data for the listWebWorkerUsages operation.
 */
export type AppServiceEnvironmentsListWebWorkerUsagesResponse = UsageCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: UsageCollection;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type AppServiceEnvironmentsBeginCreateOrUpdateResponse = AppServiceEnvironmentResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AppServiceEnvironmentResource;
    };
};

/**
 * Contains response data for the beginChangeVnet operation.
 */
export type AppServiceEnvironmentsBeginChangeVnetResponse = WebAppCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WebAppCollection;
    };
};

/**
 * Contains response data for the beginCreateOrUpdateMultiRolePool operation.
 */
export type AppServiceEnvironmentsBeginCreateOrUpdateMultiRolePoolResponse = WorkerPoolResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkerPoolResource;
    };
};

/**
 * Contains response data for the beginResume operation.
 */
export type AppServiceEnvironmentsBeginResumeResponse = WebAppCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WebAppCollection;
    };
};

/**
 * Contains response data for the beginSuspend operation.
 */
export type AppServiceEnvironmentsBeginSuspendResponse = WebAppCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WebAppCollection;
    };
};

/**
 * Contains response data for the beginCreateOrUpdateWorkerPool operation.
 */
export type AppServiceEnvironmentsBeginCreateOrUpdateWorkerPoolResponse = WorkerPoolResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkerPoolResource;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type AppServiceEnvironmentsListNextResponse = AppServiceEnvironmentCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AppServiceEnvironmentCollection;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type AppServiceEnvironmentsListByResourceGroupNextResponse = AppServiceEnvironmentCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AppServiceEnvironmentCollection;
    };
};

/**
 * Contains response data for the listCapacitiesNext operation.
 */
export type AppServiceEnvironmentsListCapacitiesNextResponse = StampCapacityCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StampCapacityCollection;
    };
};

/**
 * Contains response data for the changeVnetNext operation.
 */
export type AppServiceEnvironmentsChangeVnetNextResponse = WebAppCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WebAppCollection;
    };
};

/**
 * Contains response data for the listMetricsNext operation.
 */
export type AppServiceEnvironmentsListMetricsNextResponse = ResourceMetricCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceMetricCollection;
    };
};

/**
 * Contains response data for the listMultiRolePoolsNext operation.
 */
export type AppServiceEnvironmentsListMultiRolePoolsNextResponse = WorkerPoolCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkerPoolCollection;
    };
};

/**
 * Contains response data for the listMultiRolePoolInstanceMetricDefinitionsNext operation.
 */
export type AppServiceEnvironmentsListMultiRolePoolInstanceMetricDefinitionsNextResponse = ResourceMetricDefinitionCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceMetricDefinitionCollection;
    };
};

/**
 * Contains response data for the listMultiRolePoolInstanceMetricsNext operation.
 */
export type AppServiceEnvironmentsListMultiRolePoolInstanceMetricsNextResponse = ResourceMetricCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceMetricCollection;
    };
};

/**
 * Contains response data for the listMultiRoleMetricDefinitionsNext operation.
 */
export type AppServiceEnvironmentsListMultiRoleMetricDefinitionsNextResponse = ResourceMetricDefinitionCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceMetricDefinitionCollection;
    };
};

/**
 * Contains response data for the listMultiRoleMetricsNext operation.
 */
export type AppServiceEnvironmentsListMultiRoleMetricsNextResponse = ResourceMetricCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceMetricCollection;
    };
};

/**
 * Contains response data for the listMultiRolePoolSkusNext operation.
 */
export type AppServiceEnvironmentsListMultiRolePoolSkusNextResponse = SkuInfoCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SkuInfoCollection;
    };
};

/**
 * Contains response data for the listMultiRoleUsagesNext operation.
 */
export type AppServiceEnvironmentsListMultiRoleUsagesNextResponse = UsageCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: UsageCollection;
    };
};

/**
 * Contains response data for the resumeNext operation.
 */
export type AppServiceEnvironmentsResumeNextResponse = WebAppCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WebAppCollection;
    };
};

/**
 * Contains response data for the listAppServicePlansNext operation.
 */
export type AppServiceEnvironmentsListAppServicePlansNextResponse = AppServicePlanCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AppServicePlanCollection;
    };
};

/**
 * Contains response data for the listWebAppsNext operation.
 */
export type AppServiceEnvironmentsListWebAppsNextResponse = WebAppCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WebAppCollection;
    };
};

/**
 * Contains response data for the suspendNext operation.
 */
export type AppServiceEnvironmentsSuspendNextResponse = WebAppCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WebAppCollection;
    };
};

/**
 * Contains response data for the listUsagesNext operation.
 */
export type AppServiceEnvironmentsListUsagesNextResponse = CsmUsageQuotaCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CsmUsageQuotaCollection;
    };
};

/**
 * Contains response data for the listWorkerPoolsNext operation.
 */
export type AppServiceEnvironmentsListWorkerPoolsNextResponse = WorkerPoolCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkerPoolCollection;
    };
};

/**
 * Contains response data for the listWorkerPoolInstanceMetricDefinitionsNext operation.
 */
export type AppServiceEnvironmentsListWorkerPoolInstanceMetricDefinitionsNextResponse = ResourceMetricDefinitionCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceMetricDefinitionCollection;
    };
};

/**
 * Contains response data for the listWorkerPoolInstanceMetricsNext operation.
 */
export type AppServiceEnvironmentsListWorkerPoolInstanceMetricsNextResponse = ResourceMetricCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceMetricCollection;
    };
};

/**
 * Contains response data for the listWebWorkerMetricDefinitionsNext operation.
 */
export type AppServiceEnvironmentsListWebWorkerMetricDefinitionsNextResponse = ResourceMetricDefinitionCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceMetricDefinitionCollection;
    };
};

/**
 * Contains response data for the listWebWorkerMetricsNext operation.
 */
export type AppServiceEnvironmentsListWebWorkerMetricsNextResponse = ResourceMetricCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceMetricCollection;
    };
};

/**
 * Contains response data for the listWorkerPoolSkusNext operation.
 */
export type AppServiceEnvironmentsListWorkerPoolSkusNextResponse = SkuInfoCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SkuInfoCollection;
    };
};

/**
 * Contains response data for the listWebWorkerUsagesNext operation.
 */
export type AppServiceEnvironmentsListWebWorkerUsagesNextResponse = UsageCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: UsageCollection;
    };
};

/**
 * Contains response data for the beginChangeVnetNext operation.
 */
export type AppServiceEnvironmentsBeginChangeVnetNextResponse = WebAppCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WebAppCollection;
    };
};

/**
 * Contains response data for the beginResumeNext operation.
 */
export type AppServiceEnvironmentsBeginResumeNextResponse = WebAppCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WebAppCollection;
    };
};

/**
 * Contains response data for the beginSuspendNext operation.
 */
export type AppServiceEnvironmentsBeginSuspendNextResponse = WebAppCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WebAppCollection;
    };
};

/**
 * Contains response data for the list operation.
 */
export type AppServicePlansListResponse = AppServicePlanCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AppServicePlanCollection;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type AppServicePlansListByResourceGroupResponse = AppServicePlanCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AppServicePlanCollection;
    };
};

/**
 * Contains response data for the get operation.
 */
export type AppServicePlansGetResponse = AppServicePlan & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AppServicePlan;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type AppServicePlansCreateOrUpdateResponse = AppServicePlan & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AppServicePlan;
    };
};

/**
 * Contains response data for the update operation.
 */
export type AppServicePlansUpdateResponse = AppServicePlan & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AppServicePlan;
    };
};

/**
 * Contains response data for the listCapabilities operation.
 */
export type AppServicePlansListCapabilitiesResponse = Array<Capability> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Capability[];
    };
};

/**
 * Contains response data for the getHybridConnection operation.
 */
export type AppServicePlansGetHybridConnectionResponse = HybridConnection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HybridConnection;
    };
};

/**
 * Contains response data for the listHybridConnectionKeys operation.
 */
export type AppServicePlansListHybridConnectionKeysResponse = HybridConnectionKey & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HybridConnectionKey;
    };
};

/**
 * Contains response data for the listWebAppsByHybridConnection operation.
 */
export type AppServicePlansListWebAppsByHybridConnectionResponse = ResourceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceCollection;
    };
};

/**
 * Contains response data for the getHybridConnectionPlanLimit operation.
 */
export type AppServicePlansGetHybridConnectionPlanLimitResponse = HybridConnectionLimits & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HybridConnectionLimits;
    };
};

/**
 * Contains response data for the listHybridConnections operation.
 */
export type AppServicePlansListHybridConnectionsResponse = HybridConnectionCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HybridConnectionCollection;
    };
};

/**
 * Contains response data for the listMetricDefintions operation.
 */
export type AppServicePlansListMetricDefintionsResponse = ResourceMetricDefinitionCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceMetricDefinitionCollection;
    };
};

/**
 * Contains response data for the listMetrics operation.
 */
export type AppServicePlansListMetricsResponse = ResourceMetricCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceMetricCollection;
    };
};

/**
 * Contains response data for the listWebApps operation.
 */
export type AppServicePlansListWebAppsResponse = WebAppCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WebAppCollection;
    };
};

/**
 * Contains response data for the getServerFarmSkus operation.
 */
export type AppServicePlansGetServerFarmSkusResponse = {
  /**
   * The parsed response body.
   */
  body: any;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the listUsages operation.
 */
export type AppServicePlansListUsagesResponse = CsmUsageQuotaCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CsmUsageQuotaCollection;
    };
};

/**
 * Contains response data for the listVnets operation.
 */
export type AppServicePlansListVnetsResponse = Array<VnetInfo> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VnetInfo[];
    };
};

/**
 * Contains response data for the getVnetFromServerFarm operation.
 */
export type AppServicePlansGetVnetFromServerFarmResponse = VnetInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VnetInfo;
    };
};

/**
 * Contains response data for the getVnetGateway operation.
 */
export type AppServicePlansGetVnetGatewayResponse = VnetGateway & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VnetGateway;
    };
};

/**
 * Contains response data for the updateVnetGateway operation.
 */
export type AppServicePlansUpdateVnetGatewayResponse = VnetGateway & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VnetGateway;
    };
};

/**
 * Contains response data for the listRoutesForVnet operation.
 */
export type AppServicePlansListRoutesForVnetResponse = Array<VnetRoute> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VnetRoute[];
    };
};

/**
 * Contains response data for the getRouteForVnet operation.
 */
export type AppServicePlansGetRouteForVnetResponse = Array<VnetRoute> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VnetRoute[];
    };
};

/**
 * Contains response data for the createOrUpdateVnetRoute operation.
 */
export type AppServicePlansCreateOrUpdateVnetRouteResponse = VnetRoute & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VnetRoute;
    };
};

/**
 * Contains response data for the updateVnetRoute operation.
 */
export type AppServicePlansUpdateVnetRouteResponse = VnetRoute & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VnetRoute;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type AppServicePlansBeginCreateOrUpdateResponse = AppServicePlan & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AppServicePlan;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type AppServicePlansListNextResponse = AppServicePlanCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AppServicePlanCollection;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type AppServicePlansListByResourceGroupNextResponse = AppServicePlanCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AppServicePlanCollection;
    };
};

/**
 * Contains response data for the listWebAppsByHybridConnectionNext operation.
 */
export type AppServicePlansListWebAppsByHybridConnectionNextResponse = ResourceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceCollection;
    };
};

/**
 * Contains response data for the listHybridConnectionsNext operation.
 */
export type AppServicePlansListHybridConnectionsNextResponse = HybridConnectionCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HybridConnectionCollection;
    };
};

/**
 * Contains response data for the listMetricDefintionsNext operation.
 */
export type AppServicePlansListMetricDefintionsNextResponse = ResourceMetricDefinitionCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceMetricDefinitionCollection;
    };
};

/**
 * Contains response data for the listMetricsNext operation.
 */
export type AppServicePlansListMetricsNextResponse = ResourceMetricCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceMetricCollection;
    };
};

/**
 * Contains response data for the listWebAppsNext operation.
 */
export type AppServicePlansListWebAppsNextResponse = WebAppCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WebAppCollection;
    };
};

/**
 * Contains response data for the listUsagesNext operation.
 */
export type AppServicePlansListUsagesNextResponse = CsmUsageQuotaCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CsmUsageQuotaCollection;
    };
};

/**
 * Contains response data for the list operation.
 */
export type ResourceHealthMetadataListResponse = ResourceHealthMetadataCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceHealthMetadataCollection;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type ResourceHealthMetadataListByResourceGroupResponse = ResourceHealthMetadataCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceHealthMetadataCollection;
    };
};

/**
 * Contains response data for the listBySite operation.
 */
export type ResourceHealthMetadataListBySiteResponse = ResourceHealthMetadataCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceHealthMetadataCollection;
    };
};

/**
 * Contains response data for the getBySite operation.
 */
export type ResourceHealthMetadataGetBySiteResponse = ResourceHealthMetadata & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceHealthMetadata;
    };
};

/**
 * Contains response data for the listBySiteSlot operation.
 */
export type ResourceHealthMetadataListBySiteSlotResponse = ResourceHealthMetadataCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceHealthMetadataCollection;
    };
};

/**
 * Contains response data for the getBySiteSlot operation.
 */
export type ResourceHealthMetadataGetBySiteSlotResponse = ResourceHealthMetadata & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceHealthMetadata;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type ResourceHealthMetadataListNextResponse = ResourceHealthMetadataCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceHealthMetadataCollection;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type ResourceHealthMetadataListByResourceGroupNextResponse = ResourceHealthMetadataCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceHealthMetadataCollection;
    };
};

/**
 * Contains response data for the listBySiteNext operation.
 */
export type ResourceHealthMetadataListBySiteNextResponse = ResourceHealthMetadataCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceHealthMetadataCollection;
    };
};

/**
 * Contains response data for the listBySiteSlotNext operation.
 */
export type ResourceHealthMetadataListBySiteSlotNextResponse = ResourceHealthMetadataCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceHealthMetadataCollection;
    };
};
