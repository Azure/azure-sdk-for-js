!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("ms-rest-azure-js"),require("ms-rest-js")):"function"==typeof define&&define.amd?define(["exports","ms-rest-azure-js","ms-rest-js"],t):t((e.Azure=e.Azure||{},e.Azure.ArmNetwork={}),e.msRestAzure,e.msRest)}(this,function(e,t,r){"use strict";var i=function(e,t){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)};function o(e,t){function r(){this.constructor=e}i(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}var a,n,s,p,u,l,c,d,m,y,P,N,C,w,R,f,S,g,A,G,b,h,k,z,v,I,E,M,V,x,F,q,T,L,B,O,D,H,U,W,_,K,j,Z,Q,X,$,J,Y,ee,te,re,ie,ae,oe,ne,se,pe,ue,le,ce,de,me,ye,Pe,Ne,Ce,we,Re,fe,Se,ge,Ae,Ge,be,he,ke,ze,ve,Ie,Ee,Me,Ve,xe,Fe,qe,Te,Le,Be,Oe,De,He,Ue,We,_e,Ke,je,Ze,Qe,Xe,$e,Je,Ye,et,tt,rt,it,at,ot,nt,st,pt,ut,lt,ct,dt,mt,yt,Pt,Nt,Ct,wt,Rt,ft,St,gt,At,Gt,bt,ht,kt,zt,vt,It,Et,Mt,Vt,xt,Ft,qt,Tt,Lt,Bt,Ot,Dt,Ht,Ut,Wt,_t,Kt,jt,Zt,Qt,Xt,$t,Jt,Yt,er,tr,rr,ir,ar,or,nr,sr,pr,ur,lr,cr=function(){return(cr=Object.assign||function(e){for(var t,r=1,i=arguments.length;r<i;r++)for(var a in t=arguments[r])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e}).apply(this,arguments)};(n=a||(a={})).Static="Static",n.Dynamic="Dynamic",(p=s||(s={})).Tcp="Tcp",p.Udp="Udp",p.Asterisk="*",(l=u||(u={})).Allow="Allow",l.Deny="Deny",(d=c||(c={})).Inbound="Inbound",d.Outbound="Outbound",(y=m||(m={})).VirtualNetworkGateway="VirtualNetworkGateway",y.VnetLocal="VnetLocal",y.Internet="Internet",y.VirtualAppliance="VirtualAppliance",y.None="None",(N=P||(P={})).Basic="Basic",N.Standard="Standard",(w=C||(C={})).IPv4="IPv4",w.IPv6="IPv6",(f=R||(R={})).Udp="Udp",f.Tcp="Tcp",f.All="All",(g=S||(S={})).Http="Http",g.Https="Https",(G=A||(A={})).Enabled="Enabled",G.Disabled="Disabled",(h=b||(b={})).Unknown="Unknown",h.Up="Up",h.Down="Down",h.Partial="Partial",h.Draining="Draining",(z=k||(k={})).StandardSmall="Standard_Small",z.StandardMedium="Standard_Medium",z.StandardLarge="Standard_Large",z.WAFMedium="WAF_Medium",z.WAFLarge="WAF_Large",z.StandardV2="Standard_v2",z.WAFV2="WAF_v2",(I=v||(v={})).Standard="Standard",I.WAF="WAF",I.StandardV2="Standard_v2",I.WAFV2="WAF_v2",(M=E||(E={})).TLSv10="TLSv1_0",M.TLSv11="TLSv1_1",M.TLSv12="TLSv1_2",(x=V||(V={})).Predefined="Predefined",x.Custom="Custom",(q=F||(F={})).AppGwSslPolicy20150501="AppGwSslPolicy20150501",q.AppGwSslPolicy20170401="AppGwSslPolicy20170401",q.AppGwSslPolicy20170401S="AppGwSslPolicy20170401S",(L=T||(T={})).TLSECDHERSAWITHAES256CBCSHA384="TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384",L.TLSECDHERSAWITHAES128CBCSHA256="TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256",L.TLSECDHERSAWITHAES256CBCSHA="TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA",L.TLSECDHERSAWITHAES128CBCSHA="TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA",L.TLSDHERSAWITHAES256GCMSHA384="TLS_DHE_RSA_WITH_AES_256_GCM_SHA384",L.TLSDHERSAWITHAES128GCMSHA256="TLS_DHE_RSA_WITH_AES_128_GCM_SHA256",L.TLSDHERSAWITHAES256CBCSHA="TLS_DHE_RSA_WITH_AES_256_CBC_SHA",L.TLSDHERSAWITHAES128CBCSHA="TLS_DHE_RSA_WITH_AES_128_CBC_SHA",L.TLSRSAWITHAES256GCMSHA384="TLS_RSA_WITH_AES_256_GCM_SHA384",L.TLSRSAWITHAES128GCMSHA256="TLS_RSA_WITH_AES_128_GCM_SHA256",L.TLSRSAWITHAES256CBCSHA256="TLS_RSA_WITH_AES_256_CBC_SHA256",L.TLSRSAWITHAES128CBCSHA256="TLS_RSA_WITH_AES_128_CBC_SHA256",L.TLSRSAWITHAES256CBCSHA="TLS_RSA_WITH_AES_256_CBC_SHA",L.TLSRSAWITHAES128CBCSHA="TLS_RSA_WITH_AES_128_CBC_SHA",L.TLSECDHEECDSAWITHAES256GCMSHA384="TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384",L.TLSECDHEECDSAWITHAES128GCMSHA256="TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256",L.TLSECDHEECDSAWITHAES256CBCSHA384="TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384",L.TLSECDHEECDSAWITHAES128CBCSHA256="TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256",L.TLSECDHEECDSAWITHAES256CBCSHA="TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA",L.TLSECDHEECDSAWITHAES128CBCSHA="TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA",L.TLSDHEDSSWITHAES256CBCSHA256="TLS_DHE_DSS_WITH_AES_256_CBC_SHA256",L.TLSDHEDSSWITHAES128CBCSHA256="TLS_DHE_DSS_WITH_AES_128_CBC_SHA256",L.TLSDHEDSSWITHAES256CBCSHA="TLS_DHE_DSS_WITH_AES_256_CBC_SHA",L.TLSDHEDSSWITHAES128CBCSHA="TLS_DHE_DSS_WITH_AES_128_CBC_SHA",L.TLSRSAWITH3DESEDECBCSHA="TLS_RSA_WITH_3DES_EDE_CBC_SHA",(O=B||(B={})).Basic="Basic",O.PathBasedRouting="PathBasedRouting",(H=D||(D={})).Permanent="Permanent",H.Found="Found",H.SeeOther="SeeOther",H.Temporary="Temporary",(W=U||(U={})).Stopped="Stopped",W.Starting="Starting",W.Running="Running",W.Stopping="Stopping",(K=_||(_={})).Detection="Detection",K.Prevention="Prevention",(Z=j||(j={})).Succeeded="Succeeded",Z.Updating="Updating",Z.Deleting="Deleting",Z.Failed="Failed",(X=Q||(Q={})).Allow="Allow",X.Deny="Deny",(J=$||($={})).Http="Http",J.Https="Https",(ee=Y||(Y={})).Snat="Snat",ee.Dnat="Dnat",(re=te||(te={})).TCP="TCP",re.UDP="UDP",re.Any="Any",(ae=ie||(ie={})).Available="Available",ae.InUse="InUse",(ne=oe||(oe={})).NotConfigured="NotConfigured",ne.Configuring="Configuring",ne.Configured="Configured",ne.ValidationNeeded="ValidationNeeded",(pe=se||(se={})).Allow="Allow",pe.Deny="Deny",(le=ue||(ue={})).AzurePublicPeering="AzurePublicPeering",le.AzurePrivatePeering="AzurePrivatePeering",le.MicrosoftPeering="MicrosoftPeering",(de=ce||(ce={})).Disabled="Disabled",de.Enabled="Enabled",(ye=me||(me={})).Connected="Connected",ye.Connecting="Connecting",ye.Disconnected="Disconnected",(Ne=Pe||(Pe={})).Disabled="Disabled",Ne.Enabled="Enabled",(we=Ce||(Ce={})).Standard="Standard",we.Premium="Premium",(fe=Re||(Re={})).UnlimitedData="UnlimitedData",fe.MeteredData="MeteredData",(ge=Se||(Se={})).NotProvisioned="NotProvisioned",ge.Provisioning="Provisioning",ge.Provisioned="Provisioned",ge.Deprovisioning="Deprovisioning",(Ge=Ae||(Ae={})).Basic="Basic",Ge.Standard="Standard",(he=be||(be={})).Default="Default",he.SourceIP="SourceIP",he.SourceIPProtocol="SourceIPProtocol",(ze=ke||(ke={})).Http="Http",ze.Tcp="Tcp",ze.Https="Https",(Ie=ve||(ve={})).InProgress="InProgress",Ie.Succeeded="Succeeded",Ie.Failed="Failed",(Me=Ee||(Ee={})).Tcp="Tcp",Me.Udp="Udp",Me.All="All",(xe=Ve||(Ve={})).Unknown="Unknown",xe.User="User",xe.VirtualNetworkGateway="VirtualNetworkGateway",xe.Default="Default",(qe=Fe||(Fe={})).Active="Active",qe.Invalid="Invalid",(Le=Te||(Te={})).Associated="Associated",Le.Contains="Contains",(Oe=Be||(Be={})).Inbound="Inbound",Oe.Outbound="Outbound",(He=De||(De={})).TCP="TCP",He.UDP="UDP",(We=Ue||(Ue={})).Internet="Internet",We.VirtualAppliance="VirtualAppliance",We.VirtualNetworkGateway="VirtualNetworkGateway",We.VnetLocal="VnetLocal",We.HyperNetGateway="HyperNetGateway",We.None="None",(Ke=_e||(_e={})).TCP="TCP",Ke.UDP="UDP",Ke.Any="Any",(Ze=je||(je={})).NotStarted="NotStarted",Ze.Running="Running",Ze.Stopped="Stopped",Ze.Error="Error",Ze.Unknown="Unknown",(Xe=Qe||(Qe={})).InternalError="InternalError",Xe.AgentStopped="AgentStopped",Xe.CaptureFailed="CaptureFailed",Xe.LocalFileFailed="LocalFileFailed",Xe.StorageFailed="StorageFailed",(Je=$e||($e={})).Tcp="Tcp",Je.Http="Http",Je.Https="Https",Je.Icmp="Icmp",(Ye||(Ye={})).Get="Get",(tt=et||(et={})).Local="Local",tt.Inbound="Inbound",tt.Outbound="Outbound",(it=rt||(rt={})).Error="Error",it.Warning="Warning",(ot=at||(at={})).Unknown="Unknown",ot.AgentStopped="AgentStopped",ot.GuestFirewall="GuestFirewall",ot.DnsResolution="DnsResolution",ot.SocketBind="SocketBind",ot.NetworkSecurityRule="NetworkSecurityRule",ot.UserDefinedRoute="UserDefinedRoute",ot.PortThrottled="PortThrottled",ot.Platform="Platform",(st=nt||(nt={})).Unknown="Unknown",st.Connected="Connected",st.Disconnected="Disconnected",st.Degraded="Degraded",(ut=pt||(pt={})).Uknown="Uknown",ut.Active="Active",ut.Inactive="Inactive",(ct=lt||(lt={})).Reachable="Reachable",ct.Unreachable="Unreachable",ct.Unknown="Unknown",(mt=dt||(dt={})).NotStarted="NotStarted",mt.InProgress="InProgress",mt.Completed="Completed",(yt||(yt={})).Standard="Standard",(Nt=Pt||(Pt={})).Initiated="Initiated",Nt.Connected="Connected",Nt.Disconnected="Disconnected",(wt=Ct||(Ct={})).Vpn="Vpn",wt.ExpressRoute="ExpressRoute",(ft=Rt||(Rt={})).PolicyBased="PolicyBased",ft.RouteBased="RouteBased",(gt=St||(St={})).Basic="Basic",gt.HighPerformance="HighPerformance",gt.Standard="Standard",gt.UltraPerformance="UltraPerformance",gt.VpnGw1="VpnGw1",gt.VpnGw2="VpnGw2",gt.VpnGw3="VpnGw3",gt.VpnGw1AZ="VpnGw1AZ",gt.VpnGw2AZ="VpnGw2AZ",gt.VpnGw3AZ="VpnGw3AZ",gt.ErGw1AZ="ErGw1AZ",gt.ErGw2AZ="ErGw2AZ",gt.ErGw3AZ="ErGw3AZ",(Gt=At||(At={})).Basic="Basic",Gt.HighPerformance="HighPerformance",Gt.Standard="Standard",Gt.UltraPerformance="UltraPerformance",Gt.VpnGw1="VpnGw1",Gt.VpnGw2="VpnGw2",Gt.VpnGw3="VpnGw3",Gt.VpnGw1AZ="VpnGw1AZ",Gt.VpnGw2AZ="VpnGw2AZ",Gt.VpnGw3AZ="VpnGw3AZ",Gt.ErGw1AZ="ErGw1AZ",Gt.ErGw2AZ="ErGw2AZ",Gt.ErGw3AZ="ErGw3AZ",(ht=bt||(bt={})).IkeV2="IkeV2",ht.SSTP="SSTP",ht.OpenVPN="OpenVPN",(zt=kt||(kt={})).None="None",zt.DES="DES",zt.DES3="DES3",zt.AES128="AES128",zt.AES192="AES192",zt.AES256="AES256",zt.GCMAES128="GCMAES128",zt.GCMAES192="GCMAES192",zt.GCMAES256="GCMAES256",(It=vt||(vt={})).MD5="MD5",It.SHA1="SHA1",It.SHA256="SHA256",It.GCMAES128="GCMAES128",It.GCMAES192="GCMAES192",It.GCMAES256="GCMAES256",(Mt=Et||(Et={})).DES="DES",Mt.DES3="DES3",Mt.AES128="AES128",Mt.AES192="AES192",Mt.AES256="AES256",Mt.GCMAES256="GCMAES256",Mt.GCMAES128="GCMAES128",(xt=Vt||(Vt={})).MD5="MD5",xt.SHA1="SHA1",xt.SHA256="SHA256",xt.SHA384="SHA384",xt.GCMAES256="GCMAES256",xt.GCMAES128="GCMAES128",(qt=Ft||(Ft={})).None="None",qt.DHGroup1="DHGroup1",qt.DHGroup2="DHGroup2",qt.DHGroup14="DHGroup14",qt.DHGroup2048="DHGroup2048",qt.ECP256="ECP256",qt.ECP384="ECP384",qt.DHGroup24="DHGroup24",(Lt=Tt||(Tt={})).None="None",Lt.PFS1="PFS1",Lt.PFS2="PFS2",Lt.PFS2048="PFS2048",Lt.ECP256="ECP256",Lt.ECP384="ECP384",Lt.PFS24="PFS24",Lt.PFS14="PFS14",Lt.PFSMM="PFSMM",(Ot=Bt||(Bt={})).Unknown="Unknown",Ot.Stopped="Stopped",Ot.Idle="Idle",Ot.Connecting="Connecting",Ot.Connected="Connected",(Ht=Dt||(Dt={})).Amd64="Amd64",Ht.X86="X86",(Wt=Ut||(Ut={})).EAPTLS="EAPTLS",Wt.EAPMSCHAPv2="EAPMSCHAPv2",(Kt=_t||(_t={})).Unknown="Unknown",Kt.Connecting="Connecting",Kt.Connected="Connected",Kt.NotConnected="NotConnected",(Zt=jt||(jt={})).IPsec="IPsec",Zt.Vnet2Vnet="Vnet2Vnet",Zt.ExpressRoute="ExpressRoute",Zt.VPNClient="VPNClient",(Xt=Qt||(Qt={})).IKEv2="IKEv2",Xt.IKEv1="IKEv1",(Jt=$t||($t={})).Optimize="Optimize",Jt.OptimizeAndAllow="OptimizeAndAllow",Jt.All="All",Jt.None="None",(er=Yt||(Yt={})).IkeV2="IkeV2",er.OpenVPN="OpenVPN",(rr=tr||(tr={})).Unknown="Unknown",rr.Connecting="Connecting",rr.Connected="Connected",rr.NotConnected="NotConnected",(ar=ir||(ir={})).External="External",ar.Native="Native",(nr=or||(or={})).Unknown="Unknown",nr.Connecting="Connecting",nr.Connected="Connected",nr.NotConnected="NotConnected",(pr=sr||(sr={})).Unknown="Unknown",pr.Connecting="Connecting",pr.Connected="Connected",pr.NotConnected="NotConnected",(lr=ur||(ur={})).Tcp="Tcp",lr.Udp="Udp",lr.All="All";var dr=Object.freeze({get IPAllocationMethod(){return a},get SecurityRuleProtocol(){return s},get SecurityRuleAccess(){return u},get SecurityRuleDirection(){return c},get RouteNextHopType(){return m},get PublicIPAddressSkuName(){return P},get IPVersion(){return C},get TransportProtocol(){return R},get ApplicationGatewayProtocol(){return S},get ApplicationGatewayCookieBasedAffinity(){return A},get ApplicationGatewayBackendHealthServerHealth(){return b},get ApplicationGatewaySkuName(){return k},get ApplicationGatewayTier(){return v},get ApplicationGatewaySslProtocol(){return E},get ApplicationGatewaySslPolicyType(){return V},get ApplicationGatewaySslPolicyName(){return F},get ApplicationGatewaySslCipherSuite(){return T},get ApplicationGatewayRequestRoutingRuleType(){return B},get ApplicationGatewayRedirectType(){return D},get ApplicationGatewayOperationalState(){return U},get ApplicationGatewayFirewallMode(){return _},get ProvisioningState(){return j},get AzureFirewallRCActionType(){return Q},get AzureFirewallApplicationRuleProtocolType(){return $},get AzureFirewallNatRCActionType(){return Y},get AzureFirewallNetworkRuleProtocol(){return te},get AuthorizationUseStatus(){return ie},get ExpressRouteCircuitPeeringAdvertisedPublicPrefixState(){return oe},get Access(){return se},get ExpressRoutePeeringType(){return ue},get ExpressRoutePeeringState(){return ce},get CircuitConnectionStatus(){return me},get ExpressRouteCircuitPeeringState(){return Pe},get ExpressRouteCircuitSkuTier(){return Ce},get ExpressRouteCircuitSkuFamily(){return Re},get ServiceProviderProvisioningState(){return Se},get LoadBalancerSkuName(){return Ae},get LoadDistribution(){return be},get ProbeProtocol(){return ke},get NetworkOperationStatus(){return ve},get EffectiveSecurityRuleProtocol(){return Ee},get EffectiveRouteSource(){return Ve},get EffectiveRouteState(){return Fe},get AssociationType(){return Te},get Direction(){return Be},get IpFlowProtocol(){return De},get NextHopType(){return Ue},get PcProtocol(){return _e},get PcStatus(){return je},get PcError(){return Qe},get Protocol(){return $e},get HTTPMethod(){return Ye},get Origin(){return et},get Severity(){return rt},get IssueType(){return at},get ConnectionStatus(){return nt},get ConnectionMonitorSourceStatus(){return pt},get ConnectionState(){return lt},get EvaluationState(){return dt},get PublicIPPrefixSkuName(){return yt},get VirtualNetworkPeeringState(){return Pt},get VirtualNetworkGatewayType(){return Ct},get VpnType(){return Rt},get VirtualNetworkGatewaySkuName(){return St},get VirtualNetworkGatewaySkuTier(){return At},get VpnClientProtocol(){return bt},get IpsecEncryption(){return kt},get IpsecIntegrity(){return vt},get IkeEncryption(){return Et},get IkeIntegrity(){return Vt},get DhGroup(){return Ft},get PfsGroup(){return Tt},get BgpPeerState(){return Bt},get ProcessorArchitecture(){return Dt},get AuthenticationMethod(){return Ut},get VirtualNetworkGatewayConnectionStatus(){return _t},get VirtualNetworkGatewayConnectionType(){return jt},get VirtualNetworkGatewayConnectionProtocol(){return Qt},get OfficeTrafficCategory(){return $t},get VpnGatewayTunnelingProtocol(){return Yt},get VpnConnectionStatus(){return tr},get VirtualWanSecurityProviderType(){return ir},get TunnelConnectionStatus(){return or},get HubVirtualNetworkConnectionStatus(){return sr},get Protocol1(){return ur}}),mr=t.CloudErrorMapper,yr=t.BaseResourceMapper,Pr={serializedName:"SubResource",type:{name:"Composite",className:"SubResource",modelProperties:{id:{serializedName:"id",type:{name:"String"}}}}},Nr={serializedName:"NetworkInterfaceTapConfiguration",type:{name:"Composite",className:"NetworkInterfaceTapConfiguration",modelProperties:cr({},Pr.type.modelProperties,{virtualNetworkTap:{serializedName:"properties.virtualNetworkTap",type:{name:"Composite",className:"VirtualNetworkTap"}},provisioningState:{readOnly:!0,serializedName:"properties.provisioningState",type:{name:"String"}},name:{serializedName:"name",type:{name:"String"}},etag:{serializedName:"etag",type:{name:"String"}},type:{readOnly:!0,serializedName:"type",type:{name:"String"}}})}},Cr={serializedName:"Resource",type:{name:"Composite",className:"Resource",modelProperties:{id:{serializedName:"id",type:{name:"String"}},name:{readOnly:!0,serializedName:"name",type:{name:"String"}},type:{readOnly:!0,serializedName:"type",type:{name:"String"}},location:{serializedName:"location",type:{name:"String"}},tags:{serializedName:"tags",type:{name:"Dictionary",value:{type:{name:"String"}}}}}}},wr={serializedName:"ApplicationSecurityGroup",type:{name:"Composite",className:"ApplicationSecurityGroup",modelProperties:cr({},Cr.type.modelProperties,{resourceGuid:{readOnly:!0,serializedName:"properties.resourceGuid",type:{name:"String"}},provisioningState:{readOnly:!0,serializedName:"properties.provisioningState",type:{name:"String"}},etag:{readOnly:!0,serializedName:"etag",type:{name:"String"}}})}},Rr={serializedName:"SecurityRule",type:{name:"Composite",className:"SecurityRule",modelProperties:cr({},Pr.type.modelProperties,{description:{serializedName:"properties.description",type:{name:"String"}},protocol:{required:!0,serializedName:"properties.protocol",type:{name:"String"}},sourcePortRange:{serializedName:"properties.sourcePortRange",type:{name:"String"}},destinationPortRange:{serializedName:"properties.destinationPortRange",type:{name:"String"}},sourceAddressPrefix:{serializedName:"properties.sourceAddressPrefix",type:{name:"String"}},sourceAddressPrefixes:{serializedName:"properties.sourceAddressPrefixes",type:{name:"Sequence",element:{type:{name:"String"}}}},sourceApplicationSecurityGroups:{serializedName:"properties.sourceApplicationSecurityGroups",type:{name:"Sequence",element:{type:{name:"Composite",className:"ApplicationSecurityGroup"}}}},destinationAddressPrefix:{serializedName:"properties.destinationAddressPrefix",type:{name:"String"}},destinationAddressPrefixes:{serializedName:"properties.destinationAddressPrefixes",type:{name:"Sequence",element:{type:{name:"String"}}}},destinationApplicationSecurityGroups:{serializedName:"properties.destinationApplicationSecurityGroups",type:{name:"Sequence",element:{type:{name:"Composite",className:"ApplicationSecurityGroup"}}}},sourcePortRanges:{serializedName:"properties.sourcePortRanges",type:{name:"Sequence",element:{type:{name:"String"}}}},destinationPortRanges:{serializedName:"properties.destinationPortRanges",type:{name:"Sequence",element:{type:{name:"String"}}}},access:{required:!0,serializedName:"properties.access",type:{name:"String"}},priority:{serializedName:"properties.priority",type:{name:"Number"}},direction:{required:!0,serializedName:"properties.direction",type:{name:"String"}},provisioningState:{serializedName:"properties.provisioningState",type:{name:"String"}},name:{serializedName:"name",type:{name:"String"}},etag:{serializedName:"etag",type:{name:"String"}}})}},fr={serializedName:"EndpointService",type:{name:"Composite",className:"EndpointService",modelProperties:{id:{serializedName:"id",type:{name:"String"}}}}},Sr={serializedName:"InterfaceEndpoint",type:{name:"Composite",className:"InterfaceEndpoint",modelProperties:cr({},Cr.type.modelProperties,{fqdn:{serializedName:"properties.fqdn",type:{name:"String"}},endpointService:{serializedName:"properties.endpointService",type:{name:"Composite",className:"EndpointService"}},subnet:{serializedName:"properties.subnet",type:{name:"Composite",className:"Subnet"}},networkInterfaces:{readOnly:!0,serializedName:"properties.networkInterfaces",type:{name:"Sequence",element:{type:{name:"Composite",className:"NetworkInterface"}}}},owner:{readOnly:!0,serializedName:"properties.owner",type:{name:"String"}},provisioningState:{readOnly:!0,serializedName:"properties.provisioningState",type:{name:"String"}},etag:{serializedName:"etag",type:{name:"String"}}})}},gr={serializedName:"NetworkInterfaceDnsSettings",type:{name:"Composite",className:"NetworkInterfaceDnsSettings",modelProperties:{dnsServers:{serializedName:"dnsServers",type:{name:"Sequence",element:{type:{name:"String"}}}},appliedDnsServers:{serializedName:"appliedDnsServers",type:{name:"Sequence",element:{type:{name:"String"}}}},internalDnsNameLabel:{serializedName:"internalDnsNameLabel",type:{name:"String"}},internalFqdn:{serializedName:"internalFqdn",type:{name:"String"}},internalDomainNameSuffix:{serializedName:"internalDomainNameSuffix",type:{name:"String"}}}}},Ar={serializedName:"NetworkInterface",type:{name:"Composite",className:"NetworkInterface",modelProperties:cr({},Cr.type.modelProperties,{virtualMachine:{serializedName:"properties.virtualMachine",type:{name:"Composite",className:"SubResource"}},networkSecurityGroup:{serializedName:"properties.networkSecurityGroup",type:{name:"Composite",className:"NetworkSecurityGroup"}},interfaceEndpoint:{readOnly:!0,serializedName:"properties.interfaceEndpoint",type:{name:"Composite",className:"InterfaceEndpoint"}},ipConfigurations:{serializedName:"properties.ipConfigurations",type:{name:"Sequence",element:{type:{name:"Composite",className:"NetworkInterfaceIPConfiguration"}}}},tapConfigurations:{serializedName:"properties.tapConfigurations",type:{name:"Sequence",element:{type:{name:"Composite",className:"NetworkInterfaceTapConfiguration"}}}},dnsSettings:{serializedName:"properties.dnsSettings",type:{name:"Composite",className:"NetworkInterfaceDnsSettings"}},macAddress:{serializedName:"properties.macAddress",type:{name:"String"}},primary:{serializedName:"properties.primary",type:{name:"Boolean"}},enableAcceleratedNetworking:{serializedName:"properties.enableAcceleratedNetworking",type:{name:"Boolean"}},enableIPForwarding:{serializedName:"properties.enableIPForwarding",type:{name:"Boolean"}},hostedWorkloads:{readOnly:!0,serializedName:"properties.hostedWorkloads",type:{name:"Sequence",element:{type:{name:"String"}}}},resourceGuid:{serializedName:"properties.resourceGuid",type:{name:"String"}},provisioningState:{serializedName:"properties.provisioningState",type:{name:"String"}},etag:{serializedName:"etag",type:{name:"String"}}})}},Gr={serializedName:"NetworkSecurityGroup",type:{name:"Composite",className:"NetworkSecurityGroup",modelProperties:cr({},Cr.type.modelProperties,{securityRules:{serializedName:"properties.securityRules",type:{name:"Sequence",element:{type:{name:"Composite",className:"SecurityRule"}}}},defaultSecurityRules:{serializedName:"properties.defaultSecurityRules",type:{name:"Sequence",element:{type:{name:"Composite",className:"SecurityRule"}}}},networkInterfaces:{readOnly:!0,serializedName:"properties.networkInterfaces",type:{name:"Sequence",element:{type:{name:"Composite",className:"NetworkInterface"}}}},subnets:{readOnly:!0,serializedName:"properties.subnets",type:{name:"Sequence",element:{type:{name:"Composite",className:"Subnet"}}}},resourceGuid:{serializedName:"properties.resourceGuid",type:{name:"String"}},provisioningState:{serializedName:"properties.provisioningState",type:{name:"String"}},etag:{serializedName:"etag",type:{name:"String"}}})}},br={serializedName:"Route",type:{name:"Composite",className:"Route",modelProperties:cr({},Pr.type.modelProperties,{addressPrefix:{serializedName:"properties.addressPrefix",type:{name:"String"}},nextHopType:{required:!0,serializedName:"properties.nextHopType",type:{name:"String"}},nextHopIpAddress:{serializedName:"properties.nextHopIpAddress",type:{name:"String"}},provisioningState:{serializedName:"properties.provisioningState",type:{name:"String"}},name:{serializedName:"name",type:{name:"String"}},etag:{serializedName:"etag",type:{name:"String"}}})}},hr={serializedName:"RouteTable",type:{name:"Composite",className:"RouteTable",modelProperties:cr({},Cr.type.modelProperties,{routes:{serializedName:"properties.routes",type:{name:"Sequence",element:{type:{name:"Composite",className:"Route"}}}},subnets:{readOnly:!0,serializedName:"properties.subnets",type:{name:"Sequence",element:{type:{name:"Composite",className:"Subnet"}}}},disableBgpRoutePropagation:{serializedName:"properties.disableBgpRoutePropagation",type:{name:"Boolean"}},provisioningState:{serializedName:"properties.provisioningState",type:{name:"String"}},etag:{serializedName:"etag",type:{name:"String"}}})}},kr={serializedName:"ServiceEndpointPropertiesFormat",type:{name:"Composite",className:"ServiceEndpointPropertiesFormat",modelProperties:{service:{serializedName:"service",type:{name:"String"}},locations:{serializedName:"locations",type:{name:"Sequence",element:{type:{name:"String"}}}},provisioningState:{serializedName:"provisioningState",type:{name:"String"}}}}},zr={serializedName:"ServiceEndpointPolicyDefinition",type:{name:"Composite",className:"ServiceEndpointPolicyDefinition",modelProperties:cr({},Pr.type.modelProperties,{description:{serializedName:"properties.description",type:{name:"String"}},service:{serializedName:"properties.service",type:{name:"String"}},serviceResources:{serializedName:"properties.serviceResources",type:{name:"Sequence",element:{type:{name:"String"}}}},provisioningState:{readOnly:!0,serializedName:"properties.provisioningState",type:{name:"String"}},name:{serializedName:"name",type:{name:"String"}},etag:{serializedName:"etag",type:{name:"String"}}})}},vr={serializedName:"ServiceEndpointPolicy",type:{name:"Composite",className:"ServiceEndpointPolicy",modelProperties:cr({},Cr.type.modelProperties,{serviceEndpointPolicyDefinitions:{serializedName:"properties.serviceEndpointPolicyDefinitions",type:{name:"Sequence",element:{type:{name:"Composite",className:"ServiceEndpointPolicyDefinition"}}}},subnets:{readOnly:!0,serializedName:"properties.subnets",type:{name:"Sequence",element:{type:{name:"Composite",className:"Subnet"}}}},resourceGuid:{readOnly:!0,serializedName:"properties.resourceGuid",type:{name:"String"}},provisioningState:{readOnly:!0,serializedName:"properties.provisioningState",type:{name:"String"}},etag:{serializedName:"etag",type:{name:"String"}}})}},Ir={serializedName:"PublicIPAddressSku",type:{name:"Composite",className:"PublicIPAddressSku",modelProperties:{name:{serializedName:"name",type:{name:"String"}}}}},Er={serializedName:"PublicIPAddressDnsSettings",type:{name:"Composite",className:"PublicIPAddressDnsSettings",modelProperties:{domainNameLabel:{serializedName:"domainNameLabel",type:{name:"String"}},fqdn:{serializedName:"fqdn",type:{name:"String"}},reverseFqdn:{serializedName:"reverseFqdn",type:{name:"String"}}}}},Mr={serializedName:"IpTag",type:{name:"Composite",className:"IpTag",modelProperties:{ipTagType:{serializedName:"ipTagType",type:{name:"String"}},tag:{serializedName:"tag",type:{name:"String"}}}}},Vr={serializedName:"PublicIPAddress",type:{name:"Composite",className:"PublicIPAddress",modelProperties:cr({},Cr.type.modelProperties,{sku:{serializedName:"sku",type:{name:"Composite",className:"PublicIPAddressSku"}},publicIPAllocationMethod:{serializedName:"properties.publicIPAllocationMethod",type:{name:"String"}},publicIPAddressVersion:{serializedName:"properties.publicIPAddressVersion",type:{name:"String"}},ipConfiguration:{readOnly:!0,serializedName:"properties.ipConfiguration",type:{name:"Composite",className:"IPConfiguration"}},dnsSettings:{serializedName:"properties.dnsSettings",type:{name:"Composite",className:"PublicIPAddressDnsSettings"}},ipTags:{serializedName:"properties.ipTags",type:{name:"Sequence",element:{type:{name:"Composite",className:"IpTag"}}}},ipAddress:{serializedName:"properties.ipAddress",type:{name:"String"}},publicIPPrefix:{serializedName:"properties.publicIPPrefix",type:{name:"Composite",className:"SubResource"}},idleTimeoutInMinutes:{serializedName:"properties.idleTimeoutInMinutes",type:{name:"Number"}},resourceGuid:{serializedName:"properties.resourceGuid",type:{name:"String"}},provisioningState:{serializedName:"properties.provisioningState",type:{name:"String"}},etag:{serializedName:"etag",type:{name:"String"}},zones:{serializedName:"zones",type:{name:"Sequence",element:{type:{name:"String"}}}}})}},xr={serializedName:"IPConfiguration",type:{name:"Composite",className:"IPConfiguration",modelProperties:cr({},Pr.type.modelProperties,{privateIPAddress:{serializedName:"properties.privateIPAddress",type:{name:"String"}},privateIPAllocationMethod:{serializedName:"properties.privateIPAllocationMethod",type:{name:"String"}},subnet:{serializedName:"properties.subnet",type:{name:"Composite",className:"Subnet"}},publicIPAddress:{serializedName:"properties.publicIPAddress",type:{name:"Composite",className:"PublicIPAddress"}},provisioningState:{serializedName:"properties.provisioningState",type:{name:"String"}},name:{serializedName:"name",type:{name:"String"}},etag:{serializedName:"etag",type:{name:"String"}}})}},Fr={serializedName:"IPConfigurationProfile",type:{name:"Composite",className:"IPConfigurationProfile",modelProperties:cr({},Pr.type.modelProperties,{subnet:{serializedName:"properties.subnet",type:{name:"Composite",className:"Subnet"}},provisioningState:{readOnly:!0,serializedName:"properties.provisioningState",type:{name:"String"}},name:{serializedName:"name",type:{name:"String"}},type:{readOnly:!0,serializedName:"type",type:{name:"String"}},etag:{serializedName:"etag",type:{name:"String"}}})}},qr={serializedName:"ResourceNavigationLink",type:{name:"Composite",className:"ResourceNavigationLink",modelProperties:cr({},Pr.type.modelProperties,{linkedResourceType:{serializedName:"properties.linkedResourceType",type:{name:"String"}},link:{serializedName:"properties.link",type:{name:"String"}},provisioningState:{readOnly:!0,serializedName:"properties.provisioningState",type:{name:"String"}},name:{serializedName:"name",type:{name:"String"}},etag:{readOnly:!0,serializedName:"etag",type:{name:"String"}}})}},Tr={serializedName:"ServiceAssociationLink",type:{name:"Composite",className:"ServiceAssociationLink",modelProperties:cr({},Pr.type.modelProperties,{linkedResourceType:{serializedName:"properties.linkedResourceType",type:{name:"String"}},link:{serializedName:"properties.link",type:{name:"String"}},provisioningState:{readOnly:!0,serializedName:"properties.provisioningState",type:{name:"String"}},name:{serializedName:"name",type:{name:"String"}},etag:{readOnly:!0,serializedName:"etag",type:{name:"String"}}})}},Lr={serializedName:"Delegation",type:{name:"Composite",className:"Delegation",modelProperties:cr({},Pr.type.modelProperties,{serviceName:{serializedName:"properties.serviceName",type:{name:"String"}},actions:{serializedName:"properties.actions",type:{name:"Sequence",element:{type:{name:"String"}}}},provisioningState:{readOnly:!0,serializedName:"properties.provisioningState",type:{name:"String"}},name:{serializedName:"name",type:{name:"String"}},etag:{serializedName:"etag",type:{name:"String"}}})}},Br={serializedName:"Subnet",type:{name:"Composite",className:"Subnet",modelProperties:cr({},Pr.type.modelProperties,{addressPrefix:{serializedName:"properties.addressPrefix",type:{name:"String"}},addressPrefixes:{serializedName:"properties.addressPrefixes",type:{name:"Sequence",element:{type:{name:"String"}}}},networkSecurityGroup:{serializedName:"properties.networkSecurityGroup",type:{name:"Composite",className:"NetworkSecurityGroup"}},routeTable:{serializedName:"properties.routeTable",type:{name:"Composite",className:"RouteTable"}},serviceEndpoints:{serializedName:"properties.serviceEndpoints",type:{name:"Sequence",element:{type:{name:"Composite",className:"ServiceEndpointPropertiesFormat"}}}},serviceEndpointPolicies:{serializedName:"properties.serviceEndpointPolicies",type:{name:"Sequence",element:{type:{name:"Composite",className:"ServiceEndpointPolicy"}}}},interfaceEndpoints:{readOnly:!0,serializedName:"properties.interfaceEndpoints",type:{name:"Sequence",element:{type:{name:"Composite",className:"InterfaceEndpoint"}}}},ipConfigurations:{readOnly:!0,serializedName:"properties.ipConfigurations",type:{name:"Sequence",element:{type:{name:"Composite",className:"IPConfiguration"}}}},ipConfigurationProfiles:{readOnly:!0,serializedName:"properties.ipConfigurationProfiles",type:{name:"Sequence",element:{type:{name:"Composite",className:"IPConfigurationProfile"}}}},resourceNavigationLinks:{serializedName:"properties.resourceNavigationLinks",type:{name:"Sequence",element:{type:{name:"Composite",className:"ResourceNavigationLink"}}}},serviceAssociationLinks:{serializedName:"properties.serviceAssociationLinks",type:{name:"Sequence",element:{type:{name:"Composite",className:"ServiceAssociationLink"}}}},delegations:{serializedName:"properties.delegations",type:{name:"Sequence",element:{type:{name:"Composite",className:"Delegation"}}}},purpose:{readOnly:!0,serializedName:"properties.purpose",type:{name:"String"}},provisioningState:{serializedName:"properties.provisioningState",type:{name:"String"}},name:{serializedName:"name",type:{name:"String"}},etag:{serializedName:"etag",type:{name:"String"}}})}},Or={serializedName:"FrontendIPConfiguration",type:{name:"Composite",className:"FrontendIPConfiguration",modelProperties:cr({},Pr.type.modelProperties,{inboundNatRules:{readOnly:!0,serializedName:"properties.inboundNatRules",type:{name:"Sequence",element:{type:{name:"Composite",className:"SubResource"}}}},inboundNatPools:{readOnly:!0,serializedName:"properties.inboundNatPools",type:{name:"Sequence",element:{type:{name:"Composite",className:"SubResource"}}}},outboundRules:{readOnly:!0,serializedName:"properties.outboundRules",type:{name:"Sequence",element:{type:{name:"Composite",className:"SubResource"}}}},loadBalancingRules:{readOnly:!0,serializedName:"properties.loadBalancingRules",type:{name:"Sequence",element:{type:{name:"Composite",className:"SubResource"}}}},privateIPAddress:{serializedName:"properties.privateIPAddress",type:{name:"String"}},privateIPAllocationMethod:{serializedName:"properties.privateIPAllocationMethod",type:{name:"String"}},subnet:{serializedName:"properties.subnet",type:{name:"Composite",className:"Subnet"}},publicIPAddress:{serializedName:"properties.publicIPAddress",type:{name:"Composite",className:"PublicIPAddress"}},publicIPPrefix:{serializedName:"properties.publicIPPrefix",type:{name:"Composite",className:"SubResource"}},provisioningState:{serializedName:"properties.provisioningState",type:{name:"String"}},name:{serializedName:"name",type:{name:"String"}},etag:{serializedName:"etag",type:{name:"String"}},zones:{serializedName:"zones",type:{name:"Sequence",element:{type:{name:"String"}}}}})}},Dr={serializedName:"VirtualNetworkTap",type:{name:"Composite",className:"VirtualNetworkTap",modelProperties:cr({},Cr.type.modelProperties,{networkInterfaceTapConfigurations:{readOnly:!0,serializedName:"properties.networkInterfaceTapConfigurations",type:{name:"Sequence",element:{type:{name:"Composite",className:"NetworkInterfaceTapConfiguration"}}}},resourceGuid:{readOnly:!0,serializedName:"properties.resourceGuid",type:{name:"String"}},provisioningState:{readOnly:!0,serializedName:"properties.provisioningState",type:{name:"String"}},destinationNetworkInterfaceIPConfiguration:{serializedName:"properties.destinationNetworkInterfaceIPConfiguration",type:{name:"Composite",className:"NetworkInterfaceIPConfiguration"}},destinationLoadBalancerFrontEndIPConfiguration:{serializedName:"properties.destinationLoadBalancerFrontEndIPConfiguration",type:{name:"Composite",className:"FrontendIPConfiguration"}},destinationPort:{serializedName:"properties.destinationPort",type:{name:"Number"}},etag:{serializedName:"etag",type:{name:"String"}}})}},Hr={serializedName:"BackendAddressPool",type:{name:"Composite",className:"BackendAddressPool",modelProperties:cr({},Pr.type.modelProperties,{backendIPConfigurations:{readOnly:!0,serializedName:"properties.backendIPConfigurations",type:{name:"Sequence",element:{type:{name:"Composite",className:"NetworkInterfaceIPConfiguration"}}}},loadBalancingRules:{readOnly:!0,serializedName:"properties.loadBalancingRules",type:{name:"Sequence",element:{type:{name:"Composite",className:"SubResource"}}}},outboundRule:{readOnly:!0,serializedName:"properties.outboundRule",type:{name:"Composite",className:"SubResource"}},provisioningState:{serializedName:"properties.provisioningState",type:{name:"String"}},name:{serializedName:"name",type:{name:"String"}},etag:{serializedName:"etag",type:{name:"String"}}})}},Ur={serializedName:"InboundNatRule",type:{name:"Composite",className:"InboundNatRule",modelProperties:cr({},Pr.type.modelProperties,{frontendIPConfiguration:{serializedName:"properties.frontendIPConfiguration",type:{name:"Composite",className:"SubResource"}},backendIPConfiguration:{readOnly:!0,serializedName:"properties.backendIPConfiguration",type:{name:"Composite",className:"NetworkInterfaceIPConfiguration"}},protocol:{serializedName:"properties.protocol",type:{name:"String"}},frontendPort:{serializedName:"properties.frontendPort",type:{name:"Number"}},backendPort:{serializedName:"properties.backendPort",type:{name:"Number"}},idleTimeoutInMinutes:{serializedName:"properties.idleTimeoutInMinutes",type:{name:"Number"}},enableFloatingIP:{serializedName:"properties.enableFloatingIP",type:{name:"Boolean"}},enableTcpReset:{serializedName:"properties.enableTcpReset",type:{name:"Boolean"}},provisioningState:{serializedName:"properties.provisioningState",type:{name:"String"}},name:{serializedName:"name",type:{name:"String"}},etag:{serializedName:"etag",type:{name:"String"}}})}},Wr={serializedName:"NetworkInterfaceIPConfiguration",type:{name:"Composite",className:"NetworkInterfaceIPConfiguration",modelProperties:cr({},Pr.type.modelProperties,{virtualNetworkTaps:{serializedName:"properties.virtualNetworkTaps",type:{name:"Sequence",element:{type:{name:"Composite",className:"VirtualNetworkTap"}}}},applicationGatewayBackendAddressPools:{serializedName:"properties.applicationGatewayBackendAddressPools",type:{name:"Sequence",element:{type:{name:"Composite",className:"ApplicationGatewayBackendAddressPool"}}}},loadBalancerBackendAddressPools:{serializedName:"properties.loadBalancerBackendAddressPools",type:{name:"Sequence",element:{type:{name:"Composite",className:"BackendAddressPool"}}}},loadBalancerInboundNatRules:{serializedName:"properties.loadBalancerInboundNatRules",type:{name:"Sequence",element:{type:{name:"Composite",className:"InboundNatRule"}}}},privateIPAddress:{serializedName:"properties.privateIPAddress",type:{name:"String"}},privateIPAllocationMethod:{serializedName:"properties.privateIPAllocationMethod",type:{name:"String"}},privateIPAddressVersion:{serializedName:"properties.privateIPAddressVersion",type:{name:"String"}},subnet:{serializedName:"properties.subnet",type:{name:"Composite",className:"Subnet"}},primary:{serializedName:"properties.primary",type:{name:"Boolean"}},publicIPAddress:{serializedName:"properties.publicIPAddress",type:{name:"Composite",className:"PublicIPAddress"}},applicationSecurityGroups:{serializedName:"properties.applicationSecurityGroups",type:{name:"Sequence",element:{type:{name:"Composite",className:"ApplicationSecurityGroup"}}}},provisioningState:{serializedName:"properties.provisioningState",type:{name:"String"}},name:{serializedName:"name",type:{name:"String"}},etag:{serializedName:"etag",type:{name:"String"}}})}},_r={serializedName:"ApplicationGatewayBackendAddress",type:{name:"Composite",className:"ApplicationGatewayBackendAddress",modelProperties:{fqdn:{serializedName:"fqdn",type:{name:"String"}},ipAddress:{serializedName:"ipAddress",type:{name:"String"}}}}},Kr={serializedName:"ApplicationGatewayBackendAddressPool",type:{name:"Composite",className:"ApplicationGatewayBackendAddressPool",modelProperties:cr({},Pr.type.modelProperties,{backendIPConfigurations:{serializedName:"properties.backendIPConfigurations",type:{name:"Sequence",element:{type:{name:"Composite",className:"NetworkInterfaceIPConfiguration"}}}},backendAddresses:{serializedName:"properties.backendAddresses",type:{name:"Sequence",element:{type:{name:"Composite",className:"ApplicationGatewayBackendAddress"}}}},provisioningState:{serializedName:"properties.provisioningState",type:{name:"String"}},name:{serializedName:"name",type:{name:"String"}},etag:{serializedName:"etag",type:{name:"String"}},type:{serializedName:"type",type:{name:"String"}}})}},jr={serializedName:"ApplicationGatewayConnectionDraining",type:{name:"Composite",className:"ApplicationGatewayConnectionDraining",modelProperties:{enabled:{required:!0,serializedName:"enabled",type:{name:"Boolean"}},drainTimeoutInSec:{required:!0,serializedName:"drainTimeoutInSec",constraints:{InclusiveMaximum:3600,InclusiveMinimum:1},type:{name:"Number"}}}}},Zr={serializedName:"ApplicationGatewayBackendHttpSettings",type:{name:"Composite",className:"ApplicationGatewayBackendHttpSettings",modelProperties:cr({},Pr.type.modelProperties,{port:{serializedName:"properties.port",type:{name:"Number"}},protocol:{serializedName:"properties.protocol",type:{name:"String"}},cookieBasedAffinity:{serializedName:"properties.cookieBasedAffinity",type:{name:"String"}},requestTimeout:{serializedName:"properties.requestTimeout",type:{name:"Number"}},probe:{serializedName:"properties.probe",type:{name:"Composite",className:"SubResource"}},authenticationCertificates:{serializedName:"properties.authenticationCertificates",type:{name:"Sequence",element:{type:{name:"Composite",className:"SubResource"}}}},trustedRootCertificates:{serializedName:"properties.trustedRootCertificates",type:{name:"Sequence",element:{type:{name:"Composite",className:"SubResource"}}}},connectionDraining:{serializedName:"properties.connectionDraining",type:{name:"Composite",className:"ApplicationGatewayConnectionDraining"}},hostName:{serializedName:"properties.hostName",type:{name:"String"}},pickHostNameFromBackendAddress:{serializedName:"properties.pickHostNameFromBackendAddress",type:{name:"Boolean"}},affinityCookieName:{serializedName:"properties.affinityCookieName",type:{name:"String"}},probeEnabled:{serializedName:"properties.probeEnabled",type:{name:"Boolean"}},path:{serializedName:"properties.path",type:{name:"String"}},provisioningState:{serializedName:"properties.provisioningState",type:{name:"String"}},name:{serializedName:"name",type:{name:"String"}},etag:{serializedName:"etag",type:{name:"String"}},type:{serializedName:"type",type:{name:"String"}}})}},Qr={serializedName:"ApplicationGatewayBackendHealthServer",type:{name:"Composite",className:"ApplicationGatewayBackendHealthServer",modelProperties:{address:{serializedName:"address",type:{name:"String"}},ipConfiguration:{serializedName:"ipConfiguration",type:{name:"Composite",className:"NetworkInterfaceIPConfiguration"}},health:{serializedName:"health",type:{name:"String"}}}}},Xr={serializedName:"ApplicationGatewayBackendHealthHttpSettings",type:{name:"Composite",className:"ApplicationGatewayBackendHealthHttpSettings",modelProperties:{backendHttpSettings:{serializedName:"backendHttpSettings",type:{name:"Composite",className:"ApplicationGatewayBackendHttpSettings"}},servers:{serializedName:"servers",type:{name:"Sequence",element:{type:{name:"Composite",className:"ApplicationGatewayBackendHealthServer"}}}}}}},$r={serializedName:"ApplicationGatewayBackendHealthPool",type:{name:"Composite",className:"ApplicationGatewayBackendHealthPool",modelProperties:{backendAddressPool:{serializedName:"backendAddressPool",type:{name:"Composite",className:"ApplicationGatewayBackendAddressPool"}},backendHttpSettingsCollection:{serializedName:"backendHttpSettingsCollection",type:{name:"Sequence",element:{type:{name:"Composite",className:"ApplicationGatewayBackendHealthHttpSettings"}}}}}}},Jr={serializedName:"ApplicationGatewayBackendHealth",type:{name:"Composite",className:"ApplicationGatewayBackendHealth",modelProperties:{backendAddressPools:{serializedName:"backendAddressPools",type:{name:"Sequence",element:{type:{name:"Composite",className:"ApplicationGatewayBackendHealthPool"}}}}}}},Yr={serializedName:"ApplicationGatewaySku",type:{name:"Composite",className:"ApplicationGatewaySku",modelProperties:{name:{serializedName:"name",type:{name:"String"}},tier:{serializedName:"tier",type:{name:"String"}},capacity:{serializedName:"capacity",type:{name:"Number"}}}}},ei={serializedName:"ApplicationGatewaySslPolicy",type:{name:"Composite",className:"ApplicationGatewaySslPolicy",modelProperties:{disabledSslProtocols:{serializedName:"disabledSslProtocols",type:{name:"Sequence",element:{type:{name:"String"}}}},policyType:{serializedName:"policyType",type:{name:"String"}},policyName:{serializedName:"policyName",type:{name:"String"}},cipherSuites:{serializedName:"cipherSuites",type:{name:"Sequence",element:{type:{name:"String"}}}},minProtocolVersion:{serializedName:"minProtocolVersion",type:{name:"String"}}}}},ti={serializedName:"ApplicationGatewayIPConfiguration",type:{name:"Composite",className:"ApplicationGatewayIPConfiguration",modelProperties:cr({},Pr.type.modelProperties,{subnet:{serializedName:"properties.subnet",type:{name:"Composite",className:"SubResource"}},provisioningState:{serializedName:"properties.provisioningState",type:{name:"String"}},name:{serializedName:"name",type:{name:"String"}},etag:{serializedName:"etag",type:{name:"String"}},type:{serializedName:"type",type:{name:"String"}}})}},ri={serializedName:"ApplicationGatewayAuthenticationCertificate",type:{name:"Composite",className:"ApplicationGatewayAuthenticationCertificate",modelProperties:cr({},Pr.type.modelProperties,{data:{serializedName:"properties.data",type:{name:"String"}},provisioningState:{serializedName:"properties.provisioningState",type:{name:"String"}},name:{serializedName:"name",type:{name:"String"}},etag:{serializedName:"etag",type:{name:"String"}},type:{serializedName:"type",type:{name:"String"}}})}},ii={serializedName:"ApplicationGatewayTrustedRootCertificate",type:{name:"Composite",className:"ApplicationGatewayTrustedRootCertificate",modelProperties:cr({},Pr.type.modelProperties,{data:{serializedName:"properties.data",type:{name:"String"}},keyvaultSecretId:{serializedName:"properties.keyvaultSecretId",type:{name:"String"}},provisioningState:{serializedName:"properties.provisioningState",type:{name:"String"}},name:{serializedName:"name",type:{name:"String"}},etag:{serializedName:"etag",type:{name:"String"}},type:{serializedName:"type",type:{name:"String"}}})}},ai={serializedName:"ApplicationGatewaySslCertificate",type:{name:"Composite",className:"ApplicationGatewaySslCertificate",modelProperties:cr({},Pr.type.modelProperties,{data:{serializedName:"properties.data",type:{name:"String"}},password:{serializedName:"properties.password",type:{name:"String"}},publicCertData:{serializedName:"properties.publicCertData",type:{name:"String"}},provisioningState:{serializedName:"properties.provisioningState",type:{name:"String"}},name:{serializedName:"name",type:{name:"String"}},etag:{serializedName:"etag",type:{name:"String"}},type:{serializedName:"type",type:{name:"String"}}})}},oi={serializedName:"ApplicationGatewayFrontendIPConfiguration",type:{name:"Composite",className:"ApplicationGatewayFrontendIPConfiguration",modelProperties:cr({},Pr.type.modelProperties,{privateIPAddress:{serializedName:"properties.privateIPAddress",type:{name:"String"}},privateIPAllocationMethod:{serializedName:"properties.privateIPAllocationMethod",type:{name:"String"}},subnet:{serializedName:"properties.subnet",type:{name:"Composite",className:"SubResource"}},publicIPAddress:{serializedName:"properties.publicIPAddress",type:{name:"Composite",className:"SubResource"}},provisioningState:{serializedName:"properties.provisioningState",type:{name:"String"}},name:{serializedName:"name",type:{name:"String"}},etag:{serializedName:"etag",type:{name:"String"}},type:{serializedName:"type",type:{name:"String"}}})}},ni={serializedName:"ApplicationGatewayFrontendPort",type:{name:"Composite",className:"ApplicationGatewayFrontendPort",modelProperties:cr({},Pr.type.modelProperties,{port:{serializedName:"properties.port",type:{name:"Number"}},provisioningState:{serializedName:"properties.provisioningState",type:{name:"String"}},name:{serializedName:"name",type:{name:"String"}},etag:{serializedName:"etag",type:{name:"String"}},type:{serializedName:"type",type:{name:"String"}}})}},si={serializedName:"ApplicationGatewayHttpListener",type:{name:"Composite",className:"ApplicationGatewayHttpListener",modelProperties:cr({},Pr.type.modelProperties,{frontendIPConfiguration:{serializedName:"properties.frontendIPConfiguration",type:{name:"Composite",className:"SubResource"}},frontendPort:{serializedName:"properties.frontendPort",type:{name:"Composite",className:"SubResource"}},protocol:{serializedName:"properties.protocol",type:{name:"String"}},hostName:{serializedName:"properties.hostName",type:{name:"String"}},sslCertificate:{serializedName:"properties.sslCertificate",type:{name:"Composite",className:"SubResource"}},requireServerNameIndication:{serializedName:"properties.requireServerNameIndication",type:{name:"Boolean"}},provisioningState:{serializedName:"properties.provisioningState",type:{name:"String"}},name:{serializedName:"name",type:{name:"String"}},etag:{serializedName:"etag",type:{name:"String"}},type:{serializedName:"type",type:{name:"String"}}})}},pi={serializedName:"ApplicationGatewayPathRule",type:{name:"Composite",className:"ApplicationGatewayPathRule",modelProperties:cr({},Pr.type.modelProperties,{paths:{serializedName:"properties.paths",type:{name:"Sequence",element:{type:{name:"String"}}}},backendAddressPool:{serializedName:"properties.backendAddressPool",type:{name:"Composite",className:"SubResource"}},backendHttpSettings:{serializedName:"properties.backendHttpSettings",type:{name:"Composite",className:"SubResource"}},redirectConfiguration:{serializedName:"properties.redirectConfiguration",type:{name:"Composite",className:"SubResource"}},provisioningState:{serializedName:"properties.provisioningState",type:{name:"String"}},name:{serializedName:"name",type:{name:"String"}},etag:{serializedName:"etag",type:{name:"String"}},type:{serializedName:"type",type:{name:"String"}}})}},ui={serializedName:"ApplicationGatewayProbeHealthResponseMatch",type:{name:"Composite",className:"ApplicationGatewayProbeHealthResponseMatch",modelProperties:{body:{serializedName:"body",type:{name:"String"}},statusCodes:{serializedName:"statusCodes",type:{name:"Sequence",element:{type:{name:"String"}}}}}}},li={serializedName:"ApplicationGatewayProbe",type:{name:"Composite",className:"ApplicationGatewayProbe",modelProperties:cr({},Pr.type.modelProperties,{protocol:{serializedName:"properties.protocol",type:{name:"String"}},host:{serializedName:"properties.host",type:{name:"String"}},path:{serializedName:"properties.path",type:{name:"String"}},interval:{serializedName:"properties.interval",type:{name:"Number"}},timeout:{serializedName:"properties.timeout",type:{name:"Number"}},unhealthyThreshold:{serializedName:"properties.unhealthyThreshold",type:{name:"Number"}},pickHostNameFromBackendHttpSettings:{serializedName:"properties.pickHostNameFromBackendHttpSettings",type:{name:"Boolean"}},minServers:{serializedName:"properties.minServers",type:{name:"Number"}},match:{serializedName:"properties.match",type:{name:"Composite",className:"ApplicationGatewayProbeHealthResponseMatch"}},provisioningState:{serializedName:"properties.provisioningState",type:{name:"String"}},name:{serializedName:"name",type:{name:"String"}},etag:{serializedName:"etag",type:{name:"String"}},type:{serializedName:"type",type:{name:"String"}}})}},ci={serializedName:"ApplicationGatewayRequestRoutingRule",type:{name:"Composite",className:"ApplicationGatewayRequestRoutingRule",modelProperties:cr({},Pr.type.modelProperties,{ruleType:{serializedName:"properties.ruleType",type:{name:"String"}},backendAddressPool:{serializedName:"properties.backendAddressPool",type:{name:"Composite",className:"SubResource"}},backendHttpSettings:{serializedName:"properties.backendHttpSettings",type:{name:"Composite",className:"SubResource"}},httpListener:{serializedName:"properties.httpListener",type:{name:"Composite",className:"SubResource"}},urlPathMap:{serializedName:"properties.urlPathMap",type:{name:"Composite",className:"SubResource"}},redirectConfiguration:{serializedName:"properties.redirectConfiguration",type:{name:"Composite",className:"SubResource"}},provisioningState:{serializedName:"properties.provisioningState",type:{name:"String"}},name:{serializedName:"name",type:{name:"String"}},etag:{serializedName:"etag",type:{name:"String"}},type:{serializedName:"type",type:{name:"String"}}})}},di={serializedName:"ApplicationGatewayRedirectConfiguration",type:{name:"Composite",className:"ApplicationGatewayRedirectConfiguration",modelProperties:cr({},Pr.type.modelProperties,{redirectType:{serializedName:"properties.redirectType",type:{name:"String"}},targetListener:{serializedName:"properties.targetListener",type:{name:"Composite",className:"SubResource"}},targetUrl:{serializedName:"properties.targetUrl",type:{name:"String"}},includePath:{serializedName:"properties.includePath",type:{name:"Boolean"}},includeQueryString:{serializedName:"properties.includeQueryString",type:{name:"Boolean"}},requestRoutingRules:{serializedName:"properties.requestRoutingRules",type:{name:"Sequence",element:{type:{name:"Composite",className:"SubResource"}}}},urlPathMaps:{serializedName:"properties.urlPathMaps",type:{name:"Sequence",element:{type:{name:"Composite",className:"SubResource"}}}},pathRules:{serializedName:"properties.pathRules",type:{name:"Sequence",element:{type:{name:"Composite",className:"SubResource"}}}},name:{serializedName:"name",type:{name:"String"}},etag:{serializedName:"etag",type:{name:"String"}},type:{serializedName:"type",type:{name:"String"}}})}},mi={serializedName:"ApplicationGatewayUrlPathMap",type:{name:"Composite",className:"ApplicationGatewayUrlPathMap",modelProperties:cr({},Pr.type.modelProperties,{defaultBackendAddressPool:{serializedName:"properties.defaultBackendAddressPool",type:{name:"Composite",className:"SubResource"}},defaultBackendHttpSettings:{serializedName:"properties.defaultBackendHttpSettings",type:{name:"Composite",className:"SubResource"}},defaultRedirectConfiguration:{serializedName:"properties.defaultRedirectConfiguration",type:{name:"Composite",className:"SubResource"}},pathRules:{serializedName:"properties.pathRules",type:{name:"Sequence",element:{type:{name:"Composite",className:"ApplicationGatewayPathRule"}}}},provisioningState:{serializedName:"properties.provisioningState",type:{name:"String"}},name:{serializedName:"name",type:{name:"String"}},etag:{serializedName:"etag",type:{name:"String"}},type:{serializedName:"type",type:{name:"String"}}})}},yi={serializedName:"ApplicationGatewayFirewallDisabledRuleGroup",type:{name:"Composite",className:"ApplicationGatewayFirewallDisabledRuleGroup",modelProperties:{ruleGroupName:{required:!0,serializedName:"ruleGroupName",type:{name:"String"}},rules:{serializedName:"rules",type:{name:"Sequence",element:{type:{name:"Number"}}}}}}},Pi={serializedName:"ApplicationGatewayWebApplicationFirewallConfiguration",type:{name:"Composite",className:"ApplicationGatewayWebApplicationFirewallConfiguration",modelProperties:{enabled:{required:!0,serializedName:"enabled",type:{name:"Boolean"}},firewallMode:{required:!0,serializedName:"firewallMode",type:{name:"String"}},ruleSetType:{required:!0,serializedName:"ruleSetType",type:{name:"String"}},ruleSetVersion:{required:!0,serializedName:"ruleSetVersion",type:{name:"String"}},disabledRuleGroups:{serializedName:"disabledRuleGroups",type:{name:"Sequence",element:{type:{name:"Composite",className:"ApplicationGatewayFirewallDisabledRuleGroup"}}}},requestBodyCheck:{serializedName:"requestBodyCheck",type:{name:"Boolean"}},maxRequestBodySize:{serializedName:"maxRequestBodySize",constraints:{InclusiveMaximum:128,InclusiveMinimum:8},type:{name:"Number"}}}}},Ni={serializedName:"ApplicationGatewayAutoscaleConfiguration",type:{name:"Composite",className:"ApplicationGatewayAutoscaleConfiguration",modelProperties:{minCapacity:{required:!0,serializedName:"minCapacity",constraints:{InclusiveMinimum:2},type:{name:"Number"}}}}},Ci={serializedName:"ApplicationGateway",type:{name:"Composite",className:"ApplicationGateway",modelProperties:cr({},Cr.type.modelProperties,{sku:{serializedName:"properties.sku",type:{name:"Composite",className:"ApplicationGatewaySku"}},sslPolicy:{serializedName:"properties.sslPolicy",type:{name:"Composite",className:"ApplicationGatewaySslPolicy"}},operationalState:{readOnly:!0,serializedName:"properties.operationalState",type:{name:"String"}},gatewayIPConfigurations:{serializedName:"properties.gatewayIPConfigurations",type:{name:"Sequence",element:{type:{name:"Composite",className:"ApplicationGatewayIPConfiguration"}}}},authenticationCertificates:{serializedName:"properties.authenticationCertificates",type:{name:"Sequence",element:{type:{name:"Composite",className:"ApplicationGatewayAuthenticationCertificate"}}}},trustedRootCertificates:{serializedName:"properties.trustedRootCertificates",type:{name:"Sequence",element:{type:{name:"Composite",className:"ApplicationGatewayTrustedRootCertificate"}}}},sslCertificates:{serializedName:"properties.sslCertificates",type:{name:"Sequence",element:{type:{name:"Composite",className:"ApplicationGatewaySslCertificate"}}}},frontendIPConfigurations:{serializedName:"properties.frontendIPConfigurations",type:{name:"Sequence",element:{type:{name:"Composite",className:"ApplicationGatewayFrontendIPConfiguration"}}}},frontendPorts:{serializedName:"properties.frontendPorts",type:{name:"Sequence",element:{type:{name:"Composite",className:"ApplicationGatewayFrontendPort"}}}},probes:{serializedName:"properties.probes",type:{name:"Sequence",element:{type:{name:"Composite",className:"ApplicationGatewayProbe"}}}},backendAddressPools:{serializedName:"properties.backendAddressPools",type:{name:"Sequence",element:{type:{name:"Composite",className:"ApplicationGatewayBackendAddressPool"}}}},backendHttpSettingsCollection:{serializedName:"properties.backendHttpSettingsCollection",type:{name:"Sequence",element:{type:{name:"Composite",className:"ApplicationGatewayBackendHttpSettings"}}}},httpListeners:{serializedName:"properties.httpListeners",type:{name:"Sequence",element:{type:{name:"Composite",className:"ApplicationGatewayHttpListener"}}}},urlPathMaps:{serializedName:"properties.urlPathMaps",type:{name:"Sequence",element:{type:{name:"Composite",className:"ApplicationGatewayUrlPathMap"}}}},requestRoutingRules:{serializedName:"properties.requestRoutingRules",type:{name:"Sequence",element:{type:{name:"Composite",className:"ApplicationGatewayRequestRoutingRule"}}}},redirectConfigurations:{serializedName:"properties.redirectConfigurations",type:{name:"Sequence",element:{type:{name:"Composite",className:"ApplicationGatewayRedirectConfiguration"}}}},webApplicationFirewallConfiguration:{serializedName:"properties.webApplicationFirewallConfiguration",type:{name:"Composite",className:"ApplicationGatewayWebApplicationFirewallConfiguration"}},enableHttp2:{serializedName:"properties.enableHttp2",type:{name:"Boolean"}},enableFips:{serializedName:"properties.enableFips",type:{name:"Boolean"}},autoscaleConfiguration:{serializedName:"properties.autoscaleConfiguration",type:{name:"Composite",className:"ApplicationGatewayAutoscaleConfiguration"}},resourceGuid:{serializedName:"properties.resourceGuid",type:{name:"String"}},provisioningState:{serializedName:"properties.provisioningState",type:{name:"String"}},etag:{serializedName:"etag",type:{name:"String"}},zones:{serializedName:"zones",type:{name:"Sequence",element:{type:{name:"String"}}}}})}},wi={serializedName:"ApplicationGatewayFirewallRule",type:{name:"Composite",className:"ApplicationGatewayFirewallRule",modelProperties:{ruleId:{required:!0,serializedName:"ruleId",type:{name:"Number"}},description:{serializedName:"description",type:{name:"String"}}}}},Ri={serializedName:"ApplicationGatewayFirewallRuleGroup",type:{name:"Composite",className:"ApplicationGatewayFirewallRuleGroup",modelProperties:{ruleGroupName:{required:!0,serializedName:"ruleGroupName",type:{name:"String"}},description:{serializedName:"description",type:{name:"String"}},rules:{required:!0,serializedName:"rules",type:{name:"Sequence",element:{type:{name:"Composite",className:"ApplicationGatewayFirewallRule"}}}}}}},fi={serializedName:"ApplicationGatewayFirewallRuleSet",type:{name:"Composite",className:"ApplicationGatewayFirewallRuleSet",modelProperties:cr({},Cr.type.modelProperties,{provisioningState:{serializedName:"properties.provisioningState",type:{name:"String"}},ruleSetType:{required:!0,serializedName:"properties.ruleSetType",type:{name:"String"}},ruleSetVersion:{required:!0,serializedName:"properties.ruleSetVersion",type:{name:"String"}},ruleGroups:{required:!0,serializedName:"properties.ruleGroups",type:{name:"Sequence",element:{type:{name:"Composite",className:"ApplicationGatewayFirewallRuleGroup"}}}}})}},Si={serializedName:"ApplicationGatewayAvailableWafRuleSetsResult",type:{name:"Composite",className:"ApplicationGatewayAvailableWafRuleSetsResult",modelProperties:{value:{serializedName:"value",type:{name:"Sequence",element:{type:{name:"Composite",className:"ApplicationGatewayFirewallRuleSet"}}}}}}},gi={serializedName:"ApplicationGatewayAvailableSslOptions",type:{name:"Composite",className:"ApplicationGatewayAvailableSslOptions",modelProperties:cr({},Cr.type.modelProperties,{predefinedPolicies:{serializedName:"properties.predefinedPolicies",type:{name:"Sequence",element:{type:{name:"Composite",className:"SubResource"}}}},defaultPolicy:{serializedName:"properties.defaultPolicy",type:{name:"String"}},availableCipherSuites:{serializedName:"properties.availableCipherSuites",type:{name:"Sequence",element:{type:{name:"String"}}}},availableProtocols:{serializedName:"properties.availableProtocols",type:{name:"Sequence",element:{type:{name:"String"}}}}})}},Ai={serializedName:"ApplicationGatewaySslPredefinedPolicy",type:{name:"Composite",className:"ApplicationGatewaySslPredefinedPolicy",modelProperties:cr({},Pr.type.modelProperties,{name:{serializedName:"name",type:{name:"String"}},cipherSuites:{serializedName:"properties.cipherSuites",type:{name:"Sequence",element:{type:{name:"String"}}}},minProtocolVersion:{serializedName:"properties.minProtocolVersion",type:{name:"String"}}})}},Gi={serializedName:"TagsObject",type:{name:"Composite",className:"TagsObject",modelProperties:{tags:{serializedName:"tags",type:{name:"Dictionary",value:{type:{name:"String"}}}}}}},bi={serializedName:"AvailableDelegation",type:{name:"Composite",className:"AvailableDelegation",modelProperties:{name:{serializedName:"name",type:{name:"String"}},id:{serializedName:"id",type:{name:"String"}},type:{serializedName:"type",type:{name:"String"}},serviceName:{serializedName:"serviceName",type:{name:"String"}},actions:{serializedName:"actions",type:{name:"Sequence",element:{type:{name:"String"}}}}}}},hi={serializedName:"AzureFirewallIPConfiguration",type:{name:"Composite",className:"AzureFirewallIPConfiguration",modelProperties:cr({},Pr.type.modelProperties,{privateIPAddress:{serializedName:"properties.privateIPAddress",type:{name:"String"}},subnet:{serializedName:"properties.subnet",type:{name:"Composite",className:"SubResource"}},publicIPAddress:{serializedName:"properties.publicIPAddress",type:{name:"Composite",className:"SubResource"}},provisioningState:{serializedName:"properties.provisioningState",type:{name:"String"}},name:{serializedName:"name",type:{name:"String"}},etag:{readOnly:!0,serializedName:"etag",type:{name:"String"}}})}},ki={serializedName:"AzureFirewallRCAction",type:{name:"Composite",className:"AzureFirewallRCAction",modelProperties:{type:{serializedName:"type",type:{name:"String"}}}}},zi={serializedName:"AzureFirewallApplicationRuleProtocol",type:{name:"Composite",className:"AzureFirewallApplicationRuleProtocol",modelProperties:{protocolType:{serializedName:"protocolType",type:{name:"String"}},port:{serializedName:"port",constraints:{InclusiveMaximum:64e3,InclusiveMinimum:0},type:{name:"Number"}}}}},vi={serializedName:"AzureFirewallApplicationRule",type:{name:"Composite",className:"AzureFirewallApplicationRule",modelProperties:{name:{serializedName:"name",type:{name:"String"}},description:{serializedName:"description",type:{name:"String"}},sourceAddresses:{serializedName:"sourceAddresses",type:{name:"Sequence",element:{type:{name:"String"}}}},protocols:{serializedName:"protocols",type:{name:"Sequence",element:{type:{name:"Composite",className:"AzureFirewallApplicationRuleProtocol"}}}},targetFqdns:{serializedName:"targetFqdns",type:{name:"Sequence",element:{type:{name:"String"}}}},fqdnTags:{serializedName:"fqdnTags",type:{name:"Sequence",element:{type:{name:"String"}}}}}}},Ii={serializedName:"AzureFirewallApplicationRuleCollection",type:{name:"Composite",className:"AzureFirewallApplicationRuleCollection",modelProperties:cr({},Pr.type.modelProperties,{priority:{serializedName:"properties.priority",constraints:{InclusiveMaximum:65e3,InclusiveMinimum:100},type:{name:"Number"}},action:{serializedName:"properties.action",type:{name:"Composite",className:"AzureFirewallRCAction"}},rules:{serializedName:"properties.rules",type:{name:"Sequence",element:{type:{name:"Composite",className:"AzureFirewallApplicationRule"}}}},provisioningState:{serializedName:"properties.provisioningState",type:{name:"String"}},name:{serializedName:"name",type:{name:"String"}},etag:{readOnly:!0,serializedName:"etag",type:{name:"String"}}})}},Ei={serializedName:"AzureFirewallNatRCAction",type:{name:"Composite",className:"AzureFirewallNatRCAction",modelProperties:{type:{serializedName:"type",type:{name:"String"}}}}},Mi={serializedName:"AzureFirewallNatRule",type:{name:"Composite",className:"AzureFirewallNatRule",modelProperties:{name:{serializedName:"name",type:{name:"String"}},description:{serializedName:"description",type:{name:"String"}},sourceAddresses:{serializedName:"sourceAddresses",type:{name:"Sequence",element:{type:{name:"String"}}}},destinationAddresses:{serializedName:"destinationAddresses",type:{name:"Sequence",element:{type:{name:"String"}}}},destinationPorts:{serializedName:"destinationPorts",type:{name:"Sequence",element:{type:{name:"String"}}}},protocols:{serializedName:"protocols",type:{name:"Sequence",element:{type:{name:"String"}}}},translatedAddress:{serializedName:"translatedAddress",type:{name:"String"}},translatedPort:{serializedName:"translatedPort",type:{name:"String"}}}}},Vi={serializedName:"AzureFirewallNatRuleCollection",type:{name:"Composite",className:"AzureFirewallNatRuleCollection",modelProperties:cr({},Pr.type.modelProperties,{priority:{serializedName:"properties.priority",constraints:{InclusiveMaximum:65e3,InclusiveMinimum:100},type:{name:"Number"}},action:{serializedName:"properties.action",type:{name:"Composite",className:"AzureFirewallNatRCAction"}},rules:{serializedName:"properties.rules",type:{name:"Sequence",element:{type:{name:"Composite",className:"AzureFirewallNatRule"}}}},provisioningState:{serializedName:"properties.provisioningState",type:{name:"String"}},name:{serializedName:"name",type:{name:"String"}},etag:{readOnly:!0,serializedName:"etag",type:{name:"String"}}})}},xi={serializedName:"AzureFirewallNetworkRule",type:{name:"Composite",className:"AzureFirewallNetworkRule",modelProperties:{name:{serializedName:"name",type:{name:"String"}},description:{serializedName:"description",type:{name:"String"}},protocols:{serializedName:"protocols",type:{name:"Sequence",element:{type:{name:"String"}}}},sourceAddresses:{serializedName:"sourceAddresses",type:{name:"Sequence",element:{type:{name:"String"}}}},destinationAddresses:{serializedName:"destinationAddresses",type:{name:"Sequence",element:{type:{name:"String"}}}},destinationPorts:{serializedName:"destinationPorts",type:{name:"Sequence",element:{type:{name:"String"}}}}}}},Fi={serializedName:"AzureFirewallNetworkRuleCollection",type:{name:"Composite",className:"AzureFirewallNetworkRuleCollection",modelProperties:cr({},Pr.type.modelProperties,{priority:{serializedName:"properties.priority",constraints:{InclusiveMaximum:65e3,InclusiveMinimum:100},type:{name:"Number"}},action:{serializedName:"properties.action",type:{name:"Composite",className:"AzureFirewallRCAction"}},rules:{serializedName:"properties.rules",type:{name:"Sequence",element:{type:{name:"Composite",className:"AzureFirewallNetworkRule"}}}},provisioningState:{serializedName:"properties.provisioningState",type:{name:"String"}},name:{serializedName:"name",type:{name:"String"}},etag:{readOnly:!0,serializedName:"etag",type:{name:"String"}}})}},qi={serializedName:"AzureFirewall",type:{name:"Composite",className:"AzureFirewall",modelProperties:cr({},Cr.type.modelProperties,{applicationRuleCollections:{serializedName:"properties.applicationRuleCollections",type:{name:"Sequence",element:{type:{name:"Composite",className:"AzureFirewallApplicationRuleCollection"}}}},natRuleCollections:{serializedName:"properties.natRuleCollections",type:{name:"Sequence",element:{type:{name:"Composite",className:"AzureFirewallNatRuleCollection"}}}},networkRuleCollections:{serializedName:"properties.networkRuleCollections",type:{name:"Sequence",element:{type:{name:"Composite",className:"AzureFirewallNetworkRuleCollection"}}}},ipConfigurations:{serializedName:"properties.ipConfigurations",type:{name:"Sequence",element:{type:{name:"Composite",className:"AzureFirewallIPConfiguration"}}}},provisioningState:{serializedName:"properties.provisioningState",type:{name:"String"}},etag:{readOnly:!0,serializedName:"etag",type:{name:"String"}}})}},Ti={serializedName:"AzureFirewallFqdnTag",type:{name:"Composite",className:"AzureFirewallFqdnTag",modelProperties:cr({},Cr.type.modelProperties,{provisioningState:{readOnly:!0,serializedName:"properties.provisioningState",type:{name:"String"}},fqdnTagName:{readOnly:!0,serializedName:"properties.fqdnTagName",type:{name:"String"}},etag:{readOnly:!0,serializedName:"etag",type:{name:"String"}}})}},Li={serializedName:"DnsNameAvailabilityResult",type:{name:"Composite",className:"DnsNameAvailabilityResult",modelProperties:{available:{serializedName:"available",type:{name:"Boolean"}}}}},Bi={serializedName:"DdosProtectionPlan",type:{name:"Composite",className:"DdosProtectionPlan",modelProperties:{id:{readOnly:!0,serializedName:"id",type:{name:"String"}},name:{readOnly:!0,serializedName:"name",type:{name:"String"}},type:{readOnly:!0,serializedName:"type",type:{name:"String"}},location:{serializedName:"location",type:{name:"String"}},tags:{serializedName:"tags",type:{name:"Dictionary",value:{type:{name:"String"}}}},resourceGuid:{readOnly:!0,serializedName:"properties.resourceGuid",type:{name:"String"}},provisioningState:{readOnly:!0,serializedName:"properties.provisioningState",type:{name:"String"}},virtualNetworks:{readOnly:!0,serializedName:"properties.virtualNetworks",type:{name:"Sequence",element:{type:{name:"Composite",className:"SubResource"}}}},etag:{readOnly:!0,serializedName:"etag",type:{name:"String"}}}}},Oi={serializedName:"EndpointServiceResult",type:{name:"Composite",className:"EndpointServiceResult",modelProperties:cr({},Pr.type.modelProperties,{name:{readOnly:!0,serializedName:"name",type:{name:"String"}},type:{readOnly:!0,serializedName:"type",type:{name:"String"}}})}},Di={serializedName:"ExpressRouteCircuitAuthorization",type:{name:"Composite",className:"ExpressRouteCircuitAuthorization",modelProperties:cr({},Pr.type.modelProperties,{authorizationKey:{serializedName:"properties.authorizationKey",type:{name:"String"}},authorizationUseStatus:{serializedName:"properties.authorizationUseStatus",type:{name:"String"}},provisioningState:{serializedName:"properties.provisioningState",type:{name:"String"}},name:{serializedName:"name",type:{name:"String"}},etag:{readOnly:!0,serializedName:"etag",type:{name:"String"}}})}},Hi={serializedName:"ExpressRouteCircuitPeeringConfig",type:{name:"Composite",className:"ExpressRouteCircuitPeeringConfig",modelProperties:{advertisedPublicPrefixes:{serializedName:"advertisedPublicPrefixes",type:{name:"Sequence",element:{type:{name:"String"}}}},advertisedCommunities:{serializedName:"advertisedCommunities",type:{name:"Sequence",element:{type:{name:"String"}}}},advertisedPublicPrefixesState:{serializedName:"advertisedPublicPrefixesState",type:{name:"String"}},legacyMode:{serializedName:"legacyMode",type:{name:"Number"}},customerASN:{serializedName:"customerASN",type:{name:"Number"}},routingRegistryName:{serializedName:"routingRegistryName",type:{name:"String"}}}}},Ui={serializedName:"RouteFilterRule",type:{name:"Composite",className:"RouteFilterRule",modelProperties:cr({},Pr.type.modelProperties,{access:{required:!0,serializedName:"properties.access",type:{name:"String"}},routeFilterRuleType:{required:!0,isConstant:!0,serializedName:"properties.routeFilterRuleType",defaultValue:"Community",type:{name:"String"}},communities:{required:!0,serializedName:"properties.communities",type:{name:"Sequence",element:{type:{name:"String"}}}},provisioningState:{readOnly:!0,serializedName:"properties.provisioningState",type:{name:"String"}},name:{serializedName:"name",type:{name:"String"}},location:{serializedName:"location",type:{name:"String"}},etag:{readOnly:!0,serializedName:"etag",type:{name:"String"}}})}},Wi={serializedName:"ExpressRouteCircuitStats",type:{name:"Composite",className:"ExpressRouteCircuitStats",modelProperties:{primarybytesIn:{serializedName:"primarybytesIn",type:{name:"Number"}},primarybytesOut:{serializedName:"primarybytesOut",type:{name:"Number"}},secondarybytesIn:{serializedName:"secondarybytesIn",type:{name:"Number"}},secondarybytesOut:{serializedName:"secondarybytesOut",type:{name:"Number"}}}}},_i={serializedName:"ExpressRouteConnectionId",type:{name:"Composite",className:"ExpressRouteConnectionId",modelProperties:{id:{readOnly:!0,serializedName:"id",type:{name:"String"}}}}},Ki={serializedName:"ExpressRouteCircuitConnection",type:{name:"Composite",className:"ExpressRouteCircuitConnection",modelProperties:cr({},Pr.type.modelProperties,{expressRouteCircuitPeering:{serializedName:"properties.expressRouteCircuitPeering",type:{name:"Composite",className:"SubResource"}},peerExpressRouteCircuitPeering:{serializedName:"properties.peerExpressRouteCircuitPeering",type:{name:"Composite",className:"SubResource"}},addressPrefix:{serializedName:"properties.addressPrefix",type:{name:"String"}},authorizationKey:{serializedName:"properties.authorizationKey",type:{name:"String"}},circuitConnectionStatus:{readOnly:!0,serializedName:"properties.circuitConnectionStatus",type:{name:"String"}},provisioningState:{readOnly:!0,serializedName:"properties.provisioningState",type:{name:"String"}},name:{serializedName:"name",type:{name:"String"}},etag:{readOnly:!0,serializedName:"etag",type:{name:"String"}}})}},ji={serializedName:"ExpressRouteCircuitPeering",type:{name:"Composite",className:"ExpressRouteCircuitPeering",modelProperties:cr({},Pr.type.modelProperties,{peeringType:{serializedName:"properties.peeringType",type:{name:"String"}},state:{serializedName:"properties.state",type:{name:"String"}},azureASN:{serializedName:"properties.azureASN",type:{name:"Number"}},peerASN:{serializedName:"properties.peerASN",constraints:{InclusiveMaximum:4294967295,InclusiveMinimum:1},type:{name:"Number"}},primaryPeerAddressPrefix:{serializedName:"properties.primaryPeerAddressPrefix",type:{name:"String"}},secondaryPeerAddressPrefix:{serializedName:"properties.secondaryPeerAddressPrefix",type:{name:"String"}},primaryAzurePort:{serializedName:"properties.primaryAzurePort",type:{name:"String"}},secondaryAzurePort:{serializedName:"properties.secondaryAzurePort",type:{name:"String"}},sharedKey:{serializedName:"properties.sharedKey",type:{name:"String"}},vlanId:{serializedName:"properties.vlanId",type:{name:"Number"}},microsoftPeeringConfig:{serializedName:"properties.microsoftPeeringConfig",type:{name:"Composite",className:"ExpressRouteCircuitPeeringConfig"}},stats:{serializedName:"properties.stats",type:{name:"Composite",className:"ExpressRouteCircuitStats"}},provisioningState:{serializedName:"properties.provisioningState",type:{name:"String"}},gatewayManagerEtag:{serializedName:"properties.gatewayManagerEtag",type:{name:"String"}},lastModifiedBy:{serializedName:"properties.lastModifiedBy",type:{name:"String"}},routeFilter:{serializedName:"properties.routeFilter",type:{name:"Composite",className:"RouteFilter"}},ipv6PeeringConfig:{serializedName:"properties.ipv6PeeringConfig",type:{name:"Composite",className:"Ipv6ExpressRouteCircuitPeeringConfig"}},expressRouteConnection:{serializedName:"properties.expressRouteConnection",type:{name:"Composite",className:"ExpressRouteConnectionId"}},connections:{serializedName:"properties.connections",type:{name:"Sequence",element:{type:{name:"Composite",className:"ExpressRouteCircuitConnection"}}}},name:{serializedName:"name",type:{name:"String"}},etag:{readOnly:!0,serializedName:"etag",type:{name:"String"}}})}},Zi={serializedName:"RouteFilter",type:{name:"Composite",className:"RouteFilter",modelProperties:cr({},Cr.type.modelProperties,{rules:{serializedName:"properties.rules",type:{name:"Sequence",element:{type:{name:"Composite",className:"RouteFilterRule"}}}},peerings:{serializedName:"properties.peerings",type:{name:"Sequence",element:{type:{name:"Composite",className:"ExpressRouteCircuitPeering"}}}},provisioningState:{readOnly:!0,serializedName:"properties.provisioningState",type:{name:"String"}},etag:{readOnly:!0,serializedName:"etag",type:{name:"String"}}})}},Qi={serializedName:"Ipv6ExpressRouteCircuitPeeringConfig",type:{name:"Composite",className:"Ipv6ExpressRouteCircuitPeeringConfig",modelProperties:{primaryPeerAddressPrefix:{serializedName:"primaryPeerAddressPrefix",type:{name:"String"}},secondaryPeerAddressPrefix:{serializedName:"secondaryPeerAddressPrefix",type:{name:"String"}},microsoftPeeringConfig:{serializedName:"microsoftPeeringConfig",type:{name:"Composite",className:"ExpressRouteCircuitPeeringConfig"}},routeFilter:{serializedName:"routeFilter",type:{name:"Composite",className:"RouteFilter"}},state:{serializedName:"state",type:{name:"String"}}}}},Xi={serializedName:"ExpressRouteCircuitSku",type:{name:"Composite",className:"ExpressRouteCircuitSku",modelProperties:{name:{serializedName:"name",type:{name:"String"}},tier:{serializedName:"tier",type:{name:"String"}},family:{serializedName:"family",type:{name:"String"}}}}},$i={serializedName:"ExpressRouteCircuitServiceProviderProperties",type:{name:"Composite",className:"ExpressRouteCircuitServiceProviderProperties",modelProperties:{serviceProviderName:{serializedName:"serviceProviderName",type:{name:"String"}},peeringLocation:{serializedName:"peeringLocation",type:{name:"String"}},bandwidthInMbps:{serializedName:"bandwidthInMbps",type:{name:"Number"}}}}},Ji={serializedName:"ExpressRouteCircuit",type:{name:"Composite",className:"ExpressRouteCircuit",modelProperties:cr({},Cr.type.modelProperties,{sku:{serializedName:"sku",type:{name:"Composite",className:"ExpressRouteCircuitSku"}},allowClassicOperations:{serializedName:"properties.allowClassicOperations",type:{name:"Boolean"}},circuitProvisioningState:{serializedName:"properties.circuitProvisioningState",type:{name:"String"}},serviceProviderProvisioningState:{serializedName:"properties.serviceProviderProvisioningState",type:{name:"String"}},authorizations:{serializedName:"properties.authorizations",type:{name:"Sequence",element:{type:{name:"Composite",className:"ExpressRouteCircuitAuthorization"}}}},peerings:{serializedName:"properties.peerings",type:{name:"Sequence",element:{type:{name:"Composite",className:"ExpressRouteCircuitPeering"}}}},serviceKey:{serializedName:"properties.serviceKey",type:{name:"String"}},serviceProviderNotes:{serializedName:"properties.serviceProviderNotes",type:{name:"String"}},serviceProviderProperties:{serializedName:"properties.serviceProviderProperties",type:{name:"Composite",className:"ExpressRouteCircuitServiceProviderProperties"}},provisioningState:{serializedName:"properties.provisioningState",type:{name:"String"}},gatewayManagerEtag:{serializedName:"properties.gatewayManagerEtag",type:{name:"String"}},allowGlobalReach:{serializedName:"properties.allowGlobalReach",type:{name:"Boolean"}},etag:{readOnly:!0,serializedName:"etag",type:{name:"String"}}})}},Yi={serializedName:"ExpressRouteCircuitArpTable",type:{name:"Composite",className:"ExpressRouteCircuitArpTable",modelProperties:{age:{serializedName:"age",type:{name:"Number"}},interfaceProperty:{serializedName:"interface",type:{name:"String"}},ipAddress:{serializedName:"ipAddress",type:{name:"String"}},macAddress:{serializedName:"macAddress",type:{name:"String"}}}}},ea={serializedName:"ExpressRouteCircuitsArpTableListResult",type:{name:"Composite",className:"ExpressRouteCircuitsArpTableListResult",modelProperties:{value:{serializedName:"value",type:{name:"Sequence",element:{type:{name:"Composite",className:"ExpressRouteCircuitArpTable"}}}},nextLink:{serializedName:"nextLink",type:{name:"String"}}}}},ta={serializedName:"ExpressRouteCircuitRoutesTable",type:{name:"Composite",className:"ExpressRouteCircuitRoutesTable",modelProperties:{network:{serializedName:"network",type:{name:"String"}},nextHop:{serializedName:"nextHop",type:{name:"String"}},locPrf:{serializedName:"locPrf",type:{name:"String"}},weight:{serializedName:"weight",type:{name:"Number"}},path:{serializedName:"path",type:{name:"String"}}}}},ra={serializedName:"ExpressRouteCircuitsRoutesTableListResult",type:{name:"Composite",className:"ExpressRouteCircuitsRoutesTableListResult",modelProperties:{value:{serializedName:"value",type:{name:"Sequence",element:{type:{name:"Composite",className:"ExpressRouteCircuitRoutesTable"}}}},nextLink:{serializedName:"nextLink",type:{name:"String"}}}}},ia={serializedName:"ExpressRouteCircuitRoutesTableSummary",type:{name:"Composite",className:"ExpressRouteCircuitRoutesTableSummary",modelProperties:{neighbor:{serializedName:"neighbor",type:{name:"String"}},v:{serializedName:"v",type:{name:"Number"}},as:{serializedName:"as",type:{name:"Number"}},upDown:{serializedName:"upDown",type:{name:"String"}},statePfxRcd:{serializedName:"statePfxRcd",type:{name:"String"}}}}},aa={serializedName:"ExpressRouteCircuitsRoutesTableSummaryListResult",type:{name:"Composite",className:"ExpressRouteCircuitsRoutesTableSummaryListResult",modelProperties:{value:{serializedName:"value",type:{name:"Sequence",element:{type:{name:"Composite",className:"ExpressRouteCircuitRoutesTableSummary"}}}},nextLink:{serializedName:"nextLink",type:{name:"String"}}}}},oa={serializedName:"ExpressRouteServiceProviderBandwidthsOffered",type:{name:"Composite",className:"ExpressRouteServiceProviderBandwidthsOffered",modelProperties:{offerName:{serializedName:"offerName",type:{name:"String"}},valueInMbps:{serializedName:"valueInMbps",type:{name:"Number"}}}}},na={serializedName:"ExpressRouteServiceProvider",type:{name:"Composite",className:"ExpressRouteServiceProvider",modelProperties:cr({},Cr.type.modelProperties,{peeringLocations:{serializedName:"properties.peeringLocations",type:{name:"Sequence",element:{type:{name:"String"}}}},bandwidthsOffered:{serializedName:"properties.bandwidthsOffered",type:{name:"Sequence",element:{type:{name:"Composite",className:"ExpressRouteServiceProviderBandwidthsOffered"}}}},provisioningState:{serializedName:"properties.provisioningState",type:{name:"String"}}})}},sa={serializedName:"ExpressRouteCrossConnectionRoutesTableSummary",type:{name:"Composite",className:"ExpressRouteCrossConnectionRoutesTableSummary",modelProperties:{neighbor:{serializedName:"neighbor",type:{name:"String"}},asn:{serializedName:"asn",type:{name:"Number"}},upDown:{serializedName:"upDown",type:{name:"String"}},stateOrPrefixesReceived:{serializedName:"stateOrPrefixesReceived",type:{name:"String"}}}}},pa={serializedName:"ExpressRouteCrossConnectionsRoutesTableSummaryListResult",type:{name:"Composite",className:"ExpressRouteCrossConnectionsRoutesTableSummaryListResult",modelProperties:{value:{serializedName:"value",type:{name:"Sequence",element:{type:{name:"Composite",className:"ExpressRouteCrossConnectionRoutesTableSummary"}}}},nextLink:{readOnly:!0,serializedName:"nextLink",type:{name:"String"}}}}},ua={serializedName:"ExpressRouteCircuitReference",type:{name:"Composite",className:"ExpressRouteCircuitReference",modelProperties:{id:{serializedName:"id",type:{name:"String"}}}}},la={serializedName:"ExpressRouteCrossConnectionPeering",type:{name:"Composite",className:"ExpressRouteCrossConnectionPeering",modelProperties:cr({},Pr.type.modelProperties,{peeringType:{serializedName:"properties.peeringType",type:{name:"String"}},state:{serializedName:"properties.state",type:{name:"String"}},azureASN:{readOnly:!0,serializedName:"properties.azureASN",type:{name:"Number"}},peerASN:{serializedName:"properties.peerASN",constraints:{InclusiveMaximum:4294967295,InclusiveMinimum:1},type:{name:"Number"}},primaryPeerAddressPrefix:{serializedName:"properties.primaryPeerAddressPrefix",type:{name:"String"}},secondaryPeerAddressPrefix:{serializedName:"properties.secondaryPeerAddressPrefix",type:{name:"String"}},primaryAzurePort:{readOnly:!0,serializedName:"properties.primaryAzurePort",type:{name:"String"}},secondaryAzurePort:{readOnly:!0,serializedName:"properties.secondaryAzurePort",type:{name:"String"}},sharedKey:{serializedName:"properties.sharedKey",type:{name:"String"}},vlanId:{serializedName:"properties.vlanId",type:{name:"Number"}},microsoftPeeringConfig:{serializedName:"properties.microsoftPeeringConfig",type:{name:"Composite",className:"ExpressRouteCircuitPeeringConfig"}},provisioningState:{readOnly:!0,serializedName:"properties.provisioningState",type:{name:"String"}},gatewayManagerEtag:{serializedName:"properties.gatewayManagerEtag",type:{name:"String"}},lastModifiedBy:{serializedName:"properties.lastModifiedBy",type:{name:"String"}},ipv6PeeringConfig:{serializedName:"properties.ipv6PeeringConfig",type:{name:"Composite",className:"Ipv6ExpressRouteCircuitPeeringConfig"}},name:{serializedName:"name",type:{name:"String"}},etag:{readOnly:!0,serializedName:"etag",type:{name:"String"}}})}},ca={serializedName:"ExpressRouteCrossConnection",type:{name:"Composite",className:"ExpressRouteCrossConnection",modelProperties:cr({},Cr.type.modelProperties,{primaryAzurePort:{readOnly:!0,serializedName:"properties.primaryAzurePort",type:{name:"String"}},secondaryAzurePort:{readOnly:!0,serializedName:"properties.secondaryAzurePort",type:{name:"String"}},sTag:{readOnly:!0,serializedName:"properties.sTag",type:{name:"Number"}},peeringLocation:{serializedName:"properties.peeringLocation",type:{name:"String"}},bandwidthInMbps:{serializedName:"properties.bandwidthInMbps",type:{name:"Number"}},expressRouteCircuit:{serializedName:"properties.expressRouteCircuit",type:{name:"Composite",className:"ExpressRouteCircuitReference"}},serviceProviderProvisioningState:{serializedName:"properties.serviceProviderProvisioningState",type:{name:"String"}},serviceProviderNotes:{serializedName:"properties.serviceProviderNotes",type:{name:"String"}},provisioningState:{readOnly:!0,serializedName:"properties.provisioningState",type:{name:"String"}},peerings:{serializedName:"properties.peerings",type:{name:"Sequence",element:{type:{name:"Composite",className:"ExpressRouteCrossConnectionPeering"}}}},etag:{readOnly:!0,serializedName:"etag",type:{name:"String"}}})}},da={serializedName:"VirtualHubId",type:{name:"Composite",className:"VirtualHubId",modelProperties:{id:{serializedName:"id",type:{name:"String"}}}}},ma={serializedName:"ExpressRouteCircuitPeeringId",type:{name:"Composite",className:"ExpressRouteCircuitPeeringId",modelProperties:{id:{serializedName:"id",type:{name:"String"}}}}},ya={serializedName:"ExpressRouteGatewayProperties_autoScaleConfiguration_bounds",type:{name:"Composite",className:"ExpressRouteGatewayPropertiesAutoScaleConfigurationBounds",modelProperties:{min:{serializedName:"min",type:{name:"Number"}},max:{serializedName:"max",type:{name:"Number"}}}}},Pa={serializedName:"ExpressRouteGatewayProperties_autoScaleConfiguration",type:{name:"Composite",className:"ExpressRouteGatewayPropertiesAutoScaleConfiguration",modelProperties:{bounds:{serializedName:"bounds",type:{name:"Composite",className:"ExpressRouteGatewayPropertiesAutoScaleConfigurationBounds"}}}}},Na={serializedName:"ExpressRouteConnection",type:{name:"Composite",className:"ExpressRouteConnection",modelProperties:cr({},Pr.type.modelProperties,{provisioningState:{readOnly:!0,serializedName:"properties.provisioningState",type:{name:"String"}},expressRouteCircuitPeering:{required:!0,serializedName:"properties.expressRouteCircuitPeering",type:{name:"Composite",className:"ExpressRouteCircuitPeeringId"}},authorizationKey:{serializedName:"properties.authorizationKey",type:{name:"String"}},routingWeight:{serializedName:"properties.routingWeight",type:{name:"Number"}},name:{required:!0,serializedName:"name",type:{name:"String"}}})}},Ca={serializedName:"ExpressRouteGateway",type:{name:"Composite",className:"ExpressRouteGateway",modelProperties:cr({},Cr.type.modelProperties,{autoScaleConfiguration:{serializedName:"properties.autoScaleConfiguration",type:{name:"Composite",className:"ExpressRouteGatewayPropertiesAutoScaleConfiguration"}},expressRouteConnections:{readOnly:!0,serializedName:"properties.expressRouteConnections",type:{name:"Sequence",element:{type:{name:"Composite",className:"ExpressRouteConnection"}}}},provisioningState:{readOnly:!0,serializedName:"properties.provisioningState",type:{name:"String"}},virtualHub:{required:!0,serializedName:"properties.virtualHub",type:{name:"Composite",className:"VirtualHubId"}},etag:{readOnly:!0,serializedName:"etag",type:{name:"String"}}})}},wa={serializedName:"ExpressRouteGatewayList",type:{name:"Composite",className:"ExpressRouteGatewayList",modelProperties:{value:{serializedName:"value",type:{name:"Sequence",element:{type:{name:"Composite",className:"ExpressRouteGateway"}}}}}}},Ra={serializedName:"ExpressRouteConnectionList",type:{name:"Composite",className:"ExpressRouteConnectionList",modelProperties:{value:{serializedName:"value",type:{name:"Sequence",element:{type:{name:"Composite",className:"ExpressRouteConnection"}}}}}}},fa={serializedName:"LoadBalancerSku",type:{name:"Composite",className:"LoadBalancerSku",modelProperties:{name:{serializedName:"name",type:{name:"String"}}}}},Sa={serializedName:"LoadBalancingRule",type:{name:"Composite",className:"LoadBalancingRule",modelProperties:cr({},Pr.type.modelProperties,{frontendIPConfiguration:{serializedName:"properties.frontendIPConfiguration",type:{name:"Composite",className:"SubResource"}},backendAddressPool:{serializedName:"properties.backendAddressPool",type:{name:"Composite",className:"SubResource"}},probe:{serializedName:"properties.probe",type:{name:"Composite",className:"SubResource"}},protocol:{required:!0,serializedName:"properties.protocol",type:{name:"String"}},loadDistribution:{serializedName:"properties.loadDistribution",type:{name:"String"}},frontendPort:{required:!0,serializedName:"properties.frontendPort",type:{name:"Number"}},backendPort:{serializedName:"properties.backendPort",type:{name:"Number"}},idleTimeoutInMinutes:{serializedName:"properties.idleTimeoutInMinutes",type:{name:"Number"}},enableFloatingIP:{serializedName:"properties.enableFloatingIP",type:{name:"Boolean"}},enableTcpReset:{serializedName:"properties.enableTcpReset",type:{name:"Boolean"}},disableOutboundSnat:{serializedName:"properties.disableOutboundSnat",type:{name:"Boolean"}},provisioningState:{serializedName:"properties.provisioningState",type:{name:"String"}},name:{serializedName:"name",type:{name:"String"}},etag:{serializedName:"etag",type:{name:"String"}}})}},ga={serializedName:"Probe",type:{name:"Composite",className:"Probe",modelProperties:cr({},Pr.type.modelProperties,{loadBalancingRules:{readOnly:!0,serializedName:"properties.loadBalancingRules",type:{name:"Sequence",element:{type:{name:"Composite",className:"SubResource"}}}},protocol:{required:!0,serializedName:"properties.protocol",type:{name:"String"}},port:{required:!0,serializedName:"properties.port",type:{name:"Number"}},intervalInSeconds:{serializedName:"properties.intervalInSeconds",type:{name:"Number"}},numberOfProbes:{serializedName:"properties.numberOfProbes",type:{name:"Number"}},requestPath:{serializedName:"properties.requestPath",type:{name:"String"}},provisioningState:{serializedName:"properties.provisioningState",type:{name:"String"}},name:{serializedName:"name",type:{name:"String"}},etag:{serializedName:"etag",type:{name:"String"}}})}},Aa={serializedName:"InboundNatPool",type:{name:"Composite",className:"InboundNatPool",modelProperties:cr({},Pr.type.modelProperties,{frontendIPConfiguration:{serializedName:"properties.frontendIPConfiguration",type:{name:"Composite",className:"SubResource"}},protocol:{required:!0,serializedName:"properties.protocol",type:{name:"String"}},frontendPortRangeStart:{required:!0,serializedName:"properties.frontendPortRangeStart",type:{name:"Number"}},frontendPortRangeEnd:{required:!0,serializedName:"properties.frontendPortRangeEnd",type:{name:"Number"}},backendPort:{required:!0,serializedName:"properties.backendPort",type:{name:"Number"}},idleTimeoutInMinutes:{serializedName:"properties.idleTimeoutInMinutes",type:{name:"Number"}},enableFloatingIP:{serializedName:"properties.enableFloatingIP",type:{name:"Boolean"}},enableTcpReset:{serializedName:"properties.enableTcpReset",type:{name:"Boolean"}},provisioningState:{serializedName:"properties.provisioningState",type:{name:"String"}},name:{serializedName:"name",type:{name:"String"}},etag:{serializedName:"etag",type:{name:"String"}}})}},Ga={serializedName:"OutboundRule",type:{name:"Composite",className:"OutboundRule",modelProperties:cr({},Pr.type.modelProperties,{allocatedOutboundPorts:{serializedName:"properties.allocatedOutboundPorts",type:{name:"Number"}},frontendIPConfigurations:{required:!0,serializedName:"properties.frontendIPConfigurations",type:{name:"Sequence",element:{type:{name:"Composite",className:"SubResource"}}}},backendAddressPool:{required:!0,serializedName:"properties.backendAddressPool",type:{name:"Composite",className:"SubResource"}},provisioningState:{serializedName:"properties.provisioningState",type:{name:"String"}},protocol:{required:!0,serializedName:"properties.protocol",type:{name:"String"}},enableTcpReset:{serializedName:"properties.enableTcpReset",type:{name:"Boolean"}},idleTimeoutInMinutes:{serializedName:"properties.idleTimeoutInMinutes",type:{name:"Number"}},name:{serializedName:"name",type:{name:"String"}},etag:{serializedName:"etag",type:{name:"String"}}})}},ba={serializedName:"LoadBalancer",type:{name:"Composite",className:"LoadBalancer",modelProperties:cr({},Cr.type.modelProperties,{sku:{serializedName:"sku",type:{name:"Composite",className:"LoadBalancerSku"}},frontendIPConfigurations:{serializedName:"properties.frontendIPConfigurations",type:{name:"Sequence",element:{type:{name:"Composite",className:"FrontendIPConfiguration"}}}},backendAddressPools:{serializedName:"properties.backendAddressPools",type:{name:"Sequence",element:{type:{name:"Composite",className:"BackendAddressPool"}}}},loadBalancingRules:{serializedName:"properties.loadBalancingRules",type:{name:"Sequence",element:{type:{name:"Composite",className:"LoadBalancingRule"}}}},probes:{serializedName:"properties.probes",type:{name:"Sequence",element:{type:{name:"Composite",className:"Probe"}}}},inboundNatRules:{serializedName:"properties.inboundNatRules",type:{name:"Sequence",element:{type:{name:"Composite",className:"InboundNatRule"}}}},inboundNatPools:{serializedName:"properties.inboundNatPools",type:{name:"Sequence",element:{type:{name:"Composite",className:"InboundNatPool"}}}},outboundRules:{serializedName:"properties.outboundRules",type:{name:"Sequence",element:{type:{name:"Composite",className:"OutboundRule"}}}},resourceGuid:{serializedName:"properties.resourceGuid",type:{name:"String"}},provisioningState:{serializedName:"properties.provisioningState",type:{name:"String"}},etag:{serializedName:"etag",type:{name:"String"}}})}},ha={serializedName:"ErrorDetails",type:{name:"Composite",className:"ErrorDetails",modelProperties:{code:{serializedName:"code",type:{name:"String"}},target:{serializedName:"target",type:{name:"String"}},message:{serializedName:"message",type:{name:"String"}}}}},ka={serializedName:"Error",type:{name:"Composite",className:"ErrorModel",modelProperties:{code:{serializedName:"code",type:{name:"String"}},message:{serializedName:"message",type:{name:"String"}},target:{serializedName:"target",type:{name:"String"}},details:{serializedName:"details",type:{name:"Sequence",element:{type:{name:"Composite",className:"ErrorDetails"}}}},innerError:{serializedName:"innerError",type:{name:"String"}}}}},za={serializedName:"EffectiveNetworkSecurityGroupAssociation",type:{name:"Composite",className:"EffectiveNetworkSecurityGroupAssociation",modelProperties:{subnet:{serializedName:"subnet",type:{name:"Composite",className:"SubResource"}},networkInterface:{serializedName:"networkInterface",type:{name:"Composite",className:"SubResource"}}}}},va={serializedName:"EffectiveNetworkSecurityRule",type:{name:"Composite",className:"EffectiveNetworkSecurityRule",modelProperties:{name:{serializedName:"name",type:{name:"String"}},protocol:{serializedName:"protocol",type:{name:"String"}},sourcePortRange:{serializedName:"sourcePortRange",type:{name:"String"}},destinationPortRange:{serializedName:"destinationPortRange",type:{name:"String"}},sourcePortRanges:{serializedName:"sourcePortRanges",type:{name:"Sequence",element:{type:{name:"String"}}}},destinationPortRanges:{serializedName:"destinationPortRanges",type:{name:"Sequence",element:{type:{name:"String"}}}},sourceAddressPrefix:{serializedName:"sourceAddressPrefix",type:{name:"String"}},destinationAddressPrefix:{serializedName:"destinationAddressPrefix",type:{name:"String"}},sourceAddressPrefixes:{serializedName:"sourceAddressPrefixes",type:{name:"Sequence",element:{type:{name:"String"}}}},destinationAddressPrefixes:{serializedName:"destinationAddressPrefixes",type:{name:"Sequence",element:{type:{name:"String"}}}},expandedSourceAddressPrefix:{serializedName:"expandedSourceAddressPrefix",type:{name:"Sequence",element:{type:{name:"String"}}}},expandedDestinationAddressPrefix:{serializedName:"expandedDestinationAddressPrefix",type:{name:"Sequence",element:{type:{name:"String"}}}},access:{serializedName:"access",type:{name:"String"}},priority:{serializedName:"priority",type:{name:"Number"}},direction:{serializedName:"direction",type:{name:"String"}}}}},Ia={serializedName:"EffectiveNetworkSecurityGroup",type:{name:"Composite",className:"EffectiveNetworkSecurityGroup",modelProperties:{networkSecurityGroup:{serializedName:"networkSecurityGroup",type:{name:"Composite",className:"SubResource"}},association:{serializedName:"association",type:{name:"Composite",className:"EffectiveNetworkSecurityGroupAssociation"}},effectiveSecurityRules:{serializedName:"effectiveSecurityRules",type:{name:"Sequence",element:{type:{name:"Composite",className:"EffectiveNetworkSecurityRule"}}}},tagMap:{serializedName:"tagMap",type:{name:"Dictionary",value:{type:{name:"Sequence",element:{type:{name:"String"}}}}}}}}},Ea={serializedName:"EffectiveNetworkSecurityGroupListResult",type:{name:"Composite",className:"EffectiveNetworkSecurityGroupListResult",modelProperties:{value:{serializedName:"value",type:{name:"Sequence",element:{type:{name:"Composite",className:"EffectiveNetworkSecurityGroup"}}}},nextLink:{readOnly:!0,serializedName:"nextLink",type:{name:"String"}}}}},Ma={serializedName:"EffectiveRoute",type:{name:"Composite",className:"EffectiveRoute",modelProperties:{name:{serializedName:"name",type:{name:"String"}},source:{serializedName:"source",type:{name:"String"}},state:{serializedName:"state",type:{name:"String"}},addressPrefix:{serializedName:"addressPrefix",type:{name:"Sequence",element:{type:{name:"String"}}}},nextHopIpAddress:{serializedName:"nextHopIpAddress",type:{name:"Sequence",element:{type:{name:"String"}}}},nextHopType:{serializedName:"nextHopType",type:{name:"String"}}}}},Va={serializedName:"EffectiveRouteListResult",type:{name:"Composite",className:"EffectiveRouteListResult",modelProperties:{value:{serializedName:"value",type:{name:"Sequence",element:{type:{name:"Composite",className:"EffectiveRoute"}}}},nextLink:{readOnly:!0,serializedName:"nextLink",type:{name:"String"}}}}},xa={serializedName:"ContainerNetworkInterfaceConfiguration",type:{name:"Composite",className:"ContainerNetworkInterfaceConfiguration",modelProperties:cr({},Pr.type.modelProperties,{ipConfigurations:{serializedName:"properties.ipConfigurations",type:{name:"Sequence",element:{type:{name:"Composite",className:"IPConfigurationProfile"}}}},containerNetworkInterfaces:{serializedName:"properties.containerNetworkInterfaces",type:{name:"Sequence",element:{type:{name:"Composite",className:"ContainerNetworkInterface"}}}},provisioningState:{readOnly:!0,serializedName:"properties.provisioningState",type:{name:"String"}},name:{serializedName:"name",type:{name:"String"}},type:{readOnly:!0,serializedName:"type",type:{name:"String"}},etag:{serializedName:"etag",type:{name:"String"}}})}},Fa={serializedName:"Container",type:{name:"Composite",className:"Container",modelProperties:cr({},Pr.type.modelProperties)}},qa={serializedName:"ContainerNetworkInterfaceIpConfiguration",type:{name:"Composite",className:"ContainerNetworkInterfaceIpConfiguration",modelProperties:{provisioningState:{readOnly:!0,serializedName:"properties.provisioningState",type:{name:"String"}},name:{serializedName:"name",type:{name:"String"}},type:{readOnly:!0,serializedName:"type",type:{name:"String"}},etag:{serializedName:"etag",type:{name:"String"}}}}},Ta={serializedName:"ContainerNetworkInterface",type:{name:"Composite",className:"ContainerNetworkInterface",modelProperties:cr({},Pr.type.modelProperties,{containerNetworkInterfaceConfiguration:{serializedName:"properties.containerNetworkInterfaceConfiguration",type:{name:"Composite",className:"ContainerNetworkInterfaceConfiguration"}},container:{serializedName:"properties.container",type:{name:"Composite",className:"Container"}},ipConfigurations:{serializedName:"properties.ipConfigurations",type:{name:"Sequence",element:{type:{name:"Composite",className:"ContainerNetworkInterfaceIpConfiguration"}}}},provisioningState:{readOnly:!0,serializedName:"properties.provisioningState",type:{name:"String"}},name:{serializedName:"name",type:{name:"String"}},type:{readOnly:!0,serializedName:"type",type:{name:"String"}},etag:{serializedName:"etag",type:{name:"String"}}})}},La={serializedName:"NetworkProfile",type:{name:"Composite",className:"NetworkProfile",modelProperties:cr({},Cr.type.modelProperties,{containerNetworkInterfaces:{serializedName:"properties.containerNetworkInterfaces",type:{name:"Sequence",element:{type:{name:"Composite",className:"ContainerNetworkInterface"}}}},containerNetworkInterfaceConfigurations:{serializedName:"properties.containerNetworkInterfaceConfigurations",type:{name:"Sequence",element:{type:{name:"Composite",className:"ContainerNetworkInterfaceConfiguration"}}}},resourceGuid:{readOnly:!0,serializedName:"properties.resourceGuid",type:{name:"String"}},provisioningState:{readOnly:!0,serializedName:"properties.provisioningState",type:{name:"String"}},etag:{serializedName:"etag",type:{name:"String"}}})}},Ba={serializedName:"ErrorResponse",type:{name:"Composite",className:"ErrorResponse",modelProperties:{error:{serializedName:"error",type:{name:"Composite",className:"ErrorDetails"}}}}},Oa={serializedName:"NetworkWatcher",type:{name:"Composite",className:"NetworkWatcher",modelProperties:cr({},Cr.type.modelProperties,{etag:{serializedName:"etag",type:{name:"String"}},provisioningState:{readOnly:!0,serializedName:"properties.provisioningState",type:{name:"String"}}})}},Da={serializedName:"TopologyParameters",type:{name:"Composite",className:"TopologyParameters",modelProperties:{targetResourceGroupName:{serializedName:"targetResourceGroupName",type:{name:"String"}},targetVirtualNetwork:{serializedName:"targetVirtualNetwork",type:{name:"Composite",className:"SubResource"}},targetSubnet:{serializedName:"targetSubnet",type:{name:"Composite",className:"SubResource"}}}}},Ha={serializedName:"TopologyAssociation",type:{name:"Composite",className:"TopologyAssociation",modelProperties:{name:{serializedName:"name",type:{name:"String"}},resourceId:{serializedName:"resourceId",type:{name:"String"}},associationType:{serializedName:"associationType",type:{name:"String"}}}}},Ua={serializedName:"TopologyResource",type:{name:"Composite",className:"TopologyResource",modelProperties:{name:{serializedName:"name",type:{name:"String"}},id:{serializedName:"id",type:{name:"String"}},location:{serializedName:"location",type:{name:"String"}},associations:{serializedName:"associations",type:{name:"Sequence",element:{type:{name:"Composite",className:"TopologyAssociation"}}}}}}},Wa={serializedName:"Topology",type:{name:"Composite",className:"Topology",modelProperties:{id:{readOnly:!0,serializedName:"id",type:{name:"String"}},createdDateTime:{readOnly:!0,serializedName:"createdDateTime",type:{name:"DateTime"}},lastModified:{readOnly:!0,serializedName:"lastModified",type:{name:"DateTime"}},resources:{serializedName:"resources",type:{name:"Sequence",element:{type:{name:"Composite",className:"TopologyResource"}}}}}}},_a={serializedName:"VerificationIPFlowParameters",type:{name:"Composite",className:"VerificationIPFlowParameters",modelProperties:{targetResourceId:{required:!0,serializedName:"targetResourceId",type:{name:"String"}},direction:{required:!0,serializedName:"direction",type:{name:"String"}},protocol:{required:!0,serializedName:"protocol",type:{name:"String"}},localPort:{required:!0,serializedName:"localPort",type:{name:"String"}},remotePort:{required:!0,serializedName:"remotePort",type:{name:"String"}},localIPAddress:{required:!0,serializedName:"localIPAddress",type:{name:"String"}},remoteIPAddress:{required:!0,serializedName:"remoteIPAddress",type:{name:"String"}},targetNicResourceId:{serializedName:"targetNicResourceId",type:{name:"String"}}}}},Ka={serializedName:"VerificationIPFlowResult",type:{name:"Composite",className:"VerificationIPFlowResult",modelProperties:{access:{serializedName:"access",type:{name:"String"}},ruleName:{serializedName:"ruleName",type:{name:"String"}}}}},ja={serializedName:"NextHopParameters",type:{name:"Composite",className:"NextHopParameters",modelProperties:{targetResourceId:{required:!0,serializedName:"targetResourceId",type:{name:"String"}},sourceIPAddress:{required:!0,serializedName:"sourceIPAddress",type:{name:"String"}},destinationIPAddress:{required:!0,serializedName:"destinationIPAddress",type:{name:"String"}},targetNicResourceId:{serializedName:"targetNicResourceId",type:{name:"String"}}}}},Za={serializedName:"NextHopResult",type:{name:"Composite",className:"NextHopResult",modelProperties:{nextHopType:{serializedName:"nextHopType",type:{name:"String"}},nextHopIpAddress:{serializedName:"nextHopIpAddress",type:{name:"String"}},routeTableId:{serializedName:"routeTableId",type:{name:"String"}}}}},Qa={serializedName:"SecurityGroupViewParameters",type:{name:"Composite",className:"SecurityGroupViewParameters",modelProperties:{targetResourceId:{required:!0,serializedName:"targetResourceId",type:{name:"String"}}}}},Xa={serializedName:"NetworkInterfaceAssociation",type:{name:"Composite",className:"NetworkInterfaceAssociation",modelProperties:{id:{readOnly:!0,serializedName:"id",type:{name:"String"}},securityRules:{serializedName:"securityRules",type:{name:"Sequence",element:{type:{name:"Composite",className:"SecurityRule"}}}}}}},$a={serializedName:"SubnetAssociation",type:{name:"Composite",className:"SubnetAssociation",modelProperties:{id:{readOnly:!0,serializedName:"id",type:{name:"String"}},securityRules:{serializedName:"securityRules",type:{name:"Sequence",element:{type:{name:"Composite",className:"SecurityRule"}}}}}}},Ja={serializedName:"SecurityRuleAssociations",type:{name:"Composite",className:"SecurityRuleAssociations",modelProperties:{networkInterfaceAssociation:{serializedName:"networkInterfaceAssociation",type:{name:"Composite",className:"NetworkInterfaceAssociation"}},subnetAssociation:{serializedName:"subnetAssociation",type:{name:"Composite",className:"SubnetAssociation"}},defaultSecurityRules:{serializedName:"defaultSecurityRules",type:{name:"Sequence",element:{type:{name:"Composite",className:"SecurityRule"}}}},effectiveSecurityRules:{serializedName:"effectiveSecurityRules",type:{name:"Sequence",element:{type:{name:"Composite",className:"EffectiveNetworkSecurityRule"}}}}}}},Ya={serializedName:"SecurityGroupNetworkInterface",type:{name:"Composite",className:"SecurityGroupNetworkInterface",modelProperties:{id:{serializedName:"id",type:{name:"String"}},securityRuleAssociations:{serializedName:"securityRuleAssociations",type:{name:"Composite",className:"SecurityRuleAssociations"}}}}},eo={serializedName:"SecurityGroupViewResult",type:{name:"Composite",className:"SecurityGroupViewResult",modelProperties:{networkInterfaces:{serializedName:"networkInterfaces",type:{name:"Sequence",element:{type:{name:"Composite",className:"SecurityGroupNetworkInterface"}}}}}}},to={serializedName:"PacketCaptureStorageLocation",type:{name:"Composite",className:"PacketCaptureStorageLocation",modelProperties:{storageId:{serializedName:"storageId",type:{name:"String"}},storagePath:{serializedName:"storagePath",type:{name:"String"}},filePath:{serializedName:"filePath",type:{name:"String"}}}}},ro={serializedName:"PacketCaptureFilter",type:{name:"Composite",className:"PacketCaptureFilter",modelProperties:{protocol:{serializedName:"protocol",defaultValue:"Any",type:{name:"String"}},localIPAddress:{serializedName:"localIPAddress",type:{name:"String"}},remoteIPAddress:{serializedName:"remoteIPAddress",type:{name:"String"}},localPort:{serializedName:"localPort",type:{name:"String"}},remotePort:{serializedName:"remotePort",type:{name:"String"}}}}},io={serializedName:"PacketCapture",type:{name:"Composite",className:"PacketCapture",modelProperties:{target:{required:!0,serializedName:"properties.target",type:{name:"String"}},bytesToCapturePerPacket:{serializedName:"properties.bytesToCapturePerPacket",defaultValue:0,type:{name:"Number"}},totalBytesPerSession:{serializedName:"properties.totalBytesPerSession",defaultValue:1073741824,type:{name:"Number"}},timeLimitInSeconds:{serializedName:"properties.timeLimitInSeconds",defaultValue:18e3,type:{name:"Number"}},storageLocation:{required:!0,serializedName:"properties.storageLocation",type:{name:"Composite",className:"PacketCaptureStorageLocation"}},filters:{serializedName:"properties.filters",type:{name:"Sequence",element:{type:{name:"Composite",className:"PacketCaptureFilter"}}}}}}},ao={serializedName:"PacketCaptureResult",type:{name:"Composite",className:"PacketCaptureResult",modelProperties:{name:{readOnly:!0,serializedName:"name",type:{name:"String"}},id:{readOnly:!0,serializedName:"id",type:{name:"String"}},etag:{serializedName:"etag",defaultValue:"A unique read-only string that changes whenever the resource is updated.",type:{name:"String"}},target:{required:!0,serializedName:"properties.target",type:{name:"String"}},bytesToCapturePerPacket:{serializedName:"properties.bytesToCapturePerPacket",defaultValue:0,type:{name:"Number"}},totalBytesPerSession:{serializedName:"properties.totalBytesPerSession",defaultValue:1073741824,type:{name:"Number"}},timeLimitInSeconds:{serializedName:"properties.timeLimitInSeconds",defaultValue:18e3,type:{name:"Number"}},storageLocation:{required:!0,serializedName:"properties.storageLocation",type:{name:"Composite",className:"PacketCaptureStorageLocation"}},filters:{serializedName:"properties.filters",type:{name:"Sequence",element:{type:{name:"Composite",className:"PacketCaptureFilter"}}}},provisioningState:{serializedName:"properties.provisioningState",type:{name:"String"}}}}},oo={serializedName:"PacketCaptureQueryStatusResult",type:{name:"Composite",className:"PacketCaptureQueryStatusResult",modelProperties:{name:{serializedName:"name",type:{name:"String"}},id:{serializedName:"id",type:{name:"String"}},captureStartTime:{serializedName:"captureStartTime",type:{name:"DateTime"}},packetCaptureStatus:{serializedName:"packetCaptureStatus",type:{name:"String"}},stopReason:{serializedName:"stopReason",type:{name:"String"}},packetCaptureError:{serializedName:"packetCaptureError",type:{name:"Sequence",element:{type:{name:"String"}}}}}}},no={serializedName:"TroubleshootingParameters",type:{name:"Composite",className:"TroubleshootingParameters",modelProperties:{targetResourceId:{required:!0,serializedName:"targetResourceId",type:{name:"String"}},storageId:{required:!0,serializedName:"properties.storageId",type:{name:"String"}},storagePath:{required:!0,serializedName:"properties.storagePath",type:{name:"String"}}}}},so={serializedName:"QueryTroubleshootingParameters",type:{name:"Composite",className:"QueryTroubleshootingParameters",modelProperties:{targetResourceId:{required:!0,serializedName:"targetResourceId",type:{name:"String"}}}}},po={serializedName:"TroubleshootingRecommendedActions",type:{name:"Composite",className:"TroubleshootingRecommendedActions",modelProperties:{actionId:{serializedName:"actionId",type:{name:"String"}},actionText:{serializedName:"actionText",type:{name:"String"}},actionUri:{serializedName:"actionUri",type:{name:"String"}},actionUriText:{serializedName:"actionUriText",type:{name:"String"}}}}},uo={serializedName:"TroubleshootingDetails",type:{name:"Composite",className:"TroubleshootingDetails",modelProperties:{id:{serializedName:"id",type:{name:"String"}},reasonType:{serializedName:"reasonType",type:{name:"String"}},summary:{serializedName:"summary",type:{name:"String"}},detail:{serializedName:"detail",type:{name:"String"}},recommendedActions:{serializedName:"recommendedActions",type:{name:"Sequence",element:{type:{name:"Composite",className:"TroubleshootingRecommendedActions"}}}}}}},lo={serializedName:"TroubleshootingResult",type:{name:"Composite",className:"TroubleshootingResult",modelProperties:{startTime:{serializedName:"startTime",type:{name:"DateTime"}},endTime:{serializedName:"endTime",type:{name:"DateTime"}},code:{serializedName:"code",type:{name:"String"}},results:{serializedName:"results",type:{name:"Sequence",element:{type:{name:"Composite",className:"TroubleshootingDetails"}}}}}}},co={serializedName:"RetentionPolicyParameters",type:{name:"Composite",className:"RetentionPolicyParameters",modelProperties:{days:{serializedName:"days",defaultValue:0,type:{name:"Number"}},enabled:{serializedName:"enabled",defaultValue:!1,type:{name:"Boolean"}}}}},mo={serializedName:"FlowLogStatusParameters",type:{name:"Composite",className:"FlowLogStatusParameters",modelProperties:{targetResourceId:{required:!0,serializedName:"targetResourceId",type:{name:"String"}}}}},yo={serializedName:"TrafficAnalyticsConfigurationProperties",type:{name:"Composite",className:"TrafficAnalyticsConfigurationProperties",modelProperties:{enabled:{required:!0,serializedName:"enabled",type:{name:"Boolean"}},workspaceId:{required:!0,serializedName:"workspaceId",type:{name:"String"}},workspaceRegion:{required:!0,serializedName:"workspaceRegion",type:{name:"String"}},workspaceResourceId:{required:!0,serializedName:"workspaceResourceId",type:{name:"String"}}}}},Po={serializedName:"TrafficAnalyticsProperties",type:{name:"Composite",className:"TrafficAnalyticsProperties",modelProperties:{networkWatcherFlowAnalyticsConfiguration:{required:!0,serializedName:"networkWatcherFlowAnalyticsConfiguration",type:{name:"Composite",className:"TrafficAnalyticsConfigurationProperties"}}}}},No={serializedName:"FlowLogInformation",type:{name:"Composite",className:"FlowLogInformation",modelProperties:{targetResourceId:{required:!0,serializedName:"targetResourceId",type:{name:"String"}},storageId:{required:!0,serializedName:"properties.storageId",type:{name:"String"}},enabled:{required:!0,serializedName:"properties.enabled",type:{name:"Boolean"}},retentionPolicy:{serializedName:"properties.retentionPolicy",type:{name:"Composite",className:"RetentionPolicyParameters"}},flowAnalyticsConfiguration:{serializedName:"flowAnalyticsConfiguration",type:{name:"Composite",className:"TrafficAnalyticsProperties"}}}}},Co={serializedName:"ConnectivitySource",type:{name:"Composite",className:"ConnectivitySource",modelProperties:{resourceId:{required:!0,serializedName:"resourceId",type:{name:"String"}},port:{serializedName:"port",type:{name:"Number"}}}}},wo={serializedName:"ConnectivityDestination",type:{name:"Composite",className:"ConnectivityDestination",modelProperties:{resourceId:{serializedName:"resourceId",type:{name:"String"}},address:{serializedName:"address",type:{name:"String"}},port:{serializedName:"port",type:{name:"Number"}}}}},Ro={serializedName:"HTTPHeader",type:{name:"Composite",className:"HTTPHeader",modelProperties:{name:{serializedName:"name",type:{name:"String"}},value:{serializedName:"value",type:{name:"String"}}}}},fo={serializedName:"HTTPConfiguration",type:{name:"Composite",className:"HTTPConfiguration",modelProperties:{method:{serializedName:"method",type:{name:"String"}},headers:{serializedName:"headers",type:{name:"Sequence",element:{type:{name:"Composite",className:"HTTPHeader"}}}},validStatusCodes:{serializedName:"validStatusCodes",type:{name:"Sequence",element:{type:{name:"Number"}}}}}}},So={serializedName:"ProtocolConfiguration",type:{name:"Composite",className:"ProtocolConfiguration",modelProperties:{hTTPConfiguration:{serializedName:"HTTPConfiguration",type:{name:"Composite",className:"HTTPConfiguration"}}}}},go={serializedName:"ConnectivityParameters",type:{name:"Composite",className:"ConnectivityParameters",modelProperties:{source:{required:!0,serializedName:"source",type:{name:"Composite",className:"ConnectivitySource"}},destination:{required:!0,serializedName:"destination",type:{name:"Composite",className:"ConnectivityDestination"}},protocol:{serializedName:"protocol",type:{name:"String"}},protocolConfiguration:{serializedName:"protocolConfiguration",type:{name:"Composite",className:"ProtocolConfiguration"}}}}},Ao={serializedName:"ConnectivityIssue",type:{name:"Composite",className:"ConnectivityIssue",modelProperties:{origin:{readOnly:!0,serializedName:"origin",type:{name:"String"}},severity:{readOnly:!0,serializedName:"severity",type:{name:"String"}},type:{readOnly:!0,serializedName:"type",type:{name:"String"}},context:{readOnly:!0,serializedName:"context",type:{name:"Sequence",element:{type:{name:"Dictionary",value:{type:{name:"String"}}}}}}}}},Go={serializedName:"ConnectivityHop",type:{name:"Composite",className:"ConnectivityHop",modelProperties:{type:{readOnly:!0,serializedName:"type",type:{name:"String"}},id:{readOnly:!0,serializedName:"id",type:{name:"String"}},address:{readOnly:!0,serializedName:"address",type:{name:"String"}},resourceId:{readOnly:!0,serializedName:"resourceId",type:{name:"String"}},nextHopIds:{readOnly:!0,serializedName:"nextHopIds",type:{name:"Sequence",element:{type:{name:"String"}}}},issues:{readOnly:!0,serializedName:"issues",type:{name:"Sequence",element:{type:{name:"Composite",className:"ConnectivityIssue"}}}}}}},bo={serializedName:"ConnectivityInformation",type:{name:"Composite",className:"ConnectivityInformation",modelProperties:{hops:{readOnly:!0,serializedName:"hops",type:{name:"Sequence",element:{type:{name:"Composite",className:"ConnectivityHop"}}}},connectionStatus:{readOnly:!0,serializedName:"connectionStatus",type:{name:"String"}},avgLatencyInMs:{readOnly:!0,serializedName:"avgLatencyInMs",type:{name:"Number"}},minLatencyInMs:{readOnly:!0,serializedName:"minLatencyInMs",type:{name:"Number"}},maxLatencyInMs:{readOnly:!0,serializedName:"maxLatencyInMs",type:{name:"Number"}},probesSent:{readOnly:!0,serializedName:"probesSent",type:{name:"Number"}},probesFailed:{readOnly:!0,serializedName:"probesFailed",type:{name:"Number"}}}}},ho={serializedName:"AzureReachabilityReportLocation",type:{name:"Composite",className:"AzureReachabilityReportLocation",modelProperties:{country:{required:!0,serializedName:"country",type:{name:"String"}},state:{serializedName:"state",type:{name:"String"}},city:{serializedName:"city",type:{name:"String"}}}}},ko={serializedName:"AzureReachabilityReportParameters",type:{name:"Composite",className:"AzureReachabilityReportParameters",modelProperties:{providerLocation:{required:!0,serializedName:"providerLocation",type:{name:"Composite",className:"AzureReachabilityReportLocation"}},providers:{serializedName:"providers",type:{name:"Sequence",element:{type:{name:"String"}}}},azureLocations:{serializedName:"azureLocations",type:{name:"Sequence",element:{type:{name:"String"}}}},startTime:{required:!0,serializedName:"startTime",type:{name:"DateTime"}},endTime:{required:!0,serializedName:"endTime",type:{name:"DateTime"}}}}},zo={serializedName:"AzureReachabilityReportLatencyInfo",type:{name:"Composite",className:"AzureReachabilityReportLatencyInfo",modelProperties:{timeStamp:{serializedName:"timeStamp",type:{name:"DateTime"}},score:{serializedName:"score",constraints:{InclusiveMaximum:100,InclusiveMinimum:1},type:{name:"Number"}}}}},vo={serializedName:"AzureReachabilityReportItem",type:{name:"Composite",className:"AzureReachabilityReportItem",modelProperties:{provider:{serializedName:"provider",type:{name:"String"}},azureLocation:{serializedName:"azureLocation",type:{name:"String"}},latencies:{serializedName:"latencies",type:{name:"Sequence",element:{type:{name:"Composite",className:"AzureReachabilityReportLatencyInfo"}}}}}}},Io={serializedName:"AzureReachabilityReport",type:{name:"Composite",className:"AzureReachabilityReport",modelProperties:{aggregationLevel:{required:!0,serializedName:"aggregationLevel",type:{name:"String"}},providerLocation:{required:!0,serializedName:"providerLocation",type:{name:"Composite",className:"AzureReachabilityReportLocation"}},reachabilityReport:{required:!0,serializedName:"reachabilityReport",type:{name:"Sequence",element:{type:{name:"Composite",className:"AzureReachabilityReportItem"}}}}}}},Eo={serializedName:"AvailableProvidersListParameters",type:{name:"Composite",className:"AvailableProvidersListParameters",modelProperties:{azureLocations:{serializedName:"azureLocations",type:{name:"Sequence",element:{type:{name:"String"}}}},country:{serializedName:"country",type:{name:"String"}},state:{serializedName:"state",type:{name:"String"}},city:{serializedName:"city",type:{name:"String"}}}}},Mo={serializedName:"AvailableProvidersListCity",type:{name:"Composite",className:"AvailableProvidersListCity",modelProperties:{cityName:{serializedName:"cityName",type:{name:"String"}},providers:{serializedName:"providers",type:{name:"Sequence",element:{type:{name:"String"}}}}}}},Vo={serializedName:"AvailableProvidersListState",type:{name:"Composite",className:"AvailableProvidersListState",modelProperties:{stateName:{serializedName:"stateName",type:{name:"String"}},providers:{serializedName:"providers",type:{name:"Sequence",element:{type:{name:"String"}}}},cities:{serializedName:"cities",type:{name:"Sequence",element:{type:{name:"Composite",className:"AvailableProvidersListCity"}}}}}}},xo={serializedName:"AvailableProvidersListCountry",type:{name:"Composite",className:"AvailableProvidersListCountry",modelProperties:{countryName:{serializedName:"countryName",type:{name:"String"}},providers:{serializedName:"providers",type:{name:"Sequence",element:{type:{name:"String"}}}},states:{serializedName:"states",type:{name:"Sequence",element:{type:{name:"Composite",className:"AvailableProvidersListState"}}}}}}},Fo={serializedName:"AvailableProvidersList",type:{name:"Composite",className:"AvailableProvidersList",modelProperties:{countries:{required:!0,serializedName:"countries",type:{name:"Sequence",element:{type:{name:"Composite",className:"AvailableProvidersListCountry"}}}}}}},qo={serializedName:"ConnectionMonitorSource",type:{name:"Composite",className:"ConnectionMonitorSource",modelProperties:{resourceId:{required:!0,serializedName:"resourceId",type:{name:"String"}},port:{serializedName:"port",type:{name:"Number"}}}}},To={serializedName:"ConnectionMonitorDestination",type:{name:"Composite",className:"ConnectionMonitorDestination",modelProperties:{resourceId:{serializedName:"resourceId",type:{name:"String"}},address:{serializedName:"address",type:{name:"String"}},port:{serializedName:"port",type:{name:"Number"}}}}},Lo={serializedName:"ConnectionMonitor",type:{name:"Composite",className:"ConnectionMonitor",modelProperties:{location:{serializedName:"location",type:{name:"String"}},tags:{serializedName:"tags",type:{name:"Dictionary",value:{type:{name:"String"}}}},source:{required:!0,serializedName:"properties.source",type:{name:"Composite",className:"ConnectionMonitorSource"}},destination:{required:!0,serializedName:"properties.destination",type:{name:"Composite",className:"ConnectionMonitorDestination"}},autoStart:{serializedName:"properties.autoStart",defaultValue:!0,type:{name:"Boolean"}},monitoringIntervalInSeconds:{serializedName:"properties.monitoringIntervalInSeconds",defaultValue:60,type:{name:"Number"}}}}},Bo={serializedName:"ConnectionMonitorResult",type:{name:"Composite",className:"ConnectionMonitorResult",modelProperties:{name:{readOnly:!0,serializedName:"name",type:{name:"String"}},id:{readOnly:!0,serializedName:"id",type:{name:"String"}},etag:{serializedName:"etag",defaultValue:"A unique read-only string that changes whenever the resource is updated.",type:{name:"String"}},type:{readOnly:!0,serializedName:"type",type:{name:"String"}},location:{serializedName:"location",type:{name:"String"}},tags:{serializedName:"tags",type:{name:"Dictionary",value:{type:{name:"String"}}}},source:{required:!0,serializedName:"properties.source",type:{name:"Composite",className:"ConnectionMonitorSource"}},destination:{required:!0,serializedName:"properties.destination",type:{name:"Composite",className:"ConnectionMonitorDestination"}},autoStart:{serializedName:"properties.autoStart",defaultValue:!0,type:{name:"Boolean"}},monitoringIntervalInSeconds:{serializedName:"properties.monitoringIntervalInSeconds",defaultValue:60,type:{name:"Number"}},provisioningState:{serializedName:"properties.provisioningState",type:{name:"String"}},startTime:{serializedName:"properties.startTime",type:{name:"DateTime"}},monitoringStatus:{serializedName:"properties.monitoringStatus",type:{name:"String"}}}}},Oo={serializedName:"ConnectionStateSnapshot",type:{name:"Composite",className:"ConnectionStateSnapshot",modelProperties:{connectionState:{serializedName:"connectionState",type:{name:"String"}},startTime:{serializedName:"startTime",type:{name:"DateTime"}},endTime:{serializedName:"endTime",type:{name:"DateTime"}},evaluationState:{serializedName:"evaluationState",type:{name:"String"}},avgLatencyInMs:{serializedName:"avgLatencyInMs",type:{name:"Number"}},minLatencyInMs:{serializedName:"minLatencyInMs",type:{name:"Number"}},maxLatencyInMs:{serializedName:"maxLatencyInMs",type:{name:"Number"}},probesSent:{serializedName:"probesSent",type:{name:"Number"}},probesFailed:{serializedName:"probesFailed",type:{name:"Number"}},hops:{readOnly:!0,serializedName:"hops",type:{name:"Sequence",element:{type:{name:"Composite",className:"ConnectivityHop"}}}}}}},Do={serializedName:"ConnectionMonitorQueryResult",type:{name:"Composite",className:"ConnectionMonitorQueryResult",modelProperties:{sourceStatus:{serializedName:"sourceStatus",type:{name:"String"}},states:{serializedName:"states",type:{name:"Sequence",element:{type:{name:"Composite",className:"ConnectionStateSnapshot"}}}}}}},Ho={serializedName:"TrafficQuery",type:{name:"Composite",className:"TrafficQuery",modelProperties:{direction:{required:!0,serializedName:"direction",type:{name:"String"}},protocol:{required:!0,serializedName:"protocol",type:{name:"String"}},source:{required:!0,serializedName:"source",type:{name:"String"}},destination:{required:!0,serializedName:"destination",type:{name:"String"}},destinationPort:{required:!0,serializedName:"destinationPort",type:{name:"String"}}}}},Uo={serializedName:"NetworkConfigurationDiagnosticParameters",type:{name:"Composite",className:"NetworkConfigurationDiagnosticParameters",modelProperties:{targetResourceId:{required:!0,serializedName:"targetResourceId",type:{name:"String"}},queries:{required:!0,serializedName:"queries",type:{name:"Sequence",element:{type:{name:"Composite",className:"TrafficQuery"}}}}}}},Wo={serializedName:"MatchedRule",type:{name:"Composite",className:"MatchedRule",modelProperties:{ruleName:{serializedName:"ruleName",type:{name:"String"}},action:{serializedName:"action",type:{name:"String"}}}}},_o={serializedName:"NetworkSecurityRulesEvaluationResult",type:{name:"Composite",className:"NetworkSecurityRulesEvaluationResult",modelProperties:{name:{serializedName:"name",type:{name:"String"}},protocolMatched:{serializedName:"protocolMatched",type:{name:"Boolean"}},sourceMatched:{serializedName:"sourceMatched",type:{name:"Boolean"}},sourcePortMatched:{serializedName:"sourcePortMatched",type:{name:"Boolean"}},destinationMatched:{serializedName:"destinationMatched",type:{name:"Boolean"}},destinationPortMatched:{serializedName:"destinationPortMatched",type:{name:"Boolean"}}}}},Ko={serializedName:"EvaluatedNetworkSecurityGroup",type:{name:"Composite",className:"EvaluatedNetworkSecurityGroup",modelProperties:{networkSecurityGroupId:{serializedName:"networkSecurityGroupId",type:{name:"String"}},matchedRule:{serializedName:"matchedRule",type:{name:"Composite",className:"MatchedRule"}},rulesEvaluationResult:{readOnly:!0,serializedName:"rulesEvaluationResult",type:{name:"Sequence",element:{type:{name:"Composite",className:"NetworkSecurityRulesEvaluationResult"}}}}}}},jo={serializedName:"NetworkSecurityGroupResult",type:{name:"Composite",className:"NetworkSecurityGroupResult",modelProperties:{securityRuleAccessResult:{serializedName:"securityRuleAccessResult",type:{name:"String"}},evaluatedNetworkSecurityGroups:{readOnly:!0,serializedName:"evaluatedNetworkSecurityGroups",type:{name:"Sequence",element:{type:{name:"Composite",className:"EvaluatedNetworkSecurityGroup"}}}}}}},Zo={serializedName:"NetworkConfigurationDiagnosticResult",type:{name:"Composite",className:"NetworkConfigurationDiagnosticResult",modelProperties:{trafficQuery:{serializedName:"trafficQuery",type:{name:"Composite",className:"TrafficQuery"}},networkSecurityGroupResult:{serializedName:"networkSecurityGroupResult",type:{name:"Composite",className:"NetworkSecurityGroupResult"}}}}},Qo={serializedName:"NetworkConfigurationDiagnosticResponse",type:{name:"Composite",className:"NetworkConfigurationDiagnosticResponse",modelProperties:{results:{readOnly:!0,serializedName:"results",type:{name:"Sequence",element:{type:{name:"Composite",className:"NetworkConfigurationDiagnosticResult"}}}}}}},Xo={serializedName:"Operation_display",type:{name:"Composite",className:"OperationDisplay",modelProperties:{provider:{serializedName:"provider",type:{name:"String"}},resource:{serializedName:"resource",type:{name:"String"}},operation:{serializedName:"operation",type:{name:"String"}},description:{serializedName:"description",type:{name:"String"}}}}},$o={serializedName:"Availability",type:{name:"Composite",className:"Availability",modelProperties:{timeGrain:{serializedName:"timeGrain",type:{name:"String"}},retention:{serializedName:"retention",type:{name:"String"}},blobDuration:{serializedName:"blobDuration",type:{name:"String"}}}}},Jo={serializedName:"Dimension",type:{name:"Composite",className:"Dimension",modelProperties:{name:{serializedName:"name",type:{name:"String"}},displayName:{serializedName:"displayName",type:{name:"String"}},internalName:{serializedName:"internalName",type:{name:"String"}}}}},Yo={serializedName:"MetricSpecification",type:{name:"Composite",className:"MetricSpecification",modelProperties:{name:{serializedName:"name",type:{name:"String"}},displayName:{serializedName:"displayName",type:{name:"String"}},displayDescription:{serializedName:"displayDescription",type:{name:"String"}},unit:{serializedName:"unit",type:{name:"String"}},aggregationType:{serializedName:"aggregationType",type:{name:"String"}},availabilities:{serializedName:"availabilities",type:{name:"Sequence",element:{type:{name:"Composite",className:"Availability"}}}},enableRegionalMdmAccount:{serializedName:"enableRegionalMdmAccount",type:{name:"Boolean"}},fillGapWithZero:{serializedName:"fillGapWithZero",type:{name:"Boolean"}},metricFilterPattern:{serializedName:"metricFilterPattern",type:{name:"String"}},dimensions:{serializedName:"dimensions",type:{name:"Sequence",element:{type:{name:"Composite",className:"Dimension"}}}},isInternal:{serializedName:"isInternal",type:{name:"Boolean"}},sourceMdmAccount:{serializedName:"sourceMdmAccount",type:{name:"String"}},sourceMdmNamespace:{serializedName:"sourceMdmNamespace",type:{name:"String"}},resourceIdDimensionNameOverride:{serializedName:"resourceIdDimensionNameOverride",type:{name:"String"}}}}},en={serializedName:"LogSpecification",type:{name:"Composite",className:"LogSpecification",modelProperties:{name:{serializedName:"name",type:{name:"String"}},displayName:{serializedName:"displayName",type:{name:"String"}},blobDuration:{serializedName:"blobDuration",type:{name:"String"}}}}},tn={serializedName:"OperationPropertiesFormat_serviceSpecification",type:{name:"Composite",className:"OperationPropertiesFormatServiceSpecification",modelProperties:{metricSpecifications:{serializedName:"metricSpecifications",type:{name:"Sequence",element:{type:{name:"Composite",className:"MetricSpecification"}}}},logSpecifications:{serializedName:"logSpecifications",type:{name:"Sequence",element:{type:{name:"Composite",className:"LogSpecification"}}}}}}},rn={serializedName:"Operation",type:{name:"Composite",className:"Operation",modelProperties:{name:{serializedName:"name",type:{name:"String"}},display:{serializedName:"display",type:{name:"Composite",className:"OperationDisplay"}},origin:{serializedName:"origin",type:{name:"String"}},serviceSpecification:{serializedName:"properties.serviceSpecification",type:{name:"Composite",className:"OperationPropertiesFormatServiceSpecification"}}}}},an={serializedName:"PublicIPPrefixSku",type:{name:"Composite",className:"PublicIPPrefixSku",modelProperties:{name:{serializedName:"name",type:{name:"String"}}}}},on={serializedName:"ReferencedPublicIpAddress",type:{name:"Composite",className:"ReferencedPublicIpAddress",modelProperties:{id:{serializedName:"id",type:{name:"String"}}}}},nn={serializedName:"PublicIPPrefix",type:{name:"Composite",className:"PublicIPPrefix",modelProperties:cr({},Cr.type.modelProperties,{sku:{serializedName:"sku",type:{name:"Composite",className:"PublicIPPrefixSku"}},publicIPAddressVersion:{serializedName:"properties.publicIPAddressVersion",type:{name:"String"}},ipTags:{serializedName:"properties.ipTags",type:{name:"Sequence",element:{type:{name:"Composite",className:"IpTag"}}}},prefixLength:{serializedName:"properties.prefixLength",type:{name:"Number"}},ipPrefix:{serializedName:"properties.ipPrefix",type:{name:"String"}},publicIPAddresses:{serializedName:"properties.publicIPAddresses",type:{name:"Sequence",element:{type:{name:"Composite",className:"ReferencedPublicIpAddress"}}}},resourceGuid:{serializedName:"properties.resourceGuid",type:{name:"String"}},provisioningState:{serializedName:"properties.provisioningState",type:{name:"String"}},etag:{serializedName:"etag",type:{name:"String"}},zones:{serializedName:"zones",type:{name:"Sequence",element:{type:{name:"String"}}}}})}},sn={serializedName:"PatchRouteFilterRule",type:{name:"Composite",className:"PatchRouteFilterRule",modelProperties:cr({},Pr.type.modelProperties,{access:{required:!0,serializedName:"properties.access",type:{name:"String"}},routeFilterRuleType:{required:!0,isConstant:!0,serializedName:"properties.routeFilterRuleType",defaultValue:"Community",type:{name:"String"}},communities:{required:!0,serializedName:"properties.communities",type:{name:"Sequence",element:{type:{name:"String"}}}},provisioningState:{readOnly:!0,serializedName:"properties.provisioningState",type:{name:"String"}},name:{readOnly:!0,serializedName:"name",type:{name:"String"}},etag:{readOnly:!0,serializedName:"etag",type:{name:"String"}}})}},pn={serializedName:"PatchRouteFilter",type:{name:"Composite",className:"PatchRouteFilter",modelProperties:cr({},Pr.type.modelProperties,{rules:{serializedName:"properties.rules",type:{name:"Sequence",element:{type:{name:"Composite",className:"RouteFilterRule"}}}},peerings:{serializedName:"properties.peerings",type:{name:"Sequence",element:{type:{name:"Composite",className:"ExpressRouteCircuitPeering"}}}},provisioningState:{readOnly:!0,serializedName:"properties.provisioningState",type:{name:"String"}},name:{readOnly:!0,serializedName:"name",type:{name:"String"}},etag:{readOnly:!0,serializedName:"etag",type:{name:"String"}},type:{readOnly:!0,serializedName:"type",type:{name:"String"}},tags:{serializedName:"tags",type:{name:"Dictionary",value:{type:{name:"String"}}}}})}},un={serializedName:"BGPCommunity",type:{name:"Composite",className:"BGPCommunity",modelProperties:{serviceSupportedRegion:{serializedName:"serviceSupportedRegion",type:{name:"String"}},communityName:{serializedName:"communityName",type:{name:"String"}},communityValue:{serializedName:"communityValue",type:{name:"String"}},communityPrefixes:{serializedName:"communityPrefixes",type:{name:"Sequence",element:{type:{name:"String"}}}},isAuthorizedToUse:{serializedName:"isAuthorizedToUse",type:{name:"Boolean"}},serviceGroup:{serializedName:"serviceGroup",type:{name:"String"}}}}},ln={serializedName:"BgpServiceCommunity",type:{name:"Composite",className:"BgpServiceCommunity",modelProperties:cr({},Cr.type.modelProperties,{serviceName:{serializedName:"properties.serviceName",type:{name:"String"}},bgpCommunities:{serializedName:"properties.bgpCommunities",type:{name:"Sequence",element:{type:{name:"Composite",className:"BGPCommunity"}}}}})}},cn={serializedName:"UsageName",type:{name:"Composite",className:"UsageName",modelProperties:{value:{serializedName:"value",type:{name:"String"}},localizedValue:{serializedName:"localizedValue",type:{name:"String"}}}}},dn={serializedName:"Usage",type:{name:"Composite",className:"Usage",modelProperties:{id:{readOnly:!0,serializedName:"id",type:{name:"String"}},unit:{required:!0,isConstant:!0,serializedName:"unit",defaultValue:"Count",type:{name:"String"}},currentValue:{required:!0,serializedName:"currentValue",type:{name:"Number"}},limit:{required:!0,serializedName:"limit",type:{name:"Number"}},name:{required:!0,serializedName:"name",type:{name:"Composite",className:"UsageName"}}}}},mn={serializedName:"AddressSpace",type:{name:"Composite",className:"AddressSpace",modelProperties:{addressPrefixes:{serializedName:"addressPrefixes",type:{name:"Sequence",element:{type:{name:"String"}}}}}}},yn={serializedName:"VirtualNetworkPeering",type:{name:"Composite",className:"VirtualNetworkPeering",modelProperties:cr({},Pr.type.modelProperties,{allowVirtualNetworkAccess:{serializedName:"properties.allowVirtualNetworkAccess",type:{name:"Boolean"}},allowForwardedTraffic:{serializedName:"properties.allowForwardedTraffic",type:{name:"Boolean"}},allowGatewayTransit:{serializedName:"properties.allowGatewayTransit",type:{name:"Boolean"}},useRemoteGateways:{serializedName:"properties.useRemoteGateways",type:{name:"Boolean"}},remoteVirtualNetwork:{serializedName:"properties.remoteVirtualNetwork",type:{name:"Composite",className:"SubResource"}},remoteAddressSpace:{serializedName:"properties.remoteAddressSpace",type:{name:"Composite",className:"AddressSpace"}},peeringState:{serializedName:"properties.peeringState",type:{name:"String"}},provisioningState:{serializedName:"properties.provisioningState",type:{name:"String"}},name:{serializedName:"name",type:{name:"String"}},etag:{serializedName:"etag",type:{name:"String"}}})}},Pn={serializedName:"DhcpOptions",type:{name:"Composite",className:"DhcpOptions",modelProperties:{dnsServers:{serializedName:"dnsServers",type:{name:"Sequence",element:{type:{name:"String"}}}}}}},Nn={serializedName:"VirtualNetwork",type:{name:"Composite",className:"VirtualNetwork",modelProperties:cr({},Cr.type.modelProperties,{addressSpace:{serializedName:"properties.addressSpace",type:{name:"Composite",className:"AddressSpace"}},dhcpOptions:{serializedName:"properties.dhcpOptions",type:{name:"Composite",className:"DhcpOptions"}},subnets:{serializedName:"properties.subnets",type:{name:"Sequence",element:{type:{name:"Composite",className:"Subnet"}}}},virtualNetworkPeerings:{serializedName:"properties.virtualNetworkPeerings",type:{name:"Sequence",element:{type:{name:"Composite",className:"VirtualNetworkPeering"}}}},resourceGuid:{serializedName:"properties.resourceGuid",type:{name:"String"}},provisioningState:{serializedName:"properties.provisioningState",type:{name:"String"}},enableDdosProtection:{serializedName:"properties.enableDdosProtection",defaultValue:!1,type:{name:"Boolean"}},enableVmProtection:{serializedName:"properties.enableVmProtection",defaultValue:!1,type:{name:"Boolean"}},ddosProtectionPlan:{serializedName:"properties.ddosProtectionPlan",type:{name:"Composite",className:"SubResource"}},etag:{serializedName:"etag",type:{name:"String"}}})}},Cn={serializedName:"IPAddressAvailabilityResult",type:{name:"Composite",className:"IPAddressAvailabilityResult",modelProperties:{available:{serializedName:"available",type:{name:"Boolean"}},availableIPAddresses:{serializedName:"availableIPAddresses",type:{name:"Sequence",element:{type:{name:"String"}}}}}}},wn={serializedName:"VirtualNetworkUsageName",type:{name:"Composite",className:"VirtualNetworkUsageName",modelProperties:{localizedValue:{readOnly:!0,serializedName:"localizedValue",type:{name:"String"}},value:{readOnly:!0,serializedName:"value",type:{name:"String"}}}}},Rn={serializedName:"VirtualNetworkUsage",type:{name:"Composite",className:"VirtualNetworkUsage",modelProperties:{currentValue:{readOnly:!0,serializedName:"currentValue",type:{name:"Number"}},id:{readOnly:!0,serializedName:"id",type:{name:"String"}},limit:{readOnly:!0,serializedName:"limit",type:{name:"Number"}},name:{readOnly:!0,serializedName:"name",type:{name:"Composite",className:"VirtualNetworkUsageName"}},unit:{readOnly:!0,serializedName:"unit",type:{name:"String"}}}}},fn={serializedName:"VirtualNetworkGatewayIPConfiguration",type:{name:"Composite",className:"VirtualNetworkGatewayIPConfiguration",modelProperties:cr({},Pr.type.modelProperties,{privateIPAllocationMethod:{serializedName:"properties.privateIPAllocationMethod",type:{name:"String"}},subnet:{serializedName:"properties.subnet",type:{name:"Composite",className:"SubResource"}},publicIPAddress:{serializedName:"properties.publicIPAddress",type:{name:"Composite",className:"SubResource"}},provisioningState:{readOnly:!0,serializedName:"properties.provisioningState",type:{name:"String"}},name:{serializedName:"name",type:{name:"String"}},etag:{serializedName:"etag",type:{name:"String"}}})}},Sn={serializedName:"VirtualNetworkGatewaySku",type:{name:"Composite",className:"VirtualNetworkGatewaySku",modelProperties:{name:{serializedName:"name",type:{name:"String"}},tier:{serializedName:"tier",type:{name:"String"}},capacity:{serializedName:"capacity",type:{name:"Number"}}}}},gn={serializedName:"VpnClientRootCertificate",type:{name:"Composite",className:"VpnClientRootCertificate",modelProperties:cr({},Pr.type.modelProperties,{publicCertData:{required:!0,serializedName:"properties.publicCertData",type:{name:"String"}},provisioningState:{readOnly:!0,serializedName:"properties.provisioningState",type:{name:"String"}},name:{serializedName:"name",type:{name:"String"}},etag:{serializedName:"etag",type:{name:"String"}}})}},An={serializedName:"VpnClientRevokedCertificate",type:{name:"Composite",className:"VpnClientRevokedCertificate",modelProperties:cr({},Pr.type.modelProperties,{thumbprint:{serializedName:"properties.thumbprint",type:{name:"String"}},provisioningState:{readOnly:!0,serializedName:"properties.provisioningState",type:{name:"String"}},name:{serializedName:"name",type:{name:"String"}},etag:{serializedName:"etag",type:{name:"String"}}})}},Gn={serializedName:"IpsecPolicy",type:{name:"Composite",className:"IpsecPolicy",modelProperties:{saLifeTimeSeconds:{required:!0,serializedName:"saLifeTimeSeconds",type:{name:"Number"}},saDataSizeKilobytes:{required:!0,serializedName:"saDataSizeKilobytes",type:{name:"Number"}},ipsecEncryption:{required:!0,serializedName:"ipsecEncryption",type:{name:"String"}},ipsecIntegrity:{required:!0,serializedName:"ipsecIntegrity",type:{name:"String"}},ikeEncryption:{required:!0,serializedName:"ikeEncryption",type:{name:"String"}},ikeIntegrity:{required:!0,serializedName:"ikeIntegrity",type:{name:"String"}},dhGroup:{required:!0,serializedName:"dhGroup",type:{name:"String"}},pfsGroup:{required:!0,serializedName:"pfsGroup",type:{name:"String"}}}}},bn={serializedName:"VpnClientConfiguration",type:{name:"Composite",className:"VpnClientConfiguration",modelProperties:{vpnClientAddressPool:{serializedName:"vpnClientAddressPool",type:{name:"Composite",className:"AddressSpace"}},vpnClientRootCertificates:{serializedName:"vpnClientRootCertificates",type:{name:"Sequence",element:{type:{name:"Composite",className:"VpnClientRootCertificate"}}}},vpnClientRevokedCertificates:{serializedName:"vpnClientRevokedCertificates",type:{name:"Sequence",element:{type:{name:"Composite",className:"VpnClientRevokedCertificate"}}}},vpnClientProtocols:{serializedName:"vpnClientProtocols",type:{name:"Sequence",element:{type:{name:"String"}}}},vpnClientIpsecPolicies:{serializedName:"vpnClientIpsecPolicies",type:{name:"Sequence",element:{type:{name:"Composite",className:"IpsecPolicy"}}}},radiusServerAddress:{serializedName:"radiusServerAddress",type:{name:"String"}},radiusServerSecret:{serializedName:"radiusServerSecret",type:{name:"String"}}}}},hn={serializedName:"BgpSettings",type:{name:"Composite",className:"BgpSettings",modelProperties:{asn:{serializedName:"asn",type:{name:"Number"}},bgpPeeringAddress:{serializedName:"bgpPeeringAddress",type:{name:"String"}},peerWeight:{serializedName:"peerWeight",type:{name:"Number"}}}}},kn={serializedName:"BgpPeerStatus",type:{name:"Composite",className:"BgpPeerStatus",modelProperties:{localAddress:{readOnly:!0,serializedName:"localAddress",type:{name:"String"}},neighbor:{readOnly:!0,serializedName:"neighbor",type:{name:"String"}},asn:{readOnly:!0,serializedName:"asn",type:{name:"Number"}},state:{readOnly:!0,serializedName:"state",type:{name:"String"}},connectedDuration:{readOnly:!0,serializedName:"connectedDuration",type:{name:"String"}},routesReceived:{readOnly:!0,serializedName:"routesReceived",type:{name:"Number"}},messagesSent:{readOnly:!0,serializedName:"messagesSent",type:{name:"Number"}},messagesReceived:{readOnly:!0,serializedName:"messagesReceived",type:{name:"Number"}}}}},zn={serializedName:"GatewayRoute",type:{name:"Composite",className:"GatewayRoute",modelProperties:{localAddress:{readOnly:!0,serializedName:"localAddress",type:{name:"String"}},network:{readOnly:!0,serializedName:"network",type:{name:"String"}},nextHop:{readOnly:!0,serializedName:"nextHop",type:{name:"String"}},sourcePeer:{readOnly:!0,serializedName:"sourcePeer",type:{name:"String"}},origin:{readOnly:!0,serializedName:"origin",type:{name:"String"}},asPath:{readOnly:!0,serializedName:"asPath",type:{name:"String"}},weight:{readOnly:!0,serializedName:"weight",type:{name:"Number"}}}}},vn={serializedName:"VirtualNetworkGateway",type:{name:"Composite",className:"VirtualNetworkGateway",modelProperties:cr({},Cr.type.modelProperties,{ipConfigurations:{serializedName:"properties.ipConfigurations",type:{name:"Sequence",element:{type:{name:"Composite",className:"VirtualNetworkGatewayIPConfiguration"}}}},gatewayType:{serializedName:"properties.gatewayType",type:{name:"String"}},vpnType:{serializedName:"properties.vpnType",type:{name:"String"}},enableBgp:{serializedName:"properties.enableBgp",type:{name:"Boolean"}},activeActive:{serializedName:"properties.activeActive",type:{name:"Boolean"}},gatewayDefaultSite:{serializedName:"properties.gatewayDefaultSite",type:{name:"Composite",className:"SubResource"}},sku:{serializedName:"properties.sku",type:{name:"Composite",className:"VirtualNetworkGatewaySku"}},vpnClientConfiguration:{serializedName:"properties.vpnClientConfiguration",type:{name:"Composite",className:"VpnClientConfiguration"}},bgpSettings:{serializedName:"properties.bgpSettings",type:{name:"Composite",className:"BgpSettings"}},resourceGuid:{serializedName:"properties.resourceGuid",type:{name:"String"}},provisioningState:{readOnly:!0,serializedName:"properties.provisioningState",type:{name:"String"}},etag:{serializedName:"etag",type:{name:"String"}}})}},In={serializedName:"VpnClientParameters",type:{name:"Composite",className:"VpnClientParameters",modelProperties:{processorArchitecture:{serializedName:"processorArchitecture",type:{name:"String"}},authenticationMethod:{serializedName:"authenticationMethod",type:{name:"String"}},radiusServerAuthCertificate:{serializedName:"radiusServerAuthCertificate",type:{name:"String"}},clientRootCertificates:{serializedName:"clientRootCertificates",type:{name:"Sequence",element:{type:{name:"String"}}}}}}},En={serializedName:"BgpPeerStatusListResult",type:{name:"Composite",className:"BgpPeerStatusListResult",modelProperties:{value:{serializedName:"value",type:{name:"Sequence",element:{type:{name:"Composite",className:"BgpPeerStatus"}}}}}}},Mn={serializedName:"GatewayRouteListResult",type:{name:"Composite",className:"GatewayRouteListResult",modelProperties:{value:{serializedName:"value",type:{name:"Sequence",element:{type:{name:"Composite",className:"GatewayRoute"}}}}}}},Vn={serializedName:"TunnelConnectionHealth",type:{name:"Composite",className:"TunnelConnectionHealth",modelProperties:{tunnel:{readOnly:!0,serializedName:"tunnel",type:{name:"String"}},connectionStatus:{readOnly:!0,serializedName:"connectionStatus",type:{name:"String"}},ingressBytesTransferred:{readOnly:!0,serializedName:"ingressBytesTransferred",type:{name:"Number"}},egressBytesTransferred:{readOnly:!0,serializedName:"egressBytesTransferred",type:{name:"Number"}},lastConnectionEstablishedUtcTime:{readOnly:!0,serializedName:"lastConnectionEstablishedUtcTime",type:{name:"String"}}}}},xn={serializedName:"LocalNetworkGateway",type:{name:"Composite",className:"LocalNetworkGateway",modelProperties:cr({},Cr.type.modelProperties,{localNetworkAddressSpace:{serializedName:"properties.localNetworkAddressSpace",type:{name:"Composite",className:"AddressSpace"}},gatewayIpAddress:{serializedName:"properties.gatewayIpAddress",type:{name:"String"}},bgpSettings:{serializedName:"properties.bgpSettings",type:{name:"Composite",className:"BgpSettings"}},resourceGuid:{serializedName:"properties.resourceGuid",type:{name:"String"}},provisioningState:{readOnly:!0,serializedName:"properties.provisioningState",type:{name:"String"}},etag:{serializedName:"etag",type:{name:"String"}}})}},Fn={serializedName:"VirtualNetworkGatewayConnection",type:{name:"Composite",className:"VirtualNetworkGatewayConnection",modelProperties:cr({},Cr.type.modelProperties,{authorizationKey:{serializedName:"properties.authorizationKey",type:{name:"String"}},virtualNetworkGateway1:{required:!0,serializedName:"properties.virtualNetworkGateway1",type:{name:"Composite",className:"VirtualNetworkGateway"}},virtualNetworkGateway2:{serializedName:"properties.virtualNetworkGateway2",type:{name:"Composite",className:"VirtualNetworkGateway"}},localNetworkGateway2:{serializedName:"properties.localNetworkGateway2",type:{name:"Composite",className:"LocalNetworkGateway"}},connectionType:{required:!0,serializedName:"properties.connectionType",type:{name:"String"}},connectionProtocol:{serializedName:"properties.connectionProtocol",type:{name:"String"}},routingWeight:{serializedName:"properties.routingWeight",type:{name:"Number"}},sharedKey:{serializedName:"properties.sharedKey",type:{name:"String"}},connectionStatus:{readOnly:!0,serializedName:"properties.connectionStatus",type:{name:"String"}},tunnelConnectionStatus:{readOnly:!0,serializedName:"properties.tunnelConnectionStatus",type:{name:"Sequence",element:{type:{name:"Composite",className:"TunnelConnectionHealth"}}}},egressBytesTransferred:{readOnly:!0,serializedName:"properties.egressBytesTransferred",type:{name:"Number"}},ingressBytesTransferred:{readOnly:!0,serializedName:"properties.ingressBytesTransferred",type:{name:"Number"}},peer:{serializedName:"properties.peer",type:{name:"Composite",className:"SubResource"}},enableBgp:{serializedName:"properties.enableBgp",type:{name:"Boolean"}},usePolicyBasedTrafficSelectors:{serializedName:"properties.usePolicyBasedTrafficSelectors",type:{name:"Boolean"}},ipsecPolicies:{serializedName:"properties.ipsecPolicies",type:{name:"Sequence",element:{type:{name:"Composite",className:"IpsecPolicy"}}}},resourceGuid:{serializedName:"properties.resourceGuid",type:{name:"String"}},provisioningState:{readOnly:!0,serializedName:"properties.provisioningState",type:{name:"String"}},expressRouteGatewayBypass:{serializedName:"properties.expressRouteGatewayBypass",type:{name:"Boolean"}},etag:{serializedName:"etag",type:{name:"String"}}})}},qn={serializedName:"ConnectionResetSharedKey",type:{name:"Composite",className:"ConnectionResetSharedKey",modelProperties:{keyLength:{required:!0,serializedName:"keyLength",constraints:{InclusiveMaximum:128,InclusiveMinimum:1},type:{name:"Number"}}}}},Tn={serializedName:"ConnectionSharedKey",type:{name:"Composite",className:"ConnectionSharedKey",modelProperties:cr({},Pr.type.modelProperties,{value:{required:!0,serializedName:"value",type:{name:"String"}}})}},Ln={serializedName:"VpnClientIPsecParameters",type:{name:"Composite",className:"VpnClientIPsecParameters",modelProperties:{saLifeTimeSeconds:{required:!0,serializedName:"saLifeTimeSeconds",type:{name:"Number"}},saDataSizeKilobytes:{required:!0,serializedName:"saDataSizeKilobytes",type:{name:"Number"}},ipsecEncryption:{required:!0,serializedName:"ipsecEncryption",type:{name:"String"}},ipsecIntegrity:{required:!0,serializedName:"ipsecIntegrity",type:{name:"String"}},ikeEncryption:{required:!0,serializedName:"ikeEncryption",type:{name:"String"}},ikeIntegrity:{required:!0,serializedName:"ikeIntegrity",type:{name:"String"}},dhGroup:{required:!0,serializedName:"dhGroup",type:{name:"String"}},pfsGroup:{required:!0,serializedName:"pfsGroup",type:{name:"String"}}}}},Bn={serializedName:"virtualNetworkConnectionGatewayReference",type:{name:"Composite",className:"VirtualNetworkConnectionGatewayReference",modelProperties:{id:{required:!0,serializedName:"id",type:{name:"String"}}}}},On={serializedName:"VirtualNetworkGatewayConnectionListEntity",type:{name:"Composite",className:"VirtualNetworkGatewayConnectionListEntity",modelProperties:cr({},Cr.type.modelProperties,{authorizationKey:{serializedName:"properties.authorizationKey",type:{name:"String"}},virtualNetworkGateway1:{required:!0,serializedName:"properties.virtualNetworkGateway1",type:{name:"Composite",className:"VirtualNetworkConnectionGatewayReference"}},virtualNetworkGateway2:{serializedName:"properties.virtualNetworkGateway2",type:{name:"Composite",className:"VirtualNetworkConnectionGatewayReference"}},localNetworkGateway2:{serializedName:"properties.localNetworkGateway2",type:{name:"Composite",className:"VirtualNetworkConnectionGatewayReference"}},connectionType:{required:!0,serializedName:"properties.connectionType",type:{name:"String"}},connectionProtocol:{serializedName:"properties.connectionProtocol",type:{name:"String"}},routingWeight:{serializedName:"properties.routingWeight",type:{name:"Number"}},sharedKey:{serializedName:"properties.sharedKey",type:{name:"String"}},connectionStatus:{readOnly:!0,serializedName:"properties.connectionStatus",type:{name:"String"}},tunnelConnectionStatus:{readOnly:!0,serializedName:"properties.tunnelConnectionStatus",type:{name:"Sequence",element:{type:{name:"Composite",className:"TunnelConnectionHealth"}}}},egressBytesTransferred:{readOnly:!0,serializedName:"properties.egressBytesTransferred",type:{name:"Number"}},ingressBytesTransferred:{readOnly:!0,serializedName:"properties.ingressBytesTransferred",type:{name:"Number"}},peer:{serializedName:"properties.peer",type:{name:"Composite",className:"SubResource"}},enableBgp:{serializedName:"properties.enableBgp",type:{name:"Boolean"}},usePolicyBasedTrafficSelectors:{serializedName:"properties.usePolicyBasedTrafficSelectors",type:{name:"Boolean"}},ipsecPolicies:{serializedName:"properties.ipsecPolicies",type:{name:"Sequence",element:{type:{name:"Composite",className:"IpsecPolicy"}}}},resourceGuid:{serializedName:"properties.resourceGuid",type:{name:"String"}},provisioningState:{readOnly:!0,serializedName:"properties.provisioningState",type:{name:"String"}},expressRouteGatewayBypass:{serializedName:"properties.expressRouteGatewayBypass",type:{name:"Boolean"}},etag:{serializedName:"etag",type:{name:"String"}}})}},Dn={serializedName:"VpnDeviceScriptParameters",type:{name:"Composite",className:"VpnDeviceScriptParameters",modelProperties:{vendor:{serializedName:"vendor",type:{name:"String"}},deviceFamily:{serializedName:"deviceFamily",type:{name:"String"}},firmwareVersion:{serializedName:"firmwareVersion",type:{name:"String"}}}}},Hn={serializedName:"P2SVpnServerConfigVpnClientRootCertificate",type:{name:"Composite",className:"P2SVpnServerConfigVpnClientRootCertificate",modelProperties:cr({},Pr.type.modelProperties,{publicCertData:{required:!0,serializedName:"properties.publicCertData",type:{name:"String"}},provisioningState:{readOnly:!0,serializedName:"properties.provisioningState",type:{name:"String"}},name:{serializedName:"name",type:{name:"String"}},etag:{serializedName:"etag",type:{name:"String"}}})}},Un={serializedName:"P2SVpnServerConfigVpnClientRevokedCertificate",type:{name:"Composite",className:"P2SVpnServerConfigVpnClientRevokedCertificate",modelProperties:cr({},Pr.type.modelProperties,{thumbprint:{serializedName:"properties.thumbprint",type:{name:"String"}},provisioningState:{readOnly:!0,serializedName:"properties.provisioningState",type:{name:"String"}},name:{serializedName:"name",type:{name:"String"}},etag:{serializedName:"etag",type:{name:"String"}}})}},Wn={serializedName:"P2SVpnServerConfigRadiusServerRootCertificate",type:{name:"Composite",className:"P2SVpnServerConfigRadiusServerRootCertificate",modelProperties:cr({},Pr.type.modelProperties,{publicCertData:{required:!0,serializedName:"properties.publicCertData",type:{name:"String"}},provisioningState:{readOnly:!0,serializedName:"properties.provisioningState",type:{name:"String"}},name:{serializedName:"name",type:{name:"String"}},etag:{serializedName:"etag",type:{name:"String"}}})}},_n={serializedName:"P2SVpnServerConfigRadiusClientRootCertificate",type:{name:"Composite",className:"P2SVpnServerConfigRadiusClientRootCertificate",modelProperties:cr({},Pr.type.modelProperties,{thumbprint:{serializedName:"properties.thumbprint",type:{name:"String"}},provisioningState:{readOnly:!0,serializedName:"properties.provisioningState",type:{name:"String"}},name:{serializedName:"name",type:{name:"String"}},etag:{serializedName:"etag",type:{name:"String"}}})}},Kn={serializedName:"P2SVpnServerConfiguration",type:{name:"Composite",className:"P2SVpnServerConfiguration",modelProperties:cr({},Pr.type.modelProperties,{p2SVpnServerConfigurationPropertiesName:{serializedName:"properties.name",type:{name:"String"}},vpnProtocols:{serializedName:"properties.vpnProtocols",type:{name:"Sequence",element:{type:{name:"String"}}}},p2SVpnServerConfigVpnClientRootCertificates:{serializedName:"properties.p2SVpnServerConfigVpnClientRootCertificates",type:{name:"Sequence",element:{type:{name:"Composite",className:"P2SVpnServerConfigVpnClientRootCertificate"}}}},p2SVpnServerConfigVpnClientRevokedCertificates:{serializedName:"properties.p2SVpnServerConfigVpnClientRevokedCertificates",type:{name:"Sequence",element:{type:{name:"Composite",className:"P2SVpnServerConfigVpnClientRevokedCertificate"}}}},p2SVpnServerConfigRadiusServerRootCertificates:{serializedName:"properties.p2SVpnServerConfigRadiusServerRootCertificates",type:{name:"Sequence",element:{type:{name:"Composite",className:"P2SVpnServerConfigRadiusServerRootCertificate"}}}},p2SVpnServerConfigRadiusClientRootCertificates:{serializedName:"properties.p2SVpnServerConfigRadiusClientRootCertificates",type:{name:"Sequence",element:{type:{name:"Composite",className:"P2SVpnServerConfigRadiusClientRootCertificate"}}}},vpnClientIpsecPolicies:{serializedName:"properties.vpnClientIpsecPolicies",type:{name:"Sequence",element:{type:{name:"Composite",className:"IpsecPolicy"}}}},radiusServerAddress:{serializedName:"properties.radiusServerAddress",type:{name:"String"}},radiusServerSecret:{serializedName:"properties.radiusServerSecret",type:{name:"String"}},provisioningState:{readOnly:!0,serializedName:"properties.provisioningState",type:{name:"String"}},p2SVpnGateways:{readOnly:!0,serializedName:"properties.p2SVpnGateways",type:{name:"Sequence",element:{type:{name:"Composite",className:"SubResource"}}}},p2SVpnServerConfigurationPropertiesEtag:{serializedName:"properties.etag",type:{name:"String"}},name:{serializedName:"name",type:{name:"String"}},etag:{readOnly:!0,serializedName:"etag",type:{name:"String"}}})}},jn={serializedName:"VirtualWAN",type:{name:"Composite",className:"VirtualWAN",modelProperties:cr({},Cr.type.modelProperties,{disableVpnEncryption:{serializedName:"properties.disableVpnEncryption",type:{name:"Boolean"}},virtualHubs:{readOnly:!0,serializedName:"properties.virtualHubs",type:{name:"Sequence",element:{type:{name:"Composite",className:"SubResource"}}}},vpnSites:{readOnly:!0,serializedName:"properties.vpnSites",type:{name:"Sequence",element:{type:{name:"Composite",className:"SubResource"}}}},securityProviderName:{serializedName:"properties.securityProviderName",type:{name:"String"}},allowBranchToBranchTraffic:{serializedName:"properties.allowBranchToBranchTraffic",type:{name:"Boolean"}},allowVnetToVnetTraffic:{serializedName:"properties.allowVnetToVnetTraffic",type:{name:"Boolean"}},office365LocalBreakoutCategory:{serializedName:"properties.office365LocalBreakoutCategory",type:{name:"String"}},p2SVpnServerConfigurations:{serializedName:"properties.p2SVpnServerConfigurations",type:{name:"Sequence",element:{type:{name:"Composite",className:"P2SVpnServerConfiguration"}}}},provisioningState:{serializedName:"properties.provisioningState",type:{name:"String"}},etag:{readOnly:!0,serializedName:"etag",type:{name:"String"}}})}},Zn={serializedName:"DeviceProperties",type:{name:"Composite",className:"DeviceProperties",modelProperties:{deviceVendor:{serializedName:"deviceVendor",type:{name:"String"}},deviceModel:{serializedName:"deviceModel",type:{name:"String"}},linkSpeedInMbps:{serializedName:"linkSpeedInMbps",type:{name:"Number"}}}}},Qn={serializedName:"VpnSite",type:{name:"Composite",className:"VpnSite",modelProperties:cr({},Cr.type.modelProperties,{virtualWan:{serializedName:"properties.virtualWan",type:{name:"Composite",className:"SubResource"}},deviceProperties:{serializedName:"properties.deviceProperties",type:{name:"Composite",className:"DeviceProperties"}},ipAddress:{serializedName:"properties.ipAddress",type:{name:"String"}},siteKey:{serializedName:"properties.siteKey",type:{name:"String"}},addressSpace:{serializedName:"properties.addressSpace",type:{name:"Composite",className:"AddressSpace"}},bgpProperties:{serializedName:"properties.bgpProperties",type:{name:"Composite",className:"BgpSettings"}},provisioningState:{serializedName:"properties.provisioningState",type:{name:"String"}},isSecuritySite:{serializedName:"properties.isSecuritySite",type:{name:"Boolean"}},etag:{readOnly:!0,serializedName:"etag",type:{name:"String"}}})}},Xn={serializedName:"GetVpnSitesConfigurationRequest",type:{name:"Composite",className:"GetVpnSitesConfigurationRequest",modelProperties:{vpnSites:{serializedName:"vpnSites",type:{name:"Sequence",element:{type:{name:"String"}}}},outputBlobSasUrl:{serializedName:"outputBlobSasUrl",type:{name:"String"}}}}},$n={serializedName:"HubVirtualNetworkConnection",type:{name:"Composite",className:"HubVirtualNetworkConnection",modelProperties:cr({},Pr.type.modelProperties,{remoteVirtualNetwork:{serializedName:"properties.remoteVirtualNetwork",type:{name:"Composite",className:"SubResource"}},allowHubToRemoteVnetTransit:{serializedName:"properties.allowHubToRemoteVnetTransit",type:{name:"Boolean"}},allowRemoteVnetToUseHubVnetGateways:{serializedName:"properties.allowRemoteVnetToUseHubVnetGateways",type:{name:"Boolean"}},enableInternetSecurity:{serializedName:"properties.enableInternetSecurity",type:{name:"Boolean"}},provisioningState:{serializedName:"properties.provisioningState",type:{name:"String"}},name:{serializedName:"name",type:{name:"String"}},etag:{readOnly:!0,serializedName:"etag",type:{name:"String"}}})}},Jn={serializedName:"VirtualHubRoute",type:{name:"Composite",className:"VirtualHubRoute",modelProperties:{addressPrefixes:{serializedName:"addressPrefixes",type:{name:"Sequence",element:{type:{name:"String"}}}},nextHopIpAddress:{serializedName:"nextHopIpAddress",type:{name:"String"}}}}},Yn={serializedName:"VirtualHubRouteTable",type:{name:"Composite",className:"VirtualHubRouteTable",modelProperties:{routes:{serializedName:"routes",type:{name:"Sequence",element:{type:{name:"Composite",className:"VirtualHubRoute"}}}}}}},es={serializedName:"VirtualHub",type:{name:"Composite",className:"VirtualHub",modelProperties:cr({},Cr.type.modelProperties,{virtualWan:{serializedName:"properties.virtualWan",type:{name:"Composite",className:"SubResource"}},vpnGateway:{serializedName:"properties.vpnGateway",type:{name:"Composite",className:"SubResource"}},p2SVpnGateway:{serializedName:"properties.p2SVpnGateway",type:{name:"Composite",className:"SubResource"}},expressRouteGateway:{serializedName:"properties.expressRouteGateway",type:{name:"Composite",className:"SubResource"}},virtualNetworkConnections:{serializedName:"properties.virtualNetworkConnections",type:{name:"Sequence",element:{type:{name:"Composite",className:"HubVirtualNetworkConnection"}}}},addressPrefix:{serializedName:"properties.addressPrefix",type:{name:"String"}},routeTable:{serializedName:"properties.routeTable",type:{name:"Composite",className:"VirtualHubRouteTable"}},provisioningState:{serializedName:"properties.provisioningState",type:{name:"String"}},etag:{readOnly:!0,serializedName:"etag",type:{name:"String"}}})}},ts={serializedName:"VpnConnection",type:{name:"Composite",className:"VpnConnection",modelProperties:cr({},Pr.type.modelProperties,{remoteVpnSite:{serializedName:"properties.remoteVpnSite",type:{name:"Composite",className:"SubResource"}},routingWeight:{serializedName:"properties.routingWeight",type:{name:"Number"}},connectionStatus:{serializedName:"properties.connectionStatus",type:{name:"String"}},vpnConnectionProtocolType:{serializedName:"properties.vpnConnectionProtocolType",type:{name:"String"}},ingressBytesTransferred:{readOnly:!0,serializedName:"properties.ingressBytesTransferred",type:{name:"Number"}},egressBytesTransferred:{readOnly:!0,serializedName:"properties.egressBytesTransferred",type:{name:"Number"}},connectionBandwidth:{serializedName:"properties.connectionBandwidth",type:{name:"Number"}},sharedKey:{serializedName:"properties.sharedKey",type:{name:"String"}},enableBgp:{serializedName:"properties.enableBgp",type:{name:"Boolean"}},ipsecPolicies:{serializedName:"properties.ipsecPolicies",type:{name:"Sequence",element:{type:{name:"Composite",className:"IpsecPolicy"}}}},enableRateLimiting:{serializedName:"properties.enableRateLimiting",type:{name:"Boolean"}},enableInternetSecurity:{serializedName:"properties.enableInternetSecurity",type:{name:"Boolean"}},provisioningState:{serializedName:"properties.provisioningState",type:{name:"String"}},name:{serializedName:"name",type:{name:"String"}},etag:{readOnly:!0,serializedName:"etag",type:{name:"String"}}})}},rs={serializedName:"VpnGateway",type:{name:"Composite",className:"VpnGateway",modelProperties:cr({},Cr.type.modelProperties,{virtualHub:{serializedName:"properties.virtualHub",type:{name:"Composite",className:"SubResource"}},connections:{serializedName:"properties.connections",type:{name:"Sequence",element:{type:{name:"Composite",className:"VpnConnection"}}}},bgpSettings:{serializedName:"properties.bgpSettings",type:{name:"Composite",className:"BgpSettings"}},provisioningState:{serializedName:"properties.provisioningState",type:{name:"String"}},vpnGatewayScaleUnit:{serializedName:"properties.vpnGatewayScaleUnit",type:{name:"Number"}},etag:{readOnly:!0,serializedName:"etag",type:{name:"String"}}})}},is={serializedName:"VirtualWanSecurityProviders",type:{name:"Composite",className:"VirtualWanSecurityProviders",modelProperties:{supportedProviders:{serializedName:"supportedProviders",type:{name:"Sequence",element:{type:{name:"Composite",className:"VirtualWanSecurityProvider"}}}}}}},as={serializedName:"VpnClientConnectionHealth",type:{name:"Composite",className:"VpnClientConnectionHealth",modelProperties:{totalIngressBytesTransferred:{readOnly:!0,serializedName:"totalIngressBytesTransferred",type:{name:"Number"}},totalEgressBytesTransferred:{readOnly:!0,serializedName:"totalEgressBytesTransferred",type:{name:"Number"}},vpnClientConnectionsCount:{serializedName:"vpnClientConnectionsCount",type:{name:"Number"}},allocatedIpAddresses:{serializedName:"allocatedIpAddresses",type:{name:"Sequence",element:{type:{name:"String"}}}}}}},os={serializedName:"P2SVpnGateway",type:{name:"Composite",className:"P2SVpnGateway",modelProperties:cr({},Cr.type.modelProperties,{virtualHub:{serializedName:"properties.virtualHub",type:{name:"Composite",className:"SubResource"}},provisioningState:{serializedName:"properties.provisioningState",type:{name:"String"}},vpnGatewayScaleUnit:{serializedName:"properties.vpnGatewayScaleUnit",type:{name:"Number"}},p2SVpnServerConfiguration:{serializedName:"properties.p2SVpnServerConfiguration",type:{name:"Composite",className:"SubResource"}},vpnClientAddressPool:{serializedName:"properties.vpnClientAddressPool",type:{name:"Composite",className:"AddressSpace"}},vpnClientConnectionHealth:{readOnly:!0,serializedName:"properties.vpnClientConnectionHealth",type:{name:"Composite",className:"VpnClientConnectionHealth"}},etag:{readOnly:!0,serializedName:"etag",type:{name:"String"}}})}},ns={serializedName:"P2SVpnProfileParameters",type:{name:"Composite",className:"P2SVpnProfileParameters",modelProperties:{authenticationMethod:{serializedName:"authenticationMethod",type:{name:"String"}}}}},ss={serializedName:"VpnProfileResponse",type:{name:"Composite",className:"VpnProfileResponse",modelProperties:{profileUrl:{serializedName:"profileUrl",type:{name:"String"}}}}},ps={serializedName:"ApplicationGatewayListResult",type:{name:"Composite",className:"ApplicationGatewayListResult",modelProperties:{value:{serializedName:"",type:{name:"Sequence",element:{type:{name:"Composite",className:"ApplicationGateway"}}}},nextLink:{serializedName:"nextLink",type:{name:"String"}}}}},us={serializedName:"ApplicationGatewayAvailableSslPredefinedPolicies",type:{name:"Composite",className:"ApplicationGatewayAvailableSslPredefinedPolicies",modelProperties:{value:{serializedName:"",type:{name:"Sequence",element:{type:{name:"Composite",className:"ApplicationGatewaySslPredefinedPolicy"}}}},nextLink:{serializedName:"nextLink",type:{name:"String"}}}}},ls={serializedName:"ApplicationSecurityGroupListResult",type:{name:"Composite",className:"ApplicationSecurityGroupListResult",modelProperties:{value:{serializedName:"",type:{name:"Sequence",element:{type:{name:"Composite",className:"ApplicationSecurityGroup"}}}},nextLink:{readOnly:!0,serializedName:"nextLink",type:{name:"String"}}}}},cs={serializedName:"AvailableDelegationsResult",type:{name:"Composite",className:"AvailableDelegationsResult",modelProperties:{value:{serializedName:"",type:{name:"Sequence",element:{type:{name:"Composite",className:"AvailableDelegation"}}}},nextLink:{readOnly:!0,serializedName:"nextLink",type:{name:"String"}}}}},ds={serializedName:"AzureFirewallListResult",type:{name:"Composite",className:"AzureFirewallListResult",modelProperties:{value:{serializedName:"",type:{name:"Sequence",element:{type:{name:"Composite",className:"AzureFirewall"}}}},nextLink:{serializedName:"nextLink",type:{name:"String"}}}}},ms={serializedName:"AzureFirewallFqdnTagListResult",type:{name:"Composite",className:"AzureFirewallFqdnTagListResult",modelProperties:{value:{serializedName:"",type:{name:"Sequence",element:{type:{name:"Composite",className:"AzureFirewallFqdnTag"}}}},nextLink:{serializedName:"nextLink",type:{name:"String"}}}}},ys={serializedName:"DdosProtectionPlanListResult",type:{name:"Composite",className:"DdosProtectionPlanListResult",modelProperties:{value:{serializedName:"",type:{name:"Sequence",element:{type:{name:"Composite",className:"DdosProtectionPlan"}}}},nextLink:{readOnly:!0,serializedName:"nextLink",type:{name:"String"}}}}},Ps={serializedName:"EndpointServicesListResult",type:{name:"Composite",className:"EndpointServicesListResult",modelProperties:{value:{serializedName:"",type:{name:"Sequence",element:{type:{name:"Composite",className:"EndpointServiceResult"}}}},nextLink:{serializedName:"nextLink",type:{name:"String"}}}}},Ns={serializedName:"AuthorizationListResult",type:{name:"Composite",className:"AuthorizationListResult",modelProperties:{value:{serializedName:"",type:{name:"Sequence",element:{type:{name:"Composite",className:"ExpressRouteCircuitAuthorization"}}}},nextLink:{serializedName:"nextLink",type:{name:"String"}}}}},Cs={serializedName:"ExpressRouteCircuitPeeringListResult",type:{name:"Composite",className:"ExpressRouteCircuitPeeringListResult",modelProperties:{value:{serializedName:"",type:{name:"Sequence",element:{type:{name:"Composite",className:"ExpressRouteCircuitPeering"}}}},nextLink:{serializedName:"nextLink",type:{name:"String"}}}}},ws={serializedName:"ExpressRouteCircuitListResult",type:{name:"Composite",className:"ExpressRouteCircuitListResult",modelProperties:{value:{serializedName:"",type:{name:"Sequence",element:{type:{name:"Composite",className:"ExpressRouteCircuit"}}}},nextLink:{serializedName:"nextLink",type:{name:"String"}}}}},Rs={serializedName:"ExpressRouteServiceProviderListResult",type:{name:"Composite",className:"ExpressRouteServiceProviderListResult",modelProperties:{value:{serializedName:"",type:{name:"Sequence",element:{type:{name:"Composite",className:"ExpressRouteServiceProvider"}}}},nextLink:{serializedName:"nextLink",type:{name:"String"}}}}},fs={serializedName:"ExpressRouteCrossConnectionListResult",type:{name:"Composite",className:"ExpressRouteCrossConnectionListResult",modelProperties:{value:{serializedName:"",type:{name:"Sequence",element:{type:{name:"Composite",className:"ExpressRouteCrossConnection"}}}},nextLink:{readOnly:!0,serializedName:"nextLink",type:{name:"String"}}}}},Ss={serializedName:"ExpressRouteCrossConnectionPeeringList",type:{name:"Composite",className:"ExpressRouteCrossConnectionPeeringList",modelProperties:{value:{serializedName:"",type:{name:"Sequence",element:{type:{name:"Composite",className:"ExpressRouteCrossConnectionPeering"}}}},nextLink:{readOnly:!0,serializedName:"nextLink",type:{name:"String"}}}}},gs={serializedName:"InterfaceEndpointListResult",type:{name:"Composite",className:"InterfaceEndpointListResult",modelProperties:{value:{serializedName:"",type:{name:"Sequence",element:{type:{name:"Composite",className:"InterfaceEndpoint"}}}},nextLink:{readOnly:!0,serializedName:"nextLink",type:{name:"String"}}}}},As={serializedName:"LoadBalancerListResult",type:{name:"Composite",className:"LoadBalancerListResult",modelProperties:{value:{serializedName:"",type:{name:"Sequence",element:{type:{name:"Composite",className:"LoadBalancer"}}}},nextLink:{readOnly:!0,serializedName:"nextLink",type:{name:"String"}}}}},Gs={serializedName:"LoadBalancerBackendAddressPoolListResult",type:{name:"Composite",className:"LoadBalancerBackendAddressPoolListResult",modelProperties:{value:{serializedName:"",type:{name:"Sequence",element:{type:{name:"Composite",className:"BackendAddressPool"}}}},nextLink:{readOnly:!0,serializedName:"nextLink",type:{name:"String"}}}}},bs={serializedName:"LoadBalancerFrontendIPConfigurationListResult",type:{name:"Composite",className:"LoadBalancerFrontendIPConfigurationListResult",modelProperties:{value:{serializedName:"",type:{name:"Sequence",element:{type:{name:"Composite",className:"FrontendIPConfiguration"}}}},nextLink:{readOnly:!0,serializedName:"nextLink",type:{name:"String"}}}}},hs={serializedName:"InboundNatRuleListResult",type:{name:"Composite",className:"InboundNatRuleListResult",modelProperties:{value:{serializedName:"",type:{name:"Sequence",element:{type:{name:"Composite",className:"InboundNatRule"}}}},nextLink:{readOnly:!0,serializedName:"nextLink",type:{name:"String"}}}}},ks={serializedName:"LoadBalancerLoadBalancingRuleListResult",type:{name:"Composite",className:"LoadBalancerLoadBalancingRuleListResult",modelProperties:{value:{serializedName:"",type:{name:"Sequence",element:{type:{name:"Composite",className:"LoadBalancingRule"}}}},nextLink:{readOnly:!0,serializedName:"nextLink",type:{name:"String"}}}}},zs={serializedName:"NetworkInterfaceListResult",type:{name:"Composite",className:"NetworkInterfaceListResult",modelProperties:{value:{serializedName:"",type:{name:"Sequence",element:{type:{name:"Composite",className:"NetworkInterface"}}}},nextLink:{readOnly:!0,serializedName:"nextLink",type:{name:"String"}}}}},vs={serializedName:"LoadBalancerProbeListResult",type:{name:"Composite",className:"LoadBalancerProbeListResult",modelProperties:{value:{serializedName:"",type:{name:"Sequence",element:{type:{name:"Composite",className:"Probe"}}}},nextLink:{readOnly:!0,serializedName:"nextLink",type:{name:"String"}}}}},Is={serializedName:"NetworkInterfaceIPConfigurationListResult",type:{name:"Composite",className:"NetworkInterfaceIPConfigurationListResult",modelProperties:{value:{serializedName:"",type:{name:"Sequence",element:{type:{name:"Composite",className:"NetworkInterfaceIPConfiguration"}}}},nextLink:{readOnly:!0,serializedName:"nextLink",type:{name:"String"}}}}},Es={serializedName:"NetworkInterfaceLoadBalancerListResult",type:{name:"Composite",className:"NetworkInterfaceLoadBalancerListResult",modelProperties:{value:{serializedName:"",type:{name:"Sequence",element:{type:{name:"Composite",className:"LoadBalancer"}}}},nextLink:{readOnly:!0,serializedName:"nextLink",type:{name:"String"}}}}},Ms={serializedName:"NetworkInterfaceTapConfigurationListResult",type:{name:"Composite",className:"NetworkInterfaceTapConfigurationListResult",modelProperties:{value:{serializedName:"",type:{name:"Sequence",element:{type:{name:"Composite",className:"NetworkInterfaceTapConfiguration"}}}},nextLink:{readOnly:!0,serializedName:"nextLink",type:{name:"String"}}}}},Vs={serializedName:"NetworkProfileListResult",type:{name:"Composite",className:"NetworkProfileListResult",modelProperties:{value:{serializedName:"",type:{name:"Sequence",element:{type:{name:"Composite",className:"NetworkProfile"}}}},nextLink:{serializedName:"nextLink",type:{name:"String"}}}}},xs={serializedName:"NetworkSecurityGroupListResult",type:{name:"Composite",className:"NetworkSecurityGroupListResult",modelProperties:{value:{serializedName:"",type:{name:"Sequence",element:{type:{name:"Composite",className:"NetworkSecurityGroup"}}}},nextLink:{serializedName:"nextLink",type:{name:"String"}}}}},Fs={serializedName:"SecurityRuleListResult",type:{name:"Composite",className:"SecurityRuleListResult",modelProperties:{value:{serializedName:"",type:{name:"Sequence",element:{type:{name:"Composite",className:"SecurityRule"}}}},nextLink:{serializedName:"nextLink",type:{name:"String"}}}}},qs={serializedName:"NetworkWatcherListResult",type:{name:"Composite",className:"NetworkWatcherListResult",modelProperties:{value:{serializedName:"",type:{name:"Sequence",element:{type:{name:"Composite",className:"NetworkWatcher"}}}}}}},Ts={serializedName:"PacketCaptureListResult",type:{name:"Composite",className:"PacketCaptureListResult",modelProperties:{value:{serializedName:"",type:{name:"Sequence",element:{type:{name:"Composite",className:"PacketCaptureResult"}}}}}}},Ls={serializedName:"ConnectionMonitorListResult",type:{name:"Composite",className:"ConnectionMonitorListResult",modelProperties:{value:{serializedName:"",type:{name:"Sequence",element:{type:{name:"Composite",className:"ConnectionMonitorResult"}}}}}}},Bs={serializedName:"OperationListResult",type:{name:"Composite",className:"OperationListResult",modelProperties:{value:{serializedName:"",type:{name:"Sequence",element:{type:{name:"Composite",className:"Operation"}}}},nextLink:{serializedName:"nextLink",type:{name:"String"}}}}},Os={serializedName:"PublicIPAddressListResult",type:{name:"Composite",className:"PublicIPAddressListResult",modelProperties:{value:{serializedName:"",type:{name:"Sequence",element:{type:{name:"Composite",className:"PublicIPAddress"}}}},nextLink:{serializedName:"nextLink",type:{name:"String"}}}}},Ds={serializedName:"PublicIPPrefixListResult",type:{name:"Composite",className:"PublicIPPrefixListResult",modelProperties:{value:{serializedName:"",type:{name:"Sequence",element:{type:{name:"Composite",className:"PublicIPPrefix"}}}},nextLink:{serializedName:"nextLink",type:{name:"String"}}}}},Hs={serializedName:"RouteFilterListResult",type:{name:"Composite",className:"RouteFilterListResult",modelProperties:{value:{serializedName:"",type:{name:"Sequence",element:{type:{name:"Composite",className:"RouteFilter"}}}},nextLink:{serializedName:"nextLink",type:{name:"String"}}}}},Us={serializedName:"RouteFilterRuleListResult",type:{name:"Composite",className:"RouteFilterRuleListResult",modelProperties:{value:{serializedName:"",type:{name:"Sequence",element:{type:{name:"Composite",className:"RouteFilterRule"}}}},nextLink:{serializedName:"nextLink",type:{name:"String"}}}}},Ws={serializedName:"RouteTableListResult",type:{name:"Composite",className:"RouteTableListResult",modelProperties:{value:{serializedName:"",type:{name:"Sequence",element:{type:{name:"Composite",className:"RouteTable"}}}},nextLink:{serializedName:"nextLink",type:{name:"String"}}}}},_s={serializedName:"RouteListResult",type:{name:"Composite",className:"RouteListResult",modelProperties:{value:{serializedName:"",type:{name:"Sequence",element:{type:{name:"Composite",className:"Route"}}}},nextLink:{serializedName:"nextLink",type:{name:"String"}}}}},Ks={serializedName:"BgpServiceCommunityListResult",type:{name:"Composite",className:"BgpServiceCommunityListResult",modelProperties:{value:{serializedName:"",type:{name:"Sequence",element:{type:{name:"Composite",className:"BgpServiceCommunity"}}}},nextLink:{serializedName:"nextLink",type:{name:"String"}}}}},js={serializedName:"ServiceEndpointPolicyListResult",type:{name:"Composite",className:"ServiceEndpointPolicyListResult",modelProperties:{value:{serializedName:"",type:{name:"Sequence",element:{type:{name:"Composite",className:"ServiceEndpointPolicy"}}}},nextLink:{readOnly:!0,serializedName:"nextLink",type:{name:"String"}}}}},Zs={serializedName:"ServiceEndpointPolicyDefinitionListResult",type:{name:"Composite",className:"ServiceEndpointPolicyDefinitionListResult",modelProperties:{value:{serializedName:"",type:{name:"Sequence",element:{type:{name:"Composite",className:"ServiceEndpointPolicyDefinition"}}}},nextLink:{serializedName:"nextLink",type:{name:"String"}}}}},Qs={serializedName:"UsagesListResult",type:{name:"Composite",className:"UsagesListResult",modelProperties:{value:{serializedName:"",type:{name:"Sequence",element:{type:{name:"Composite",className:"Usage"}}}},nextLink:{serializedName:"nextLink",type:{name:"String"}}}}},Xs={serializedName:"VirtualNetworkListResult",type:{name:"Composite",className:"VirtualNetworkListResult",modelProperties:{value:{serializedName:"",type:{name:"Sequence",element:{type:{name:"Composite",className:"VirtualNetwork"}}}},nextLink:{serializedName:"nextLink",type:{name:"String"}}}}},$s={serializedName:"VirtualNetworkListUsageResult",type:{name:"Composite",className:"VirtualNetworkListUsageResult",modelProperties:{value:{readOnly:!0,serializedName:"",type:{name:"Sequence",element:{type:{name:"Composite",className:"VirtualNetworkUsage"}}}},nextLink:{serializedName:"nextLink",type:{name:"String"}}}}},Js={serializedName:"SubnetListResult",type:{name:"Composite",className:"SubnetListResult",modelProperties:{value:{serializedName:"",type:{name:"Sequence",element:{type:{name:"Composite",className:"Subnet"}}}},nextLink:{serializedName:"nextLink",type:{name:"String"}}}}},Ys={serializedName:"VirtualNetworkPeeringListResult",type:{name:"Composite",className:"VirtualNetworkPeeringListResult",modelProperties:{value:{serializedName:"",type:{name:"Sequence",element:{type:{name:"Composite",className:"VirtualNetworkPeering"}}}},nextLink:{serializedName:"nextLink",type:{name:"String"}}}}},ep={serializedName:"VirtualNetworkTapListResult",type:{name:"Composite",className:"VirtualNetworkTapListResult",modelProperties:{value:{serializedName:"",type:{name:"Sequence",element:{type:{name:"Composite",className:"VirtualNetworkTap"}}}},nextLink:{serializedName:"nextLink",type:{name:"String"}}}}},tp={serializedName:"VirtualNetworkGatewayListResult",type:{name:"Composite",className:"VirtualNetworkGatewayListResult",modelProperties:{value:{serializedName:"",type:{name:"Sequence",element:{type:{name:"Composite",className:"VirtualNetworkGateway"}}}},nextLink:{readOnly:!0,serializedName:"nextLink",type:{name:"String"}}}}},rp={serializedName:"VirtualNetworkGatewayListConnectionsResult",type:{name:"Composite",className:"VirtualNetworkGatewayListConnectionsResult",modelProperties:{value:{serializedName:"",type:{name:"Sequence",element:{type:{name:"Composite",className:"VirtualNetworkGatewayConnectionListEntity"}}}},nextLink:{readOnly:!0,serializedName:"nextLink",type:{name:"String"}}}}},ip={serializedName:"VirtualNetworkGatewayConnectionListResult",type:{name:"Composite",className:"VirtualNetworkGatewayConnectionListResult",modelProperties:{value:{serializedName:"",type:{name:"Sequence",element:{type:{name:"Composite",className:"VirtualNetworkGatewayConnection"}}}},nextLink:{readOnly:!0,serializedName:"nextLink",type:{name:"String"}}}}},ap={serializedName:"LocalNetworkGatewayListResult",type:{name:"Composite",className:"LocalNetworkGatewayListResult",modelProperties:{value:{serializedName:"",type:{name:"Sequence",element:{type:{name:"Composite",className:"LocalNetworkGateway"}}}},nextLink:{readOnly:!0,serializedName:"nextLink",type:{name:"String"}}}}},op={serializedName:"ListVirtualWANsResult",type:{name:"Composite",className:"ListVirtualWANsResult",modelProperties:{value:{serializedName:"",type:{name:"Sequence",element:{type:{name:"Composite",className:"VirtualWAN"}}}},nextLink:{serializedName:"nextLink",type:{name:"String"}}}}},np={serializedName:"ListVpnSitesResult",type:{name:"Composite",className:"ListVpnSitesResult",modelProperties:{value:{serializedName:"",type:{name:"Sequence",element:{type:{name:"Composite",className:"VpnSite"}}}},nextLink:{serializedName:"nextLink",type:{name:"String"}}}}},sp={serializedName:"ListVirtualHubsResult",type:{name:"Composite",className:"ListVirtualHubsResult",modelProperties:{value:{serializedName:"",type:{name:"Sequence",element:{type:{name:"Composite",className:"VirtualHub"}}}},nextLink:{serializedName:"nextLink",type:{name:"String"}}}}},pp={serializedName:"ListHubVirtualNetworkConnectionsResult",type:{name:"Composite",className:"ListHubVirtualNetworkConnectionsResult",modelProperties:{value:{serializedName:"",type:{name:"Sequence",element:{type:{name:"Composite",className:"HubVirtualNetworkConnection"}}}},nextLink:{serializedName:"nextLink",type:{name:"String"}}}}},up={serializedName:"ListVpnGatewaysResult",type:{name:"Composite",className:"ListVpnGatewaysResult",modelProperties:{value:{serializedName:"",type:{name:"Sequence",element:{type:{name:"Composite",className:"VpnGateway"}}}},nextLink:{serializedName:"nextLink",type:{name:"String"}}}}},lp={serializedName:"ListVpnConnectionsResult",type:{name:"Composite",className:"ListVpnConnectionsResult",modelProperties:{value:{serializedName:"",type:{name:"Sequence",element:{type:{name:"Composite",className:"VpnConnection"}}}},nextLink:{serializedName:"nextLink",type:{name:"String"}}}}},cp={serializedName:"ListP2SVpnServerConfigurationsResult",type:{name:"Composite",className:"ListP2SVpnServerConfigurationsResult",modelProperties:{value:{serializedName:"",type:{name:"Sequence",element:{type:{name:"Composite",className:"P2SVpnServerConfiguration"}}}},nextLink:{serializedName:"nextLink",type:{name:"String"}}}}},dp={serializedName:"ListP2SVpnGatewaysResult",type:{name:"Composite",className:"ListP2SVpnGatewaysResult",modelProperties:{value:{serializedName:"",type:{name:"Sequence",element:{type:{name:"Composite",className:"P2SVpnGateway"}}}},nextLink:{serializedName:"nextLink",type:{name:"String"}}}}},mp=Object.freeze({CloudError:mr,BaseResource:yr,SubResource:Pr,NetworkInterfaceTapConfiguration:Nr,Resource:Cr,ApplicationSecurityGroup:wr,SecurityRule:Rr,EndpointService:fr,InterfaceEndpoint:Sr,NetworkInterfaceDnsSettings:gr,NetworkInterface:Ar,NetworkSecurityGroup:Gr,Route:br,RouteTable:hr,ServiceEndpointPropertiesFormat:kr,ServiceEndpointPolicyDefinition:zr,ServiceEndpointPolicy:vr,PublicIPAddressSku:Ir,PublicIPAddressDnsSettings:Er,IpTag:Mr,PublicIPAddress:Vr,IPConfiguration:xr,IPConfigurationProfile:Fr,ResourceNavigationLink:qr,ServiceAssociationLink:Tr,Delegation:Lr,Subnet:Br,FrontendIPConfiguration:Or,VirtualNetworkTap:Dr,BackendAddressPool:Hr,InboundNatRule:Ur,NetworkInterfaceIPConfiguration:Wr,ApplicationGatewayBackendAddress:_r,ApplicationGatewayBackendAddressPool:Kr,ApplicationGatewayConnectionDraining:jr,ApplicationGatewayBackendHttpSettings:Zr,ApplicationGatewayBackendHealthServer:Qr,ApplicationGatewayBackendHealthHttpSettings:Xr,ApplicationGatewayBackendHealthPool:$r,ApplicationGatewayBackendHealth:Jr,ApplicationGatewaySku:Yr,ApplicationGatewaySslPolicy:ei,ApplicationGatewayIPConfiguration:ti,ApplicationGatewayAuthenticationCertificate:ri,ApplicationGatewayTrustedRootCertificate:ii,ApplicationGatewaySslCertificate:ai,ApplicationGatewayFrontendIPConfiguration:oi,ApplicationGatewayFrontendPort:ni,ApplicationGatewayHttpListener:si,ApplicationGatewayPathRule:pi,ApplicationGatewayProbeHealthResponseMatch:ui,ApplicationGatewayProbe:li,ApplicationGatewayRequestRoutingRule:ci,ApplicationGatewayRedirectConfiguration:di,ApplicationGatewayUrlPathMap:mi,ApplicationGatewayFirewallDisabledRuleGroup:yi,ApplicationGatewayWebApplicationFirewallConfiguration:Pi,ApplicationGatewayAutoscaleConfiguration:Ni,ApplicationGateway:Ci,ApplicationGatewayFirewallRule:wi,ApplicationGatewayFirewallRuleGroup:Ri,ApplicationGatewayFirewallRuleSet:fi,ApplicationGatewayAvailableWafRuleSetsResult:Si,ApplicationGatewayAvailableSslOptions:gi,ApplicationGatewaySslPredefinedPolicy:Ai,TagsObject:Gi,AvailableDelegation:bi,AzureFirewallIPConfiguration:hi,AzureFirewallRCAction:ki,AzureFirewallApplicationRuleProtocol:zi,AzureFirewallApplicationRule:vi,AzureFirewallApplicationRuleCollection:Ii,AzureFirewallNatRCAction:Ei,AzureFirewallNatRule:Mi,AzureFirewallNatRuleCollection:Vi,AzureFirewallNetworkRule:xi,AzureFirewallNetworkRuleCollection:Fi,AzureFirewall:qi,AzureFirewallFqdnTag:Ti,DnsNameAvailabilityResult:Li,DdosProtectionPlan:Bi,EndpointServiceResult:Oi,ExpressRouteCircuitAuthorization:Di,ExpressRouteCircuitPeeringConfig:Hi,RouteFilterRule:Ui,ExpressRouteCircuitStats:Wi,ExpressRouteConnectionId:_i,ExpressRouteCircuitConnection:Ki,ExpressRouteCircuitPeering:ji,RouteFilter:Zi,Ipv6ExpressRouteCircuitPeeringConfig:Qi,ExpressRouteCircuitSku:Xi,ExpressRouteCircuitServiceProviderProperties:$i,ExpressRouteCircuit:Ji,ExpressRouteCircuitArpTable:Yi,ExpressRouteCircuitsArpTableListResult:ea,ExpressRouteCircuitRoutesTable:ta,ExpressRouteCircuitsRoutesTableListResult:ra,ExpressRouteCircuitRoutesTableSummary:ia,ExpressRouteCircuitsRoutesTableSummaryListResult:aa,ExpressRouteServiceProviderBandwidthsOffered:oa,ExpressRouteServiceProvider:na,ExpressRouteCrossConnectionRoutesTableSummary:sa,ExpressRouteCrossConnectionsRoutesTableSummaryListResult:pa,ExpressRouteCircuitReference:ua,ExpressRouteCrossConnectionPeering:la,ExpressRouteCrossConnection:ca,VirtualHubId:da,ExpressRouteCircuitPeeringId:ma,ExpressRouteGatewayPropertiesAutoScaleConfigurationBounds:ya,ExpressRouteGatewayPropertiesAutoScaleConfiguration:Pa,ExpressRouteConnection:Na,ExpressRouteGateway:Ca,ExpressRouteGatewayList:wa,ExpressRouteConnectionList:Ra,LoadBalancerSku:fa,LoadBalancingRule:Sa,Probe:ga,InboundNatPool:Aa,OutboundRule:Ga,LoadBalancer:ba,ErrorDetails:ha,ErrorModel:ka,AzureAsyncOperationResult:{serializedName:"AzureAsyncOperationResult",type:{name:"Composite",className:"AzureAsyncOperationResult",modelProperties:{status:{serializedName:"status",type:{name:"String"}},error:{serializedName:"error",type:{name:"Composite",className:"ErrorModel"}}}}},EffectiveNetworkSecurityGroupAssociation:za,EffectiveNetworkSecurityRule:va,EffectiveNetworkSecurityGroup:Ia,EffectiveNetworkSecurityGroupListResult:Ea,EffectiveRoute:Ma,EffectiveRouteListResult:Va,ContainerNetworkInterfaceConfiguration:xa,Container:Fa,ContainerNetworkInterfaceIpConfiguration:qa,ContainerNetworkInterface:Ta,NetworkProfile:La,ErrorResponse:Ba,NetworkWatcher:Oa,TopologyParameters:Da,TopologyAssociation:Ha,TopologyResource:Ua,Topology:Wa,VerificationIPFlowParameters:_a,VerificationIPFlowResult:Ka,NextHopParameters:ja,NextHopResult:Za,SecurityGroupViewParameters:Qa,NetworkInterfaceAssociation:Xa,SubnetAssociation:$a,SecurityRuleAssociations:Ja,SecurityGroupNetworkInterface:Ya,SecurityGroupViewResult:eo,PacketCaptureStorageLocation:to,PacketCaptureFilter:ro,PacketCaptureParameters:{serializedName:"PacketCaptureParameters",type:{name:"Composite",className:"PacketCaptureParameters",modelProperties:{target:{required:!0,serializedName:"target",type:{name:"String"}},bytesToCapturePerPacket:{serializedName:"bytesToCapturePerPacket",defaultValue:0,type:{name:"Number"}},totalBytesPerSession:{serializedName:"totalBytesPerSession",defaultValue:1073741824,type:{name:"Number"}},timeLimitInSeconds:{serializedName:"timeLimitInSeconds",defaultValue:18e3,type:{name:"Number"}},storageLocation:{required:!0,serializedName:"storageLocation",type:{name:"Composite",className:"PacketCaptureStorageLocation"}},filters:{serializedName:"filters",type:{name:"Sequence",element:{type:{name:"Composite",className:"PacketCaptureFilter"}}}}}}},PacketCapture:io,PacketCaptureResult:ao,PacketCaptureQueryStatusResult:oo,TroubleshootingParameters:no,QueryTroubleshootingParameters:so,TroubleshootingRecommendedActions:po,TroubleshootingDetails:uo,TroubleshootingResult:lo,RetentionPolicyParameters:co,FlowLogStatusParameters:mo,TrafficAnalyticsConfigurationProperties:yo,TrafficAnalyticsProperties:Po,FlowLogInformation:No,ConnectivitySource:Co,ConnectivityDestination:wo,HTTPHeader:Ro,HTTPConfiguration:fo,ProtocolConfiguration:So,ConnectivityParameters:go,ConnectivityIssue:Ao,ConnectivityHop:Go,ConnectivityInformation:bo,AzureReachabilityReportLocation:ho,AzureReachabilityReportParameters:ko,AzureReachabilityReportLatencyInfo:zo,AzureReachabilityReportItem:vo,AzureReachabilityReport:Io,AvailableProvidersListParameters:Eo,AvailableProvidersListCity:Mo,AvailableProvidersListState:Vo,AvailableProvidersListCountry:xo,AvailableProvidersList:Fo,ConnectionMonitorSource:qo,ConnectionMonitorDestination:To,ConnectionMonitorParameters:{serializedName:"ConnectionMonitorParameters",type:{name:"Composite",className:"ConnectionMonitorParameters",modelProperties:{source:{required:!0,serializedName:"source",type:{name:"Composite",className:"ConnectionMonitorSource"}},destination:{required:!0,serializedName:"destination",type:{name:"Composite",className:"ConnectionMonitorDestination"}},autoStart:{serializedName:"autoStart",defaultValue:!0,type:{name:"Boolean"}},monitoringIntervalInSeconds:{serializedName:"monitoringIntervalInSeconds",defaultValue:60,type:{name:"Number"}}}}},ConnectionMonitor:Lo,ConnectionMonitorResult:Bo,ConnectionStateSnapshot:Oo,ConnectionMonitorQueryResult:Do,TrafficQuery:Ho,NetworkConfigurationDiagnosticParameters:Uo,MatchedRule:Wo,NetworkSecurityRulesEvaluationResult:_o,EvaluatedNetworkSecurityGroup:Ko,NetworkSecurityGroupResult:jo,NetworkConfigurationDiagnosticResult:Zo,NetworkConfigurationDiagnosticResponse:Qo,OperationDisplay:Xo,Availability:$o,Dimension:Jo,MetricSpecification:Yo,LogSpecification:en,OperationPropertiesFormatServiceSpecification:tn,Operation:rn,PublicIPPrefixSku:an,ReferencedPublicIpAddress:on,PublicIPPrefix:nn,PatchRouteFilterRule:sn,PatchRouteFilter:pn,BGPCommunity:un,BgpServiceCommunity:ln,UsageName:cn,Usage:dn,AddressSpace:mn,VirtualNetworkPeering:yn,DhcpOptions:Pn,VirtualNetwork:Nn,IPAddressAvailabilityResult:Cn,VirtualNetworkUsageName:wn,VirtualNetworkUsage:Rn,VirtualNetworkGatewayIPConfiguration:fn,VirtualNetworkGatewaySku:Sn,VpnClientRootCertificate:gn,VpnClientRevokedCertificate:An,IpsecPolicy:Gn,VpnClientConfiguration:bn,BgpSettings:hn,BgpPeerStatus:kn,GatewayRoute:zn,VirtualNetworkGateway:vn,VpnClientParameters:In,BgpPeerStatusListResult:En,GatewayRouteListResult:Mn,TunnelConnectionHealth:Vn,LocalNetworkGateway:xn,VirtualNetworkGatewayConnection:Fn,ConnectionResetSharedKey:qn,ConnectionSharedKey:Tn,VpnClientIPsecParameters:Ln,VirtualNetworkConnectionGatewayReference:Bn,VirtualNetworkGatewayConnectionListEntity:On,VpnDeviceScriptParameters:Dn,P2SVpnServerConfigVpnClientRootCertificate:Hn,P2SVpnServerConfigVpnClientRevokedCertificate:Un,P2SVpnServerConfigRadiusServerRootCertificate:Wn,P2SVpnServerConfigRadiusClientRootCertificate:_n,P2SVpnServerConfiguration:Kn,VirtualWAN:jn,DeviceProperties:Zn,VpnSite:Qn,GetVpnSitesConfigurationRequest:Xn,HubVirtualNetworkConnection:$n,VirtualHubRoute:Jn,VirtualHubRouteTable:Yn,VirtualHub:es,VpnConnection:ts,VpnGateway:rs,VpnSiteId:{serializedName:"VpnSiteId",type:{name:"Composite",className:"VpnSiteId",modelProperties:{vpnSite:{readOnly:!0,serializedName:"vpnSite",type:{name:"String"}}}}},VirtualWanSecurityProvider:{serializedName:"VirtualWanSecurityProvider",type:{name:"Composite",className:"VirtualWanSecurityProvider",modelProperties:{name:{serializedName:"name",type:{name:"String"}},url:{serializedName:"url",type:{name:"String"}},type:{serializedName:"type",type:{name:"String"}}}}},VirtualWanSecurityProviders:is,VpnClientConnectionHealth:as,P2SVpnGateway:os,P2SVpnProfileParameters:ns,VpnProfileResponse:ss,ApplicationGatewayListResult:ps,ApplicationGatewayAvailableSslPredefinedPolicies:us,ApplicationSecurityGroupListResult:ls,AvailableDelegationsResult:cs,AzureFirewallListResult:ds,AzureFirewallFqdnTagListResult:ms,DdosProtectionPlanListResult:ys,EndpointServicesListResult:Ps,AuthorizationListResult:Ns,ExpressRouteCircuitPeeringListResult:Cs,ExpressRouteCircuitListResult:ws,ExpressRouteServiceProviderListResult:Rs,ExpressRouteCrossConnectionListResult:fs,ExpressRouteCrossConnectionPeeringList:Ss,InterfaceEndpointListResult:gs,LoadBalancerListResult:As,LoadBalancerBackendAddressPoolListResult:Gs,LoadBalancerFrontendIPConfigurationListResult:bs,InboundNatRuleListResult:hs,LoadBalancerLoadBalancingRuleListResult:ks,NetworkInterfaceListResult:zs,LoadBalancerProbeListResult:vs,NetworkInterfaceIPConfigurationListResult:Is,NetworkInterfaceLoadBalancerListResult:Es,NetworkInterfaceTapConfigurationListResult:Ms,NetworkProfileListResult:Vs,NetworkSecurityGroupListResult:xs,SecurityRuleListResult:Fs,NetworkWatcherListResult:qs,PacketCaptureListResult:Ts,ConnectionMonitorListResult:Ls,OperationListResult:Bs,PublicIPAddressListResult:Os,PublicIPPrefixListResult:Ds,RouteFilterListResult:Hs,RouteFilterRuleListResult:Us,RouteTableListResult:Ws,RouteListResult:_s,BgpServiceCommunityListResult:Ks,ServiceEndpointPolicyListResult:js,ServiceEndpointPolicyDefinitionListResult:Zs,UsagesListResult:Qs,VirtualNetworkListResult:Xs,VirtualNetworkListUsageResult:$s,SubnetListResult:Js,VirtualNetworkPeeringListResult:Ys,VirtualNetworkTapListResult:ep,VirtualNetworkGatewayListResult:tp,VirtualNetworkGatewayListConnectionsResult:rp,VirtualNetworkGatewayConnectionListResult:ip,LocalNetworkGatewayListResult:ap,ListVirtualWANsResult:op,ListVpnSitesResult:np,ListVirtualHubsResult:sp,ListHubVirtualNetworkConnectionsResult:pp,ListVpnGatewaysResult:up,ListVpnConnectionsResult:lp,ListP2SVpnServerConfigurationsResult:cp,ListP2SVpnGatewaysResult:dp}),yp={parameterPath:"acceptLanguage",mapper:{serializedName:"accept-language",defaultValue:"en-US",type:{name:"String"}}},Pp={parameterPath:"apiVersion",mapper:{required:!0,isConstant:!0,serializedName:"api-version",defaultValue:"2018-08-01",type:{name:"String"}}},Np={parameterPath:"apiVersion",mapper:{required:!0,isConstant:!0,serializedName:"api-version",defaultValue:"2017-03-30",type:{name:"String"}}},Cp={parameterPath:"applicationGatewayName",mapper:{required:!0,serializedName:"applicationGatewayName",type:{name:"String"}}},wp={parameterPath:"applicationSecurityGroupName",mapper:{required:!0,serializedName:"applicationSecurityGroupName",type:{name:"String"}}},Rp={parameterPath:"authorizationName",mapper:{required:!0,serializedName:"authorizationName",type:{name:"String"}}},fp={parameterPath:"azureFirewallName",mapper:{required:!0,serializedName:"azureFirewallName",type:{name:"String"}}},Sp={parameterPath:"circuitName",mapper:{required:!0,serializedName:"circuitName",type:{name:"String"}}},gp={parameterPath:"connectionMonitorName",mapper:{required:!0,serializedName:"connectionMonitorName",type:{name:"String"}}},Ap={parameterPath:"connectionName",mapper:{required:!0,serializedName:"connectionName",type:{name:"String"}}},Gp={parameterPath:"crossConnectionName",mapper:{required:!0,serializedName:"crossConnectionName",type:{name:"String"}}},bp={parameterPath:"ddosProtectionPlanName",mapper:{required:!0,serializedName:"ddosProtectionPlanName",type:{name:"String"}}},hp={parameterPath:"devicePath",mapper:{required:!0,serializedName:"devicePath",type:{name:"String"}}},kp={parameterPath:["options","expand"],mapper:{serializedName:"$expand",type:{name:"String"}}},zp={parameterPath:"expressRouteGatewayName",mapper:{required:!0,serializedName:"expressRouteGatewayName",type:{name:"String"}}},vp={parameterPath:"gatewayName",mapper:{required:!0,serializedName:"gatewayName",type:{name:"String"}}},Ip={parameterPath:"inboundNatRuleName",mapper:{required:!0,serializedName:"inboundNatRuleName",type:{name:"String"}}},Ep={parameterPath:"interfaceEndpointName",mapper:{required:!0,serializedName:"interfaceEndpointName",type:{name:"String"}}},Mp={parameterPath:"ipConfigurationName",mapper:{required:!0,serializedName:"ipConfigurationName",type:{name:"String"}}},Vp={parameterPath:"loadBalancerName",mapper:{required:!0,serializedName:"loadBalancerName",type:{name:"String"}}},xp={parameterPath:"localNetworkGatewayName",mapper:{required:!0,serializedName:"localNetworkGatewayName",constraints:{MinLength:1},type:{name:"String"}}},Fp={parameterPath:"location",mapper:{required:!0,serializedName:"location",type:{name:"String"}}},qp={parameterPath:"networkInterfaceName",mapper:{required:!0,serializedName:"networkInterfaceName",type:{name:"String"}}},Tp={parameterPath:"networkProfileName",mapper:{required:!0,serializedName:"networkProfileName",type:{name:"String"}}},Lp={parameterPath:"networkSecurityGroupName",mapper:{required:!0,serializedName:"networkSecurityGroupName",type:{name:"String"}}},Bp={parameterPath:"networkWatcherName",mapper:{required:!0,serializedName:"networkWatcherName",type:{name:"String"}}},Op={parameterPath:"nextPageLink",mapper:{required:!0,serializedName:"nextLink",type:{name:"String"}},skipEncoding:!0},Dp={parameterPath:"p2SVpnServerConfigurationName",mapper:{required:!0,serializedName:"p2SVpnServerConfigurationName",type:{name:"String"}}},Hp={parameterPath:"packetCaptureName",mapper:{required:!0,serializedName:"packetCaptureName",type:{name:"String"}}},Up={parameterPath:"peeringName",mapper:{required:!0,serializedName:"peeringName",type:{name:"String"}}},Wp={parameterPath:"publicIpAddressName",mapper:{required:!0,serializedName:"publicIpAddressName",type:{name:"String"}}},_p={parameterPath:"publicIpPrefixName",mapper:{required:!0,serializedName:"publicIpPrefixName",type:{name:"String"}}},Kp={parameterPath:"resourceGroupName",mapper:{required:!0,serializedName:"resourceGroupName",type:{name:"String"}}},jp={parameterPath:"routeFilterName",mapper:{required:!0,serializedName:"routeFilterName",type:{name:"String"}}},Zp={parameterPath:"routeName",mapper:{required:!0,serializedName:"routeName",type:{name:"String"}}},Qp={parameterPath:"routeTableName",mapper:{required:!0,serializedName:"routeTableName",type:{name:"String"}}},Xp={parameterPath:"ruleName",mapper:{required:!0,serializedName:"ruleName",type:{name:"String"}}},$p={parameterPath:"securityRuleName",mapper:{required:!0,serializedName:"securityRuleName",type:{name:"String"}}},Jp={parameterPath:"serviceEndpointPolicyDefinitionName",mapper:{required:!0,serializedName:"serviceEndpointPolicyDefinitionName",type:{name:"String"}}},Yp={parameterPath:"serviceEndpointPolicyName",mapper:{required:!0,serializedName:"serviceEndpointPolicyName",type:{name:"String"}}},eu={parameterPath:"subnetName",mapper:{required:!0,serializedName:"subnetName",type:{name:"String"}}},tu={parameterPath:"subscriptionId",mapper:{required:!0,serializedName:"subscriptionId",type:{name:"String"}}},ru={parameterPath:"tapConfigurationName",mapper:{required:!0,serializedName:"tapConfigurationName",type:{name:"String"}}},iu={parameterPath:"tapName",mapper:{required:!0,serializedName:"tapName",type:{name:"String"}}},au={parameterPath:"virtualHubName",mapper:{required:!0,serializedName:"virtualHubName",type:{name:"String"}}},ou={parameterPath:"virtualmachineIndex",mapper:{required:!0,serializedName:"virtualmachineIndex",type:{name:"String"}}},nu={parameterPath:"virtualMachineScaleSetName",mapper:{required:!0,serializedName:"virtualMachineScaleSetName",type:{name:"String"}}},su={parameterPath:"virtualNetworkGatewayConnectionName",mapper:{required:!0,serializedName:"virtualNetworkGatewayConnectionName",type:{name:"String"}}},pu={parameterPath:"virtualNetworkGatewayName",mapper:{required:!0,serializedName:"virtualNetworkGatewayName",type:{name:"String"}}},uu={parameterPath:"virtualNetworkName",mapper:{required:!0,serializedName:"virtualNetworkName",type:{name:"String"}}},lu={parameterPath:"virtualNetworkPeeringName",mapper:{required:!0,serializedName:"virtualNetworkPeeringName",type:{name:"String"}}},cu={parameterPath:"virtualWanName",mapper:{required:!0,serializedName:"virtualWanName",type:{name:"String"}}},du={parameterPath:"virtualWANName",mapper:{required:!0,serializedName:"virtualWANName",type:{name:"String"}}},mu={parameterPath:"virtualWANName",mapper:{required:!0,serializedName:"VirtualWANName",type:{name:"String"}}},yu={parameterPath:"vpnSiteName",mapper:{required:!0,serializedName:"vpnSiteName",type:{name:"String"}}},Pu=Object.freeze({CloudError:mr,ApplicationGateway:Ci,Resource:Cr,BaseResource:yr,ApplicationGatewaySku:Yr,ApplicationGatewaySslPolicy:ei,ApplicationGatewayIPConfiguration:ti,SubResource:Pr,ApplicationGatewayAuthenticationCertificate:ri,ApplicationGatewayTrustedRootCertificate:ii,ApplicationGatewaySslCertificate:ai,ApplicationGatewayFrontendIPConfiguration:oi,ApplicationGatewayFrontendPort:ni,ApplicationGatewayProbe:li,ApplicationGatewayProbeHealthResponseMatch:ui,ApplicationGatewayBackendAddressPool:Kr,NetworkInterfaceIPConfiguration:Wr,VirtualNetworkTap:Dr,NetworkInterfaceTapConfiguration:Nr,FrontendIPConfiguration:Or,Subnet:Br,NetworkSecurityGroup:Gr,SecurityRule:Rr,ApplicationSecurityGroup:wr,NetworkInterface:Ar,InterfaceEndpoint:Sr,EndpointService:fr,NetworkInterfaceDnsSettings:gr,RouteTable:hr,Route:br,ServiceEndpointPropertiesFormat:kr,ServiceEndpointPolicy:vr,ServiceEndpointPolicyDefinition:zr,IPConfiguration:xr,PublicIPAddress:Vr,PublicIPAddressSku:Ir,PublicIPAddressDnsSettings:Er,IpTag:Mr,IPConfigurationProfile:Fr,ResourceNavigationLink:qr,ServiceAssociationLink:Tr,Delegation:Lr,BackendAddressPool:Hr,InboundNatRule:Ur,ApplicationGatewayBackendAddress:_r,ApplicationGatewayBackendHttpSettings:Zr,ApplicationGatewayConnectionDraining:jr,ApplicationGatewayHttpListener:si,ApplicationGatewayUrlPathMap:mi,ApplicationGatewayPathRule:pi,ApplicationGatewayRequestRoutingRule:ci,ApplicationGatewayRedirectConfiguration:di,ApplicationGatewayWebApplicationFirewallConfiguration:Pi,ApplicationGatewayFirewallDisabledRuleGroup:yi,ApplicationGatewayAutoscaleConfiguration:Ni,TagsObject:Gi,ApplicationGatewayListResult:ps,ApplicationGatewayBackendHealth:Jr,ApplicationGatewayBackendHealthPool:$r,ApplicationGatewayBackendHealthHttpSettings:Xr,ApplicationGatewayBackendHealthServer:Qr,ApplicationGatewayAvailableWafRuleSetsResult:Si,ApplicationGatewayFirewallRuleSet:fi,ApplicationGatewayFirewallRuleGroup:Ri,ApplicationGatewayFirewallRule:wi,ApplicationGatewayAvailableSslOptions:gi,ApplicationGatewayAvailableSslPredefinedPolicies:us,ApplicationGatewaySslPredefinedPolicy:Ai,AzureFirewallIPConfiguration:hi,AzureFirewallApplicationRuleCollection:Ii,AzureFirewallRCAction:ki,AzureFirewallApplicationRule:vi,AzureFirewallApplicationRuleProtocol:zi,AzureFirewallNatRuleCollection:Vi,AzureFirewallNatRCAction:Ei,AzureFirewallNatRule:Mi,AzureFirewallNetworkRuleCollection:Fi,AzureFirewallNetworkRule:xi,AzureFirewall:qi,AzureFirewallFqdnTag:Ti,DdosProtectionPlan:Bi,EndpointServiceResult:Oi,ExpressRouteCircuitAuthorization:Di,RouteFilterRule:Ui,ExpressRouteCircuitConnection:Ki,ExpressRouteCircuitPeering:ji,ExpressRouteCircuitPeeringConfig:Hi,ExpressRouteCircuitStats:Wi,RouteFilter:Zi,Ipv6ExpressRouteCircuitPeeringConfig:Qi,ExpressRouteConnectionId:_i,ExpressRouteCircuit:Ji,ExpressRouteCircuitSku:Xi,ExpressRouteCircuitServiceProviderProperties:$i,ExpressRouteServiceProvider:na,ExpressRouteServiceProviderBandwidthsOffered:oa,ExpressRouteCrossConnectionPeering:la,ExpressRouteCrossConnection:ca,ExpressRouteCircuitReference:ua,ExpressRouteConnection:Na,ExpressRouteCircuitPeeringId:ma,ExpressRouteGateway:Ca,ExpressRouteGatewayPropertiesAutoScaleConfiguration:Pa,ExpressRouteGatewayPropertiesAutoScaleConfigurationBounds:ya,VirtualHubId:da,LoadBalancingRule:Sa,Probe:ga,InboundNatPool:Aa,OutboundRule:Ga,LoadBalancer:ba,LoadBalancerSku:fa,ContainerNetworkInterfaceConfiguration:xa,ContainerNetworkInterface:Ta,Container:Fa,ContainerNetworkInterfaceIpConfiguration:qa,NetworkProfile:La,NetworkWatcher:Oa,ConnectionMonitorResult:Bo,ConnectionMonitorSource:qo,ConnectionMonitorDestination:To,PublicIPPrefix:nn,PublicIPPrefixSku:an,ReferencedPublicIpAddress:on,PatchRouteFilterRule:sn,PatchRouteFilter:pn,BgpServiceCommunity:ln,BGPCommunity:un,VirtualNetworkPeering:yn,AddressSpace:mn,VirtualNetwork:Nn,DhcpOptions:Pn,VirtualNetworkGatewayIPConfiguration:fn,VpnClientRootCertificate:gn,VpnClientRevokedCertificate:An,VirtualNetworkGateway:vn,VirtualNetworkGatewaySku:Sn,VpnClientConfiguration:bn,IpsecPolicy:Gn,BgpSettings:hn,LocalNetworkGateway:xn,VirtualNetworkGatewayConnection:Fn,TunnelConnectionHealth:Vn,ConnectionSharedKey:Tn,VirtualNetworkGatewayConnectionListEntity:On,VirtualNetworkConnectionGatewayReference:Bn,P2SVpnServerConfigVpnClientRootCertificate:Hn,P2SVpnServerConfigVpnClientRevokedCertificate:Un,P2SVpnServerConfigRadiusServerRootCertificate:Wn,P2SVpnServerConfigRadiusClientRootCertificate:_n,P2SVpnServerConfiguration:Kn,VirtualWAN:jn,VpnSite:Qn,DeviceProperties:Zn,HubVirtualNetworkConnection:$n,VirtualHub:es,VirtualHubRouteTable:Yn,VirtualHubRoute:Jn,VpnConnection:ts,VpnGateway:rs,P2SVpnGateway:os,VpnClientConnectionHealth:as}),Nu=function(){function e(e){this.client=e}return e.prototype.deleteMethod=function(e,t,r){return this.beginDeleteMethod(e,t,r).then(function(e){return e.pollUntilFinished()})},e.prototype.get=function(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,applicationGatewayName:t,options:r},wu,i)},e.prototype.createOrUpdate=function(e,t,r,i){return this.beginCreateOrUpdate(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.updateTags=function(e,t,r,i){return this.beginUpdateTags(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.list=function(e,t,r){return this.client.sendOperationRequest({resourceGroupName:e,options:t},Ru,r)},e.prototype.listAll=function(e,t){return this.client.sendOperationRequest({options:e},fu,t)},e.prototype.start=function(e,t,r){return this.beginStart(e,t,r).then(function(e){return e.pollUntilFinished()})},e.prototype.stop=function(e,t,r){return this.beginStop(e,t,r).then(function(e){return e.pollUntilFinished()})},e.prototype.backendHealth=function(e,t,r){return this.beginBackendHealth(e,t,r).then(function(e){return e.pollUntilFinished()})},e.prototype.listAvailableWafRuleSets=function(e,t){return this.client.sendOperationRequest({options:e},Su,t)},e.prototype.listAvailableSslOptions=function(e,t){return this.client.sendOperationRequest({options:e},gu,t)},e.prototype.listAvailableSslPredefinedPolicies=function(e,t){return this.client.sendOperationRequest({options:e},Au,t)},e.prototype.getSslPredefinedPolicy=function(e,t,r){return this.client.sendOperationRequest({predefinedPolicyName:e,options:t},Gu,r)},e.prototype.beginDeleteMethod=function(e,t,r){return this.client.sendLRORequest({resourceGroupName:e,applicationGatewayName:t,options:r},bu,r)},e.prototype.beginCreateOrUpdate=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,applicationGatewayName:t,parameters:r,options:i},hu,i)},e.prototype.beginUpdateTags=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,applicationGatewayName:t,parameters:r,options:i},ku,i)},e.prototype.beginStart=function(e,t,r){return this.client.sendLRORequest({resourceGroupName:e,applicationGatewayName:t,options:r},zu,r)},e.prototype.beginStop=function(e,t,r){return this.client.sendLRORequest({resourceGroupName:e,applicationGatewayName:t,options:r},vu,r)},e.prototype.beginBackendHealth=function(e,t,r){return this.client.sendLRORequest({resourceGroupName:e,applicationGatewayName:t,options:r},Iu,r)},e.prototype.listNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},Eu,r)},e.prototype.listAllNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},Mu,r)},e.prototype.listAvailableSslPredefinedPoliciesNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},Vu,r)},e}(),Cu=new r.Serializer(Pu),wu={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}",urlParameters:[Kp,Cp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:Ci},default:{bodyMapper:mr}},serializer:Cu},Ru={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways",urlParameters:[Kp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:ps},default:{bodyMapper:mr}},serializer:Cu},fu={httpMethod:"GET",path:"subscriptions/{subscriptionId}/providers/Microsoft.Network/applicationGateways",urlParameters:[tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:ps},default:{bodyMapper:mr}},serializer:Cu},Su={httpMethod:"GET",path:"subscriptions/{subscriptionId}/providers/Microsoft.Network/applicationGatewayAvailableWafRuleSets",urlParameters:[tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:Si},default:{bodyMapper:mr}},serializer:Cu},gu={httpMethod:"GET",path:"subscriptions/{subscriptionId}/providers/Microsoft.Network/applicationGatewayAvailableSslOptions/default",urlParameters:[tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:gi},default:{bodyMapper:mr}},serializer:Cu},Au={httpMethod:"GET",path:"subscriptions/{subscriptionId}/providers/Microsoft.Network/applicationGatewayAvailableSslOptions/default/predefinedPolicies",urlParameters:[tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:us},default:{bodyMapper:mr}},serializer:Cu},Gu={httpMethod:"GET",path:"subscriptions/{subscriptionId}/providers/Microsoft.Network/applicationGatewayAvailableSslOptions/default/predefinedPolicies/{predefinedPolicyName}",urlParameters:[tu,{parameterPath:"predefinedPolicyName",mapper:{required:!0,serializedName:"predefinedPolicyName",type:{name:"String"}}}],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:Ai},default:{bodyMapper:mr}},serializer:Cu},bu={httpMethod:"DELETE",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}",urlParameters:[Kp,Cp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{},202:{},204:{},default:{bodyMapper:mr}},serializer:Cu},hu={httpMethod:"PUT",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}",urlParameters:[Kp,Cp,tu],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"parameters",mapper:cr({},Ci,{required:!0})},responses:{200:{bodyMapper:Ci},201:{bodyMapper:Ci},default:{bodyMapper:mr}},serializer:Cu},ku={httpMethod:"PATCH",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}",urlParameters:[Kp,Cp,tu],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"parameters",mapper:cr({},Gi,{required:!0})},responses:{200:{bodyMapper:Ci},default:{bodyMapper:mr}},serializer:Cu},zu={httpMethod:"POST",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}/start",urlParameters:[Kp,Cp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{},202:{},default:{bodyMapper:mr}},serializer:Cu},vu={httpMethod:"POST",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}/stop",urlParameters:[Kp,Cp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{},202:{},default:{bodyMapper:mr}},serializer:Cu},Iu={httpMethod:"POST",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}/backendhealth",urlParameters:[Kp,Cp,tu],queryParameters:[Pp,kp],headerParameters:[yp],responses:{200:{bodyMapper:Jr},202:{},default:{bodyMapper:mr}},serializer:Cu},Eu={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:ps},default:{bodyMapper:mr}},serializer:Cu},Mu={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:ps},default:{bodyMapper:mr}},serializer:Cu},Vu={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:us},default:{bodyMapper:mr}},serializer:Cu},xu=Object.freeze({CloudError:mr,ApplicationSecurityGroup:wr,Resource:Cr,BaseResource:yr,ApplicationSecurityGroupListResult:ls,SubResource:Pr,SecurityRule:Rr,InterfaceEndpoint:Sr,EndpointService:fr,Subnet:Br,NetworkSecurityGroup:Gr,NetworkInterface:Ar,NetworkInterfaceIPConfiguration:Wr,VirtualNetworkTap:Dr,NetworkInterfaceTapConfiguration:Nr,FrontendIPConfiguration:Or,PublicIPAddress:Vr,PublicIPAddressSku:Ir,IPConfiguration:xr,PublicIPAddressDnsSettings:Er,IpTag:Mr,ApplicationGatewayBackendAddressPool:Kr,ApplicationGatewayBackendAddress:_r,BackendAddressPool:Hr,InboundNatRule:Ur,NetworkInterfaceDnsSettings:gr,RouteTable:hr,Route:br,ServiceEndpointPropertiesFormat:kr,ServiceEndpointPolicy:vr,ServiceEndpointPolicyDefinition:zr,IPConfigurationProfile:Fr,ResourceNavigationLink:qr,ServiceAssociationLink:Tr,Delegation:Lr,ApplicationGatewayBackendHttpSettings:Zr,ApplicationGatewayConnectionDraining:jr,ApplicationGatewayIPConfiguration:ti,ApplicationGatewayAuthenticationCertificate:ri,ApplicationGatewayTrustedRootCertificate:ii,ApplicationGatewaySslCertificate:ai,ApplicationGatewayFrontendIPConfiguration:oi,ApplicationGatewayFrontendPort:ni,ApplicationGatewayHttpListener:si,ApplicationGatewayPathRule:pi,ApplicationGatewayProbe:li,ApplicationGatewayProbeHealthResponseMatch:ui,ApplicationGatewayRequestRoutingRule:ci,ApplicationGatewayRedirectConfiguration:di,ApplicationGatewayUrlPathMap:mi,ApplicationGateway:Ci,ApplicationGatewaySku:Yr,ApplicationGatewaySslPolicy:ei,ApplicationGatewayWebApplicationFirewallConfiguration:Pi,ApplicationGatewayFirewallDisabledRuleGroup:yi,ApplicationGatewayAutoscaleConfiguration:Ni,ApplicationGatewayFirewallRuleSet:fi,ApplicationGatewayFirewallRuleGroup:Ri,ApplicationGatewayFirewallRule:wi,ApplicationGatewayAvailableSslOptions:gi,ApplicationGatewaySslPredefinedPolicy:Ai,AzureFirewallIPConfiguration:hi,AzureFirewallApplicationRuleCollection:Ii,AzureFirewallRCAction:ki,AzureFirewallApplicationRule:vi,AzureFirewallApplicationRuleProtocol:zi,AzureFirewallNatRuleCollection:Vi,AzureFirewallNatRCAction:Ei,AzureFirewallNatRule:Mi,AzureFirewallNetworkRuleCollection:Fi,AzureFirewallNetworkRule:xi,AzureFirewall:qi,AzureFirewallFqdnTag:Ti,DdosProtectionPlan:Bi,EndpointServiceResult:Oi,ExpressRouteCircuitAuthorization:Di,RouteFilterRule:Ui,ExpressRouteCircuitConnection:Ki,ExpressRouteCircuitPeering:ji,ExpressRouteCircuitPeeringConfig:Hi,ExpressRouteCircuitStats:Wi,RouteFilter:Zi,Ipv6ExpressRouteCircuitPeeringConfig:Qi,ExpressRouteConnectionId:_i,ExpressRouteCircuit:Ji,ExpressRouteCircuitSku:Xi,ExpressRouteCircuitServiceProviderProperties:$i,ExpressRouteServiceProvider:na,ExpressRouteServiceProviderBandwidthsOffered:oa,ExpressRouteCrossConnectionPeering:la,ExpressRouteCrossConnection:ca,ExpressRouteCircuitReference:ua,ExpressRouteConnection:Na,ExpressRouteCircuitPeeringId:ma,ExpressRouteGateway:Ca,ExpressRouteGatewayPropertiesAutoScaleConfiguration:Pa,ExpressRouteGatewayPropertiesAutoScaleConfigurationBounds:ya,VirtualHubId:da,LoadBalancingRule:Sa,Probe:ga,InboundNatPool:Aa,OutboundRule:Ga,LoadBalancer:ba,LoadBalancerSku:fa,ContainerNetworkInterfaceConfiguration:xa,ContainerNetworkInterface:Ta,Container:Fa,ContainerNetworkInterfaceIpConfiguration:qa,NetworkProfile:La,NetworkWatcher:Oa,ConnectionMonitorResult:Bo,ConnectionMonitorSource:qo,ConnectionMonitorDestination:To,PublicIPPrefix:nn,PublicIPPrefixSku:an,ReferencedPublicIpAddress:on,PatchRouteFilterRule:sn,PatchRouteFilter:pn,BgpServiceCommunity:ln,BGPCommunity:un,VirtualNetworkPeering:yn,AddressSpace:mn,VirtualNetwork:Nn,DhcpOptions:Pn,VirtualNetworkGatewayIPConfiguration:fn,VpnClientRootCertificate:gn,VpnClientRevokedCertificate:An,VirtualNetworkGateway:vn,VirtualNetworkGatewaySku:Sn,VpnClientConfiguration:bn,IpsecPolicy:Gn,BgpSettings:hn,LocalNetworkGateway:xn,VirtualNetworkGatewayConnection:Fn,TunnelConnectionHealth:Vn,ConnectionSharedKey:Tn,VirtualNetworkGatewayConnectionListEntity:On,VirtualNetworkConnectionGatewayReference:Bn,P2SVpnServerConfigVpnClientRootCertificate:Hn,P2SVpnServerConfigVpnClientRevokedCertificate:Un,P2SVpnServerConfigRadiusServerRootCertificate:Wn,P2SVpnServerConfigRadiusClientRootCertificate:_n,P2SVpnServerConfiguration:Kn,VirtualWAN:jn,VpnSite:Qn,DeviceProperties:Zn,HubVirtualNetworkConnection:$n,VirtualHub:es,VirtualHubRouteTable:Yn,VirtualHubRoute:Jn,VpnConnection:ts,VpnGateway:rs,P2SVpnGateway:os,VpnClientConnectionHealth:as}),Fu=function(){function e(e){this.client=e}return e.prototype.deleteMethod=function(e,t,r){return this.beginDeleteMethod(e,t,r).then(function(e){return e.pollUntilFinished()})},e.prototype.get=function(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,applicationSecurityGroupName:t,options:r},Tu,i)},e.prototype.createOrUpdate=function(e,t,r,i){return this.beginCreateOrUpdate(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.listAll=function(e,t){return this.client.sendOperationRequest({options:e},Lu,t)},e.prototype.list=function(e,t,r){return this.client.sendOperationRequest({resourceGroupName:e,options:t},Bu,r)},e.prototype.beginDeleteMethod=function(e,t,r){return this.client.sendLRORequest({resourceGroupName:e,applicationSecurityGroupName:t,options:r},Ou,r)},e.prototype.beginCreateOrUpdate=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,applicationSecurityGroupName:t,parameters:r,options:i},Du,i)},e.prototype.listAllNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},Hu,r)},e.prototype.listNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},Uu,r)},e}(),qu=new r.Serializer(xu),Tu={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationSecurityGroups/{applicationSecurityGroupName}",urlParameters:[Kp,wp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:wr},default:{bodyMapper:mr}},serializer:qu},Lu={httpMethod:"GET",path:"subscriptions/{subscriptionId}/providers/Microsoft.Network/applicationSecurityGroups",urlParameters:[tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:ls},default:{bodyMapper:mr}},serializer:qu},Bu={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationSecurityGroups",urlParameters:[Kp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:ls},default:{bodyMapper:mr}},serializer:qu},Ou={httpMethod:"DELETE",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationSecurityGroups/{applicationSecurityGroupName}",urlParameters:[Kp,wp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{},202:{},204:{},default:{bodyMapper:mr}},serializer:qu},Du={httpMethod:"PUT",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationSecurityGroups/{applicationSecurityGroupName}",urlParameters:[Kp,wp,tu],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"parameters",mapper:cr({},wr,{required:!0})},responses:{200:{bodyMapper:wr},201:{bodyMapper:wr},default:{bodyMapper:mr}},serializer:qu},Hu={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:ls},default:{bodyMapper:mr}},serializer:qu},Uu={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:ls},default:{bodyMapper:mr}},serializer:qu},Wu=Object.freeze({AvailableDelegationsResult:cs,AvailableDelegation:bi,CloudError:mr}),_u=function(){function e(e){this.client=e}return e.prototype.list=function(e,t,r){return this.client.sendOperationRequest({location:e,options:t},ju,r)},e.prototype.listNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},Zu,r)},e}(),Ku=new r.Serializer(Wu),ju={httpMethod:"GET",path:"subscriptions/{subscriptionId}/providers/Microsoft.Network/locations/{location}/availableDelegations",urlParameters:[Fp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:cs},default:{bodyMapper:mr}},serializer:Ku},Zu={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:cs},default:{bodyMapper:mr}},serializer:Ku},Qu=Object.freeze({AvailableDelegationsResult:cs,AvailableDelegation:bi,CloudError:mr}),Xu=function(){function e(e){this.client=e}return e.prototype.list=function(e,t,r,i){return this.client.sendOperationRequest({location:e,resourceGroupName:t,options:r},Ju,i)},e.prototype.listNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},Yu,r)},e}(),$u=new r.Serializer(Qu),Ju={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/locations/{location}/availableDelegations",urlParameters:[Fp,Kp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:cs},default:{bodyMapper:mr}},serializer:$u},Yu={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:cs},default:{bodyMapper:mr}},serializer:$u},el=Object.freeze({CloudError:mr,AzureFirewall:qi,Resource:Cr,BaseResource:yr,AzureFirewallApplicationRuleCollection:Ii,SubResource:Pr,AzureFirewallRCAction:ki,AzureFirewallApplicationRule:vi,AzureFirewallApplicationRuleProtocol:zi,AzureFirewallNatRuleCollection:Vi,AzureFirewallNatRCAction:Ei,AzureFirewallNatRule:Mi,AzureFirewallNetworkRuleCollection:Fi,AzureFirewallNetworkRule:xi,AzureFirewallIPConfiguration:hi,AzureFirewallListResult:ds,NetworkInterfaceTapConfiguration:Nr,VirtualNetworkTap:Dr,NetworkInterfaceIPConfiguration:Wr,ApplicationGatewayBackendAddressPool:Kr,ApplicationGatewayBackendAddress:_r,BackendAddressPool:Hr,InboundNatRule:Ur,Subnet:Br,NetworkSecurityGroup:Gr,SecurityRule:Rr,ApplicationSecurityGroup:wr,NetworkInterface:Ar,InterfaceEndpoint:Sr,EndpointService:fr,NetworkInterfaceDnsSettings:gr,RouteTable:hr,Route:br,ServiceEndpointPropertiesFormat:kr,ServiceEndpointPolicy:vr,ServiceEndpointPolicyDefinition:zr,IPConfiguration:xr,PublicIPAddress:Vr,PublicIPAddressSku:Ir,PublicIPAddressDnsSettings:Er,IpTag:Mr,IPConfigurationProfile:Fr,ResourceNavigationLink:qr,ServiceAssociationLink:Tr,Delegation:Lr,FrontendIPConfiguration:Or,ApplicationGatewayBackendHttpSettings:Zr,ApplicationGatewayConnectionDraining:jr,ApplicationGatewayIPConfiguration:ti,ApplicationGatewayAuthenticationCertificate:ri,ApplicationGatewayTrustedRootCertificate:ii,ApplicationGatewaySslCertificate:ai,ApplicationGatewayFrontendIPConfiguration:oi,ApplicationGatewayFrontendPort:ni,ApplicationGatewayHttpListener:si,ApplicationGatewayPathRule:pi,ApplicationGatewayProbe:li,ApplicationGatewayProbeHealthResponseMatch:ui,ApplicationGatewayRequestRoutingRule:ci,ApplicationGatewayRedirectConfiguration:di,ApplicationGatewayUrlPathMap:mi,ApplicationGateway:Ci,ApplicationGatewaySku:Yr,ApplicationGatewaySslPolicy:ei,ApplicationGatewayWebApplicationFirewallConfiguration:Pi,ApplicationGatewayFirewallDisabledRuleGroup:yi,ApplicationGatewayAutoscaleConfiguration:Ni,ApplicationGatewayFirewallRuleSet:fi,ApplicationGatewayFirewallRuleGroup:Ri,ApplicationGatewayFirewallRule:wi,ApplicationGatewayAvailableSslOptions:gi,ApplicationGatewaySslPredefinedPolicy:Ai,AzureFirewallFqdnTag:Ti,DdosProtectionPlan:Bi,EndpointServiceResult:Oi,ExpressRouteCircuitAuthorization:Di,RouteFilterRule:Ui,ExpressRouteCircuitConnection:Ki,ExpressRouteCircuitPeering:ji,ExpressRouteCircuitPeeringConfig:Hi,ExpressRouteCircuitStats:Wi,RouteFilter:Zi,Ipv6ExpressRouteCircuitPeeringConfig:Qi,ExpressRouteConnectionId:_i,ExpressRouteCircuit:Ji,ExpressRouteCircuitSku:Xi,ExpressRouteCircuitServiceProviderProperties:$i,ExpressRouteServiceProvider:na,ExpressRouteServiceProviderBandwidthsOffered:oa,ExpressRouteCrossConnectionPeering:la,ExpressRouteCrossConnection:ca,ExpressRouteCircuitReference:ua,ExpressRouteConnection:Na,ExpressRouteCircuitPeeringId:ma,ExpressRouteGateway:Ca,ExpressRouteGatewayPropertiesAutoScaleConfiguration:Pa,ExpressRouteGatewayPropertiesAutoScaleConfigurationBounds:ya,VirtualHubId:da,LoadBalancingRule:Sa,Probe:ga,InboundNatPool:Aa,OutboundRule:Ga,LoadBalancer:ba,LoadBalancerSku:fa,ContainerNetworkInterfaceConfiguration:xa,ContainerNetworkInterface:Ta,Container:Fa,ContainerNetworkInterfaceIpConfiguration:qa,NetworkProfile:La,NetworkWatcher:Oa,ConnectionMonitorResult:Bo,ConnectionMonitorSource:qo,ConnectionMonitorDestination:To,PublicIPPrefix:nn,PublicIPPrefixSku:an,ReferencedPublicIpAddress:on,PatchRouteFilterRule:sn,PatchRouteFilter:pn,BgpServiceCommunity:ln,BGPCommunity:un,VirtualNetworkPeering:yn,AddressSpace:mn,VirtualNetwork:Nn,DhcpOptions:Pn,VirtualNetworkGatewayIPConfiguration:fn,VpnClientRootCertificate:gn,VpnClientRevokedCertificate:An,VirtualNetworkGateway:vn,VirtualNetworkGatewaySku:Sn,VpnClientConfiguration:bn,IpsecPolicy:Gn,BgpSettings:hn,LocalNetworkGateway:xn,VirtualNetworkGatewayConnection:Fn,TunnelConnectionHealth:Vn,ConnectionSharedKey:Tn,VirtualNetworkGatewayConnectionListEntity:On,VirtualNetworkConnectionGatewayReference:Bn,P2SVpnServerConfigVpnClientRootCertificate:Hn,P2SVpnServerConfigVpnClientRevokedCertificate:Un,P2SVpnServerConfigRadiusServerRootCertificate:Wn,P2SVpnServerConfigRadiusClientRootCertificate:_n,P2SVpnServerConfiguration:Kn,VirtualWAN:jn,VpnSite:Qn,DeviceProperties:Zn,HubVirtualNetworkConnection:$n,VirtualHub:es,VirtualHubRouteTable:Yn,VirtualHubRoute:Jn,VpnConnection:ts,VpnGateway:rs,P2SVpnGateway:os,VpnClientConnectionHealth:as}),tl=function(){function e(e){this.client=e}return e.prototype.deleteMethod=function(e,t,r){return this.beginDeleteMethod(e,t,r).then(function(e){return e.pollUntilFinished()})},e.prototype.get=function(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,azureFirewallName:t,options:r},il,i)},e.prototype.createOrUpdate=function(e,t,r,i){return this.beginCreateOrUpdate(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.list=function(e,t,r){return this.client.sendOperationRequest({resourceGroupName:e,options:t},al,r)},e.prototype.listAll=function(e,t){return this.client.sendOperationRequest({options:e},ol,t)},e.prototype.beginDeleteMethod=function(e,t,r){return this.client.sendLRORequest({resourceGroupName:e,azureFirewallName:t,options:r},nl,r)},e.prototype.beginCreateOrUpdate=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,azureFirewallName:t,parameters:r,options:i},sl,i)},e.prototype.listNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},pl,r)},e.prototype.listAllNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},ul,r)},e}(),rl=new r.Serializer(el),il={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/azureFirewalls/{azureFirewallName}",urlParameters:[Kp,fp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:qi},default:{bodyMapper:mr}},serializer:rl},al={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/azureFirewalls",urlParameters:[Kp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:ds},default:{bodyMapper:mr}},serializer:rl},ol={httpMethod:"GET",path:"subscriptions/{subscriptionId}/providers/Microsoft.Network/azureFirewalls",urlParameters:[tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:ds},default:{bodyMapper:mr}},serializer:rl},nl={httpMethod:"DELETE",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/azureFirewalls/{azureFirewallName}",urlParameters:[Kp,fp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{},202:{},204:{},default:{bodyMapper:mr}},serializer:rl},sl={httpMethod:"PUT",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/azureFirewalls/{azureFirewallName}",urlParameters:[Kp,fp,tu],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"parameters",mapper:cr({},qi,{required:!0})},responses:{200:{bodyMapper:qi},201:{bodyMapper:qi},default:{bodyMapper:mr}},serializer:rl},pl={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:ds},default:{bodyMapper:mr}},serializer:rl},ul={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:ds},default:{bodyMapper:mr}},serializer:rl},ll=Object.freeze({AzureFirewallFqdnTagListResult:ms,AzureFirewallFqdnTag:Ti,Resource:Cr,BaseResource:yr,CloudError:mr,SubResource:Pr,ApplicationSecurityGroup:wr,SecurityRule:Rr,InterfaceEndpoint:Sr,EndpointService:fr,Subnet:Br,NetworkSecurityGroup:Gr,NetworkInterface:Ar,NetworkInterfaceIPConfiguration:Wr,VirtualNetworkTap:Dr,NetworkInterfaceTapConfiguration:Nr,FrontendIPConfiguration:Or,PublicIPAddress:Vr,PublicIPAddressSku:Ir,IPConfiguration:xr,PublicIPAddressDnsSettings:Er,IpTag:Mr,ApplicationGatewayBackendAddressPool:Kr,ApplicationGatewayBackendAddress:_r,BackendAddressPool:Hr,InboundNatRule:Ur,NetworkInterfaceDnsSettings:gr,RouteTable:hr,Route:br,ServiceEndpointPropertiesFormat:kr,ServiceEndpointPolicy:vr,ServiceEndpointPolicyDefinition:zr,IPConfigurationProfile:Fr,ResourceNavigationLink:qr,ServiceAssociationLink:Tr,Delegation:Lr,ApplicationGatewayBackendHttpSettings:Zr,ApplicationGatewayConnectionDraining:jr,ApplicationGatewayIPConfiguration:ti,ApplicationGatewayAuthenticationCertificate:ri,ApplicationGatewayTrustedRootCertificate:ii,ApplicationGatewaySslCertificate:ai,ApplicationGatewayFrontendIPConfiguration:oi,ApplicationGatewayFrontendPort:ni,ApplicationGatewayHttpListener:si,ApplicationGatewayPathRule:pi,ApplicationGatewayProbe:li,ApplicationGatewayProbeHealthResponseMatch:ui,ApplicationGatewayRequestRoutingRule:ci,ApplicationGatewayRedirectConfiguration:di,ApplicationGatewayUrlPathMap:mi,ApplicationGateway:Ci,ApplicationGatewaySku:Yr,ApplicationGatewaySslPolicy:ei,ApplicationGatewayWebApplicationFirewallConfiguration:Pi,ApplicationGatewayFirewallDisabledRuleGroup:yi,ApplicationGatewayAutoscaleConfiguration:Ni,ApplicationGatewayFirewallRuleSet:fi,ApplicationGatewayFirewallRuleGroup:Ri,ApplicationGatewayFirewallRule:wi,ApplicationGatewayAvailableSslOptions:gi,ApplicationGatewaySslPredefinedPolicy:Ai,AzureFirewallIPConfiguration:hi,AzureFirewallApplicationRuleCollection:Ii,AzureFirewallRCAction:ki,AzureFirewallApplicationRule:vi,AzureFirewallApplicationRuleProtocol:zi,AzureFirewallNatRuleCollection:Vi,AzureFirewallNatRCAction:Ei,AzureFirewallNatRule:Mi,AzureFirewallNetworkRuleCollection:Fi,AzureFirewallNetworkRule:xi,AzureFirewall:qi,DdosProtectionPlan:Bi,EndpointServiceResult:Oi,ExpressRouteCircuitAuthorization:Di,RouteFilterRule:Ui,ExpressRouteCircuitConnection:Ki,ExpressRouteCircuitPeering:ji,ExpressRouteCircuitPeeringConfig:Hi,ExpressRouteCircuitStats:Wi,RouteFilter:Zi,Ipv6ExpressRouteCircuitPeeringConfig:Qi,ExpressRouteConnectionId:_i,ExpressRouteCircuit:Ji,ExpressRouteCircuitSku:Xi,ExpressRouteCircuitServiceProviderProperties:$i,ExpressRouteServiceProvider:na,ExpressRouteServiceProviderBandwidthsOffered:oa,ExpressRouteCrossConnectionPeering:la,ExpressRouteCrossConnection:ca,ExpressRouteCircuitReference:ua,ExpressRouteConnection:Na,ExpressRouteCircuitPeeringId:ma,ExpressRouteGateway:Ca,ExpressRouteGatewayPropertiesAutoScaleConfiguration:Pa,ExpressRouteGatewayPropertiesAutoScaleConfigurationBounds:ya,VirtualHubId:da,LoadBalancingRule:Sa,Probe:ga,InboundNatPool:Aa,OutboundRule:Ga,LoadBalancer:ba,LoadBalancerSku:fa,ContainerNetworkInterfaceConfiguration:xa,ContainerNetworkInterface:Ta,Container:Fa,ContainerNetworkInterfaceIpConfiguration:qa,NetworkProfile:La,NetworkWatcher:Oa,ConnectionMonitorResult:Bo,ConnectionMonitorSource:qo,ConnectionMonitorDestination:To,PublicIPPrefix:nn,PublicIPPrefixSku:an,ReferencedPublicIpAddress:on,PatchRouteFilterRule:sn,PatchRouteFilter:pn,BgpServiceCommunity:ln,BGPCommunity:un,VirtualNetworkPeering:yn,AddressSpace:mn,VirtualNetwork:Nn,DhcpOptions:Pn,VirtualNetworkGatewayIPConfiguration:fn,VpnClientRootCertificate:gn,VpnClientRevokedCertificate:An,VirtualNetworkGateway:vn,VirtualNetworkGatewaySku:Sn,VpnClientConfiguration:bn,IpsecPolicy:Gn,BgpSettings:hn,LocalNetworkGateway:xn,VirtualNetworkGatewayConnection:Fn,TunnelConnectionHealth:Vn,ConnectionSharedKey:Tn,VirtualNetworkGatewayConnectionListEntity:On,VirtualNetworkConnectionGatewayReference:Bn,P2SVpnServerConfigVpnClientRootCertificate:Hn,P2SVpnServerConfigVpnClientRevokedCertificate:Un,P2SVpnServerConfigRadiusServerRootCertificate:Wn,P2SVpnServerConfigRadiusClientRootCertificate:_n,P2SVpnServerConfiguration:Kn,VirtualWAN:jn,VpnSite:Qn,DeviceProperties:Zn,HubVirtualNetworkConnection:$n,VirtualHub:es,VirtualHubRouteTable:Yn,VirtualHubRoute:Jn,VpnConnection:ts,VpnGateway:rs,P2SVpnGateway:os,VpnClientConnectionHealth:as}),cl=function(){function e(e){this.client=e}return e.prototype.listAll=function(e,t){return this.client.sendOperationRequest({options:e},ml,t)},e.prototype.listAllNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},yl,r)},e}(),dl=new r.Serializer(ll),ml={httpMethod:"GET",path:"subscriptions/{subscriptionId}/providers/Microsoft.Network/azureFirewallFqdnTags",urlParameters:[tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:ms},default:{bodyMapper:mr}},serializer:dl},yl={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:ms},default:{bodyMapper:mr}},serializer:dl},Pl=Object.freeze({CloudError:mr,DdosProtectionPlan:Bi,BaseResource:yr,SubResource:Pr,DdosProtectionPlanListResult:ys,NetworkInterfaceTapConfiguration:Nr,VirtualNetworkTap:Dr,Resource:Cr,NetworkInterfaceIPConfiguration:Wr,ApplicationGatewayBackendAddressPool:Kr,ApplicationGatewayBackendAddress:_r,BackendAddressPool:Hr,InboundNatRule:Ur,Subnet:Br,NetworkSecurityGroup:Gr,SecurityRule:Rr,ApplicationSecurityGroup:wr,NetworkInterface:Ar,InterfaceEndpoint:Sr,EndpointService:fr,NetworkInterfaceDnsSettings:gr,RouteTable:hr,Route:br,ServiceEndpointPropertiesFormat:kr,ServiceEndpointPolicy:vr,ServiceEndpointPolicyDefinition:zr,IPConfiguration:xr,PublicIPAddress:Vr,PublicIPAddressSku:Ir,PublicIPAddressDnsSettings:Er,IpTag:Mr,IPConfigurationProfile:Fr,ResourceNavigationLink:qr,ServiceAssociationLink:Tr,Delegation:Lr,FrontendIPConfiguration:Or,ApplicationGatewayBackendHttpSettings:Zr,ApplicationGatewayConnectionDraining:jr,ApplicationGatewayIPConfiguration:ti,ApplicationGatewayAuthenticationCertificate:ri,ApplicationGatewayTrustedRootCertificate:ii,ApplicationGatewaySslCertificate:ai,ApplicationGatewayFrontendIPConfiguration:oi,ApplicationGatewayFrontendPort:ni,ApplicationGatewayHttpListener:si,ApplicationGatewayPathRule:pi,ApplicationGatewayProbe:li,ApplicationGatewayProbeHealthResponseMatch:ui,ApplicationGatewayRequestRoutingRule:ci,ApplicationGatewayRedirectConfiguration:di,ApplicationGatewayUrlPathMap:mi,ApplicationGateway:Ci,ApplicationGatewaySku:Yr,ApplicationGatewaySslPolicy:ei,ApplicationGatewayWebApplicationFirewallConfiguration:Pi,ApplicationGatewayFirewallDisabledRuleGroup:yi,ApplicationGatewayAutoscaleConfiguration:Ni,ApplicationGatewayFirewallRuleSet:fi,ApplicationGatewayFirewallRuleGroup:Ri,ApplicationGatewayFirewallRule:wi,ApplicationGatewayAvailableSslOptions:gi,ApplicationGatewaySslPredefinedPolicy:Ai,AzureFirewallIPConfiguration:hi,AzureFirewallApplicationRuleCollection:Ii,AzureFirewallRCAction:ki,AzureFirewallApplicationRule:vi,AzureFirewallApplicationRuleProtocol:zi,AzureFirewallNatRuleCollection:Vi,AzureFirewallNatRCAction:Ei,AzureFirewallNatRule:Mi,AzureFirewallNetworkRuleCollection:Fi,AzureFirewallNetworkRule:xi,AzureFirewall:qi,AzureFirewallFqdnTag:Ti,EndpointServiceResult:Oi,ExpressRouteCircuitAuthorization:Di,RouteFilterRule:Ui,ExpressRouteCircuitConnection:Ki,ExpressRouteCircuitPeering:ji,ExpressRouteCircuitPeeringConfig:Hi,ExpressRouteCircuitStats:Wi,RouteFilter:Zi,Ipv6ExpressRouteCircuitPeeringConfig:Qi,ExpressRouteConnectionId:_i,ExpressRouteCircuit:Ji,ExpressRouteCircuitSku:Xi,ExpressRouteCircuitServiceProviderProperties:$i,ExpressRouteServiceProvider:na,ExpressRouteServiceProviderBandwidthsOffered:oa,ExpressRouteCrossConnectionPeering:la,ExpressRouteCrossConnection:ca,ExpressRouteCircuitReference:ua,ExpressRouteConnection:Na,ExpressRouteCircuitPeeringId:ma,ExpressRouteGateway:Ca,ExpressRouteGatewayPropertiesAutoScaleConfiguration:Pa,ExpressRouteGatewayPropertiesAutoScaleConfigurationBounds:ya,VirtualHubId:da,LoadBalancingRule:Sa,Probe:ga,InboundNatPool:Aa,OutboundRule:Ga,LoadBalancer:ba,LoadBalancerSku:fa,ContainerNetworkInterfaceConfiguration:xa,ContainerNetworkInterface:Ta,Container:Fa,ContainerNetworkInterfaceIpConfiguration:qa,NetworkProfile:La,NetworkWatcher:Oa,ConnectionMonitorResult:Bo,ConnectionMonitorSource:qo,ConnectionMonitorDestination:To,PublicIPPrefix:nn,PublicIPPrefixSku:an,ReferencedPublicIpAddress:on,PatchRouteFilterRule:sn,PatchRouteFilter:pn,BgpServiceCommunity:ln,BGPCommunity:un,VirtualNetworkPeering:yn,AddressSpace:mn,VirtualNetwork:Nn,DhcpOptions:Pn,VirtualNetworkGatewayIPConfiguration:fn,VpnClientRootCertificate:gn,VpnClientRevokedCertificate:An,VirtualNetworkGateway:vn,VirtualNetworkGatewaySku:Sn,VpnClientConfiguration:bn,IpsecPolicy:Gn,BgpSettings:hn,LocalNetworkGateway:xn,VirtualNetworkGatewayConnection:Fn,TunnelConnectionHealth:Vn,ConnectionSharedKey:Tn,VirtualNetworkGatewayConnectionListEntity:On,VirtualNetworkConnectionGatewayReference:Bn,P2SVpnServerConfigVpnClientRootCertificate:Hn,P2SVpnServerConfigVpnClientRevokedCertificate:Un,P2SVpnServerConfigRadiusServerRootCertificate:Wn,P2SVpnServerConfigRadiusClientRootCertificate:_n,P2SVpnServerConfiguration:Kn,VirtualWAN:jn,VpnSite:Qn,DeviceProperties:Zn,HubVirtualNetworkConnection:$n,VirtualHub:es,VirtualHubRouteTable:Yn,VirtualHubRoute:Jn,VpnConnection:ts,VpnGateway:rs,P2SVpnGateway:os,VpnClientConnectionHealth:as}),Nl=function(){function e(e){this.client=e}return e.prototype.deleteMethod=function(e,t,r){return this.beginDeleteMethod(e,t,r).then(function(e){return e.pollUntilFinished()})},e.prototype.get=function(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,ddosProtectionPlanName:t,options:r},wl,i)},e.prototype.createOrUpdate=function(e,t,r,i){return this.beginCreateOrUpdate(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.list=function(e,t){return this.client.sendOperationRequest({options:e},Rl,t)},e.prototype.listByResourceGroup=function(e,t,r){return this.client.sendOperationRequest({resourceGroupName:e,options:t},fl,r)},e.prototype.beginDeleteMethod=function(e,t,r){return this.client.sendLRORequest({resourceGroupName:e,ddosProtectionPlanName:t,options:r},Sl,r)},e.prototype.beginCreateOrUpdate=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,ddosProtectionPlanName:t,parameters:r,options:i},gl,i)},e.prototype.listNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},Al,r)},e.prototype.listByResourceGroupNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},Gl,r)},e}(),Cl=new r.Serializer(Pl),wl={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ddosProtectionPlans/{ddosProtectionPlanName}",urlParameters:[Kp,bp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:Bi},default:{bodyMapper:mr}},serializer:Cl},Rl={httpMethod:"GET",path:"subscriptions/{subscriptionId}/providers/Microsoft.Network/ddosProtectionPlans",urlParameters:[tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:ys},default:{bodyMapper:mr}},serializer:Cl},fl={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ddosProtectionPlans",urlParameters:[Kp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:ys},default:{bodyMapper:mr}},serializer:Cl},Sl={httpMethod:"DELETE",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ddosProtectionPlans/{ddosProtectionPlanName}",urlParameters:[Kp,bp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{},202:{},204:{},default:{bodyMapper:mr}},serializer:Cl},gl={httpMethod:"PUT",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ddosProtectionPlans/{ddosProtectionPlanName}",urlParameters:[Kp,bp,tu],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"parameters",mapper:cr({},Bi,{required:!0})},responses:{200:{bodyMapper:Bi},201:{bodyMapper:Bi},default:{bodyMapper:mr}},serializer:Cl},Al={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:ys},default:{bodyMapper:mr}},serializer:Cl},Gl={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:ys},default:{bodyMapper:mr}},serializer:Cl},bl=Object.freeze({EndpointServicesListResult:Ps,EndpointServiceResult:Oi,SubResource:Pr,BaseResource:yr,CloudError:mr,NetworkInterfaceTapConfiguration:Nr,VirtualNetworkTap:Dr,Resource:Cr,NetworkInterfaceIPConfiguration:Wr,ApplicationGatewayBackendAddressPool:Kr,ApplicationGatewayBackendAddress:_r,BackendAddressPool:Hr,InboundNatRule:Ur,Subnet:Br,NetworkSecurityGroup:Gr,SecurityRule:Rr,ApplicationSecurityGroup:wr,NetworkInterface:Ar,InterfaceEndpoint:Sr,EndpointService:fr,NetworkInterfaceDnsSettings:gr,RouteTable:hr,Route:br,ServiceEndpointPropertiesFormat:kr,ServiceEndpointPolicy:vr,ServiceEndpointPolicyDefinition:zr,IPConfiguration:xr,PublicIPAddress:Vr,PublicIPAddressSku:Ir,PublicIPAddressDnsSettings:Er,IpTag:Mr,IPConfigurationProfile:Fr,ResourceNavigationLink:qr,ServiceAssociationLink:Tr,Delegation:Lr,FrontendIPConfiguration:Or,ApplicationGatewayBackendHttpSettings:Zr,ApplicationGatewayConnectionDraining:jr,ApplicationGatewayIPConfiguration:ti,ApplicationGatewayAuthenticationCertificate:ri,ApplicationGatewayTrustedRootCertificate:ii,ApplicationGatewaySslCertificate:ai,ApplicationGatewayFrontendIPConfiguration:oi,ApplicationGatewayFrontendPort:ni,ApplicationGatewayHttpListener:si,ApplicationGatewayPathRule:pi,ApplicationGatewayProbe:li,ApplicationGatewayProbeHealthResponseMatch:ui,ApplicationGatewayRequestRoutingRule:ci,ApplicationGatewayRedirectConfiguration:di,ApplicationGatewayUrlPathMap:mi,ApplicationGateway:Ci,ApplicationGatewaySku:Yr,ApplicationGatewaySslPolicy:ei,ApplicationGatewayWebApplicationFirewallConfiguration:Pi,ApplicationGatewayFirewallDisabledRuleGroup:yi,ApplicationGatewayAutoscaleConfiguration:Ni,ApplicationGatewayFirewallRuleSet:fi,ApplicationGatewayFirewallRuleGroup:Ri,ApplicationGatewayFirewallRule:wi,ApplicationGatewayAvailableSslOptions:gi,ApplicationGatewaySslPredefinedPolicy:Ai,AzureFirewallIPConfiguration:hi,AzureFirewallApplicationRuleCollection:Ii,AzureFirewallRCAction:ki,AzureFirewallApplicationRule:vi,AzureFirewallApplicationRuleProtocol:zi,AzureFirewallNatRuleCollection:Vi,AzureFirewallNatRCAction:Ei,AzureFirewallNatRule:Mi,AzureFirewallNetworkRuleCollection:Fi,AzureFirewallNetworkRule:xi,AzureFirewall:qi,AzureFirewallFqdnTag:Ti,DdosProtectionPlan:Bi,ExpressRouteCircuitAuthorization:Di,RouteFilterRule:Ui,ExpressRouteCircuitConnection:Ki,ExpressRouteCircuitPeering:ji,ExpressRouteCircuitPeeringConfig:Hi,ExpressRouteCircuitStats:Wi,RouteFilter:Zi,Ipv6ExpressRouteCircuitPeeringConfig:Qi,ExpressRouteConnectionId:_i,ExpressRouteCircuit:Ji,ExpressRouteCircuitSku:Xi,ExpressRouteCircuitServiceProviderProperties:$i,ExpressRouteServiceProvider:na,ExpressRouteServiceProviderBandwidthsOffered:oa,ExpressRouteCrossConnectionPeering:la,ExpressRouteCrossConnection:ca,ExpressRouteCircuitReference:ua,ExpressRouteConnection:Na,ExpressRouteCircuitPeeringId:ma,ExpressRouteGateway:Ca,ExpressRouteGatewayPropertiesAutoScaleConfiguration:Pa,ExpressRouteGatewayPropertiesAutoScaleConfigurationBounds:ya,VirtualHubId:da,LoadBalancingRule:Sa,Probe:ga,InboundNatPool:Aa,OutboundRule:Ga,LoadBalancer:ba,LoadBalancerSku:fa,ContainerNetworkInterfaceConfiguration:xa,ContainerNetworkInterface:Ta,Container:Fa,ContainerNetworkInterfaceIpConfiguration:qa,NetworkProfile:La,NetworkWatcher:Oa,ConnectionMonitorResult:Bo,ConnectionMonitorSource:qo,ConnectionMonitorDestination:To,PublicIPPrefix:nn,PublicIPPrefixSku:an,ReferencedPublicIpAddress:on,PatchRouteFilterRule:sn,PatchRouteFilter:pn,BgpServiceCommunity:ln,BGPCommunity:un,VirtualNetworkPeering:yn,AddressSpace:mn,VirtualNetwork:Nn,DhcpOptions:Pn,VirtualNetworkGatewayIPConfiguration:fn,VpnClientRootCertificate:gn,VpnClientRevokedCertificate:An,VirtualNetworkGateway:vn,VirtualNetworkGatewaySku:Sn,VpnClientConfiguration:bn,IpsecPolicy:Gn,BgpSettings:hn,LocalNetworkGateway:xn,VirtualNetworkGatewayConnection:Fn,TunnelConnectionHealth:Vn,ConnectionSharedKey:Tn,VirtualNetworkGatewayConnectionListEntity:On,VirtualNetworkConnectionGatewayReference:Bn,P2SVpnServerConfigVpnClientRootCertificate:Hn,P2SVpnServerConfigVpnClientRevokedCertificate:Un,P2SVpnServerConfigRadiusServerRootCertificate:Wn,P2SVpnServerConfigRadiusClientRootCertificate:_n,P2SVpnServerConfiguration:Kn,VirtualWAN:jn,VpnSite:Qn,DeviceProperties:Zn,HubVirtualNetworkConnection:$n,VirtualHub:es,VirtualHubRouteTable:Yn,VirtualHubRoute:Jn,VpnConnection:ts,VpnGateway:rs,P2SVpnGateway:os,VpnClientConnectionHealth:as}),hl=function(){function e(e){this.client=e}return e.prototype.list=function(e,t,r){return this.client.sendOperationRequest({location:e,options:t},zl,r)},e.prototype.listNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},vl,r)},e}(),kl=new r.Serializer(bl),zl={httpMethod:"GET",path:"subscriptions/{subscriptionId}/providers/Microsoft.Network/locations/{location}/virtualNetworkAvailableEndpointServices",urlParameters:[Fp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:Ps},default:{bodyMapper:mr}},serializer:kl},vl={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:Ps},default:{bodyMapper:mr}},serializer:kl},Il=Object.freeze({CloudError:mr,ExpressRouteCircuitAuthorization:Di,SubResource:Pr,BaseResource:yr,AuthorizationListResult:Ns,NetworkInterfaceTapConfiguration:Nr,VirtualNetworkTap:Dr,Resource:Cr,NetworkInterfaceIPConfiguration:Wr,ApplicationGatewayBackendAddressPool:Kr,ApplicationGatewayBackendAddress:_r,BackendAddressPool:Hr,InboundNatRule:Ur,Subnet:Br,NetworkSecurityGroup:Gr,SecurityRule:Rr,ApplicationSecurityGroup:wr,NetworkInterface:Ar,InterfaceEndpoint:Sr,EndpointService:fr,NetworkInterfaceDnsSettings:gr,RouteTable:hr,Route:br,ServiceEndpointPropertiesFormat:kr,ServiceEndpointPolicy:vr,ServiceEndpointPolicyDefinition:zr,IPConfiguration:xr,PublicIPAddress:Vr,PublicIPAddressSku:Ir,PublicIPAddressDnsSettings:Er,IpTag:Mr,IPConfigurationProfile:Fr,ResourceNavigationLink:qr,ServiceAssociationLink:Tr,Delegation:Lr,FrontendIPConfiguration:Or,ApplicationGatewayBackendHttpSettings:Zr,ApplicationGatewayConnectionDraining:jr,ApplicationGatewayIPConfiguration:ti,ApplicationGatewayAuthenticationCertificate:ri,ApplicationGatewayTrustedRootCertificate:ii,ApplicationGatewaySslCertificate:ai,ApplicationGatewayFrontendIPConfiguration:oi,ApplicationGatewayFrontendPort:ni,ApplicationGatewayHttpListener:si,ApplicationGatewayPathRule:pi,ApplicationGatewayProbe:li,ApplicationGatewayProbeHealthResponseMatch:ui,ApplicationGatewayRequestRoutingRule:ci,ApplicationGatewayRedirectConfiguration:di,ApplicationGatewayUrlPathMap:mi,ApplicationGateway:Ci,ApplicationGatewaySku:Yr,ApplicationGatewaySslPolicy:ei,ApplicationGatewayWebApplicationFirewallConfiguration:Pi,ApplicationGatewayFirewallDisabledRuleGroup:yi,ApplicationGatewayAutoscaleConfiguration:Ni,ApplicationGatewayFirewallRuleSet:fi,ApplicationGatewayFirewallRuleGroup:Ri,ApplicationGatewayFirewallRule:wi,ApplicationGatewayAvailableSslOptions:gi,ApplicationGatewaySslPredefinedPolicy:Ai,AzureFirewallIPConfiguration:hi,AzureFirewallApplicationRuleCollection:Ii,AzureFirewallRCAction:ki,AzureFirewallApplicationRule:vi,AzureFirewallApplicationRuleProtocol:zi,AzureFirewallNatRuleCollection:Vi,AzureFirewallNatRCAction:Ei,AzureFirewallNatRule:Mi,AzureFirewallNetworkRuleCollection:Fi,AzureFirewallNetworkRule:xi,AzureFirewall:qi,AzureFirewallFqdnTag:Ti,DdosProtectionPlan:Bi,EndpointServiceResult:Oi,RouteFilterRule:Ui,ExpressRouteCircuitConnection:Ki,ExpressRouteCircuitPeering:ji,ExpressRouteCircuitPeeringConfig:Hi,ExpressRouteCircuitStats:Wi,RouteFilter:Zi,Ipv6ExpressRouteCircuitPeeringConfig:Qi,ExpressRouteConnectionId:_i,ExpressRouteCircuit:Ji,ExpressRouteCircuitSku:Xi,ExpressRouteCircuitServiceProviderProperties:$i,ExpressRouteServiceProvider:na,ExpressRouteServiceProviderBandwidthsOffered:oa,ExpressRouteCrossConnectionPeering:la,ExpressRouteCrossConnection:ca,ExpressRouteCircuitReference:ua,ExpressRouteConnection:Na,ExpressRouteCircuitPeeringId:ma,ExpressRouteGateway:Ca,ExpressRouteGatewayPropertiesAutoScaleConfiguration:Pa,ExpressRouteGatewayPropertiesAutoScaleConfigurationBounds:ya,VirtualHubId:da,LoadBalancingRule:Sa,Probe:ga,InboundNatPool:Aa,OutboundRule:Ga,LoadBalancer:ba,LoadBalancerSku:fa,ContainerNetworkInterfaceConfiguration:xa,ContainerNetworkInterface:Ta,Container:Fa,ContainerNetworkInterfaceIpConfiguration:qa,NetworkProfile:La,NetworkWatcher:Oa,ConnectionMonitorResult:Bo,ConnectionMonitorSource:qo,ConnectionMonitorDestination:To,PublicIPPrefix:nn,PublicIPPrefixSku:an,ReferencedPublicIpAddress:on,PatchRouteFilterRule:sn,PatchRouteFilter:pn,BgpServiceCommunity:ln,BGPCommunity:un,VirtualNetworkPeering:yn,AddressSpace:mn,VirtualNetwork:Nn,DhcpOptions:Pn,VirtualNetworkGatewayIPConfiguration:fn,VpnClientRootCertificate:gn,VpnClientRevokedCertificate:An,VirtualNetworkGateway:vn,VirtualNetworkGatewaySku:Sn,VpnClientConfiguration:bn,IpsecPolicy:Gn,BgpSettings:hn,LocalNetworkGateway:xn,VirtualNetworkGatewayConnection:Fn,TunnelConnectionHealth:Vn,ConnectionSharedKey:Tn,VirtualNetworkGatewayConnectionListEntity:On,VirtualNetworkConnectionGatewayReference:Bn,P2SVpnServerConfigVpnClientRootCertificate:Hn,P2SVpnServerConfigVpnClientRevokedCertificate:Un,P2SVpnServerConfigRadiusServerRootCertificate:Wn,P2SVpnServerConfigRadiusClientRootCertificate:_n,P2SVpnServerConfiguration:Kn,VirtualWAN:jn,VpnSite:Qn,DeviceProperties:Zn,HubVirtualNetworkConnection:$n,VirtualHub:es,VirtualHubRouteTable:Yn,VirtualHubRoute:Jn,VpnConnection:ts,VpnGateway:rs,P2SVpnGateway:os,VpnClientConnectionHealth:as}),El=function(){function e(e){this.client=e}return e.prototype.deleteMethod=function(e,t,r,i){return this.beginDeleteMethod(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.get=function(e,t,r,i,a){return this.client.sendOperationRequest({resourceGroupName:e,circuitName:t,authorizationName:r,options:i},Vl,a)},e.prototype.createOrUpdate=function(e,t,r,i,a){return this.beginCreateOrUpdate(e,t,r,i,a).then(function(e){return e.pollUntilFinished()})},e.prototype.list=function(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,circuitName:t,options:r},xl,i)},e.prototype.beginDeleteMethod=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,circuitName:t,authorizationName:r,options:i},Fl,i)},e.prototype.beginCreateOrUpdate=function(e,t,r,i,a){return this.client.sendLRORequest({resourceGroupName:e,circuitName:t,authorizationName:r,authorizationParameters:i,options:a},ql,a)},e.prototype.listNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},Tl,r)},e}(),Ml=new r.Serializer(Il),Vl={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/authorizations/{authorizationName}",urlParameters:[Kp,Sp,Rp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:Di},default:{bodyMapper:mr}},serializer:Ml},xl={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/authorizations",urlParameters:[Kp,Sp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:Ns},default:{bodyMapper:mr}},serializer:Ml},Fl={httpMethod:"DELETE",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/authorizations/{authorizationName}",urlParameters:[Kp,Sp,Rp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{},202:{},204:{},default:{bodyMapper:mr}},serializer:Ml},ql={httpMethod:"PUT",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/authorizations/{authorizationName}",urlParameters:[Kp,Sp,Rp,tu],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"authorizationParameters",mapper:cr({},Di,{required:!0})},responses:{200:{bodyMapper:Di},201:{bodyMapper:Di},default:{bodyMapper:mr}},serializer:Ml},Tl={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:Ns},default:{bodyMapper:mr}},serializer:Ml},Ll=Object.freeze({CloudError:mr,ExpressRouteCircuitPeering:ji,SubResource:Pr,BaseResource:yr,ExpressRouteCircuitPeeringConfig:Hi,ExpressRouteCircuitStats:Wi,RouteFilter:Zi,Resource:Cr,RouteFilterRule:Ui,Ipv6ExpressRouteCircuitPeeringConfig:Qi,ExpressRouteConnectionId:_i,ExpressRouteCircuitConnection:Ki,ExpressRouteCircuitPeeringListResult:Cs,NetworkInterfaceTapConfiguration:Nr,VirtualNetworkTap:Dr,NetworkInterfaceIPConfiguration:Wr,ApplicationGatewayBackendAddressPool:Kr,ApplicationGatewayBackendAddress:_r,BackendAddressPool:Hr,InboundNatRule:Ur,Subnet:Br,NetworkSecurityGroup:Gr,SecurityRule:Rr,ApplicationSecurityGroup:wr,NetworkInterface:Ar,InterfaceEndpoint:Sr,EndpointService:fr,NetworkInterfaceDnsSettings:gr,RouteTable:hr,Route:br,ServiceEndpointPropertiesFormat:kr,ServiceEndpointPolicy:vr,ServiceEndpointPolicyDefinition:zr,IPConfiguration:xr,PublicIPAddress:Vr,PublicIPAddressSku:Ir,PublicIPAddressDnsSettings:Er,IpTag:Mr,IPConfigurationProfile:Fr,ResourceNavigationLink:qr,ServiceAssociationLink:Tr,Delegation:Lr,FrontendIPConfiguration:Or,ApplicationGatewayBackendHttpSettings:Zr,ApplicationGatewayConnectionDraining:jr,ApplicationGatewayIPConfiguration:ti,ApplicationGatewayAuthenticationCertificate:ri,ApplicationGatewayTrustedRootCertificate:ii,ApplicationGatewaySslCertificate:ai,ApplicationGatewayFrontendIPConfiguration:oi,ApplicationGatewayFrontendPort:ni,ApplicationGatewayHttpListener:si,ApplicationGatewayPathRule:pi,ApplicationGatewayProbe:li,ApplicationGatewayProbeHealthResponseMatch:ui,ApplicationGatewayRequestRoutingRule:ci,ApplicationGatewayRedirectConfiguration:di,ApplicationGatewayUrlPathMap:mi,ApplicationGateway:Ci,ApplicationGatewaySku:Yr,ApplicationGatewaySslPolicy:ei,ApplicationGatewayWebApplicationFirewallConfiguration:Pi,ApplicationGatewayFirewallDisabledRuleGroup:yi,ApplicationGatewayAutoscaleConfiguration:Ni,ApplicationGatewayFirewallRuleSet:fi,ApplicationGatewayFirewallRuleGroup:Ri,ApplicationGatewayFirewallRule:wi,ApplicationGatewayAvailableSslOptions:gi,ApplicationGatewaySslPredefinedPolicy:Ai,AzureFirewallIPConfiguration:hi,AzureFirewallApplicationRuleCollection:Ii,AzureFirewallRCAction:ki,AzureFirewallApplicationRule:vi,AzureFirewallApplicationRuleProtocol:zi,AzureFirewallNatRuleCollection:Vi,AzureFirewallNatRCAction:Ei,AzureFirewallNatRule:Mi,AzureFirewallNetworkRuleCollection:Fi,AzureFirewallNetworkRule:xi,AzureFirewall:qi,AzureFirewallFqdnTag:Ti,DdosProtectionPlan:Bi,EndpointServiceResult:Oi,ExpressRouteCircuitAuthorization:Di,ExpressRouteCircuit:Ji,ExpressRouteCircuitSku:Xi,ExpressRouteCircuitServiceProviderProperties:$i,ExpressRouteServiceProvider:na,ExpressRouteServiceProviderBandwidthsOffered:oa,ExpressRouteCrossConnectionPeering:la,ExpressRouteCrossConnection:ca,ExpressRouteCircuitReference:ua,ExpressRouteConnection:Na,ExpressRouteCircuitPeeringId:ma,ExpressRouteGateway:Ca,ExpressRouteGatewayPropertiesAutoScaleConfiguration:Pa,ExpressRouteGatewayPropertiesAutoScaleConfigurationBounds:ya,VirtualHubId:da,LoadBalancingRule:Sa,Probe:ga,InboundNatPool:Aa,OutboundRule:Ga,LoadBalancer:ba,LoadBalancerSku:fa,ContainerNetworkInterfaceConfiguration:xa,ContainerNetworkInterface:Ta,Container:Fa,ContainerNetworkInterfaceIpConfiguration:qa,NetworkProfile:La,NetworkWatcher:Oa,ConnectionMonitorResult:Bo,ConnectionMonitorSource:qo,ConnectionMonitorDestination:To,PublicIPPrefix:nn,PublicIPPrefixSku:an,ReferencedPublicIpAddress:on,PatchRouteFilterRule:sn,PatchRouteFilter:pn,BgpServiceCommunity:ln,BGPCommunity:un,VirtualNetworkPeering:yn,AddressSpace:mn,VirtualNetwork:Nn,DhcpOptions:Pn,VirtualNetworkGatewayIPConfiguration:fn,VpnClientRootCertificate:gn,VpnClientRevokedCertificate:An,VirtualNetworkGateway:vn,VirtualNetworkGatewaySku:Sn,VpnClientConfiguration:bn,IpsecPolicy:Gn,BgpSettings:hn,LocalNetworkGateway:xn,VirtualNetworkGatewayConnection:Fn,TunnelConnectionHealth:Vn,ConnectionSharedKey:Tn,VirtualNetworkGatewayConnectionListEntity:On,VirtualNetworkConnectionGatewayReference:Bn,P2SVpnServerConfigVpnClientRootCertificate:Hn,P2SVpnServerConfigVpnClientRevokedCertificate:Un,P2SVpnServerConfigRadiusServerRootCertificate:Wn,P2SVpnServerConfigRadiusClientRootCertificate:_n,P2SVpnServerConfiguration:Kn,VirtualWAN:jn,VpnSite:Qn,DeviceProperties:Zn,HubVirtualNetworkConnection:$n,VirtualHub:es,VirtualHubRouteTable:Yn,VirtualHubRoute:Jn,VpnConnection:ts,VpnGateway:rs,P2SVpnGateway:os,VpnClientConnectionHealth:as}),Bl=function(){function e(e){this.client=e}return e.prototype.deleteMethod=function(e,t,r,i){return this.beginDeleteMethod(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.get=function(e,t,r,i,a){return this.client.sendOperationRequest({resourceGroupName:e,circuitName:t,peeringName:r,options:i},Dl,a)},e.prototype.createOrUpdate=function(e,t,r,i,a){return this.beginCreateOrUpdate(e,t,r,i,a).then(function(e){return e.pollUntilFinished()})},e.prototype.list=function(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,circuitName:t,options:r},Hl,i)},e.prototype.beginDeleteMethod=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,circuitName:t,peeringName:r,options:i},Ul,i)},e.prototype.beginCreateOrUpdate=function(e,t,r,i,a){return this.client.sendLRORequest({resourceGroupName:e,circuitName:t,peeringName:r,peeringParameters:i,options:a},Wl,a)},e.prototype.listNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},_l,r)},e}(),Ol=new r.Serializer(Ll),Dl={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}",urlParameters:[Kp,Sp,Up,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:ji},default:{bodyMapper:mr}},serializer:Ol},Hl={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings",urlParameters:[Kp,Sp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:Cs},default:{bodyMapper:mr}},serializer:Ol},Ul={httpMethod:"DELETE",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}",urlParameters:[Kp,Sp,Up,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{},202:{},204:{},default:{bodyMapper:mr}},serializer:Ol},Wl={httpMethod:"PUT",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}",urlParameters:[Kp,Sp,Up,tu],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"peeringParameters",mapper:cr({},ji,{required:!0})},responses:{200:{bodyMapper:ji},201:{bodyMapper:ji},default:{bodyMapper:mr}},serializer:Ol},_l={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:Cs},default:{bodyMapper:mr}},serializer:Ol},Kl=Object.freeze({CloudError:mr,ExpressRouteCircuitConnection:Ki,SubResource:Pr,BaseResource:yr,NetworkInterfaceTapConfiguration:Nr,VirtualNetworkTap:Dr,Resource:Cr,NetworkInterfaceIPConfiguration:Wr,ApplicationGatewayBackendAddressPool:Kr,ApplicationGatewayBackendAddress:_r,BackendAddressPool:Hr,InboundNatRule:Ur,Subnet:Br,NetworkSecurityGroup:Gr,SecurityRule:Rr,ApplicationSecurityGroup:wr,NetworkInterface:Ar,InterfaceEndpoint:Sr,EndpointService:fr,NetworkInterfaceDnsSettings:gr,RouteTable:hr,Route:br,ServiceEndpointPropertiesFormat:kr,ServiceEndpointPolicy:vr,ServiceEndpointPolicyDefinition:zr,IPConfiguration:xr,PublicIPAddress:Vr,PublicIPAddressSku:Ir,PublicIPAddressDnsSettings:Er,IpTag:Mr,IPConfigurationProfile:Fr,ResourceNavigationLink:qr,ServiceAssociationLink:Tr,Delegation:Lr,FrontendIPConfiguration:Or,ApplicationGatewayBackendHttpSettings:Zr,ApplicationGatewayConnectionDraining:jr,ApplicationGatewayIPConfiguration:ti,ApplicationGatewayAuthenticationCertificate:ri,ApplicationGatewayTrustedRootCertificate:ii,ApplicationGatewaySslCertificate:ai,ApplicationGatewayFrontendIPConfiguration:oi,ApplicationGatewayFrontendPort:ni,ApplicationGatewayHttpListener:si,ApplicationGatewayPathRule:pi,ApplicationGatewayProbe:li,ApplicationGatewayProbeHealthResponseMatch:ui,ApplicationGatewayRequestRoutingRule:ci,ApplicationGatewayRedirectConfiguration:di,ApplicationGatewayUrlPathMap:mi,ApplicationGateway:Ci,ApplicationGatewaySku:Yr,ApplicationGatewaySslPolicy:ei,ApplicationGatewayWebApplicationFirewallConfiguration:Pi,ApplicationGatewayFirewallDisabledRuleGroup:yi,ApplicationGatewayAutoscaleConfiguration:Ni,ApplicationGatewayFirewallRuleSet:fi,ApplicationGatewayFirewallRuleGroup:Ri,ApplicationGatewayFirewallRule:wi,ApplicationGatewayAvailableSslOptions:gi,ApplicationGatewaySslPredefinedPolicy:Ai,AzureFirewallIPConfiguration:hi,AzureFirewallApplicationRuleCollection:Ii,AzureFirewallRCAction:ki,AzureFirewallApplicationRule:vi,AzureFirewallApplicationRuleProtocol:zi,AzureFirewallNatRuleCollection:Vi,AzureFirewallNatRCAction:Ei,AzureFirewallNatRule:Mi,AzureFirewallNetworkRuleCollection:Fi,AzureFirewallNetworkRule:xi,AzureFirewall:qi,AzureFirewallFqdnTag:Ti,DdosProtectionPlan:Bi,EndpointServiceResult:Oi,ExpressRouteCircuitAuthorization:Di,RouteFilterRule:Ui,ExpressRouteCircuitPeering:ji,ExpressRouteCircuitPeeringConfig:Hi,ExpressRouteCircuitStats:Wi,RouteFilter:Zi,Ipv6ExpressRouteCircuitPeeringConfig:Qi,ExpressRouteConnectionId:_i,ExpressRouteCircuit:Ji,ExpressRouteCircuitSku:Xi,ExpressRouteCircuitServiceProviderProperties:$i,ExpressRouteServiceProvider:na,ExpressRouteServiceProviderBandwidthsOffered:oa,ExpressRouteCrossConnectionPeering:la,ExpressRouteCrossConnection:ca,ExpressRouteCircuitReference:ua,ExpressRouteConnection:Na,ExpressRouteCircuitPeeringId:ma,ExpressRouteGateway:Ca,ExpressRouteGatewayPropertiesAutoScaleConfiguration:Pa,ExpressRouteGatewayPropertiesAutoScaleConfigurationBounds:ya,VirtualHubId:da,LoadBalancingRule:Sa,Probe:ga,InboundNatPool:Aa,OutboundRule:Ga,LoadBalancer:ba,LoadBalancerSku:fa,ContainerNetworkInterfaceConfiguration:xa,ContainerNetworkInterface:Ta,Container:Fa,ContainerNetworkInterfaceIpConfiguration:qa,NetworkProfile:La,NetworkWatcher:Oa,ConnectionMonitorResult:Bo,ConnectionMonitorSource:qo,ConnectionMonitorDestination:To,PublicIPPrefix:nn,PublicIPPrefixSku:an,ReferencedPublicIpAddress:on,PatchRouteFilterRule:sn,PatchRouteFilter:pn,BgpServiceCommunity:ln,BGPCommunity:un,VirtualNetworkPeering:yn,AddressSpace:mn,VirtualNetwork:Nn,DhcpOptions:Pn,VirtualNetworkGatewayIPConfiguration:fn,VpnClientRootCertificate:gn,VpnClientRevokedCertificate:An,VirtualNetworkGateway:vn,VirtualNetworkGatewaySku:Sn,VpnClientConfiguration:bn,IpsecPolicy:Gn,BgpSettings:hn,LocalNetworkGateway:xn,VirtualNetworkGatewayConnection:Fn,TunnelConnectionHealth:Vn,ConnectionSharedKey:Tn,VirtualNetworkGatewayConnectionListEntity:On,VirtualNetworkConnectionGatewayReference:Bn,P2SVpnServerConfigVpnClientRootCertificate:Hn,P2SVpnServerConfigVpnClientRevokedCertificate:Un,P2SVpnServerConfigRadiusServerRootCertificate:Wn,P2SVpnServerConfigRadiusClientRootCertificate:_n,P2SVpnServerConfiguration:Kn,VirtualWAN:jn,VpnSite:Qn,DeviceProperties:Zn,HubVirtualNetworkConnection:$n,VirtualHub:es,VirtualHubRouteTable:Yn,VirtualHubRoute:Jn,VpnConnection:ts,VpnGateway:rs,P2SVpnGateway:os,VpnClientConnectionHealth:as}),jl=function(){function e(e){this.client=e}return e.prototype.deleteMethod=function(e,t,r,i,a){return this.beginDeleteMethod(e,t,r,i,a).then(function(e){return e.pollUntilFinished()})},e.prototype.get=function(e,t,r,i,a,o){return this.client.sendOperationRequest({resourceGroupName:e,circuitName:t,peeringName:r,connectionName:i,options:a},Ql,o)},e.prototype.createOrUpdate=function(e,t,r,i,a,o){return this.beginCreateOrUpdate(e,t,r,i,a,o).then(function(e){return e.pollUntilFinished()})},e.prototype.beginDeleteMethod=function(e,t,r,i,a){return this.client.sendLRORequest({resourceGroupName:e,circuitName:t,peeringName:r,connectionName:i,options:a},Xl,a)},e.prototype.beginCreateOrUpdate=function(e,t,r,i,a,o){return this.client.sendLRORequest({resourceGroupName:e,circuitName:t,peeringName:r,connectionName:i,expressRouteCircuitConnectionParameters:a,options:o},$l,o)},e}(),Zl=new r.Serializer(Kl),Ql={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/connections/{connectionName}",urlParameters:[Kp,Sp,Up,Ap,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:Ki},default:{bodyMapper:mr}},serializer:Zl},Xl={httpMethod:"DELETE",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/connections/{connectionName}",urlParameters:[Kp,Sp,Up,Ap,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{},202:{},204:{},default:{bodyMapper:mr}},serializer:Zl},$l={httpMethod:"PUT",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/connections/{connectionName}",urlParameters:[Kp,Sp,Up,Ap,tu],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"expressRouteCircuitConnectionParameters",mapper:cr({},Ki,{required:!0})},responses:{200:{bodyMapper:Ki},201:{bodyMapper:Ki},default:{bodyMapper:mr}},serializer:Zl},Jl=Object.freeze({CloudError:mr,ExpressRouteCircuit:Ji,Resource:Cr,BaseResource:yr,ExpressRouteCircuitSku:Xi,ExpressRouteCircuitAuthorization:Di,SubResource:Pr,ExpressRouteCircuitPeering:ji,ExpressRouteCircuitPeeringConfig:Hi,ExpressRouteCircuitStats:Wi,RouteFilter:Zi,RouteFilterRule:Ui,Ipv6ExpressRouteCircuitPeeringConfig:Qi,ExpressRouteConnectionId:_i,ExpressRouteCircuitConnection:Ki,ExpressRouteCircuitServiceProviderProperties:$i,TagsObject:Gi,ExpressRouteCircuitsArpTableListResult:ea,ExpressRouteCircuitArpTable:Yi,ExpressRouteCircuitsRoutesTableListResult:ra,ExpressRouteCircuitRoutesTable:ta,ExpressRouteCircuitsRoutesTableSummaryListResult:aa,ExpressRouteCircuitRoutesTableSummary:ia,ExpressRouteCircuitListResult:ws,NetworkInterfaceTapConfiguration:Nr,VirtualNetworkTap:Dr,NetworkInterfaceIPConfiguration:Wr,ApplicationGatewayBackendAddressPool:Kr,ApplicationGatewayBackendAddress:_r,BackendAddressPool:Hr,InboundNatRule:Ur,Subnet:Br,NetworkSecurityGroup:Gr,SecurityRule:Rr,ApplicationSecurityGroup:wr,NetworkInterface:Ar,InterfaceEndpoint:Sr,EndpointService:fr,NetworkInterfaceDnsSettings:gr,RouteTable:hr,Route:br,ServiceEndpointPropertiesFormat:kr,ServiceEndpointPolicy:vr,ServiceEndpointPolicyDefinition:zr,IPConfiguration:xr,PublicIPAddress:Vr,PublicIPAddressSku:Ir,PublicIPAddressDnsSettings:Er,IpTag:Mr,IPConfigurationProfile:Fr,ResourceNavigationLink:qr,ServiceAssociationLink:Tr,Delegation:Lr,FrontendIPConfiguration:Or,ApplicationGatewayBackendHttpSettings:Zr,ApplicationGatewayConnectionDraining:jr,ApplicationGatewayIPConfiguration:ti,ApplicationGatewayAuthenticationCertificate:ri,ApplicationGatewayTrustedRootCertificate:ii,ApplicationGatewaySslCertificate:ai,ApplicationGatewayFrontendIPConfiguration:oi,ApplicationGatewayFrontendPort:ni,ApplicationGatewayHttpListener:si,ApplicationGatewayPathRule:pi,ApplicationGatewayProbe:li,ApplicationGatewayProbeHealthResponseMatch:ui,ApplicationGatewayRequestRoutingRule:ci,ApplicationGatewayRedirectConfiguration:di,ApplicationGatewayUrlPathMap:mi,ApplicationGateway:Ci,ApplicationGatewaySku:Yr,ApplicationGatewaySslPolicy:ei,ApplicationGatewayWebApplicationFirewallConfiguration:Pi,ApplicationGatewayFirewallDisabledRuleGroup:yi,ApplicationGatewayAutoscaleConfiguration:Ni,ApplicationGatewayFirewallRuleSet:fi,ApplicationGatewayFirewallRuleGroup:Ri,ApplicationGatewayFirewallRule:wi,ApplicationGatewayAvailableSslOptions:gi,ApplicationGatewaySslPredefinedPolicy:Ai,AzureFirewallIPConfiguration:hi,AzureFirewallApplicationRuleCollection:Ii,AzureFirewallRCAction:ki,AzureFirewallApplicationRule:vi,AzureFirewallApplicationRuleProtocol:zi,AzureFirewallNatRuleCollection:Vi,AzureFirewallNatRCAction:Ei,AzureFirewallNatRule:Mi,AzureFirewallNetworkRuleCollection:Fi,AzureFirewallNetworkRule:xi,AzureFirewall:qi,AzureFirewallFqdnTag:Ti,DdosProtectionPlan:Bi,EndpointServiceResult:Oi,ExpressRouteServiceProvider:na,ExpressRouteServiceProviderBandwidthsOffered:oa,ExpressRouteCrossConnectionPeering:la,ExpressRouteCrossConnection:ca,ExpressRouteCircuitReference:ua,ExpressRouteConnection:Na,ExpressRouteCircuitPeeringId:ma,ExpressRouteGateway:Ca,ExpressRouteGatewayPropertiesAutoScaleConfiguration:Pa,ExpressRouteGatewayPropertiesAutoScaleConfigurationBounds:ya,VirtualHubId:da,LoadBalancingRule:Sa,Probe:ga,InboundNatPool:Aa,OutboundRule:Ga,LoadBalancer:ba,LoadBalancerSku:fa,ContainerNetworkInterfaceConfiguration:xa,ContainerNetworkInterface:Ta,Container:Fa,ContainerNetworkInterfaceIpConfiguration:qa,NetworkProfile:La,NetworkWatcher:Oa,ConnectionMonitorResult:Bo,ConnectionMonitorSource:qo,ConnectionMonitorDestination:To,PublicIPPrefix:nn,PublicIPPrefixSku:an,ReferencedPublicIpAddress:on,PatchRouteFilterRule:sn,PatchRouteFilter:pn,BgpServiceCommunity:ln,BGPCommunity:un,VirtualNetworkPeering:yn,AddressSpace:mn,VirtualNetwork:Nn,DhcpOptions:Pn,VirtualNetworkGatewayIPConfiguration:fn,VpnClientRootCertificate:gn,VpnClientRevokedCertificate:An,VirtualNetworkGateway:vn,VirtualNetworkGatewaySku:Sn,VpnClientConfiguration:bn,IpsecPolicy:Gn,BgpSettings:hn,LocalNetworkGateway:xn,VirtualNetworkGatewayConnection:Fn,TunnelConnectionHealth:Vn,ConnectionSharedKey:Tn,VirtualNetworkGatewayConnectionListEntity:On,VirtualNetworkConnectionGatewayReference:Bn,P2SVpnServerConfigVpnClientRootCertificate:Hn,P2SVpnServerConfigVpnClientRevokedCertificate:Un,P2SVpnServerConfigRadiusServerRootCertificate:Wn,P2SVpnServerConfigRadiusClientRootCertificate:_n,P2SVpnServerConfiguration:Kn,VirtualWAN:jn,VpnSite:Qn,DeviceProperties:Zn,HubVirtualNetworkConnection:$n,VirtualHub:es,VirtualHubRouteTable:Yn,VirtualHubRoute:Jn,VpnConnection:ts,VpnGateway:rs,P2SVpnGateway:os,VpnClientConnectionHealth:as}),Yl=function(){function e(e){this.client=e}return e.prototype.deleteMethod=function(e,t,r){return this.beginDeleteMethod(e,t,r).then(function(e){return e.pollUntilFinished()})},e.prototype.get=function(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,circuitName:t,options:r},tc,i)},e.prototype.createOrUpdate=function(e,t,r,i){return this.beginCreateOrUpdate(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.updateTags=function(e,t,r,i){return this.beginUpdateTags(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.listArpTable=function(e,t,r,i,a){return this.beginListArpTable(e,t,r,i,a).then(function(e){return e.pollUntilFinished()})},e.prototype.listRoutesTable=function(e,t,r,i,a){return this.beginListRoutesTable(e,t,r,i,a).then(function(e){return e.pollUntilFinished()})},e.prototype.listRoutesTableSummary=function(e,t,r,i,a){return this.beginListRoutesTableSummary(e,t,r,i,a).then(function(e){return e.pollUntilFinished()})},e.prototype.getStats=function(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,circuitName:t,options:r},rc,i)},e.prototype.getPeeringStats=function(e,t,r,i,a){return this.client.sendOperationRequest({resourceGroupName:e,circuitName:t,peeringName:r,options:i},ic,a)},e.prototype.list=function(e,t,r){return this.client.sendOperationRequest({resourceGroupName:e,options:t},ac,r)},e.prototype.listAll=function(e,t){return this.client.sendOperationRequest({options:e},oc,t)},e.prototype.beginDeleteMethod=function(e,t,r){return this.client.sendLRORequest({resourceGroupName:e,circuitName:t,options:r},nc,r)},e.prototype.beginCreateOrUpdate=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,circuitName:t,parameters:r,options:i},sc,i)},e.prototype.beginUpdateTags=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,circuitName:t,parameters:r,options:i},pc,i)},e.prototype.beginListArpTable=function(e,t,r,i,a){return this.client.sendLRORequest({resourceGroupName:e,circuitName:t,peeringName:r,devicePath:i,options:a},uc,a)},e.prototype.beginListRoutesTable=function(e,t,r,i,a){return this.client.sendLRORequest({resourceGroupName:e,circuitName:t,peeringName:r,devicePath:i,options:a},lc,a)},e.prototype.beginListRoutesTableSummary=function(e,t,r,i,a){return this.client.sendLRORequest({resourceGroupName:e,circuitName:t,peeringName:r,devicePath:i,options:a},cc,a)},e.prototype.listNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},dc,r)},e.prototype.listAllNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},mc,r)},e}(),ec=new r.Serializer(Jl),tc={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}",urlParameters:[Kp,Sp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:Ji},default:{bodyMapper:mr}},serializer:ec},rc={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/stats",urlParameters:[Kp,Sp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:Wi},default:{bodyMapper:mr}},serializer:ec},ic={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/stats",urlParameters:[Kp,Sp,Up,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:Wi},default:{bodyMapper:mr}},serializer:ec},ac={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits",urlParameters:[Kp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:ws},default:{bodyMapper:mr}},serializer:ec},oc={httpMethod:"GET",path:"subscriptions/{subscriptionId}/providers/Microsoft.Network/expressRouteCircuits",urlParameters:[tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:ws},default:{bodyMapper:mr}},serializer:ec},nc={httpMethod:"DELETE",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}",urlParameters:[Kp,Sp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{},202:{},204:{},default:{bodyMapper:mr}},serializer:ec},sc={httpMethod:"PUT",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}",urlParameters:[Kp,Sp,tu],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"parameters",mapper:cr({},Ji,{required:!0})},responses:{200:{bodyMapper:Ji},201:{bodyMapper:Ji},default:{bodyMapper:mr}},serializer:ec},pc={httpMethod:"PATCH",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}",urlParameters:[Kp,Sp,tu],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"parameters",mapper:cr({},Gi,{required:!0})},responses:{200:{bodyMapper:Ji},default:{bodyMapper:mr}},serializer:ec},uc={httpMethod:"POST",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/arpTables/{devicePath}",urlParameters:[Kp,Sp,Up,hp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:ea},202:{},default:{bodyMapper:mr}},serializer:ec},lc={httpMethod:"POST",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/routeTables/{devicePath}",urlParameters:[Kp,Sp,Up,hp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:ra},202:{},default:{bodyMapper:mr}},serializer:ec},cc={httpMethod:"POST",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/routeTablesSummary/{devicePath}",urlParameters:[Kp,Sp,Up,hp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:aa},202:{},default:{bodyMapper:mr}},serializer:ec},dc={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:ws},default:{bodyMapper:mr}},serializer:ec},mc={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:ws},default:{bodyMapper:mr}},serializer:ec},yc=Object.freeze({ExpressRouteServiceProviderListResult:Rs,ExpressRouteServiceProvider:na,Resource:Cr,BaseResource:yr,ExpressRouteServiceProviderBandwidthsOffered:oa,CloudError:mr,SubResource:Pr,ApplicationSecurityGroup:wr,SecurityRule:Rr,InterfaceEndpoint:Sr,EndpointService:fr,Subnet:Br,NetworkSecurityGroup:Gr,NetworkInterface:Ar,NetworkInterfaceIPConfiguration:Wr,VirtualNetworkTap:Dr,NetworkInterfaceTapConfiguration:Nr,FrontendIPConfiguration:Or,PublicIPAddress:Vr,PublicIPAddressSku:Ir,IPConfiguration:xr,PublicIPAddressDnsSettings:Er,IpTag:Mr,ApplicationGatewayBackendAddressPool:Kr,ApplicationGatewayBackendAddress:_r,BackendAddressPool:Hr,InboundNatRule:Ur,NetworkInterfaceDnsSettings:gr,RouteTable:hr,Route:br,ServiceEndpointPropertiesFormat:kr,ServiceEndpointPolicy:vr,ServiceEndpointPolicyDefinition:zr,IPConfigurationProfile:Fr,ResourceNavigationLink:qr,ServiceAssociationLink:Tr,Delegation:Lr,ApplicationGatewayBackendHttpSettings:Zr,ApplicationGatewayConnectionDraining:jr,ApplicationGatewayIPConfiguration:ti,ApplicationGatewayAuthenticationCertificate:ri,ApplicationGatewayTrustedRootCertificate:ii,ApplicationGatewaySslCertificate:ai,ApplicationGatewayFrontendIPConfiguration:oi,ApplicationGatewayFrontendPort:ni,ApplicationGatewayHttpListener:si,ApplicationGatewayPathRule:pi,ApplicationGatewayProbe:li,ApplicationGatewayProbeHealthResponseMatch:ui,ApplicationGatewayRequestRoutingRule:ci,ApplicationGatewayRedirectConfiguration:di,ApplicationGatewayUrlPathMap:mi,ApplicationGateway:Ci,ApplicationGatewaySku:Yr,ApplicationGatewaySslPolicy:ei,ApplicationGatewayWebApplicationFirewallConfiguration:Pi,ApplicationGatewayFirewallDisabledRuleGroup:yi,ApplicationGatewayAutoscaleConfiguration:Ni,ApplicationGatewayFirewallRuleSet:fi,ApplicationGatewayFirewallRuleGroup:Ri,ApplicationGatewayFirewallRule:wi,ApplicationGatewayAvailableSslOptions:gi,ApplicationGatewaySslPredefinedPolicy:Ai,AzureFirewallIPConfiguration:hi,AzureFirewallApplicationRuleCollection:Ii,AzureFirewallRCAction:ki,AzureFirewallApplicationRule:vi,AzureFirewallApplicationRuleProtocol:zi,AzureFirewallNatRuleCollection:Vi,AzureFirewallNatRCAction:Ei,AzureFirewallNatRule:Mi,AzureFirewallNetworkRuleCollection:Fi,AzureFirewallNetworkRule:xi,AzureFirewall:qi,AzureFirewallFqdnTag:Ti,DdosProtectionPlan:Bi,EndpointServiceResult:Oi,ExpressRouteCircuitAuthorization:Di,RouteFilterRule:Ui,ExpressRouteCircuitConnection:Ki,ExpressRouteCircuitPeering:ji,ExpressRouteCircuitPeeringConfig:Hi,ExpressRouteCircuitStats:Wi,RouteFilter:Zi,Ipv6ExpressRouteCircuitPeeringConfig:Qi,ExpressRouteConnectionId:_i,ExpressRouteCircuit:Ji,ExpressRouteCircuitSku:Xi,ExpressRouteCircuitServiceProviderProperties:$i,ExpressRouteCrossConnectionPeering:la,ExpressRouteCrossConnection:ca,ExpressRouteCircuitReference:ua,ExpressRouteConnection:Na,ExpressRouteCircuitPeeringId:ma,ExpressRouteGateway:Ca,ExpressRouteGatewayPropertiesAutoScaleConfiguration:Pa,ExpressRouteGatewayPropertiesAutoScaleConfigurationBounds:ya,VirtualHubId:da,LoadBalancingRule:Sa,Probe:ga,InboundNatPool:Aa,OutboundRule:Ga,LoadBalancer:ba,LoadBalancerSku:fa,ContainerNetworkInterfaceConfiguration:xa,ContainerNetworkInterface:Ta,Container:Fa,ContainerNetworkInterfaceIpConfiguration:qa,NetworkProfile:La,NetworkWatcher:Oa,ConnectionMonitorResult:Bo,ConnectionMonitorSource:qo,ConnectionMonitorDestination:To,PublicIPPrefix:nn,PublicIPPrefixSku:an,ReferencedPublicIpAddress:on,PatchRouteFilterRule:sn,PatchRouteFilter:pn,BgpServiceCommunity:ln,BGPCommunity:un,VirtualNetworkPeering:yn,AddressSpace:mn,VirtualNetwork:Nn,DhcpOptions:Pn,VirtualNetworkGatewayIPConfiguration:fn,VpnClientRootCertificate:gn,VpnClientRevokedCertificate:An,VirtualNetworkGateway:vn,VirtualNetworkGatewaySku:Sn,VpnClientConfiguration:bn,IpsecPolicy:Gn,BgpSettings:hn,LocalNetworkGateway:xn,VirtualNetworkGatewayConnection:Fn,TunnelConnectionHealth:Vn,ConnectionSharedKey:Tn,VirtualNetworkGatewayConnectionListEntity:On,VirtualNetworkConnectionGatewayReference:Bn,P2SVpnServerConfigVpnClientRootCertificate:Hn,P2SVpnServerConfigVpnClientRevokedCertificate:Un,P2SVpnServerConfigRadiusServerRootCertificate:Wn,P2SVpnServerConfigRadiusClientRootCertificate:_n,P2SVpnServerConfiguration:Kn,VirtualWAN:jn,VpnSite:Qn,DeviceProperties:Zn,HubVirtualNetworkConnection:$n,VirtualHub:es,VirtualHubRouteTable:Yn,VirtualHubRoute:Jn,VpnConnection:ts,VpnGateway:rs,P2SVpnGateway:os,VpnClientConnectionHealth:as}),Pc=function(){function e(e){this.client=e}return e.prototype.list=function(e,t){return this.client.sendOperationRequest({options:e},Cc,t)},e.prototype.listNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},wc,r)},e}(),Nc=new r.Serializer(yc),Cc={httpMethod:"GET",path:"subscriptions/{subscriptionId}/providers/Microsoft.Network/expressRouteServiceProviders",urlParameters:[tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:Rs},default:{bodyMapper:mr}},serializer:Nc},wc={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:Rs},default:{bodyMapper:mr}},serializer:Nc},Rc=Object.freeze({ExpressRouteCrossConnectionListResult:fs,ExpressRouteCrossConnection:ca,Resource:Cr,BaseResource:yr,ExpressRouteCircuitReference:ua,ExpressRouteCrossConnectionPeering:la,SubResource:Pr,ExpressRouteCircuitPeeringConfig:Hi,Ipv6ExpressRouteCircuitPeeringConfig:Qi,RouteFilter:Zi,RouteFilterRule:Ui,ExpressRouteCircuitPeering:ji,ExpressRouteCircuitStats:Wi,ExpressRouteConnectionId:_i,ExpressRouteCircuitConnection:Ki,CloudError:mr,TagsObject:Gi,ExpressRouteCircuitsArpTableListResult:ea,ExpressRouteCircuitArpTable:Yi,ExpressRouteCrossConnectionsRoutesTableSummaryListResult:pa,ExpressRouteCrossConnectionRoutesTableSummary:sa,ExpressRouteCircuitsRoutesTableListResult:ra,ExpressRouteCircuitRoutesTable:ta,NetworkInterfaceTapConfiguration:Nr,VirtualNetworkTap:Dr,NetworkInterfaceIPConfiguration:Wr,ApplicationGatewayBackendAddressPool:Kr,ApplicationGatewayBackendAddress:_r,BackendAddressPool:Hr,InboundNatRule:Ur,Subnet:Br,NetworkSecurityGroup:Gr,SecurityRule:Rr,ApplicationSecurityGroup:wr,NetworkInterface:Ar,InterfaceEndpoint:Sr,EndpointService:fr,NetworkInterfaceDnsSettings:gr,RouteTable:hr,Route:br,ServiceEndpointPropertiesFormat:kr,ServiceEndpointPolicy:vr,ServiceEndpointPolicyDefinition:zr,IPConfiguration:xr,PublicIPAddress:Vr,PublicIPAddressSku:Ir,PublicIPAddressDnsSettings:Er,IpTag:Mr,IPConfigurationProfile:Fr,ResourceNavigationLink:qr,ServiceAssociationLink:Tr,Delegation:Lr,FrontendIPConfiguration:Or,ApplicationGatewayBackendHttpSettings:Zr,ApplicationGatewayConnectionDraining:jr,ApplicationGatewayIPConfiguration:ti,ApplicationGatewayAuthenticationCertificate:ri,ApplicationGatewayTrustedRootCertificate:ii,ApplicationGatewaySslCertificate:ai,ApplicationGatewayFrontendIPConfiguration:oi,ApplicationGatewayFrontendPort:ni,ApplicationGatewayHttpListener:si,ApplicationGatewayPathRule:pi,ApplicationGatewayProbe:li,ApplicationGatewayProbeHealthResponseMatch:ui,ApplicationGatewayRequestRoutingRule:ci,ApplicationGatewayRedirectConfiguration:di,ApplicationGatewayUrlPathMap:mi,ApplicationGateway:Ci,ApplicationGatewaySku:Yr,ApplicationGatewaySslPolicy:ei,ApplicationGatewayWebApplicationFirewallConfiguration:Pi,ApplicationGatewayFirewallDisabledRuleGroup:yi,ApplicationGatewayAutoscaleConfiguration:Ni,ApplicationGatewayFirewallRuleSet:fi,ApplicationGatewayFirewallRuleGroup:Ri,ApplicationGatewayFirewallRule:wi,ApplicationGatewayAvailableSslOptions:gi,ApplicationGatewaySslPredefinedPolicy:Ai,AzureFirewallIPConfiguration:hi,AzureFirewallApplicationRuleCollection:Ii,AzureFirewallRCAction:ki,AzureFirewallApplicationRule:vi,AzureFirewallApplicationRuleProtocol:zi,AzureFirewallNatRuleCollection:Vi,AzureFirewallNatRCAction:Ei,AzureFirewallNatRule:Mi,AzureFirewallNetworkRuleCollection:Fi,AzureFirewallNetworkRule:xi,AzureFirewall:qi,AzureFirewallFqdnTag:Ti,DdosProtectionPlan:Bi,EndpointServiceResult:Oi,ExpressRouteCircuitAuthorization:Di,ExpressRouteCircuit:Ji,ExpressRouteCircuitSku:Xi,ExpressRouteCircuitServiceProviderProperties:$i,ExpressRouteServiceProvider:na,ExpressRouteServiceProviderBandwidthsOffered:oa,ExpressRouteConnection:Na,ExpressRouteCircuitPeeringId:ma,ExpressRouteGateway:Ca,ExpressRouteGatewayPropertiesAutoScaleConfiguration:Pa,ExpressRouteGatewayPropertiesAutoScaleConfigurationBounds:ya,VirtualHubId:da,LoadBalancingRule:Sa,Probe:ga,InboundNatPool:Aa,OutboundRule:Ga,LoadBalancer:ba,LoadBalancerSku:fa,ContainerNetworkInterfaceConfiguration:xa,ContainerNetworkInterface:Ta,Container:Fa,ContainerNetworkInterfaceIpConfiguration:qa,NetworkProfile:La,NetworkWatcher:Oa,ConnectionMonitorResult:Bo,ConnectionMonitorSource:qo,ConnectionMonitorDestination:To,PublicIPPrefix:nn,PublicIPPrefixSku:an,ReferencedPublicIpAddress:on,PatchRouteFilterRule:sn,PatchRouteFilter:pn,BgpServiceCommunity:ln,BGPCommunity:un,VirtualNetworkPeering:yn,AddressSpace:mn,VirtualNetwork:Nn,DhcpOptions:Pn,VirtualNetworkGatewayIPConfiguration:fn,VpnClientRootCertificate:gn,VpnClientRevokedCertificate:An,VirtualNetworkGateway:vn,VirtualNetworkGatewaySku:Sn,VpnClientConfiguration:bn,IpsecPolicy:Gn,BgpSettings:hn,LocalNetworkGateway:xn,VirtualNetworkGatewayConnection:Fn,TunnelConnectionHealth:Vn,ConnectionSharedKey:Tn,VirtualNetworkGatewayConnectionListEntity:On,VirtualNetworkConnectionGatewayReference:Bn,P2SVpnServerConfigVpnClientRootCertificate:Hn,P2SVpnServerConfigVpnClientRevokedCertificate:Un,P2SVpnServerConfigRadiusServerRootCertificate:Wn,P2SVpnServerConfigRadiusClientRootCertificate:_n,P2SVpnServerConfiguration:Kn,VirtualWAN:jn,VpnSite:Qn,DeviceProperties:Zn,HubVirtualNetworkConnection:$n,VirtualHub:es,VirtualHubRouteTable:Yn,VirtualHubRoute:Jn,VpnConnection:ts,VpnGateway:rs,P2SVpnGateway:os,VpnClientConnectionHealth:as}),fc=function(){function e(e){this.client=e}return e.prototype.list=function(e,t){return this.client.sendOperationRequest({options:e},gc,t)},e.prototype.listByResourceGroup=function(e,t,r){return this.client.sendOperationRequest({resourceGroupName:e,options:t},Ac,r)},e.prototype.get=function(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,crossConnectionName:t,options:r},Gc,i)},e.prototype.createOrUpdate=function(e,t,r,i){return this.beginCreateOrUpdate(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.updateTags=function(e,t,r,i){return this.beginUpdateTags(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.listArpTable=function(e,t,r,i,a){return this.beginListArpTable(e,t,r,i,a).then(function(e){return e.pollUntilFinished()})},e.prototype.listRoutesTableSummary=function(e,t,r,i,a){return this.beginListRoutesTableSummary(e,t,r,i,a).then(function(e){return e.pollUntilFinished()})},e.prototype.listRoutesTable=function(e,t,r,i,a){return this.beginListRoutesTable(e,t,r,i,a).then(function(e){return e.pollUntilFinished()})},e.prototype.beginCreateOrUpdate=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,crossConnectionName:t,parameters:r,options:i},bc,i)},e.prototype.beginUpdateTags=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,crossConnectionName:t,crossConnectionParameters:r,options:i},hc,i)},e.prototype.beginListArpTable=function(e,t,r,i,a){return this.client.sendLRORequest({resourceGroupName:e,crossConnectionName:t,peeringName:r,devicePath:i,options:a},kc,a)},e.prototype.beginListRoutesTableSummary=function(e,t,r,i,a){return this.client.sendLRORequest({resourceGroupName:e,crossConnectionName:t,peeringName:r,devicePath:i,options:a},zc,a)},e.prototype.beginListRoutesTable=function(e,t,r,i,a){return this.client.sendLRORequest({resourceGroupName:e,crossConnectionName:t,peeringName:r,devicePath:i,options:a},vc,a)},e.prototype.listNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},Ic,r)},e.prototype.listByResourceGroupNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},Ec,r)},e}(),Sc=new r.Serializer(Rc),gc={httpMethod:"GET",path:"subscriptions/{subscriptionId}/providers/Microsoft.Network/expressRouteCrossConnections",urlParameters:[tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:fs},default:{bodyMapper:mr}},serializer:Sc},Ac={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCrossConnections",urlParameters:[Kp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:fs},default:{bodyMapper:mr}},serializer:Sc},Gc={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCrossConnections/{crossConnectionName}",urlParameters:[Kp,Gp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:ca},default:{bodyMapper:mr}},serializer:Sc},bc={httpMethod:"PUT",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCrossConnections/{crossConnectionName}",urlParameters:[Kp,Gp,tu],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"parameters",mapper:cr({},ca,{required:!0})},responses:{200:{bodyMapper:ca},default:{bodyMapper:mr}},serializer:Sc},hc={httpMethod:"PATCH",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCrossConnections/{crossConnectionName}",urlParameters:[Kp,Gp,tu],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"crossConnectionParameters",mapper:cr({},Gi,{required:!0})},responses:{200:{bodyMapper:ca},default:{bodyMapper:mr}},serializer:Sc},kc={httpMethod:"POST",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCrossConnections/{crossConnectionName}/peerings/{peeringName}/arpTables/{devicePath}",urlParameters:[Kp,Gp,Up,hp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:ea},202:{},default:{bodyMapper:mr}},serializer:Sc},zc={httpMethod:"POST",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCrossConnections/{crossConnectionName}/peerings/{peeringName}/routeTablesSummary/{devicePath}",urlParameters:[Kp,Gp,Up,hp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:pa},202:{},default:{bodyMapper:mr}},serializer:Sc},vc={httpMethod:"POST",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCrossConnections/{crossConnectionName}/peerings/{peeringName}/routeTables/{devicePath}",urlParameters:[Kp,Gp,Up,hp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:ra},202:{},default:{bodyMapper:mr}},serializer:Sc},Ic={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:fs},default:{bodyMapper:mr}},serializer:Sc},Ec={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:fs},default:{bodyMapper:mr}},serializer:Sc},Mc=Object.freeze({ExpressRouteCrossConnectionPeeringList:Ss,ExpressRouteCrossConnectionPeering:la,SubResource:Pr,BaseResource:yr,ExpressRouteCircuitPeeringConfig:Hi,Ipv6ExpressRouteCircuitPeeringConfig:Qi,RouteFilter:Zi,Resource:Cr,RouteFilterRule:Ui,ExpressRouteCircuitPeering:ji,ExpressRouteCircuitStats:Wi,ExpressRouteConnectionId:_i,ExpressRouteCircuitConnection:Ki,CloudError:mr,NetworkInterfaceTapConfiguration:Nr,VirtualNetworkTap:Dr,NetworkInterfaceIPConfiguration:Wr,ApplicationGatewayBackendAddressPool:Kr,ApplicationGatewayBackendAddress:_r,BackendAddressPool:Hr,InboundNatRule:Ur,Subnet:Br,NetworkSecurityGroup:Gr,SecurityRule:Rr,ApplicationSecurityGroup:wr,NetworkInterface:Ar,InterfaceEndpoint:Sr,EndpointService:fr,NetworkInterfaceDnsSettings:gr,RouteTable:hr,Route:br,ServiceEndpointPropertiesFormat:kr,ServiceEndpointPolicy:vr,ServiceEndpointPolicyDefinition:zr,IPConfiguration:xr,PublicIPAddress:Vr,PublicIPAddressSku:Ir,PublicIPAddressDnsSettings:Er,IpTag:Mr,IPConfigurationProfile:Fr,ResourceNavigationLink:qr,ServiceAssociationLink:Tr,Delegation:Lr,FrontendIPConfiguration:Or,ApplicationGatewayBackendHttpSettings:Zr,ApplicationGatewayConnectionDraining:jr,ApplicationGatewayIPConfiguration:ti,ApplicationGatewayAuthenticationCertificate:ri,ApplicationGatewayTrustedRootCertificate:ii,ApplicationGatewaySslCertificate:ai,ApplicationGatewayFrontendIPConfiguration:oi,ApplicationGatewayFrontendPort:ni,ApplicationGatewayHttpListener:si,ApplicationGatewayPathRule:pi,ApplicationGatewayProbe:li,ApplicationGatewayProbeHealthResponseMatch:ui,ApplicationGatewayRequestRoutingRule:ci,ApplicationGatewayRedirectConfiguration:di,ApplicationGatewayUrlPathMap:mi,ApplicationGateway:Ci,ApplicationGatewaySku:Yr,ApplicationGatewaySslPolicy:ei,ApplicationGatewayWebApplicationFirewallConfiguration:Pi,ApplicationGatewayFirewallDisabledRuleGroup:yi,ApplicationGatewayAutoscaleConfiguration:Ni,ApplicationGatewayFirewallRuleSet:fi,ApplicationGatewayFirewallRuleGroup:Ri,ApplicationGatewayFirewallRule:wi,ApplicationGatewayAvailableSslOptions:gi,ApplicationGatewaySslPredefinedPolicy:Ai,AzureFirewallIPConfiguration:hi,AzureFirewallApplicationRuleCollection:Ii,AzureFirewallRCAction:ki,AzureFirewallApplicationRule:vi,AzureFirewallApplicationRuleProtocol:zi,AzureFirewallNatRuleCollection:Vi,AzureFirewallNatRCAction:Ei,AzureFirewallNatRule:Mi,AzureFirewallNetworkRuleCollection:Fi,AzureFirewallNetworkRule:xi,AzureFirewall:qi,AzureFirewallFqdnTag:Ti,DdosProtectionPlan:Bi,EndpointServiceResult:Oi,ExpressRouteCircuitAuthorization:Di,ExpressRouteCircuit:Ji,ExpressRouteCircuitSku:Xi,ExpressRouteCircuitServiceProviderProperties:$i,ExpressRouteServiceProvider:na,ExpressRouteServiceProviderBandwidthsOffered:oa,ExpressRouteCrossConnection:ca,ExpressRouteCircuitReference:ua,ExpressRouteConnection:Na,ExpressRouteCircuitPeeringId:ma,ExpressRouteGateway:Ca,ExpressRouteGatewayPropertiesAutoScaleConfiguration:Pa,ExpressRouteGatewayPropertiesAutoScaleConfigurationBounds:ya,VirtualHubId:da,LoadBalancingRule:Sa,Probe:ga,InboundNatPool:Aa,OutboundRule:Ga,LoadBalancer:ba,LoadBalancerSku:fa,ContainerNetworkInterfaceConfiguration:xa,ContainerNetworkInterface:Ta,Container:Fa,ContainerNetworkInterfaceIpConfiguration:qa,NetworkProfile:La,NetworkWatcher:Oa,ConnectionMonitorResult:Bo,ConnectionMonitorSource:qo,ConnectionMonitorDestination:To,PublicIPPrefix:nn,PublicIPPrefixSku:an,ReferencedPublicIpAddress:on,PatchRouteFilterRule:sn,PatchRouteFilter:pn,BgpServiceCommunity:ln,BGPCommunity:un,VirtualNetworkPeering:yn,AddressSpace:mn,VirtualNetwork:Nn,DhcpOptions:Pn,VirtualNetworkGatewayIPConfiguration:fn,VpnClientRootCertificate:gn,VpnClientRevokedCertificate:An,VirtualNetworkGateway:vn,VirtualNetworkGatewaySku:Sn,VpnClientConfiguration:bn,IpsecPolicy:Gn,BgpSettings:hn,LocalNetworkGateway:xn,VirtualNetworkGatewayConnection:Fn,TunnelConnectionHealth:Vn,ConnectionSharedKey:Tn,VirtualNetworkGatewayConnectionListEntity:On,VirtualNetworkConnectionGatewayReference:Bn,P2SVpnServerConfigVpnClientRootCertificate:Hn,P2SVpnServerConfigVpnClientRevokedCertificate:Un,P2SVpnServerConfigRadiusServerRootCertificate:Wn,P2SVpnServerConfigRadiusClientRootCertificate:_n,P2SVpnServerConfiguration:Kn,VirtualWAN:jn,VpnSite:Qn,DeviceProperties:Zn,HubVirtualNetworkConnection:$n,VirtualHub:es,VirtualHubRouteTable:Yn,VirtualHubRoute:Jn,VpnConnection:ts,VpnGateway:rs,P2SVpnGateway:os,VpnClientConnectionHealth:as}),Vc=function(){function e(e){this.client=e}return e.prototype.list=function(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,crossConnectionName:t,options:r},Fc,i)},e.prototype.deleteMethod=function(e,t,r,i){return this.beginDeleteMethod(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.get=function(e,t,r,i,a){return this.client.sendOperationRequest({resourceGroupName:e,crossConnectionName:t,peeringName:r,options:i},qc,a)},e.prototype.createOrUpdate=function(e,t,r,i,a){return this.beginCreateOrUpdate(e,t,r,i,a).then(function(e){return e.pollUntilFinished()})},e.prototype.beginDeleteMethod=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,crossConnectionName:t,peeringName:r,options:i},Tc,i)},e.prototype.beginCreateOrUpdate=function(e,t,r,i,a){return this.client.sendLRORequest({resourceGroupName:e,crossConnectionName:t,peeringName:r,peeringParameters:i,options:a},Lc,a)},e.prototype.listNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},Bc,r)},e}(),xc=new r.Serializer(Mc),Fc={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCrossConnections/{crossConnectionName}/peerings",urlParameters:[Kp,Gp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:Ss},default:{bodyMapper:mr}},serializer:xc},qc={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCrossConnections/{crossConnectionName}/peerings/{peeringName}",urlParameters:[Kp,Gp,Up,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:la},default:{bodyMapper:mr}},serializer:xc},Tc={httpMethod:"DELETE",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCrossConnections/{crossConnectionName}/peerings/{peeringName}",urlParameters:[Kp,Gp,Up,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{},202:{},204:{},default:{bodyMapper:mr}},serializer:xc},Lc={httpMethod:"PUT",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCrossConnections/{crossConnectionName}/peerings/{peeringName}",urlParameters:[Kp,Gp,Up,tu],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"peeringParameters",mapper:cr({},la,{required:!0})},responses:{200:{bodyMapper:la},201:{bodyMapper:la},default:{bodyMapper:mr}},serializer:xc},Bc={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:Ss},default:{bodyMapper:mr}},serializer:xc},Oc=Object.freeze({ExpressRouteGatewayList:wa,ExpressRouteGateway:Ca,Resource:Cr,BaseResource:yr,ExpressRouteGatewayPropertiesAutoScaleConfiguration:Pa,ExpressRouteGatewayPropertiesAutoScaleConfigurationBounds:ya,ExpressRouteConnection:Na,SubResource:Pr,ExpressRouteCircuitPeeringId:ma,VirtualHubId:da,CloudError:mr,NetworkInterfaceTapConfiguration:Nr,VirtualNetworkTap:Dr,NetworkInterfaceIPConfiguration:Wr,ApplicationGatewayBackendAddressPool:Kr,ApplicationGatewayBackendAddress:_r,BackendAddressPool:Hr,InboundNatRule:Ur,Subnet:Br,NetworkSecurityGroup:Gr,SecurityRule:Rr,ApplicationSecurityGroup:wr,NetworkInterface:Ar,InterfaceEndpoint:Sr,EndpointService:fr,NetworkInterfaceDnsSettings:gr,RouteTable:hr,Route:br,ServiceEndpointPropertiesFormat:kr,ServiceEndpointPolicy:vr,ServiceEndpointPolicyDefinition:zr,IPConfiguration:xr,PublicIPAddress:Vr,PublicIPAddressSku:Ir,PublicIPAddressDnsSettings:Er,IpTag:Mr,IPConfigurationProfile:Fr,ResourceNavigationLink:qr,ServiceAssociationLink:Tr,Delegation:Lr,FrontendIPConfiguration:Or,ApplicationGatewayBackendHttpSettings:Zr,ApplicationGatewayConnectionDraining:jr,ApplicationGatewayIPConfiguration:ti,ApplicationGatewayAuthenticationCertificate:ri,ApplicationGatewayTrustedRootCertificate:ii,ApplicationGatewaySslCertificate:ai,ApplicationGatewayFrontendIPConfiguration:oi,ApplicationGatewayFrontendPort:ni,ApplicationGatewayHttpListener:si,ApplicationGatewayPathRule:pi,ApplicationGatewayProbe:li,ApplicationGatewayProbeHealthResponseMatch:ui,ApplicationGatewayRequestRoutingRule:ci,ApplicationGatewayRedirectConfiguration:di,ApplicationGatewayUrlPathMap:mi,ApplicationGateway:Ci,ApplicationGatewaySku:Yr,ApplicationGatewaySslPolicy:ei,ApplicationGatewayWebApplicationFirewallConfiguration:Pi,ApplicationGatewayFirewallDisabledRuleGroup:yi,ApplicationGatewayAutoscaleConfiguration:Ni,ApplicationGatewayFirewallRuleSet:fi,ApplicationGatewayFirewallRuleGroup:Ri,ApplicationGatewayFirewallRule:wi,ApplicationGatewayAvailableSslOptions:gi,ApplicationGatewaySslPredefinedPolicy:Ai,AzureFirewallIPConfiguration:hi,AzureFirewallApplicationRuleCollection:Ii,AzureFirewallRCAction:ki,AzureFirewallApplicationRule:vi,AzureFirewallApplicationRuleProtocol:zi,AzureFirewallNatRuleCollection:Vi,AzureFirewallNatRCAction:Ei,AzureFirewallNatRule:Mi,AzureFirewallNetworkRuleCollection:Fi,AzureFirewallNetworkRule:xi,AzureFirewall:qi,AzureFirewallFqdnTag:Ti,DdosProtectionPlan:Bi,EndpointServiceResult:Oi,ExpressRouteCircuitAuthorization:Di,RouteFilterRule:Ui,ExpressRouteCircuitConnection:Ki,ExpressRouteCircuitPeering:ji,ExpressRouteCircuitPeeringConfig:Hi,ExpressRouteCircuitStats:Wi,RouteFilter:Zi,Ipv6ExpressRouteCircuitPeeringConfig:Qi,ExpressRouteConnectionId:_i,ExpressRouteCircuit:Ji,ExpressRouteCircuitSku:Xi,ExpressRouteCircuitServiceProviderProperties:$i,ExpressRouteServiceProvider:na,ExpressRouteServiceProviderBandwidthsOffered:oa,ExpressRouteCrossConnectionPeering:la,ExpressRouteCrossConnection:ca,ExpressRouteCircuitReference:ua,LoadBalancingRule:Sa,Probe:ga,InboundNatPool:Aa,OutboundRule:Ga,LoadBalancer:ba,LoadBalancerSku:fa,ContainerNetworkInterfaceConfiguration:xa,ContainerNetworkInterface:Ta,Container:Fa,ContainerNetworkInterfaceIpConfiguration:qa,NetworkProfile:La,NetworkWatcher:Oa,ConnectionMonitorResult:Bo,ConnectionMonitorSource:qo,ConnectionMonitorDestination:To,PublicIPPrefix:nn,PublicIPPrefixSku:an,ReferencedPublicIpAddress:on,PatchRouteFilterRule:sn,PatchRouteFilter:pn,BgpServiceCommunity:ln,BGPCommunity:un,VirtualNetworkPeering:yn,AddressSpace:mn,VirtualNetwork:Nn,DhcpOptions:Pn,VirtualNetworkGatewayIPConfiguration:fn,VpnClientRootCertificate:gn,VpnClientRevokedCertificate:An,VirtualNetworkGateway:vn,VirtualNetworkGatewaySku:Sn,VpnClientConfiguration:bn,IpsecPolicy:Gn,BgpSettings:hn,LocalNetworkGateway:xn,VirtualNetworkGatewayConnection:Fn,TunnelConnectionHealth:Vn,ConnectionSharedKey:Tn,VirtualNetworkGatewayConnectionListEntity:On,VirtualNetworkConnectionGatewayReference:Bn,P2SVpnServerConfigVpnClientRootCertificate:Hn,P2SVpnServerConfigVpnClientRevokedCertificate:Un,P2SVpnServerConfigRadiusServerRootCertificate:Wn,P2SVpnServerConfigRadiusClientRootCertificate:_n,P2SVpnServerConfiguration:Kn,VirtualWAN:jn,VpnSite:Qn,DeviceProperties:Zn,HubVirtualNetworkConnection:$n,VirtualHub:es,VirtualHubRouteTable:Yn,VirtualHubRoute:Jn,VpnConnection:ts,VpnGateway:rs,P2SVpnGateway:os,VpnClientConnectionHealth:as}),Dc=function(){function e(e){this.client=e}return e.prototype.listBySubscription=function(e,t){return this.client.sendOperationRequest({options:e},Uc,t)},e.prototype.listByResourceGroup=function(e,t,r){return this.client.sendOperationRequest({resourceGroupName:e,options:t},Wc,r)},e.prototype.createOrUpdate=function(e,t,r,i){return this.beginCreateOrUpdate(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.get=function(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,expressRouteGatewayName:t,options:r},_c,i)},e.prototype.deleteMethod=function(e,t,r){return this.beginDeleteMethod(e,t,r).then(function(e){return e.pollUntilFinished()})},e.prototype.beginCreateOrUpdate=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,expressRouteGatewayName:t,putExpressRouteGatewayParameters:r,options:i},Kc,i)},e.prototype.beginDeleteMethod=function(e,t,r){return this.client.sendLRORequest({resourceGroupName:e,expressRouteGatewayName:t,options:r},jc,r)},e}(),Hc=new r.Serializer(Oc),Uc={httpMethod:"GET",path:"subscriptions/{subscriptionId}/providers/Microsoft.Network/expressRouteGateways",urlParameters:[tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:wa},default:{bodyMapper:mr}},serializer:Hc},Wc={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteGateways",urlParameters:[Kp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:wa},default:{bodyMapper:mr}},serializer:Hc},_c={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteGateways/{expressRouteGatewayName}",urlParameters:[Kp,zp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:Ca},default:{bodyMapper:mr}},serializer:Hc},Kc={httpMethod:"PUT",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteGateways/{expressRouteGatewayName}",urlParameters:[Kp,zp,tu],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"putExpressRouteGatewayParameters",mapper:cr({},Ca,{required:!0})},responses:{200:{bodyMapper:Ca},201:{bodyMapper:Ca},default:{bodyMapper:mr}},serializer:Hc},jc={httpMethod:"DELETE",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteGateways/{expressRouteGatewayName}",urlParameters:[Kp,zp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{},202:{},204:{},default:{bodyMapper:mr}},serializer:Hc},Zc=Object.freeze({ExpressRouteConnection:Na,SubResource:Pr,BaseResource:yr,ExpressRouteCircuitPeeringId:ma,CloudError:mr,ExpressRouteConnectionList:Ra,NetworkInterfaceTapConfiguration:Nr,VirtualNetworkTap:Dr,Resource:Cr,NetworkInterfaceIPConfiguration:Wr,ApplicationGatewayBackendAddressPool:Kr,ApplicationGatewayBackendAddress:_r,BackendAddressPool:Hr,InboundNatRule:Ur,Subnet:Br,NetworkSecurityGroup:Gr,SecurityRule:Rr,ApplicationSecurityGroup:wr,NetworkInterface:Ar,InterfaceEndpoint:Sr,EndpointService:fr,NetworkInterfaceDnsSettings:gr,RouteTable:hr,Route:br,ServiceEndpointPropertiesFormat:kr,ServiceEndpointPolicy:vr,ServiceEndpointPolicyDefinition:zr,IPConfiguration:xr,PublicIPAddress:Vr,PublicIPAddressSku:Ir,PublicIPAddressDnsSettings:Er,IpTag:Mr,IPConfigurationProfile:Fr,ResourceNavigationLink:qr,ServiceAssociationLink:Tr,Delegation:Lr,FrontendIPConfiguration:Or,ApplicationGatewayBackendHttpSettings:Zr,ApplicationGatewayConnectionDraining:jr,ApplicationGatewayIPConfiguration:ti,ApplicationGatewayAuthenticationCertificate:ri,ApplicationGatewayTrustedRootCertificate:ii,ApplicationGatewaySslCertificate:ai,ApplicationGatewayFrontendIPConfiguration:oi,ApplicationGatewayFrontendPort:ni,ApplicationGatewayHttpListener:si,ApplicationGatewayPathRule:pi,ApplicationGatewayProbe:li,ApplicationGatewayProbeHealthResponseMatch:ui,ApplicationGatewayRequestRoutingRule:ci,ApplicationGatewayRedirectConfiguration:di,ApplicationGatewayUrlPathMap:mi,ApplicationGateway:Ci,ApplicationGatewaySku:Yr,ApplicationGatewaySslPolicy:ei,ApplicationGatewayWebApplicationFirewallConfiguration:Pi,ApplicationGatewayFirewallDisabledRuleGroup:yi,ApplicationGatewayAutoscaleConfiguration:Ni,ApplicationGatewayFirewallRuleSet:fi,ApplicationGatewayFirewallRuleGroup:Ri,ApplicationGatewayFirewallRule:wi,ApplicationGatewayAvailableSslOptions:gi,ApplicationGatewaySslPredefinedPolicy:Ai,AzureFirewallIPConfiguration:hi,AzureFirewallApplicationRuleCollection:Ii,AzureFirewallRCAction:ki,AzureFirewallApplicationRule:vi,AzureFirewallApplicationRuleProtocol:zi,AzureFirewallNatRuleCollection:Vi,AzureFirewallNatRCAction:Ei,AzureFirewallNatRule:Mi,AzureFirewallNetworkRuleCollection:Fi,AzureFirewallNetworkRule:xi,AzureFirewall:qi,AzureFirewallFqdnTag:Ti,DdosProtectionPlan:Bi,EndpointServiceResult:Oi,ExpressRouteCircuitAuthorization:Di,RouteFilterRule:Ui,ExpressRouteCircuitConnection:Ki,ExpressRouteCircuitPeering:ji,ExpressRouteCircuitPeeringConfig:Hi,ExpressRouteCircuitStats:Wi,RouteFilter:Zi,Ipv6ExpressRouteCircuitPeeringConfig:Qi,ExpressRouteConnectionId:_i,ExpressRouteCircuit:Ji,ExpressRouteCircuitSku:Xi,ExpressRouteCircuitServiceProviderProperties:$i,ExpressRouteServiceProvider:na,ExpressRouteServiceProviderBandwidthsOffered:oa,ExpressRouteCrossConnectionPeering:la,ExpressRouteCrossConnection:ca,ExpressRouteCircuitReference:ua,ExpressRouteGateway:Ca,ExpressRouteGatewayPropertiesAutoScaleConfiguration:Pa,ExpressRouteGatewayPropertiesAutoScaleConfigurationBounds:ya,VirtualHubId:da,LoadBalancingRule:Sa,Probe:ga,InboundNatPool:Aa,OutboundRule:Ga,LoadBalancer:ba,LoadBalancerSku:fa,ContainerNetworkInterfaceConfiguration:xa,ContainerNetworkInterface:Ta,Container:Fa,ContainerNetworkInterfaceIpConfiguration:qa,NetworkProfile:La,NetworkWatcher:Oa,ConnectionMonitorResult:Bo,ConnectionMonitorSource:qo,ConnectionMonitorDestination:To,PublicIPPrefix:nn,PublicIPPrefixSku:an,ReferencedPublicIpAddress:on,PatchRouteFilterRule:sn,PatchRouteFilter:pn,BgpServiceCommunity:ln,BGPCommunity:un,VirtualNetworkPeering:yn,AddressSpace:mn,VirtualNetwork:Nn,DhcpOptions:Pn,VirtualNetworkGatewayIPConfiguration:fn,VpnClientRootCertificate:gn,VpnClientRevokedCertificate:An,VirtualNetworkGateway:vn,VirtualNetworkGatewaySku:Sn,VpnClientConfiguration:bn,IpsecPolicy:Gn,BgpSettings:hn,LocalNetworkGateway:xn,VirtualNetworkGatewayConnection:Fn,TunnelConnectionHealth:Vn,ConnectionSharedKey:Tn,VirtualNetworkGatewayConnectionListEntity:On,VirtualNetworkConnectionGatewayReference:Bn,P2SVpnServerConfigVpnClientRootCertificate:Hn,P2SVpnServerConfigVpnClientRevokedCertificate:Un,P2SVpnServerConfigRadiusServerRootCertificate:Wn,P2SVpnServerConfigRadiusClientRootCertificate:_n,P2SVpnServerConfiguration:Kn,VirtualWAN:jn,VpnSite:Qn,DeviceProperties:Zn,HubVirtualNetworkConnection:$n,VirtualHub:es,VirtualHubRouteTable:Yn,VirtualHubRoute:Jn,VpnConnection:ts,VpnGateway:rs,P2SVpnGateway:os,VpnClientConnectionHealth:as}),Qc=function(){function e(e){this.client=e}return e.prototype.createOrUpdate=function(e,t,r,i,a){return this.beginCreateOrUpdate(e,t,r,i,a).then(function(e){return e.pollUntilFinished()})},e.prototype.get=function(e,t,r,i,a){return this.client.sendOperationRequest({resourceGroupName:e,expressRouteGatewayName:t,connectionName:r,options:i},$c,a)},e.prototype.deleteMethod=function(e,t,r,i){return this.beginDeleteMethod(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.list=function(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,expressRouteGatewayName:t,options:r},Jc,i)},e.prototype.beginCreateOrUpdate=function(e,t,r,i,a){return this.client.sendLRORequest({resourceGroupName:e,expressRouteGatewayName:t,connectionName:r,putExpressRouteConnectionParameters:i,options:a},Yc,a)},e.prototype.beginDeleteMethod=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,expressRouteGatewayName:t,connectionName:r,options:i},ed,i)},e}(),Xc=new r.Serializer(Zc),$c={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteGateways/{expressRouteGatewayName}/expressRouteConnections/{connectionName}",urlParameters:[Kp,zp,Ap,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:Na},default:{bodyMapper:mr}},serializer:Xc},Jc={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteGateways/{expressRouteGatewayName}/expressRouteConnections",urlParameters:[Kp,zp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:Ra},default:{bodyMapper:mr}},serializer:Xc},Yc={httpMethod:"PUT",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteGateways/{expressRouteGatewayName}/expressRouteConnections/{connectionName}",urlParameters:[Kp,zp,Ap,tu],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"putExpressRouteConnectionParameters",mapper:cr({},Na,{required:!0})},responses:{200:{bodyMapper:Na},201:{bodyMapper:Na},default:{bodyMapper:mr}},serializer:Xc},ed={httpMethod:"DELETE",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteGateways/{expressRouteGatewayName}/expressRouteConnections/{connectionName}",urlParameters:[Kp,zp,Ap,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{},202:{},204:{},default:{bodyMapper:mr}},serializer:Xc},td=Object.freeze({CloudError:mr,InterfaceEndpoint:Sr,Resource:Cr,BaseResource:yr,EndpointService:fr,Subnet:Br,SubResource:Pr,NetworkSecurityGroup:Gr,SecurityRule:Rr,ApplicationSecurityGroup:wr,NetworkInterface:Ar,NetworkInterfaceIPConfiguration:Wr,VirtualNetworkTap:Dr,NetworkInterfaceTapConfiguration:Nr,FrontendIPConfiguration:Or,PublicIPAddress:Vr,PublicIPAddressSku:Ir,IPConfiguration:xr,PublicIPAddressDnsSettings:Er,IpTag:Mr,ApplicationGatewayBackendAddressPool:Kr,ApplicationGatewayBackendAddress:_r,BackendAddressPool:Hr,InboundNatRule:Ur,NetworkInterfaceDnsSettings:gr,RouteTable:hr,Route:br,ServiceEndpointPropertiesFormat:kr,ServiceEndpointPolicy:vr,ServiceEndpointPolicyDefinition:zr,IPConfigurationProfile:Fr,ResourceNavigationLink:qr,ServiceAssociationLink:Tr,Delegation:Lr,InterfaceEndpointListResult:gs,ApplicationGatewayBackendHttpSettings:Zr,ApplicationGatewayConnectionDraining:jr,ApplicationGatewayIPConfiguration:ti,ApplicationGatewayAuthenticationCertificate:ri,ApplicationGatewayTrustedRootCertificate:ii,ApplicationGatewaySslCertificate:ai,ApplicationGatewayFrontendIPConfiguration:oi,ApplicationGatewayFrontendPort:ni,ApplicationGatewayHttpListener:si,ApplicationGatewayPathRule:pi,ApplicationGatewayProbe:li,ApplicationGatewayProbeHealthResponseMatch:ui,ApplicationGatewayRequestRoutingRule:ci,ApplicationGatewayRedirectConfiguration:di,ApplicationGatewayUrlPathMap:mi,ApplicationGateway:Ci,ApplicationGatewaySku:Yr,ApplicationGatewaySslPolicy:ei,ApplicationGatewayWebApplicationFirewallConfiguration:Pi,ApplicationGatewayFirewallDisabledRuleGroup:yi,ApplicationGatewayAutoscaleConfiguration:Ni,ApplicationGatewayFirewallRuleSet:fi,ApplicationGatewayFirewallRuleGroup:Ri,ApplicationGatewayFirewallRule:wi,ApplicationGatewayAvailableSslOptions:gi,ApplicationGatewaySslPredefinedPolicy:Ai,AzureFirewallIPConfiguration:hi,AzureFirewallApplicationRuleCollection:Ii,AzureFirewallRCAction:ki,AzureFirewallApplicationRule:vi,AzureFirewallApplicationRuleProtocol:zi,AzureFirewallNatRuleCollection:Vi,AzureFirewallNatRCAction:Ei,AzureFirewallNatRule:Mi,AzureFirewallNetworkRuleCollection:Fi,AzureFirewallNetworkRule:xi,AzureFirewall:qi,AzureFirewallFqdnTag:Ti,DdosProtectionPlan:Bi,EndpointServiceResult:Oi,ExpressRouteCircuitAuthorization:Di,RouteFilterRule:Ui,ExpressRouteCircuitConnection:Ki,ExpressRouteCircuitPeering:ji,ExpressRouteCircuitPeeringConfig:Hi,ExpressRouteCircuitStats:Wi,RouteFilter:Zi,Ipv6ExpressRouteCircuitPeeringConfig:Qi,ExpressRouteConnectionId:_i,ExpressRouteCircuit:Ji,ExpressRouteCircuitSku:Xi,ExpressRouteCircuitServiceProviderProperties:$i,ExpressRouteServiceProvider:na,ExpressRouteServiceProviderBandwidthsOffered:oa,ExpressRouteCrossConnectionPeering:la,ExpressRouteCrossConnection:ca,ExpressRouteCircuitReference:ua,ExpressRouteConnection:Na,ExpressRouteCircuitPeeringId:ma,ExpressRouteGateway:Ca,ExpressRouteGatewayPropertiesAutoScaleConfiguration:Pa,ExpressRouteGatewayPropertiesAutoScaleConfigurationBounds:ya,VirtualHubId:da,LoadBalancingRule:Sa,Probe:ga,InboundNatPool:Aa,OutboundRule:Ga,LoadBalancer:ba,LoadBalancerSku:fa,ContainerNetworkInterfaceConfiguration:xa,ContainerNetworkInterface:Ta,Container:Fa,ContainerNetworkInterfaceIpConfiguration:qa,NetworkProfile:La,NetworkWatcher:Oa,ConnectionMonitorResult:Bo,ConnectionMonitorSource:qo,ConnectionMonitorDestination:To,PublicIPPrefix:nn,PublicIPPrefixSku:an,ReferencedPublicIpAddress:on,PatchRouteFilterRule:sn,PatchRouteFilter:pn,BgpServiceCommunity:ln,BGPCommunity:un,VirtualNetworkPeering:yn,AddressSpace:mn,VirtualNetwork:Nn,DhcpOptions:Pn,VirtualNetworkGatewayIPConfiguration:fn,VpnClientRootCertificate:gn,VpnClientRevokedCertificate:An,VirtualNetworkGateway:vn,VirtualNetworkGatewaySku:Sn,VpnClientConfiguration:bn,IpsecPolicy:Gn,BgpSettings:hn,LocalNetworkGateway:xn,VirtualNetworkGatewayConnection:Fn,TunnelConnectionHealth:Vn,ConnectionSharedKey:Tn,VirtualNetworkGatewayConnectionListEntity:On,VirtualNetworkConnectionGatewayReference:Bn,P2SVpnServerConfigVpnClientRootCertificate:Hn,P2SVpnServerConfigVpnClientRevokedCertificate:Un,P2SVpnServerConfigRadiusServerRootCertificate:Wn,P2SVpnServerConfigRadiusClientRootCertificate:_n,P2SVpnServerConfiguration:Kn,VirtualWAN:jn,VpnSite:Qn,DeviceProperties:Zn,HubVirtualNetworkConnection:$n,VirtualHub:es,VirtualHubRouteTable:Yn,VirtualHubRoute:Jn,VpnConnection:ts,VpnGateway:rs,P2SVpnGateway:os,VpnClientConnectionHealth:as}),rd=function(){function e(e){this.client=e}return e.prototype.deleteMethod=function(e,t,r){return this.beginDeleteMethod(e,t,r).then(function(e){return e.pollUntilFinished()})},e.prototype.get=function(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,interfaceEndpointName:t,options:r},ad,i)},e.prototype.createOrUpdate=function(e,t,r,i){return this.beginCreateOrUpdate(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.list=function(e,t,r){return this.client.sendOperationRequest({resourceGroupName:e,options:t},od,r)},e.prototype.listBySubscription=function(e,t){return this.client.sendOperationRequest({options:e},nd,t)},e.prototype.beginDeleteMethod=function(e,t,r){return this.client.sendLRORequest({resourceGroupName:e,interfaceEndpointName:t,options:r},sd,r)},e.prototype.beginCreateOrUpdate=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,interfaceEndpointName:t,parameters:r,options:i},pd,i)},e.prototype.listNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},ud,r)},e.prototype.listBySubscriptionNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},ld,r)},e}(),id=new r.Serializer(td),ad={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/interfaceEndpoints/{interfaceEndpointName}",urlParameters:[Kp,Ep,tu],queryParameters:[Pp,kp],headerParameters:[yp],responses:{200:{bodyMapper:Sr},default:{bodyMapper:mr}},serializer:id},od={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/interfaceEndpoints",urlParameters:[Kp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:gs},default:{bodyMapper:mr}},serializer:id},nd={httpMethod:"GET",path:"subscriptions/{subscriptionId}/providers/Microsoft.Network/interfaceEndpoints",urlParameters:[tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:gs},default:{bodyMapper:mr}},serializer:id},sd={httpMethod:"DELETE",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/interfaceEndpoints/{interfaceEndpointName}",urlParameters:[Kp,Ep,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{},202:{},204:{},default:{bodyMapper:mr}},serializer:id},pd={httpMethod:"PUT",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/interfaceEndpoints/{interfaceEndpointName}",urlParameters:[Kp,Ep,tu],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"parameters",mapper:cr({},Sr,{required:!0})},responses:{200:{bodyMapper:Sr},201:{bodyMapper:Sr},default:{bodyMapper:mr}},serializer:id},ud={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:gs},default:{bodyMapper:mr}},serializer:id},ld={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:gs},default:{bodyMapper:mr}},serializer:id},cd=Object.freeze({CloudError:mr,LoadBalancer:ba,Resource:Cr,BaseResource:yr,LoadBalancerSku:fa,FrontendIPConfiguration:Or,SubResource:Pr,Subnet:Br,NetworkSecurityGroup:Gr,SecurityRule:Rr,ApplicationSecurityGroup:wr,NetworkInterface:Ar,InterfaceEndpoint:Sr,EndpointService:fr,NetworkInterfaceIPConfiguration:Wr,VirtualNetworkTap:Dr,NetworkInterfaceTapConfiguration:Nr,ApplicationGatewayBackendAddressPool:Kr,ApplicationGatewayBackendAddress:_r,BackendAddressPool:Hr,InboundNatRule:Ur,PublicIPAddress:Vr,PublicIPAddressSku:Ir,IPConfiguration:xr,PublicIPAddressDnsSettings:Er,IpTag:Mr,NetworkInterfaceDnsSettings:gr,RouteTable:hr,Route:br,ServiceEndpointPropertiesFormat:kr,ServiceEndpointPolicy:vr,ServiceEndpointPolicyDefinition:zr,IPConfigurationProfile:Fr,ResourceNavigationLink:qr,ServiceAssociationLink:Tr,Delegation:Lr,LoadBalancingRule:Sa,Probe:ga,InboundNatPool:Aa,OutboundRule:Ga,TagsObject:Gi,LoadBalancerListResult:As,ApplicationGatewayBackendHttpSettings:Zr,ApplicationGatewayConnectionDraining:jr,ApplicationGatewayIPConfiguration:ti,ApplicationGatewayAuthenticationCertificate:ri,ApplicationGatewayTrustedRootCertificate:ii,ApplicationGatewaySslCertificate:ai,ApplicationGatewayFrontendIPConfiguration:oi,ApplicationGatewayFrontendPort:ni,ApplicationGatewayHttpListener:si,ApplicationGatewayPathRule:pi,ApplicationGatewayProbe:li,ApplicationGatewayProbeHealthResponseMatch:ui,ApplicationGatewayRequestRoutingRule:ci,ApplicationGatewayRedirectConfiguration:di,ApplicationGatewayUrlPathMap:mi,ApplicationGateway:Ci,ApplicationGatewaySku:Yr,ApplicationGatewaySslPolicy:ei,ApplicationGatewayWebApplicationFirewallConfiguration:Pi,ApplicationGatewayFirewallDisabledRuleGroup:yi,ApplicationGatewayAutoscaleConfiguration:Ni,ApplicationGatewayFirewallRuleSet:fi,ApplicationGatewayFirewallRuleGroup:Ri,ApplicationGatewayFirewallRule:wi,ApplicationGatewayAvailableSslOptions:gi,ApplicationGatewaySslPredefinedPolicy:Ai,AzureFirewallIPConfiguration:hi,AzureFirewallApplicationRuleCollection:Ii,AzureFirewallRCAction:ki,AzureFirewallApplicationRule:vi,AzureFirewallApplicationRuleProtocol:zi,AzureFirewallNatRuleCollection:Vi,AzureFirewallNatRCAction:Ei,AzureFirewallNatRule:Mi,AzureFirewallNetworkRuleCollection:Fi,AzureFirewallNetworkRule:xi,AzureFirewall:qi,AzureFirewallFqdnTag:Ti,DdosProtectionPlan:Bi,EndpointServiceResult:Oi,ExpressRouteCircuitAuthorization:Di,RouteFilterRule:Ui,ExpressRouteCircuitConnection:Ki,ExpressRouteCircuitPeering:ji,ExpressRouteCircuitPeeringConfig:Hi,ExpressRouteCircuitStats:Wi,RouteFilter:Zi,Ipv6ExpressRouteCircuitPeeringConfig:Qi,ExpressRouteConnectionId:_i,ExpressRouteCircuit:Ji,ExpressRouteCircuitSku:Xi,ExpressRouteCircuitServiceProviderProperties:$i,ExpressRouteServiceProvider:na,ExpressRouteServiceProviderBandwidthsOffered:oa,ExpressRouteCrossConnectionPeering:la,ExpressRouteCrossConnection:ca,ExpressRouteCircuitReference:ua,ExpressRouteConnection:Na,ExpressRouteCircuitPeeringId:ma,ExpressRouteGateway:Ca,ExpressRouteGatewayPropertiesAutoScaleConfiguration:Pa,ExpressRouteGatewayPropertiesAutoScaleConfigurationBounds:ya,VirtualHubId:da,ContainerNetworkInterfaceConfiguration:xa,ContainerNetworkInterface:Ta,Container:Fa,ContainerNetworkInterfaceIpConfiguration:qa,NetworkProfile:La,NetworkWatcher:Oa,ConnectionMonitorResult:Bo,ConnectionMonitorSource:qo,ConnectionMonitorDestination:To,PublicIPPrefix:nn,PublicIPPrefixSku:an,ReferencedPublicIpAddress:on,PatchRouteFilterRule:sn,PatchRouteFilter:pn,BgpServiceCommunity:ln,BGPCommunity:un,VirtualNetworkPeering:yn,AddressSpace:mn,VirtualNetwork:Nn,DhcpOptions:Pn,VirtualNetworkGatewayIPConfiguration:fn,VpnClientRootCertificate:gn,VpnClientRevokedCertificate:An,VirtualNetworkGateway:vn,VirtualNetworkGatewaySku:Sn,VpnClientConfiguration:bn,IpsecPolicy:Gn,BgpSettings:hn,LocalNetworkGateway:xn,VirtualNetworkGatewayConnection:Fn,TunnelConnectionHealth:Vn,ConnectionSharedKey:Tn,VirtualNetworkGatewayConnectionListEntity:On,VirtualNetworkConnectionGatewayReference:Bn,P2SVpnServerConfigVpnClientRootCertificate:Hn,P2SVpnServerConfigVpnClientRevokedCertificate:Un,P2SVpnServerConfigRadiusServerRootCertificate:Wn,P2SVpnServerConfigRadiusClientRootCertificate:_n,P2SVpnServerConfiguration:Kn,VirtualWAN:jn,VpnSite:Qn,DeviceProperties:Zn,HubVirtualNetworkConnection:$n,VirtualHub:es,VirtualHubRouteTable:Yn,VirtualHubRoute:Jn,VpnConnection:ts,VpnGateway:rs,P2SVpnGateway:os,VpnClientConnectionHealth:as}),dd=function(){function e(e){this.client=e}return e.prototype.deleteMethod=function(e,t,r){return this.beginDeleteMethod(e,t,r).then(function(e){return e.pollUntilFinished()})},e.prototype.get=function(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,loadBalancerName:t,options:r},yd,i)},e.prototype.createOrUpdate=function(e,t,r,i){return this.beginCreateOrUpdate(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.updateTags=function(e,t,r,i){return this.beginUpdateTags(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.listAll=function(e,t){return this.client.sendOperationRequest({options:e},Pd,t)},e.prototype.list=function(e,t,r){return this.client.sendOperationRequest({resourceGroupName:e,options:t},Nd,r)},e.prototype.beginDeleteMethod=function(e,t,r){return this.client.sendLRORequest({resourceGroupName:e,loadBalancerName:t,options:r},Cd,r)},e.prototype.beginCreateOrUpdate=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,loadBalancerName:t,parameters:r,options:i},wd,i)},e.prototype.beginUpdateTags=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,loadBalancerName:t,parameters:r,options:i},Rd,i)},e.prototype.listAllNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},fd,r)},e.prototype.listNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},Sd,r)},e}(),md=new r.Serializer(cd),yd={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}",urlParameters:[Kp,Vp,tu],queryParameters:[Pp,kp],headerParameters:[yp],responses:{200:{bodyMapper:ba},default:{bodyMapper:mr}},serializer:md},Pd={httpMethod:"GET",path:"subscriptions/{subscriptionId}/providers/Microsoft.Network/loadBalancers",urlParameters:[tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:As},default:{bodyMapper:mr}},serializer:md},Nd={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers",urlParameters:[Kp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:As},default:{bodyMapper:mr}},serializer:md},Cd={httpMethod:"DELETE",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}",urlParameters:[Kp,Vp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{},202:{},204:{},default:{bodyMapper:mr}},serializer:md},wd={httpMethod:"PUT",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}",urlParameters:[Kp,Vp,tu],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"parameters",mapper:cr({},ba,{required:!0})},responses:{200:{bodyMapper:ba},201:{bodyMapper:ba},default:{bodyMapper:mr}},serializer:md},Rd={httpMethod:"PATCH",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}",urlParameters:[Kp,Vp,tu],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"parameters",mapper:cr({},Gi,{required:!0})},responses:{200:{bodyMapper:ba},default:{bodyMapper:mr}},serializer:md},fd={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:As},default:{bodyMapper:mr}},serializer:md},Sd={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:As},default:{bodyMapper:mr}},serializer:md},gd=Object.freeze({LoadBalancerBackendAddressPoolListResult:Gs,BackendAddressPool:Hr,SubResource:Pr,BaseResource:yr,NetworkInterfaceIPConfiguration:Wr,VirtualNetworkTap:Dr,Resource:Cr,NetworkInterfaceTapConfiguration:Nr,FrontendIPConfiguration:Or,Subnet:Br,NetworkSecurityGroup:Gr,SecurityRule:Rr,ApplicationSecurityGroup:wr,NetworkInterface:Ar,InterfaceEndpoint:Sr,EndpointService:fr,NetworkInterfaceDnsSettings:gr,RouteTable:hr,Route:br,ServiceEndpointPropertiesFormat:kr,ServiceEndpointPolicy:vr,ServiceEndpointPolicyDefinition:zr,IPConfiguration:xr,PublicIPAddress:Vr,PublicIPAddressSku:Ir,PublicIPAddressDnsSettings:Er,IpTag:Mr,IPConfigurationProfile:Fr,ResourceNavigationLink:qr,ServiceAssociationLink:Tr,Delegation:Lr,ApplicationGatewayBackendAddressPool:Kr,ApplicationGatewayBackendAddress:_r,InboundNatRule:Ur,CloudError:mr,ApplicationGatewayBackendHttpSettings:Zr,ApplicationGatewayConnectionDraining:jr,ApplicationGatewayIPConfiguration:ti,ApplicationGatewayAuthenticationCertificate:ri,ApplicationGatewayTrustedRootCertificate:ii,ApplicationGatewaySslCertificate:ai,ApplicationGatewayFrontendIPConfiguration:oi,ApplicationGatewayFrontendPort:ni,ApplicationGatewayHttpListener:si,ApplicationGatewayPathRule:pi,ApplicationGatewayProbe:li,ApplicationGatewayProbeHealthResponseMatch:ui,ApplicationGatewayRequestRoutingRule:ci,ApplicationGatewayRedirectConfiguration:di,ApplicationGatewayUrlPathMap:mi,ApplicationGateway:Ci,ApplicationGatewaySku:Yr,ApplicationGatewaySslPolicy:ei,ApplicationGatewayWebApplicationFirewallConfiguration:Pi,ApplicationGatewayFirewallDisabledRuleGroup:yi,ApplicationGatewayAutoscaleConfiguration:Ni,ApplicationGatewayFirewallRuleSet:fi,ApplicationGatewayFirewallRuleGroup:Ri,ApplicationGatewayFirewallRule:wi,ApplicationGatewayAvailableSslOptions:gi,ApplicationGatewaySslPredefinedPolicy:Ai,AzureFirewallIPConfiguration:hi,AzureFirewallApplicationRuleCollection:Ii,AzureFirewallRCAction:ki,AzureFirewallApplicationRule:vi,AzureFirewallApplicationRuleProtocol:zi,AzureFirewallNatRuleCollection:Vi,AzureFirewallNatRCAction:Ei,AzureFirewallNatRule:Mi,AzureFirewallNetworkRuleCollection:Fi,AzureFirewallNetworkRule:xi,AzureFirewall:qi,AzureFirewallFqdnTag:Ti,DdosProtectionPlan:Bi,EndpointServiceResult:Oi,ExpressRouteCircuitAuthorization:Di,RouteFilterRule:Ui,ExpressRouteCircuitConnection:Ki,ExpressRouteCircuitPeering:ji,ExpressRouteCircuitPeeringConfig:Hi,ExpressRouteCircuitStats:Wi,RouteFilter:Zi,Ipv6ExpressRouteCircuitPeeringConfig:Qi,ExpressRouteConnectionId:_i,ExpressRouteCircuit:Ji,ExpressRouteCircuitSku:Xi,ExpressRouteCircuitServiceProviderProperties:$i,ExpressRouteServiceProvider:na,ExpressRouteServiceProviderBandwidthsOffered:oa,ExpressRouteCrossConnectionPeering:la,ExpressRouteCrossConnection:ca,ExpressRouteCircuitReference:ua,ExpressRouteConnection:Na,ExpressRouteCircuitPeeringId:ma,ExpressRouteGateway:Ca,ExpressRouteGatewayPropertiesAutoScaleConfiguration:Pa,ExpressRouteGatewayPropertiesAutoScaleConfigurationBounds:ya,VirtualHubId:da,LoadBalancingRule:Sa,Probe:ga,InboundNatPool:Aa,OutboundRule:Ga,LoadBalancer:ba,LoadBalancerSku:fa,ContainerNetworkInterfaceConfiguration:xa,ContainerNetworkInterface:Ta,Container:Fa,ContainerNetworkInterfaceIpConfiguration:qa,NetworkProfile:La,NetworkWatcher:Oa,ConnectionMonitorResult:Bo,ConnectionMonitorSource:qo,ConnectionMonitorDestination:To,PublicIPPrefix:nn,PublicIPPrefixSku:an,ReferencedPublicIpAddress:on,PatchRouteFilterRule:sn,PatchRouteFilter:pn,BgpServiceCommunity:ln,BGPCommunity:un,VirtualNetworkPeering:yn,AddressSpace:mn,VirtualNetwork:Nn,DhcpOptions:Pn,VirtualNetworkGatewayIPConfiguration:fn,VpnClientRootCertificate:gn,VpnClientRevokedCertificate:An,VirtualNetworkGateway:vn,VirtualNetworkGatewaySku:Sn,VpnClientConfiguration:bn,IpsecPolicy:Gn,BgpSettings:hn,LocalNetworkGateway:xn,VirtualNetworkGatewayConnection:Fn,TunnelConnectionHealth:Vn,ConnectionSharedKey:Tn,VirtualNetworkGatewayConnectionListEntity:On,VirtualNetworkConnectionGatewayReference:Bn,P2SVpnServerConfigVpnClientRootCertificate:Hn,P2SVpnServerConfigVpnClientRevokedCertificate:Un,P2SVpnServerConfigRadiusServerRootCertificate:Wn,P2SVpnServerConfigRadiusClientRootCertificate:_n,P2SVpnServerConfiguration:Kn,VirtualWAN:jn,VpnSite:Qn,DeviceProperties:Zn,HubVirtualNetworkConnection:$n,VirtualHub:es,VirtualHubRouteTable:Yn,VirtualHubRoute:Jn,VpnConnection:ts,VpnGateway:rs,P2SVpnGateway:os,VpnClientConnectionHealth:as}),Ad=function(){function e(e){this.client=e}return e.prototype.list=function(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,loadBalancerName:t,options:r},bd,i)},e.prototype.get=function(e,t,r,i,a){return this.client.sendOperationRequest({resourceGroupName:e,loadBalancerName:t,backendAddressPoolName:r,options:i},hd,a)},e.prototype.listNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},kd,r)},e}(),Gd=new r.Serializer(gd),bd={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/backendAddressPools",urlParameters:[Kp,Vp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:Gs},default:{bodyMapper:mr}},serializer:Gd},hd={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/backendAddressPools/{backendAddressPoolName}",urlParameters:[Kp,Vp,{parameterPath:"backendAddressPoolName",mapper:{required:!0,serializedName:"backendAddressPoolName",type:{name:"String"}}},tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:Hr},default:{bodyMapper:mr}},serializer:Gd},kd={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:Gs},default:{bodyMapper:mr}},serializer:Gd},zd=Object.freeze({LoadBalancerFrontendIPConfigurationListResult:bs,FrontendIPConfiguration:Or,SubResource:Pr,BaseResource:yr,Subnet:Br,NetworkSecurityGroup:Gr,Resource:Cr,SecurityRule:Rr,ApplicationSecurityGroup:wr,NetworkInterface:Ar,InterfaceEndpoint:Sr,EndpointService:fr,NetworkInterfaceIPConfiguration:Wr,VirtualNetworkTap:Dr,NetworkInterfaceTapConfiguration:Nr,ApplicationGatewayBackendAddressPool:Kr,ApplicationGatewayBackendAddress:_r,BackendAddressPool:Hr,InboundNatRule:Ur,PublicIPAddress:Vr,PublicIPAddressSku:Ir,IPConfiguration:xr,PublicIPAddressDnsSettings:Er,IpTag:Mr,NetworkInterfaceDnsSettings:gr,RouteTable:hr,Route:br,ServiceEndpointPropertiesFormat:kr,ServiceEndpointPolicy:vr,ServiceEndpointPolicyDefinition:zr,IPConfigurationProfile:Fr,ResourceNavigationLink:qr,ServiceAssociationLink:Tr,Delegation:Lr,CloudError:mr,ApplicationGatewayBackendHttpSettings:Zr,ApplicationGatewayConnectionDraining:jr,ApplicationGatewayIPConfiguration:ti,ApplicationGatewayAuthenticationCertificate:ri,ApplicationGatewayTrustedRootCertificate:ii,ApplicationGatewaySslCertificate:ai,ApplicationGatewayFrontendIPConfiguration:oi,ApplicationGatewayFrontendPort:ni,ApplicationGatewayHttpListener:si,ApplicationGatewayPathRule:pi,ApplicationGatewayProbe:li,ApplicationGatewayProbeHealthResponseMatch:ui,ApplicationGatewayRequestRoutingRule:ci,ApplicationGatewayRedirectConfiguration:di,ApplicationGatewayUrlPathMap:mi,ApplicationGateway:Ci,ApplicationGatewaySku:Yr,ApplicationGatewaySslPolicy:ei,ApplicationGatewayWebApplicationFirewallConfiguration:Pi,ApplicationGatewayFirewallDisabledRuleGroup:yi,ApplicationGatewayAutoscaleConfiguration:Ni,ApplicationGatewayFirewallRuleSet:fi,ApplicationGatewayFirewallRuleGroup:Ri,ApplicationGatewayFirewallRule:wi,ApplicationGatewayAvailableSslOptions:gi,ApplicationGatewaySslPredefinedPolicy:Ai,AzureFirewallIPConfiguration:hi,AzureFirewallApplicationRuleCollection:Ii,AzureFirewallRCAction:ki,AzureFirewallApplicationRule:vi,AzureFirewallApplicationRuleProtocol:zi,AzureFirewallNatRuleCollection:Vi,AzureFirewallNatRCAction:Ei,AzureFirewallNatRule:Mi,AzureFirewallNetworkRuleCollection:Fi,AzureFirewallNetworkRule:xi,AzureFirewall:qi,AzureFirewallFqdnTag:Ti,DdosProtectionPlan:Bi,EndpointServiceResult:Oi,ExpressRouteCircuitAuthorization:Di,RouteFilterRule:Ui,ExpressRouteCircuitConnection:Ki,ExpressRouteCircuitPeering:ji,ExpressRouteCircuitPeeringConfig:Hi,ExpressRouteCircuitStats:Wi,RouteFilter:Zi,Ipv6ExpressRouteCircuitPeeringConfig:Qi,ExpressRouteConnectionId:_i,ExpressRouteCircuit:Ji,ExpressRouteCircuitSku:Xi,ExpressRouteCircuitServiceProviderProperties:$i,ExpressRouteServiceProvider:na,ExpressRouteServiceProviderBandwidthsOffered:oa,ExpressRouteCrossConnectionPeering:la,ExpressRouteCrossConnection:ca,ExpressRouteCircuitReference:ua,ExpressRouteConnection:Na,ExpressRouteCircuitPeeringId:ma,ExpressRouteGateway:Ca,ExpressRouteGatewayPropertiesAutoScaleConfiguration:Pa,ExpressRouteGatewayPropertiesAutoScaleConfigurationBounds:ya,VirtualHubId:da,LoadBalancingRule:Sa,Probe:ga,InboundNatPool:Aa,OutboundRule:Ga,LoadBalancer:ba,LoadBalancerSku:fa,ContainerNetworkInterfaceConfiguration:xa,ContainerNetworkInterface:Ta,Container:Fa,ContainerNetworkInterfaceIpConfiguration:qa,NetworkProfile:La,NetworkWatcher:Oa,ConnectionMonitorResult:Bo,ConnectionMonitorSource:qo,ConnectionMonitorDestination:To,PublicIPPrefix:nn,PublicIPPrefixSku:an,ReferencedPublicIpAddress:on,PatchRouteFilterRule:sn,PatchRouteFilter:pn,BgpServiceCommunity:ln,BGPCommunity:un,VirtualNetworkPeering:yn,AddressSpace:mn,VirtualNetwork:Nn,DhcpOptions:Pn,VirtualNetworkGatewayIPConfiguration:fn,VpnClientRootCertificate:gn,VpnClientRevokedCertificate:An,VirtualNetworkGateway:vn,VirtualNetworkGatewaySku:Sn,VpnClientConfiguration:bn,IpsecPolicy:Gn,BgpSettings:hn,LocalNetworkGateway:xn,VirtualNetworkGatewayConnection:Fn,TunnelConnectionHealth:Vn,ConnectionSharedKey:Tn,VirtualNetworkGatewayConnectionListEntity:On,VirtualNetworkConnectionGatewayReference:Bn,P2SVpnServerConfigVpnClientRootCertificate:Hn,P2SVpnServerConfigVpnClientRevokedCertificate:Un,P2SVpnServerConfigRadiusServerRootCertificate:Wn,P2SVpnServerConfigRadiusClientRootCertificate:_n,P2SVpnServerConfiguration:Kn,VirtualWAN:jn,VpnSite:Qn,DeviceProperties:Zn,HubVirtualNetworkConnection:$n,VirtualHub:es,VirtualHubRouteTable:Yn,VirtualHubRoute:Jn,VpnConnection:ts,VpnGateway:rs,P2SVpnGateway:os,VpnClientConnectionHealth:as}),vd=function(){function e(e){this.client=e}return e.prototype.list=function(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,loadBalancerName:t,options:r},Ed,i)},e.prototype.get=function(e,t,r,i,a){return this.client.sendOperationRequest({resourceGroupName:e,loadBalancerName:t,frontendIPConfigurationName:r,options:i},Md,a)},e.prototype.listNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},Vd,r)},e}(),Id=new r.Serializer(zd),Ed={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/frontendIPConfigurations",urlParameters:[Kp,Vp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:bs},default:{bodyMapper:mr}},serializer:Id},Md={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/frontendIPConfigurations/{frontendIPConfigurationName}",urlParameters:[Kp,Vp,{parameterPath:"frontendIPConfigurationName",mapper:{required:!0,serializedName:"frontendIPConfigurationName",type:{name:"String"}}},tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:Or},default:{bodyMapper:mr}},serializer:Id},Vd={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:bs},default:{bodyMapper:mr}},serializer:Id},xd=Object.freeze({InboundNatRuleListResult:hs,InboundNatRule:Ur,SubResource:Pr,BaseResource:yr,NetworkInterfaceIPConfiguration:Wr,VirtualNetworkTap:Dr,Resource:Cr,NetworkInterfaceTapConfiguration:Nr,FrontendIPConfiguration:Or,Subnet:Br,NetworkSecurityGroup:Gr,SecurityRule:Rr,ApplicationSecurityGroup:wr,NetworkInterface:Ar,InterfaceEndpoint:Sr,EndpointService:fr,NetworkInterfaceDnsSettings:gr,RouteTable:hr,Route:br,ServiceEndpointPropertiesFormat:kr,ServiceEndpointPolicy:vr,ServiceEndpointPolicyDefinition:zr,IPConfiguration:xr,PublicIPAddress:Vr,PublicIPAddressSku:Ir,PublicIPAddressDnsSettings:Er,IpTag:Mr,IPConfigurationProfile:Fr,ResourceNavigationLink:qr,ServiceAssociationLink:Tr,Delegation:Lr,ApplicationGatewayBackendAddressPool:Kr,ApplicationGatewayBackendAddress:_r,BackendAddressPool:Hr,CloudError:mr,ApplicationGatewayBackendHttpSettings:Zr,ApplicationGatewayConnectionDraining:jr,ApplicationGatewayIPConfiguration:ti,ApplicationGatewayAuthenticationCertificate:ri,ApplicationGatewayTrustedRootCertificate:ii,ApplicationGatewaySslCertificate:ai,ApplicationGatewayFrontendIPConfiguration:oi,ApplicationGatewayFrontendPort:ni,ApplicationGatewayHttpListener:si,ApplicationGatewayPathRule:pi,ApplicationGatewayProbe:li,ApplicationGatewayProbeHealthResponseMatch:ui,ApplicationGatewayRequestRoutingRule:ci,ApplicationGatewayRedirectConfiguration:di,ApplicationGatewayUrlPathMap:mi,ApplicationGateway:Ci,ApplicationGatewaySku:Yr,ApplicationGatewaySslPolicy:ei,ApplicationGatewayWebApplicationFirewallConfiguration:Pi,ApplicationGatewayFirewallDisabledRuleGroup:yi,ApplicationGatewayAutoscaleConfiguration:Ni,ApplicationGatewayFirewallRuleSet:fi,ApplicationGatewayFirewallRuleGroup:Ri,ApplicationGatewayFirewallRule:wi,ApplicationGatewayAvailableSslOptions:gi,ApplicationGatewaySslPredefinedPolicy:Ai,AzureFirewallIPConfiguration:hi,AzureFirewallApplicationRuleCollection:Ii,AzureFirewallRCAction:ki,AzureFirewallApplicationRule:vi,AzureFirewallApplicationRuleProtocol:zi,AzureFirewallNatRuleCollection:Vi,AzureFirewallNatRCAction:Ei,AzureFirewallNatRule:Mi,AzureFirewallNetworkRuleCollection:Fi,AzureFirewallNetworkRule:xi,AzureFirewall:qi,AzureFirewallFqdnTag:Ti,DdosProtectionPlan:Bi,EndpointServiceResult:Oi,ExpressRouteCircuitAuthorization:Di,RouteFilterRule:Ui,ExpressRouteCircuitConnection:Ki,ExpressRouteCircuitPeering:ji,ExpressRouteCircuitPeeringConfig:Hi,ExpressRouteCircuitStats:Wi,RouteFilter:Zi,Ipv6ExpressRouteCircuitPeeringConfig:Qi,ExpressRouteConnectionId:_i,ExpressRouteCircuit:Ji,ExpressRouteCircuitSku:Xi,ExpressRouteCircuitServiceProviderProperties:$i,ExpressRouteServiceProvider:na,ExpressRouteServiceProviderBandwidthsOffered:oa,ExpressRouteCrossConnectionPeering:la,ExpressRouteCrossConnection:ca,ExpressRouteCircuitReference:ua,ExpressRouteConnection:Na,ExpressRouteCircuitPeeringId:ma,ExpressRouteGateway:Ca,ExpressRouteGatewayPropertiesAutoScaleConfiguration:Pa,ExpressRouteGatewayPropertiesAutoScaleConfigurationBounds:ya,VirtualHubId:da,LoadBalancingRule:Sa,Probe:ga,InboundNatPool:Aa,OutboundRule:Ga,LoadBalancer:ba,LoadBalancerSku:fa,ContainerNetworkInterfaceConfiguration:xa,ContainerNetworkInterface:Ta,Container:Fa,ContainerNetworkInterfaceIpConfiguration:qa,NetworkProfile:La,NetworkWatcher:Oa,ConnectionMonitorResult:Bo,ConnectionMonitorSource:qo,ConnectionMonitorDestination:To,PublicIPPrefix:nn,PublicIPPrefixSku:an,ReferencedPublicIpAddress:on,PatchRouteFilterRule:sn,PatchRouteFilter:pn,BgpServiceCommunity:ln,BGPCommunity:un,VirtualNetworkPeering:yn,AddressSpace:mn,VirtualNetwork:Nn,DhcpOptions:Pn,VirtualNetworkGatewayIPConfiguration:fn,VpnClientRootCertificate:gn,VpnClientRevokedCertificate:An,VirtualNetworkGateway:vn,VirtualNetworkGatewaySku:Sn,VpnClientConfiguration:bn,IpsecPolicy:Gn,BgpSettings:hn,LocalNetworkGateway:xn,VirtualNetworkGatewayConnection:Fn,TunnelConnectionHealth:Vn,ConnectionSharedKey:Tn,VirtualNetworkGatewayConnectionListEntity:On,VirtualNetworkConnectionGatewayReference:Bn,P2SVpnServerConfigVpnClientRootCertificate:Hn,P2SVpnServerConfigVpnClientRevokedCertificate:Un,P2SVpnServerConfigRadiusServerRootCertificate:Wn,P2SVpnServerConfigRadiusClientRootCertificate:_n,P2SVpnServerConfiguration:Kn,VirtualWAN:jn,VpnSite:Qn,DeviceProperties:Zn,HubVirtualNetworkConnection:$n,VirtualHub:es,VirtualHubRouteTable:Yn,VirtualHubRoute:Jn,VpnConnection:ts,VpnGateway:rs,P2SVpnGateway:os,VpnClientConnectionHealth:as}),Fd=function(){function e(e){this.client=e}return e.prototype.list=function(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,loadBalancerName:t,options:r},Td,i)},e.prototype.deleteMethod=function(e,t,r,i){return this.beginDeleteMethod(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.get=function(e,t,r,i,a){return this.client.sendOperationRequest({resourceGroupName:e,loadBalancerName:t,inboundNatRuleName:r,options:i},Ld,a)},e.prototype.createOrUpdate=function(e,t,r,i,a){return this.beginCreateOrUpdate(e,t,r,i,a).then(function(e){return e.pollUntilFinished()})},e.prototype.beginDeleteMethod=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,loadBalancerName:t,inboundNatRuleName:r,options:i},Bd,i)},e.prototype.beginCreateOrUpdate=function(e,t,r,i,a){return this.client.sendLRORequest({resourceGroupName:e,loadBalancerName:t,inboundNatRuleName:r,inboundNatRuleParameters:i,options:a},Od,a)},e.prototype.listNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},Dd,r)},e}(),qd=new r.Serializer(xd),Td={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/inboundNatRules",urlParameters:[Kp,Vp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:hs},default:{bodyMapper:mr}},serializer:qd},Ld={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/inboundNatRules/{inboundNatRuleName}",urlParameters:[Kp,Vp,Ip,tu],queryParameters:[Pp,kp],headerParameters:[yp],responses:{200:{bodyMapper:Ur},default:{bodyMapper:mr}},serializer:qd},Bd={httpMethod:"DELETE",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/inboundNatRules/{inboundNatRuleName}",urlParameters:[Kp,Vp,Ip,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{},202:{},204:{},default:{bodyMapper:mr}},serializer:qd},Od={httpMethod:"PUT",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/inboundNatRules/{inboundNatRuleName}",urlParameters:[Kp,Vp,Ip,tu],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"inboundNatRuleParameters",mapper:cr({},Ur,{required:!0})},responses:{200:{bodyMapper:Ur},201:{bodyMapper:Ur},default:{bodyMapper:mr}},serializer:qd},Dd={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:hs},default:{bodyMapper:mr}},serializer:qd},Hd=Object.freeze({LoadBalancerLoadBalancingRuleListResult:ks,LoadBalancingRule:Sa,SubResource:Pr,BaseResource:yr,CloudError:mr,NetworkInterfaceTapConfiguration:Nr,VirtualNetworkTap:Dr,Resource:Cr,NetworkInterfaceIPConfiguration:Wr,ApplicationGatewayBackendAddressPool:Kr,ApplicationGatewayBackendAddress:_r,BackendAddressPool:Hr,InboundNatRule:Ur,Subnet:Br,NetworkSecurityGroup:Gr,SecurityRule:Rr,ApplicationSecurityGroup:wr,NetworkInterface:Ar,InterfaceEndpoint:Sr,EndpointService:fr,NetworkInterfaceDnsSettings:gr,RouteTable:hr,Route:br,ServiceEndpointPropertiesFormat:kr,ServiceEndpointPolicy:vr,ServiceEndpointPolicyDefinition:zr,IPConfiguration:xr,PublicIPAddress:Vr,PublicIPAddressSku:Ir,PublicIPAddressDnsSettings:Er,IpTag:Mr,IPConfigurationProfile:Fr,ResourceNavigationLink:qr,ServiceAssociationLink:Tr,Delegation:Lr,FrontendIPConfiguration:Or,ApplicationGatewayBackendHttpSettings:Zr,ApplicationGatewayConnectionDraining:jr,ApplicationGatewayIPConfiguration:ti,ApplicationGatewayAuthenticationCertificate:ri,ApplicationGatewayTrustedRootCertificate:ii,ApplicationGatewaySslCertificate:ai,ApplicationGatewayFrontendIPConfiguration:oi,ApplicationGatewayFrontendPort:ni,ApplicationGatewayHttpListener:si,ApplicationGatewayPathRule:pi,ApplicationGatewayProbe:li,ApplicationGatewayProbeHealthResponseMatch:ui,ApplicationGatewayRequestRoutingRule:ci,ApplicationGatewayRedirectConfiguration:di,ApplicationGatewayUrlPathMap:mi,ApplicationGateway:Ci,ApplicationGatewaySku:Yr,ApplicationGatewaySslPolicy:ei,ApplicationGatewayWebApplicationFirewallConfiguration:Pi,ApplicationGatewayFirewallDisabledRuleGroup:yi,ApplicationGatewayAutoscaleConfiguration:Ni,ApplicationGatewayFirewallRuleSet:fi,ApplicationGatewayFirewallRuleGroup:Ri,ApplicationGatewayFirewallRule:wi,ApplicationGatewayAvailableSslOptions:gi,ApplicationGatewaySslPredefinedPolicy:Ai,AzureFirewallIPConfiguration:hi,AzureFirewallApplicationRuleCollection:Ii,AzureFirewallRCAction:ki,AzureFirewallApplicationRule:vi,AzureFirewallApplicationRuleProtocol:zi,AzureFirewallNatRuleCollection:Vi,AzureFirewallNatRCAction:Ei,AzureFirewallNatRule:Mi,AzureFirewallNetworkRuleCollection:Fi,AzureFirewallNetworkRule:xi,AzureFirewall:qi,AzureFirewallFqdnTag:Ti,DdosProtectionPlan:Bi,EndpointServiceResult:Oi,ExpressRouteCircuitAuthorization:Di,RouteFilterRule:Ui,ExpressRouteCircuitConnection:Ki,ExpressRouteCircuitPeering:ji,ExpressRouteCircuitPeeringConfig:Hi,ExpressRouteCircuitStats:Wi,RouteFilter:Zi,Ipv6ExpressRouteCircuitPeeringConfig:Qi,ExpressRouteConnectionId:_i,ExpressRouteCircuit:Ji,ExpressRouteCircuitSku:Xi,ExpressRouteCircuitServiceProviderProperties:$i,ExpressRouteServiceProvider:na,ExpressRouteServiceProviderBandwidthsOffered:oa,ExpressRouteCrossConnectionPeering:la,ExpressRouteCrossConnection:ca,ExpressRouteCircuitReference:ua,ExpressRouteConnection:Na,ExpressRouteCircuitPeeringId:ma,ExpressRouteGateway:Ca,ExpressRouteGatewayPropertiesAutoScaleConfiguration:Pa,ExpressRouteGatewayPropertiesAutoScaleConfigurationBounds:ya,VirtualHubId:da,Probe:ga,InboundNatPool:Aa,OutboundRule:Ga,LoadBalancer:ba,LoadBalancerSku:fa,ContainerNetworkInterfaceConfiguration:xa,ContainerNetworkInterface:Ta,Container:Fa,ContainerNetworkInterfaceIpConfiguration:qa,NetworkProfile:La,NetworkWatcher:Oa,ConnectionMonitorResult:Bo,ConnectionMonitorSource:qo,ConnectionMonitorDestination:To,PublicIPPrefix:nn,PublicIPPrefixSku:an,ReferencedPublicIpAddress:on,PatchRouteFilterRule:sn,PatchRouteFilter:pn,BgpServiceCommunity:ln,BGPCommunity:un,VirtualNetworkPeering:yn,AddressSpace:mn,VirtualNetwork:Nn,DhcpOptions:Pn,VirtualNetworkGatewayIPConfiguration:fn,VpnClientRootCertificate:gn,VpnClientRevokedCertificate:An,VirtualNetworkGateway:vn,VirtualNetworkGatewaySku:Sn,VpnClientConfiguration:bn,IpsecPolicy:Gn,BgpSettings:hn,LocalNetworkGateway:xn,VirtualNetworkGatewayConnection:Fn,TunnelConnectionHealth:Vn,ConnectionSharedKey:Tn,VirtualNetworkGatewayConnectionListEntity:On,VirtualNetworkConnectionGatewayReference:Bn,P2SVpnServerConfigVpnClientRootCertificate:Hn,P2SVpnServerConfigVpnClientRevokedCertificate:Un,P2SVpnServerConfigRadiusServerRootCertificate:Wn,P2SVpnServerConfigRadiusClientRootCertificate:_n,P2SVpnServerConfiguration:Kn,VirtualWAN:jn,VpnSite:Qn,DeviceProperties:Zn,HubVirtualNetworkConnection:$n,VirtualHub:es,VirtualHubRouteTable:Yn,VirtualHubRoute:Jn,VpnConnection:ts,VpnGateway:rs,P2SVpnGateway:os,VpnClientConnectionHealth:as}),Ud=function(){function e(e){this.client=e}return e.prototype.list=function(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,loadBalancerName:t,options:r},_d,i)},e.prototype.get=function(e,t,r,i,a){return this.client.sendOperationRequest({resourceGroupName:e,loadBalancerName:t,loadBalancingRuleName:r,options:i},Kd,a)},e.prototype.listNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},jd,r)},e}(),Wd=new r.Serializer(Hd),_d={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/loadBalancingRules",urlParameters:[Kp,Vp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:ks},default:{bodyMapper:mr}},serializer:Wd},Kd={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/loadBalancingRules/{loadBalancingRuleName}",urlParameters:[Kp,Vp,{parameterPath:"loadBalancingRuleName",mapper:{required:!0,serializedName:"loadBalancingRuleName",type:{name:"String"}}},tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:Sa},default:{bodyMapper:mr}},serializer:Wd},jd={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:ks},default:{bodyMapper:mr}},serializer:Wd},Zd=Object.freeze({NetworkInterfaceListResult:zs,NetworkInterface:Ar,Resource:Cr,BaseResource:yr,SubResource:Pr,NetworkSecurityGroup:Gr,SecurityRule:Rr,ApplicationSecurityGroup:wr,Subnet:Br,RouteTable:hr,Route:br,ServiceEndpointPropertiesFormat:kr,ServiceEndpointPolicy:vr,ServiceEndpointPolicyDefinition:zr,InterfaceEndpoint:Sr,EndpointService:fr,IPConfiguration:xr,PublicIPAddress:Vr,PublicIPAddressSku:Ir,PublicIPAddressDnsSettings:Er,IpTag:Mr,IPConfigurationProfile:Fr,ResourceNavigationLink:qr,ServiceAssociationLink:Tr,Delegation:Lr,NetworkInterfaceIPConfiguration:Wr,VirtualNetworkTap:Dr,NetworkInterfaceTapConfiguration:Nr,FrontendIPConfiguration:Or,ApplicationGatewayBackendAddressPool:Kr,ApplicationGatewayBackendAddress:_r,BackendAddressPool:Hr,InboundNatRule:Ur,NetworkInterfaceDnsSettings:gr,CloudError:mr,ApplicationGatewayBackendHttpSettings:Zr,ApplicationGatewayConnectionDraining:jr,ApplicationGatewayIPConfiguration:ti,ApplicationGatewayAuthenticationCertificate:ri,ApplicationGatewayTrustedRootCertificate:ii,ApplicationGatewaySslCertificate:ai,ApplicationGatewayFrontendIPConfiguration:oi,ApplicationGatewayFrontendPort:ni,ApplicationGatewayHttpListener:si,ApplicationGatewayPathRule:pi,ApplicationGatewayProbe:li,ApplicationGatewayProbeHealthResponseMatch:ui,ApplicationGatewayRequestRoutingRule:ci,ApplicationGatewayRedirectConfiguration:di,ApplicationGatewayUrlPathMap:mi,ApplicationGateway:Ci,ApplicationGatewaySku:Yr,ApplicationGatewaySslPolicy:ei,ApplicationGatewayWebApplicationFirewallConfiguration:Pi,ApplicationGatewayFirewallDisabledRuleGroup:yi,ApplicationGatewayAutoscaleConfiguration:Ni,ApplicationGatewayFirewallRuleSet:fi,ApplicationGatewayFirewallRuleGroup:Ri,ApplicationGatewayFirewallRule:wi,ApplicationGatewayAvailableSslOptions:gi,ApplicationGatewaySslPredefinedPolicy:Ai,AzureFirewallIPConfiguration:hi,AzureFirewallApplicationRuleCollection:Ii,AzureFirewallRCAction:ki,AzureFirewallApplicationRule:vi,AzureFirewallApplicationRuleProtocol:zi,AzureFirewallNatRuleCollection:Vi,AzureFirewallNatRCAction:Ei,AzureFirewallNatRule:Mi,AzureFirewallNetworkRuleCollection:Fi,AzureFirewallNetworkRule:xi,AzureFirewall:qi,AzureFirewallFqdnTag:Ti,DdosProtectionPlan:Bi,EndpointServiceResult:Oi,ExpressRouteCircuitAuthorization:Di,RouteFilterRule:Ui,ExpressRouteCircuitConnection:Ki,ExpressRouteCircuitPeering:ji,ExpressRouteCircuitPeeringConfig:Hi,ExpressRouteCircuitStats:Wi,RouteFilter:Zi,Ipv6ExpressRouteCircuitPeeringConfig:Qi,ExpressRouteConnectionId:_i,ExpressRouteCircuit:Ji,ExpressRouteCircuitSku:Xi,ExpressRouteCircuitServiceProviderProperties:$i,ExpressRouteServiceProvider:na,ExpressRouteServiceProviderBandwidthsOffered:oa,ExpressRouteCrossConnectionPeering:la,ExpressRouteCrossConnection:ca,ExpressRouteCircuitReference:ua,ExpressRouteConnection:Na,ExpressRouteCircuitPeeringId:ma,ExpressRouteGateway:Ca,ExpressRouteGatewayPropertiesAutoScaleConfiguration:Pa,ExpressRouteGatewayPropertiesAutoScaleConfigurationBounds:ya,VirtualHubId:da,LoadBalancingRule:Sa,Probe:ga,InboundNatPool:Aa,OutboundRule:Ga,LoadBalancer:ba,LoadBalancerSku:fa,ContainerNetworkInterfaceConfiguration:xa,ContainerNetworkInterface:Ta,Container:Fa,ContainerNetworkInterfaceIpConfiguration:qa,NetworkProfile:La,NetworkWatcher:Oa,ConnectionMonitorResult:Bo,ConnectionMonitorSource:qo,ConnectionMonitorDestination:To,PublicIPPrefix:nn,PublicIPPrefixSku:an,ReferencedPublicIpAddress:on,PatchRouteFilterRule:sn,PatchRouteFilter:pn,BgpServiceCommunity:ln,BGPCommunity:un,VirtualNetworkPeering:yn,AddressSpace:mn,VirtualNetwork:Nn,DhcpOptions:Pn,VirtualNetworkGatewayIPConfiguration:fn,VpnClientRootCertificate:gn,VpnClientRevokedCertificate:An,VirtualNetworkGateway:vn,VirtualNetworkGatewaySku:Sn,VpnClientConfiguration:bn,IpsecPolicy:Gn,BgpSettings:hn,LocalNetworkGateway:xn,VirtualNetworkGatewayConnection:Fn,TunnelConnectionHealth:Vn,ConnectionSharedKey:Tn,VirtualNetworkGatewayConnectionListEntity:On,VirtualNetworkConnectionGatewayReference:Bn,P2SVpnServerConfigVpnClientRootCertificate:Hn,P2SVpnServerConfigVpnClientRevokedCertificate:Un,P2SVpnServerConfigRadiusServerRootCertificate:Wn,P2SVpnServerConfigRadiusClientRootCertificate:_n,P2SVpnServerConfiguration:Kn,VirtualWAN:jn,VpnSite:Qn,DeviceProperties:Zn,HubVirtualNetworkConnection:$n,VirtualHub:es,VirtualHubRouteTable:Yn,VirtualHubRoute:Jn,VpnConnection:ts,VpnGateway:rs,P2SVpnGateway:os,VpnClientConnectionHealth:as}),Qd=function(){function e(e){this.client=e}return e.prototype.list=function(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,loadBalancerName:t,options:r},$d,i)},e.prototype.listNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},Jd,r)},e}(),Xd=new r.Serializer(Zd),$d={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/networkInterfaces",urlParameters:[Kp,Vp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:zs},default:{bodyMapper:mr}},serializer:Xd},Jd={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:zs},default:{bodyMapper:mr}},serializer:Xd},Yd=Object.freeze({LoadBalancerProbeListResult:vs,Probe:ga,SubResource:Pr,BaseResource:yr,CloudError:mr,NetworkInterfaceTapConfiguration:Nr,VirtualNetworkTap:Dr,Resource:Cr,NetworkInterfaceIPConfiguration:Wr,ApplicationGatewayBackendAddressPool:Kr,ApplicationGatewayBackendAddress:_r,BackendAddressPool:Hr,InboundNatRule:Ur,Subnet:Br,NetworkSecurityGroup:Gr,SecurityRule:Rr,ApplicationSecurityGroup:wr,NetworkInterface:Ar,InterfaceEndpoint:Sr,EndpointService:fr,NetworkInterfaceDnsSettings:gr,RouteTable:hr,Route:br,ServiceEndpointPropertiesFormat:kr,ServiceEndpointPolicy:vr,ServiceEndpointPolicyDefinition:zr,IPConfiguration:xr,PublicIPAddress:Vr,PublicIPAddressSku:Ir,PublicIPAddressDnsSettings:Er,IpTag:Mr,IPConfigurationProfile:Fr,ResourceNavigationLink:qr,ServiceAssociationLink:Tr,Delegation:Lr,FrontendIPConfiguration:Or,ApplicationGatewayBackendHttpSettings:Zr,ApplicationGatewayConnectionDraining:jr,ApplicationGatewayIPConfiguration:ti,ApplicationGatewayAuthenticationCertificate:ri,ApplicationGatewayTrustedRootCertificate:ii,ApplicationGatewaySslCertificate:ai,ApplicationGatewayFrontendIPConfiguration:oi,ApplicationGatewayFrontendPort:ni,ApplicationGatewayHttpListener:si,ApplicationGatewayPathRule:pi,ApplicationGatewayProbe:li,ApplicationGatewayProbeHealthResponseMatch:ui,ApplicationGatewayRequestRoutingRule:ci,ApplicationGatewayRedirectConfiguration:di,ApplicationGatewayUrlPathMap:mi,ApplicationGateway:Ci,ApplicationGatewaySku:Yr,ApplicationGatewaySslPolicy:ei,ApplicationGatewayWebApplicationFirewallConfiguration:Pi,ApplicationGatewayFirewallDisabledRuleGroup:yi,ApplicationGatewayAutoscaleConfiguration:Ni,ApplicationGatewayFirewallRuleSet:fi,ApplicationGatewayFirewallRuleGroup:Ri,ApplicationGatewayFirewallRule:wi,ApplicationGatewayAvailableSslOptions:gi,ApplicationGatewaySslPredefinedPolicy:Ai,AzureFirewallIPConfiguration:hi,AzureFirewallApplicationRuleCollection:Ii,AzureFirewallRCAction:ki,AzureFirewallApplicationRule:vi,AzureFirewallApplicationRuleProtocol:zi,AzureFirewallNatRuleCollection:Vi,AzureFirewallNatRCAction:Ei,AzureFirewallNatRule:Mi,AzureFirewallNetworkRuleCollection:Fi,AzureFirewallNetworkRule:xi,AzureFirewall:qi,AzureFirewallFqdnTag:Ti,DdosProtectionPlan:Bi,EndpointServiceResult:Oi,ExpressRouteCircuitAuthorization:Di,RouteFilterRule:Ui,ExpressRouteCircuitConnection:Ki,ExpressRouteCircuitPeering:ji,ExpressRouteCircuitPeeringConfig:Hi,ExpressRouteCircuitStats:Wi,RouteFilter:Zi,Ipv6ExpressRouteCircuitPeeringConfig:Qi,ExpressRouteConnectionId:_i,ExpressRouteCircuit:Ji,ExpressRouteCircuitSku:Xi,ExpressRouteCircuitServiceProviderProperties:$i,ExpressRouteServiceProvider:na,ExpressRouteServiceProviderBandwidthsOffered:oa,ExpressRouteCrossConnectionPeering:la,ExpressRouteCrossConnection:ca,ExpressRouteCircuitReference:ua,ExpressRouteConnection:Na,ExpressRouteCircuitPeeringId:ma,ExpressRouteGateway:Ca,ExpressRouteGatewayPropertiesAutoScaleConfiguration:Pa,ExpressRouteGatewayPropertiesAutoScaleConfigurationBounds:ya,VirtualHubId:da,LoadBalancingRule:Sa,InboundNatPool:Aa,OutboundRule:Ga,LoadBalancer:ba,LoadBalancerSku:fa,ContainerNetworkInterfaceConfiguration:xa,ContainerNetworkInterface:Ta,Container:Fa,ContainerNetworkInterfaceIpConfiguration:qa,NetworkProfile:La,NetworkWatcher:Oa,ConnectionMonitorResult:Bo,ConnectionMonitorSource:qo,ConnectionMonitorDestination:To,PublicIPPrefix:nn,PublicIPPrefixSku:an,ReferencedPublicIpAddress:on,PatchRouteFilterRule:sn,PatchRouteFilter:pn,BgpServiceCommunity:ln,BGPCommunity:un,VirtualNetworkPeering:yn,AddressSpace:mn,VirtualNetwork:Nn,DhcpOptions:Pn,VirtualNetworkGatewayIPConfiguration:fn,VpnClientRootCertificate:gn,VpnClientRevokedCertificate:An,VirtualNetworkGateway:vn,VirtualNetworkGatewaySku:Sn,VpnClientConfiguration:bn,IpsecPolicy:Gn,BgpSettings:hn,LocalNetworkGateway:xn,VirtualNetworkGatewayConnection:Fn,TunnelConnectionHealth:Vn,ConnectionSharedKey:Tn,VirtualNetworkGatewayConnectionListEntity:On,VirtualNetworkConnectionGatewayReference:Bn,P2SVpnServerConfigVpnClientRootCertificate:Hn,P2SVpnServerConfigVpnClientRevokedCertificate:Un,P2SVpnServerConfigRadiusServerRootCertificate:Wn,P2SVpnServerConfigRadiusClientRootCertificate:_n,P2SVpnServerConfiguration:Kn,VirtualWAN:jn,VpnSite:Qn,DeviceProperties:Zn,HubVirtualNetworkConnection:$n,VirtualHub:es,VirtualHubRouteTable:Yn,VirtualHubRoute:Jn,VpnConnection:ts,VpnGateway:rs,P2SVpnGateway:os,VpnClientConnectionHealth:as}),em=function(){function e(e){this.client=e}return e.prototype.list=function(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,loadBalancerName:t,options:r},rm,i)},e.prototype.get=function(e,t,r,i,a){return this.client.sendOperationRequest({resourceGroupName:e,loadBalancerName:t,probeName:r,options:i},im,a)},e.prototype.listNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},am,r)},e}(),tm=new r.Serializer(Yd),rm={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/probes",urlParameters:[Kp,Vp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:vs},default:{bodyMapper:mr}},serializer:tm},im={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/probes/{probeName}",urlParameters:[Kp,Vp,{parameterPath:"probeName",mapper:{required:!0,serializedName:"probeName",type:{name:"String"}}},tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:ga},default:{bodyMapper:mr}},serializer:tm},am={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:vs},default:{bodyMapper:mr}},serializer:tm},om=Object.freeze({CloudError:mr,NetworkInterface:Ar,Resource:Cr,BaseResource:yr,SubResource:Pr,NetworkSecurityGroup:Gr,SecurityRule:Rr,ApplicationSecurityGroup:wr,Subnet:Br,RouteTable:hr,Route:br,ServiceEndpointPropertiesFormat:kr,ServiceEndpointPolicy:vr,ServiceEndpointPolicyDefinition:zr,InterfaceEndpoint:Sr,EndpointService:fr,IPConfiguration:xr,PublicIPAddress:Vr,PublicIPAddressSku:Ir,PublicIPAddressDnsSettings:Er,IpTag:Mr,IPConfigurationProfile:Fr,ResourceNavigationLink:qr,ServiceAssociationLink:Tr,Delegation:Lr,NetworkInterfaceIPConfiguration:Wr,VirtualNetworkTap:Dr,NetworkInterfaceTapConfiguration:Nr,FrontendIPConfiguration:Or,ApplicationGatewayBackendAddressPool:Kr,ApplicationGatewayBackendAddress:_r,BackendAddressPool:Hr,InboundNatRule:Ur,NetworkInterfaceDnsSettings:gr,TagsObject:Gi,NetworkInterfaceListResult:zs,EffectiveRouteListResult:Va,EffectiveRoute:Ma,EffectiveNetworkSecurityGroupListResult:Ea,EffectiveNetworkSecurityGroup:Ia,EffectiveNetworkSecurityGroupAssociation:za,EffectiveNetworkSecurityRule:va,NetworkInterfaceIPConfigurationListResult:Is,ApplicationGatewayBackendHttpSettings:Zr,ApplicationGatewayConnectionDraining:jr,ApplicationGatewayIPConfiguration:ti,ApplicationGatewayAuthenticationCertificate:ri,ApplicationGatewayTrustedRootCertificate:ii,ApplicationGatewaySslCertificate:ai,ApplicationGatewayFrontendIPConfiguration:oi,ApplicationGatewayFrontendPort:ni,ApplicationGatewayHttpListener:si,ApplicationGatewayPathRule:pi,ApplicationGatewayProbe:li,ApplicationGatewayProbeHealthResponseMatch:ui,ApplicationGatewayRequestRoutingRule:ci,ApplicationGatewayRedirectConfiguration:di,ApplicationGatewayUrlPathMap:mi,ApplicationGateway:Ci,ApplicationGatewaySku:Yr,ApplicationGatewaySslPolicy:ei,ApplicationGatewayWebApplicationFirewallConfiguration:Pi,ApplicationGatewayFirewallDisabledRuleGroup:yi,ApplicationGatewayAutoscaleConfiguration:Ni,ApplicationGatewayFirewallRuleSet:fi,ApplicationGatewayFirewallRuleGroup:Ri,ApplicationGatewayFirewallRule:wi,ApplicationGatewayAvailableSslOptions:gi,ApplicationGatewaySslPredefinedPolicy:Ai,AzureFirewallIPConfiguration:hi,AzureFirewallApplicationRuleCollection:Ii,AzureFirewallRCAction:ki,AzureFirewallApplicationRule:vi,AzureFirewallApplicationRuleProtocol:zi,AzureFirewallNatRuleCollection:Vi,AzureFirewallNatRCAction:Ei,AzureFirewallNatRule:Mi,AzureFirewallNetworkRuleCollection:Fi,AzureFirewallNetworkRule:xi,AzureFirewall:qi,AzureFirewallFqdnTag:Ti,DdosProtectionPlan:Bi,EndpointServiceResult:Oi,ExpressRouteCircuitAuthorization:Di,RouteFilterRule:Ui,ExpressRouteCircuitConnection:Ki,ExpressRouteCircuitPeering:ji,ExpressRouteCircuitPeeringConfig:Hi,ExpressRouteCircuitStats:Wi,RouteFilter:Zi,Ipv6ExpressRouteCircuitPeeringConfig:Qi,ExpressRouteConnectionId:_i,ExpressRouteCircuit:Ji,ExpressRouteCircuitSku:Xi,ExpressRouteCircuitServiceProviderProperties:$i,ExpressRouteServiceProvider:na,ExpressRouteServiceProviderBandwidthsOffered:oa,ExpressRouteCrossConnectionPeering:la,ExpressRouteCrossConnection:ca,ExpressRouteCircuitReference:ua,ExpressRouteConnection:Na,ExpressRouteCircuitPeeringId:ma,ExpressRouteGateway:Ca,ExpressRouteGatewayPropertiesAutoScaleConfiguration:Pa,ExpressRouteGatewayPropertiesAutoScaleConfigurationBounds:ya,VirtualHubId:da,LoadBalancingRule:Sa,Probe:ga,InboundNatPool:Aa,OutboundRule:Ga,LoadBalancer:ba,LoadBalancerSku:fa,ContainerNetworkInterfaceConfiguration:xa,ContainerNetworkInterface:Ta,Container:Fa,ContainerNetworkInterfaceIpConfiguration:qa,NetworkProfile:La,NetworkWatcher:Oa,ConnectionMonitorResult:Bo,ConnectionMonitorSource:qo,ConnectionMonitorDestination:To,PublicIPPrefix:nn,PublicIPPrefixSku:an,ReferencedPublicIpAddress:on,PatchRouteFilterRule:sn,PatchRouteFilter:pn,BgpServiceCommunity:ln,BGPCommunity:un,VirtualNetworkPeering:yn,AddressSpace:mn,VirtualNetwork:Nn,DhcpOptions:Pn,VirtualNetworkGatewayIPConfiguration:fn,VpnClientRootCertificate:gn,VpnClientRevokedCertificate:An,VirtualNetworkGateway:vn,VirtualNetworkGatewaySku:Sn,VpnClientConfiguration:bn,IpsecPolicy:Gn,BgpSettings:hn,LocalNetworkGateway:xn,VirtualNetworkGatewayConnection:Fn,TunnelConnectionHealth:Vn,ConnectionSharedKey:Tn,VirtualNetworkGatewayConnectionListEntity:On,VirtualNetworkConnectionGatewayReference:Bn,P2SVpnServerConfigVpnClientRootCertificate:Hn,P2SVpnServerConfigVpnClientRevokedCertificate:Un,P2SVpnServerConfigRadiusServerRootCertificate:Wn,P2SVpnServerConfigRadiusClientRootCertificate:_n,P2SVpnServerConfiguration:Kn,VirtualWAN:jn,VpnSite:Qn,DeviceProperties:Zn,HubVirtualNetworkConnection:$n,VirtualHub:es,VirtualHubRouteTable:Yn,VirtualHubRoute:Jn,VpnConnection:ts,VpnGateway:rs,P2SVpnGateway:os,VpnClientConnectionHealth:as}),nm=function(){function e(e){this.client=e}return e.prototype.deleteMethod=function(e,t,r){return this.beginDeleteMethod(e,t,r).then(function(e){return e.pollUntilFinished()})},e.prototype.get=function(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,networkInterfaceName:t,options:r},pm,i)},e.prototype.createOrUpdate=function(e,t,r,i){return this.beginCreateOrUpdate(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.updateTags=function(e,t,r,i){return this.beginUpdateTags(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.listAll=function(e,t){return this.client.sendOperationRequest({options:e},um,t)},e.prototype.list=function(e,t,r){return this.client.sendOperationRequest({resourceGroupName:e,options:t},lm,r)},e.prototype.getEffectiveRouteTable=function(e,t,r){return this.beginGetEffectiveRouteTable(e,t,r).then(function(e){return e.pollUntilFinished()})},e.prototype.listEffectiveNetworkSecurityGroups=function(e,t,r){return this.beginListEffectiveNetworkSecurityGroups(e,t,r).then(function(e){return e.pollUntilFinished()})},e.prototype.listVirtualMachineScaleSetVMNetworkInterfaces=function(e,t,r,i,a){return this.client.sendOperationRequest({resourceGroupName:e,virtualMachineScaleSetName:t,virtualmachineIndex:r,options:i},cm,a)},e.prototype.listVirtualMachineScaleSetNetworkInterfaces=function(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,virtualMachineScaleSetName:t,options:r},dm,i)},e.prototype.getVirtualMachineScaleSetNetworkInterface=function(e,t,r,i,a,o){return this.client.sendOperationRequest({resourceGroupName:e,virtualMachineScaleSetName:t,virtualmachineIndex:r,networkInterfaceName:i,options:a},mm,o)},e.prototype.listVirtualMachineScaleSetIpConfigurations=function(e,t,r,i,a,o){return this.client.sendOperationRequest({resourceGroupName:e,virtualMachineScaleSetName:t,virtualmachineIndex:r,networkInterfaceName:i,options:a},ym,o)},e.prototype.getVirtualMachineScaleSetIpConfiguration=function(e,t,r,i,a,o,n){return this.client.sendOperationRequest({resourceGroupName:e,virtualMachineScaleSetName:t,virtualmachineIndex:r,networkInterfaceName:i,ipConfigurationName:a,options:o},Pm,n)},e.prototype.beginDeleteMethod=function(e,t,r){return this.client.sendLRORequest({resourceGroupName:e,networkInterfaceName:t,options:r},Nm,r)},e.prototype.beginCreateOrUpdate=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,networkInterfaceName:t,parameters:r,options:i},Cm,i)},e.prototype.beginUpdateTags=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,networkInterfaceName:t,parameters:r,options:i},wm,i)},e.prototype.beginGetEffectiveRouteTable=function(e,t,r){return this.client.sendLRORequest({resourceGroupName:e,networkInterfaceName:t,options:r},Rm,r)},e.prototype.beginListEffectiveNetworkSecurityGroups=function(e,t,r){return this.client.sendLRORequest({resourceGroupName:e,networkInterfaceName:t,options:r},fm,r)},e.prototype.listAllNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},Sm,r)},e.prototype.listNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},gm,r)},e.prototype.listVirtualMachineScaleSetVMNetworkInterfacesNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},Am,r)},e.prototype.listVirtualMachineScaleSetNetworkInterfacesNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},Gm,r)},e.prototype.listVirtualMachineScaleSetIpConfigurationsNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},bm,r)},e}(),sm=new r.Serializer(om),pm={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}",urlParameters:[Kp,qp,tu],queryParameters:[Pp,kp],headerParameters:[yp],responses:{200:{bodyMapper:Ar},default:{bodyMapper:mr}},serializer:sm},um={httpMethod:"GET",path:"subscriptions/{subscriptionId}/providers/Microsoft.Network/networkInterfaces",urlParameters:[tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:zs},default:{bodyMapper:mr}},serializer:sm},lm={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces",urlParameters:[Kp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:zs},default:{bodyMapper:mr}},serializer:sm},cm={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.Compute/virtualMachineScaleSets/{virtualMachineScaleSetName}/virtualMachines/{virtualmachineIndex}/networkInterfaces",urlParameters:[Kp,nu,ou,tu],queryParameters:[Np],headerParameters:[yp],responses:{200:{bodyMapper:zs},default:{bodyMapper:mr}},serializer:sm},dm={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.Compute/virtualMachineScaleSets/{virtualMachineScaleSetName}/networkInterfaces",urlParameters:[Kp,nu,tu],queryParameters:[Np],headerParameters:[yp],responses:{200:{bodyMapper:zs},default:{bodyMapper:mr}},serializer:sm},mm={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.Compute/virtualMachineScaleSets/{virtualMachineScaleSetName}/virtualMachines/{virtualmachineIndex}/networkInterfaces/{networkInterfaceName}",urlParameters:[Kp,nu,ou,qp,tu],queryParameters:[Np,kp],headerParameters:[yp],responses:{200:{bodyMapper:Ar},default:{bodyMapper:mr}},serializer:sm},ym={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.Compute/virtualMachineScaleSets/{virtualMachineScaleSetName}/virtualMachines/{virtualmachineIndex}/networkInterfaces/{networkInterfaceName}/ipConfigurations",urlParameters:[Kp,nu,ou,qp,tu],queryParameters:[Np,kp],headerParameters:[yp],responses:{200:{bodyMapper:Is},default:{bodyMapper:mr}},serializer:sm},Pm={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.Compute/virtualMachineScaleSets/{virtualMachineScaleSetName}/virtualMachines/{virtualmachineIndex}/networkInterfaces/{networkInterfaceName}/ipConfigurations/{ipConfigurationName}",urlParameters:[Kp,nu,ou,qp,Mp,tu],queryParameters:[Np,kp],headerParameters:[yp],responses:{200:{bodyMapper:Wr},default:{bodyMapper:mr}},serializer:sm},Nm={httpMethod:"DELETE",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}",urlParameters:[Kp,qp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{},202:{},204:{},default:{bodyMapper:mr}},serializer:sm},Cm={httpMethod:"PUT",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}",urlParameters:[Kp,qp,tu],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"parameters",mapper:cr({},Ar,{required:!0})},responses:{200:{bodyMapper:Ar},201:{bodyMapper:Ar},default:{bodyMapper:mr}},serializer:sm},wm={httpMethod:"PATCH",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}",urlParameters:[Kp,qp,tu],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"parameters",mapper:cr({},Gi,{required:!0})},responses:{200:{bodyMapper:Ar},default:{bodyMapper:mr}},serializer:sm},Rm={httpMethod:"POST",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}/effectiveRouteTable",urlParameters:[Kp,qp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:Va},202:{},default:{bodyMapper:mr}},serializer:sm},fm={httpMethod:"POST",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}/effectiveNetworkSecurityGroups",urlParameters:[Kp,qp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:Ea},202:{},default:{bodyMapper:mr}},serializer:sm},Sm={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:zs},default:{bodyMapper:mr}},serializer:sm},gm={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:zs},default:{bodyMapper:mr}},serializer:sm},Am={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:zs},default:{bodyMapper:mr}},serializer:sm},Gm={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:zs},default:{bodyMapper:mr}},serializer:sm},bm={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:Is},default:{bodyMapper:mr}},serializer:sm},hm=Object.freeze({NetworkInterfaceIPConfigurationListResult:Is,NetworkInterfaceIPConfiguration:Wr,SubResource:Pr,BaseResource:yr,VirtualNetworkTap:Dr,Resource:Cr,NetworkInterfaceTapConfiguration:Nr,FrontendIPConfiguration:Or,Subnet:Br,NetworkSecurityGroup:Gr,SecurityRule:Rr,ApplicationSecurityGroup:wr,NetworkInterface:Ar,InterfaceEndpoint:Sr,EndpointService:fr,NetworkInterfaceDnsSettings:gr,RouteTable:hr,Route:br,ServiceEndpointPropertiesFormat:kr,ServiceEndpointPolicy:vr,ServiceEndpointPolicyDefinition:zr,IPConfiguration:xr,PublicIPAddress:Vr,PublicIPAddressSku:Ir,PublicIPAddressDnsSettings:Er,IpTag:Mr,IPConfigurationProfile:Fr,ResourceNavigationLink:qr,ServiceAssociationLink:Tr,Delegation:Lr,ApplicationGatewayBackendAddressPool:Kr,ApplicationGatewayBackendAddress:_r,BackendAddressPool:Hr,InboundNatRule:Ur,CloudError:mr,ApplicationGatewayBackendHttpSettings:Zr,ApplicationGatewayConnectionDraining:jr,ApplicationGatewayIPConfiguration:ti,ApplicationGatewayAuthenticationCertificate:ri,ApplicationGatewayTrustedRootCertificate:ii,ApplicationGatewaySslCertificate:ai,ApplicationGatewayFrontendIPConfiguration:oi,ApplicationGatewayFrontendPort:ni,ApplicationGatewayHttpListener:si,ApplicationGatewayPathRule:pi,ApplicationGatewayProbe:li,ApplicationGatewayProbeHealthResponseMatch:ui,ApplicationGatewayRequestRoutingRule:ci,ApplicationGatewayRedirectConfiguration:di,ApplicationGatewayUrlPathMap:mi,ApplicationGateway:Ci,ApplicationGatewaySku:Yr,ApplicationGatewaySslPolicy:ei,ApplicationGatewayWebApplicationFirewallConfiguration:Pi,ApplicationGatewayFirewallDisabledRuleGroup:yi,ApplicationGatewayAutoscaleConfiguration:Ni,ApplicationGatewayFirewallRuleSet:fi,ApplicationGatewayFirewallRuleGroup:Ri,ApplicationGatewayFirewallRule:wi,ApplicationGatewayAvailableSslOptions:gi,ApplicationGatewaySslPredefinedPolicy:Ai,AzureFirewallIPConfiguration:hi,AzureFirewallApplicationRuleCollection:Ii,AzureFirewallRCAction:ki,AzureFirewallApplicationRule:vi,AzureFirewallApplicationRuleProtocol:zi,AzureFirewallNatRuleCollection:Vi,AzureFirewallNatRCAction:Ei,AzureFirewallNatRule:Mi,AzureFirewallNetworkRuleCollection:Fi,AzureFirewallNetworkRule:xi,AzureFirewall:qi,AzureFirewallFqdnTag:Ti,DdosProtectionPlan:Bi,EndpointServiceResult:Oi,ExpressRouteCircuitAuthorization:Di,RouteFilterRule:Ui,ExpressRouteCircuitConnection:Ki,ExpressRouteCircuitPeering:ji,ExpressRouteCircuitPeeringConfig:Hi,ExpressRouteCircuitStats:Wi,RouteFilter:Zi,Ipv6ExpressRouteCircuitPeeringConfig:Qi,ExpressRouteConnectionId:_i,ExpressRouteCircuit:Ji,ExpressRouteCircuitSku:Xi,ExpressRouteCircuitServiceProviderProperties:$i,ExpressRouteServiceProvider:na,ExpressRouteServiceProviderBandwidthsOffered:oa,ExpressRouteCrossConnectionPeering:la,ExpressRouteCrossConnection:ca,ExpressRouteCircuitReference:ua,ExpressRouteConnection:Na,ExpressRouteCircuitPeeringId:ma,ExpressRouteGateway:Ca,ExpressRouteGatewayPropertiesAutoScaleConfiguration:Pa,ExpressRouteGatewayPropertiesAutoScaleConfigurationBounds:ya,VirtualHubId:da,LoadBalancingRule:Sa,Probe:ga,InboundNatPool:Aa,OutboundRule:Ga,LoadBalancer:ba,LoadBalancerSku:fa,ContainerNetworkInterfaceConfiguration:xa,ContainerNetworkInterface:Ta,Container:Fa,ContainerNetworkInterfaceIpConfiguration:qa,NetworkProfile:La,NetworkWatcher:Oa,ConnectionMonitorResult:Bo,ConnectionMonitorSource:qo,ConnectionMonitorDestination:To,PublicIPPrefix:nn,PublicIPPrefixSku:an,ReferencedPublicIpAddress:on,PatchRouteFilterRule:sn,PatchRouteFilter:pn,BgpServiceCommunity:ln,BGPCommunity:un,VirtualNetworkPeering:yn,AddressSpace:mn,VirtualNetwork:Nn,DhcpOptions:Pn,VirtualNetworkGatewayIPConfiguration:fn,VpnClientRootCertificate:gn,VpnClientRevokedCertificate:An,VirtualNetworkGateway:vn,VirtualNetworkGatewaySku:Sn,VpnClientConfiguration:bn,IpsecPolicy:Gn,BgpSettings:hn,LocalNetworkGateway:xn,VirtualNetworkGatewayConnection:Fn,TunnelConnectionHealth:Vn,ConnectionSharedKey:Tn,VirtualNetworkGatewayConnectionListEntity:On,VirtualNetworkConnectionGatewayReference:Bn,P2SVpnServerConfigVpnClientRootCertificate:Hn,P2SVpnServerConfigVpnClientRevokedCertificate:Un,P2SVpnServerConfigRadiusServerRootCertificate:Wn,P2SVpnServerConfigRadiusClientRootCertificate:_n,P2SVpnServerConfiguration:Kn,VirtualWAN:jn,VpnSite:Qn,DeviceProperties:Zn,HubVirtualNetworkConnection:$n,VirtualHub:es,VirtualHubRouteTable:Yn,VirtualHubRoute:Jn,VpnConnection:ts,VpnGateway:rs,P2SVpnGateway:os,VpnClientConnectionHealth:as}),km=function(){function e(e){this.client=e}return e.prototype.list=function(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,networkInterfaceName:t,options:r},vm,i)},e.prototype.get=function(e,t,r,i,a){return this.client.sendOperationRequest({resourceGroupName:e,networkInterfaceName:t,ipConfigurationName:r,options:i},Im,a)},e.prototype.listNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},Em,r)},e}(),zm=new r.Serializer(hm),vm={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}/ipConfigurations",urlParameters:[Kp,qp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:Is},default:{bodyMapper:mr}},serializer:zm},Im={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}/ipConfigurations/{ipConfigurationName}",urlParameters:[Kp,qp,Mp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:Wr},default:{bodyMapper:mr}},serializer:zm},Em={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:Is},default:{bodyMapper:mr}},serializer:zm},Mm=Object.freeze({NetworkInterfaceLoadBalancerListResult:Es,LoadBalancer:ba,Resource:Cr,BaseResource:yr,LoadBalancerSku:fa,FrontendIPConfiguration:Or,SubResource:Pr,Subnet:Br,NetworkSecurityGroup:Gr,SecurityRule:Rr,ApplicationSecurityGroup:wr,NetworkInterface:Ar,InterfaceEndpoint:Sr,EndpointService:fr,NetworkInterfaceIPConfiguration:Wr,VirtualNetworkTap:Dr,NetworkInterfaceTapConfiguration:Nr,ApplicationGatewayBackendAddressPool:Kr,ApplicationGatewayBackendAddress:_r,BackendAddressPool:Hr,InboundNatRule:Ur,PublicIPAddress:Vr,PublicIPAddressSku:Ir,IPConfiguration:xr,PublicIPAddressDnsSettings:Er,IpTag:Mr,NetworkInterfaceDnsSettings:gr,RouteTable:hr,Route:br,ServiceEndpointPropertiesFormat:kr,ServiceEndpointPolicy:vr,ServiceEndpointPolicyDefinition:zr,IPConfigurationProfile:Fr,ResourceNavigationLink:qr,ServiceAssociationLink:Tr,Delegation:Lr,LoadBalancingRule:Sa,Probe:ga,InboundNatPool:Aa,OutboundRule:Ga,CloudError:mr,ApplicationGatewayBackendHttpSettings:Zr,ApplicationGatewayConnectionDraining:jr,ApplicationGatewayIPConfiguration:ti,ApplicationGatewayAuthenticationCertificate:ri,ApplicationGatewayTrustedRootCertificate:ii,ApplicationGatewaySslCertificate:ai,ApplicationGatewayFrontendIPConfiguration:oi,ApplicationGatewayFrontendPort:ni,ApplicationGatewayHttpListener:si,ApplicationGatewayPathRule:pi,ApplicationGatewayProbe:li,ApplicationGatewayProbeHealthResponseMatch:ui,ApplicationGatewayRequestRoutingRule:ci,ApplicationGatewayRedirectConfiguration:di,ApplicationGatewayUrlPathMap:mi,ApplicationGateway:Ci,ApplicationGatewaySku:Yr,ApplicationGatewaySslPolicy:ei,ApplicationGatewayWebApplicationFirewallConfiguration:Pi,ApplicationGatewayFirewallDisabledRuleGroup:yi,ApplicationGatewayAutoscaleConfiguration:Ni,ApplicationGatewayFirewallRuleSet:fi,ApplicationGatewayFirewallRuleGroup:Ri,ApplicationGatewayFirewallRule:wi,ApplicationGatewayAvailableSslOptions:gi,ApplicationGatewaySslPredefinedPolicy:Ai,AzureFirewallIPConfiguration:hi,AzureFirewallApplicationRuleCollection:Ii,AzureFirewallRCAction:ki,AzureFirewallApplicationRule:vi,AzureFirewallApplicationRuleProtocol:zi,AzureFirewallNatRuleCollection:Vi,AzureFirewallNatRCAction:Ei,AzureFirewallNatRule:Mi,AzureFirewallNetworkRuleCollection:Fi,AzureFirewallNetworkRule:xi,AzureFirewall:qi,AzureFirewallFqdnTag:Ti,DdosProtectionPlan:Bi,EndpointServiceResult:Oi,ExpressRouteCircuitAuthorization:Di,RouteFilterRule:Ui,ExpressRouteCircuitConnection:Ki,ExpressRouteCircuitPeering:ji,ExpressRouteCircuitPeeringConfig:Hi,ExpressRouteCircuitStats:Wi,RouteFilter:Zi,Ipv6ExpressRouteCircuitPeeringConfig:Qi,ExpressRouteConnectionId:_i,ExpressRouteCircuit:Ji,ExpressRouteCircuitSku:Xi,ExpressRouteCircuitServiceProviderProperties:$i,ExpressRouteServiceProvider:na,ExpressRouteServiceProviderBandwidthsOffered:oa,ExpressRouteCrossConnectionPeering:la,ExpressRouteCrossConnection:ca,ExpressRouteCircuitReference:ua,ExpressRouteConnection:Na,ExpressRouteCircuitPeeringId:ma,ExpressRouteGateway:Ca,ExpressRouteGatewayPropertiesAutoScaleConfiguration:Pa,ExpressRouteGatewayPropertiesAutoScaleConfigurationBounds:ya,VirtualHubId:da,ContainerNetworkInterfaceConfiguration:xa,ContainerNetworkInterface:Ta,Container:Fa,ContainerNetworkInterfaceIpConfiguration:qa,NetworkProfile:La,NetworkWatcher:Oa,ConnectionMonitorResult:Bo,ConnectionMonitorSource:qo,ConnectionMonitorDestination:To,PublicIPPrefix:nn,PublicIPPrefixSku:an,ReferencedPublicIpAddress:on,PatchRouteFilterRule:sn,PatchRouteFilter:pn,BgpServiceCommunity:ln,BGPCommunity:un,VirtualNetworkPeering:yn,AddressSpace:mn,VirtualNetwork:Nn,DhcpOptions:Pn,VirtualNetworkGatewayIPConfiguration:fn,VpnClientRootCertificate:gn,VpnClientRevokedCertificate:An,VirtualNetworkGateway:vn,VirtualNetworkGatewaySku:Sn,VpnClientConfiguration:bn,IpsecPolicy:Gn,BgpSettings:hn,LocalNetworkGateway:xn,VirtualNetworkGatewayConnection:Fn,TunnelConnectionHealth:Vn,ConnectionSharedKey:Tn,VirtualNetworkGatewayConnectionListEntity:On,VirtualNetworkConnectionGatewayReference:Bn,P2SVpnServerConfigVpnClientRootCertificate:Hn,P2SVpnServerConfigVpnClientRevokedCertificate:Un,P2SVpnServerConfigRadiusServerRootCertificate:Wn,P2SVpnServerConfigRadiusClientRootCertificate:_n,P2SVpnServerConfiguration:Kn,VirtualWAN:jn,VpnSite:Qn,DeviceProperties:Zn,HubVirtualNetworkConnection:$n,VirtualHub:es,VirtualHubRouteTable:Yn,VirtualHubRoute:Jn,VpnConnection:ts,VpnGateway:rs,P2SVpnGateway:os,VpnClientConnectionHealth:as}),Vm=function(){function e(e){this.client=e}return e.prototype.list=function(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,networkInterfaceName:t,options:r},Fm,i)},e.prototype.listNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},qm,r)},e}(),xm=new r.Serializer(Mm),Fm={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}/loadBalancers",urlParameters:[Kp,qp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:Es},default:{bodyMapper:mr}},serializer:xm},qm={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:Es},default:{bodyMapper:mr}},serializer:xm},Tm=Object.freeze({CloudError:mr,NetworkInterfaceTapConfiguration:Nr,SubResource:Pr,BaseResource:yr,VirtualNetworkTap:Dr,Resource:Cr,NetworkInterfaceIPConfiguration:Wr,ApplicationGatewayBackendAddressPool:Kr,ApplicationGatewayBackendAddress:_r,BackendAddressPool:Hr,InboundNatRule:Ur,Subnet:Br,NetworkSecurityGroup:Gr,SecurityRule:Rr,ApplicationSecurityGroup:wr,NetworkInterface:Ar,InterfaceEndpoint:Sr,EndpointService:fr,NetworkInterfaceDnsSettings:gr,RouteTable:hr,Route:br,ServiceEndpointPropertiesFormat:kr,ServiceEndpointPolicy:vr,ServiceEndpointPolicyDefinition:zr,IPConfiguration:xr,PublicIPAddress:Vr,PublicIPAddressSku:Ir,PublicIPAddressDnsSettings:Er,IpTag:Mr,IPConfigurationProfile:Fr,ResourceNavigationLink:qr,ServiceAssociationLink:Tr,Delegation:Lr,FrontendIPConfiguration:Or,NetworkInterfaceTapConfigurationListResult:Ms,ApplicationGatewayBackendHttpSettings:Zr,ApplicationGatewayConnectionDraining:jr,ApplicationGatewayIPConfiguration:ti,ApplicationGatewayAuthenticationCertificate:ri,ApplicationGatewayTrustedRootCertificate:ii,ApplicationGatewaySslCertificate:ai,ApplicationGatewayFrontendIPConfiguration:oi,ApplicationGatewayFrontendPort:ni,ApplicationGatewayHttpListener:si,ApplicationGatewayPathRule:pi,ApplicationGatewayProbe:li,ApplicationGatewayProbeHealthResponseMatch:ui,ApplicationGatewayRequestRoutingRule:ci,ApplicationGatewayRedirectConfiguration:di,ApplicationGatewayUrlPathMap:mi,ApplicationGateway:Ci,ApplicationGatewaySku:Yr,ApplicationGatewaySslPolicy:ei,ApplicationGatewayWebApplicationFirewallConfiguration:Pi,ApplicationGatewayFirewallDisabledRuleGroup:yi,ApplicationGatewayAutoscaleConfiguration:Ni,ApplicationGatewayFirewallRuleSet:fi,ApplicationGatewayFirewallRuleGroup:Ri,ApplicationGatewayFirewallRule:wi,ApplicationGatewayAvailableSslOptions:gi,ApplicationGatewaySslPredefinedPolicy:Ai,AzureFirewallIPConfiguration:hi,AzureFirewallApplicationRuleCollection:Ii,AzureFirewallRCAction:ki,AzureFirewallApplicationRule:vi,AzureFirewallApplicationRuleProtocol:zi,AzureFirewallNatRuleCollection:Vi,AzureFirewallNatRCAction:Ei,AzureFirewallNatRule:Mi,AzureFirewallNetworkRuleCollection:Fi,AzureFirewallNetworkRule:xi,AzureFirewall:qi,AzureFirewallFqdnTag:Ti,DdosProtectionPlan:Bi,EndpointServiceResult:Oi,ExpressRouteCircuitAuthorization:Di,RouteFilterRule:Ui,ExpressRouteCircuitConnection:Ki,ExpressRouteCircuitPeering:ji,ExpressRouteCircuitPeeringConfig:Hi,ExpressRouteCircuitStats:Wi,RouteFilter:Zi,Ipv6ExpressRouteCircuitPeeringConfig:Qi,ExpressRouteConnectionId:_i,ExpressRouteCircuit:Ji,ExpressRouteCircuitSku:Xi,ExpressRouteCircuitServiceProviderProperties:$i,ExpressRouteServiceProvider:na,ExpressRouteServiceProviderBandwidthsOffered:oa,ExpressRouteCrossConnectionPeering:la,ExpressRouteCrossConnection:ca,ExpressRouteCircuitReference:ua,ExpressRouteConnection:Na,ExpressRouteCircuitPeeringId:ma,ExpressRouteGateway:Ca,ExpressRouteGatewayPropertiesAutoScaleConfiguration:Pa,ExpressRouteGatewayPropertiesAutoScaleConfigurationBounds:ya,VirtualHubId:da,LoadBalancingRule:Sa,Probe:ga,InboundNatPool:Aa,OutboundRule:Ga,LoadBalancer:ba,LoadBalancerSku:fa,ContainerNetworkInterfaceConfiguration:xa,ContainerNetworkInterface:Ta,Container:Fa,ContainerNetworkInterfaceIpConfiguration:qa,NetworkProfile:La,NetworkWatcher:Oa,ConnectionMonitorResult:Bo,ConnectionMonitorSource:qo,ConnectionMonitorDestination:To,PublicIPPrefix:nn,PublicIPPrefixSku:an,ReferencedPublicIpAddress:on,PatchRouteFilterRule:sn,PatchRouteFilter:pn,BgpServiceCommunity:ln,BGPCommunity:un,VirtualNetworkPeering:yn,AddressSpace:mn,VirtualNetwork:Nn,DhcpOptions:Pn,VirtualNetworkGatewayIPConfiguration:fn,VpnClientRootCertificate:gn,VpnClientRevokedCertificate:An,VirtualNetworkGateway:vn,VirtualNetworkGatewaySku:Sn,VpnClientConfiguration:bn,IpsecPolicy:Gn,BgpSettings:hn,LocalNetworkGateway:xn,VirtualNetworkGatewayConnection:Fn,TunnelConnectionHealth:Vn,ConnectionSharedKey:Tn,VirtualNetworkGatewayConnectionListEntity:On,VirtualNetworkConnectionGatewayReference:Bn,P2SVpnServerConfigVpnClientRootCertificate:Hn,P2SVpnServerConfigVpnClientRevokedCertificate:Un,P2SVpnServerConfigRadiusServerRootCertificate:Wn,P2SVpnServerConfigRadiusClientRootCertificate:_n,P2SVpnServerConfiguration:Kn,VirtualWAN:jn,VpnSite:Qn,DeviceProperties:Zn,HubVirtualNetworkConnection:$n,VirtualHub:es,VirtualHubRouteTable:Yn,VirtualHubRoute:Jn,VpnConnection:ts,VpnGateway:rs,P2SVpnGateway:os,VpnClientConnectionHealth:as}),Lm=function(){function e(e){this.client=e}return e.prototype.deleteMethod=function(e,t,r,i){return this.beginDeleteMethod(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.get=function(e,t,r,i,a){return this.client.sendOperationRequest({resourceGroupName:e,networkInterfaceName:t,tapConfigurationName:r,options:i},Om,a)},e.prototype.createOrUpdate=function(e,t,r,i,a){return this.beginCreateOrUpdate(e,t,r,i,a).then(function(e){return e.pollUntilFinished()})},e.prototype.list=function(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,networkInterfaceName:t,options:r},Dm,i)},e.prototype.beginDeleteMethod=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,networkInterfaceName:t,tapConfigurationName:r,options:i},Hm,i)},e.prototype.beginCreateOrUpdate=function(e,t,r,i,a){return this.client.sendLRORequest({resourceGroupName:e,networkInterfaceName:t,tapConfigurationName:r,tapConfigurationParameters:i,options:a},Um,a)},e.prototype.listNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},Wm,r)},e}(),Bm=new r.Serializer(Tm),Om={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}/tapConfigurations/{tapConfigurationName}",urlParameters:[Kp,qp,ru,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:Nr},default:{bodyMapper:mr}},serializer:Bm},Dm={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}/tapConfigurations",urlParameters:[Kp,qp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:Ms},default:{bodyMapper:mr}},serializer:Bm},Hm={httpMethod:"DELETE",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}/tapConfigurations/{tapConfigurationName}",urlParameters:[Kp,qp,ru,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{},202:{},204:{},default:{bodyMapper:mr}},serializer:Bm},Um={httpMethod:"PUT",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}/tapConfigurations/{tapConfigurationName}",urlParameters:[Kp,qp,ru,tu],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"tapConfigurationParameters",mapper:cr({},Nr,{required:!0})},responses:{200:{bodyMapper:Nr},201:{bodyMapper:Nr},default:{bodyMapper:mr}},serializer:Bm},Wm={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:Ms},default:{bodyMapper:mr}},serializer:Bm},_m=Object.freeze({CloudError:mr,NetworkProfile:La,Resource:Cr,BaseResource:yr,ContainerNetworkInterface:Ta,SubResource:Pr,ContainerNetworkInterfaceConfiguration:xa,IPConfigurationProfile:Fr,Subnet:Br,NetworkSecurityGroup:Gr,SecurityRule:Rr,ApplicationSecurityGroup:wr,NetworkInterface:Ar,InterfaceEndpoint:Sr,EndpointService:fr,NetworkInterfaceIPConfiguration:Wr,VirtualNetworkTap:Dr,NetworkInterfaceTapConfiguration:Nr,FrontendIPConfiguration:Or,PublicIPAddress:Vr,PublicIPAddressSku:Ir,IPConfiguration:xr,PublicIPAddressDnsSettings:Er,IpTag:Mr,ApplicationGatewayBackendAddressPool:Kr,ApplicationGatewayBackendAddress:_r,BackendAddressPool:Hr,InboundNatRule:Ur,NetworkInterfaceDnsSettings:gr,RouteTable:hr,Route:br,ServiceEndpointPropertiesFormat:kr,ServiceEndpointPolicy:vr,ServiceEndpointPolicyDefinition:zr,ResourceNavigationLink:qr,ServiceAssociationLink:Tr,Delegation:Lr,Container:Fa,ContainerNetworkInterfaceIpConfiguration:qa,TagsObject:Gi,NetworkProfileListResult:Vs,ApplicationGatewayBackendHttpSettings:Zr,ApplicationGatewayConnectionDraining:jr,ApplicationGatewayIPConfiguration:ti,ApplicationGatewayAuthenticationCertificate:ri,ApplicationGatewayTrustedRootCertificate:ii,ApplicationGatewaySslCertificate:ai,ApplicationGatewayFrontendIPConfiguration:oi,ApplicationGatewayFrontendPort:ni,ApplicationGatewayHttpListener:si,ApplicationGatewayPathRule:pi,ApplicationGatewayProbe:li,ApplicationGatewayProbeHealthResponseMatch:ui,ApplicationGatewayRequestRoutingRule:ci,ApplicationGatewayRedirectConfiguration:di,ApplicationGatewayUrlPathMap:mi,ApplicationGateway:Ci,ApplicationGatewaySku:Yr,ApplicationGatewaySslPolicy:ei,ApplicationGatewayWebApplicationFirewallConfiguration:Pi,ApplicationGatewayFirewallDisabledRuleGroup:yi,ApplicationGatewayAutoscaleConfiguration:Ni,ApplicationGatewayFirewallRuleSet:fi,ApplicationGatewayFirewallRuleGroup:Ri,ApplicationGatewayFirewallRule:wi,ApplicationGatewayAvailableSslOptions:gi,ApplicationGatewaySslPredefinedPolicy:Ai,AzureFirewallIPConfiguration:hi,AzureFirewallApplicationRuleCollection:Ii,AzureFirewallRCAction:ki,AzureFirewallApplicationRule:vi,AzureFirewallApplicationRuleProtocol:zi,AzureFirewallNatRuleCollection:Vi,AzureFirewallNatRCAction:Ei,AzureFirewallNatRule:Mi,AzureFirewallNetworkRuleCollection:Fi,AzureFirewallNetworkRule:xi,AzureFirewall:qi,AzureFirewallFqdnTag:Ti,DdosProtectionPlan:Bi,EndpointServiceResult:Oi,ExpressRouteCircuitAuthorization:Di,RouteFilterRule:Ui,ExpressRouteCircuitConnection:Ki,ExpressRouteCircuitPeering:ji,ExpressRouteCircuitPeeringConfig:Hi,ExpressRouteCircuitStats:Wi,RouteFilter:Zi,Ipv6ExpressRouteCircuitPeeringConfig:Qi,ExpressRouteConnectionId:_i,ExpressRouteCircuit:Ji,ExpressRouteCircuitSku:Xi,ExpressRouteCircuitServiceProviderProperties:$i,ExpressRouteServiceProvider:na,ExpressRouteServiceProviderBandwidthsOffered:oa,ExpressRouteCrossConnectionPeering:la,ExpressRouteCrossConnection:ca,ExpressRouteCircuitReference:ua,ExpressRouteConnection:Na,ExpressRouteCircuitPeeringId:ma,ExpressRouteGateway:Ca,ExpressRouteGatewayPropertiesAutoScaleConfiguration:Pa,ExpressRouteGatewayPropertiesAutoScaleConfigurationBounds:ya,VirtualHubId:da,LoadBalancingRule:Sa,Probe:ga,InboundNatPool:Aa,OutboundRule:Ga,LoadBalancer:ba,LoadBalancerSku:fa,NetworkWatcher:Oa,ConnectionMonitorResult:Bo,ConnectionMonitorSource:qo,ConnectionMonitorDestination:To,PublicIPPrefix:nn,PublicIPPrefixSku:an,ReferencedPublicIpAddress:on,PatchRouteFilterRule:sn,PatchRouteFilter:pn,BgpServiceCommunity:ln,BGPCommunity:un,VirtualNetworkPeering:yn,AddressSpace:mn,VirtualNetwork:Nn,DhcpOptions:Pn,VirtualNetworkGatewayIPConfiguration:fn,VpnClientRootCertificate:gn,VpnClientRevokedCertificate:An,VirtualNetworkGateway:vn,VirtualNetworkGatewaySku:Sn,VpnClientConfiguration:bn,IpsecPolicy:Gn,BgpSettings:hn,LocalNetworkGateway:xn,VirtualNetworkGatewayConnection:Fn,TunnelConnectionHealth:Vn,ConnectionSharedKey:Tn,VirtualNetworkGatewayConnectionListEntity:On,VirtualNetworkConnectionGatewayReference:Bn,P2SVpnServerConfigVpnClientRootCertificate:Hn,P2SVpnServerConfigVpnClientRevokedCertificate:Un,P2SVpnServerConfigRadiusServerRootCertificate:Wn,P2SVpnServerConfigRadiusClientRootCertificate:_n,P2SVpnServerConfiguration:Kn,VirtualWAN:jn,VpnSite:Qn,DeviceProperties:Zn,HubVirtualNetworkConnection:$n,VirtualHub:es,VirtualHubRouteTable:Yn,VirtualHubRoute:Jn,VpnConnection:ts,VpnGateway:rs,P2SVpnGateway:os,VpnClientConnectionHealth:as}),Km=function(){function e(e){this.client=e}return e.prototype.deleteMethod=function(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,networkProfileName:t,options:r},Zm,i)},e.prototype.get=function(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,networkProfileName:t,options:r},Qm,i)},e.prototype.createOrUpdate=function(e,t,r,i,a){return this.client.sendOperationRequest({resourceGroupName:e,networkProfileName:t,parameters:r,options:i},Xm,a)},e.prototype.updateTags=function(e,t,r,i,a){return this.client.sendOperationRequest({resourceGroupName:e,networkProfileName:t,parameters:r,options:i},$m,a)},e.prototype.listAll=function(e,t){return this.client.sendOperationRequest({options:e},Jm,t)},e.prototype.list=function(e,t,r){return this.client.sendOperationRequest({resourceGroupName:e,options:t},Ym,r)},e.prototype.listAllNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},ey,r)},e.prototype.listNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},ty,r)},e}(),jm=new r.Serializer(_m),Zm={httpMethod:"DELETE",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkProfiles/{networkProfileName}",urlParameters:[Kp,Tp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{},202:{},204:{},default:{bodyMapper:mr}},serializer:jm},Qm={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkProfiles/{networkProfileName}",urlParameters:[Kp,Tp,tu],queryParameters:[Pp,kp],headerParameters:[yp],responses:{200:{bodyMapper:La},default:{bodyMapper:mr}},serializer:jm},Xm={httpMethod:"PUT",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkProfiles/{networkProfileName}",urlParameters:[Kp,Tp,tu],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"parameters",mapper:cr({},La,{required:!0})},responses:{200:{bodyMapper:La},201:{bodyMapper:La},default:{bodyMapper:mr}},serializer:jm},$m={httpMethod:"PATCH",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkProfiles/{networkProfileName}",urlParameters:[Kp,Tp,tu],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"parameters",mapper:cr({},Gi,{required:!0})},responses:{200:{bodyMapper:La},default:{bodyMapper:mr}},serializer:jm},Jm={httpMethod:"GET",path:"subscriptions/{subscriptionId}/providers/Microsoft.Network/networkProfiles",urlParameters:[tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:Vs},default:{bodyMapper:mr}},serializer:jm},Ym={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkProfiles",urlParameters:[Kp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:Vs},default:{bodyMapper:mr}},serializer:jm},ey={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:Vs},default:{bodyMapper:mr}},serializer:jm},ty={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:Vs},default:{bodyMapper:mr}},serializer:jm},ry=Object.freeze({CloudError:mr,NetworkSecurityGroup:Gr,Resource:Cr,BaseResource:yr,SecurityRule:Rr,SubResource:Pr,ApplicationSecurityGroup:wr,NetworkInterface:Ar,InterfaceEndpoint:Sr,EndpointService:fr,Subnet:Br,RouteTable:hr,Route:br,ServiceEndpointPropertiesFormat:kr,ServiceEndpointPolicy:vr,ServiceEndpointPolicyDefinition:zr,IPConfiguration:xr,PublicIPAddress:Vr,PublicIPAddressSku:Ir,PublicIPAddressDnsSettings:Er,IpTag:Mr,IPConfigurationProfile:Fr,ResourceNavigationLink:qr,ServiceAssociationLink:Tr,Delegation:Lr,NetworkInterfaceIPConfiguration:Wr,VirtualNetworkTap:Dr,NetworkInterfaceTapConfiguration:Nr,FrontendIPConfiguration:Or,ApplicationGatewayBackendAddressPool:Kr,ApplicationGatewayBackendAddress:_r,BackendAddressPool:Hr,InboundNatRule:Ur,NetworkInterfaceDnsSettings:gr,TagsObject:Gi,NetworkSecurityGroupListResult:xs,ApplicationGatewayBackendHttpSettings:Zr,ApplicationGatewayConnectionDraining:jr,ApplicationGatewayIPConfiguration:ti,ApplicationGatewayAuthenticationCertificate:ri,ApplicationGatewayTrustedRootCertificate:ii,ApplicationGatewaySslCertificate:ai,ApplicationGatewayFrontendIPConfiguration:oi,ApplicationGatewayFrontendPort:ni,ApplicationGatewayHttpListener:si,ApplicationGatewayPathRule:pi,ApplicationGatewayProbe:li,ApplicationGatewayProbeHealthResponseMatch:ui,ApplicationGatewayRequestRoutingRule:ci,ApplicationGatewayRedirectConfiguration:di,ApplicationGatewayUrlPathMap:mi,ApplicationGateway:Ci,ApplicationGatewaySku:Yr,ApplicationGatewaySslPolicy:ei,ApplicationGatewayWebApplicationFirewallConfiguration:Pi,ApplicationGatewayFirewallDisabledRuleGroup:yi,ApplicationGatewayAutoscaleConfiguration:Ni,ApplicationGatewayFirewallRuleSet:fi,ApplicationGatewayFirewallRuleGroup:Ri,ApplicationGatewayFirewallRule:wi,ApplicationGatewayAvailableSslOptions:gi,ApplicationGatewaySslPredefinedPolicy:Ai,AzureFirewallIPConfiguration:hi,AzureFirewallApplicationRuleCollection:Ii,AzureFirewallRCAction:ki,AzureFirewallApplicationRule:vi,AzureFirewallApplicationRuleProtocol:zi,AzureFirewallNatRuleCollection:Vi,AzureFirewallNatRCAction:Ei,AzureFirewallNatRule:Mi,AzureFirewallNetworkRuleCollection:Fi,AzureFirewallNetworkRule:xi,AzureFirewall:qi,AzureFirewallFqdnTag:Ti,DdosProtectionPlan:Bi,EndpointServiceResult:Oi,ExpressRouteCircuitAuthorization:Di,RouteFilterRule:Ui,ExpressRouteCircuitConnection:Ki,ExpressRouteCircuitPeering:ji,ExpressRouteCircuitPeeringConfig:Hi,ExpressRouteCircuitStats:Wi,RouteFilter:Zi,Ipv6ExpressRouteCircuitPeeringConfig:Qi,ExpressRouteConnectionId:_i,ExpressRouteCircuit:Ji,ExpressRouteCircuitSku:Xi,ExpressRouteCircuitServiceProviderProperties:$i,ExpressRouteServiceProvider:na,ExpressRouteServiceProviderBandwidthsOffered:oa,ExpressRouteCrossConnectionPeering:la,ExpressRouteCrossConnection:ca,ExpressRouteCircuitReference:ua,ExpressRouteConnection:Na,ExpressRouteCircuitPeeringId:ma,ExpressRouteGateway:Ca,ExpressRouteGatewayPropertiesAutoScaleConfiguration:Pa,ExpressRouteGatewayPropertiesAutoScaleConfigurationBounds:ya,VirtualHubId:da,LoadBalancingRule:Sa,Probe:ga,InboundNatPool:Aa,OutboundRule:Ga,LoadBalancer:ba,LoadBalancerSku:fa,ContainerNetworkInterfaceConfiguration:xa,ContainerNetworkInterface:Ta,Container:Fa,ContainerNetworkInterfaceIpConfiguration:qa,NetworkProfile:La,NetworkWatcher:Oa,ConnectionMonitorResult:Bo,ConnectionMonitorSource:qo,ConnectionMonitorDestination:To,PublicIPPrefix:nn,PublicIPPrefixSku:an,ReferencedPublicIpAddress:on,PatchRouteFilterRule:sn,PatchRouteFilter:pn,BgpServiceCommunity:ln,BGPCommunity:un,VirtualNetworkPeering:yn,AddressSpace:mn,VirtualNetwork:Nn,DhcpOptions:Pn,VirtualNetworkGatewayIPConfiguration:fn,VpnClientRootCertificate:gn,VpnClientRevokedCertificate:An,VirtualNetworkGateway:vn,VirtualNetworkGatewaySku:Sn,VpnClientConfiguration:bn,IpsecPolicy:Gn,BgpSettings:hn,LocalNetworkGateway:xn,VirtualNetworkGatewayConnection:Fn,TunnelConnectionHealth:Vn,ConnectionSharedKey:Tn,VirtualNetworkGatewayConnectionListEntity:On,VirtualNetworkConnectionGatewayReference:Bn,P2SVpnServerConfigVpnClientRootCertificate:Hn,P2SVpnServerConfigVpnClientRevokedCertificate:Un,P2SVpnServerConfigRadiusServerRootCertificate:Wn,P2SVpnServerConfigRadiusClientRootCertificate:_n,P2SVpnServerConfiguration:Kn,VirtualWAN:jn,VpnSite:Qn,DeviceProperties:Zn,HubVirtualNetworkConnection:$n,VirtualHub:es,VirtualHubRouteTable:Yn,VirtualHubRoute:Jn,VpnConnection:ts,VpnGateway:rs,P2SVpnGateway:os,VpnClientConnectionHealth:as}),iy=function(){function e(e){this.client=e}return e.prototype.deleteMethod=function(e,t,r){return this.beginDeleteMethod(e,t,r).then(function(e){return e.pollUntilFinished()})},e.prototype.get=function(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,networkSecurityGroupName:t,options:r},oy,i)},e.prototype.createOrUpdate=function(e,t,r,i){return this.beginCreateOrUpdate(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.updateTags=function(e,t,r,i){return this.beginUpdateTags(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.listAll=function(e,t){return this.client.sendOperationRequest({options:e},ny,t)},e.prototype.list=function(e,t,r){return this.client.sendOperationRequest({resourceGroupName:e,options:t},sy,r)},e.prototype.beginDeleteMethod=function(e,t,r){return this.client.sendLRORequest({resourceGroupName:e,networkSecurityGroupName:t,options:r},py,r)},e.prototype.beginCreateOrUpdate=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,networkSecurityGroupName:t,parameters:r,options:i},uy,i)},e.prototype.beginUpdateTags=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,networkSecurityGroupName:t,parameters:r,options:i},ly,i)},e.prototype.listAllNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},cy,r)},e.prototype.listNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},dy,r)},e}(),ay=new r.Serializer(ry),oy={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups/{networkSecurityGroupName}",urlParameters:[Kp,Lp,tu],queryParameters:[Pp,kp],headerParameters:[yp],responses:{200:{bodyMapper:Gr},default:{bodyMapper:mr}},serializer:ay},ny={httpMethod:"GET",path:"subscriptions/{subscriptionId}/providers/Microsoft.Network/networkSecurityGroups",urlParameters:[tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:xs},default:{bodyMapper:mr}},serializer:ay},sy={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups",urlParameters:[Kp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:xs},default:{bodyMapper:mr}},serializer:ay},py={httpMethod:"DELETE",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups/{networkSecurityGroupName}",urlParameters:[Kp,Lp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{},202:{},204:{},default:{bodyMapper:mr}},serializer:ay},uy={httpMethod:"PUT",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups/{networkSecurityGroupName}",urlParameters:[Kp,Lp,tu],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"parameters",mapper:cr({},Gr,{required:!0})},responses:{200:{bodyMapper:Gr},201:{bodyMapper:Gr},default:{bodyMapper:mr}},serializer:ay},ly={httpMethod:"PATCH",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups/{networkSecurityGroupName}",urlParameters:[Kp,Lp,tu],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"parameters",mapper:cr({},Gi,{required:!0})},responses:{200:{bodyMapper:Gr},default:{bodyMapper:mr}},serializer:ay},cy={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:xs},default:{bodyMapper:mr}},serializer:ay},dy={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:xs},default:{bodyMapper:mr}},serializer:ay},my=Object.freeze({CloudError:mr,SecurityRule:Rr,SubResource:Pr,BaseResource:yr,ApplicationSecurityGroup:wr,Resource:Cr,SecurityRuleListResult:Fs,NetworkInterfaceTapConfiguration:Nr,VirtualNetworkTap:Dr,NetworkInterfaceIPConfiguration:Wr,ApplicationGatewayBackendAddressPool:Kr,ApplicationGatewayBackendAddress:_r,BackendAddressPool:Hr,InboundNatRule:Ur,Subnet:Br,NetworkSecurityGroup:Gr,NetworkInterface:Ar,InterfaceEndpoint:Sr,EndpointService:fr,NetworkInterfaceDnsSettings:gr,RouteTable:hr,Route:br,ServiceEndpointPropertiesFormat:kr,ServiceEndpointPolicy:vr,ServiceEndpointPolicyDefinition:zr,IPConfiguration:xr,PublicIPAddress:Vr,PublicIPAddressSku:Ir,PublicIPAddressDnsSettings:Er,IpTag:Mr,IPConfigurationProfile:Fr,ResourceNavigationLink:qr,ServiceAssociationLink:Tr,Delegation:Lr,FrontendIPConfiguration:Or,ApplicationGatewayBackendHttpSettings:Zr,ApplicationGatewayConnectionDraining:jr,ApplicationGatewayIPConfiguration:ti,ApplicationGatewayAuthenticationCertificate:ri,ApplicationGatewayTrustedRootCertificate:ii,ApplicationGatewaySslCertificate:ai,ApplicationGatewayFrontendIPConfiguration:oi,ApplicationGatewayFrontendPort:ni,ApplicationGatewayHttpListener:si,ApplicationGatewayPathRule:pi,ApplicationGatewayProbe:li,ApplicationGatewayProbeHealthResponseMatch:ui,ApplicationGatewayRequestRoutingRule:ci,ApplicationGatewayRedirectConfiguration:di,ApplicationGatewayUrlPathMap:mi,ApplicationGateway:Ci,ApplicationGatewaySku:Yr,ApplicationGatewaySslPolicy:ei,ApplicationGatewayWebApplicationFirewallConfiguration:Pi,ApplicationGatewayFirewallDisabledRuleGroup:yi,ApplicationGatewayAutoscaleConfiguration:Ni,ApplicationGatewayFirewallRuleSet:fi,ApplicationGatewayFirewallRuleGroup:Ri,ApplicationGatewayFirewallRule:wi,ApplicationGatewayAvailableSslOptions:gi,ApplicationGatewaySslPredefinedPolicy:Ai,AzureFirewallIPConfiguration:hi,AzureFirewallApplicationRuleCollection:Ii,AzureFirewallRCAction:ki,AzureFirewallApplicationRule:vi,AzureFirewallApplicationRuleProtocol:zi,AzureFirewallNatRuleCollection:Vi,AzureFirewallNatRCAction:Ei,AzureFirewallNatRule:Mi,AzureFirewallNetworkRuleCollection:Fi,AzureFirewallNetworkRule:xi,AzureFirewall:qi,AzureFirewallFqdnTag:Ti,DdosProtectionPlan:Bi,EndpointServiceResult:Oi,ExpressRouteCircuitAuthorization:Di,RouteFilterRule:Ui,ExpressRouteCircuitConnection:Ki,ExpressRouteCircuitPeering:ji,ExpressRouteCircuitPeeringConfig:Hi,ExpressRouteCircuitStats:Wi,RouteFilter:Zi,Ipv6ExpressRouteCircuitPeeringConfig:Qi,ExpressRouteConnectionId:_i,ExpressRouteCircuit:Ji,ExpressRouteCircuitSku:Xi,ExpressRouteCircuitServiceProviderProperties:$i,ExpressRouteServiceProvider:na,ExpressRouteServiceProviderBandwidthsOffered:oa,ExpressRouteCrossConnectionPeering:la,ExpressRouteCrossConnection:ca,ExpressRouteCircuitReference:ua,ExpressRouteConnection:Na,ExpressRouteCircuitPeeringId:ma,ExpressRouteGateway:Ca,ExpressRouteGatewayPropertiesAutoScaleConfiguration:Pa,ExpressRouteGatewayPropertiesAutoScaleConfigurationBounds:ya,VirtualHubId:da,LoadBalancingRule:Sa,Probe:ga,InboundNatPool:Aa,OutboundRule:Ga,LoadBalancer:ba,LoadBalancerSku:fa,ContainerNetworkInterfaceConfiguration:xa,ContainerNetworkInterface:Ta,Container:Fa,ContainerNetworkInterfaceIpConfiguration:qa,NetworkProfile:La,NetworkWatcher:Oa,ConnectionMonitorResult:Bo,ConnectionMonitorSource:qo,ConnectionMonitorDestination:To,PublicIPPrefix:nn,PublicIPPrefixSku:an,ReferencedPublicIpAddress:on,PatchRouteFilterRule:sn,PatchRouteFilter:pn,BgpServiceCommunity:ln,BGPCommunity:un,VirtualNetworkPeering:yn,AddressSpace:mn,VirtualNetwork:Nn,DhcpOptions:Pn,VirtualNetworkGatewayIPConfiguration:fn,VpnClientRootCertificate:gn,VpnClientRevokedCertificate:An,VirtualNetworkGateway:vn,VirtualNetworkGatewaySku:Sn,VpnClientConfiguration:bn,IpsecPolicy:Gn,BgpSettings:hn,LocalNetworkGateway:xn,VirtualNetworkGatewayConnection:Fn,TunnelConnectionHealth:Vn,ConnectionSharedKey:Tn,VirtualNetworkGatewayConnectionListEntity:On,VirtualNetworkConnectionGatewayReference:Bn,P2SVpnServerConfigVpnClientRootCertificate:Hn,P2SVpnServerConfigVpnClientRevokedCertificate:Un,P2SVpnServerConfigRadiusServerRootCertificate:Wn,P2SVpnServerConfigRadiusClientRootCertificate:_n,P2SVpnServerConfiguration:Kn,VirtualWAN:jn,VpnSite:Qn,DeviceProperties:Zn,HubVirtualNetworkConnection:$n,VirtualHub:es,VirtualHubRouteTable:Yn,VirtualHubRoute:Jn,VpnConnection:ts,VpnGateway:rs,P2SVpnGateway:os,VpnClientConnectionHealth:as}),yy=function(){function e(e){this.client=e}return e.prototype.deleteMethod=function(e,t,r,i){return this.beginDeleteMethod(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.get=function(e,t,r,i,a){return this.client.sendOperationRequest({resourceGroupName:e,networkSecurityGroupName:t,securityRuleName:r,options:i},Ny,a)},e.prototype.createOrUpdate=function(e,t,r,i,a){return this.beginCreateOrUpdate(e,t,r,i,a).then(function(e){return e.pollUntilFinished()})},e.prototype.list=function(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,networkSecurityGroupName:t,options:r},Cy,i)},e.prototype.beginDeleteMethod=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,networkSecurityGroupName:t,securityRuleName:r,options:i},wy,i)},e.prototype.beginCreateOrUpdate=function(e,t,r,i,a){return this.client.sendLRORequest({resourceGroupName:e,networkSecurityGroupName:t,securityRuleName:r,securityRuleParameters:i,options:a},Ry,a)},e.prototype.listNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},fy,r)},e}(),Py=new r.Serializer(my),Ny={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups/{networkSecurityGroupName}/securityRules/{securityRuleName}",urlParameters:[Kp,Lp,$p,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:Rr},default:{bodyMapper:mr}},serializer:Py},Cy={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups/{networkSecurityGroupName}/securityRules",urlParameters:[Kp,Lp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:Fs},default:{bodyMapper:mr}},serializer:Py},wy={httpMethod:"DELETE",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups/{networkSecurityGroupName}/securityRules/{securityRuleName}",urlParameters:[Kp,Lp,$p,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{},202:{},204:{},default:{bodyMapper:mr}},serializer:Py},Ry={httpMethod:"PUT",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups/{networkSecurityGroupName}/securityRules/{securityRuleName}",urlParameters:[Kp,Lp,$p,tu],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"securityRuleParameters",mapper:cr({},Rr,{required:!0})},responses:{200:{bodyMapper:Rr},201:{bodyMapper:Rr},default:{bodyMapper:mr}},serializer:Py},fy={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:Fs},default:{bodyMapper:mr}},serializer:Py},Sy=Object.freeze({SecurityRuleListResult:Fs,SecurityRule:Rr,SubResource:Pr,BaseResource:yr,ApplicationSecurityGroup:wr,Resource:Cr,CloudError:mr,NetworkInterfaceTapConfiguration:Nr,VirtualNetworkTap:Dr,NetworkInterfaceIPConfiguration:Wr,ApplicationGatewayBackendAddressPool:Kr,ApplicationGatewayBackendAddress:_r,BackendAddressPool:Hr,InboundNatRule:Ur,Subnet:Br,NetworkSecurityGroup:Gr,NetworkInterface:Ar,InterfaceEndpoint:Sr,EndpointService:fr,NetworkInterfaceDnsSettings:gr,RouteTable:hr,Route:br,ServiceEndpointPropertiesFormat:kr,ServiceEndpointPolicy:vr,ServiceEndpointPolicyDefinition:zr,IPConfiguration:xr,PublicIPAddress:Vr,PublicIPAddressSku:Ir,PublicIPAddressDnsSettings:Er,IpTag:Mr,IPConfigurationProfile:Fr,ResourceNavigationLink:qr,ServiceAssociationLink:Tr,Delegation:Lr,FrontendIPConfiguration:Or,ApplicationGatewayBackendHttpSettings:Zr,ApplicationGatewayConnectionDraining:jr,ApplicationGatewayIPConfiguration:ti,ApplicationGatewayAuthenticationCertificate:ri,ApplicationGatewayTrustedRootCertificate:ii,ApplicationGatewaySslCertificate:ai,ApplicationGatewayFrontendIPConfiguration:oi,ApplicationGatewayFrontendPort:ni,ApplicationGatewayHttpListener:si,ApplicationGatewayPathRule:pi,ApplicationGatewayProbe:li,ApplicationGatewayProbeHealthResponseMatch:ui,ApplicationGatewayRequestRoutingRule:ci,ApplicationGatewayRedirectConfiguration:di,ApplicationGatewayUrlPathMap:mi,ApplicationGateway:Ci,ApplicationGatewaySku:Yr,ApplicationGatewaySslPolicy:ei,ApplicationGatewayWebApplicationFirewallConfiguration:Pi,ApplicationGatewayFirewallDisabledRuleGroup:yi,ApplicationGatewayAutoscaleConfiguration:Ni,ApplicationGatewayFirewallRuleSet:fi,ApplicationGatewayFirewallRuleGroup:Ri,ApplicationGatewayFirewallRule:wi,ApplicationGatewayAvailableSslOptions:gi,ApplicationGatewaySslPredefinedPolicy:Ai,AzureFirewallIPConfiguration:hi,AzureFirewallApplicationRuleCollection:Ii,AzureFirewallRCAction:ki,AzureFirewallApplicationRule:vi,AzureFirewallApplicationRuleProtocol:zi,AzureFirewallNatRuleCollection:Vi,AzureFirewallNatRCAction:Ei,AzureFirewallNatRule:Mi,AzureFirewallNetworkRuleCollection:Fi,AzureFirewallNetworkRule:xi,AzureFirewall:qi,AzureFirewallFqdnTag:Ti,DdosProtectionPlan:Bi,EndpointServiceResult:Oi,ExpressRouteCircuitAuthorization:Di,RouteFilterRule:Ui,ExpressRouteCircuitConnection:Ki,ExpressRouteCircuitPeering:ji,ExpressRouteCircuitPeeringConfig:Hi,ExpressRouteCircuitStats:Wi,RouteFilter:Zi,Ipv6ExpressRouteCircuitPeeringConfig:Qi,ExpressRouteConnectionId:_i,ExpressRouteCircuit:Ji,ExpressRouteCircuitSku:Xi,ExpressRouteCircuitServiceProviderProperties:$i,ExpressRouteServiceProvider:na,ExpressRouteServiceProviderBandwidthsOffered:oa,ExpressRouteCrossConnectionPeering:la,ExpressRouteCrossConnection:ca,ExpressRouteCircuitReference:ua,ExpressRouteConnection:Na,ExpressRouteCircuitPeeringId:ma,ExpressRouteGateway:Ca,ExpressRouteGatewayPropertiesAutoScaleConfiguration:Pa,ExpressRouteGatewayPropertiesAutoScaleConfigurationBounds:ya,VirtualHubId:da,LoadBalancingRule:Sa,Probe:ga,InboundNatPool:Aa,OutboundRule:Ga,LoadBalancer:ba,LoadBalancerSku:fa,ContainerNetworkInterfaceConfiguration:xa,ContainerNetworkInterface:Ta,Container:Fa,ContainerNetworkInterfaceIpConfiguration:qa,NetworkProfile:La,NetworkWatcher:Oa,ConnectionMonitorResult:Bo,ConnectionMonitorSource:qo,ConnectionMonitorDestination:To,PublicIPPrefix:nn,PublicIPPrefixSku:an,ReferencedPublicIpAddress:on,PatchRouteFilterRule:sn,PatchRouteFilter:pn,BgpServiceCommunity:ln,BGPCommunity:un,VirtualNetworkPeering:yn,AddressSpace:mn,VirtualNetwork:Nn,DhcpOptions:Pn,VirtualNetworkGatewayIPConfiguration:fn,VpnClientRootCertificate:gn,VpnClientRevokedCertificate:An,VirtualNetworkGateway:vn,VirtualNetworkGatewaySku:Sn,VpnClientConfiguration:bn,IpsecPolicy:Gn,BgpSettings:hn,LocalNetworkGateway:xn,VirtualNetworkGatewayConnection:Fn,TunnelConnectionHealth:Vn,ConnectionSharedKey:Tn,VirtualNetworkGatewayConnectionListEntity:On,VirtualNetworkConnectionGatewayReference:Bn,P2SVpnServerConfigVpnClientRootCertificate:Hn,P2SVpnServerConfigVpnClientRevokedCertificate:Un,P2SVpnServerConfigRadiusServerRootCertificate:Wn,P2SVpnServerConfigRadiusClientRootCertificate:_n,P2SVpnServerConfiguration:Kn,VirtualWAN:jn,VpnSite:Qn,DeviceProperties:Zn,HubVirtualNetworkConnection:$n,VirtualHub:es,VirtualHubRouteTable:Yn,VirtualHubRoute:Jn,VpnConnection:ts,VpnGateway:rs,P2SVpnGateway:os,VpnClientConnectionHealth:as}),gy=function(){function e(e){this.client=e}return e.prototype.list=function(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,networkSecurityGroupName:t,options:r},Gy,i)},e.prototype.get=function(e,t,r,i,a){return this.client.sendOperationRequest({resourceGroupName:e,networkSecurityGroupName:t,defaultSecurityRuleName:r,options:i},by,a)},e.prototype.listNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},hy,r)},e}(),Ay=new r.Serializer(Sy),Gy={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups/{networkSecurityGroupName}/defaultSecurityRules",urlParameters:[Kp,Lp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:Fs},default:{bodyMapper:mr}},serializer:Ay},by={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups/{networkSecurityGroupName}/defaultSecurityRules/{defaultSecurityRuleName}",urlParameters:[Kp,Lp,{parameterPath:"defaultSecurityRuleName",mapper:{required:!0,serializedName:"defaultSecurityRuleName",type:{name:"String"}}},tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:Rr},default:{bodyMapper:mr}},serializer:Ay},hy={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:Fs},default:{bodyMapper:mr}},serializer:Ay},ky=Object.freeze({NetworkWatcher:Oa,Resource:Cr,BaseResource:yr,ErrorResponse:Ba,ErrorDetails:ha,TagsObject:Gi,NetworkWatcherListResult:qs,TopologyParameters:Da,SubResource:Pr,Topology:Wa,TopologyResource:Ua,TopologyAssociation:Ha,VerificationIPFlowParameters:_a,VerificationIPFlowResult:Ka,NextHopParameters:ja,NextHopResult:Za,SecurityGroupViewParameters:Qa,SecurityGroupViewResult:eo,SecurityGroupNetworkInterface:Ya,SecurityRuleAssociations:Ja,NetworkInterfaceAssociation:Xa,SecurityRule:Rr,ApplicationSecurityGroup:wr,SubnetAssociation:$a,EffectiveNetworkSecurityRule:va,TroubleshootingParameters:no,TroubleshootingResult:lo,TroubleshootingDetails:uo,TroubleshootingRecommendedActions:po,QueryTroubleshootingParameters:so,FlowLogInformation:No,RetentionPolicyParameters:co,TrafficAnalyticsProperties:Po,TrafficAnalyticsConfigurationProperties:yo,FlowLogStatusParameters:mo,ConnectivityParameters:go,ConnectivitySource:Co,ConnectivityDestination:wo,ProtocolConfiguration:So,HTTPConfiguration:fo,HTTPHeader:Ro,ConnectivityInformation:bo,ConnectivityHop:Go,ConnectivityIssue:Ao,AzureReachabilityReportParameters:ko,AzureReachabilityReportLocation:ho,AzureReachabilityReport:Io,AzureReachabilityReportItem:vo,AzureReachabilityReportLatencyInfo:zo,AvailableProvidersListParameters:Eo,AvailableProvidersList:Fo,AvailableProvidersListCountry:xo,AvailableProvidersListState:Vo,AvailableProvidersListCity:Mo,NetworkConfigurationDiagnosticParameters:Uo,TrafficQuery:Ho,NetworkConfigurationDiagnosticResponse:Qo,NetworkConfigurationDiagnosticResult:Zo,NetworkSecurityGroupResult:jo,EvaluatedNetworkSecurityGroup:Ko,MatchedRule:Wo,NetworkSecurityRulesEvaluationResult:_o,NetworkInterfaceTapConfiguration:Nr,VirtualNetworkTap:Dr,NetworkInterfaceIPConfiguration:Wr,ApplicationGatewayBackendAddressPool:Kr,ApplicationGatewayBackendAddress:_r,BackendAddressPool:Hr,InboundNatRule:Ur,Subnet:Br,NetworkSecurityGroup:Gr,NetworkInterface:Ar,InterfaceEndpoint:Sr,EndpointService:fr,NetworkInterfaceDnsSettings:gr,RouteTable:hr,Route:br,ServiceEndpointPropertiesFormat:kr,ServiceEndpointPolicy:vr,ServiceEndpointPolicyDefinition:zr,IPConfiguration:xr,PublicIPAddress:Vr,PublicIPAddressSku:Ir,PublicIPAddressDnsSettings:Er,IpTag:Mr,IPConfigurationProfile:Fr,ResourceNavigationLink:qr,ServiceAssociationLink:Tr,Delegation:Lr,FrontendIPConfiguration:Or,ApplicationGatewayBackendHttpSettings:Zr,ApplicationGatewayConnectionDraining:jr,ApplicationGatewayIPConfiguration:ti,ApplicationGatewayAuthenticationCertificate:ri,ApplicationGatewayTrustedRootCertificate:ii,ApplicationGatewaySslCertificate:ai,ApplicationGatewayFrontendIPConfiguration:oi,ApplicationGatewayFrontendPort:ni,ApplicationGatewayHttpListener:si,ApplicationGatewayPathRule:pi,ApplicationGatewayProbe:li,ApplicationGatewayProbeHealthResponseMatch:ui,ApplicationGatewayRequestRoutingRule:ci,ApplicationGatewayRedirectConfiguration:di,ApplicationGatewayUrlPathMap:mi,ApplicationGateway:Ci,ApplicationGatewaySku:Yr,ApplicationGatewaySslPolicy:ei,ApplicationGatewayWebApplicationFirewallConfiguration:Pi,ApplicationGatewayFirewallDisabledRuleGroup:yi,ApplicationGatewayAutoscaleConfiguration:Ni,ApplicationGatewayFirewallRuleSet:fi,ApplicationGatewayFirewallRuleGroup:Ri,ApplicationGatewayFirewallRule:wi,ApplicationGatewayAvailableSslOptions:gi,ApplicationGatewaySslPredefinedPolicy:Ai,AzureFirewallIPConfiguration:hi,AzureFirewallApplicationRuleCollection:Ii,AzureFirewallRCAction:ki,AzureFirewallApplicationRule:vi,AzureFirewallApplicationRuleProtocol:zi,AzureFirewallNatRuleCollection:Vi,AzureFirewallNatRCAction:Ei,AzureFirewallNatRule:Mi,AzureFirewallNetworkRuleCollection:Fi,AzureFirewallNetworkRule:xi,AzureFirewall:qi,AzureFirewallFqdnTag:Ti,DdosProtectionPlan:Bi,EndpointServiceResult:Oi,ExpressRouteCircuitAuthorization:Di,RouteFilterRule:Ui,ExpressRouteCircuitConnection:Ki,ExpressRouteCircuitPeering:ji,ExpressRouteCircuitPeeringConfig:Hi,ExpressRouteCircuitStats:Wi,RouteFilter:Zi,Ipv6ExpressRouteCircuitPeeringConfig:Qi,ExpressRouteConnectionId:_i,ExpressRouteCircuit:Ji,ExpressRouteCircuitSku:Xi,ExpressRouteCircuitServiceProviderProperties:$i,ExpressRouteServiceProvider:na,ExpressRouteServiceProviderBandwidthsOffered:oa,ExpressRouteCrossConnectionPeering:la,ExpressRouteCrossConnection:ca,ExpressRouteCircuitReference:ua,ExpressRouteConnection:Na,ExpressRouteCircuitPeeringId:ma,ExpressRouteGateway:Ca,ExpressRouteGatewayPropertiesAutoScaleConfiguration:Pa,ExpressRouteGatewayPropertiesAutoScaleConfigurationBounds:ya,VirtualHubId:da,LoadBalancingRule:Sa,Probe:ga,InboundNatPool:Aa,OutboundRule:Ga,LoadBalancer:ba,LoadBalancerSku:fa,ContainerNetworkInterfaceConfiguration:xa,ContainerNetworkInterface:Ta,Container:Fa,ContainerNetworkInterfaceIpConfiguration:qa,NetworkProfile:La,ConnectionMonitorResult:Bo,ConnectionMonitorSource:qo,ConnectionMonitorDestination:To,PublicIPPrefix:nn,PublicIPPrefixSku:an,ReferencedPublicIpAddress:on,PatchRouteFilterRule:sn,PatchRouteFilter:pn,BgpServiceCommunity:ln,BGPCommunity:un,VirtualNetworkPeering:yn,AddressSpace:mn,VirtualNetwork:Nn,DhcpOptions:Pn,VirtualNetworkGatewayIPConfiguration:fn,VpnClientRootCertificate:gn,VpnClientRevokedCertificate:An,VirtualNetworkGateway:vn,VirtualNetworkGatewaySku:Sn,VpnClientConfiguration:bn,IpsecPolicy:Gn,BgpSettings:hn,LocalNetworkGateway:xn,VirtualNetworkGatewayConnection:Fn,TunnelConnectionHealth:Vn,ConnectionSharedKey:Tn,VirtualNetworkGatewayConnectionListEntity:On,VirtualNetworkConnectionGatewayReference:Bn,P2SVpnServerConfigVpnClientRootCertificate:Hn,P2SVpnServerConfigVpnClientRevokedCertificate:Un,P2SVpnServerConfigRadiusServerRootCertificate:Wn,P2SVpnServerConfigRadiusClientRootCertificate:_n,P2SVpnServerConfiguration:Kn,VirtualWAN:jn,VpnSite:Qn,DeviceProperties:Zn,HubVirtualNetworkConnection:$n,VirtualHub:es,VirtualHubRouteTable:Yn,VirtualHubRoute:Jn,VpnConnection:ts,VpnGateway:rs,P2SVpnGateway:os,VpnClientConnectionHealth:as}),zy=function(){function e(e){this.client=e}return e.prototype.createOrUpdate=function(e,t,r,i,a){return this.client.sendOperationRequest({resourceGroupName:e,networkWatcherName:t,parameters:r,options:i},Iy,a)},e.prototype.get=function(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,networkWatcherName:t,options:r},Ey,i)},e.prototype.deleteMethod=function(e,t,r){return this.beginDeleteMethod(e,t,r).then(function(e){return e.pollUntilFinished()})},e.prototype.updateTags=function(e,t,r,i,a){return this.client.sendOperationRequest({resourceGroupName:e,networkWatcherName:t,parameters:r,options:i},My,a)},e.prototype.list=function(e,t,r){return this.client.sendOperationRequest({resourceGroupName:e,options:t},Vy,r)},e.prototype.listAll=function(e,t){return this.client.sendOperationRequest({options:e},xy,t)},e.prototype.getTopology=function(e,t,r,i,a){return this.client.sendOperationRequest({resourceGroupName:e,networkWatcherName:t,parameters:r,options:i},Fy,a)},e.prototype.verifyIPFlow=function(e,t,r,i){return this.beginVerifyIPFlow(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.getNextHop=function(e,t,r,i){return this.beginGetNextHop(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.getVMSecurityRules=function(e,t,r,i){return this.beginGetVMSecurityRules(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.getTroubleshooting=function(e,t,r,i){return this.beginGetTroubleshooting(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.getTroubleshootingResult=function(e,t,r,i){return this.beginGetTroubleshootingResult(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.setFlowLogConfiguration=function(e,t,r,i){return this.beginSetFlowLogConfiguration(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.getFlowLogStatus=function(e,t,r,i){return this.beginGetFlowLogStatus(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.checkConnectivity=function(e,t,r,i){return this.beginCheckConnectivity(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.getAzureReachabilityReport=function(e,t,r,i){return this.beginGetAzureReachabilityReport(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.listAvailableProviders=function(e,t,r,i){return this.beginListAvailableProviders(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.getNetworkConfigurationDiagnostic=function(e,t,r,i){return this.beginGetNetworkConfigurationDiagnostic(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.beginDeleteMethod=function(e,t,r){return this.client.sendLRORequest({resourceGroupName:e,networkWatcherName:t,options:r},qy,r)},e.prototype.beginVerifyIPFlow=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,networkWatcherName:t,parameters:r,options:i},Ty,i)},e.prototype.beginGetNextHop=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,networkWatcherName:t,parameters:r,options:i},Ly,i)},e.prototype.beginGetVMSecurityRules=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,networkWatcherName:t,parameters:r,options:i},By,i)},e.prototype.beginGetTroubleshooting=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,networkWatcherName:t,parameters:r,options:i},Oy,i)},e.prototype.beginGetTroubleshootingResult=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,networkWatcherName:t,parameters:r,options:i},Dy,i)},e.prototype.beginSetFlowLogConfiguration=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,networkWatcherName:t,parameters:r,options:i},Hy,i)},e.prototype.beginGetFlowLogStatus=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,networkWatcherName:t,parameters:r,options:i},Uy,i)},e.prototype.beginCheckConnectivity=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,networkWatcherName:t,parameters:r,options:i},Wy,i)},e.prototype.beginGetAzureReachabilityReport=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,networkWatcherName:t,parameters:r,options:i},_y,i)},e.prototype.beginListAvailableProviders=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,networkWatcherName:t,parameters:r,options:i},Ky,i)},e.prototype.beginGetNetworkConfigurationDiagnostic=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,networkWatcherName:t,parameters:r,options:i},jy,i)},e}(),vy=new r.Serializer(ky),Iy={httpMethod:"PUT",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}",urlParameters:[Kp,Bp,tu],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"parameters",mapper:cr({},Oa,{required:!0})},responses:{200:{bodyMapper:Oa},201:{bodyMapper:Oa},default:{bodyMapper:Ba}},serializer:vy},Ey={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}",urlParameters:[Kp,Bp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:Oa},default:{bodyMapper:Ba}},serializer:vy},My={httpMethod:"PATCH",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}",urlParameters:[Kp,Bp,tu],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"parameters",mapper:cr({},Gi,{required:!0})},responses:{200:{bodyMapper:Oa},default:{bodyMapper:Ba}},serializer:vy},Vy={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers",urlParameters:[Kp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:qs},default:{bodyMapper:Ba}},serializer:vy},xy={httpMethod:"GET",path:"subscriptions/{subscriptionId}/providers/Microsoft.Network/networkWatchers",urlParameters:[tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:qs},default:{bodyMapper:Ba}},serializer:vy},Fy={httpMethod:"POST",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/topology",urlParameters:[Kp,Bp,tu],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"parameters",mapper:cr({},Da,{required:!0})},responses:{200:{bodyMapper:Wa},default:{bodyMapper:Ba}},serializer:vy},qy={httpMethod:"DELETE",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}",urlParameters:[Kp,Bp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{202:{},204:{},default:{bodyMapper:Ba}},serializer:vy},Ty={httpMethod:"POST",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/ipFlowVerify",urlParameters:[Kp,Bp,tu],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"parameters",mapper:cr({},_a,{required:!0})},responses:{200:{bodyMapper:Ka},202:{bodyMapper:Ka},default:{bodyMapper:Ba}},serializer:vy},Ly={httpMethod:"POST",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/nextHop",urlParameters:[Kp,Bp,tu],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"parameters",mapper:cr({},ja,{required:!0})},responses:{200:{bodyMapper:Za},202:{bodyMapper:Za},default:{bodyMapper:Ba}},serializer:vy},By={httpMethod:"POST",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/securityGroupView",urlParameters:[Kp,Bp,tu],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"parameters",mapper:cr({},Qa,{required:!0})},responses:{200:{bodyMapper:eo},202:{bodyMapper:eo},default:{bodyMapper:Ba}},serializer:vy},Oy={httpMethod:"POST",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/troubleshoot",urlParameters:[Kp,Bp,tu],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"parameters",mapper:cr({},no,{required:!0})},responses:{200:{bodyMapper:lo},202:{bodyMapper:lo},default:{bodyMapper:Ba}},serializer:vy},Dy={httpMethod:"POST",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/queryTroubleshootResult",urlParameters:[Kp,Bp,tu],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"parameters",mapper:cr({},so,{required:!0})},responses:{200:{bodyMapper:lo},202:{bodyMapper:lo},default:{bodyMapper:Ba}},serializer:vy},Hy={httpMethod:"POST",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/configureFlowLog",urlParameters:[Kp,Bp,tu],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"parameters",mapper:cr({},No,{required:!0})},responses:{200:{bodyMapper:No},202:{bodyMapper:No},default:{bodyMapper:Ba}},serializer:vy},Uy={httpMethod:"POST",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/queryFlowLogStatus",urlParameters:[Kp,Bp,tu],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"parameters",mapper:cr({},mo,{required:!0})},responses:{200:{bodyMapper:No},202:{bodyMapper:No},default:{bodyMapper:Ba}},serializer:vy},Wy={httpMethod:"POST",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/connectivityCheck",urlParameters:[Kp,Bp,tu],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"parameters",mapper:cr({},go,{required:!0})},responses:{200:{bodyMapper:bo},202:{bodyMapper:bo},default:{bodyMapper:Ba}},serializer:vy},_y={httpMethod:"POST",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/azureReachabilityReport",urlParameters:[Kp,Bp,tu],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"parameters",mapper:cr({},ko,{required:!0})},responses:{200:{bodyMapper:Io},202:{bodyMapper:Io},default:{bodyMapper:Ba}},serializer:vy},Ky={httpMethod:"POST",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/availableProvidersList",urlParameters:[Kp,Bp,tu],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"parameters",mapper:cr({},Eo,{required:!0})},responses:{200:{bodyMapper:Fo},202:{bodyMapper:Fo},default:{bodyMapper:Ba}},serializer:vy},jy={httpMethod:"POST",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/networkConfigurationDiagnostic",urlParameters:[Kp,Bp,tu],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"parameters",mapper:cr({},Uo,{required:!0})},responses:{200:{bodyMapper:Qo},202:{bodyMapper:Qo},default:{bodyMapper:Ba}},serializer:vy},Zy=Object.freeze({PacketCapture:io,PacketCaptureStorageLocation:to,PacketCaptureFilter:ro,PacketCaptureResult:ao,ErrorResponse:Ba,ErrorDetails:ha,PacketCaptureQueryStatusResult:oo,PacketCaptureListResult:Ts}),Qy=function(){function e(e){this.client=e}return e.prototype.create=function(e,t,r,i,a){return this.beginCreate(e,t,r,i,a).then(function(e){return e.pollUntilFinished()})},e.prototype.get=function(e,t,r,i,a){return this.client.sendOperationRequest({resourceGroupName:e,networkWatcherName:t,packetCaptureName:r,options:i},$y,a)},e.prototype.deleteMethod=function(e,t,r,i){return this.beginDeleteMethod(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.stop=function(e,t,r,i){return this.beginStop(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.getStatus=function(e,t,r,i){return this.beginGetStatus(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.list=function(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,networkWatcherName:t,options:r},Jy,i)},e.prototype.beginCreate=function(e,t,r,i,a){return this.client.sendLRORequest({resourceGroupName:e,networkWatcherName:t,packetCaptureName:r,parameters:i,options:a},Yy,a)},e.prototype.beginDeleteMethod=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,networkWatcherName:t,packetCaptureName:r,options:i},eP,i)},e.prototype.beginStop=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,networkWatcherName:t,packetCaptureName:r,options:i},tP,i)},e.prototype.beginGetStatus=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,networkWatcherName:t,packetCaptureName:r,options:i},rP,i)},e}(),Xy=new r.Serializer(Zy),$y={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}",urlParameters:[Kp,Bp,Hp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:ao},default:{bodyMapper:Ba}},serializer:Xy},Jy={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures",urlParameters:[Kp,Bp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:Ts},default:{bodyMapper:Ba}},serializer:Xy},Yy={httpMethod:"PUT",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}",urlParameters:[Kp,Bp,Hp,tu],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"parameters",mapper:cr({},io,{required:!0})},responses:{201:{bodyMapper:ao},default:{bodyMapper:Ba}},serializer:Xy},eP={httpMethod:"DELETE",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}",urlParameters:[Kp,Bp,Hp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{202:{},204:{},default:{bodyMapper:Ba}},serializer:Xy},tP={httpMethod:"POST",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}/stop",urlParameters:[Kp,Bp,Hp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{},202:{},default:{bodyMapper:Ba}},serializer:Xy},rP={httpMethod:"POST",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}/queryStatus",urlParameters:[Kp,Bp,Hp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:oo},202:{bodyMapper:oo},default:{bodyMapper:Ba}},serializer:Xy},iP=Object.freeze({ConnectionMonitor:Lo,ConnectionMonitorSource:qo,ConnectionMonitorDestination:To,ConnectionMonitorResult:Bo,BaseResource:yr,ErrorResponse:Ba,ErrorDetails:ha,ConnectionMonitorQueryResult:Do,ConnectionStateSnapshot:Oo,ConnectivityHop:Go,ConnectivityIssue:Ao,ConnectionMonitorListResult:Ls,SubResource:Pr,SecurityRule:Rr,ApplicationSecurityGroup:wr,Resource:Cr,InterfaceEndpoint:Sr,EndpointService:fr,Subnet:Br,NetworkSecurityGroup:Gr,NetworkInterface:Ar,NetworkInterfaceIPConfiguration:Wr,VirtualNetworkTap:Dr,NetworkInterfaceTapConfiguration:Nr,FrontendIPConfiguration:Or,PublicIPAddress:Vr,PublicIPAddressSku:Ir,IPConfiguration:xr,PublicIPAddressDnsSettings:Er,IpTag:Mr,ApplicationGatewayBackendAddressPool:Kr,ApplicationGatewayBackendAddress:_r,BackendAddressPool:Hr,InboundNatRule:Ur,NetworkInterfaceDnsSettings:gr,RouteTable:hr,Route:br,ServiceEndpointPropertiesFormat:kr,ServiceEndpointPolicy:vr,ServiceEndpointPolicyDefinition:zr,IPConfigurationProfile:Fr,ResourceNavigationLink:qr,ServiceAssociationLink:Tr,Delegation:Lr,ApplicationGatewayBackendHttpSettings:Zr,ApplicationGatewayConnectionDraining:jr,ApplicationGatewayIPConfiguration:ti,ApplicationGatewayAuthenticationCertificate:ri,ApplicationGatewayTrustedRootCertificate:ii,ApplicationGatewaySslCertificate:ai,ApplicationGatewayFrontendIPConfiguration:oi,ApplicationGatewayFrontendPort:ni,ApplicationGatewayHttpListener:si,ApplicationGatewayPathRule:pi,ApplicationGatewayProbe:li,ApplicationGatewayProbeHealthResponseMatch:ui,ApplicationGatewayRequestRoutingRule:ci,ApplicationGatewayRedirectConfiguration:di,ApplicationGatewayUrlPathMap:mi,ApplicationGateway:Ci,ApplicationGatewaySku:Yr,ApplicationGatewaySslPolicy:ei,ApplicationGatewayWebApplicationFirewallConfiguration:Pi,ApplicationGatewayFirewallDisabledRuleGroup:yi,ApplicationGatewayAutoscaleConfiguration:Ni,ApplicationGatewayFirewallRuleSet:fi,ApplicationGatewayFirewallRuleGroup:Ri,ApplicationGatewayFirewallRule:wi,ApplicationGatewayAvailableSslOptions:gi,ApplicationGatewaySslPredefinedPolicy:Ai,AzureFirewallIPConfiguration:hi,AzureFirewallApplicationRuleCollection:Ii,AzureFirewallRCAction:ki,AzureFirewallApplicationRule:vi,AzureFirewallApplicationRuleProtocol:zi,AzureFirewallNatRuleCollection:Vi,AzureFirewallNatRCAction:Ei,AzureFirewallNatRule:Mi,AzureFirewallNetworkRuleCollection:Fi,AzureFirewallNetworkRule:xi,AzureFirewall:qi,AzureFirewallFqdnTag:Ti,DdosProtectionPlan:Bi,EndpointServiceResult:Oi,ExpressRouteCircuitAuthorization:Di,RouteFilterRule:Ui,ExpressRouteCircuitConnection:Ki,ExpressRouteCircuitPeering:ji,ExpressRouteCircuitPeeringConfig:Hi,ExpressRouteCircuitStats:Wi,RouteFilter:Zi,Ipv6ExpressRouteCircuitPeeringConfig:Qi,ExpressRouteConnectionId:_i,ExpressRouteCircuit:Ji,ExpressRouteCircuitSku:Xi,ExpressRouteCircuitServiceProviderProperties:$i,ExpressRouteServiceProvider:na,ExpressRouteServiceProviderBandwidthsOffered:oa,ExpressRouteCrossConnectionPeering:la,ExpressRouteCrossConnection:ca,ExpressRouteCircuitReference:ua,ExpressRouteConnection:Na,ExpressRouteCircuitPeeringId:ma,ExpressRouteGateway:Ca,ExpressRouteGatewayPropertiesAutoScaleConfiguration:Pa,ExpressRouteGatewayPropertiesAutoScaleConfigurationBounds:ya,VirtualHubId:da,LoadBalancingRule:Sa,Probe:ga,InboundNatPool:Aa,OutboundRule:Ga,LoadBalancer:ba,LoadBalancerSku:fa,ContainerNetworkInterfaceConfiguration:xa,ContainerNetworkInterface:Ta,Container:Fa,ContainerNetworkInterfaceIpConfiguration:qa,NetworkProfile:La,NetworkWatcher:Oa,PublicIPPrefix:nn,PublicIPPrefixSku:an,ReferencedPublicIpAddress:on,PatchRouteFilterRule:sn,PatchRouteFilter:pn,BgpServiceCommunity:ln,BGPCommunity:un,VirtualNetworkPeering:yn,AddressSpace:mn,VirtualNetwork:Nn,DhcpOptions:Pn,VirtualNetworkGatewayIPConfiguration:fn,VpnClientRootCertificate:gn,VpnClientRevokedCertificate:An,VirtualNetworkGateway:vn,VirtualNetworkGatewaySku:Sn,VpnClientConfiguration:bn,IpsecPolicy:Gn,BgpSettings:hn,LocalNetworkGateway:xn,VirtualNetworkGatewayConnection:Fn,TunnelConnectionHealth:Vn,ConnectionSharedKey:Tn,VirtualNetworkGatewayConnectionListEntity:On,VirtualNetworkConnectionGatewayReference:Bn,P2SVpnServerConfigVpnClientRootCertificate:Hn,P2SVpnServerConfigVpnClientRevokedCertificate:Un,P2SVpnServerConfigRadiusServerRootCertificate:Wn,P2SVpnServerConfigRadiusClientRootCertificate:_n,P2SVpnServerConfiguration:Kn,VirtualWAN:jn,VpnSite:Qn,DeviceProperties:Zn,HubVirtualNetworkConnection:$n,VirtualHub:es,VirtualHubRouteTable:Yn,VirtualHubRoute:Jn,VpnConnection:ts,VpnGateway:rs,P2SVpnGateway:os,VpnClientConnectionHealth:as}),aP=function(){function e(e){this.client=e}return e.prototype.createOrUpdate=function(e,t,r,i,a){return this.beginCreateOrUpdate(e,t,r,i,a).then(function(e){return e.pollUntilFinished()})},e.prototype.get=function(e,t,r,i,a){return this.client.sendOperationRequest({resourceGroupName:e,networkWatcherName:t,connectionMonitorName:r,options:i},nP,a)},e.prototype.deleteMethod=function(e,t,r,i){return this.beginDeleteMethod(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.stop=function(e,t,r,i){return this.beginStop(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.start=function(e,t,r,i){return this.beginStart(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.query=function(e,t,r,i){return this.beginQuery(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.list=function(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,networkWatcherName:t,options:r},sP,i)},e.prototype.beginCreateOrUpdate=function(e,t,r,i,a){return this.client.sendLRORequest({resourceGroupName:e,networkWatcherName:t,connectionMonitorName:r,parameters:i,options:a},pP,a)},e.prototype.beginDeleteMethod=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,networkWatcherName:t,connectionMonitorName:r,options:i},uP,i)},e.prototype.beginStop=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,networkWatcherName:t,connectionMonitorName:r,options:i},lP,i)},e.prototype.beginStart=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,networkWatcherName:t,connectionMonitorName:r,options:i},cP,i)},e.prototype.beginQuery=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,networkWatcherName:t,connectionMonitorName:r,options:i},dP,i)},e}(),oP=new r.Serializer(iP),nP={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/connectionMonitors/{connectionMonitorName}",urlParameters:[Kp,Bp,gp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:Bo},default:{bodyMapper:Ba}},serializer:oP},sP={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/connectionMonitors",urlParameters:[Kp,Bp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:Ls},default:{bodyMapper:Ba}},serializer:oP},pP={httpMethod:"PUT",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/connectionMonitors/{connectionMonitorName}",urlParameters:[Kp,Bp,gp,tu],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"parameters",mapper:cr({},Lo,{required:!0})},responses:{200:{bodyMapper:Bo},201:{bodyMapper:Bo},default:{bodyMapper:Ba}},serializer:oP},uP={httpMethod:"DELETE",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/connectionMonitors/{connectionMonitorName}",urlParameters:[Kp,Bp,gp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{202:{},204:{},default:{bodyMapper:Ba}},serializer:oP},lP={httpMethod:"POST",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/connectionMonitors/{connectionMonitorName}/stop",urlParameters:[Kp,Bp,gp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{},202:{},default:{bodyMapper:Ba}},serializer:oP},cP={httpMethod:"POST",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/connectionMonitors/{connectionMonitorName}/start",urlParameters:[Kp,Bp,gp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{},202:{},default:{bodyMapper:Ba}},serializer:oP},dP={httpMethod:"POST",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/connectionMonitors/{connectionMonitorName}/query",urlParameters:[Kp,Bp,gp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:Do},202:{bodyMapper:Do},default:{bodyMapper:Ba}},serializer:oP},mP=Object.freeze({OperationListResult:Bs,Operation:rn,OperationDisplay:Xo,OperationPropertiesFormatServiceSpecification:tn,MetricSpecification:Yo,Availability:$o,Dimension:Jo,LogSpecification:en,CloudError:mr}),yP=function(){function e(e){this.client=e}return e.prototype.list=function(e,t){return this.client.sendOperationRequest({options:e},NP,t)},e.prototype.listNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},CP,r)},e}(),PP=new r.Serializer(mP),NP={httpMethod:"GET",path:"providers/Microsoft.Network/operations",queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:Bs},default:{bodyMapper:mr}},serializer:PP},CP={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:Bs},default:{bodyMapper:mr}},serializer:PP},wP=Object.freeze({CloudError:mr,PublicIPAddress:Vr,Resource:Cr,BaseResource:yr,PublicIPAddressSku:Ir,IPConfiguration:xr,SubResource:Pr,Subnet:Br,NetworkSecurityGroup:Gr,SecurityRule:Rr,ApplicationSecurityGroup:wr,NetworkInterface:Ar,InterfaceEndpoint:Sr,EndpointService:fr,NetworkInterfaceIPConfiguration:Wr,VirtualNetworkTap:Dr,NetworkInterfaceTapConfiguration:Nr,FrontendIPConfiguration:Or,ApplicationGatewayBackendAddressPool:Kr,ApplicationGatewayBackendAddress:_r,BackendAddressPool:Hr,InboundNatRule:Ur,NetworkInterfaceDnsSettings:gr,RouteTable:hr,Route:br,ServiceEndpointPropertiesFormat:kr,ServiceEndpointPolicy:vr,ServiceEndpointPolicyDefinition:zr,IPConfigurationProfile:Fr,ResourceNavigationLink:qr,ServiceAssociationLink:Tr,Delegation:Lr,PublicIPAddressDnsSettings:Er,IpTag:Mr,TagsObject:Gi,PublicIPAddressListResult:Os,ApplicationGatewayBackendHttpSettings:Zr,ApplicationGatewayConnectionDraining:jr,ApplicationGatewayIPConfiguration:ti,ApplicationGatewayAuthenticationCertificate:ri,ApplicationGatewayTrustedRootCertificate:ii,ApplicationGatewaySslCertificate:ai,ApplicationGatewayFrontendIPConfiguration:oi,ApplicationGatewayFrontendPort:ni,ApplicationGatewayHttpListener:si,ApplicationGatewayPathRule:pi,ApplicationGatewayProbe:li,ApplicationGatewayProbeHealthResponseMatch:ui,ApplicationGatewayRequestRoutingRule:ci,ApplicationGatewayRedirectConfiguration:di,ApplicationGatewayUrlPathMap:mi,ApplicationGateway:Ci,ApplicationGatewaySku:Yr,ApplicationGatewaySslPolicy:ei,ApplicationGatewayWebApplicationFirewallConfiguration:Pi,ApplicationGatewayFirewallDisabledRuleGroup:yi,ApplicationGatewayAutoscaleConfiguration:Ni,ApplicationGatewayFirewallRuleSet:fi,ApplicationGatewayFirewallRuleGroup:Ri,ApplicationGatewayFirewallRule:wi,ApplicationGatewayAvailableSslOptions:gi,ApplicationGatewaySslPredefinedPolicy:Ai,AzureFirewallIPConfiguration:hi,AzureFirewallApplicationRuleCollection:Ii,AzureFirewallRCAction:ki,AzureFirewallApplicationRule:vi,AzureFirewallApplicationRuleProtocol:zi,AzureFirewallNatRuleCollection:Vi,AzureFirewallNatRCAction:Ei,AzureFirewallNatRule:Mi,AzureFirewallNetworkRuleCollection:Fi,AzureFirewallNetworkRule:xi,AzureFirewall:qi,AzureFirewallFqdnTag:Ti,DdosProtectionPlan:Bi,EndpointServiceResult:Oi,ExpressRouteCircuitAuthorization:Di,RouteFilterRule:Ui,ExpressRouteCircuitConnection:Ki,ExpressRouteCircuitPeering:ji,ExpressRouteCircuitPeeringConfig:Hi,ExpressRouteCircuitStats:Wi,RouteFilter:Zi,Ipv6ExpressRouteCircuitPeeringConfig:Qi,ExpressRouteConnectionId:_i,ExpressRouteCircuit:Ji,ExpressRouteCircuitSku:Xi,ExpressRouteCircuitServiceProviderProperties:$i,ExpressRouteServiceProvider:na,ExpressRouteServiceProviderBandwidthsOffered:oa,ExpressRouteCrossConnectionPeering:la,ExpressRouteCrossConnection:ca,ExpressRouteCircuitReference:ua,ExpressRouteConnection:Na,ExpressRouteCircuitPeeringId:ma,ExpressRouteGateway:Ca,ExpressRouteGatewayPropertiesAutoScaleConfiguration:Pa,ExpressRouteGatewayPropertiesAutoScaleConfigurationBounds:ya,VirtualHubId:da,LoadBalancingRule:Sa,Probe:ga,InboundNatPool:Aa,OutboundRule:Ga,LoadBalancer:ba,LoadBalancerSku:fa,ContainerNetworkInterfaceConfiguration:xa,ContainerNetworkInterface:Ta,Container:Fa,ContainerNetworkInterfaceIpConfiguration:qa,NetworkProfile:La,NetworkWatcher:Oa,ConnectionMonitorResult:Bo,ConnectionMonitorSource:qo,ConnectionMonitorDestination:To,PublicIPPrefix:nn,PublicIPPrefixSku:an,ReferencedPublicIpAddress:on,PatchRouteFilterRule:sn,PatchRouteFilter:pn,BgpServiceCommunity:ln,BGPCommunity:un,VirtualNetworkPeering:yn,AddressSpace:mn,VirtualNetwork:Nn,DhcpOptions:Pn,VirtualNetworkGatewayIPConfiguration:fn,VpnClientRootCertificate:gn,VpnClientRevokedCertificate:An,VirtualNetworkGateway:vn,VirtualNetworkGatewaySku:Sn,VpnClientConfiguration:bn,IpsecPolicy:Gn,BgpSettings:hn,LocalNetworkGateway:xn,VirtualNetworkGatewayConnection:Fn,TunnelConnectionHealth:Vn,ConnectionSharedKey:Tn,VirtualNetworkGatewayConnectionListEntity:On,VirtualNetworkConnectionGatewayReference:Bn,P2SVpnServerConfigVpnClientRootCertificate:Hn,P2SVpnServerConfigVpnClientRevokedCertificate:Un,P2SVpnServerConfigRadiusServerRootCertificate:Wn,P2SVpnServerConfigRadiusClientRootCertificate:_n,P2SVpnServerConfiguration:Kn,VirtualWAN:jn,VpnSite:Qn,DeviceProperties:Zn,HubVirtualNetworkConnection:$n,VirtualHub:es,VirtualHubRouteTable:Yn,VirtualHubRoute:Jn,VpnConnection:ts,VpnGateway:rs,P2SVpnGateway:os,VpnClientConnectionHealth:as}),RP=function(){function e(e){this.client=e}return e.prototype.deleteMethod=function(e,t,r){return this.beginDeleteMethod(e,t,r).then(function(e){return e.pollUntilFinished()})},e.prototype.get=function(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,publicIpAddressName:t,options:r},SP,i)},e.prototype.createOrUpdate=function(e,t,r,i){return this.beginCreateOrUpdate(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.updateTags=function(e,t,r,i){return this.beginUpdateTags(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.listAll=function(e,t){return this.client.sendOperationRequest({options:e},gP,t)},e.prototype.list=function(e,t,r){return this.client.sendOperationRequest({resourceGroupName:e,options:t},AP,r)},e.prototype.listVirtualMachineScaleSetPublicIPAddresses=function(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,virtualMachineScaleSetName:t,options:r},GP,i)},e.prototype.listVirtualMachineScaleSetVMPublicIPAddresses=function(e,t,r,i,a,o,n){return this.client.sendOperationRequest({resourceGroupName:e,virtualMachineScaleSetName:t,virtualmachineIndex:r,networkInterfaceName:i,ipConfigurationName:a,options:o},bP,n)},e.prototype.getVirtualMachineScaleSetPublicIPAddress=function(e,t,r,i,a,o,n,s){return this.client.sendOperationRequest({resourceGroupName:e,virtualMachineScaleSetName:t,virtualmachineIndex:r,networkInterfaceName:i,ipConfigurationName:a,publicIpAddressName:o,options:n},hP,s)},e.prototype.beginDeleteMethod=function(e,t,r){return this.client.sendLRORequest({resourceGroupName:e,publicIpAddressName:t,options:r},kP,r)},e.prototype.beginCreateOrUpdate=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,publicIpAddressName:t,parameters:r,options:i},zP,i)},e.prototype.beginUpdateTags=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,publicIpAddressName:t,parameters:r,options:i},vP,i)},e.prototype.listAllNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},IP,r)},e.prototype.listNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},EP,r)},e.prototype.listVirtualMachineScaleSetPublicIPAddressesNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},MP,r)},e.prototype.listVirtualMachineScaleSetVMPublicIPAddressesNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},VP,r)},e}(),fP=new r.Serializer(wP),SP={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPAddresses/{publicIpAddressName}",urlParameters:[Kp,Wp,tu],queryParameters:[Pp,kp],headerParameters:[yp],responses:{200:{bodyMapper:Vr},default:{bodyMapper:mr}},serializer:fP},gP={httpMethod:"GET",path:"subscriptions/{subscriptionId}/providers/Microsoft.Network/publicIPAddresses",urlParameters:[tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:Os},default:{bodyMapper:mr}},serializer:fP},AP={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPAddresses",urlParameters:[Kp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:Os},default:{bodyMapper:mr}},serializer:fP},GP={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{virtualMachineScaleSetName}/publicipaddresses",urlParameters:[Kp,nu,tu],queryParameters:[Np],headerParameters:[yp],responses:{200:{bodyMapper:Os},default:{bodyMapper:mr}},serializer:fP},bP={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{virtualMachineScaleSetName}/virtualMachines/{virtualmachineIndex}/networkInterfaces/{networkInterfaceName}/ipconfigurations/{ipConfigurationName}/publicipaddresses",urlParameters:[Kp,nu,ou,qp,Mp,tu],queryParameters:[Np],headerParameters:[yp],responses:{200:{bodyMapper:Os},default:{bodyMapper:mr}},serializer:fP},hP={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{virtualMachineScaleSetName}/virtualMachines/{virtualmachineIndex}/networkInterfaces/{networkInterfaceName}/ipconfigurations/{ipConfigurationName}/publicipaddresses/{publicIpAddressName}",urlParameters:[Kp,nu,ou,qp,Mp,Wp,tu],queryParameters:[Np,kp],headerParameters:[yp],responses:{200:{bodyMapper:Vr},default:{bodyMapper:mr}},serializer:fP},kP={httpMethod:"DELETE",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPAddresses/{publicIpAddressName}",urlParameters:[Kp,Wp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{},202:{},204:{},default:{bodyMapper:mr}},serializer:fP},zP={httpMethod:"PUT",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPAddresses/{publicIpAddressName}",urlParameters:[Kp,Wp,tu],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"parameters",mapper:cr({},Vr,{required:!0})},responses:{200:{bodyMapper:Vr},201:{bodyMapper:Vr},default:{bodyMapper:mr}},serializer:fP},vP={httpMethod:"PATCH",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPAddresses/{publicIpAddressName}",urlParameters:[Kp,Wp,tu],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"parameters",mapper:cr({},Gi,{required:!0})},responses:{200:{bodyMapper:Vr},default:{bodyMapper:mr}},serializer:fP},IP={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:Os},default:{bodyMapper:mr}},serializer:fP},EP={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:Os},default:{bodyMapper:mr}},serializer:fP},MP={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:Os},default:{bodyMapper:mr}},serializer:fP},VP={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:Os},default:{bodyMapper:mr}},serializer:fP},xP=Object.freeze({CloudError:mr,PublicIPPrefix:nn,Resource:Cr,BaseResource:yr,PublicIPPrefixSku:an,IpTag:Mr,ReferencedPublicIpAddress:on,TagsObject:Gi,PublicIPPrefixListResult:Ds,SubResource:Pr,ApplicationSecurityGroup:wr,SecurityRule:Rr,InterfaceEndpoint:Sr,EndpointService:fr,Subnet:Br,NetworkSecurityGroup:Gr,NetworkInterface:Ar,NetworkInterfaceIPConfiguration:Wr,VirtualNetworkTap:Dr,NetworkInterfaceTapConfiguration:Nr,FrontendIPConfiguration:Or,PublicIPAddress:Vr,PublicIPAddressSku:Ir,IPConfiguration:xr,PublicIPAddressDnsSettings:Er,ApplicationGatewayBackendAddressPool:Kr,ApplicationGatewayBackendAddress:_r,BackendAddressPool:Hr,InboundNatRule:Ur,NetworkInterfaceDnsSettings:gr,RouteTable:hr,Route:br,ServiceEndpointPropertiesFormat:kr,ServiceEndpointPolicy:vr,ServiceEndpointPolicyDefinition:zr,IPConfigurationProfile:Fr,ResourceNavigationLink:qr,ServiceAssociationLink:Tr,Delegation:Lr,ApplicationGatewayBackendHttpSettings:Zr,ApplicationGatewayConnectionDraining:jr,ApplicationGatewayIPConfiguration:ti,ApplicationGatewayAuthenticationCertificate:ri,ApplicationGatewayTrustedRootCertificate:ii,ApplicationGatewaySslCertificate:ai,ApplicationGatewayFrontendIPConfiguration:oi,ApplicationGatewayFrontendPort:ni,ApplicationGatewayHttpListener:si,ApplicationGatewayPathRule:pi,ApplicationGatewayProbe:li,ApplicationGatewayProbeHealthResponseMatch:ui,ApplicationGatewayRequestRoutingRule:ci,ApplicationGatewayRedirectConfiguration:di,ApplicationGatewayUrlPathMap:mi,ApplicationGateway:Ci,ApplicationGatewaySku:Yr,ApplicationGatewaySslPolicy:ei,ApplicationGatewayWebApplicationFirewallConfiguration:Pi,ApplicationGatewayFirewallDisabledRuleGroup:yi,ApplicationGatewayAutoscaleConfiguration:Ni,ApplicationGatewayFirewallRuleSet:fi,ApplicationGatewayFirewallRuleGroup:Ri,ApplicationGatewayFirewallRule:wi,ApplicationGatewayAvailableSslOptions:gi,ApplicationGatewaySslPredefinedPolicy:Ai,AzureFirewallIPConfiguration:hi,AzureFirewallApplicationRuleCollection:Ii,AzureFirewallRCAction:ki,AzureFirewallApplicationRule:vi,AzureFirewallApplicationRuleProtocol:zi,AzureFirewallNatRuleCollection:Vi,AzureFirewallNatRCAction:Ei,AzureFirewallNatRule:Mi,AzureFirewallNetworkRuleCollection:Fi,AzureFirewallNetworkRule:xi,AzureFirewall:qi,AzureFirewallFqdnTag:Ti,DdosProtectionPlan:Bi,EndpointServiceResult:Oi,ExpressRouteCircuitAuthorization:Di,RouteFilterRule:Ui,ExpressRouteCircuitConnection:Ki,ExpressRouteCircuitPeering:ji,ExpressRouteCircuitPeeringConfig:Hi,ExpressRouteCircuitStats:Wi,RouteFilter:Zi,Ipv6ExpressRouteCircuitPeeringConfig:Qi,ExpressRouteConnectionId:_i,ExpressRouteCircuit:Ji,ExpressRouteCircuitSku:Xi,ExpressRouteCircuitServiceProviderProperties:$i,ExpressRouteServiceProvider:na,ExpressRouteServiceProviderBandwidthsOffered:oa,ExpressRouteCrossConnectionPeering:la,ExpressRouteCrossConnection:ca,ExpressRouteCircuitReference:ua,ExpressRouteConnection:Na,ExpressRouteCircuitPeeringId:ma,ExpressRouteGateway:Ca,ExpressRouteGatewayPropertiesAutoScaleConfiguration:Pa,ExpressRouteGatewayPropertiesAutoScaleConfigurationBounds:ya,VirtualHubId:da,LoadBalancingRule:Sa,Probe:ga,InboundNatPool:Aa,OutboundRule:Ga,LoadBalancer:ba,LoadBalancerSku:fa,ContainerNetworkInterfaceConfiguration:xa,ContainerNetworkInterface:Ta,Container:Fa,ContainerNetworkInterfaceIpConfiguration:qa,NetworkProfile:La,NetworkWatcher:Oa,ConnectionMonitorResult:Bo,ConnectionMonitorSource:qo,ConnectionMonitorDestination:To,PatchRouteFilterRule:sn,PatchRouteFilter:pn,BgpServiceCommunity:ln,BGPCommunity:un,VirtualNetworkPeering:yn,AddressSpace:mn,VirtualNetwork:Nn,DhcpOptions:Pn,VirtualNetworkGatewayIPConfiguration:fn,VpnClientRootCertificate:gn,VpnClientRevokedCertificate:An,VirtualNetworkGateway:vn,VirtualNetworkGatewaySku:Sn,VpnClientConfiguration:bn,IpsecPolicy:Gn,BgpSettings:hn,LocalNetworkGateway:xn,VirtualNetworkGatewayConnection:Fn,TunnelConnectionHealth:Vn,ConnectionSharedKey:Tn,VirtualNetworkGatewayConnectionListEntity:On,VirtualNetworkConnectionGatewayReference:Bn,P2SVpnServerConfigVpnClientRootCertificate:Hn,P2SVpnServerConfigVpnClientRevokedCertificate:Un,P2SVpnServerConfigRadiusServerRootCertificate:Wn,P2SVpnServerConfigRadiusClientRootCertificate:_n,P2SVpnServerConfiguration:Kn,VirtualWAN:jn,VpnSite:Qn,DeviceProperties:Zn,HubVirtualNetworkConnection:$n,VirtualHub:es,VirtualHubRouteTable:Yn,VirtualHubRoute:Jn,VpnConnection:ts,VpnGateway:rs,P2SVpnGateway:os,VpnClientConnectionHealth:as}),FP=function(){function e(e){this.client=e}return e.prototype.deleteMethod=function(e,t,r){return this.beginDeleteMethod(e,t,r).then(function(e){return e.pollUntilFinished()})},e.prototype.get=function(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,publicIpPrefixName:t,options:r},TP,i)},e.prototype.createOrUpdate=function(e,t,r,i){return this.beginCreateOrUpdate(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.updateTags=function(e,t,r,i){return this.beginUpdateTags(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.listAll=function(e,t){return this.client.sendOperationRequest({options:e},LP,t)},e.prototype.list=function(e,t,r){return this.client.sendOperationRequest({resourceGroupName:e,options:t},BP,r)},e.prototype.beginDeleteMethod=function(e,t,r){return this.client.sendLRORequest({resourceGroupName:e,publicIpPrefixName:t,options:r},OP,r)},e.prototype.beginCreateOrUpdate=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,publicIpPrefixName:t,parameters:r,options:i},DP,i)},e.prototype.beginUpdateTags=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,publicIpPrefixName:t,parameters:r,options:i},HP,i)},e.prototype.listAllNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},UP,r)},e.prototype.listNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},WP,r)},e}(),qP=new r.Serializer(xP),TP={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIpPrefixName}",urlParameters:[Kp,_p,tu],queryParameters:[Pp,kp],headerParameters:[yp],responses:{200:{bodyMapper:nn},default:{bodyMapper:mr}},serializer:qP},LP={httpMethod:"GET",path:"subscriptions/{subscriptionId}/providers/Microsoft.Network/publicIPPrefixes",urlParameters:[tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:Ds},default:{bodyMapper:mr}},serializer:qP},BP={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes",urlParameters:[Kp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:Ds},default:{bodyMapper:mr}},serializer:qP},OP={httpMethod:"DELETE",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIpPrefixName}",urlParameters:[Kp,_p,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{},202:{},204:{},default:{bodyMapper:mr}},serializer:qP},DP={httpMethod:"PUT",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIpPrefixName}",urlParameters:[Kp,_p,tu],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"parameters",mapper:cr({},nn,{required:!0})},responses:{200:{bodyMapper:nn},201:{bodyMapper:nn},default:{bodyMapper:mr}},serializer:qP},HP={httpMethod:"PATCH",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIpPrefixName}",urlParameters:[Kp,_p,tu],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"parameters",mapper:cr({},Gi,{required:!0})},responses:{200:{bodyMapper:nn},default:{bodyMapper:mr}},serializer:qP},UP={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:Ds},default:{bodyMapper:mr}},serializer:qP},WP={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:Ds},default:{bodyMapper:mr}},serializer:qP},_P=Object.freeze({CloudError:mr,RouteFilter:Zi,Resource:Cr,BaseResource:yr,RouteFilterRule:Ui,SubResource:Pr,ExpressRouteCircuitPeering:ji,ExpressRouteCircuitPeeringConfig:Hi,ExpressRouteCircuitStats:Wi,Ipv6ExpressRouteCircuitPeeringConfig:Qi,ExpressRouteConnectionId:_i,ExpressRouteCircuitConnection:Ki,PatchRouteFilter:pn,RouteFilterListResult:Hs,NetworkInterfaceTapConfiguration:Nr,VirtualNetworkTap:Dr,NetworkInterfaceIPConfiguration:Wr,ApplicationGatewayBackendAddressPool:Kr,ApplicationGatewayBackendAddress:_r,BackendAddressPool:Hr,InboundNatRule:Ur,Subnet:Br,NetworkSecurityGroup:Gr,SecurityRule:Rr,ApplicationSecurityGroup:wr,NetworkInterface:Ar,InterfaceEndpoint:Sr,EndpointService:fr,NetworkInterfaceDnsSettings:gr,RouteTable:hr,Route:br,ServiceEndpointPropertiesFormat:kr,ServiceEndpointPolicy:vr,ServiceEndpointPolicyDefinition:zr,IPConfiguration:xr,PublicIPAddress:Vr,PublicIPAddressSku:Ir,PublicIPAddressDnsSettings:Er,IpTag:Mr,IPConfigurationProfile:Fr,ResourceNavigationLink:qr,ServiceAssociationLink:Tr,Delegation:Lr,FrontendIPConfiguration:Or,ApplicationGatewayBackendHttpSettings:Zr,ApplicationGatewayConnectionDraining:jr,ApplicationGatewayIPConfiguration:ti,ApplicationGatewayAuthenticationCertificate:ri,ApplicationGatewayTrustedRootCertificate:ii,ApplicationGatewaySslCertificate:ai,ApplicationGatewayFrontendIPConfiguration:oi,ApplicationGatewayFrontendPort:ni,ApplicationGatewayHttpListener:si,ApplicationGatewayPathRule:pi,ApplicationGatewayProbe:li,ApplicationGatewayProbeHealthResponseMatch:ui,ApplicationGatewayRequestRoutingRule:ci,ApplicationGatewayRedirectConfiguration:di,ApplicationGatewayUrlPathMap:mi,ApplicationGateway:Ci,ApplicationGatewaySku:Yr,ApplicationGatewaySslPolicy:ei,ApplicationGatewayWebApplicationFirewallConfiguration:Pi,ApplicationGatewayFirewallDisabledRuleGroup:yi,ApplicationGatewayAutoscaleConfiguration:Ni,ApplicationGatewayFirewallRuleSet:fi,ApplicationGatewayFirewallRuleGroup:Ri,ApplicationGatewayFirewallRule:wi,ApplicationGatewayAvailableSslOptions:gi,ApplicationGatewaySslPredefinedPolicy:Ai,AzureFirewallIPConfiguration:hi,AzureFirewallApplicationRuleCollection:Ii,AzureFirewallRCAction:ki,AzureFirewallApplicationRule:vi,AzureFirewallApplicationRuleProtocol:zi,AzureFirewallNatRuleCollection:Vi,AzureFirewallNatRCAction:Ei,AzureFirewallNatRule:Mi,AzureFirewallNetworkRuleCollection:Fi,AzureFirewallNetworkRule:xi,AzureFirewall:qi,AzureFirewallFqdnTag:Ti,DdosProtectionPlan:Bi,EndpointServiceResult:Oi,ExpressRouteCircuitAuthorization:Di,ExpressRouteCircuit:Ji,ExpressRouteCircuitSku:Xi,ExpressRouteCircuitServiceProviderProperties:$i,ExpressRouteServiceProvider:na,ExpressRouteServiceProviderBandwidthsOffered:oa,ExpressRouteCrossConnectionPeering:la,ExpressRouteCrossConnection:ca,ExpressRouteCircuitReference:ua,ExpressRouteConnection:Na,ExpressRouteCircuitPeeringId:ma,ExpressRouteGateway:Ca,ExpressRouteGatewayPropertiesAutoScaleConfiguration:Pa,ExpressRouteGatewayPropertiesAutoScaleConfigurationBounds:ya,VirtualHubId:da,LoadBalancingRule:Sa,Probe:ga,InboundNatPool:Aa,OutboundRule:Ga,LoadBalancer:ba,LoadBalancerSku:fa,ContainerNetworkInterfaceConfiguration:xa,ContainerNetworkInterface:Ta,Container:Fa,ContainerNetworkInterfaceIpConfiguration:qa,NetworkProfile:La,NetworkWatcher:Oa,ConnectionMonitorResult:Bo,ConnectionMonitorSource:qo,ConnectionMonitorDestination:To,PublicIPPrefix:nn,PublicIPPrefixSku:an,ReferencedPublicIpAddress:on,PatchRouteFilterRule:sn,BgpServiceCommunity:ln,BGPCommunity:un,VirtualNetworkPeering:yn,AddressSpace:mn,VirtualNetwork:Nn,DhcpOptions:Pn,VirtualNetworkGatewayIPConfiguration:fn,VpnClientRootCertificate:gn,VpnClientRevokedCertificate:An,VirtualNetworkGateway:vn,VirtualNetworkGatewaySku:Sn,VpnClientConfiguration:bn,IpsecPolicy:Gn,BgpSettings:hn,LocalNetworkGateway:xn,VirtualNetworkGatewayConnection:Fn,TunnelConnectionHealth:Vn,ConnectionSharedKey:Tn,VirtualNetworkGatewayConnectionListEntity:On,VirtualNetworkConnectionGatewayReference:Bn,P2SVpnServerConfigVpnClientRootCertificate:Hn,P2SVpnServerConfigVpnClientRevokedCertificate:Un,P2SVpnServerConfigRadiusServerRootCertificate:Wn,P2SVpnServerConfigRadiusClientRootCertificate:_n,P2SVpnServerConfiguration:Kn,VirtualWAN:jn,VpnSite:Qn,DeviceProperties:Zn,HubVirtualNetworkConnection:$n,VirtualHub:es,VirtualHubRouteTable:Yn,VirtualHubRoute:Jn,VpnConnection:ts,VpnGateway:rs,P2SVpnGateway:os,VpnClientConnectionHealth:as}),KP=function(){function e(e){this.client=e}return e.prototype.deleteMethod=function(e,t,r){return this.beginDeleteMethod(e,t,r).then(function(e){return e.pollUntilFinished()})},e.prototype.get=function(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,routeFilterName:t,options:r},ZP,i)},e.prototype.createOrUpdate=function(e,t,r,i){return this.beginCreateOrUpdate(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.update=function(e,t,r,i){return this.beginUpdate(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.listByResourceGroup=function(e,t,r){return this.client.sendOperationRequest({resourceGroupName:e,options:t},QP,r)},e.prototype.list=function(e,t){return this.client.sendOperationRequest({options:e},XP,t)},e.prototype.beginDeleteMethod=function(e,t,r){return this.client.sendLRORequest({resourceGroupName:e,routeFilterName:t,options:r},$P,r)},e.prototype.beginCreateOrUpdate=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,routeFilterName:t,routeFilterParameters:r,options:i},JP,i)},e.prototype.beginUpdate=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,routeFilterName:t,routeFilterParameters:r,options:i},YP,i)},e.prototype.listByResourceGroupNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},eN,r)},e.prototype.listNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},tN,r)},e}(),jP=new r.Serializer(_P),ZP={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}",urlParameters:[Kp,jp,tu],queryParameters:[Pp,kp],headerParameters:[yp],responses:{200:{bodyMapper:Zi},default:{bodyMapper:mr}},serializer:jP},QP={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters",urlParameters:[Kp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:Hs},default:{bodyMapper:mr}},serializer:jP},XP={httpMethod:"GET",path:"subscriptions/{subscriptionId}/providers/Microsoft.Network/routeFilters",urlParameters:[tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:Hs},default:{bodyMapper:mr}},serializer:jP},$P={httpMethod:"DELETE",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}",urlParameters:[Kp,jp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{},202:{},204:{},default:{bodyMapper:mr}},serializer:jP},JP={httpMethod:"PUT",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}",urlParameters:[Kp,jp,tu],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"routeFilterParameters",mapper:cr({},Zi,{required:!0})},responses:{200:{bodyMapper:Zi},201:{bodyMapper:Zi},default:{bodyMapper:mr}},serializer:jP},YP={httpMethod:"PATCH",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}",urlParameters:[Kp,jp,tu],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"routeFilterParameters",mapper:cr({},pn,{required:!0})},responses:{200:{bodyMapper:Zi},default:{bodyMapper:mr}},serializer:jP},eN={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:Hs},default:{bodyMapper:mr}},serializer:jP},tN={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:Hs},default:{bodyMapper:mr}},serializer:jP},rN=Object.freeze({CloudError:mr,RouteFilterRule:Ui,SubResource:Pr,BaseResource:yr,PatchRouteFilterRule:sn,RouteFilterRuleListResult:Us,NetworkInterfaceTapConfiguration:Nr,VirtualNetworkTap:Dr,Resource:Cr,NetworkInterfaceIPConfiguration:Wr,ApplicationGatewayBackendAddressPool:Kr,ApplicationGatewayBackendAddress:_r,BackendAddressPool:Hr,InboundNatRule:Ur,Subnet:Br,NetworkSecurityGroup:Gr,SecurityRule:Rr,ApplicationSecurityGroup:wr,NetworkInterface:Ar,InterfaceEndpoint:Sr,EndpointService:fr,NetworkInterfaceDnsSettings:gr,RouteTable:hr,Route:br,ServiceEndpointPropertiesFormat:kr,ServiceEndpointPolicy:vr,ServiceEndpointPolicyDefinition:zr,IPConfiguration:xr,PublicIPAddress:Vr,PublicIPAddressSku:Ir,PublicIPAddressDnsSettings:Er,IpTag:Mr,IPConfigurationProfile:Fr,ResourceNavigationLink:qr,ServiceAssociationLink:Tr,Delegation:Lr,FrontendIPConfiguration:Or,ApplicationGatewayBackendHttpSettings:Zr,ApplicationGatewayConnectionDraining:jr,ApplicationGatewayIPConfiguration:ti,ApplicationGatewayAuthenticationCertificate:ri,ApplicationGatewayTrustedRootCertificate:ii,ApplicationGatewaySslCertificate:ai,ApplicationGatewayFrontendIPConfiguration:oi,ApplicationGatewayFrontendPort:ni,ApplicationGatewayHttpListener:si,ApplicationGatewayPathRule:pi,ApplicationGatewayProbe:li,ApplicationGatewayProbeHealthResponseMatch:ui,ApplicationGatewayRequestRoutingRule:ci,ApplicationGatewayRedirectConfiguration:di,ApplicationGatewayUrlPathMap:mi,ApplicationGateway:Ci,ApplicationGatewaySku:Yr,ApplicationGatewaySslPolicy:ei,ApplicationGatewayWebApplicationFirewallConfiguration:Pi,ApplicationGatewayFirewallDisabledRuleGroup:yi,ApplicationGatewayAutoscaleConfiguration:Ni,ApplicationGatewayFirewallRuleSet:fi,ApplicationGatewayFirewallRuleGroup:Ri,ApplicationGatewayFirewallRule:wi,ApplicationGatewayAvailableSslOptions:gi,ApplicationGatewaySslPredefinedPolicy:Ai,AzureFirewallIPConfiguration:hi,AzureFirewallApplicationRuleCollection:Ii,AzureFirewallRCAction:ki,AzureFirewallApplicationRule:vi,AzureFirewallApplicationRuleProtocol:zi,AzureFirewallNatRuleCollection:Vi,AzureFirewallNatRCAction:Ei,AzureFirewallNatRule:Mi,AzureFirewallNetworkRuleCollection:Fi,AzureFirewallNetworkRule:xi,AzureFirewall:qi,AzureFirewallFqdnTag:Ti,DdosProtectionPlan:Bi,EndpointServiceResult:Oi,ExpressRouteCircuitAuthorization:Di,ExpressRouteCircuitConnection:Ki,ExpressRouteCircuitPeering:ji,ExpressRouteCircuitPeeringConfig:Hi,ExpressRouteCircuitStats:Wi,RouteFilter:Zi,Ipv6ExpressRouteCircuitPeeringConfig:Qi,ExpressRouteConnectionId:_i,ExpressRouteCircuit:Ji,ExpressRouteCircuitSku:Xi,ExpressRouteCircuitServiceProviderProperties:$i,ExpressRouteServiceProvider:na,ExpressRouteServiceProviderBandwidthsOffered:oa,ExpressRouteCrossConnectionPeering:la,ExpressRouteCrossConnection:ca,ExpressRouteCircuitReference:ua,ExpressRouteConnection:Na,ExpressRouteCircuitPeeringId:ma,ExpressRouteGateway:Ca,ExpressRouteGatewayPropertiesAutoScaleConfiguration:Pa,ExpressRouteGatewayPropertiesAutoScaleConfigurationBounds:ya,VirtualHubId:da,LoadBalancingRule:Sa,Probe:ga,InboundNatPool:Aa,OutboundRule:Ga,LoadBalancer:ba,LoadBalancerSku:fa,ContainerNetworkInterfaceConfiguration:xa,ContainerNetworkInterface:Ta,Container:Fa,ContainerNetworkInterfaceIpConfiguration:qa,NetworkProfile:La,NetworkWatcher:Oa,ConnectionMonitorResult:Bo,ConnectionMonitorSource:qo,ConnectionMonitorDestination:To,PublicIPPrefix:nn,PublicIPPrefixSku:an,ReferencedPublicIpAddress:on,PatchRouteFilter:pn,BgpServiceCommunity:ln,BGPCommunity:un,VirtualNetworkPeering:yn,AddressSpace:mn,VirtualNetwork:Nn,DhcpOptions:Pn,VirtualNetworkGatewayIPConfiguration:fn,VpnClientRootCertificate:gn,VpnClientRevokedCertificate:An,VirtualNetworkGateway:vn,VirtualNetworkGatewaySku:Sn,VpnClientConfiguration:bn,IpsecPolicy:Gn,BgpSettings:hn,LocalNetworkGateway:xn,VirtualNetworkGatewayConnection:Fn,TunnelConnectionHealth:Vn,ConnectionSharedKey:Tn,VirtualNetworkGatewayConnectionListEntity:On,VirtualNetworkConnectionGatewayReference:Bn,P2SVpnServerConfigVpnClientRootCertificate:Hn,P2SVpnServerConfigVpnClientRevokedCertificate:Un,P2SVpnServerConfigRadiusServerRootCertificate:Wn,P2SVpnServerConfigRadiusClientRootCertificate:_n,P2SVpnServerConfiguration:Kn,VirtualWAN:jn,VpnSite:Qn,DeviceProperties:Zn,HubVirtualNetworkConnection:$n,VirtualHub:es,VirtualHubRouteTable:Yn,VirtualHubRoute:Jn,VpnConnection:ts,VpnGateway:rs,P2SVpnGateway:os,VpnClientConnectionHealth:as}),iN=function(){function e(e){this.client=e}return e.prototype.deleteMethod=function(e,t,r,i){return this.beginDeleteMethod(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.get=function(e,t,r,i,a){return this.client.sendOperationRequest({resourceGroupName:e,routeFilterName:t,ruleName:r,options:i},oN,a)},e.prototype.createOrUpdate=function(e,t,r,i,a){return this.beginCreateOrUpdate(e,t,r,i,a).then(function(e){return e.pollUntilFinished()})},e.prototype.update=function(e,t,r,i,a){return this.beginUpdate(e,t,r,i,a).then(function(e){return e.pollUntilFinished()})},e.prototype.listByRouteFilter=function(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,routeFilterName:t,options:r},nN,i)},e.prototype.beginDeleteMethod=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,routeFilterName:t,ruleName:r,options:i},sN,i)},e.prototype.beginCreateOrUpdate=function(e,t,r,i,a){return this.client.sendLRORequest({resourceGroupName:e,routeFilterName:t,ruleName:r,routeFilterRuleParameters:i,options:a},pN,a)},e.prototype.beginUpdate=function(e,t,r,i,a){return this.client.sendLRORequest({resourceGroupName:e,routeFilterName:t,ruleName:r,routeFilterRuleParameters:i,options:a},uN,a)},e.prototype.listByRouteFilterNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},lN,r)},e}(),aN=new r.Serializer(rN),oN={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}/routeFilterRules/{ruleName}",urlParameters:[Kp,jp,Xp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:Ui},default:{bodyMapper:mr}},serializer:aN},nN={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}/routeFilterRules",urlParameters:[Kp,jp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:Us},default:{bodyMapper:mr}},serializer:aN},sN={httpMethod:"DELETE",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}/routeFilterRules/{ruleName}",urlParameters:[Kp,jp,Xp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{},202:{},204:{},default:{bodyMapper:mr}},serializer:aN},pN={httpMethod:"PUT",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}/routeFilterRules/{ruleName}",urlParameters:[Kp,jp,Xp,tu],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"routeFilterRuleParameters",mapper:cr({},Ui,{required:!0})},responses:{200:{bodyMapper:Ui},201:{bodyMapper:Ui},default:{bodyMapper:mr}},serializer:aN},uN={httpMethod:"PATCH",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}/routeFilterRules/{ruleName}",urlParameters:[Kp,jp,Xp,tu],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"routeFilterRuleParameters",mapper:cr({},sn,{required:!0})},responses:{200:{bodyMapper:Ui},default:{bodyMapper:mr}},serializer:aN},lN={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:Us},default:{bodyMapper:mr}},serializer:aN},cN=Object.freeze({CloudError:mr,RouteTable:hr,Resource:Cr,BaseResource:yr,Route:br,SubResource:Pr,Subnet:Br,NetworkSecurityGroup:Gr,SecurityRule:Rr,ApplicationSecurityGroup:wr,NetworkInterface:Ar,InterfaceEndpoint:Sr,EndpointService:fr,NetworkInterfaceIPConfiguration:Wr,VirtualNetworkTap:Dr,NetworkInterfaceTapConfiguration:Nr,FrontendIPConfiguration:Or,PublicIPAddress:Vr,PublicIPAddressSku:Ir,IPConfiguration:xr,PublicIPAddressDnsSettings:Er,IpTag:Mr,ApplicationGatewayBackendAddressPool:Kr,ApplicationGatewayBackendAddress:_r,BackendAddressPool:Hr,InboundNatRule:Ur,NetworkInterfaceDnsSettings:gr,ServiceEndpointPropertiesFormat:kr,ServiceEndpointPolicy:vr,ServiceEndpointPolicyDefinition:zr,IPConfigurationProfile:Fr,ResourceNavigationLink:qr,ServiceAssociationLink:Tr,Delegation:Lr,TagsObject:Gi,RouteTableListResult:Ws,ApplicationGatewayBackendHttpSettings:Zr,ApplicationGatewayConnectionDraining:jr,ApplicationGatewayIPConfiguration:ti,ApplicationGatewayAuthenticationCertificate:ri,ApplicationGatewayTrustedRootCertificate:ii,ApplicationGatewaySslCertificate:ai,ApplicationGatewayFrontendIPConfiguration:oi,ApplicationGatewayFrontendPort:ni,ApplicationGatewayHttpListener:si,ApplicationGatewayPathRule:pi,ApplicationGatewayProbe:li,ApplicationGatewayProbeHealthResponseMatch:ui,ApplicationGatewayRequestRoutingRule:ci,ApplicationGatewayRedirectConfiguration:di,ApplicationGatewayUrlPathMap:mi,ApplicationGateway:Ci,ApplicationGatewaySku:Yr,ApplicationGatewaySslPolicy:ei,ApplicationGatewayWebApplicationFirewallConfiguration:Pi,ApplicationGatewayFirewallDisabledRuleGroup:yi,ApplicationGatewayAutoscaleConfiguration:Ni,ApplicationGatewayFirewallRuleSet:fi,ApplicationGatewayFirewallRuleGroup:Ri,ApplicationGatewayFirewallRule:wi,ApplicationGatewayAvailableSslOptions:gi,ApplicationGatewaySslPredefinedPolicy:Ai,AzureFirewallIPConfiguration:hi,AzureFirewallApplicationRuleCollection:Ii,AzureFirewallRCAction:ki,AzureFirewallApplicationRule:vi,AzureFirewallApplicationRuleProtocol:zi,AzureFirewallNatRuleCollection:Vi,AzureFirewallNatRCAction:Ei,AzureFirewallNatRule:Mi,AzureFirewallNetworkRuleCollection:Fi,AzureFirewallNetworkRule:xi,AzureFirewall:qi,AzureFirewallFqdnTag:Ti,DdosProtectionPlan:Bi,EndpointServiceResult:Oi,ExpressRouteCircuitAuthorization:Di,RouteFilterRule:Ui,ExpressRouteCircuitConnection:Ki,ExpressRouteCircuitPeering:ji,ExpressRouteCircuitPeeringConfig:Hi,ExpressRouteCircuitStats:Wi,RouteFilter:Zi,Ipv6ExpressRouteCircuitPeeringConfig:Qi,ExpressRouteConnectionId:_i,ExpressRouteCircuit:Ji,ExpressRouteCircuitSku:Xi,ExpressRouteCircuitServiceProviderProperties:$i,ExpressRouteServiceProvider:na,ExpressRouteServiceProviderBandwidthsOffered:oa,ExpressRouteCrossConnectionPeering:la,ExpressRouteCrossConnection:ca,ExpressRouteCircuitReference:ua,ExpressRouteConnection:Na,ExpressRouteCircuitPeeringId:ma,ExpressRouteGateway:Ca,ExpressRouteGatewayPropertiesAutoScaleConfiguration:Pa,ExpressRouteGatewayPropertiesAutoScaleConfigurationBounds:ya,VirtualHubId:da,LoadBalancingRule:Sa,Probe:ga,InboundNatPool:Aa,OutboundRule:Ga,LoadBalancer:ba,LoadBalancerSku:fa,ContainerNetworkInterfaceConfiguration:xa,ContainerNetworkInterface:Ta,Container:Fa,ContainerNetworkInterfaceIpConfiguration:qa,NetworkProfile:La,NetworkWatcher:Oa,ConnectionMonitorResult:Bo,ConnectionMonitorSource:qo,ConnectionMonitorDestination:To,PublicIPPrefix:nn,PublicIPPrefixSku:an,ReferencedPublicIpAddress:on,PatchRouteFilterRule:sn,PatchRouteFilter:pn,BgpServiceCommunity:ln,BGPCommunity:un,VirtualNetworkPeering:yn,AddressSpace:mn,VirtualNetwork:Nn,DhcpOptions:Pn,VirtualNetworkGatewayIPConfiguration:fn,VpnClientRootCertificate:gn,VpnClientRevokedCertificate:An,VirtualNetworkGateway:vn,VirtualNetworkGatewaySku:Sn,VpnClientConfiguration:bn,IpsecPolicy:Gn,BgpSettings:hn,LocalNetworkGateway:xn,VirtualNetworkGatewayConnection:Fn,TunnelConnectionHealth:Vn,ConnectionSharedKey:Tn,VirtualNetworkGatewayConnectionListEntity:On,VirtualNetworkConnectionGatewayReference:Bn,P2SVpnServerConfigVpnClientRootCertificate:Hn,P2SVpnServerConfigVpnClientRevokedCertificate:Un,P2SVpnServerConfigRadiusServerRootCertificate:Wn,P2SVpnServerConfigRadiusClientRootCertificate:_n,P2SVpnServerConfiguration:Kn,VirtualWAN:jn,VpnSite:Qn,DeviceProperties:Zn,HubVirtualNetworkConnection:$n,VirtualHub:es,VirtualHubRouteTable:Yn,VirtualHubRoute:Jn,VpnConnection:ts,VpnGateway:rs,P2SVpnGateway:os,VpnClientConnectionHealth:as}),dN=function(){function e(e){this.client=e}return e.prototype.deleteMethod=function(e,t,r){return this.beginDeleteMethod(e,t,r).then(function(e){return e.pollUntilFinished()})},e.prototype.get=function(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,routeTableName:t,options:r},yN,i)},e.prototype.createOrUpdate=function(e,t,r,i){return this.beginCreateOrUpdate(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.updateTags=function(e,t,r,i){return this.beginUpdateTags(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.list=function(e,t,r){return this.client.sendOperationRequest({resourceGroupName:e,options:t},PN,r)},e.prototype.listAll=function(e,t){return this.client.sendOperationRequest({options:e},NN,t)},e.prototype.beginDeleteMethod=function(e,t,r){return this.client.sendLRORequest({resourceGroupName:e,routeTableName:t,options:r},CN,r)},e.prototype.beginCreateOrUpdate=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,routeTableName:t,parameters:r,options:i},wN,i)},e.prototype.beginUpdateTags=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,routeTableName:t,parameters:r,options:i},RN,i)},e.prototype.listNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},fN,r)},e.prototype.listAllNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},SN,r)},e}(),mN=new r.Serializer(cN),yN={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}",urlParameters:[Kp,Qp,tu],queryParameters:[Pp,kp],headerParameters:[yp],responses:{200:{bodyMapper:hr},default:{bodyMapper:mr}},serializer:mN},PN={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables",urlParameters:[Kp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:Ws},default:{bodyMapper:mr}},serializer:mN},NN={httpMethod:"GET",path:"subscriptions/{subscriptionId}/providers/Microsoft.Network/routeTables",urlParameters:[tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:Ws},default:{bodyMapper:mr}},serializer:mN},CN={httpMethod:"DELETE",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}",urlParameters:[Kp,Qp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{},202:{},204:{},default:{bodyMapper:mr}},serializer:mN},wN={httpMethod:"PUT",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}",urlParameters:[Kp,Qp,tu],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"parameters",mapper:cr({},hr,{required:!0})},responses:{200:{bodyMapper:hr},201:{bodyMapper:hr},default:{bodyMapper:mr}},serializer:mN},RN={httpMethod:"PATCH",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}",urlParameters:[Kp,Qp,tu],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"parameters",mapper:cr({},Gi,{required:!0})},responses:{200:{bodyMapper:hr},default:{bodyMapper:mr}},serializer:mN},fN={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:Ws},default:{bodyMapper:mr}},serializer:mN},SN={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:Ws},default:{bodyMapper:mr}},serializer:mN},gN=Object.freeze({CloudError:mr,Route:br,SubResource:Pr,BaseResource:yr,RouteListResult:_s,NetworkInterfaceTapConfiguration:Nr,VirtualNetworkTap:Dr,Resource:Cr,NetworkInterfaceIPConfiguration:Wr,ApplicationGatewayBackendAddressPool:Kr,ApplicationGatewayBackendAddress:_r,BackendAddressPool:Hr,InboundNatRule:Ur,Subnet:Br,NetworkSecurityGroup:Gr,SecurityRule:Rr,ApplicationSecurityGroup:wr,NetworkInterface:Ar,InterfaceEndpoint:Sr,EndpointService:fr,NetworkInterfaceDnsSettings:gr,RouteTable:hr,ServiceEndpointPropertiesFormat:kr,ServiceEndpointPolicy:vr,ServiceEndpointPolicyDefinition:zr,IPConfiguration:xr,PublicIPAddress:Vr,PublicIPAddressSku:Ir,PublicIPAddressDnsSettings:Er,IpTag:Mr,IPConfigurationProfile:Fr,ResourceNavigationLink:qr,ServiceAssociationLink:Tr,Delegation:Lr,FrontendIPConfiguration:Or,ApplicationGatewayBackendHttpSettings:Zr,ApplicationGatewayConnectionDraining:jr,ApplicationGatewayIPConfiguration:ti,ApplicationGatewayAuthenticationCertificate:ri,ApplicationGatewayTrustedRootCertificate:ii,ApplicationGatewaySslCertificate:ai,ApplicationGatewayFrontendIPConfiguration:oi,ApplicationGatewayFrontendPort:ni,ApplicationGatewayHttpListener:si,ApplicationGatewayPathRule:pi,ApplicationGatewayProbe:li,ApplicationGatewayProbeHealthResponseMatch:ui,ApplicationGatewayRequestRoutingRule:ci,ApplicationGatewayRedirectConfiguration:di,ApplicationGatewayUrlPathMap:mi,ApplicationGateway:Ci,ApplicationGatewaySku:Yr,ApplicationGatewaySslPolicy:ei,ApplicationGatewayWebApplicationFirewallConfiguration:Pi,ApplicationGatewayFirewallDisabledRuleGroup:yi,ApplicationGatewayAutoscaleConfiguration:Ni,ApplicationGatewayFirewallRuleSet:fi,ApplicationGatewayFirewallRuleGroup:Ri,ApplicationGatewayFirewallRule:wi,ApplicationGatewayAvailableSslOptions:gi,ApplicationGatewaySslPredefinedPolicy:Ai,AzureFirewallIPConfiguration:hi,AzureFirewallApplicationRuleCollection:Ii,AzureFirewallRCAction:ki,AzureFirewallApplicationRule:vi,AzureFirewallApplicationRuleProtocol:zi,AzureFirewallNatRuleCollection:Vi,AzureFirewallNatRCAction:Ei,AzureFirewallNatRule:Mi,AzureFirewallNetworkRuleCollection:Fi,AzureFirewallNetworkRule:xi,AzureFirewall:qi,AzureFirewallFqdnTag:Ti,DdosProtectionPlan:Bi,EndpointServiceResult:Oi,ExpressRouteCircuitAuthorization:Di,RouteFilterRule:Ui,ExpressRouteCircuitConnection:Ki,ExpressRouteCircuitPeering:ji,ExpressRouteCircuitPeeringConfig:Hi,ExpressRouteCircuitStats:Wi,RouteFilter:Zi,Ipv6ExpressRouteCircuitPeeringConfig:Qi,ExpressRouteConnectionId:_i,ExpressRouteCircuit:Ji,ExpressRouteCircuitSku:Xi,ExpressRouteCircuitServiceProviderProperties:$i,ExpressRouteServiceProvider:na,ExpressRouteServiceProviderBandwidthsOffered:oa,ExpressRouteCrossConnectionPeering:la,ExpressRouteCrossConnection:ca,ExpressRouteCircuitReference:ua,ExpressRouteConnection:Na,ExpressRouteCircuitPeeringId:ma,ExpressRouteGateway:Ca,ExpressRouteGatewayPropertiesAutoScaleConfiguration:Pa,ExpressRouteGatewayPropertiesAutoScaleConfigurationBounds:ya,VirtualHubId:da,LoadBalancingRule:Sa,Probe:ga,InboundNatPool:Aa,OutboundRule:Ga,LoadBalancer:ba,LoadBalancerSku:fa,ContainerNetworkInterfaceConfiguration:xa,ContainerNetworkInterface:Ta,Container:Fa,ContainerNetworkInterfaceIpConfiguration:qa,NetworkProfile:La,NetworkWatcher:Oa,ConnectionMonitorResult:Bo,ConnectionMonitorSource:qo,ConnectionMonitorDestination:To,PublicIPPrefix:nn,PublicIPPrefixSku:an,ReferencedPublicIpAddress:on,PatchRouteFilterRule:sn,PatchRouteFilter:pn,BgpServiceCommunity:ln,BGPCommunity:un,VirtualNetworkPeering:yn,AddressSpace:mn,VirtualNetwork:Nn,DhcpOptions:Pn,VirtualNetworkGatewayIPConfiguration:fn,VpnClientRootCertificate:gn,VpnClientRevokedCertificate:An,VirtualNetworkGateway:vn,VirtualNetworkGatewaySku:Sn,VpnClientConfiguration:bn,IpsecPolicy:Gn,BgpSettings:hn,LocalNetworkGateway:xn,VirtualNetworkGatewayConnection:Fn,TunnelConnectionHealth:Vn,ConnectionSharedKey:Tn,VirtualNetworkGatewayConnectionListEntity:On,VirtualNetworkConnectionGatewayReference:Bn,P2SVpnServerConfigVpnClientRootCertificate:Hn,P2SVpnServerConfigVpnClientRevokedCertificate:Un,P2SVpnServerConfigRadiusServerRootCertificate:Wn,P2SVpnServerConfigRadiusClientRootCertificate:_n,P2SVpnServerConfiguration:Kn,VirtualWAN:jn,VpnSite:Qn,DeviceProperties:Zn,HubVirtualNetworkConnection:$n,VirtualHub:es,VirtualHubRouteTable:Yn,VirtualHubRoute:Jn,VpnConnection:ts,VpnGateway:rs,P2SVpnGateway:os,VpnClientConnectionHealth:as}),AN=function(){function e(e){this.client=e}return e.prototype.deleteMethod=function(e,t,r,i){return this.beginDeleteMethod(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.get=function(e,t,r,i,a){return this.client.sendOperationRequest({resourceGroupName:e,routeTableName:t,routeName:r,options:i},bN,a)},e.prototype.createOrUpdate=function(e,t,r,i,a){return this.beginCreateOrUpdate(e,t,r,i,a).then(function(e){return e.pollUntilFinished()})},e.prototype.list=function(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,routeTableName:t,options:r},hN,i)},e.prototype.beginDeleteMethod=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,routeTableName:t,routeName:r,options:i},kN,i)},e.prototype.beginCreateOrUpdate=function(e,t,r,i,a){return this.client.sendLRORequest({resourceGroupName:e,routeTableName:t,routeName:r,routeParameters:i,options:a},zN,a)},e.prototype.listNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},vN,r)},e}(),GN=new r.Serializer(gN),bN={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}/routes/{routeName}",urlParameters:[Kp,Qp,Zp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:br},default:{bodyMapper:mr}},serializer:GN},hN={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}/routes",urlParameters:[Kp,Qp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:_s},default:{bodyMapper:mr}},serializer:GN},kN={httpMethod:"DELETE",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}/routes/{routeName}",urlParameters:[Kp,Qp,Zp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{},202:{},204:{},default:{bodyMapper:mr}},serializer:GN},zN={httpMethod:"PUT",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}/routes/{routeName}",urlParameters:[Kp,Qp,Zp,tu],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"routeParameters",mapper:cr({},br,{required:!0})},responses:{200:{bodyMapper:br},201:{bodyMapper:br},default:{bodyMapper:mr}},serializer:GN},vN={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:_s},default:{bodyMapper:mr}},serializer:GN},IN=Object.freeze({BgpServiceCommunityListResult:Ks,BgpServiceCommunity:ln,Resource:Cr,BaseResource:yr,BGPCommunity:un,CloudError:mr,SubResource:Pr,ApplicationSecurityGroup:wr,SecurityRule:Rr,InterfaceEndpoint:Sr,EndpointService:fr,Subnet:Br,NetworkSecurityGroup:Gr,NetworkInterface:Ar,NetworkInterfaceIPConfiguration:Wr,VirtualNetworkTap:Dr,NetworkInterfaceTapConfiguration:Nr,FrontendIPConfiguration:Or,PublicIPAddress:Vr,PublicIPAddressSku:Ir,IPConfiguration:xr,PublicIPAddressDnsSettings:Er,IpTag:Mr,ApplicationGatewayBackendAddressPool:Kr,ApplicationGatewayBackendAddress:_r,BackendAddressPool:Hr,InboundNatRule:Ur,NetworkInterfaceDnsSettings:gr,RouteTable:hr,Route:br,ServiceEndpointPropertiesFormat:kr,ServiceEndpointPolicy:vr,ServiceEndpointPolicyDefinition:zr,IPConfigurationProfile:Fr,ResourceNavigationLink:qr,ServiceAssociationLink:Tr,Delegation:Lr,ApplicationGatewayBackendHttpSettings:Zr,ApplicationGatewayConnectionDraining:jr,ApplicationGatewayIPConfiguration:ti,ApplicationGatewayAuthenticationCertificate:ri,ApplicationGatewayTrustedRootCertificate:ii,ApplicationGatewaySslCertificate:ai,ApplicationGatewayFrontendIPConfiguration:oi,ApplicationGatewayFrontendPort:ni,ApplicationGatewayHttpListener:si,ApplicationGatewayPathRule:pi,ApplicationGatewayProbe:li,ApplicationGatewayProbeHealthResponseMatch:ui,ApplicationGatewayRequestRoutingRule:ci,ApplicationGatewayRedirectConfiguration:di,ApplicationGatewayUrlPathMap:mi,ApplicationGateway:Ci,ApplicationGatewaySku:Yr,ApplicationGatewaySslPolicy:ei,ApplicationGatewayWebApplicationFirewallConfiguration:Pi,ApplicationGatewayFirewallDisabledRuleGroup:yi,ApplicationGatewayAutoscaleConfiguration:Ni,ApplicationGatewayFirewallRuleSet:fi,ApplicationGatewayFirewallRuleGroup:Ri,ApplicationGatewayFirewallRule:wi,ApplicationGatewayAvailableSslOptions:gi,ApplicationGatewaySslPredefinedPolicy:Ai,AzureFirewallIPConfiguration:hi,AzureFirewallApplicationRuleCollection:Ii,AzureFirewallRCAction:ki,AzureFirewallApplicationRule:vi,AzureFirewallApplicationRuleProtocol:zi,AzureFirewallNatRuleCollection:Vi,AzureFirewallNatRCAction:Ei,AzureFirewallNatRule:Mi,AzureFirewallNetworkRuleCollection:Fi,AzureFirewallNetworkRule:xi,AzureFirewall:qi,AzureFirewallFqdnTag:Ti,DdosProtectionPlan:Bi,EndpointServiceResult:Oi,ExpressRouteCircuitAuthorization:Di,RouteFilterRule:Ui,ExpressRouteCircuitConnection:Ki,ExpressRouteCircuitPeering:ji,ExpressRouteCircuitPeeringConfig:Hi,ExpressRouteCircuitStats:Wi,RouteFilter:Zi,Ipv6ExpressRouteCircuitPeeringConfig:Qi,ExpressRouteConnectionId:_i,ExpressRouteCircuit:Ji,ExpressRouteCircuitSku:Xi,ExpressRouteCircuitServiceProviderProperties:$i,ExpressRouteServiceProvider:na,ExpressRouteServiceProviderBandwidthsOffered:oa,ExpressRouteCrossConnectionPeering:la,ExpressRouteCrossConnection:ca,ExpressRouteCircuitReference:ua,ExpressRouteConnection:Na,ExpressRouteCircuitPeeringId:ma,ExpressRouteGateway:Ca,ExpressRouteGatewayPropertiesAutoScaleConfiguration:Pa,ExpressRouteGatewayPropertiesAutoScaleConfigurationBounds:ya,VirtualHubId:da,LoadBalancingRule:Sa,Probe:ga,InboundNatPool:Aa,OutboundRule:Ga,LoadBalancer:ba,LoadBalancerSku:fa,ContainerNetworkInterfaceConfiguration:xa,ContainerNetworkInterface:Ta,Container:Fa,ContainerNetworkInterfaceIpConfiguration:qa,NetworkProfile:La,NetworkWatcher:Oa,ConnectionMonitorResult:Bo,ConnectionMonitorSource:qo,ConnectionMonitorDestination:To,PublicIPPrefix:nn,PublicIPPrefixSku:an,ReferencedPublicIpAddress:on,PatchRouteFilterRule:sn,PatchRouteFilter:pn,VirtualNetworkPeering:yn,AddressSpace:mn,VirtualNetwork:Nn,DhcpOptions:Pn,VirtualNetworkGatewayIPConfiguration:fn,VpnClientRootCertificate:gn,VpnClientRevokedCertificate:An,VirtualNetworkGateway:vn,VirtualNetworkGatewaySku:Sn,VpnClientConfiguration:bn,IpsecPolicy:Gn,BgpSettings:hn,LocalNetworkGateway:xn,VirtualNetworkGatewayConnection:Fn,TunnelConnectionHealth:Vn,ConnectionSharedKey:Tn,VirtualNetworkGatewayConnectionListEntity:On,VirtualNetworkConnectionGatewayReference:Bn,P2SVpnServerConfigVpnClientRootCertificate:Hn,P2SVpnServerConfigVpnClientRevokedCertificate:Un,P2SVpnServerConfigRadiusServerRootCertificate:Wn,P2SVpnServerConfigRadiusClientRootCertificate:_n,P2SVpnServerConfiguration:Kn,VirtualWAN:jn,VpnSite:Qn,DeviceProperties:Zn,HubVirtualNetworkConnection:$n,VirtualHub:es,VirtualHubRouteTable:Yn,VirtualHubRoute:Jn,VpnConnection:ts,VpnGateway:rs,P2SVpnGateway:os,VpnClientConnectionHealth:as}),EN=function(){function e(e){this.client=e}return e.prototype.list=function(e,t){return this.client.sendOperationRequest({options:e},VN,t)},e.prototype.listNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},xN,r)},e}(),MN=new r.Serializer(IN),VN={httpMethod:"GET",path:"subscriptions/{subscriptionId}/providers/Microsoft.Network/bgpServiceCommunities",urlParameters:[tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:Ks},default:{bodyMapper:mr}},serializer:MN},xN={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:Ks},default:{bodyMapper:mr}},serializer:MN},FN=Object.freeze({CloudError:mr,ServiceEndpointPolicy:vr,Resource:Cr,BaseResource:yr,ServiceEndpointPolicyDefinition:zr,SubResource:Pr,Subnet:Br,NetworkSecurityGroup:Gr,SecurityRule:Rr,ApplicationSecurityGroup:wr,NetworkInterface:Ar,InterfaceEndpoint:Sr,EndpointService:fr,NetworkInterfaceIPConfiguration:Wr,VirtualNetworkTap:Dr,NetworkInterfaceTapConfiguration:Nr,FrontendIPConfiguration:Or,PublicIPAddress:Vr,PublicIPAddressSku:Ir,IPConfiguration:xr,PublicIPAddressDnsSettings:Er,IpTag:Mr,ApplicationGatewayBackendAddressPool:Kr,ApplicationGatewayBackendAddress:_r,BackendAddressPool:Hr,InboundNatRule:Ur,NetworkInterfaceDnsSettings:gr,RouteTable:hr,Route:br,ServiceEndpointPropertiesFormat:kr,IPConfigurationProfile:Fr,ResourceNavigationLink:qr,ServiceAssociationLink:Tr,Delegation:Lr,TagsObject:Gi,ServiceEndpointPolicyListResult:js,ApplicationGatewayBackendHttpSettings:Zr,ApplicationGatewayConnectionDraining:jr,ApplicationGatewayIPConfiguration:ti,ApplicationGatewayAuthenticationCertificate:ri,ApplicationGatewayTrustedRootCertificate:ii,ApplicationGatewaySslCertificate:ai,ApplicationGatewayFrontendIPConfiguration:oi,ApplicationGatewayFrontendPort:ni,ApplicationGatewayHttpListener:si,ApplicationGatewayPathRule:pi,ApplicationGatewayProbe:li,ApplicationGatewayProbeHealthResponseMatch:ui,ApplicationGatewayRequestRoutingRule:ci,ApplicationGatewayRedirectConfiguration:di,ApplicationGatewayUrlPathMap:mi,ApplicationGateway:Ci,ApplicationGatewaySku:Yr,ApplicationGatewaySslPolicy:ei,ApplicationGatewayWebApplicationFirewallConfiguration:Pi,ApplicationGatewayFirewallDisabledRuleGroup:yi,ApplicationGatewayAutoscaleConfiguration:Ni,ApplicationGatewayFirewallRuleSet:fi,ApplicationGatewayFirewallRuleGroup:Ri,ApplicationGatewayFirewallRule:wi,ApplicationGatewayAvailableSslOptions:gi,ApplicationGatewaySslPredefinedPolicy:Ai,AzureFirewallIPConfiguration:hi,AzureFirewallApplicationRuleCollection:Ii,AzureFirewallRCAction:ki,AzureFirewallApplicationRule:vi,AzureFirewallApplicationRuleProtocol:zi,AzureFirewallNatRuleCollection:Vi,AzureFirewallNatRCAction:Ei,AzureFirewallNatRule:Mi,AzureFirewallNetworkRuleCollection:Fi,AzureFirewallNetworkRule:xi,AzureFirewall:qi,AzureFirewallFqdnTag:Ti,DdosProtectionPlan:Bi,EndpointServiceResult:Oi,ExpressRouteCircuitAuthorization:Di,RouteFilterRule:Ui,ExpressRouteCircuitConnection:Ki,ExpressRouteCircuitPeering:ji,ExpressRouteCircuitPeeringConfig:Hi,ExpressRouteCircuitStats:Wi,RouteFilter:Zi,Ipv6ExpressRouteCircuitPeeringConfig:Qi,ExpressRouteConnectionId:_i,ExpressRouteCircuit:Ji,ExpressRouteCircuitSku:Xi,ExpressRouteCircuitServiceProviderProperties:$i,ExpressRouteServiceProvider:na,ExpressRouteServiceProviderBandwidthsOffered:oa,ExpressRouteCrossConnectionPeering:la,ExpressRouteCrossConnection:ca,ExpressRouteCircuitReference:ua,ExpressRouteConnection:Na,ExpressRouteCircuitPeeringId:ma,ExpressRouteGateway:Ca,ExpressRouteGatewayPropertiesAutoScaleConfiguration:Pa,ExpressRouteGatewayPropertiesAutoScaleConfigurationBounds:ya,VirtualHubId:da,LoadBalancingRule:Sa,Probe:ga,InboundNatPool:Aa,OutboundRule:Ga,LoadBalancer:ba,LoadBalancerSku:fa,ContainerNetworkInterfaceConfiguration:xa,ContainerNetworkInterface:Ta,Container:Fa,ContainerNetworkInterfaceIpConfiguration:qa,NetworkProfile:La,NetworkWatcher:Oa,ConnectionMonitorResult:Bo,ConnectionMonitorSource:qo,ConnectionMonitorDestination:To,PublicIPPrefix:nn,PublicIPPrefixSku:an,ReferencedPublicIpAddress:on,PatchRouteFilterRule:sn,PatchRouteFilter:pn,BgpServiceCommunity:ln,BGPCommunity:un,VirtualNetworkPeering:yn,AddressSpace:mn,VirtualNetwork:Nn,DhcpOptions:Pn,VirtualNetworkGatewayIPConfiguration:fn,VpnClientRootCertificate:gn,VpnClientRevokedCertificate:An,VirtualNetworkGateway:vn,VirtualNetworkGatewaySku:Sn,VpnClientConfiguration:bn,IpsecPolicy:Gn,BgpSettings:hn,LocalNetworkGateway:xn,VirtualNetworkGatewayConnection:Fn,TunnelConnectionHealth:Vn,ConnectionSharedKey:Tn,VirtualNetworkGatewayConnectionListEntity:On,VirtualNetworkConnectionGatewayReference:Bn,P2SVpnServerConfigVpnClientRootCertificate:Hn,P2SVpnServerConfigVpnClientRevokedCertificate:Un,P2SVpnServerConfigRadiusServerRootCertificate:Wn,P2SVpnServerConfigRadiusClientRootCertificate:_n,P2SVpnServerConfiguration:Kn,VirtualWAN:jn,VpnSite:Qn,DeviceProperties:Zn,HubVirtualNetworkConnection:$n,VirtualHub:es,VirtualHubRouteTable:Yn,VirtualHubRoute:Jn,VpnConnection:ts,VpnGateway:rs,P2SVpnGateway:os,VpnClientConnectionHealth:as}),qN=function(){function e(e){this.client=e}return e.prototype.deleteMethod=function(e,t,r){return this.beginDeleteMethod(e,t,r).then(function(e){return e.pollUntilFinished()})},e.prototype.get=function(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,serviceEndpointPolicyName:t,options:r},LN,i)},e.prototype.createOrUpdate=function(e,t,r,i){return this.beginCreateOrUpdate(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.update=function(e,t,r,i){return this.beginUpdate(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.list=function(e,t){return this.client.sendOperationRequest({options:e},BN,t)},e.prototype.listByResourceGroup=function(e,t,r){return this.client.sendOperationRequest({resourceGroupName:e,options:t},ON,r)},e.prototype.beginDeleteMethod=function(e,t,r){return this.client.sendLRORequest({resourceGroupName:e,serviceEndpointPolicyName:t,options:r},DN,r)},e.prototype.beginCreateOrUpdate=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,serviceEndpointPolicyName:t,parameters:r,options:i},HN,i)},e.prototype.beginUpdate=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,serviceEndpointPolicyName:t,parameters:r,options:i},UN,i)},e.prototype.listNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},WN,r)},e.prototype.listByResourceGroupNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},_N,r)},e}(),TN=new r.Serializer(FN),LN={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/serviceEndpointPolicies/{serviceEndpointPolicyName}",urlParameters:[Kp,Yp,tu],queryParameters:[Pp,kp],headerParameters:[yp],responses:{200:{bodyMapper:vr},default:{bodyMapper:mr}},serializer:TN},BN={httpMethod:"GET",path:"subscriptions/{subscriptionId}/providers/Microsoft.Network/ServiceEndpointPolicies",urlParameters:[tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:js},default:{bodyMapper:mr}},serializer:TN},ON={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/serviceEndpointPolicies",urlParameters:[Kp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:js},default:{bodyMapper:mr}},serializer:TN},DN={httpMethod:"DELETE",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/serviceEndpointPolicies/{serviceEndpointPolicyName}",urlParameters:[Kp,Yp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{},202:{},204:{},default:{bodyMapper:mr}},serializer:TN},HN={httpMethod:"PUT",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/serviceEndpointPolicies/{serviceEndpointPolicyName}",urlParameters:[Kp,Yp,tu],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"parameters",mapper:cr({},vr,{required:!0})},responses:{200:{bodyMapper:vr},201:{bodyMapper:vr},default:{bodyMapper:mr}},serializer:TN},UN={httpMethod:"PATCH",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/serviceEndpointPolicies/{serviceEndpointPolicyName}",urlParameters:[Kp,Yp,tu],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"parameters",mapper:cr({},Gi,{required:!0})},responses:{200:{bodyMapper:vr},default:{bodyMapper:mr}},serializer:TN},WN={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:js},default:{bodyMapper:mr}},serializer:TN},_N={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:js},default:{bodyMapper:mr}},serializer:TN},KN=Object.freeze({CloudError:mr,ServiceEndpointPolicyDefinition:zr,SubResource:Pr,BaseResource:yr,ServiceEndpointPolicyDefinitionListResult:Zs,NetworkInterfaceTapConfiguration:Nr,VirtualNetworkTap:Dr,Resource:Cr,NetworkInterfaceIPConfiguration:Wr,ApplicationGatewayBackendAddressPool:Kr,ApplicationGatewayBackendAddress:_r,BackendAddressPool:Hr,InboundNatRule:Ur,Subnet:Br,NetworkSecurityGroup:Gr,SecurityRule:Rr,ApplicationSecurityGroup:wr,NetworkInterface:Ar,InterfaceEndpoint:Sr,EndpointService:fr,NetworkInterfaceDnsSettings:gr,RouteTable:hr,Route:br,ServiceEndpointPropertiesFormat:kr,ServiceEndpointPolicy:vr,IPConfiguration:xr,PublicIPAddress:Vr,PublicIPAddressSku:Ir,PublicIPAddressDnsSettings:Er,IpTag:Mr,IPConfigurationProfile:Fr,ResourceNavigationLink:qr,ServiceAssociationLink:Tr,Delegation:Lr,FrontendIPConfiguration:Or,ApplicationGatewayBackendHttpSettings:Zr,ApplicationGatewayConnectionDraining:jr,ApplicationGatewayIPConfiguration:ti,ApplicationGatewayAuthenticationCertificate:ri,ApplicationGatewayTrustedRootCertificate:ii,ApplicationGatewaySslCertificate:ai,ApplicationGatewayFrontendIPConfiguration:oi,ApplicationGatewayFrontendPort:ni,ApplicationGatewayHttpListener:si,ApplicationGatewayPathRule:pi,ApplicationGatewayProbe:li,ApplicationGatewayProbeHealthResponseMatch:ui,ApplicationGatewayRequestRoutingRule:ci,ApplicationGatewayRedirectConfiguration:di,ApplicationGatewayUrlPathMap:mi,ApplicationGateway:Ci,ApplicationGatewaySku:Yr,ApplicationGatewaySslPolicy:ei,ApplicationGatewayWebApplicationFirewallConfiguration:Pi,ApplicationGatewayFirewallDisabledRuleGroup:yi,ApplicationGatewayAutoscaleConfiguration:Ni,ApplicationGatewayFirewallRuleSet:fi,ApplicationGatewayFirewallRuleGroup:Ri,ApplicationGatewayFirewallRule:wi,ApplicationGatewayAvailableSslOptions:gi,ApplicationGatewaySslPredefinedPolicy:Ai,AzureFirewallIPConfiguration:hi,AzureFirewallApplicationRuleCollection:Ii,AzureFirewallRCAction:ki,AzureFirewallApplicationRule:vi,AzureFirewallApplicationRuleProtocol:zi,AzureFirewallNatRuleCollection:Vi,AzureFirewallNatRCAction:Ei,AzureFirewallNatRule:Mi,AzureFirewallNetworkRuleCollection:Fi,AzureFirewallNetworkRule:xi,AzureFirewall:qi,AzureFirewallFqdnTag:Ti,DdosProtectionPlan:Bi,EndpointServiceResult:Oi,ExpressRouteCircuitAuthorization:Di,RouteFilterRule:Ui,ExpressRouteCircuitConnection:Ki,ExpressRouteCircuitPeering:ji,ExpressRouteCircuitPeeringConfig:Hi,ExpressRouteCircuitStats:Wi,RouteFilter:Zi,Ipv6ExpressRouteCircuitPeeringConfig:Qi,ExpressRouteConnectionId:_i,ExpressRouteCircuit:Ji,ExpressRouteCircuitSku:Xi,ExpressRouteCircuitServiceProviderProperties:$i,ExpressRouteServiceProvider:na,ExpressRouteServiceProviderBandwidthsOffered:oa,ExpressRouteCrossConnectionPeering:la,ExpressRouteCrossConnection:ca,ExpressRouteCircuitReference:ua,ExpressRouteConnection:Na,ExpressRouteCircuitPeeringId:ma,ExpressRouteGateway:Ca,ExpressRouteGatewayPropertiesAutoScaleConfiguration:Pa,ExpressRouteGatewayPropertiesAutoScaleConfigurationBounds:ya,VirtualHubId:da,LoadBalancingRule:Sa,Probe:ga,InboundNatPool:Aa,OutboundRule:Ga,LoadBalancer:ba,LoadBalancerSku:fa,ContainerNetworkInterfaceConfiguration:xa,ContainerNetworkInterface:Ta,Container:Fa,ContainerNetworkInterfaceIpConfiguration:qa,NetworkProfile:La,NetworkWatcher:Oa,ConnectionMonitorResult:Bo,ConnectionMonitorSource:qo,ConnectionMonitorDestination:To,PublicIPPrefix:nn,PublicIPPrefixSku:an,ReferencedPublicIpAddress:on,PatchRouteFilterRule:sn,PatchRouteFilter:pn,BgpServiceCommunity:ln,BGPCommunity:un,VirtualNetworkPeering:yn,AddressSpace:mn,VirtualNetwork:Nn,DhcpOptions:Pn,VirtualNetworkGatewayIPConfiguration:fn,VpnClientRootCertificate:gn,VpnClientRevokedCertificate:An,VirtualNetworkGateway:vn,VirtualNetworkGatewaySku:Sn,VpnClientConfiguration:bn,IpsecPolicy:Gn,BgpSettings:hn,LocalNetworkGateway:xn,VirtualNetworkGatewayConnection:Fn,TunnelConnectionHealth:Vn,ConnectionSharedKey:Tn,VirtualNetworkGatewayConnectionListEntity:On,VirtualNetworkConnectionGatewayReference:Bn,P2SVpnServerConfigVpnClientRootCertificate:Hn,P2SVpnServerConfigVpnClientRevokedCertificate:Un,P2SVpnServerConfigRadiusServerRootCertificate:Wn,P2SVpnServerConfigRadiusClientRootCertificate:_n,P2SVpnServerConfiguration:Kn,VirtualWAN:jn,VpnSite:Qn,DeviceProperties:Zn,HubVirtualNetworkConnection:$n,VirtualHub:es,VirtualHubRouteTable:Yn,VirtualHubRoute:Jn,VpnConnection:ts,VpnGateway:rs,P2SVpnGateway:os,VpnClientConnectionHealth:as}),jN=function(){function e(e){this.client=e}return e.prototype.deleteMethod=function(e,t,r,i){return this.beginDeleteMethod(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.get=function(e,t,r,i,a){return this.client.sendOperationRequest({resourceGroupName:e,serviceEndpointPolicyName:t,serviceEndpointPolicyDefinitionName:r,options:i},QN,a)},e.prototype.createOrUpdate=function(e,t,r,i,a){return this.beginCreateOrUpdate(e,t,r,i,a).then(function(e){return e.pollUntilFinished()})},e.prototype.listByResourceGroup=function(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,serviceEndpointPolicyName:t,options:r},XN,i)},e.prototype.beginDeleteMethod=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,serviceEndpointPolicyName:t,serviceEndpointPolicyDefinitionName:r,options:i},$N,i)},e.prototype.beginCreateOrUpdate=function(e,t,r,i,a){return this.client.sendLRORequest({resourceGroupName:e,serviceEndpointPolicyName:t,serviceEndpointPolicyDefinitionName:r,serviceEndpointPolicyDefinitions:i,options:a},JN,a)},e.prototype.listByResourceGroupNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},YN,r)},e}(),ZN=new r.Serializer(KN),QN={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/serviceEndpointPolicies/{serviceEndpointPolicyName}/serviceEndpointPolicyDefinitions/{serviceEndpointPolicyDefinitionName}",urlParameters:[Kp,Yp,Jp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:zr},default:{bodyMapper:mr}},serializer:ZN},XN={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/serviceEndpointPolicies/{serviceEndpointPolicyName}/serviceEndpointPolicyDefinitions",urlParameters:[Kp,Yp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:Zs},default:{bodyMapper:mr}},serializer:ZN},$N={httpMethod:"DELETE",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/serviceEndpointPolicies/{serviceEndpointPolicyName}/serviceEndpointPolicyDefinitions/{serviceEndpointPolicyDefinitionName}",urlParameters:[Kp,Yp,Jp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{},202:{},204:{},default:{bodyMapper:mr}},serializer:ZN},JN={httpMethod:"PUT",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/serviceEndpointPolicies/{serviceEndpointPolicyName}/serviceEndpointPolicyDefinitions/{serviceEndpointPolicyDefinitionName}",urlParameters:[Kp,Yp,Jp,tu],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"serviceEndpointPolicyDefinitions",mapper:cr({},zr,{required:!0})},responses:{200:{bodyMapper:zr},201:{bodyMapper:zr},default:{bodyMapper:mr}},serializer:ZN},YN={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:Zs},default:{bodyMapper:mr}},serializer:ZN},eC=Object.freeze({UsagesListResult:Qs,Usage:dn,UsageName:cn,CloudError:mr}),tC=function(){function e(e){this.client=e}return e.prototype.list=function(e,t,r){return this.client.sendOperationRequest({location:e,options:t},iC,r)},e.prototype.listNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},aC,r)},e}(),rC=new r.Serializer(eC),iC={httpMethod:"GET",path:"subscriptions/{subscriptionId}/providers/Microsoft.Network/locations/{location}/usages",urlParameters:[{parameterPath:"location",mapper:{required:!0,serializedName:"location",constraints:{Pattern:/^[-\w\._ ]+$/},type:{name:"String"}}},tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:Qs},default:{bodyMapper:mr}},serializer:rC},aC={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:Qs},default:{bodyMapper:mr}},serializer:rC},oC=Object.freeze({CloudError:mr,VirtualNetwork:Nn,Resource:Cr,BaseResource:yr,AddressSpace:mn,DhcpOptions:Pn,Subnet:Br,SubResource:Pr,NetworkSecurityGroup:Gr,SecurityRule:Rr,ApplicationSecurityGroup:wr,NetworkInterface:Ar,InterfaceEndpoint:Sr,EndpointService:fr,NetworkInterfaceIPConfiguration:Wr,VirtualNetworkTap:Dr,NetworkInterfaceTapConfiguration:Nr,FrontendIPConfiguration:Or,PublicIPAddress:Vr,PublicIPAddressSku:Ir,IPConfiguration:xr,PublicIPAddressDnsSettings:Er,IpTag:Mr,ApplicationGatewayBackendAddressPool:Kr,ApplicationGatewayBackendAddress:_r,BackendAddressPool:Hr,InboundNatRule:Ur,NetworkInterfaceDnsSettings:gr,RouteTable:hr,Route:br,ServiceEndpointPropertiesFormat:kr,ServiceEndpointPolicy:vr,ServiceEndpointPolicyDefinition:zr,IPConfigurationProfile:Fr,ResourceNavigationLink:qr,ServiceAssociationLink:Tr,Delegation:Lr,VirtualNetworkPeering:yn,TagsObject:Gi,VirtualNetworkListResult:Xs,IPAddressAvailabilityResult:Cn,VirtualNetworkListUsageResult:$s,VirtualNetworkUsage:Rn,VirtualNetworkUsageName:wn,ApplicationGatewayBackendHttpSettings:Zr,ApplicationGatewayConnectionDraining:jr,ApplicationGatewayIPConfiguration:ti,ApplicationGatewayAuthenticationCertificate:ri,ApplicationGatewayTrustedRootCertificate:ii,ApplicationGatewaySslCertificate:ai,ApplicationGatewayFrontendIPConfiguration:oi,ApplicationGatewayFrontendPort:ni,ApplicationGatewayHttpListener:si,ApplicationGatewayPathRule:pi,ApplicationGatewayProbe:li,ApplicationGatewayProbeHealthResponseMatch:ui,ApplicationGatewayRequestRoutingRule:ci,ApplicationGatewayRedirectConfiguration:di,ApplicationGatewayUrlPathMap:mi,ApplicationGateway:Ci,ApplicationGatewaySku:Yr,ApplicationGatewaySslPolicy:ei,ApplicationGatewayWebApplicationFirewallConfiguration:Pi,ApplicationGatewayFirewallDisabledRuleGroup:yi,ApplicationGatewayAutoscaleConfiguration:Ni,ApplicationGatewayFirewallRuleSet:fi,ApplicationGatewayFirewallRuleGroup:Ri,ApplicationGatewayFirewallRule:wi,ApplicationGatewayAvailableSslOptions:gi,ApplicationGatewaySslPredefinedPolicy:Ai,AzureFirewallIPConfiguration:hi,AzureFirewallApplicationRuleCollection:Ii,AzureFirewallRCAction:ki,AzureFirewallApplicationRule:vi,AzureFirewallApplicationRuleProtocol:zi,AzureFirewallNatRuleCollection:Vi,AzureFirewallNatRCAction:Ei,AzureFirewallNatRule:Mi,AzureFirewallNetworkRuleCollection:Fi,AzureFirewallNetworkRule:xi,AzureFirewall:qi,AzureFirewallFqdnTag:Ti,DdosProtectionPlan:Bi,EndpointServiceResult:Oi,ExpressRouteCircuitAuthorization:Di,RouteFilterRule:Ui,ExpressRouteCircuitConnection:Ki,ExpressRouteCircuitPeering:ji,ExpressRouteCircuitPeeringConfig:Hi,ExpressRouteCircuitStats:Wi,RouteFilter:Zi,Ipv6ExpressRouteCircuitPeeringConfig:Qi,ExpressRouteConnectionId:_i,ExpressRouteCircuit:Ji,ExpressRouteCircuitSku:Xi,ExpressRouteCircuitServiceProviderProperties:$i,ExpressRouteServiceProvider:na,ExpressRouteServiceProviderBandwidthsOffered:oa,ExpressRouteCrossConnectionPeering:la,ExpressRouteCrossConnection:ca,ExpressRouteCircuitReference:ua,ExpressRouteConnection:Na,ExpressRouteCircuitPeeringId:ma,ExpressRouteGateway:Ca,ExpressRouteGatewayPropertiesAutoScaleConfiguration:Pa,ExpressRouteGatewayPropertiesAutoScaleConfigurationBounds:ya,VirtualHubId:da,LoadBalancingRule:Sa,Probe:ga,InboundNatPool:Aa,OutboundRule:Ga,LoadBalancer:ba,LoadBalancerSku:fa,ContainerNetworkInterfaceConfiguration:xa,ContainerNetworkInterface:Ta,Container:Fa,ContainerNetworkInterfaceIpConfiguration:qa,NetworkProfile:La,NetworkWatcher:Oa,ConnectionMonitorResult:Bo,ConnectionMonitorSource:qo,ConnectionMonitorDestination:To,PublicIPPrefix:nn,PublicIPPrefixSku:an,ReferencedPublicIpAddress:on,PatchRouteFilterRule:sn,PatchRouteFilter:pn,BgpServiceCommunity:ln,BGPCommunity:un,VirtualNetworkGatewayIPConfiguration:fn,VpnClientRootCertificate:gn,VpnClientRevokedCertificate:An,VirtualNetworkGateway:vn,VirtualNetworkGatewaySku:Sn,VpnClientConfiguration:bn,IpsecPolicy:Gn,BgpSettings:hn,LocalNetworkGateway:xn,VirtualNetworkGatewayConnection:Fn,TunnelConnectionHealth:Vn,ConnectionSharedKey:Tn,VirtualNetworkGatewayConnectionListEntity:On,VirtualNetworkConnectionGatewayReference:Bn,P2SVpnServerConfigVpnClientRootCertificate:Hn,P2SVpnServerConfigVpnClientRevokedCertificate:Un,P2SVpnServerConfigRadiusServerRootCertificate:Wn,P2SVpnServerConfigRadiusClientRootCertificate:_n,P2SVpnServerConfiguration:Kn,VirtualWAN:jn,VpnSite:Qn,DeviceProperties:Zn,HubVirtualNetworkConnection:$n,VirtualHub:es,VirtualHubRouteTable:Yn,VirtualHubRoute:Jn,VpnConnection:ts,VpnGateway:rs,P2SVpnGateway:os,VpnClientConnectionHealth:as}),nC=function(){function e(e){this.client=e}return e.prototype.deleteMethod=function(e,t,r){return this.beginDeleteMethod(e,t,r).then(function(e){return e.pollUntilFinished()})},e.prototype.get=function(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,virtualNetworkName:t,options:r},pC,i)},e.prototype.createOrUpdate=function(e,t,r,i){return this.beginCreateOrUpdate(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.updateTags=function(e,t,r,i){return this.beginUpdateTags(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.listAll=function(e,t){return this.client.sendOperationRequest({options:e},uC,t)},e.prototype.list=function(e,t,r){return this.client.sendOperationRequest({resourceGroupName:e,options:t},lC,r)},e.prototype.checkIPAddressAvailability=function(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,virtualNetworkName:t,options:r},cC,i)},e.prototype.listUsage=function(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,virtualNetworkName:t,options:r},dC,i)},e.prototype.beginDeleteMethod=function(e,t,r){return this.client.sendLRORequest({resourceGroupName:e,virtualNetworkName:t,options:r},mC,r)},e.prototype.beginCreateOrUpdate=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,virtualNetworkName:t,parameters:r,options:i},yC,i)},e.prototype.beginUpdateTags=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,virtualNetworkName:t,parameters:r,options:i},PC,i)},e.prototype.listAllNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},NC,r)},e.prototype.listNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},CC,r)},e.prototype.listUsageNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},wC,r)},e}(),sC=new r.Serializer(oC),pC={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}",urlParameters:[Kp,uu,tu],queryParameters:[Pp,kp],headerParameters:[yp],responses:{200:{bodyMapper:Nn},default:{bodyMapper:mr}},serializer:sC},uC={httpMethod:"GET",path:"subscriptions/{subscriptionId}/providers/Microsoft.Network/virtualNetworks",urlParameters:[tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:Xs},default:{bodyMapper:mr}},serializer:sC},lC={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks",urlParameters:[Kp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:Xs},default:{bodyMapper:mr}},serializer:sC},cC={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/CheckIPAddressAvailability",urlParameters:[Kp,uu,tu],queryParameters:[{parameterPath:["options","ipAddress"],mapper:{serializedName:"ipAddress",type:{name:"String"}}},Pp],headerParameters:[yp],responses:{200:{bodyMapper:Cn},default:{bodyMapper:mr}},serializer:sC},dC={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/usages",urlParameters:[Kp,uu,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:$s},default:{bodyMapper:mr}},serializer:sC},mC={httpMethod:"DELETE",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}",urlParameters:[Kp,uu,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{},202:{},204:{},default:{bodyMapper:mr}},serializer:sC},yC={httpMethod:"PUT",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}",urlParameters:[Kp,uu,tu],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"parameters",mapper:cr({},Nn,{required:!0})},responses:{200:{bodyMapper:Nn},201:{bodyMapper:Nn},default:{bodyMapper:mr}},serializer:sC},PC={httpMethod:"PATCH",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}",urlParameters:[Kp,uu,tu],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"parameters",mapper:cr({},Gi,{required:!0})},responses:{200:{bodyMapper:Nn},default:{bodyMapper:mr}},serializer:sC},NC={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:Xs},default:{bodyMapper:mr}},serializer:sC},CC={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:Xs},default:{bodyMapper:mr}},serializer:sC},wC={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:$s},default:{bodyMapper:mr}},serializer:sC},RC=Object.freeze({CloudError:mr,Subnet:Br,SubResource:Pr,BaseResource:yr,NetworkSecurityGroup:Gr,Resource:Cr,SecurityRule:Rr,ApplicationSecurityGroup:wr,NetworkInterface:Ar,InterfaceEndpoint:Sr,EndpointService:fr,NetworkInterfaceIPConfiguration:Wr,VirtualNetworkTap:Dr,NetworkInterfaceTapConfiguration:Nr,FrontendIPConfiguration:Or,PublicIPAddress:Vr,PublicIPAddressSku:Ir,IPConfiguration:xr,PublicIPAddressDnsSettings:Er,IpTag:Mr,ApplicationGatewayBackendAddressPool:Kr,ApplicationGatewayBackendAddress:_r,BackendAddressPool:Hr,InboundNatRule:Ur,NetworkInterfaceDnsSettings:gr,RouteTable:hr,Route:br,ServiceEndpointPropertiesFormat:kr,ServiceEndpointPolicy:vr,ServiceEndpointPolicyDefinition:zr,IPConfigurationProfile:Fr,ResourceNavigationLink:qr,ServiceAssociationLink:Tr,Delegation:Lr,SubnetListResult:Js,ApplicationGatewayBackendHttpSettings:Zr,ApplicationGatewayConnectionDraining:jr,ApplicationGatewayIPConfiguration:ti,ApplicationGatewayAuthenticationCertificate:ri,ApplicationGatewayTrustedRootCertificate:ii,ApplicationGatewaySslCertificate:ai,ApplicationGatewayFrontendIPConfiguration:oi,ApplicationGatewayFrontendPort:ni,ApplicationGatewayHttpListener:si,ApplicationGatewayPathRule:pi,ApplicationGatewayProbe:li,ApplicationGatewayProbeHealthResponseMatch:ui,ApplicationGatewayRequestRoutingRule:ci,ApplicationGatewayRedirectConfiguration:di,ApplicationGatewayUrlPathMap:mi,ApplicationGateway:Ci,ApplicationGatewaySku:Yr,ApplicationGatewaySslPolicy:ei,ApplicationGatewayWebApplicationFirewallConfiguration:Pi,ApplicationGatewayFirewallDisabledRuleGroup:yi,ApplicationGatewayAutoscaleConfiguration:Ni,ApplicationGatewayFirewallRuleSet:fi,ApplicationGatewayFirewallRuleGroup:Ri,ApplicationGatewayFirewallRule:wi,ApplicationGatewayAvailableSslOptions:gi,ApplicationGatewaySslPredefinedPolicy:Ai,AzureFirewallIPConfiguration:hi,AzureFirewallApplicationRuleCollection:Ii,AzureFirewallRCAction:ki,AzureFirewallApplicationRule:vi,AzureFirewallApplicationRuleProtocol:zi,AzureFirewallNatRuleCollection:Vi,AzureFirewallNatRCAction:Ei,AzureFirewallNatRule:Mi,AzureFirewallNetworkRuleCollection:Fi,AzureFirewallNetworkRule:xi,AzureFirewall:qi,AzureFirewallFqdnTag:Ti,DdosProtectionPlan:Bi,EndpointServiceResult:Oi,ExpressRouteCircuitAuthorization:Di,RouteFilterRule:Ui,ExpressRouteCircuitConnection:Ki,ExpressRouteCircuitPeering:ji,ExpressRouteCircuitPeeringConfig:Hi,ExpressRouteCircuitStats:Wi,RouteFilter:Zi,Ipv6ExpressRouteCircuitPeeringConfig:Qi,ExpressRouteConnectionId:_i,ExpressRouteCircuit:Ji,ExpressRouteCircuitSku:Xi,ExpressRouteCircuitServiceProviderProperties:$i,ExpressRouteServiceProvider:na,ExpressRouteServiceProviderBandwidthsOffered:oa,ExpressRouteCrossConnectionPeering:la,ExpressRouteCrossConnection:ca,ExpressRouteCircuitReference:ua,ExpressRouteConnection:Na,ExpressRouteCircuitPeeringId:ma,ExpressRouteGateway:Ca,ExpressRouteGatewayPropertiesAutoScaleConfiguration:Pa,ExpressRouteGatewayPropertiesAutoScaleConfigurationBounds:ya,VirtualHubId:da,LoadBalancingRule:Sa,Probe:ga,InboundNatPool:Aa,OutboundRule:Ga,LoadBalancer:ba,LoadBalancerSku:fa,ContainerNetworkInterfaceConfiguration:xa,ContainerNetworkInterface:Ta,Container:Fa,ContainerNetworkInterfaceIpConfiguration:qa,NetworkProfile:La,NetworkWatcher:Oa,ConnectionMonitorResult:Bo,ConnectionMonitorSource:qo,ConnectionMonitorDestination:To,PublicIPPrefix:nn,PublicIPPrefixSku:an,ReferencedPublicIpAddress:on,PatchRouteFilterRule:sn,PatchRouteFilter:pn,BgpServiceCommunity:ln,BGPCommunity:un,VirtualNetworkPeering:yn,AddressSpace:mn,VirtualNetwork:Nn,DhcpOptions:Pn,VirtualNetworkGatewayIPConfiguration:fn,VpnClientRootCertificate:gn,VpnClientRevokedCertificate:An,VirtualNetworkGateway:vn,VirtualNetworkGatewaySku:Sn,VpnClientConfiguration:bn,IpsecPolicy:Gn,BgpSettings:hn,LocalNetworkGateway:xn,VirtualNetworkGatewayConnection:Fn,TunnelConnectionHealth:Vn,ConnectionSharedKey:Tn,VirtualNetworkGatewayConnectionListEntity:On,VirtualNetworkConnectionGatewayReference:Bn,P2SVpnServerConfigVpnClientRootCertificate:Hn,P2SVpnServerConfigVpnClientRevokedCertificate:Un,P2SVpnServerConfigRadiusServerRootCertificate:Wn,P2SVpnServerConfigRadiusClientRootCertificate:_n,P2SVpnServerConfiguration:Kn,VirtualWAN:jn,VpnSite:Qn,DeviceProperties:Zn,HubVirtualNetworkConnection:$n,VirtualHub:es,VirtualHubRouteTable:Yn,VirtualHubRoute:Jn,VpnConnection:ts,VpnGateway:rs,P2SVpnGateway:os,VpnClientConnectionHealth:as}),fC=function(){function e(e){this.client=e}return e.prototype.deleteMethod=function(e,t,r,i){return this.beginDeleteMethod(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.get=function(e,t,r,i,a){return this.client.sendOperationRequest({resourceGroupName:e,virtualNetworkName:t,subnetName:r,options:i},gC,a)},e.prototype.createOrUpdate=function(e,t,r,i,a){return this.beginCreateOrUpdate(e,t,r,i,a).then(function(e){return e.pollUntilFinished()})},e.prototype.list=function(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,virtualNetworkName:t,options:r},AC,i)},e.prototype.beginDeleteMethod=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,virtualNetworkName:t,subnetName:r,options:i},GC,i)},e.prototype.beginCreateOrUpdate=function(e,t,r,i,a){return this.client.sendLRORequest({resourceGroupName:e,virtualNetworkName:t,subnetName:r,subnetParameters:i,options:a},bC,a)},e.prototype.listNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},hC,r)},e}(),SC=new r.Serializer(RC),gC={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}",urlParameters:[Kp,uu,eu,tu],queryParameters:[Pp,kp],headerParameters:[yp],responses:{200:{bodyMapper:Br},default:{bodyMapper:mr}},serializer:SC},AC={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets",urlParameters:[Kp,uu,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:Js},default:{bodyMapper:mr}},serializer:SC},GC={httpMethod:"DELETE",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}",urlParameters:[Kp,uu,eu,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{},202:{},204:{},default:{bodyMapper:mr}},serializer:SC},bC={httpMethod:"PUT",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}",urlParameters:[Kp,uu,eu,tu],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"subnetParameters",mapper:cr({},Br,{required:!0})},responses:{200:{bodyMapper:Br},201:{bodyMapper:Br},default:{bodyMapper:mr}},serializer:SC},hC={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:Js},default:{bodyMapper:mr}},serializer:SC},kC=Object.freeze({CloudError:mr,VirtualNetworkPeering:yn,SubResource:Pr,BaseResource:yr,AddressSpace:mn,VirtualNetworkPeeringListResult:Ys,NetworkInterfaceTapConfiguration:Nr,VirtualNetworkTap:Dr,Resource:Cr,NetworkInterfaceIPConfiguration:Wr,ApplicationGatewayBackendAddressPool:Kr,ApplicationGatewayBackendAddress:_r,BackendAddressPool:Hr,InboundNatRule:Ur,Subnet:Br,NetworkSecurityGroup:Gr,SecurityRule:Rr,ApplicationSecurityGroup:wr,NetworkInterface:Ar,InterfaceEndpoint:Sr,EndpointService:fr,NetworkInterfaceDnsSettings:gr,RouteTable:hr,Route:br,ServiceEndpointPropertiesFormat:kr,ServiceEndpointPolicy:vr,ServiceEndpointPolicyDefinition:zr,IPConfiguration:xr,PublicIPAddress:Vr,PublicIPAddressSku:Ir,PublicIPAddressDnsSettings:Er,IpTag:Mr,IPConfigurationProfile:Fr,ResourceNavigationLink:qr,ServiceAssociationLink:Tr,Delegation:Lr,FrontendIPConfiguration:Or,ApplicationGatewayBackendHttpSettings:Zr,ApplicationGatewayConnectionDraining:jr,ApplicationGatewayIPConfiguration:ti,ApplicationGatewayAuthenticationCertificate:ri,ApplicationGatewayTrustedRootCertificate:ii,ApplicationGatewaySslCertificate:ai,ApplicationGatewayFrontendIPConfiguration:oi,ApplicationGatewayFrontendPort:ni,ApplicationGatewayHttpListener:si,ApplicationGatewayPathRule:pi,ApplicationGatewayProbe:li,ApplicationGatewayProbeHealthResponseMatch:ui,ApplicationGatewayRequestRoutingRule:ci,ApplicationGatewayRedirectConfiguration:di,ApplicationGatewayUrlPathMap:mi,ApplicationGateway:Ci,ApplicationGatewaySku:Yr,ApplicationGatewaySslPolicy:ei,ApplicationGatewayWebApplicationFirewallConfiguration:Pi,ApplicationGatewayFirewallDisabledRuleGroup:yi,ApplicationGatewayAutoscaleConfiguration:Ni,ApplicationGatewayFirewallRuleSet:fi,ApplicationGatewayFirewallRuleGroup:Ri,ApplicationGatewayFirewallRule:wi,ApplicationGatewayAvailableSslOptions:gi,ApplicationGatewaySslPredefinedPolicy:Ai,AzureFirewallIPConfiguration:hi,AzureFirewallApplicationRuleCollection:Ii,AzureFirewallRCAction:ki,AzureFirewallApplicationRule:vi,AzureFirewallApplicationRuleProtocol:zi,AzureFirewallNatRuleCollection:Vi,AzureFirewallNatRCAction:Ei,AzureFirewallNatRule:Mi,AzureFirewallNetworkRuleCollection:Fi,AzureFirewallNetworkRule:xi,AzureFirewall:qi,AzureFirewallFqdnTag:Ti,DdosProtectionPlan:Bi,EndpointServiceResult:Oi,ExpressRouteCircuitAuthorization:Di,RouteFilterRule:Ui,ExpressRouteCircuitConnection:Ki,ExpressRouteCircuitPeering:ji,ExpressRouteCircuitPeeringConfig:Hi,ExpressRouteCircuitStats:Wi,RouteFilter:Zi,Ipv6ExpressRouteCircuitPeeringConfig:Qi,ExpressRouteConnectionId:_i,ExpressRouteCircuit:Ji,ExpressRouteCircuitSku:Xi,ExpressRouteCircuitServiceProviderProperties:$i,ExpressRouteServiceProvider:na,ExpressRouteServiceProviderBandwidthsOffered:oa,ExpressRouteCrossConnectionPeering:la,ExpressRouteCrossConnection:ca,ExpressRouteCircuitReference:ua,ExpressRouteConnection:Na,ExpressRouteCircuitPeeringId:ma,ExpressRouteGateway:Ca,ExpressRouteGatewayPropertiesAutoScaleConfiguration:Pa,ExpressRouteGatewayPropertiesAutoScaleConfigurationBounds:ya,VirtualHubId:da,LoadBalancingRule:Sa,Probe:ga,InboundNatPool:Aa,OutboundRule:Ga,LoadBalancer:ba,LoadBalancerSku:fa,ContainerNetworkInterfaceConfiguration:xa,ContainerNetworkInterface:Ta,Container:Fa,ContainerNetworkInterfaceIpConfiguration:qa,NetworkProfile:La,NetworkWatcher:Oa,ConnectionMonitorResult:Bo,ConnectionMonitorSource:qo,ConnectionMonitorDestination:To,PublicIPPrefix:nn,PublicIPPrefixSku:an,ReferencedPublicIpAddress:on,PatchRouteFilterRule:sn,PatchRouteFilter:pn,BgpServiceCommunity:ln,BGPCommunity:un,VirtualNetwork:Nn,DhcpOptions:Pn,VirtualNetworkGatewayIPConfiguration:fn,VpnClientRootCertificate:gn,VpnClientRevokedCertificate:An,VirtualNetworkGateway:vn,VirtualNetworkGatewaySku:Sn,VpnClientConfiguration:bn,IpsecPolicy:Gn,BgpSettings:hn,LocalNetworkGateway:xn,VirtualNetworkGatewayConnection:Fn,TunnelConnectionHealth:Vn,ConnectionSharedKey:Tn,VirtualNetworkGatewayConnectionListEntity:On,VirtualNetworkConnectionGatewayReference:Bn,P2SVpnServerConfigVpnClientRootCertificate:Hn,P2SVpnServerConfigVpnClientRevokedCertificate:Un,P2SVpnServerConfigRadiusServerRootCertificate:Wn,P2SVpnServerConfigRadiusClientRootCertificate:_n,P2SVpnServerConfiguration:Kn,VirtualWAN:jn,VpnSite:Qn,DeviceProperties:Zn,HubVirtualNetworkConnection:$n,VirtualHub:es,VirtualHubRouteTable:Yn,VirtualHubRoute:Jn,VpnConnection:ts,VpnGateway:rs,P2SVpnGateway:os,VpnClientConnectionHealth:as}),zC=function(){function e(e){this.client=e}return e.prototype.deleteMethod=function(e,t,r,i){return this.beginDeleteMethod(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.get=function(e,t,r,i,a){return this.client.sendOperationRequest({resourceGroupName:e,virtualNetworkName:t,virtualNetworkPeeringName:r,options:i},IC,a)},e.prototype.createOrUpdate=function(e,t,r,i,a){return this.beginCreateOrUpdate(e,t,r,i,a).then(function(e){return e.pollUntilFinished()})},e.prototype.list=function(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,virtualNetworkName:t,options:r},EC,i)},e.prototype.beginDeleteMethod=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,virtualNetworkName:t,virtualNetworkPeeringName:r,options:i},MC,i)},e.prototype.beginCreateOrUpdate=function(e,t,r,i,a){return this.client.sendLRORequest({resourceGroupName:e,virtualNetworkName:t,virtualNetworkPeeringName:r,virtualNetworkPeeringParameters:i,options:a},VC,a)},e.prototype.listNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},xC,r)},e}(),vC=new r.Serializer(kC),IC={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/virtualNetworkPeerings/{virtualNetworkPeeringName}",urlParameters:[Kp,uu,lu,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:yn},default:{bodyMapper:mr}},serializer:vC},EC={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/virtualNetworkPeerings",urlParameters:[Kp,uu,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:Ys},default:{bodyMapper:mr}},serializer:vC},MC={httpMethod:"DELETE",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/virtualNetworkPeerings/{virtualNetworkPeeringName}",urlParameters:[Kp,uu,lu,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{},202:{},204:{},default:{bodyMapper:mr}},serializer:vC},VC={httpMethod:"PUT",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/virtualNetworkPeerings/{virtualNetworkPeeringName}",urlParameters:[Kp,uu,lu,tu],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"virtualNetworkPeeringParameters",mapper:cr({},yn,{required:!0})},responses:{200:{bodyMapper:yn},201:{bodyMapper:yn},default:{bodyMapper:mr}},serializer:vC},xC={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:Ys},default:{bodyMapper:mr}},serializer:vC},FC=Object.freeze({CloudError:mr,VirtualNetworkTap:Dr,Resource:Cr,BaseResource:yr,NetworkInterfaceTapConfiguration:Nr,SubResource:Pr,NetworkInterfaceIPConfiguration:Wr,ApplicationGatewayBackendAddressPool:Kr,ApplicationGatewayBackendAddress:_r,BackendAddressPool:Hr,InboundNatRule:Ur,Subnet:Br,NetworkSecurityGroup:Gr,SecurityRule:Rr,ApplicationSecurityGroup:wr,NetworkInterface:Ar,InterfaceEndpoint:Sr,EndpointService:fr,NetworkInterfaceDnsSettings:gr,RouteTable:hr,Route:br,ServiceEndpointPropertiesFormat:kr,ServiceEndpointPolicy:vr,ServiceEndpointPolicyDefinition:zr,IPConfiguration:xr,PublicIPAddress:Vr,PublicIPAddressSku:Ir,PublicIPAddressDnsSettings:Er,IpTag:Mr,IPConfigurationProfile:Fr,ResourceNavigationLink:qr,ServiceAssociationLink:Tr,Delegation:Lr,FrontendIPConfiguration:Or,TagsObject:Gi,VirtualNetworkTapListResult:ep,ApplicationGatewayBackendHttpSettings:Zr,ApplicationGatewayConnectionDraining:jr,ApplicationGatewayIPConfiguration:ti,ApplicationGatewayAuthenticationCertificate:ri,ApplicationGatewayTrustedRootCertificate:ii,ApplicationGatewaySslCertificate:ai,ApplicationGatewayFrontendIPConfiguration:oi,ApplicationGatewayFrontendPort:ni,ApplicationGatewayHttpListener:si,ApplicationGatewayPathRule:pi,ApplicationGatewayProbe:li,ApplicationGatewayProbeHealthResponseMatch:ui,ApplicationGatewayRequestRoutingRule:ci,ApplicationGatewayRedirectConfiguration:di,ApplicationGatewayUrlPathMap:mi,ApplicationGateway:Ci,ApplicationGatewaySku:Yr,ApplicationGatewaySslPolicy:ei,ApplicationGatewayWebApplicationFirewallConfiguration:Pi,ApplicationGatewayFirewallDisabledRuleGroup:yi,ApplicationGatewayAutoscaleConfiguration:Ni,ApplicationGatewayFirewallRuleSet:fi,ApplicationGatewayFirewallRuleGroup:Ri,ApplicationGatewayFirewallRule:wi,ApplicationGatewayAvailableSslOptions:gi,ApplicationGatewaySslPredefinedPolicy:Ai,AzureFirewallIPConfiguration:hi,AzureFirewallApplicationRuleCollection:Ii,AzureFirewallRCAction:ki,AzureFirewallApplicationRule:vi,AzureFirewallApplicationRuleProtocol:zi,AzureFirewallNatRuleCollection:Vi,AzureFirewallNatRCAction:Ei,AzureFirewallNatRule:Mi,AzureFirewallNetworkRuleCollection:Fi,AzureFirewallNetworkRule:xi,AzureFirewall:qi,AzureFirewallFqdnTag:Ti,DdosProtectionPlan:Bi,EndpointServiceResult:Oi,ExpressRouteCircuitAuthorization:Di,RouteFilterRule:Ui,ExpressRouteCircuitConnection:Ki,ExpressRouteCircuitPeering:ji,ExpressRouteCircuitPeeringConfig:Hi,ExpressRouteCircuitStats:Wi,RouteFilter:Zi,Ipv6ExpressRouteCircuitPeeringConfig:Qi,ExpressRouteConnectionId:_i,ExpressRouteCircuit:Ji,ExpressRouteCircuitSku:Xi,ExpressRouteCircuitServiceProviderProperties:$i,ExpressRouteServiceProvider:na,ExpressRouteServiceProviderBandwidthsOffered:oa,ExpressRouteCrossConnectionPeering:la,ExpressRouteCrossConnection:ca,ExpressRouteCircuitReference:ua,ExpressRouteConnection:Na,ExpressRouteCircuitPeeringId:ma,ExpressRouteGateway:Ca,ExpressRouteGatewayPropertiesAutoScaleConfiguration:Pa,ExpressRouteGatewayPropertiesAutoScaleConfigurationBounds:ya,VirtualHubId:da,LoadBalancingRule:Sa,Probe:ga,InboundNatPool:Aa,OutboundRule:Ga,LoadBalancer:ba,LoadBalancerSku:fa,ContainerNetworkInterfaceConfiguration:xa,ContainerNetworkInterface:Ta,Container:Fa,ContainerNetworkInterfaceIpConfiguration:qa,NetworkProfile:La,NetworkWatcher:Oa,ConnectionMonitorResult:Bo,ConnectionMonitorSource:qo,ConnectionMonitorDestination:To,PublicIPPrefix:nn,PublicIPPrefixSku:an,ReferencedPublicIpAddress:on,PatchRouteFilterRule:sn,PatchRouteFilter:pn,BgpServiceCommunity:ln,BGPCommunity:un,VirtualNetworkPeering:yn,AddressSpace:mn,VirtualNetwork:Nn,DhcpOptions:Pn,VirtualNetworkGatewayIPConfiguration:fn,VpnClientRootCertificate:gn,VpnClientRevokedCertificate:An,VirtualNetworkGateway:vn,VirtualNetworkGatewaySku:Sn,VpnClientConfiguration:bn,IpsecPolicy:Gn,BgpSettings:hn,LocalNetworkGateway:xn,VirtualNetworkGatewayConnection:Fn,TunnelConnectionHealth:Vn,ConnectionSharedKey:Tn,VirtualNetworkGatewayConnectionListEntity:On,VirtualNetworkConnectionGatewayReference:Bn,P2SVpnServerConfigVpnClientRootCertificate:Hn,P2SVpnServerConfigVpnClientRevokedCertificate:Un,P2SVpnServerConfigRadiusServerRootCertificate:Wn,P2SVpnServerConfigRadiusClientRootCertificate:_n,P2SVpnServerConfiguration:Kn,VirtualWAN:jn,VpnSite:Qn,DeviceProperties:Zn,HubVirtualNetworkConnection:$n,VirtualHub:es,VirtualHubRouteTable:Yn,VirtualHubRoute:Jn,VpnConnection:ts,VpnGateway:rs,P2SVpnGateway:os,VpnClientConnectionHealth:as}),qC=function(){function e(e){this.client=e}return e.prototype.deleteMethod=function(e,t,r){return this.beginDeleteMethod(e,t,r).then(function(e){return e.pollUntilFinished()})},e.prototype.get=function(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,tapName:t,options:r},LC,i)},e.prototype.createOrUpdate=function(e,t,r,i){return this.beginCreateOrUpdate(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.updateTags=function(e,t,r,i){return this.beginUpdateTags(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.listAll=function(e,t){return this.client.sendOperationRequest({options:e},BC,t)},e.prototype.listByResourceGroup=function(e,t,r){return this.client.sendOperationRequest({resourceGroupName:e,options:t},OC,r)},e.prototype.beginDeleteMethod=function(e,t,r){return this.client.sendLRORequest({resourceGroupName:e,tapName:t,options:r},DC,r)},e.prototype.beginCreateOrUpdate=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,tapName:t,parameters:r,options:i},HC,i)},e.prototype.beginUpdateTags=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,tapName:t,tapParameters:r,options:i},UC,i)},e.prototype.listAllNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},WC,r)},e.prototype.listByResourceGroupNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},_C,r)},e}(),TC=new r.Serializer(FC),LC={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkTaps/{tapName}",urlParameters:[Kp,iu,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:Dr},default:{bodyMapper:mr}},serializer:TC},BC={httpMethod:"GET",path:"subscriptions/{subscriptionId}/providers/Microsoft.Network/virtualNetworkTaps",urlParameters:[tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:ep},default:{bodyMapper:mr}},serializer:TC},OC={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkTaps",urlParameters:[Kp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:ep},default:{bodyMapper:mr}},serializer:TC},DC={httpMethod:"DELETE",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkTaps/{tapName}",urlParameters:[Kp,iu,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{},202:{},204:{},default:{bodyMapper:mr}},serializer:TC},HC={httpMethod:"PUT",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkTaps/{tapName}",urlParameters:[Kp,iu,tu],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"parameters",mapper:cr({},Dr,{required:!0})},responses:{200:{bodyMapper:Dr},201:{bodyMapper:Dr},default:{bodyMapper:mr}},serializer:TC},UC={httpMethod:"PATCH",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkTaps/{tapName}",urlParameters:[Kp,iu,tu],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"tapParameters",mapper:cr({},Gi,{required:!0})},responses:{200:{bodyMapper:Dr},default:{bodyMapper:mr}},serializer:TC},WC={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:ep},default:{bodyMapper:mr}},serializer:TC},_C={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:ep},default:{bodyMapper:mr}},serializer:TC},KC=Object.freeze({VirtualNetworkGateway:vn,Resource:Cr,BaseResource:yr,VirtualNetworkGatewayIPConfiguration:fn,SubResource:Pr,VirtualNetworkGatewaySku:Sn,VpnClientConfiguration:bn,AddressSpace:mn,VpnClientRootCertificate:gn,VpnClientRevokedCertificate:An,IpsecPolicy:Gn,BgpSettings:hn,CloudError:mr,TagsObject:Gi,VirtualNetworkGatewayListResult:tp,VirtualNetworkGatewayListConnectionsResult:rp,VirtualNetworkGatewayConnectionListEntity:On,VirtualNetworkConnectionGatewayReference:Bn,TunnelConnectionHealth:Vn,VpnClientParameters:In,BgpPeerStatusListResult:En,BgpPeerStatus:kn,GatewayRouteListResult:Mn,GatewayRoute:zn,VpnClientIPsecParameters:Ln,VpnDeviceScriptParameters:Dn,NetworkInterfaceTapConfiguration:Nr,VirtualNetworkTap:Dr,NetworkInterfaceIPConfiguration:Wr,ApplicationGatewayBackendAddressPool:Kr,ApplicationGatewayBackendAddress:_r,BackendAddressPool:Hr,InboundNatRule:Ur,Subnet:Br,NetworkSecurityGroup:Gr,SecurityRule:Rr,ApplicationSecurityGroup:wr,NetworkInterface:Ar,InterfaceEndpoint:Sr,EndpointService:fr,NetworkInterfaceDnsSettings:gr,RouteTable:hr,Route:br,ServiceEndpointPropertiesFormat:kr,ServiceEndpointPolicy:vr,ServiceEndpointPolicyDefinition:zr,IPConfiguration:xr,PublicIPAddress:Vr,PublicIPAddressSku:Ir,PublicIPAddressDnsSettings:Er,IpTag:Mr,IPConfigurationProfile:Fr,ResourceNavigationLink:qr,ServiceAssociationLink:Tr,Delegation:Lr,FrontendIPConfiguration:Or,ApplicationGatewayBackendHttpSettings:Zr,ApplicationGatewayConnectionDraining:jr,ApplicationGatewayIPConfiguration:ti,ApplicationGatewayAuthenticationCertificate:ri,ApplicationGatewayTrustedRootCertificate:ii,ApplicationGatewaySslCertificate:ai,ApplicationGatewayFrontendIPConfiguration:oi,ApplicationGatewayFrontendPort:ni,ApplicationGatewayHttpListener:si,ApplicationGatewayPathRule:pi,ApplicationGatewayProbe:li,ApplicationGatewayProbeHealthResponseMatch:ui,ApplicationGatewayRequestRoutingRule:ci,ApplicationGatewayRedirectConfiguration:di,ApplicationGatewayUrlPathMap:mi,ApplicationGateway:Ci,ApplicationGatewaySku:Yr,ApplicationGatewaySslPolicy:ei,ApplicationGatewayWebApplicationFirewallConfiguration:Pi,ApplicationGatewayFirewallDisabledRuleGroup:yi,ApplicationGatewayAutoscaleConfiguration:Ni,ApplicationGatewayFirewallRuleSet:fi,ApplicationGatewayFirewallRuleGroup:Ri,ApplicationGatewayFirewallRule:wi,ApplicationGatewayAvailableSslOptions:gi,ApplicationGatewaySslPredefinedPolicy:Ai,AzureFirewallIPConfiguration:hi,AzureFirewallApplicationRuleCollection:Ii,AzureFirewallRCAction:ki,AzureFirewallApplicationRule:vi,AzureFirewallApplicationRuleProtocol:zi,AzureFirewallNatRuleCollection:Vi,AzureFirewallNatRCAction:Ei,AzureFirewallNatRule:Mi,AzureFirewallNetworkRuleCollection:Fi,AzureFirewallNetworkRule:xi,AzureFirewall:qi,AzureFirewallFqdnTag:Ti,DdosProtectionPlan:Bi,EndpointServiceResult:Oi,ExpressRouteCircuitAuthorization:Di,RouteFilterRule:Ui,ExpressRouteCircuitConnection:Ki,ExpressRouteCircuitPeering:ji,ExpressRouteCircuitPeeringConfig:Hi,ExpressRouteCircuitStats:Wi,RouteFilter:Zi,Ipv6ExpressRouteCircuitPeeringConfig:Qi,ExpressRouteConnectionId:_i,ExpressRouteCircuit:Ji,ExpressRouteCircuitSku:Xi,ExpressRouteCircuitServiceProviderProperties:$i,ExpressRouteServiceProvider:na,ExpressRouteServiceProviderBandwidthsOffered:oa,ExpressRouteCrossConnectionPeering:la,ExpressRouteCrossConnection:ca,ExpressRouteCircuitReference:ua,ExpressRouteConnection:Na,ExpressRouteCircuitPeeringId:ma,ExpressRouteGateway:Ca,ExpressRouteGatewayPropertiesAutoScaleConfiguration:Pa,ExpressRouteGatewayPropertiesAutoScaleConfigurationBounds:ya,VirtualHubId:da,LoadBalancingRule:Sa,Probe:ga,InboundNatPool:Aa,OutboundRule:Ga,LoadBalancer:ba,LoadBalancerSku:fa,ContainerNetworkInterfaceConfiguration:xa,ContainerNetworkInterface:Ta,Container:Fa,ContainerNetworkInterfaceIpConfiguration:qa,NetworkProfile:La,NetworkWatcher:Oa,ConnectionMonitorResult:Bo,ConnectionMonitorSource:qo,ConnectionMonitorDestination:To,PublicIPPrefix:nn,PublicIPPrefixSku:an,ReferencedPublicIpAddress:on,PatchRouteFilterRule:sn,PatchRouteFilter:pn,BgpServiceCommunity:ln,BGPCommunity:un,VirtualNetworkPeering:yn,VirtualNetwork:Nn,DhcpOptions:Pn,LocalNetworkGateway:xn,VirtualNetworkGatewayConnection:Fn,ConnectionSharedKey:Tn,P2SVpnServerConfigVpnClientRootCertificate:Hn,P2SVpnServerConfigVpnClientRevokedCertificate:Un,P2SVpnServerConfigRadiusServerRootCertificate:Wn,P2SVpnServerConfigRadiusClientRootCertificate:_n,P2SVpnServerConfiguration:Kn,VirtualWAN:jn,VpnSite:Qn,DeviceProperties:Zn,HubVirtualNetworkConnection:$n,VirtualHub:es,VirtualHubRouteTable:Yn,VirtualHubRoute:Jn,VpnConnection:ts,VpnGateway:rs,P2SVpnGateway:os,VpnClientConnectionHealth:as}),jC=function(){function e(e){this.client=e}return e.prototype.createOrUpdate=function(e,t,r,i){return this.beginCreateOrUpdate(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.get=function(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,virtualNetworkGatewayName:t,options:r},QC,i)},e.prototype.deleteMethod=function(e,t,r){return this.beginDeleteMethod(e,t,r).then(function(e){return e.pollUntilFinished()})},e.prototype.updateTags=function(e,t,r,i){return this.beginUpdateTags(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.list=function(e,t,r){return this.client.sendOperationRequest({resourceGroupName:e,options:t},XC,r)},e.prototype.listConnections=function(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,virtualNetworkGatewayName:t,options:r},$C,i)},e.prototype.reset=function(e,t,r){return this.beginReset(e,t,r).then(function(e){return e.pollUntilFinished()})},e.prototype.resetVpnClientSharedKey=function(e,t,r){return this.beginResetVpnClientSharedKey(e,t,r).then(function(e){return e.pollUntilFinished()})},e.prototype.generatevpnclientpackage=function(e,t,r,i){return this.beginGeneratevpnclientpackage(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.generateVpnProfile=function(e,t,r,i){return this.beginGenerateVpnProfile(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.getVpnProfilePackageUrl=function(e,t,r){return this.beginGetVpnProfilePackageUrl(e,t,r).then(function(e){return e.pollUntilFinished()})},e.prototype.getBgpPeerStatus=function(e,t,r){return this.beginGetBgpPeerStatus(e,t,r).then(function(e){return e.pollUntilFinished()})},e.prototype.supportedVpnDevices=function(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,virtualNetworkGatewayName:t,options:r},JC,i)},e.prototype.getLearnedRoutes=function(e,t,r){return this.beginGetLearnedRoutes(e,t,r).then(function(e){return e.pollUntilFinished()})},e.prototype.getAdvertisedRoutes=function(e,t,r,i){return this.beginGetAdvertisedRoutes(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.setVpnclientIpsecParameters=function(e,t,r,i){return this.beginSetVpnclientIpsecParameters(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.getVpnclientIpsecParameters=function(e,t,r){return this.beginGetVpnclientIpsecParameters(e,t,r).then(function(e){return e.pollUntilFinished()})},e.prototype.vpnDeviceConfigurationScript=function(e,t,r,i,a){return this.client.sendOperationRequest({resourceGroupName:e,virtualNetworkGatewayConnectionName:t,parameters:r,options:i},YC,a)},e.prototype.beginCreateOrUpdate=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,virtualNetworkGatewayName:t,parameters:r,options:i},ew,i)},e.prototype.beginDeleteMethod=function(e,t,r){return this.client.sendLRORequest({resourceGroupName:e,virtualNetworkGatewayName:t,options:r},tw,r)},e.prototype.beginUpdateTags=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,virtualNetworkGatewayName:t,parameters:r,options:i},rw,i)},e.prototype.beginReset=function(e,t,r){return this.client.sendLRORequest({resourceGroupName:e,virtualNetworkGatewayName:t,options:r},iw,r)},e.prototype.beginResetVpnClientSharedKey=function(e,t,r){return this.client.sendLRORequest({resourceGroupName:e,virtualNetworkGatewayName:t,options:r},aw,r)},e.prototype.beginGeneratevpnclientpackage=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,virtualNetworkGatewayName:t,parameters:r,options:i},ow,i)},e.prototype.beginGenerateVpnProfile=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,virtualNetworkGatewayName:t,parameters:r,options:i},nw,i)},e.prototype.beginGetVpnProfilePackageUrl=function(e,t,r){return this.client.sendLRORequest({resourceGroupName:e,virtualNetworkGatewayName:t,options:r},sw,r)},e.prototype.beginGetBgpPeerStatus=function(e,t,r){return this.client.sendLRORequest({resourceGroupName:e,virtualNetworkGatewayName:t,options:r},pw,r)},e.prototype.beginGetLearnedRoutes=function(e,t,r){return this.client.sendLRORequest({resourceGroupName:e,virtualNetworkGatewayName:t,options:r},uw,r)},e.prototype.beginGetAdvertisedRoutes=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,virtualNetworkGatewayName:t,peer:r,options:i},lw,i)},e.prototype.beginSetVpnclientIpsecParameters=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,virtualNetworkGatewayName:t,vpnclientIpsecParams:r,options:i},cw,i)},e.prototype.beginGetVpnclientIpsecParameters=function(e,t,r){return this.client.sendLRORequest({resourceGroupName:e,virtualNetworkGatewayName:t,options:r},dw,r)},e.prototype.listNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},mw,r)},e.prototype.listConnectionsNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},yw,r)},e}(),ZC=new r.Serializer(KC),QC={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}",urlParameters:[Kp,pu,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:vn},default:{bodyMapper:mr}},serializer:ZC},XC={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways",urlParameters:[Kp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:tp},default:{bodyMapper:mr}},serializer:ZC},$C={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/connections",urlParameters:[Kp,pu,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:rp},default:{bodyMapper:mr}},serializer:ZC},JC={httpMethod:"POST",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/supportedvpndevices",urlParameters:[Kp,pu,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:{serializedName:"parsedResponse",type:{name:"String"}}},default:{bodyMapper:mr}},serializer:ZC},YC={httpMethod:"POST",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}/vpndeviceconfigurationscript",urlParameters:[Kp,su,tu],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"parameters",mapper:cr({},Dn,{required:!0})},responses:{200:{bodyMapper:{serializedName:"parsedResponse",type:{name:"String"}}},default:{bodyMapper:mr}},serializer:ZC},ew={httpMethod:"PUT",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}",urlParameters:[Kp,pu,tu],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"parameters",mapper:cr({},vn,{required:!0})},responses:{200:{bodyMapper:vn},201:{bodyMapper:vn},default:{bodyMapper:mr}},serializer:ZC},tw={httpMethod:"DELETE",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}",urlParameters:[Kp,pu,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{},202:{},204:{},default:{bodyMapper:mr}},serializer:ZC},rw={httpMethod:"PATCH",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}",urlParameters:[Kp,pu,tu],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"parameters",mapper:cr({},Gi,{required:!0})},responses:{200:{bodyMapper:vn},default:{bodyMapper:mr}},serializer:ZC},iw={httpMethod:"POST",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/reset",urlParameters:[Kp,pu,tu],queryParameters:[{parameterPath:["options","gatewayVip"],mapper:{serializedName:"gatewayVip",type:{name:"String"}}},Pp],headerParameters:[yp],responses:{200:{bodyMapper:vn},202:{},default:{bodyMapper:mr}},serializer:ZC},aw={httpMethod:"POST",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/resetvpnclientsharedkey",urlParameters:[Kp,pu,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{},202:{},default:{bodyMapper:mr}},serializer:ZC},ow={httpMethod:"POST",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/generatevpnclientpackage",urlParameters:[Kp,pu,tu],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"parameters",mapper:cr({},In,{required:!0})},responses:{200:{bodyMapper:{serializedName:"parsedResponse",type:{name:"String"}}},default:{bodyMapper:mr}},serializer:ZC},nw={httpMethod:"POST",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/generatevpnprofile",urlParameters:[Kp,pu,tu],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"parameters",mapper:cr({},In,{required:!0})},responses:{200:{bodyMapper:{serializedName:"parsedResponse",type:{name:"String"}}},202:{},default:{bodyMapper:mr}},serializer:ZC},sw={httpMethod:"POST",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getvpnprofilepackageurl",urlParameters:[Kp,pu,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:{serializedName:"parsedResponse",type:{name:"String"}}},202:{},default:{bodyMapper:mr}},serializer:ZC},pw={httpMethod:"POST",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getBgpPeerStatus",urlParameters:[Kp,pu,tu],queryParameters:[{parameterPath:["options","peer"],mapper:{serializedName:"peer",type:{name:"String"}}},Pp],headerParameters:[yp],responses:{200:{bodyMapper:En},202:{},default:{bodyMapper:mr}},serializer:ZC},uw={httpMethod:"POST",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getLearnedRoutes",urlParameters:[Kp,pu,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:Mn},202:{},default:{bodyMapper:mr}},serializer:ZC},lw={httpMethod:"POST",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getAdvertisedRoutes",urlParameters:[Kp,pu,tu],queryParameters:[{parameterPath:"peer",mapper:{required:!0,serializedName:"peer",type:{name:"String"}}},Pp],headerParameters:[yp],responses:{200:{bodyMapper:Mn},202:{},default:{bodyMapper:mr}},serializer:ZC},cw={httpMethod:"POST",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/setvpnclientipsecparameters",urlParameters:[Kp,pu,tu],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"vpnclientIpsecParams",mapper:cr({},Ln,{required:!0})},responses:{200:{bodyMapper:Ln},202:{},default:{bodyMapper:mr}},serializer:ZC},dw={httpMethod:"POST",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getvpnclientipsecparameters",urlParameters:[Kp,pu,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:Ln},default:{bodyMapper:mr}},serializer:ZC},mw={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:tp},default:{bodyMapper:mr}},serializer:ZC},yw={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:rp},default:{bodyMapper:mr}},serializer:ZC},Pw=Object.freeze({VirtualNetworkGatewayConnection:Fn,Resource:Cr,BaseResource:yr,VirtualNetworkGateway:vn,VirtualNetworkGatewayIPConfiguration:fn,SubResource:Pr,VirtualNetworkGatewaySku:Sn,VpnClientConfiguration:bn,AddressSpace:mn,VpnClientRootCertificate:gn,VpnClientRevokedCertificate:An,IpsecPolicy:Gn,BgpSettings:hn,LocalNetworkGateway:xn,TunnelConnectionHealth:Vn,CloudError:mr,TagsObject:Gi,ConnectionSharedKey:Tn,VirtualNetworkGatewayConnectionListResult:ip,ConnectionResetSharedKey:qn,NetworkInterfaceTapConfiguration:Nr,VirtualNetworkTap:Dr,NetworkInterfaceIPConfiguration:Wr,ApplicationGatewayBackendAddressPool:Kr,ApplicationGatewayBackendAddress:_r,BackendAddressPool:Hr,InboundNatRule:Ur,Subnet:Br,NetworkSecurityGroup:Gr,SecurityRule:Rr,ApplicationSecurityGroup:wr,NetworkInterface:Ar,InterfaceEndpoint:Sr,EndpointService:fr,NetworkInterfaceDnsSettings:gr,RouteTable:hr,Route:br,ServiceEndpointPropertiesFormat:kr,ServiceEndpointPolicy:vr,ServiceEndpointPolicyDefinition:zr,IPConfiguration:xr,PublicIPAddress:Vr,PublicIPAddressSku:Ir,PublicIPAddressDnsSettings:Er,IpTag:Mr,IPConfigurationProfile:Fr,ResourceNavigationLink:qr,ServiceAssociationLink:Tr,Delegation:Lr,FrontendIPConfiguration:Or,ApplicationGatewayBackendHttpSettings:Zr,ApplicationGatewayConnectionDraining:jr,ApplicationGatewayIPConfiguration:ti,ApplicationGatewayAuthenticationCertificate:ri,ApplicationGatewayTrustedRootCertificate:ii,ApplicationGatewaySslCertificate:ai,ApplicationGatewayFrontendIPConfiguration:oi,ApplicationGatewayFrontendPort:ni,ApplicationGatewayHttpListener:si,ApplicationGatewayPathRule:pi,ApplicationGatewayProbe:li,ApplicationGatewayProbeHealthResponseMatch:ui,ApplicationGatewayRequestRoutingRule:ci,ApplicationGatewayRedirectConfiguration:di,ApplicationGatewayUrlPathMap:mi,ApplicationGateway:Ci,ApplicationGatewaySku:Yr,ApplicationGatewaySslPolicy:ei,ApplicationGatewayWebApplicationFirewallConfiguration:Pi,ApplicationGatewayFirewallDisabledRuleGroup:yi,ApplicationGatewayAutoscaleConfiguration:Ni,ApplicationGatewayFirewallRuleSet:fi,ApplicationGatewayFirewallRuleGroup:Ri,ApplicationGatewayFirewallRule:wi,ApplicationGatewayAvailableSslOptions:gi,ApplicationGatewaySslPredefinedPolicy:Ai,AzureFirewallIPConfiguration:hi,AzureFirewallApplicationRuleCollection:Ii,AzureFirewallRCAction:ki,AzureFirewallApplicationRule:vi,AzureFirewallApplicationRuleProtocol:zi,AzureFirewallNatRuleCollection:Vi,AzureFirewallNatRCAction:Ei,AzureFirewallNatRule:Mi,AzureFirewallNetworkRuleCollection:Fi,AzureFirewallNetworkRule:xi,AzureFirewall:qi,AzureFirewallFqdnTag:Ti,DdosProtectionPlan:Bi,EndpointServiceResult:Oi,ExpressRouteCircuitAuthorization:Di,RouteFilterRule:Ui,ExpressRouteCircuitConnection:Ki,ExpressRouteCircuitPeering:ji,ExpressRouteCircuitPeeringConfig:Hi,ExpressRouteCircuitStats:Wi,RouteFilter:Zi,Ipv6ExpressRouteCircuitPeeringConfig:Qi,ExpressRouteConnectionId:_i,ExpressRouteCircuit:Ji,ExpressRouteCircuitSku:Xi,ExpressRouteCircuitServiceProviderProperties:$i,ExpressRouteServiceProvider:na,ExpressRouteServiceProviderBandwidthsOffered:oa,ExpressRouteCrossConnectionPeering:la,ExpressRouteCrossConnection:ca,ExpressRouteCircuitReference:ua,ExpressRouteConnection:Na,ExpressRouteCircuitPeeringId:ma,ExpressRouteGateway:Ca,ExpressRouteGatewayPropertiesAutoScaleConfiguration:Pa,ExpressRouteGatewayPropertiesAutoScaleConfigurationBounds:ya,VirtualHubId:da,LoadBalancingRule:Sa,Probe:ga,InboundNatPool:Aa,OutboundRule:Ga,LoadBalancer:ba,LoadBalancerSku:fa,ContainerNetworkInterfaceConfiguration:xa,ContainerNetworkInterface:Ta,Container:Fa,ContainerNetworkInterfaceIpConfiguration:qa,NetworkProfile:La,NetworkWatcher:Oa,ConnectionMonitorResult:Bo,ConnectionMonitorSource:qo,ConnectionMonitorDestination:To,PublicIPPrefix:nn,PublicIPPrefixSku:an,ReferencedPublicIpAddress:on,PatchRouteFilterRule:sn,PatchRouteFilter:pn,BgpServiceCommunity:ln,BGPCommunity:un,VirtualNetworkPeering:yn,VirtualNetwork:Nn,DhcpOptions:Pn,VirtualNetworkGatewayConnectionListEntity:On,VirtualNetworkConnectionGatewayReference:Bn,P2SVpnServerConfigVpnClientRootCertificate:Hn,P2SVpnServerConfigVpnClientRevokedCertificate:Un,P2SVpnServerConfigRadiusServerRootCertificate:Wn,P2SVpnServerConfigRadiusClientRootCertificate:_n,P2SVpnServerConfiguration:Kn,VirtualWAN:jn,VpnSite:Qn,DeviceProperties:Zn,HubVirtualNetworkConnection:$n,VirtualHub:es,VirtualHubRouteTable:Yn,VirtualHubRoute:Jn,VpnConnection:ts,VpnGateway:rs,P2SVpnGateway:os,VpnClientConnectionHealth:as}),Nw=function(){function e(e){this.client=e}return e.prototype.createOrUpdate=function(e,t,r,i){return this.beginCreateOrUpdate(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.get=function(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,virtualNetworkGatewayConnectionName:t,options:r},ww,i)},e.prototype.deleteMethod=function(e,t,r){return this.beginDeleteMethod(e,t,r).then(function(e){return e.pollUntilFinished()})},e.prototype.updateTags=function(e,t,r,i){return this.beginUpdateTags(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.setSharedKey=function(e,t,r,i){return this.beginSetSharedKey(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.getSharedKey=function(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,virtualNetworkGatewayConnectionName:t,options:r},Rw,i)},e.prototype.list=function(e,t,r){return this.client.sendOperationRequest({resourceGroupName:e,options:t},fw,r)},e.prototype.resetSharedKey=function(e,t,r,i){return this.beginResetSharedKey(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.beginCreateOrUpdate=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,virtualNetworkGatewayConnectionName:t,parameters:r,options:i},Sw,i)},e.prototype.beginDeleteMethod=function(e,t,r){return this.client.sendLRORequest({resourceGroupName:e,virtualNetworkGatewayConnectionName:t,options:r},gw,r)},e.prototype.beginUpdateTags=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,virtualNetworkGatewayConnectionName:t,parameters:r,options:i},Aw,i)},e.prototype.beginSetSharedKey=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,virtualNetworkGatewayConnectionName:t,parameters:r,options:i},Gw,i)},e.prototype.beginResetSharedKey=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,virtualNetworkGatewayConnectionName:t,parameters:r,options:i},bw,i)},e.prototype.listNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},hw,r)},e}(),Cw=new r.Serializer(Pw),ww={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}",urlParameters:[Kp,su,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:Fn},default:{bodyMapper:mr}},serializer:Cw},Rw={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}/sharedkey",urlParameters:[Kp,su,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:Tn},default:{bodyMapper:mr}},serializer:Cw},fw={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections",urlParameters:[Kp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:ip},default:{bodyMapper:mr}},serializer:Cw},Sw={httpMethod:"PUT",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}",urlParameters:[Kp,su,tu],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"parameters",mapper:cr({},Fn,{required:!0})},responses:{200:{bodyMapper:Fn},201:{bodyMapper:Fn},default:{bodyMapper:mr}},serializer:Cw},gw={httpMethod:"DELETE",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}",urlParameters:[Kp,su,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{},202:{},204:{},default:{bodyMapper:mr}},serializer:Cw},Aw={httpMethod:"PATCH",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}",urlParameters:[Kp,su,tu],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"parameters",mapper:cr({},Gi,{required:!0})},responses:{200:{bodyMapper:Fn},default:{bodyMapper:mr}},serializer:Cw},Gw={httpMethod:"PUT",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}/sharedkey",urlParameters:[Kp,su,tu],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"parameters",mapper:cr({},Tn,{required:!0})},responses:{200:{bodyMapper:Tn},201:{bodyMapper:Tn},default:{bodyMapper:mr}},serializer:Cw},bw={httpMethod:"POST",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}/sharedkey/reset",urlParameters:[Kp,su,tu],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"parameters",mapper:cr({},qn,{required:!0})},responses:{200:{bodyMapper:qn},202:{},default:{bodyMapper:mr}},serializer:Cw},hw={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:ip},default:{bodyMapper:mr}},serializer:Cw},kw=Object.freeze({LocalNetworkGateway:xn,Resource:Cr,BaseResource:yr,AddressSpace:mn,BgpSettings:hn,CloudError:mr,TagsObject:Gi,LocalNetworkGatewayListResult:ap,SubResource:Pr,ApplicationSecurityGroup:wr,SecurityRule:Rr,InterfaceEndpoint:Sr,EndpointService:fr,Subnet:Br,NetworkSecurityGroup:Gr,NetworkInterface:Ar,NetworkInterfaceIPConfiguration:Wr,VirtualNetworkTap:Dr,NetworkInterfaceTapConfiguration:Nr,FrontendIPConfiguration:Or,PublicIPAddress:Vr,PublicIPAddressSku:Ir,IPConfiguration:xr,PublicIPAddressDnsSettings:Er,IpTag:Mr,ApplicationGatewayBackendAddressPool:Kr,ApplicationGatewayBackendAddress:_r,BackendAddressPool:Hr,InboundNatRule:Ur,NetworkInterfaceDnsSettings:gr,RouteTable:hr,Route:br,ServiceEndpointPropertiesFormat:kr,ServiceEndpointPolicy:vr,ServiceEndpointPolicyDefinition:zr,IPConfigurationProfile:Fr,ResourceNavigationLink:qr,ServiceAssociationLink:Tr,Delegation:Lr,ApplicationGatewayBackendHttpSettings:Zr,ApplicationGatewayConnectionDraining:jr,ApplicationGatewayIPConfiguration:ti,ApplicationGatewayAuthenticationCertificate:ri,ApplicationGatewayTrustedRootCertificate:ii,ApplicationGatewaySslCertificate:ai,ApplicationGatewayFrontendIPConfiguration:oi,ApplicationGatewayFrontendPort:ni,ApplicationGatewayHttpListener:si,ApplicationGatewayPathRule:pi,ApplicationGatewayProbe:li,ApplicationGatewayProbeHealthResponseMatch:ui,ApplicationGatewayRequestRoutingRule:ci,ApplicationGatewayRedirectConfiguration:di,ApplicationGatewayUrlPathMap:mi,ApplicationGateway:Ci,ApplicationGatewaySku:Yr,ApplicationGatewaySslPolicy:ei,ApplicationGatewayWebApplicationFirewallConfiguration:Pi,ApplicationGatewayFirewallDisabledRuleGroup:yi,ApplicationGatewayAutoscaleConfiguration:Ni,ApplicationGatewayFirewallRuleSet:fi,ApplicationGatewayFirewallRuleGroup:Ri,ApplicationGatewayFirewallRule:wi,ApplicationGatewayAvailableSslOptions:gi,ApplicationGatewaySslPredefinedPolicy:Ai,AzureFirewallIPConfiguration:hi,AzureFirewallApplicationRuleCollection:Ii,AzureFirewallRCAction:ki,AzureFirewallApplicationRule:vi,AzureFirewallApplicationRuleProtocol:zi,AzureFirewallNatRuleCollection:Vi,AzureFirewallNatRCAction:Ei,AzureFirewallNatRule:Mi,AzureFirewallNetworkRuleCollection:Fi,AzureFirewallNetworkRule:xi,AzureFirewall:qi,AzureFirewallFqdnTag:Ti,DdosProtectionPlan:Bi,EndpointServiceResult:Oi,ExpressRouteCircuitAuthorization:Di,RouteFilterRule:Ui,ExpressRouteCircuitConnection:Ki,ExpressRouteCircuitPeering:ji,ExpressRouteCircuitPeeringConfig:Hi,ExpressRouteCircuitStats:Wi,RouteFilter:Zi,Ipv6ExpressRouteCircuitPeeringConfig:Qi,ExpressRouteConnectionId:_i,ExpressRouteCircuit:Ji,ExpressRouteCircuitSku:Xi,ExpressRouteCircuitServiceProviderProperties:$i,ExpressRouteServiceProvider:na,ExpressRouteServiceProviderBandwidthsOffered:oa,ExpressRouteCrossConnectionPeering:la,ExpressRouteCrossConnection:ca,ExpressRouteCircuitReference:ua,ExpressRouteConnection:Na,ExpressRouteCircuitPeeringId:ma,ExpressRouteGateway:Ca,ExpressRouteGatewayPropertiesAutoScaleConfiguration:Pa,ExpressRouteGatewayPropertiesAutoScaleConfigurationBounds:ya,VirtualHubId:da,LoadBalancingRule:Sa,Probe:ga,InboundNatPool:Aa,OutboundRule:Ga,LoadBalancer:ba,LoadBalancerSku:fa,ContainerNetworkInterfaceConfiguration:xa,ContainerNetworkInterface:Ta,Container:Fa,ContainerNetworkInterfaceIpConfiguration:qa,NetworkProfile:La,NetworkWatcher:Oa,ConnectionMonitorResult:Bo,ConnectionMonitorSource:qo,ConnectionMonitorDestination:To,PublicIPPrefix:nn,PublicIPPrefixSku:an,ReferencedPublicIpAddress:on,PatchRouteFilterRule:sn,PatchRouteFilter:pn,BgpServiceCommunity:ln,BGPCommunity:un,VirtualNetworkPeering:yn,VirtualNetwork:Nn,DhcpOptions:Pn,VirtualNetworkGatewayIPConfiguration:fn,VpnClientRootCertificate:gn,VpnClientRevokedCertificate:An,VirtualNetworkGateway:vn,VirtualNetworkGatewaySku:Sn,VpnClientConfiguration:bn,IpsecPolicy:Gn,VirtualNetworkGatewayConnection:Fn,TunnelConnectionHealth:Vn,ConnectionSharedKey:Tn,VirtualNetworkGatewayConnectionListEntity:On,VirtualNetworkConnectionGatewayReference:Bn,P2SVpnServerConfigVpnClientRootCertificate:Hn,P2SVpnServerConfigVpnClientRevokedCertificate:Un,P2SVpnServerConfigRadiusServerRootCertificate:Wn,P2SVpnServerConfigRadiusClientRootCertificate:_n,P2SVpnServerConfiguration:Kn,VirtualWAN:jn,VpnSite:Qn,DeviceProperties:Zn,HubVirtualNetworkConnection:$n,VirtualHub:es,VirtualHubRouteTable:Yn,VirtualHubRoute:Jn,VpnConnection:ts,VpnGateway:rs,P2SVpnGateway:os,VpnClientConnectionHealth:as}),zw=function(){function e(e){this.client=e}return e.prototype.createOrUpdate=function(e,t,r,i){return this.beginCreateOrUpdate(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.get=function(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,localNetworkGatewayName:t,options:r},Iw,i)},e.prototype.deleteMethod=function(e,t,r){return this.beginDeleteMethod(e,t,r).then(function(e){return e.pollUntilFinished()})},e.prototype.updateTags=function(e,t,r,i){return this.beginUpdateTags(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.list=function(e,t,r){return this.client.sendOperationRequest({resourceGroupName:e,options:t},Ew,r)},e.prototype.beginCreateOrUpdate=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,localNetworkGatewayName:t,parameters:r,options:i},Mw,i)},e.prototype.beginDeleteMethod=function(e,t,r){return this.client.sendLRORequest({resourceGroupName:e,localNetworkGatewayName:t,options:r},Vw,r)},e.prototype.beginUpdateTags=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,localNetworkGatewayName:t,parameters:r,options:i},xw,i)},e.prototype.listNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},Fw,r)},e}(),vw=new r.Serializer(kw),Iw={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/localNetworkGateways/{localNetworkGatewayName}",urlParameters:[Kp,xp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:xn},default:{bodyMapper:mr}},serializer:vw},Ew={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/localNetworkGateways",urlParameters:[Kp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:ap},default:{bodyMapper:mr}},serializer:vw},Mw={httpMethod:"PUT",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/localNetworkGateways/{localNetworkGatewayName}",urlParameters:[Kp,xp,tu],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"parameters",mapper:cr({},xn,{required:!0})},responses:{200:{bodyMapper:xn},201:{bodyMapper:xn},default:{bodyMapper:mr}},serializer:vw},Vw={httpMethod:"DELETE",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/localNetworkGateways/{localNetworkGatewayName}",urlParameters:[Kp,xp,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{},202:{},204:{},default:{bodyMapper:mr}},serializer:vw},xw={httpMethod:"PATCH",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/localNetworkGateways/{localNetworkGatewayName}",urlParameters:[Kp,xp,tu],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"parameters",mapper:cr({},Gi,{required:!0})},responses:{200:{bodyMapper:xn},default:{bodyMapper:mr}},serializer:vw},Fw={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:ap},default:{bodyMapper:mr}},serializer:vw},qw=Object.freeze({VirtualWAN:jn,Resource:Cr,BaseResource:yr,SubResource:Pr,P2SVpnServerConfiguration:Kn,P2SVpnServerConfigVpnClientRootCertificate:Hn,P2SVpnServerConfigVpnClientRevokedCertificate:Un,P2SVpnServerConfigRadiusServerRootCertificate:Wn,P2SVpnServerConfigRadiusClientRootCertificate:_n,IpsecPolicy:Gn,ErrorModel:ka,ErrorDetails:ha,TagsObject:Gi,ListVirtualWANsResult:op,NetworkInterfaceTapConfiguration:Nr,VirtualNetworkTap:Dr,NetworkInterfaceIPConfiguration:Wr,ApplicationGatewayBackendAddressPool:Kr,ApplicationGatewayBackendAddress:_r,BackendAddressPool:Hr,InboundNatRule:Ur,Subnet:Br,NetworkSecurityGroup:Gr,SecurityRule:Rr,ApplicationSecurityGroup:wr,NetworkInterface:Ar,InterfaceEndpoint:Sr,EndpointService:fr,NetworkInterfaceDnsSettings:gr,RouteTable:hr,Route:br,ServiceEndpointPropertiesFormat:kr,ServiceEndpointPolicy:vr,ServiceEndpointPolicyDefinition:zr,IPConfiguration:xr,PublicIPAddress:Vr,PublicIPAddressSku:Ir,PublicIPAddressDnsSettings:Er,IpTag:Mr,IPConfigurationProfile:Fr,ResourceNavigationLink:qr,ServiceAssociationLink:Tr,Delegation:Lr,FrontendIPConfiguration:Or,ApplicationGatewayBackendHttpSettings:Zr,ApplicationGatewayConnectionDraining:jr,ApplicationGatewayIPConfiguration:ti,ApplicationGatewayAuthenticationCertificate:ri,ApplicationGatewayTrustedRootCertificate:ii,ApplicationGatewaySslCertificate:ai,ApplicationGatewayFrontendIPConfiguration:oi,ApplicationGatewayFrontendPort:ni,ApplicationGatewayHttpListener:si,ApplicationGatewayPathRule:pi,ApplicationGatewayProbe:li,ApplicationGatewayProbeHealthResponseMatch:ui,ApplicationGatewayRequestRoutingRule:ci,ApplicationGatewayRedirectConfiguration:di,ApplicationGatewayUrlPathMap:mi,ApplicationGateway:Ci,ApplicationGatewaySku:Yr,ApplicationGatewaySslPolicy:ei,ApplicationGatewayWebApplicationFirewallConfiguration:Pi,ApplicationGatewayFirewallDisabledRuleGroup:yi,ApplicationGatewayAutoscaleConfiguration:Ni,ApplicationGatewayFirewallRuleSet:fi,ApplicationGatewayFirewallRuleGroup:Ri,ApplicationGatewayFirewallRule:wi,ApplicationGatewayAvailableSslOptions:gi,ApplicationGatewaySslPredefinedPolicy:Ai,AzureFirewallIPConfiguration:hi,AzureFirewallApplicationRuleCollection:Ii,AzureFirewallRCAction:ki,AzureFirewallApplicationRule:vi,AzureFirewallApplicationRuleProtocol:zi,AzureFirewallNatRuleCollection:Vi,AzureFirewallNatRCAction:Ei,AzureFirewallNatRule:Mi,AzureFirewallNetworkRuleCollection:Fi,AzureFirewallNetworkRule:xi,AzureFirewall:qi,AzureFirewallFqdnTag:Ti,DdosProtectionPlan:Bi,EndpointServiceResult:Oi,ExpressRouteCircuitAuthorization:Di,RouteFilterRule:Ui,ExpressRouteCircuitConnection:Ki,ExpressRouteCircuitPeering:ji,ExpressRouteCircuitPeeringConfig:Hi,ExpressRouteCircuitStats:Wi,RouteFilter:Zi,Ipv6ExpressRouteCircuitPeeringConfig:Qi,ExpressRouteConnectionId:_i,ExpressRouteCircuit:Ji,ExpressRouteCircuitSku:Xi,ExpressRouteCircuitServiceProviderProperties:$i,ExpressRouteServiceProvider:na,ExpressRouteServiceProviderBandwidthsOffered:oa,ExpressRouteCrossConnectionPeering:la,ExpressRouteCrossConnection:ca,ExpressRouteCircuitReference:ua,ExpressRouteConnection:Na,ExpressRouteCircuitPeeringId:ma,ExpressRouteGateway:Ca,ExpressRouteGatewayPropertiesAutoScaleConfiguration:Pa,ExpressRouteGatewayPropertiesAutoScaleConfigurationBounds:ya,VirtualHubId:da,LoadBalancingRule:Sa,Probe:ga,InboundNatPool:Aa,OutboundRule:Ga,LoadBalancer:ba,LoadBalancerSku:fa,ContainerNetworkInterfaceConfiguration:xa,ContainerNetworkInterface:Ta,Container:Fa,ContainerNetworkInterfaceIpConfiguration:qa,NetworkProfile:La,NetworkWatcher:Oa,ConnectionMonitorResult:Bo,ConnectionMonitorSource:qo,ConnectionMonitorDestination:To,PublicIPPrefix:nn,PublicIPPrefixSku:an,ReferencedPublicIpAddress:on,PatchRouteFilterRule:sn,PatchRouteFilter:pn,BgpServiceCommunity:ln,BGPCommunity:un,VirtualNetworkPeering:yn,AddressSpace:mn,VirtualNetwork:Nn,DhcpOptions:Pn,VirtualNetworkGatewayIPConfiguration:fn,VpnClientRootCertificate:gn,VpnClientRevokedCertificate:An,VirtualNetworkGateway:vn,VirtualNetworkGatewaySku:Sn,VpnClientConfiguration:bn,BgpSettings:hn,LocalNetworkGateway:xn,VirtualNetworkGatewayConnection:Fn,TunnelConnectionHealth:Vn,ConnectionSharedKey:Tn,VirtualNetworkGatewayConnectionListEntity:On,VirtualNetworkConnectionGatewayReference:Bn,VpnSite:Qn,DeviceProperties:Zn,HubVirtualNetworkConnection:$n,VirtualHub:es,VirtualHubRouteTable:Yn,VirtualHubRoute:Jn,VpnConnection:ts,VpnGateway:rs,P2SVpnGateway:os,VpnClientConnectionHealth:as}),Tw=function(){function e(e){this.client=e}return e.prototype.get=function(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,virtualWANName:t,options:r},Bw,i)},e.prototype.createOrUpdate=function(e,t,r,i){return this.beginCreateOrUpdate(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.updateTags=function(e,t,r,i){return this.beginUpdateTags(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.deleteMethod=function(e,t,r){return this.beginDeleteMethod(e,t,r).then(function(e){return e.pollUntilFinished()})},e.prototype.listByResourceGroup=function(e,t,r){return this.client.sendOperationRequest({resourceGroupName:e,options:t},Ow,r)},e.prototype.list=function(e,t){return this.client.sendOperationRequest({options:e},Dw,t)},e.prototype.beginCreateOrUpdate=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,virtualWANName:t,wANParameters:r,options:i},Hw,i)},e.prototype.beginUpdateTags=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,virtualWANName:t,wANParameters:r,options:i},Uw,i)},e.prototype.beginDeleteMethod=function(e,t,r){return this.client.sendLRORequest({resourceGroupName:e,virtualWANName:t,options:r},Ww,r)},e.prototype.listByResourceGroupNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},_w,r)},e.prototype.listNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},Kw,r)},e}(),Lw=new r.Serializer(qw),Bw={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualWans/{VirtualWANName}",urlParameters:[Kp,mu,tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:jn},default:{bodyMapper:ka}},serializer:Lw},Ow={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualWans",urlParameters:[tu,Kp],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:op},default:{bodyMapper:ka}},serializer:Lw},Dw={httpMethod:"GET",path:"subscriptions/{subscriptionId}/providers/Microsoft.Network/virtualWans",urlParameters:[tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:op},default:{bodyMapper:ka}},serializer:Lw},Hw={httpMethod:"PUT",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualWans/{VirtualWANName}",urlParameters:[tu,Kp,mu],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"wANParameters",mapper:cr({},jn,{required:!0})},responses:{200:{bodyMapper:jn},201:{bodyMapper:jn},default:{bodyMapper:ka}},serializer:Lw},Uw={httpMethod:"PATCH",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualWans/{VirtualWANName}",urlParameters:[tu,Kp,mu],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"wANParameters",mapper:cr({},Gi,{required:!0})},responses:{200:{bodyMapper:jn},201:{bodyMapper:jn},default:{bodyMapper:ka}},serializer:Lw},Ww={httpMethod:"DELETE",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualWans/{VirtualWANName}",urlParameters:[tu,Kp,mu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{},202:{},204:{},default:{bodyMapper:ka}},serializer:Lw},_w={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:op},default:{bodyMapper:ka}},serializer:Lw},Kw={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:op},default:{bodyMapper:ka}},serializer:Lw},jw=Object.freeze({VpnSite:Qn,Resource:Cr,BaseResource:yr,SubResource:Pr,DeviceProperties:Zn,AddressSpace:mn,BgpSettings:hn,ErrorModel:ka,ErrorDetails:ha,TagsObject:Gi,ListVpnSitesResult:np,NetworkInterfaceTapConfiguration:Nr,VirtualNetworkTap:Dr,NetworkInterfaceIPConfiguration:Wr,ApplicationGatewayBackendAddressPool:Kr,ApplicationGatewayBackendAddress:_r,BackendAddressPool:Hr,InboundNatRule:Ur,Subnet:Br,NetworkSecurityGroup:Gr,SecurityRule:Rr,ApplicationSecurityGroup:wr,NetworkInterface:Ar,InterfaceEndpoint:Sr,EndpointService:fr,NetworkInterfaceDnsSettings:gr,RouteTable:hr,Route:br,ServiceEndpointPropertiesFormat:kr,ServiceEndpointPolicy:vr,ServiceEndpointPolicyDefinition:zr,IPConfiguration:xr,PublicIPAddress:Vr,PublicIPAddressSku:Ir,PublicIPAddressDnsSettings:Er,IpTag:Mr,IPConfigurationProfile:Fr,ResourceNavigationLink:qr,ServiceAssociationLink:Tr,Delegation:Lr,FrontendIPConfiguration:Or,ApplicationGatewayBackendHttpSettings:Zr,ApplicationGatewayConnectionDraining:jr,ApplicationGatewayIPConfiguration:ti,ApplicationGatewayAuthenticationCertificate:ri,ApplicationGatewayTrustedRootCertificate:ii,ApplicationGatewaySslCertificate:ai,ApplicationGatewayFrontendIPConfiguration:oi,ApplicationGatewayFrontendPort:ni,ApplicationGatewayHttpListener:si,ApplicationGatewayPathRule:pi,ApplicationGatewayProbe:li,ApplicationGatewayProbeHealthResponseMatch:ui,ApplicationGatewayRequestRoutingRule:ci,ApplicationGatewayRedirectConfiguration:di,ApplicationGatewayUrlPathMap:mi,ApplicationGateway:Ci,ApplicationGatewaySku:Yr,ApplicationGatewaySslPolicy:ei,ApplicationGatewayWebApplicationFirewallConfiguration:Pi,ApplicationGatewayFirewallDisabledRuleGroup:yi,ApplicationGatewayAutoscaleConfiguration:Ni,ApplicationGatewayFirewallRuleSet:fi,ApplicationGatewayFirewallRuleGroup:Ri,ApplicationGatewayFirewallRule:wi,ApplicationGatewayAvailableSslOptions:gi,ApplicationGatewaySslPredefinedPolicy:Ai,AzureFirewallIPConfiguration:hi,AzureFirewallApplicationRuleCollection:Ii,AzureFirewallRCAction:ki,AzureFirewallApplicationRule:vi,AzureFirewallApplicationRuleProtocol:zi,AzureFirewallNatRuleCollection:Vi,AzureFirewallNatRCAction:Ei,AzureFirewallNatRule:Mi,AzureFirewallNetworkRuleCollection:Fi,AzureFirewallNetworkRule:xi,AzureFirewall:qi,AzureFirewallFqdnTag:Ti,DdosProtectionPlan:Bi,EndpointServiceResult:Oi,ExpressRouteCircuitAuthorization:Di,RouteFilterRule:Ui,ExpressRouteCircuitConnection:Ki,ExpressRouteCircuitPeering:ji,ExpressRouteCircuitPeeringConfig:Hi,ExpressRouteCircuitStats:Wi,RouteFilter:Zi,Ipv6ExpressRouteCircuitPeeringConfig:Qi,ExpressRouteConnectionId:_i,ExpressRouteCircuit:Ji,ExpressRouteCircuitSku:Xi,ExpressRouteCircuitServiceProviderProperties:$i,ExpressRouteServiceProvider:na,ExpressRouteServiceProviderBandwidthsOffered:oa,ExpressRouteCrossConnectionPeering:la,ExpressRouteCrossConnection:ca,ExpressRouteCircuitReference:ua,ExpressRouteConnection:Na,ExpressRouteCircuitPeeringId:ma,ExpressRouteGateway:Ca,ExpressRouteGatewayPropertiesAutoScaleConfiguration:Pa,ExpressRouteGatewayPropertiesAutoScaleConfigurationBounds:ya,VirtualHubId:da,LoadBalancingRule:Sa,Probe:ga,InboundNatPool:Aa,OutboundRule:Ga,LoadBalancer:ba,LoadBalancerSku:fa,ContainerNetworkInterfaceConfiguration:xa,ContainerNetworkInterface:Ta,Container:Fa,ContainerNetworkInterfaceIpConfiguration:qa,NetworkProfile:La,NetworkWatcher:Oa,ConnectionMonitorResult:Bo,ConnectionMonitorSource:qo,ConnectionMonitorDestination:To,PublicIPPrefix:nn,PublicIPPrefixSku:an,ReferencedPublicIpAddress:on,PatchRouteFilterRule:sn,PatchRouteFilter:pn,BgpServiceCommunity:ln,BGPCommunity:un,VirtualNetworkPeering:yn,VirtualNetwork:Nn,DhcpOptions:Pn,VirtualNetworkGatewayIPConfiguration:fn,VpnClientRootCertificate:gn,VpnClientRevokedCertificate:An,VirtualNetworkGateway:vn,VirtualNetworkGatewaySku:Sn,VpnClientConfiguration:bn,IpsecPolicy:Gn,LocalNetworkGateway:xn,VirtualNetworkGatewayConnection:Fn,TunnelConnectionHealth:Vn,ConnectionSharedKey:Tn,VirtualNetworkGatewayConnectionListEntity:On,VirtualNetworkConnectionGatewayReference:Bn,P2SVpnServerConfigVpnClientRootCertificate:Hn,P2SVpnServerConfigVpnClientRevokedCertificate:Un,P2SVpnServerConfigRadiusServerRootCertificate:Wn,P2SVpnServerConfigRadiusClientRootCertificate:_n,P2SVpnServerConfiguration:Kn,VirtualWAN:jn,HubVirtualNetworkConnection:$n,VirtualHub:es,VirtualHubRouteTable:Yn,VirtualHubRoute:Jn,VpnConnection:ts,VpnGateway:rs,P2SVpnGateway:os,VpnClientConnectionHealth:as}),Zw=function(){function e(e){this.client=e}return e.prototype.get=function(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,vpnSiteName:t,options:r},Xw,i)},e.prototype.createOrUpdate=function(e,t,r,i){return this.beginCreateOrUpdate(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.updateTags=function(e,t,r,i){return this.beginUpdateTags(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.deleteMethod=function(e,t,r){return this.beginDeleteMethod(e,t,r).then(function(e){return e.pollUntilFinished()})},e.prototype.listByResourceGroup=function(e,t,r){return this.client.sendOperationRequest({resourceGroupName:e,options:t},$w,r)},e.prototype.list=function(e,t){return this.client.sendOperationRequest({options:e},Jw,t)},e.prototype.beginCreateOrUpdate=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,vpnSiteName:t,vpnSiteParameters:r,options:i},Yw,i)},e.prototype.beginUpdateTags=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,vpnSiteName:t,vpnSiteParameters:r,options:i},eR,i)},e.prototype.beginDeleteMethod=function(e,t,r){return this.client.sendLRORequest({resourceGroupName:e,vpnSiteName:t,options:r},tR,r)},e.prototype.listByResourceGroupNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},rR,r)},e.prototype.listNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},iR,r)},e}(),Qw=new r.Serializer(jw),Xw={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnSites/{vpnSiteName}",urlParameters:[tu,Kp,yu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:Qn},default:{bodyMapper:ka}},serializer:Qw},$w={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnSites",urlParameters:[tu,Kp],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:np},default:{bodyMapper:ka}},serializer:Qw},Jw={httpMethod:"GET",path:"subscriptions/{subscriptionId}/providers/Microsoft.Network/vpnSites",urlParameters:[tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:np},default:{bodyMapper:ka}},serializer:Qw},Yw={httpMethod:"PUT",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnSites/{vpnSiteName}",urlParameters:[tu,Kp,yu],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"vpnSiteParameters",mapper:cr({},Qn,{required:!0})},responses:{200:{bodyMapper:Qn},201:{bodyMapper:Qn},default:{bodyMapper:ka}},serializer:Qw},eR={httpMethod:"PATCH",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnSites/{vpnSiteName}",urlParameters:[tu,Kp,yu],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"vpnSiteParameters",mapper:cr({},Gi,{required:!0})},responses:{200:{bodyMapper:Qn},201:{bodyMapper:Qn},default:{bodyMapper:ka}},serializer:Qw},tR={httpMethod:"DELETE",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnSites/{vpnSiteName}",urlParameters:[tu,Kp,yu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{},202:{},204:{},default:{bodyMapper:ka}},serializer:Qw},rR={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:np},default:{bodyMapper:ka}},serializer:Qw},iR={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:np},default:{bodyMapper:ka}},serializer:Qw},aR=Object.freeze({GetVpnSitesConfigurationRequest:Xn,ErrorModel:ka,ErrorDetails:ha}),oR=function(){function e(e){this.client=e}return e.prototype.download=function(e,t,r,i){return this.beginDownload(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.beginDownload=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,virtualWANName:t,request:r,options:i},sR,i)},e}(),nR=new r.Serializer(aR),sR={httpMethod:"POST",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualWans/{virtualWANName}/vpnConfiguration",urlParameters:[tu,Kp,du],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"request",mapper:cr({},Xn,{required:!0})},responses:{200:{},202:{},default:{bodyMapper:ka}},serializer:nR},pR=Object.freeze({VirtualHub:es,Resource:Cr,BaseResource:yr,SubResource:Pr,HubVirtualNetworkConnection:$n,VirtualHubRouteTable:Yn,VirtualHubRoute:Jn,ErrorModel:ka,ErrorDetails:ha,TagsObject:Gi,ListVirtualHubsResult:sp,NetworkInterfaceTapConfiguration:Nr,VirtualNetworkTap:Dr,NetworkInterfaceIPConfiguration:Wr,ApplicationGatewayBackendAddressPool:Kr,ApplicationGatewayBackendAddress:_r,BackendAddressPool:Hr,InboundNatRule:Ur,Subnet:Br,NetworkSecurityGroup:Gr,SecurityRule:Rr,ApplicationSecurityGroup:wr,NetworkInterface:Ar,InterfaceEndpoint:Sr,EndpointService:fr,NetworkInterfaceDnsSettings:gr,RouteTable:hr,Route:br,ServiceEndpointPropertiesFormat:kr,ServiceEndpointPolicy:vr,ServiceEndpointPolicyDefinition:zr,IPConfiguration:xr,PublicIPAddress:Vr,PublicIPAddressSku:Ir,PublicIPAddressDnsSettings:Er,IpTag:Mr,IPConfigurationProfile:Fr,ResourceNavigationLink:qr,ServiceAssociationLink:Tr,Delegation:Lr,FrontendIPConfiguration:Or,ApplicationGatewayBackendHttpSettings:Zr,ApplicationGatewayConnectionDraining:jr,ApplicationGatewayIPConfiguration:ti,ApplicationGatewayAuthenticationCertificate:ri,ApplicationGatewayTrustedRootCertificate:ii,ApplicationGatewaySslCertificate:ai,ApplicationGatewayFrontendIPConfiguration:oi,ApplicationGatewayFrontendPort:ni,ApplicationGatewayHttpListener:si,ApplicationGatewayPathRule:pi,ApplicationGatewayProbe:li,ApplicationGatewayProbeHealthResponseMatch:ui,ApplicationGatewayRequestRoutingRule:ci,ApplicationGatewayRedirectConfiguration:di,ApplicationGatewayUrlPathMap:mi,ApplicationGateway:Ci,ApplicationGatewaySku:Yr,ApplicationGatewaySslPolicy:ei,ApplicationGatewayWebApplicationFirewallConfiguration:Pi,ApplicationGatewayFirewallDisabledRuleGroup:yi,ApplicationGatewayAutoscaleConfiguration:Ni,ApplicationGatewayFirewallRuleSet:fi,ApplicationGatewayFirewallRuleGroup:Ri,ApplicationGatewayFirewallRule:wi,ApplicationGatewayAvailableSslOptions:gi,ApplicationGatewaySslPredefinedPolicy:Ai,AzureFirewallIPConfiguration:hi,AzureFirewallApplicationRuleCollection:Ii,AzureFirewallRCAction:ki,AzureFirewallApplicationRule:vi,AzureFirewallApplicationRuleProtocol:zi,AzureFirewallNatRuleCollection:Vi,AzureFirewallNatRCAction:Ei,AzureFirewallNatRule:Mi,AzureFirewallNetworkRuleCollection:Fi,AzureFirewallNetworkRule:xi,AzureFirewall:qi,AzureFirewallFqdnTag:Ti,DdosProtectionPlan:Bi,EndpointServiceResult:Oi,ExpressRouteCircuitAuthorization:Di,RouteFilterRule:Ui,ExpressRouteCircuitConnection:Ki,ExpressRouteCircuitPeering:ji,ExpressRouteCircuitPeeringConfig:Hi,ExpressRouteCircuitStats:Wi,RouteFilter:Zi,Ipv6ExpressRouteCircuitPeeringConfig:Qi,ExpressRouteConnectionId:_i,ExpressRouteCircuit:Ji,ExpressRouteCircuitSku:Xi,ExpressRouteCircuitServiceProviderProperties:$i,ExpressRouteServiceProvider:na,ExpressRouteServiceProviderBandwidthsOffered:oa,ExpressRouteCrossConnectionPeering:la,ExpressRouteCrossConnection:ca,ExpressRouteCircuitReference:ua,ExpressRouteConnection:Na,ExpressRouteCircuitPeeringId:ma,ExpressRouteGateway:Ca,ExpressRouteGatewayPropertiesAutoScaleConfiguration:Pa,ExpressRouteGatewayPropertiesAutoScaleConfigurationBounds:ya,VirtualHubId:da,LoadBalancingRule:Sa,Probe:ga,InboundNatPool:Aa,OutboundRule:Ga,LoadBalancer:ba,LoadBalancerSku:fa,ContainerNetworkInterfaceConfiguration:xa,ContainerNetworkInterface:Ta,Container:Fa,ContainerNetworkInterfaceIpConfiguration:qa,NetworkProfile:La,NetworkWatcher:Oa,ConnectionMonitorResult:Bo,ConnectionMonitorSource:qo,ConnectionMonitorDestination:To,PublicIPPrefix:nn,PublicIPPrefixSku:an,ReferencedPublicIpAddress:on,PatchRouteFilterRule:sn,PatchRouteFilter:pn,BgpServiceCommunity:ln,BGPCommunity:un,VirtualNetworkPeering:yn,AddressSpace:mn,VirtualNetwork:Nn,DhcpOptions:Pn,VirtualNetworkGatewayIPConfiguration:fn,VpnClientRootCertificate:gn,VpnClientRevokedCertificate:An,VirtualNetworkGateway:vn,VirtualNetworkGatewaySku:Sn,VpnClientConfiguration:bn,IpsecPolicy:Gn,BgpSettings:hn,LocalNetworkGateway:xn,VirtualNetworkGatewayConnection:Fn,TunnelConnectionHealth:Vn,ConnectionSharedKey:Tn,VirtualNetworkGatewayConnectionListEntity:On,VirtualNetworkConnectionGatewayReference:Bn,P2SVpnServerConfigVpnClientRootCertificate:Hn,P2SVpnServerConfigVpnClientRevokedCertificate:Un,P2SVpnServerConfigRadiusServerRootCertificate:Wn,P2SVpnServerConfigRadiusClientRootCertificate:_n,P2SVpnServerConfiguration:Kn,VirtualWAN:jn,VpnSite:Qn,DeviceProperties:Zn,VpnConnection:ts,VpnGateway:rs,P2SVpnGateway:os,VpnClientConnectionHealth:as}),uR=function(){function e(e){this.client=e}return e.prototype.get=function(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,virtualHubName:t,options:r},cR,i)},e.prototype.createOrUpdate=function(e,t,r,i){return this.beginCreateOrUpdate(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.updateTags=function(e,t,r,i){return this.beginUpdateTags(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.deleteMethod=function(e,t,r){return this.beginDeleteMethod(e,t,r).then(function(e){return e.pollUntilFinished()})},e.prototype.listByResourceGroup=function(e,t,r){return this.client.sendOperationRequest({resourceGroupName:e,options:t},dR,r)},e.prototype.list=function(e,t){return this.client.sendOperationRequest({options:e},mR,t)},e.prototype.beginCreateOrUpdate=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,virtualHubName:t,virtualHubParameters:r,options:i},yR,i)},e.prototype.beginUpdateTags=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,virtualHubName:t,virtualHubParameters:r,options:i},PR,i)},e.prototype.beginDeleteMethod=function(e,t,r){return this.client.sendLRORequest({resourceGroupName:e,virtualHubName:t,options:r},NR,r)},e.prototype.listByResourceGroupNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},CR,r)},e.prototype.listNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},wR,r)},e}(),lR=new r.Serializer(pR),cR={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}",urlParameters:[tu,Kp,au],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:es},default:{bodyMapper:ka}},serializer:lR},dR={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs",urlParameters:[tu,Kp],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:sp},default:{bodyMapper:ka}},serializer:lR},mR={httpMethod:"GET",path:"subscriptions/{subscriptionId}/providers/Microsoft.Network/virtualHubs",urlParameters:[tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:sp},default:{bodyMapper:ka}},serializer:lR},yR={httpMethod:"PUT",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}",urlParameters:[tu,Kp,au],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"virtualHubParameters",mapper:cr({},es,{required:!0})},responses:{200:{bodyMapper:es},201:{bodyMapper:es},default:{bodyMapper:ka}},serializer:lR},PR={httpMethod:"PATCH",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}",urlParameters:[tu,Kp,au],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"virtualHubParameters",mapper:cr({},Gi,{required:!0})},responses:{200:{bodyMapper:es},201:{bodyMapper:es},default:{bodyMapper:ka}},serializer:lR},NR={httpMethod:"DELETE",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}",urlParameters:[tu,Kp,au],queryParameters:[Pp],headerParameters:[yp],responses:{200:{},202:{},204:{},default:{bodyMapper:ka}},serializer:lR},CR={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:sp},default:{bodyMapper:ka}},serializer:lR},wR={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:sp},default:{bodyMapper:ka}},serializer:lR},RR=Object.freeze({HubVirtualNetworkConnection:$n,SubResource:Pr,BaseResource:yr,ErrorModel:ka,ErrorDetails:ha,ListHubVirtualNetworkConnectionsResult:pp,NetworkInterfaceTapConfiguration:Nr,VirtualNetworkTap:Dr,Resource:Cr,NetworkInterfaceIPConfiguration:Wr,ApplicationGatewayBackendAddressPool:Kr,ApplicationGatewayBackendAddress:_r,BackendAddressPool:Hr,InboundNatRule:Ur,Subnet:Br,NetworkSecurityGroup:Gr,SecurityRule:Rr,ApplicationSecurityGroup:wr,NetworkInterface:Ar,InterfaceEndpoint:Sr,EndpointService:fr,NetworkInterfaceDnsSettings:gr,RouteTable:hr,Route:br,ServiceEndpointPropertiesFormat:kr,ServiceEndpointPolicy:vr,ServiceEndpointPolicyDefinition:zr,IPConfiguration:xr,PublicIPAddress:Vr,PublicIPAddressSku:Ir,PublicIPAddressDnsSettings:Er,IpTag:Mr,IPConfigurationProfile:Fr,ResourceNavigationLink:qr,ServiceAssociationLink:Tr,Delegation:Lr,FrontendIPConfiguration:Or,ApplicationGatewayBackendHttpSettings:Zr,ApplicationGatewayConnectionDraining:jr,ApplicationGatewayIPConfiguration:ti,ApplicationGatewayAuthenticationCertificate:ri,ApplicationGatewayTrustedRootCertificate:ii,ApplicationGatewaySslCertificate:ai,ApplicationGatewayFrontendIPConfiguration:oi,ApplicationGatewayFrontendPort:ni,ApplicationGatewayHttpListener:si,ApplicationGatewayPathRule:pi,ApplicationGatewayProbe:li,ApplicationGatewayProbeHealthResponseMatch:ui,ApplicationGatewayRequestRoutingRule:ci,ApplicationGatewayRedirectConfiguration:di,ApplicationGatewayUrlPathMap:mi,ApplicationGateway:Ci,ApplicationGatewaySku:Yr,ApplicationGatewaySslPolicy:ei,ApplicationGatewayWebApplicationFirewallConfiguration:Pi,ApplicationGatewayFirewallDisabledRuleGroup:yi,ApplicationGatewayAutoscaleConfiguration:Ni,ApplicationGatewayFirewallRuleSet:fi,ApplicationGatewayFirewallRuleGroup:Ri,ApplicationGatewayFirewallRule:wi,ApplicationGatewayAvailableSslOptions:gi,ApplicationGatewaySslPredefinedPolicy:Ai,AzureFirewallIPConfiguration:hi,AzureFirewallApplicationRuleCollection:Ii,AzureFirewallRCAction:ki,AzureFirewallApplicationRule:vi,AzureFirewallApplicationRuleProtocol:zi,AzureFirewallNatRuleCollection:Vi,AzureFirewallNatRCAction:Ei,AzureFirewallNatRule:Mi,AzureFirewallNetworkRuleCollection:Fi,AzureFirewallNetworkRule:xi,AzureFirewall:qi,AzureFirewallFqdnTag:Ti,DdosProtectionPlan:Bi,EndpointServiceResult:Oi,ExpressRouteCircuitAuthorization:Di,RouteFilterRule:Ui,ExpressRouteCircuitConnection:Ki,ExpressRouteCircuitPeering:ji,ExpressRouteCircuitPeeringConfig:Hi,ExpressRouteCircuitStats:Wi,RouteFilter:Zi,Ipv6ExpressRouteCircuitPeeringConfig:Qi,ExpressRouteConnectionId:_i,ExpressRouteCircuit:Ji,ExpressRouteCircuitSku:Xi,ExpressRouteCircuitServiceProviderProperties:$i,ExpressRouteServiceProvider:na,ExpressRouteServiceProviderBandwidthsOffered:oa,ExpressRouteCrossConnectionPeering:la,ExpressRouteCrossConnection:ca,ExpressRouteCircuitReference:ua,ExpressRouteConnection:Na,ExpressRouteCircuitPeeringId:ma,ExpressRouteGateway:Ca,ExpressRouteGatewayPropertiesAutoScaleConfiguration:Pa,ExpressRouteGatewayPropertiesAutoScaleConfigurationBounds:ya,VirtualHubId:da,LoadBalancingRule:Sa,Probe:ga,InboundNatPool:Aa,OutboundRule:Ga,LoadBalancer:ba,LoadBalancerSku:fa,ContainerNetworkInterfaceConfiguration:xa,ContainerNetworkInterface:Ta,Container:Fa,ContainerNetworkInterfaceIpConfiguration:qa,NetworkProfile:La,NetworkWatcher:Oa,ConnectionMonitorResult:Bo,ConnectionMonitorSource:qo,ConnectionMonitorDestination:To,PublicIPPrefix:nn,PublicIPPrefixSku:an,ReferencedPublicIpAddress:on,PatchRouteFilterRule:sn,PatchRouteFilter:pn,BgpServiceCommunity:ln,BGPCommunity:un,VirtualNetworkPeering:yn,AddressSpace:mn,VirtualNetwork:Nn,DhcpOptions:Pn,VirtualNetworkGatewayIPConfiguration:fn,VpnClientRootCertificate:gn,VpnClientRevokedCertificate:An,VirtualNetworkGateway:vn,VirtualNetworkGatewaySku:Sn,VpnClientConfiguration:bn,IpsecPolicy:Gn,BgpSettings:hn,LocalNetworkGateway:xn,VirtualNetworkGatewayConnection:Fn,TunnelConnectionHealth:Vn,ConnectionSharedKey:Tn,VirtualNetworkGatewayConnectionListEntity:On,VirtualNetworkConnectionGatewayReference:Bn,P2SVpnServerConfigVpnClientRootCertificate:Hn,P2SVpnServerConfigVpnClientRevokedCertificate:Un,P2SVpnServerConfigRadiusServerRootCertificate:Wn,P2SVpnServerConfigRadiusClientRootCertificate:_n,P2SVpnServerConfiguration:Kn,VirtualWAN:jn,VpnSite:Qn,DeviceProperties:Zn,VirtualHub:es,VirtualHubRouteTable:Yn,VirtualHubRoute:Jn,VpnConnection:ts,VpnGateway:rs,P2SVpnGateway:os,VpnClientConnectionHealth:as}),fR=function(){function e(e){this.client=e}return e.prototype.get=function(e,t,r,i,a){return this.client.sendOperationRequest({resourceGroupName:e,virtualHubName:t,connectionName:r,options:i},gR,a)},e.prototype.list=function(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,virtualHubName:t,options:r},AR,i)},e.prototype.listNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},GR,r)},e}(),SR=new r.Serializer(RR),gR={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/hubVirtualNetworkConnections/{connectionName}",urlParameters:[tu,Kp,au,Ap],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:$n},default:{bodyMapper:ka}},serializer:SR},AR={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/hubVirtualNetworkConnections",urlParameters:[tu,Kp,au],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:pp},default:{bodyMapper:ka}},serializer:SR},GR={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:pp},default:{bodyMapper:ka}},serializer:SR},bR=Object.freeze({VpnGateway:rs,Resource:Cr,BaseResource:yr,SubResource:Pr,VpnConnection:ts,IpsecPolicy:Gn,BgpSettings:hn,ErrorModel:ka,ErrorDetails:ha,TagsObject:Gi,ListVpnGatewaysResult:up,NetworkInterfaceTapConfiguration:Nr,VirtualNetworkTap:Dr,NetworkInterfaceIPConfiguration:Wr,ApplicationGatewayBackendAddressPool:Kr,ApplicationGatewayBackendAddress:_r,BackendAddressPool:Hr,InboundNatRule:Ur,Subnet:Br,NetworkSecurityGroup:Gr,SecurityRule:Rr,ApplicationSecurityGroup:wr,NetworkInterface:Ar,InterfaceEndpoint:Sr,EndpointService:fr,NetworkInterfaceDnsSettings:gr,RouteTable:hr,Route:br,ServiceEndpointPropertiesFormat:kr,ServiceEndpointPolicy:vr,ServiceEndpointPolicyDefinition:zr,IPConfiguration:xr,PublicIPAddress:Vr,PublicIPAddressSku:Ir,PublicIPAddressDnsSettings:Er,IpTag:Mr,IPConfigurationProfile:Fr,ResourceNavigationLink:qr,ServiceAssociationLink:Tr,Delegation:Lr,FrontendIPConfiguration:Or,ApplicationGatewayBackendHttpSettings:Zr,ApplicationGatewayConnectionDraining:jr,ApplicationGatewayIPConfiguration:ti,ApplicationGatewayAuthenticationCertificate:ri,ApplicationGatewayTrustedRootCertificate:ii,ApplicationGatewaySslCertificate:ai,ApplicationGatewayFrontendIPConfiguration:oi,ApplicationGatewayFrontendPort:ni,ApplicationGatewayHttpListener:si,ApplicationGatewayPathRule:pi,ApplicationGatewayProbe:li,ApplicationGatewayProbeHealthResponseMatch:ui,ApplicationGatewayRequestRoutingRule:ci,ApplicationGatewayRedirectConfiguration:di,ApplicationGatewayUrlPathMap:mi,ApplicationGateway:Ci,ApplicationGatewaySku:Yr,ApplicationGatewaySslPolicy:ei,ApplicationGatewayWebApplicationFirewallConfiguration:Pi,ApplicationGatewayFirewallDisabledRuleGroup:yi,ApplicationGatewayAutoscaleConfiguration:Ni,ApplicationGatewayFirewallRuleSet:fi,ApplicationGatewayFirewallRuleGroup:Ri,ApplicationGatewayFirewallRule:wi,ApplicationGatewayAvailableSslOptions:gi,ApplicationGatewaySslPredefinedPolicy:Ai,AzureFirewallIPConfiguration:hi,AzureFirewallApplicationRuleCollection:Ii,AzureFirewallRCAction:ki,AzureFirewallApplicationRule:vi,AzureFirewallApplicationRuleProtocol:zi,AzureFirewallNatRuleCollection:Vi,AzureFirewallNatRCAction:Ei,AzureFirewallNatRule:Mi,AzureFirewallNetworkRuleCollection:Fi,AzureFirewallNetworkRule:xi,AzureFirewall:qi,AzureFirewallFqdnTag:Ti,DdosProtectionPlan:Bi,EndpointServiceResult:Oi,ExpressRouteCircuitAuthorization:Di,RouteFilterRule:Ui,ExpressRouteCircuitConnection:Ki,ExpressRouteCircuitPeering:ji,ExpressRouteCircuitPeeringConfig:Hi,ExpressRouteCircuitStats:Wi,RouteFilter:Zi,Ipv6ExpressRouteCircuitPeeringConfig:Qi,ExpressRouteConnectionId:_i,ExpressRouteCircuit:Ji,ExpressRouteCircuitSku:Xi,ExpressRouteCircuitServiceProviderProperties:$i,ExpressRouteServiceProvider:na,ExpressRouteServiceProviderBandwidthsOffered:oa,ExpressRouteCrossConnectionPeering:la,ExpressRouteCrossConnection:ca,ExpressRouteCircuitReference:ua,ExpressRouteConnection:Na,ExpressRouteCircuitPeeringId:ma,ExpressRouteGateway:Ca,ExpressRouteGatewayPropertiesAutoScaleConfiguration:Pa,ExpressRouteGatewayPropertiesAutoScaleConfigurationBounds:ya,VirtualHubId:da,LoadBalancingRule:Sa,Probe:ga,InboundNatPool:Aa,OutboundRule:Ga,LoadBalancer:ba,LoadBalancerSku:fa,ContainerNetworkInterfaceConfiguration:xa,ContainerNetworkInterface:Ta,Container:Fa,ContainerNetworkInterfaceIpConfiguration:qa,NetworkProfile:La,NetworkWatcher:Oa,ConnectionMonitorResult:Bo,ConnectionMonitorSource:qo,ConnectionMonitorDestination:To,PublicIPPrefix:nn,PublicIPPrefixSku:an,ReferencedPublicIpAddress:on,PatchRouteFilterRule:sn,PatchRouteFilter:pn,BgpServiceCommunity:ln,BGPCommunity:un,VirtualNetworkPeering:yn,AddressSpace:mn,VirtualNetwork:Nn,DhcpOptions:Pn,VirtualNetworkGatewayIPConfiguration:fn,VpnClientRootCertificate:gn,VpnClientRevokedCertificate:An,VirtualNetworkGateway:vn,VirtualNetworkGatewaySku:Sn,VpnClientConfiguration:bn,LocalNetworkGateway:xn,VirtualNetworkGatewayConnection:Fn,TunnelConnectionHealth:Vn,ConnectionSharedKey:Tn,VirtualNetworkGatewayConnectionListEntity:On,VirtualNetworkConnectionGatewayReference:Bn,P2SVpnServerConfigVpnClientRootCertificate:Hn,P2SVpnServerConfigVpnClientRevokedCertificate:Un,P2SVpnServerConfigRadiusServerRootCertificate:Wn,P2SVpnServerConfigRadiusClientRootCertificate:_n,P2SVpnServerConfiguration:Kn,VirtualWAN:jn,VpnSite:Qn,DeviceProperties:Zn,HubVirtualNetworkConnection:$n,VirtualHub:es,VirtualHubRouteTable:Yn,VirtualHubRoute:Jn,P2SVpnGateway:os,VpnClientConnectionHealth:as}),hR=function(){function e(e){this.client=e}return e.prototype.get=function(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,gatewayName:t,options:r},zR,i)},e.prototype.createOrUpdate=function(e,t,r,i){return this.beginCreateOrUpdate(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.updateTags=function(e,t,r,i){return this.beginUpdateTags(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.deleteMethod=function(e,t,r){return this.beginDeleteMethod(e,t,r).then(function(e){return e.pollUntilFinished()})},e.prototype.listByResourceGroup=function(e,t,r){return this.client.sendOperationRequest({resourceGroupName:e,options:t},vR,r)},e.prototype.list=function(e,t){return this.client.sendOperationRequest({options:e},IR,t)},e.prototype.beginCreateOrUpdate=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,gatewayName:t,vpnGatewayParameters:r,options:i},ER,i)},e.prototype.beginUpdateTags=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,gatewayName:t,vpnGatewayParameters:r,options:i},MR,i)},e.prototype.beginDeleteMethod=function(e,t,r){return this.client.sendLRORequest({resourceGroupName:e,gatewayName:t,options:r},VR,r)},e.prototype.listByResourceGroupNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},xR,r)},e.prototype.listNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},FR,r)},e}(),kR=new r.Serializer(bR),zR={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways/{gatewayName}",urlParameters:[tu,Kp,vp],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:rs},default:{bodyMapper:ka}},serializer:kR},vR={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways",urlParameters:[tu,Kp],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:up},default:{bodyMapper:ka}},serializer:kR},IR={httpMethod:"GET",path:"subscriptions/{subscriptionId}/providers/Microsoft.Network/vpnGateways",urlParameters:[tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:up},default:{bodyMapper:ka}},serializer:kR},ER={httpMethod:"PUT",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways/{gatewayName}",urlParameters:[tu,Kp,vp],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"vpnGatewayParameters",mapper:cr({},rs,{required:!0})},responses:{200:{bodyMapper:rs},201:{bodyMapper:rs},default:{bodyMapper:ka}},serializer:kR},MR={httpMethod:"PATCH",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways/{gatewayName}",urlParameters:[tu,Kp,vp],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"vpnGatewayParameters",mapper:cr({},Gi,{required:!0})},responses:{200:{bodyMapper:rs},201:{bodyMapper:rs},default:{bodyMapper:ka}},serializer:kR},VR={httpMethod:"DELETE",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways/{gatewayName}",urlParameters:[tu,Kp,vp],queryParameters:[Pp],headerParameters:[yp],responses:{200:{},202:{},204:{},default:{bodyMapper:ka}},serializer:kR},xR={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:up},default:{bodyMapper:ka}},serializer:kR},FR={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:up},default:{bodyMapper:ka}},serializer:kR},qR=Object.freeze({VpnConnection:ts,SubResource:Pr,BaseResource:yr,IpsecPolicy:Gn,ErrorModel:ka,ErrorDetails:ha,ListVpnConnectionsResult:lp,NetworkInterfaceTapConfiguration:Nr,VirtualNetworkTap:Dr,Resource:Cr,NetworkInterfaceIPConfiguration:Wr,ApplicationGatewayBackendAddressPool:Kr,ApplicationGatewayBackendAddress:_r,BackendAddressPool:Hr,InboundNatRule:Ur,Subnet:Br,NetworkSecurityGroup:Gr,SecurityRule:Rr,ApplicationSecurityGroup:wr,NetworkInterface:Ar,InterfaceEndpoint:Sr,EndpointService:fr,NetworkInterfaceDnsSettings:gr,RouteTable:hr,Route:br,ServiceEndpointPropertiesFormat:kr,ServiceEndpointPolicy:vr,ServiceEndpointPolicyDefinition:zr,IPConfiguration:xr,PublicIPAddress:Vr,PublicIPAddressSku:Ir,PublicIPAddressDnsSettings:Er,IpTag:Mr,IPConfigurationProfile:Fr,ResourceNavigationLink:qr,ServiceAssociationLink:Tr,Delegation:Lr,FrontendIPConfiguration:Or,ApplicationGatewayBackendHttpSettings:Zr,ApplicationGatewayConnectionDraining:jr,ApplicationGatewayIPConfiguration:ti,ApplicationGatewayAuthenticationCertificate:ri,ApplicationGatewayTrustedRootCertificate:ii,ApplicationGatewaySslCertificate:ai,ApplicationGatewayFrontendIPConfiguration:oi,ApplicationGatewayFrontendPort:ni,ApplicationGatewayHttpListener:si,ApplicationGatewayPathRule:pi,ApplicationGatewayProbe:li,ApplicationGatewayProbeHealthResponseMatch:ui,ApplicationGatewayRequestRoutingRule:ci,ApplicationGatewayRedirectConfiguration:di,ApplicationGatewayUrlPathMap:mi,ApplicationGateway:Ci,ApplicationGatewaySku:Yr,ApplicationGatewaySslPolicy:ei,ApplicationGatewayWebApplicationFirewallConfiguration:Pi,ApplicationGatewayFirewallDisabledRuleGroup:yi,ApplicationGatewayAutoscaleConfiguration:Ni,ApplicationGatewayFirewallRuleSet:fi,ApplicationGatewayFirewallRuleGroup:Ri,ApplicationGatewayFirewallRule:wi,ApplicationGatewayAvailableSslOptions:gi,ApplicationGatewaySslPredefinedPolicy:Ai,AzureFirewallIPConfiguration:hi,AzureFirewallApplicationRuleCollection:Ii,AzureFirewallRCAction:ki,AzureFirewallApplicationRule:vi,AzureFirewallApplicationRuleProtocol:zi,AzureFirewallNatRuleCollection:Vi,AzureFirewallNatRCAction:Ei,AzureFirewallNatRule:Mi,AzureFirewallNetworkRuleCollection:Fi,AzureFirewallNetworkRule:xi,AzureFirewall:qi,AzureFirewallFqdnTag:Ti,DdosProtectionPlan:Bi,EndpointServiceResult:Oi,ExpressRouteCircuitAuthorization:Di,RouteFilterRule:Ui,ExpressRouteCircuitConnection:Ki,ExpressRouteCircuitPeering:ji,ExpressRouteCircuitPeeringConfig:Hi,ExpressRouteCircuitStats:Wi,RouteFilter:Zi,Ipv6ExpressRouteCircuitPeeringConfig:Qi,ExpressRouteConnectionId:_i,ExpressRouteCircuit:Ji,ExpressRouteCircuitSku:Xi,ExpressRouteCircuitServiceProviderProperties:$i,ExpressRouteServiceProvider:na,ExpressRouteServiceProviderBandwidthsOffered:oa,ExpressRouteCrossConnectionPeering:la,ExpressRouteCrossConnection:ca,ExpressRouteCircuitReference:ua,ExpressRouteConnection:Na,ExpressRouteCircuitPeeringId:ma,ExpressRouteGateway:Ca,ExpressRouteGatewayPropertiesAutoScaleConfiguration:Pa,ExpressRouteGatewayPropertiesAutoScaleConfigurationBounds:ya,VirtualHubId:da,LoadBalancingRule:Sa,Probe:ga,InboundNatPool:Aa,OutboundRule:Ga,LoadBalancer:ba,LoadBalancerSku:fa,ContainerNetworkInterfaceConfiguration:xa,ContainerNetworkInterface:Ta,Container:Fa,ContainerNetworkInterfaceIpConfiguration:qa,NetworkProfile:La,NetworkWatcher:Oa,ConnectionMonitorResult:Bo,ConnectionMonitorSource:qo,ConnectionMonitorDestination:To,PublicIPPrefix:nn,PublicIPPrefixSku:an,ReferencedPublicIpAddress:on,PatchRouteFilterRule:sn,PatchRouteFilter:pn,BgpServiceCommunity:ln,BGPCommunity:un,VirtualNetworkPeering:yn,AddressSpace:mn,VirtualNetwork:Nn,DhcpOptions:Pn,VirtualNetworkGatewayIPConfiguration:fn,VpnClientRootCertificate:gn,VpnClientRevokedCertificate:An,VirtualNetworkGateway:vn,VirtualNetworkGatewaySku:Sn,VpnClientConfiguration:bn,BgpSettings:hn,LocalNetworkGateway:xn,VirtualNetworkGatewayConnection:Fn,TunnelConnectionHealth:Vn,ConnectionSharedKey:Tn,VirtualNetworkGatewayConnectionListEntity:On,VirtualNetworkConnectionGatewayReference:Bn,P2SVpnServerConfigVpnClientRootCertificate:Hn,P2SVpnServerConfigVpnClientRevokedCertificate:Un,P2SVpnServerConfigRadiusServerRootCertificate:Wn,P2SVpnServerConfigRadiusClientRootCertificate:_n,P2SVpnServerConfiguration:Kn,VirtualWAN:jn,VpnSite:Qn,DeviceProperties:Zn,HubVirtualNetworkConnection:$n,VirtualHub:es,VirtualHubRouteTable:Yn,VirtualHubRoute:Jn,VpnGateway:rs,P2SVpnGateway:os,VpnClientConnectionHealth:as}),TR=function(){function e(e){this.client=e}return e.prototype.get=function(e,t,r,i,a){return this.client.sendOperationRequest({resourceGroupName:e,gatewayName:t,connectionName:r,options:i},BR,a)},e.prototype.createOrUpdate=function(e,t,r,i,a){return this.beginCreateOrUpdate(e,t,r,i,a).then(function(e){return e.pollUntilFinished()})},e.prototype.deleteMethod=function(e,t,r,i){return this.beginDeleteMethod(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.listByVpnGateway=function(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,gatewayName:t,options:r},OR,i)},e.prototype.beginCreateOrUpdate=function(e,t,r,i,a){return this.client.sendLRORequest({resourceGroupName:e,gatewayName:t,connectionName:r,vpnConnectionParameters:i,options:a},DR,a)},e.prototype.beginDeleteMethod=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,gatewayName:t,connectionName:r,options:i},HR,i)},e.prototype.listByVpnGatewayNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},UR,r)},e}(),LR=new r.Serializer(qR),BR={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways/{gatewayName}/vpnConnections/{connectionName}",urlParameters:[tu,Kp,vp,Ap],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:ts},default:{bodyMapper:ka}},serializer:LR},OR={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways/{gatewayName}/vpnConnections",urlParameters:[tu,Kp,vp],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:lp},default:{bodyMapper:ka}},serializer:LR},DR={httpMethod:"PUT",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways/{gatewayName}/vpnConnections/{connectionName}",urlParameters:[tu,Kp,vp,Ap],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"vpnConnectionParameters",mapper:cr({},ts,{required:!0})},responses:{200:{bodyMapper:ts},201:{bodyMapper:ts},default:{bodyMapper:ka}},serializer:LR},HR={httpMethod:"DELETE",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways/{gatewayName}/vpnConnections/{connectionName}",urlParameters:[tu,Kp,vp,Ap],queryParameters:[Pp],headerParameters:[yp],responses:{200:{},202:{},204:{},default:{bodyMapper:ka}},serializer:LR},UR={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:lp},default:{bodyMapper:ka}},serializer:LR},WR=Object.freeze({P2SVpnServerConfiguration:Kn,SubResource:Pr,BaseResource:yr,P2SVpnServerConfigVpnClientRootCertificate:Hn,P2SVpnServerConfigVpnClientRevokedCertificate:Un,P2SVpnServerConfigRadiusServerRootCertificate:Wn,P2SVpnServerConfigRadiusClientRootCertificate:_n,IpsecPolicy:Gn,ErrorModel:ka,ErrorDetails:ha,ListP2SVpnServerConfigurationsResult:cp,NetworkInterfaceTapConfiguration:Nr,VirtualNetworkTap:Dr,Resource:Cr,NetworkInterfaceIPConfiguration:Wr,ApplicationGatewayBackendAddressPool:Kr,ApplicationGatewayBackendAddress:_r,BackendAddressPool:Hr,InboundNatRule:Ur,Subnet:Br,NetworkSecurityGroup:Gr,SecurityRule:Rr,ApplicationSecurityGroup:wr,NetworkInterface:Ar,InterfaceEndpoint:Sr,EndpointService:fr,NetworkInterfaceDnsSettings:gr,RouteTable:hr,Route:br,ServiceEndpointPropertiesFormat:kr,ServiceEndpointPolicy:vr,ServiceEndpointPolicyDefinition:zr,IPConfiguration:xr,PublicIPAddress:Vr,PublicIPAddressSku:Ir,PublicIPAddressDnsSettings:Er,IpTag:Mr,IPConfigurationProfile:Fr,ResourceNavigationLink:qr,ServiceAssociationLink:Tr,Delegation:Lr,FrontendIPConfiguration:Or,ApplicationGatewayBackendHttpSettings:Zr,ApplicationGatewayConnectionDraining:jr,ApplicationGatewayIPConfiguration:ti,ApplicationGatewayAuthenticationCertificate:ri,ApplicationGatewayTrustedRootCertificate:ii,ApplicationGatewaySslCertificate:ai,ApplicationGatewayFrontendIPConfiguration:oi,ApplicationGatewayFrontendPort:ni,ApplicationGatewayHttpListener:si,ApplicationGatewayPathRule:pi,ApplicationGatewayProbe:li,ApplicationGatewayProbeHealthResponseMatch:ui,ApplicationGatewayRequestRoutingRule:ci,ApplicationGatewayRedirectConfiguration:di,ApplicationGatewayUrlPathMap:mi,ApplicationGateway:Ci,ApplicationGatewaySku:Yr,ApplicationGatewaySslPolicy:ei,ApplicationGatewayWebApplicationFirewallConfiguration:Pi,ApplicationGatewayFirewallDisabledRuleGroup:yi,ApplicationGatewayAutoscaleConfiguration:Ni,ApplicationGatewayFirewallRuleSet:fi,ApplicationGatewayFirewallRuleGroup:Ri,ApplicationGatewayFirewallRule:wi,ApplicationGatewayAvailableSslOptions:gi,ApplicationGatewaySslPredefinedPolicy:Ai,AzureFirewallIPConfiguration:hi,AzureFirewallApplicationRuleCollection:Ii,AzureFirewallRCAction:ki,AzureFirewallApplicationRule:vi,AzureFirewallApplicationRuleProtocol:zi,AzureFirewallNatRuleCollection:Vi,AzureFirewallNatRCAction:Ei,AzureFirewallNatRule:Mi,AzureFirewallNetworkRuleCollection:Fi,AzureFirewallNetworkRule:xi,AzureFirewall:qi,AzureFirewallFqdnTag:Ti,DdosProtectionPlan:Bi,EndpointServiceResult:Oi,ExpressRouteCircuitAuthorization:Di,RouteFilterRule:Ui,ExpressRouteCircuitConnection:Ki,ExpressRouteCircuitPeering:ji,ExpressRouteCircuitPeeringConfig:Hi,ExpressRouteCircuitStats:Wi,RouteFilter:Zi,Ipv6ExpressRouteCircuitPeeringConfig:Qi,ExpressRouteConnectionId:_i,ExpressRouteCircuit:Ji,ExpressRouteCircuitSku:Xi,ExpressRouteCircuitServiceProviderProperties:$i,ExpressRouteServiceProvider:na,ExpressRouteServiceProviderBandwidthsOffered:oa,ExpressRouteCrossConnectionPeering:la,ExpressRouteCrossConnection:ca,ExpressRouteCircuitReference:ua,ExpressRouteConnection:Na,ExpressRouteCircuitPeeringId:ma,ExpressRouteGateway:Ca,ExpressRouteGatewayPropertiesAutoScaleConfiguration:Pa,ExpressRouteGatewayPropertiesAutoScaleConfigurationBounds:ya,VirtualHubId:da,LoadBalancingRule:Sa,Probe:ga,InboundNatPool:Aa,OutboundRule:Ga,LoadBalancer:ba,LoadBalancerSku:fa,ContainerNetworkInterfaceConfiguration:xa,ContainerNetworkInterface:Ta,Container:Fa,ContainerNetworkInterfaceIpConfiguration:qa,NetworkProfile:La,NetworkWatcher:Oa,ConnectionMonitorResult:Bo,ConnectionMonitorSource:qo,ConnectionMonitorDestination:To,PublicIPPrefix:nn,PublicIPPrefixSku:an,ReferencedPublicIpAddress:on,PatchRouteFilterRule:sn,PatchRouteFilter:pn,BgpServiceCommunity:ln,BGPCommunity:un,VirtualNetworkPeering:yn,AddressSpace:mn,VirtualNetwork:Nn,DhcpOptions:Pn,VirtualNetworkGatewayIPConfiguration:fn,VpnClientRootCertificate:gn,VpnClientRevokedCertificate:An,VirtualNetworkGateway:vn,VirtualNetworkGatewaySku:Sn,VpnClientConfiguration:bn,BgpSettings:hn,LocalNetworkGateway:xn,VirtualNetworkGatewayConnection:Fn,TunnelConnectionHealth:Vn,ConnectionSharedKey:Tn,VirtualNetworkGatewayConnectionListEntity:On,VirtualNetworkConnectionGatewayReference:Bn,VirtualWAN:jn,VpnSite:Qn,DeviceProperties:Zn,HubVirtualNetworkConnection:$n,VirtualHub:es,VirtualHubRouteTable:Yn,VirtualHubRoute:Jn,VpnConnection:ts,VpnGateway:rs,P2SVpnGateway:os,VpnClientConnectionHealth:as}),_R=function(){function e(e){this.client=e}return e.prototype.get=function(e,t,r,i,a){return this.client.sendOperationRequest({resourceGroupName:e,virtualWanName:t,p2SVpnServerConfigurationName:r,options:i},jR,a)},e.prototype.createOrUpdate=function(e,t,r,i,a){return this.beginCreateOrUpdate(e,t,r,i,a).then(function(e){return e.pollUntilFinished()})},e.prototype.deleteMethod=function(e,t,r,i){return this.beginDeleteMethod(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.listByVirtualWan=function(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,virtualWanName:t,options:r},ZR,i)},e.prototype.beginCreateOrUpdate=function(e,t,r,i,a){return this.client.sendLRORequest({resourceGroupName:e,virtualWanName:t,p2SVpnServerConfigurationName:r,p2SVpnServerConfigurationParameters:i,options:a},QR,a)},e.prototype.beginDeleteMethod=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,virtualWanName:t,p2SVpnServerConfigurationName:r,options:i},XR,i)},e.prototype.listByVirtualWanNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},$R,r)},e}(),KR=new r.Serializer(WR),jR={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualWans/{virtualWanName}/p2sVpnServerConfigurations/{p2SVpnServerConfigurationName}",urlParameters:[tu,Kp,cu,Dp],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:Kn},default:{bodyMapper:ka}},serializer:KR},ZR={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualWans/{virtualWanName}/p2sVpnServerConfigurations",urlParameters:[tu,Kp,cu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:cp},default:{bodyMapper:ka}},serializer:KR},QR={httpMethod:"PUT",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualWans/{virtualWanName}/p2sVpnServerConfigurations/{p2SVpnServerConfigurationName}",urlParameters:[tu,Kp,cu,Dp],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"p2SVpnServerConfigurationParameters",mapper:cr({},Kn,{required:!0})},responses:{200:{bodyMapper:Kn},201:{bodyMapper:Kn},default:{bodyMapper:ka}},serializer:KR},XR={httpMethod:"DELETE",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualWans/{virtualWanName}/p2sVpnServerConfigurations/{p2SVpnServerConfigurationName}",urlParameters:[tu,Kp,cu,Dp],queryParameters:[Pp],headerParameters:[yp],responses:{200:{},202:{},204:{},default:{bodyMapper:ka}},serializer:KR},$R={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:cp},default:{bodyMapper:ka}},serializer:KR},JR=Object.freeze({P2SVpnGateway:os,Resource:Cr,BaseResource:yr,SubResource:Pr,AddressSpace:mn,VpnClientConnectionHealth:as,ErrorModel:ka,ErrorDetails:ha,TagsObject:Gi,ListP2SVpnGatewaysResult:dp,P2SVpnProfileParameters:ns,VpnProfileResponse:ss,CloudError:mr,NetworkInterfaceTapConfiguration:Nr,VirtualNetworkTap:Dr,NetworkInterfaceIPConfiguration:Wr,ApplicationGatewayBackendAddressPool:Kr,ApplicationGatewayBackendAddress:_r,BackendAddressPool:Hr,InboundNatRule:Ur,Subnet:Br,NetworkSecurityGroup:Gr,SecurityRule:Rr,ApplicationSecurityGroup:wr,NetworkInterface:Ar,InterfaceEndpoint:Sr,EndpointService:fr,NetworkInterfaceDnsSettings:gr,RouteTable:hr,Route:br,ServiceEndpointPropertiesFormat:kr,ServiceEndpointPolicy:vr,ServiceEndpointPolicyDefinition:zr,IPConfiguration:xr,PublicIPAddress:Vr,PublicIPAddressSku:Ir,PublicIPAddressDnsSettings:Er,IpTag:Mr,IPConfigurationProfile:Fr,ResourceNavigationLink:qr,ServiceAssociationLink:Tr,Delegation:Lr,FrontendIPConfiguration:Or,ApplicationGatewayBackendHttpSettings:Zr,ApplicationGatewayConnectionDraining:jr,ApplicationGatewayIPConfiguration:ti,ApplicationGatewayAuthenticationCertificate:ri,ApplicationGatewayTrustedRootCertificate:ii,ApplicationGatewaySslCertificate:ai,ApplicationGatewayFrontendIPConfiguration:oi,ApplicationGatewayFrontendPort:ni,ApplicationGatewayHttpListener:si,ApplicationGatewayPathRule:pi,ApplicationGatewayProbe:li,ApplicationGatewayProbeHealthResponseMatch:ui,ApplicationGatewayRequestRoutingRule:ci,ApplicationGatewayRedirectConfiguration:di,ApplicationGatewayUrlPathMap:mi,ApplicationGateway:Ci,ApplicationGatewaySku:Yr,ApplicationGatewaySslPolicy:ei,ApplicationGatewayWebApplicationFirewallConfiguration:Pi,ApplicationGatewayFirewallDisabledRuleGroup:yi,ApplicationGatewayAutoscaleConfiguration:Ni,ApplicationGatewayFirewallRuleSet:fi,ApplicationGatewayFirewallRuleGroup:Ri,ApplicationGatewayFirewallRule:wi,ApplicationGatewayAvailableSslOptions:gi,ApplicationGatewaySslPredefinedPolicy:Ai,AzureFirewallIPConfiguration:hi,AzureFirewallApplicationRuleCollection:Ii,AzureFirewallRCAction:ki,AzureFirewallApplicationRule:vi,AzureFirewallApplicationRuleProtocol:zi,AzureFirewallNatRuleCollection:Vi,AzureFirewallNatRCAction:Ei,AzureFirewallNatRule:Mi,AzureFirewallNetworkRuleCollection:Fi,AzureFirewallNetworkRule:xi,AzureFirewall:qi,AzureFirewallFqdnTag:Ti,DdosProtectionPlan:Bi,EndpointServiceResult:Oi,ExpressRouteCircuitAuthorization:Di,RouteFilterRule:Ui,ExpressRouteCircuitConnection:Ki,ExpressRouteCircuitPeering:ji,ExpressRouteCircuitPeeringConfig:Hi,ExpressRouteCircuitStats:Wi,RouteFilter:Zi,Ipv6ExpressRouteCircuitPeeringConfig:Qi,ExpressRouteConnectionId:_i,ExpressRouteCircuit:Ji,ExpressRouteCircuitSku:Xi,ExpressRouteCircuitServiceProviderProperties:$i,ExpressRouteServiceProvider:na,ExpressRouteServiceProviderBandwidthsOffered:oa,ExpressRouteCrossConnectionPeering:la,ExpressRouteCrossConnection:ca,ExpressRouteCircuitReference:ua,ExpressRouteConnection:Na,ExpressRouteCircuitPeeringId:ma,ExpressRouteGateway:Ca,ExpressRouteGatewayPropertiesAutoScaleConfiguration:Pa,ExpressRouteGatewayPropertiesAutoScaleConfigurationBounds:ya,VirtualHubId:da,LoadBalancingRule:Sa,Probe:ga,InboundNatPool:Aa,OutboundRule:Ga,LoadBalancer:ba,LoadBalancerSku:fa,ContainerNetworkInterfaceConfiguration:xa,ContainerNetworkInterface:Ta,Container:Fa,ContainerNetworkInterfaceIpConfiguration:qa,NetworkProfile:La,NetworkWatcher:Oa,ConnectionMonitorResult:Bo,ConnectionMonitorSource:qo,ConnectionMonitorDestination:To,PublicIPPrefix:nn,PublicIPPrefixSku:an,ReferencedPublicIpAddress:on,PatchRouteFilterRule:sn,PatchRouteFilter:pn,BgpServiceCommunity:ln,BGPCommunity:un,VirtualNetworkPeering:yn,VirtualNetwork:Nn,DhcpOptions:Pn,VirtualNetworkGatewayIPConfiguration:fn,VpnClientRootCertificate:gn,VpnClientRevokedCertificate:An,VirtualNetworkGateway:vn,VirtualNetworkGatewaySku:Sn,VpnClientConfiguration:bn,IpsecPolicy:Gn,BgpSettings:hn,LocalNetworkGateway:xn,VirtualNetworkGatewayConnection:Fn,TunnelConnectionHealth:Vn,ConnectionSharedKey:Tn,VirtualNetworkGatewayConnectionListEntity:On,VirtualNetworkConnectionGatewayReference:Bn,P2SVpnServerConfigVpnClientRootCertificate:Hn,P2SVpnServerConfigVpnClientRevokedCertificate:Un,P2SVpnServerConfigRadiusServerRootCertificate:Wn,P2SVpnServerConfigRadiusClientRootCertificate:_n,P2SVpnServerConfiguration:Kn,VirtualWAN:jn,VpnSite:Qn,DeviceProperties:Zn,HubVirtualNetworkConnection:$n,VirtualHub:es,VirtualHubRouteTable:Yn,VirtualHubRoute:Jn,VpnConnection:ts,VpnGateway:rs}),YR=function(){function e(e){this.client=e}return e.prototype.get=function(e,t,r,i){return this.client.sendOperationRequest({resourceGroupName:e,gatewayName:t,options:r},tf,i)},e.prototype.createOrUpdate=function(e,t,r,i){return this.beginCreateOrUpdate(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.updateTags=function(e,t,r,i){return this.beginUpdateTags(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.deleteMethod=function(e,t,r){return this.beginDeleteMethod(e,t,r).then(function(e){return e.pollUntilFinished()})},e.prototype.listByResourceGroup=function(e,t,r){return this.client.sendOperationRequest({resourceGroupName:e,options:t},rf,r)},e.prototype.list=function(e,t){return this.client.sendOperationRequest({options:e},af,t)},e.prototype.generateVpnProfile=function(e,t,r,i){return this.beginGenerateVpnProfile(e,t,r,i).then(function(e){return e.pollUntilFinished()})},e.prototype.beginCreateOrUpdate=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,gatewayName:t,p2SVpnGatewayParameters:r,options:i},of,i)},e.prototype.beginUpdateTags=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,gatewayName:t,p2SVpnGatewayParameters:r,options:i},nf,i)},e.prototype.beginDeleteMethod=function(e,t,r){return this.client.sendLRORequest({resourceGroupName:e,gatewayName:t,options:r},sf,r)},e.prototype.beginGenerateVpnProfile=function(e,t,r,i){return this.client.sendLRORequest({resourceGroupName:e,gatewayName:t,parameters:r,options:i},pf,i)},e.prototype.listByResourceGroupNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},uf,r)},e.prototype.listNext=function(e,t,r){return this.client.sendOperationRequest({nextPageLink:e,options:t},lf,r)},e}(),ef=new r.Serializer(JR),tf={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/p2svpnGateways/{gatewayName}",urlParameters:[tu,Kp,vp],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:os},default:{bodyMapper:ka}},serializer:ef},rf={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/p2svpnGateways",urlParameters:[tu,Kp],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:dp},default:{bodyMapper:ka}},serializer:ef},af={httpMethod:"GET",path:"subscriptions/{subscriptionId}/providers/Microsoft.Network/p2svpnGateways",urlParameters:[tu],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:dp},default:{bodyMapper:ka}},serializer:ef},of={httpMethod:"PUT",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/p2svpnGateways/{gatewayName}",urlParameters:[tu,Kp,vp],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"p2SVpnGatewayParameters",mapper:cr({},os,{required:!0})},responses:{200:{bodyMapper:os},201:{bodyMapper:os},default:{bodyMapper:ka}},serializer:ef},nf={httpMethod:"PATCH",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/p2svpnGateways/{gatewayName}",urlParameters:[tu,Kp,vp],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"p2SVpnGatewayParameters",mapper:cr({},Gi,{required:!0})},responses:{200:{bodyMapper:os},201:{bodyMapper:os},default:{bodyMapper:ka}},serializer:ef},sf={httpMethod:"DELETE",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/p2svpnGateways/{gatewayName}",urlParameters:[tu,Kp,vp],queryParameters:[Pp],headerParameters:[yp],responses:{200:{},202:{},204:{},default:{bodyMapper:ka}},serializer:ef},pf={httpMethod:"POST",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/p2svpnGateways/{gatewayName}/generatevpnprofile",urlParameters:[Kp,vp,tu],queryParameters:[Pp],headerParameters:[yp],requestBody:{parameterPath:"parameters",mapper:cr({},ns,{required:!0})},responses:{200:{bodyMapper:ss},202:{},default:{bodyMapper:mr}},serializer:ef},uf={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:dp},default:{bodyMapper:ka}},serializer:ef},lf={httpMethod:"GET",baseUrl:"https://management.azure.com",path:"{nextLink}",urlParameters:[Op],headerParameters:[yp],responses:{200:{bodyMapper:dp},default:{bodyMapper:ka}},serializer:ef},cf=function(a){function e(e,t,r){var i=this;if(null==e)throw new Error("'credentials' cannot be null.");if(null==t)throw new Error("'subscriptionId' cannot be null.");return r||(r={}),(i=a.call(this,e,r)||this).acceptLanguage="en-US",i.longRunningOperationRetryTimeout=30,i.baseUri=r.baseUri||i.baseUri||"https://management.azure.com",i.requestContentType="application/json; charset=utf-8",i.credentials=e,i.subscriptionId=t,i.addUserAgentInfo("@azure/arm-network/1.0.0"),null!==r.acceptLanguage&&void 0!==r.acceptLanguage&&(i.acceptLanguage=r.acceptLanguage),null!==r.longRunningOperationRetryTimeout&&void 0!==r.longRunningOperationRetryTimeout&&(i.longRunningOperationRetryTimeout=r.longRunningOperationRetryTimeout),i}return o(e,a),e}(t.AzureServiceClient),df=function(a){function e(e,t,r){var i=a.call(this,e,t,r)||this;return i.applicationGateways=new Nu(i),i.applicationSecurityGroups=new Fu(i),i.availableDelegations=new _u(i),i.availableResourceGroupDelegations=new Xu(i),i.azureFirewalls=new tl(i),i.azureFirewallFqdnTags=new cl(i),i.ddosProtectionPlans=new Nl(i),i.availableEndpointServices=new hl(i),i.expressRouteCircuitAuthorizations=new El(i),i.expressRouteCircuitPeerings=new Bl(i),i.expressRouteCircuitConnections=new jl(i),i.expressRouteCircuits=new Yl(i),i.expressRouteServiceProviders=new Pc(i),i.expressRouteCrossConnections=new fc(i),i.expressRouteCrossConnectionPeerings=new Vc(i),i.expressRouteGateways=new Dc(i),i.expressRouteConnections=new Qc(i),i.interfaceEndpoints=new rd(i),i.loadBalancers=new dd(i),i.loadBalancerBackendAddressPools=new Ad(i),i.loadBalancerFrontendIPConfigurations=new vd(i),i.inboundNatRules=new Fd(i),i.loadBalancerLoadBalancingRules=new Ud(i),i.loadBalancerNetworkInterfaces=new Qd(i),i.loadBalancerProbes=new em(i),i.networkInterfaces=new nm(i),i.networkInterfaceIPConfigurations=new km(i),i.networkInterfaceLoadBalancers=new Vm(i),i.networkInterfaceTapConfigurations=new Lm(i),i.networkProfiles=new Km(i),i.networkSecurityGroups=new iy(i),i.securityRules=new yy(i),i.defaultSecurityRules=new gy(i),i.networkWatchers=new zy(i),i.packetCaptures=new Qy(i),i.connectionMonitors=new aP(i),i.operations=new yP(i),i.publicIPAddresses=new RP(i),i.publicIPPrefixes=new FP(i),i.routeFilters=new KP(i),i.routeFilterRules=new iN(i),i.routeTables=new dN(i),i.routes=new AN(i),i.bgpServiceCommunities=new EN(i),i.serviceEndpointPolicies=new qN(i),i.serviceEndpointPolicyDefinitions=new jN(i),i.usages=new tC(i),i.virtualNetworks=new nC(i),i.subnets=new fC(i),i.virtualNetworkPeerings=new zC(i),i.virtualNetworkTaps=new qC(i),i.virtualNetworkGateways=new jC(i),i.virtualNetworkGatewayConnections=new Nw(i),i.localNetworkGateways=new zw(i),i.virtualWans=new Tw(i),i.vpnSites=new Zw(i),i.vpnSitesConfiguration=new oR(i),i.virtualHubs=new uR(i),i.hubVirtualNetworkConnections=new fR(i),i.vpnGateways=new hR(i),i.vpnConnections=new TR(i),i.p2sVpnServerConfigurations=new _R(i),i.p2sVpnGateways=new YR(i),i}return o(e,a),e.prototype.checkDnsNameAvailability=function(e,t,r,i){return this.sendOperationRequest({location:e,domainNameLabel:t,options:r},yf,i)},e.prototype.supportedSecurityProviders=function(e,t,r,i){return this.sendOperationRequest({resourceGroupName:e,virtualWANName:t,options:r},Pf,i)},e}(cf),mf=new r.Serializer(mp),yf={httpMethod:"GET",path:"subscriptions/{subscriptionId}/providers/Microsoft.Network/locations/{location}/CheckDnsNameAvailability",urlParameters:[Fp,tu],queryParameters:[{parameterPath:"domainNameLabel",mapper:{required:!0,serializedName:"domainNameLabel",type:{name:"String"}}},Pp],headerParameters:[yp],responses:{200:{bodyMapper:Li},default:{bodyMapper:mr}},serializer:mf},Pf={httpMethod:"GET",path:"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualWans/{virtualWANName}/supportedSecurityProviders",urlParameters:[tu,Kp,du],queryParameters:[Pp],headerParameters:[yp],responses:{200:{bodyMapper:is},default:{bodyMapper:ka}},serializer:mf};e.NetworkManagementClient=df,e.NetworkManagementClientContext=cf,e.NetworkManagementModels=dr,e.NetworkManagementMappers=mp,e.ApplicationGateways=Nu,e.ApplicationSecurityGroups=Fu,e.AvailableDelegations=_u,e.AvailableResourceGroupDelegations=Xu,e.AzureFirewalls=tl,e.AzureFirewallFqdnTags=cl,e.DdosProtectionPlans=Nl,e.AvailableEndpointServices=hl,e.ExpressRouteCircuitAuthorizations=El,e.ExpressRouteCircuitPeerings=Bl,e.ExpressRouteCircuitConnections=jl,e.ExpressRouteCircuits=Yl,e.ExpressRouteServiceProviders=Pc,e.ExpressRouteCrossConnections=fc,e.ExpressRouteCrossConnectionPeerings=Vc,e.ExpressRouteGateways=Dc,e.ExpressRouteConnections=Qc,e.InterfaceEndpoints=rd,e.LoadBalancers=dd,e.LoadBalancerBackendAddressPools=Ad,e.LoadBalancerFrontendIPConfigurations=vd,e.InboundNatRules=Fd,e.LoadBalancerLoadBalancingRules=Ud,e.LoadBalancerNetworkInterfaces=Qd,e.LoadBalancerProbes=em,e.NetworkInterfaces=nm,e.NetworkInterfaceIPConfigurations=km,e.NetworkInterfaceLoadBalancers=Vm,e.NetworkInterfaceTapConfigurations=Lm,e.NetworkProfiles=Km,e.NetworkSecurityGroups=iy,e.SecurityRules=yy,e.DefaultSecurityRules=gy,e.NetworkWatchers=zy,e.PacketCaptures=Qy,e.ConnectionMonitors=aP,e.Operations=yP,e.PublicIPAddresses=RP,e.PublicIPPrefixes=FP,e.RouteFilters=KP,e.RouteFilterRules=iN,e.RouteTables=dN,e.Routes=AN,e.BgpServiceCommunities=EN,e.ServiceEndpointPolicies=qN,e.ServiceEndpointPolicyDefinitions=jN,e.Usages=tC,e.VirtualNetworks=nC,e.Subnets=fC,e.VirtualNetworkPeerings=zC,e.VirtualNetworkTaps=qC,e.VirtualNetworkGateways=jC,e.VirtualNetworkGatewayConnections=Nw,e.LocalNetworkGateways=zw,e.VirtualWans=Tw,e.VpnSites=Zw,e.VpnSitesConfiguration=oR,e.VirtualHubs=uR,e.HubVirtualNetworkConnections=fR,e.VpnGateways=hR,e.VpnConnections=TR,e.P2sVpnServerConfigurations=_R,e.P2sVpnGateways=YR,Object.defineProperty(e,"__esModule",{value:!0})});