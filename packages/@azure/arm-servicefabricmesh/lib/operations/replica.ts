/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/replicaMappers";
import * as Parameters from "../models/parameters";
import { ServiceFabricMeshManagementClientContext } from "../serviceFabricMeshManagementClientContext";

/** Class representing a Replica. */
export class Replica {
  private readonly client: ServiceFabricMeshManagementClientContext;

  /**
   * Create a Replica.
   * @param {ServiceFabricMeshManagementClientContext} client Reference to the service client.
   */
  constructor(client: ServiceFabricMeshManagementClientContext) {
    this.client = client;
  }

  /**
   * Gets the information about all replicas of a given service of an application. The information
   * includes the runtime properties of the replica instance.
   * @summary Gets replicas of a given service.
   * @param resourceGroupName Azure resource group name
   * @param applicationName The identity of the application.
   * @param serviceName The identity of the service.
   * @param [options] The optional parameters
   * @returns Promise<Models.ReplicaListByServiceNameResponse>
   */
  listByServiceName(resourceGroupName: string, applicationName: string, serviceName: string, options?: msRest.RequestOptionsBase): Promise<Models.ReplicaListByServiceNameResponse>;
  /**
   * @param resourceGroupName Azure resource group name
   * @param applicationName The identity of the application.
   * @param serviceName The identity of the service.
   * @param callback The callback
   */
  listByServiceName(resourceGroupName: string, applicationName: string, serviceName: string, callback: msRest.ServiceCallback<Models.ServiceReplicaList>): void;
  /**
   * @param resourceGroupName Azure resource group name
   * @param applicationName The identity of the application.
   * @param serviceName The identity of the service.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByServiceName(resourceGroupName: string, applicationName: string, serviceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ServiceReplicaList>): void;
  listByServiceName(resourceGroupName: string, applicationName: string, serviceName: string, options?: msRest.RequestOptionsBase, callback?: msRest.ServiceCallback<Models.ServiceReplicaList>): Promise<Models.ReplicaListByServiceNameResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        applicationName,
        serviceName,
        options
      },
      listByServiceNameOperationSpec,
      callback) as Promise<Models.ReplicaListByServiceNameResponse>;
  }

  /**
   * Gets the information about the specified replica of a given service of an application. The
   * information includes the runtime properties of the replica instance.
   * @summary Gets a specific replica of a given service.
   * @param resourceGroupName Azure resource group name
   * @param applicationName The identity of the application.
   * @param serviceName The identity of the service.
   * @param replicaName The identity of the service replica.
   * @param [options] The optional parameters
   * @returns Promise<Models.ReplicaGetResponse>
   */
  get(resourceGroupName: string, applicationName: string, serviceName: string, replicaName: string, options?: msRest.RequestOptionsBase): Promise<Models.ReplicaGetResponse>;
  /**
   * @param resourceGroupName Azure resource group name
   * @param applicationName The identity of the application.
   * @param serviceName The identity of the service.
   * @param replicaName The identity of the service replica.
   * @param callback The callback
   */
  get(resourceGroupName: string, applicationName: string, serviceName: string, replicaName: string, callback: msRest.ServiceCallback<Models.ServiceReplicaDescription>): void;
  /**
   * @param resourceGroupName Azure resource group name
   * @param applicationName The identity of the application.
   * @param serviceName The identity of the service.
   * @param replicaName The identity of the service replica.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(resourceGroupName: string, applicationName: string, serviceName: string, replicaName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ServiceReplicaDescription>): void;
  get(resourceGroupName: string, applicationName: string, serviceName: string, replicaName: string, options?: msRest.RequestOptionsBase, callback?: msRest.ServiceCallback<Models.ServiceReplicaDescription>): Promise<Models.ReplicaGetResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        applicationName,
        serviceName,
        replicaName,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.ReplicaGetResponse>;
  }

  /**
   * Gets the information about all replicas of a given service of an application. The information
   * includes the runtime properties of the replica instance.
   * @summary Gets replicas of a given service.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.ReplicaListByServiceNameNextResponse>
   */
  listByServiceNameNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.ReplicaListByServiceNameNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listByServiceNameNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ServiceReplicaList>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByServiceNameNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ServiceReplicaList>): void;
  listByServiceNameNext(nextPageLink: string, options?: msRest.RequestOptionsBase, callback?: msRest.ServiceCallback<Models.ServiceReplicaList>): Promise<Models.ReplicaListByServiceNameNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listByServiceNameNextOperationSpec,
      callback) as Promise<Models.ReplicaListByServiceNameNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listByServiceNameOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/applications/{applicationName}/services/{serviceName}/replicas",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.applicationName,
    Parameters.serviceName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ServiceReplicaList
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/applications/{applicationName}/services/{serviceName}/replicas/{replicaName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.applicationName,
    Parameters.serviceName,
    Parameters.replicaName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ServiceReplicaDescription
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listByServiceNameNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ServiceReplicaList
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};
