/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/serviceReplicaMappers";
import * as Parameters from "../models/parameters";
import { ServiceFabricMeshManagementClientContext } from "../serviceFabricMeshManagementClientContext";

/** Class representing a ServiceReplica. */
export class ServiceReplica {
  private readonly client: ServiceFabricMeshManagementClientContext;

  /**
   * Create a ServiceReplica.
   * @param {ServiceFabricMeshManagementClientContext} client Reference to the service client.
   */
  constructor(client: ServiceFabricMeshManagementClientContext) {
    this.client = client;
  }

  /**
   * Gets the information about the service replica with the given name. The information include the
   * description and other properties of the service replica.
   * @summary Gets the given replica of the service of an application.
   * @param resourceGroupName Azure resource group name
   * @param applicationResourceName The identity of the application.
   * @param serviceResourceName The identity of the service.
   * @param replicaName Service Fabric replica name.
   * @param [options] The optional parameters
   * @returns Promise<Models.ServiceReplicaGetResponse>
   */
  get(resourceGroupName: string, applicationResourceName: string, serviceResourceName: string, replicaName: string, options?: msRest.RequestOptionsBase): Promise<Models.ServiceReplicaGetResponse>;
  /**
   * @param resourceGroupName Azure resource group name
   * @param applicationResourceName The identity of the application.
   * @param serviceResourceName The identity of the service.
   * @param replicaName Service Fabric replica name.
   * @param callback The callback
   */
  get(resourceGroupName: string, applicationResourceName: string, serviceResourceName: string, replicaName: string, callback: msRest.ServiceCallback<Models.ServiceReplicaDescription>): void;
  /**
   * @param resourceGroupName Azure resource group name
   * @param applicationResourceName The identity of the application.
   * @param serviceResourceName The identity of the service.
   * @param replicaName Service Fabric replica name.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(resourceGroupName: string, applicationResourceName: string, serviceResourceName: string, replicaName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ServiceReplicaDescription>): void;
  get(resourceGroupName: string, applicationResourceName: string, serviceResourceName: string, replicaName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ServiceReplicaDescription>, callback?: msRest.ServiceCallback<Models.ServiceReplicaDescription>): Promise<Models.ServiceReplicaGetResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        applicationResourceName,
        serviceResourceName,
        replicaName,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.ServiceReplicaGetResponse>;
  }

  /**
   * Gets the information about all replicas of a given service of an application. The information
   * includes the runtime properties of the replica instance.
   * @summary Gets replicas of a given service.
   * @param resourceGroupName Azure resource group name
   * @param applicationResourceName The identity of the application.
   * @param serviceResourceName The identity of the service.
   * @param [options] The optional parameters
   * @returns Promise<Models.ServiceReplicaListResponse>
   */
  list(resourceGroupName: string, applicationResourceName: string, serviceResourceName: string, options?: msRest.RequestOptionsBase): Promise<Models.ServiceReplicaListResponse>;
  /**
   * @param resourceGroupName Azure resource group name
   * @param applicationResourceName The identity of the application.
   * @param serviceResourceName The identity of the service.
   * @param callback The callback
   */
  list(resourceGroupName: string, applicationResourceName: string, serviceResourceName: string, callback: msRest.ServiceCallback<Models.ServiceReplicaDescriptionList>): void;
  /**
   * @param resourceGroupName Azure resource group name
   * @param applicationResourceName The identity of the application.
   * @param serviceResourceName The identity of the service.
   * @param options The optional parameters
   * @param callback The callback
   */
  list(resourceGroupName: string, applicationResourceName: string, serviceResourceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ServiceReplicaDescriptionList>): void;
  list(resourceGroupName: string, applicationResourceName: string, serviceResourceName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ServiceReplicaDescriptionList>, callback?: msRest.ServiceCallback<Models.ServiceReplicaDescriptionList>): Promise<Models.ServiceReplicaListResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        applicationResourceName,
        serviceResourceName,
        options
      },
      listOperationSpec,
      callback) as Promise<Models.ServiceReplicaListResponse>;
  }

  /**
   * Gets the information about all replicas of a given service of an application. The information
   * includes the runtime properties of the replica instance.
   * @summary Gets replicas of a given service.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.ServiceReplicaListNextResponse>
   */
  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.ServiceReplicaListNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ServiceReplicaDescriptionList>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ServiceReplicaDescriptionList>): void;
  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ServiceReplicaDescriptionList>, callback?: msRest.ServiceCallback<Models.ServiceReplicaDescriptionList>): Promise<Models.ServiceReplicaListNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listNextOperationSpec,
      callback) as Promise<Models.ServiceReplicaListNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/applications/{applicationResourceName}/services/{serviceResourceName}/replicas/{replicaName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.applicationResourceName,
    Parameters.serviceResourceName,
    Parameters.replicaName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ServiceReplicaDescription
    },
    default: {
      bodyMapper: Mappers.ErrorModel
    }
  },
  serializer
};

const listOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/applications/{applicationResourceName}/services/{serviceResourceName}/replicas",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.applicationResourceName,
    Parameters.serviceResourceName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ServiceReplicaDescriptionList
    },
    default: {
      bodyMapper: Mappers.ErrorModel
    }
  },
  serializer
};

const listNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ServiceReplicaDescriptionList
    },
    default: {
      bodyMapper: Mappers.ErrorModel
    }
  },
  serializer
};
