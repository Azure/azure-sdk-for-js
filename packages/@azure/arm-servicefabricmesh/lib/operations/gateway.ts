/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/gatewayMappers";
import * as Parameters from "../models/parameters";
import { ServiceFabricMeshManagementClientContext } from "../serviceFabricMeshManagementClientContext";

/** Class representing a Gateway. */
export class Gateway {
  private readonly client: ServiceFabricMeshManagementClientContext;

  /**
   * Create a Gateway.
   * @param {ServiceFabricMeshManagementClientContext} client Reference to the service client.
   */
  constructor(client: ServiceFabricMeshManagementClientContext) {
    this.client = client;
  }

  /**
   * Creates a gateway resource with the specified name, description and properties. If a gateway
   * resource with the same name exists, then it is updated with the specified description and
   * properties. Use gateway resources to create a gateway for public connectivity for services
   * within your application.
   * @summary Creates or updates a gateway resource.
   * @param resourceGroupName Azure resource group name
   * @param gatewayResourceName The identity of the gateway.
   * @param gatewayResourceDescription Description for creating a Gateway resource.
   * @param [options] The optional parameters
   * @returns Promise<Models.GatewayCreateResponse>
   */
  create(resourceGroupName: string, gatewayResourceName: string, gatewayResourceDescription: Models.GatewayResourceDescription, options?: msRest.RequestOptionsBase): Promise<Models.GatewayCreateResponse>;
  /**
   * @param resourceGroupName Azure resource group name
   * @param gatewayResourceName The identity of the gateway.
   * @param gatewayResourceDescription Description for creating a Gateway resource.
   * @param callback The callback
   */
  create(resourceGroupName: string, gatewayResourceName: string, gatewayResourceDescription: Models.GatewayResourceDescription, callback: msRest.ServiceCallback<Models.GatewayResourceDescription>): void;
  /**
   * @param resourceGroupName Azure resource group name
   * @param gatewayResourceName The identity of the gateway.
   * @param gatewayResourceDescription Description for creating a Gateway resource.
   * @param options The optional parameters
   * @param callback The callback
   */
  create(resourceGroupName: string, gatewayResourceName: string, gatewayResourceDescription: Models.GatewayResourceDescription, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.GatewayResourceDescription>): void;
  create(resourceGroupName: string, gatewayResourceName: string, gatewayResourceDescription: Models.GatewayResourceDescription, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.GatewayResourceDescription>, callback?: msRest.ServiceCallback<Models.GatewayResourceDescription>): Promise<Models.GatewayCreateResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        gatewayResourceName,
        gatewayResourceDescription,
        options
      },
      createOperationSpec,
      callback) as Promise<Models.GatewayCreateResponse>;
  }

  /**
   * Gets the information about the gateway resource with the given name. The information include the
   * description and other properties of the gateway.
   * @summary Gets the gateway resource with the given name.
   * @param resourceGroupName Azure resource group name
   * @param gatewayResourceName The identity of the gateway.
   * @param [options] The optional parameters
   * @returns Promise<Models.GatewayGetResponse>
   */
  get(resourceGroupName: string, gatewayResourceName: string, options?: msRest.RequestOptionsBase): Promise<Models.GatewayGetResponse>;
  /**
   * @param resourceGroupName Azure resource group name
   * @param gatewayResourceName The identity of the gateway.
   * @param callback The callback
   */
  get(resourceGroupName: string, gatewayResourceName: string, callback: msRest.ServiceCallback<Models.GatewayResourceDescription>): void;
  /**
   * @param resourceGroupName Azure resource group name
   * @param gatewayResourceName The identity of the gateway.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(resourceGroupName: string, gatewayResourceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.GatewayResourceDescription>): void;
  get(resourceGroupName: string, gatewayResourceName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.GatewayResourceDescription>, callback?: msRest.ServiceCallback<Models.GatewayResourceDescription>): Promise<Models.GatewayGetResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        gatewayResourceName,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.GatewayGetResponse>;
  }

  /**
   * Deletes the gateway resource identified by the name.
   * @summary Deletes the gateway resource.
   * @param resourceGroupName Azure resource group name
   * @param gatewayResourceName The identity of the gateway.
   * @param [options] The optional parameters
   * @returns Promise<msRest.RestResponse>
   */
  deleteMethod(resourceGroupName: string, gatewayResourceName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
  /**
   * @param resourceGroupName Azure resource group name
   * @param gatewayResourceName The identity of the gateway.
   * @param callback The callback
   */
  deleteMethod(resourceGroupName: string, gatewayResourceName: string, callback: msRest.ServiceCallback<void>): void;
  /**
   * @param resourceGroupName Azure resource group name
   * @param gatewayResourceName The identity of the gateway.
   * @param options The optional parameters
   * @param callback The callback
   */
  deleteMethod(resourceGroupName: string, gatewayResourceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
  deleteMethod(resourceGroupName: string, gatewayResourceName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        gatewayResourceName,
        options
      },
      deleteMethodOperationSpec,
      callback);
  }

  /**
   * Gets the information about all gateway resources in a given resource group. The information
   * include the description and other properties of the Gateway.
   * @summary Gets all the gateway resources in a given resource group.
   * @param resourceGroupName Azure resource group name
   * @param [options] The optional parameters
   * @returns Promise<Models.GatewayListByResourceGroupResponse>
   */
  listByResourceGroup(resourceGroupName: string, options?: msRest.RequestOptionsBase): Promise<Models.GatewayListByResourceGroupResponse>;
  /**
   * @param resourceGroupName Azure resource group name
   * @param callback The callback
   */
  listByResourceGroup(resourceGroupName: string, callback: msRest.ServiceCallback<Models.GatewayResourceDescriptionList>): void;
  /**
   * @param resourceGroupName Azure resource group name
   * @param options The optional parameters
   * @param callback The callback
   */
  listByResourceGroup(resourceGroupName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.GatewayResourceDescriptionList>): void;
  listByResourceGroup(resourceGroupName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.GatewayResourceDescriptionList>, callback?: msRest.ServiceCallback<Models.GatewayResourceDescriptionList>): Promise<Models.GatewayListByResourceGroupResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        options
      },
      listByResourceGroupOperationSpec,
      callback) as Promise<Models.GatewayListByResourceGroupResponse>;
  }

  /**
   * Gets the information about all gateway resources in a given resource group. The information
   * include the description and other properties of the gateway.
   * @summary Gets all the gateway resources in a given subscription.
   * @param [options] The optional parameters
   * @returns Promise<Models.GatewayListBySubscriptionResponse>
   */
  listBySubscription(options?: msRest.RequestOptionsBase): Promise<Models.GatewayListBySubscriptionResponse>;
  /**
   * @param callback The callback
   */
  listBySubscription(callback: msRest.ServiceCallback<Models.GatewayResourceDescriptionList>): void;
  /**
   * @param options The optional parameters
   * @param callback The callback
   */
  listBySubscription(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.GatewayResourceDescriptionList>): void;
  listBySubscription(options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.GatewayResourceDescriptionList>, callback?: msRest.ServiceCallback<Models.GatewayResourceDescriptionList>): Promise<Models.GatewayListBySubscriptionResponse> {
    return this.client.sendOperationRequest(
      {
        options
      },
      listBySubscriptionOperationSpec,
      callback) as Promise<Models.GatewayListBySubscriptionResponse>;
  }

  /**
   * Gets the information about all gateway resources in a given resource group. The information
   * include the description and other properties of the Gateway.
   * @summary Gets all the gateway resources in a given resource group.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.GatewayListByResourceGroupNextResponse>
   */
  listByResourceGroupNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.GatewayListByResourceGroupNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listByResourceGroupNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.GatewayResourceDescriptionList>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByResourceGroupNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.GatewayResourceDescriptionList>): void;
  listByResourceGroupNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.GatewayResourceDescriptionList>, callback?: msRest.ServiceCallback<Models.GatewayResourceDescriptionList>): Promise<Models.GatewayListByResourceGroupNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listByResourceGroupNextOperationSpec,
      callback) as Promise<Models.GatewayListByResourceGroupNextResponse>;
  }

  /**
   * Gets the information about all gateway resources in a given resource group. The information
   * include the description and other properties of the gateway.
   * @summary Gets all the gateway resources in a given subscription.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.GatewayListBySubscriptionNextResponse>
   */
  listBySubscriptionNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.GatewayListBySubscriptionNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listBySubscriptionNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.GatewayResourceDescriptionList>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listBySubscriptionNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.GatewayResourceDescriptionList>): void;
  listBySubscriptionNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.GatewayResourceDescriptionList>, callback?: msRest.ServiceCallback<Models.GatewayResourceDescriptionList>): Promise<Models.GatewayListBySubscriptionNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listBySubscriptionNextOperationSpec,
      callback) as Promise<Models.GatewayListBySubscriptionNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const createOperationSpec: msRest.OperationSpec = {
  httpMethod: "PUT",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/gateways/{gatewayResourceName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.gatewayResourceName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "gatewayResourceDescription",
    mapper: {
      ...Mappers.GatewayResourceDescription,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.GatewayResourceDescription
    },
    201: {
      bodyMapper: Mappers.GatewayResourceDescription
    },
    202: {},
    default: {
      bodyMapper: Mappers.ErrorModel
    }
  },
  serializer
};

const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/gateways/{gatewayResourceName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.gatewayResourceName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.GatewayResourceDescription
    },
    default: {
      bodyMapper: Mappers.ErrorModel
    }
  },
  serializer
};

const deleteMethodOperationSpec: msRest.OperationSpec = {
  httpMethod: "DELETE",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/gateways/{gatewayResourceName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.gatewayResourceName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {},
    202: {},
    204: {},
    default: {
      bodyMapper: Mappers.ErrorModel
    }
  },
  serializer
};

const listByResourceGroupOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/gateways",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.GatewayResourceDescriptionList
    },
    default: {
      bodyMapper: Mappers.ErrorModel
    }
  },
  serializer
};

const listBySubscriptionOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabricMesh/gateways",
  urlParameters: [
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.GatewayResourceDescriptionList
    },
    default: {
      bodyMapper: Mappers.ErrorModel
    }
  },
  serializer
};

const listByResourceGroupNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.GatewayResourceDescriptionList
    },
    default: {
      bodyMapper: Mappers.ErrorModel
    }
  },
  serializer
};

const listBySubscriptionNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.GatewayResourceDescriptionList
    },
    default: {
      bodyMapper: Mappers.ErrorModel
    }
  },
  serializer
};
