/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { CloudErrorMapper, BaseResourceMapper } from "ms-rest-azure-js";
import * as msRest from "ms-rest-js";

export const CloudError = CloudErrorMapper;
export const BaseResource = BaseResourceMapper;

export const Resource: msRest.CompositeMapper = {
  serializedName: "Resource",
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProxyResource: msRest.CompositeMapper = {
  serializedName: "ProxyResource",
  type: {
    name: "Composite",
    className: "ProxyResource",
    modelProperties: {
      ...Resource.type.modelProperties
    }
  }
};

export const ManagedProxyResource: msRest.CompositeMapper = {
  serializedName: "ManagedProxyResource",
  type: {
    name: "Composite",
    className: "ManagedProxyResource",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TrackedResource: msRest.CompositeMapper = {
  serializedName: "TrackedResource",
  type: {
    name: "Composite",
    className: "TrackedResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ProvisionedResourceProperties: msRest.CompositeMapper = {
  serializedName: "ProvisionedResourceProperties",
  type: {
    name: "Composite",
    className: "ProvisionedResourceProperties",
    modelProperties: {
      provisioningState: {
        readOnly: true,
        serializedName: "provisioningState",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Layer4IngressConfig: msRest.CompositeMapper = {
  serializedName: "Layer4IngressConfig",
  type: {
    name: "Composite",
    className: "Layer4IngressConfig",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      publicPort: {
        serializedName: "publicPort",
        type: {
          name: "Number"
        }
      },
      applicationName: {
        serializedName: "applicationName",
        type: {
          name: "String"
        }
      },
      serviceName: {
        serializedName: "serviceName",
        type: {
          name: "String"
        }
      },
      endpointName: {
        serializedName: "endpointName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IngressConfig: msRest.CompositeMapper = {
  serializedName: "IngressConfig",
  type: {
    name: "Composite",
    className: "IngressConfig",
    modelProperties: {
      qosLevel: {
        serializedName: "qosLevel",
        type: {
          name: "String"
        }
      },
      layer4: {
        serializedName: "layer4",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Layer4IngressConfig"
            }
          }
        }
      },
      publicIPAddress: {
        readOnly: true,
        serializedName: "publicIPAddress",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NetworkResourceProperties: msRest.CompositeMapper = {
  serializedName: "NetworkResourceProperties",
  type: {
    name: "Composite",
    className: "NetworkResourceProperties",
    modelProperties: {
      provisioningState: {
        readOnly: true,
        serializedName: "provisioningState",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      addressPrefix: {
        required: true,
        serializedName: "addressPrefix",
        type: {
          name: "String"
        }
      },
      ingressConfig: {
        serializedName: "ingressConfig",
        type: {
          name: "Composite",
          className: "IngressConfig"
        }
      }
    }
  }
};

export const NetworkResourceDescription: msRest.CompositeMapper = {
  serializedName: "NetworkResourceDescription",
  type: {
    name: "Composite",
    className: "NetworkResourceDescription",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      addressPrefix: {
        required: true,
        serializedName: "properties.addressPrefix",
        type: {
          name: "String"
        }
      },
      ingressConfig: {
        serializedName: "properties.ingressConfig",
        type: {
          name: "Composite",
          className: "IngressConfig"
        }
      }
    }
  }
};

export const NetworkProperties: msRest.CompositeMapper = {
  serializedName: "NetworkProperties",
  type: {
    name: "Composite",
    className: "NetworkProperties",
    modelProperties: {
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      addressPrefix: {
        required: true,
        serializedName: "addressPrefix",
        type: {
          name: "String"
        }
      },
      ingressConfig: {
        serializedName: "ingressConfig",
        type: {
          name: "Composite",
          className: "IngressConfig"
        }
      }
    }
  }
};

export const VolumeProviderParametersAzureFile: msRest.CompositeMapper = {
  serializedName: "VolumeProviderParametersAzureFile",
  type: {
    name: "Composite",
    className: "VolumeProviderParametersAzureFile",
    modelProperties: {
      accountName: {
        required: true,
        serializedName: "accountName",
        type: {
          name: "String"
        }
      },
      accountKey: {
        serializedName: "accountKey",
        type: {
          name: "String"
        }
      },
      shareName: {
        required: true,
        serializedName: "shareName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VolumeResourceProperties: msRest.CompositeMapper = {
  serializedName: "VolumeResourceProperties",
  type: {
    name: "Composite",
    className: "VolumeResourceProperties",
    modelProperties: {
      provisioningState: {
        readOnly: true,
        serializedName: "provisioningState",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      provider: {
        required: true,
        isConstant: true,
        serializedName: "provider",
        defaultValue: 'SFAzureFile',
        type: {
          name: "String"
        }
      },
      azureFileParameters: {
        serializedName: "azureFileParameters",
        type: {
          name: "Composite",
          className: "VolumeProviderParametersAzureFile"
        }
      }
    }
  }
};

export const VolumeResourceDescription: msRest.CompositeMapper = {
  serializedName: "VolumeResourceDescription",
  type: {
    name: "Composite",
    className: "VolumeResourceDescription",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      provider: {
        required: true,
        isConstant: true,
        serializedName: "properties.provider",
        defaultValue: 'SFAzureFile',
        type: {
          name: "String"
        }
      },
      azureFileParameters: {
        serializedName: "properties.azureFileParameters",
        type: {
          name: "Composite",
          className: "VolumeProviderParametersAzureFile"
        }
      }
    }
  }
};

export const VolumeProperties: msRest.CompositeMapper = {
  serializedName: "VolumeProperties",
  type: {
    name: "Composite",
    className: "VolumeProperties",
    modelProperties: {
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      provider: {
        required: true,
        isConstant: true,
        serializedName: "provider",
        defaultValue: 'SFAzureFile',
        type: {
          name: "String"
        }
      },
      azureFileParameters: {
        serializedName: "azureFileParameters",
        type: {
          name: "Composite",
          className: "VolumeProviderParametersAzureFile"
        }
      }
    }
  }
};

export const ServiceReplicaProperties: msRest.CompositeMapper = {
  serializedName: "ServiceReplicaProperties",
  type: {
    name: "Composite",
    className: "ServiceReplicaProperties",
    modelProperties: {
      osType: {
        required: true,
        serializedName: "osType",
        type: {
          name: "String"
        }
      },
      codePackages: {
        required: true,
        serializedName: "codePackages",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ContainerCodePackageProperties"
            }
          }
        }
      },
      networkRefs: {
        serializedName: "networkRefs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "NetworkRef"
            }
          }
        }
      },
      diagnostics: {
        serializedName: "diagnostics",
        type: {
          name: "Composite",
          className: "DiagnosticsRef"
        }
      }
    }
  }
};

export const ServiceResourceProperties: msRest.CompositeMapper = {
  serializedName: "ServiceResourceProperties",
  type: {
    name: "Composite",
    className: "ServiceResourceProperties",
    modelProperties: {
      ...ServiceReplicaProperties.type.modelProperties,
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      replicaCount: {
        serializedName: "replicaCount",
        type: {
          name: "Number"
        }
      },
      healthState: {
        serializedName: "healthState",
        type: {
          name: "String"
        }
      },
      status: {
        readOnly: true,
        serializedName: "status",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServiceResourceDescription: msRest.CompositeMapper = {
  serializedName: "ServiceResourceDescription",
  type: {
    name: "Composite",
    className: "ServiceResourceDescription",
    modelProperties: {
      ...ManagedProxyResource.type.modelProperties,
      osType: {
        required: true,
        serializedName: "properties.osType",
        type: {
          name: "String"
        }
      },
      codePackages: {
        required: true,
        serializedName: "properties.codePackages",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ContainerCodePackageProperties"
            }
          }
        }
      },
      networkRefs: {
        serializedName: "properties.networkRefs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "NetworkRef"
            }
          }
        }
      },
      diagnostics: {
        serializedName: "properties.diagnostics",
        type: {
          name: "Composite",
          className: "DiagnosticsRef"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      replicaCount: {
        serializedName: "properties.replicaCount",
        type: {
          name: "Number"
        }
      },
      healthState: {
        serializedName: "properties.healthState",
        type: {
          name: "String"
        }
      },
      status: {
        readOnly: true,
        serializedName: "properties.status",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DiagnosticsSinkProperties: msRest.CompositeMapper = {
  serializedName: "DiagnosticsSinkProperties",
  type: {
    name: "Composite",
    polymorphicDiscriminator: {
      serializedName: "kind",
      clientName: "kind"
    },
    uberParent: "DiagnosticsSinkProperties",
    className: "DiagnosticsSinkProperties",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      kind: {
        required: true,
        serializedName: "kind",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DiagnosticsDescription: msRest.CompositeMapper = {
  serializedName: "DiagnosticsDescription",
  type: {
    name: "Composite",
    className: "DiagnosticsDescription",
    modelProperties: {
      sinks: {
        serializedName: "sinks",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              polymorphicDiscriminator: {
                serializedName: "kind",
                clientName: "kind"
              },
              uberParent: "DiagnosticsSinkProperties",
              className: "DiagnosticsSinkProperties"
            }
          }
        }
      },
      enabled: {
        serializedName: "enabled",
        type: {
          name: "Boolean"
        }
      },
      defaultSinkRefs: {
        serializedName: "defaultSinkRefs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ApplicationResourceProperties: msRest.CompositeMapper = {
  serializedName: "ApplicationResourceProperties",
  type: {
    name: "Composite",
    className: "ApplicationResourceProperties",
    modelProperties: {
      provisioningState: {
        readOnly: true,
        serializedName: "provisioningState",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      debugParams: {
        serializedName: "debugParams",
        type: {
          name: "String"
        }
      },
      services: {
        serializedName: "services",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ServiceResourceDescription"
            }
          }
        }
      },
      healthState: {
        readOnly: true,
        serializedName: "healthState",
        type: {
          name: "String"
        }
      },
      unhealthyEvaluation: {
        readOnly: true,
        serializedName: "unhealthyEvaluation",
        type: {
          name: "String"
        }
      },
      status: {
        readOnly: true,
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      statusDetails: {
        readOnly: true,
        serializedName: "statusDetails",
        type: {
          name: "String"
        }
      },
      serviceNames: {
        readOnly: true,
        serializedName: "serviceNames",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      diagnostics: {
        serializedName: "diagnostics",
        type: {
          name: "Composite",
          className: "DiagnosticsDescription"
        }
      }
    }
  }
};

export const ApplicationResourceDescription: msRest.CompositeMapper = {
  serializedName: "ApplicationResourceDescription",
  type: {
    name: "Composite",
    className: "ApplicationResourceDescription",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      debugParams: {
        serializedName: "properties.debugParams",
        type: {
          name: "String"
        }
      },
      services: {
        serializedName: "properties.services",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ServiceResourceDescription"
            }
          }
        }
      },
      healthState: {
        readOnly: true,
        serializedName: "properties.healthState",
        type: {
          name: "String"
        }
      },
      unhealthyEvaluation: {
        readOnly: true,
        serializedName: "properties.unhealthyEvaluation",
        type: {
          name: "String"
        }
      },
      status: {
        readOnly: true,
        serializedName: "properties.status",
        type: {
          name: "String"
        }
      },
      statusDetails: {
        readOnly: true,
        serializedName: "properties.statusDetails",
        type: {
          name: "String"
        }
      },
      serviceNames: {
        readOnly: true,
        serializedName: "properties.serviceNames",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      diagnostics: {
        serializedName: "properties.diagnostics",
        type: {
          name: "Composite",
          className: "DiagnosticsDescription"
        }
      }
    }
  }
};

export const ApplicationProperties: msRest.CompositeMapper = {
  serializedName: "ApplicationProperties",
  type: {
    name: "Composite",
    className: "ApplicationProperties",
    modelProperties: {
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      debugParams: {
        serializedName: "debugParams",
        type: {
          name: "String"
        }
      },
      services: {
        serializedName: "services",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ServiceResourceDescription"
            }
          }
        }
      },
      healthState: {
        readOnly: true,
        serializedName: "healthState",
        type: {
          name: "String"
        }
      },
      unhealthyEvaluation: {
        readOnly: true,
        serializedName: "unhealthyEvaluation",
        type: {
          name: "String"
        }
      },
      status: {
        readOnly: true,
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      statusDetails: {
        readOnly: true,
        serializedName: "statusDetails",
        type: {
          name: "String"
        }
      },
      serviceNames: {
        readOnly: true,
        serializedName: "serviceNames",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      diagnostics: {
        serializedName: "diagnostics",
        type: {
          name: "Composite",
          className: "DiagnosticsDescription"
        }
      }
    }
  }
};

export const ContainerState: msRest.CompositeMapper = {
  serializedName: "ContainerState",
  type: {
    name: "Composite",
    className: "ContainerState",
    modelProperties: {
      state: {
        serializedName: "state",
        type: {
          name: "String"
        }
      },
      startTime: {
        serializedName: "startTime",
        type: {
          name: "DateTime"
        }
      },
      exitCode: {
        serializedName: "exitCode",
        type: {
          name: "String"
        }
      },
      finishTime: {
        serializedName: "finishTime",
        type: {
          name: "DateTime"
        }
      },
      detailStatus: {
        serializedName: "detailStatus",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ContainerEvent: msRest.CompositeMapper = {
  serializedName: "ContainerEvent",
  type: {
    name: "Composite",
    className: "ContainerEvent",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      },
      firstTimestamp: {
        serializedName: "firstTimestamp",
        type: {
          name: "String"
        }
      },
      lastTimestamp: {
        serializedName: "lastTimestamp",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ContainerInstanceView: msRest.CompositeMapper = {
  serializedName: "ContainerInstanceView",
  type: {
    name: "Composite",
    className: "ContainerInstanceView",
    modelProperties: {
      restartCount: {
        serializedName: "restartCount",
        type: {
          name: "Number"
        }
      },
      currentState: {
        serializedName: "currentState",
        type: {
          name: "Composite",
          className: "ContainerState"
        }
      },
      previousState: {
        serializedName: "previousState",
        type: {
          name: "Composite",
          className: "ContainerState"
        }
      },
      events: {
        serializedName: "events",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ContainerEvent"
            }
          }
        }
      }
    }
  }
};

export const ContainerLabel: msRest.CompositeMapper = {
  serializedName: "ContainerLabel",
  type: {
    name: "Composite",
    className: "ContainerLabel",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      value: {
        required: true,
        serializedName: "value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ContainerLogs: msRest.CompositeMapper = {
  serializedName: "ContainerLogs",
  type: {
    name: "Composite",
    className: "ContainerLogs",
    modelProperties: {
      content: {
        serializedName: "content",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ImageRegistryCredential: msRest.CompositeMapper = {
  serializedName: "ImageRegistryCredential",
  type: {
    name: "Composite",
    className: "ImageRegistryCredential",
    modelProperties: {
      server: {
        required: true,
        serializedName: "server",
        type: {
          name: "String"
        }
      },
      username: {
        required: true,
        serializedName: "username",
        type: {
          name: "String"
        }
      },
      password: {
        serializedName: "password",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceLimits: msRest.CompositeMapper = {
  serializedName: "ResourceLimits",
  type: {
    name: "Composite",
    className: "ResourceLimits",
    modelProperties: {
      memoryInGB: {
        serializedName: "memoryInGB",
        type: {
          name: "Number"
        }
      },
      cpu: {
        serializedName: "cpu",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ResourceRequests: msRest.CompositeMapper = {
  serializedName: "ResourceRequests",
  type: {
    name: "Composite",
    className: "ResourceRequests",
    modelProperties: {
      memoryInGB: {
        required: true,
        serializedName: "memoryInGB",
        type: {
          name: "Number"
        }
      },
      cpu: {
        required: true,
        serializedName: "cpu",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ResourceRequirements: msRest.CompositeMapper = {
  serializedName: "ResourceRequirements",
  type: {
    name: "Composite",
    className: "ResourceRequirements",
    modelProperties: {
      requests: {
        required: true,
        serializedName: "requests",
        type: {
          name: "Composite",
          className: "ResourceRequests"
        }
      },
      limits: {
        serializedName: "limits",
        type: {
          name: "Composite",
          className: "ResourceLimits"
        }
      }
    }
  }
};

export const AvailableOperationDisplay: msRest.CompositeMapper = {
  serializedName: "AvailableOperationDisplay",
  type: {
    name: "Composite",
    className: "AvailableOperationDisplay",
    modelProperties: {
      provider: {
        serializedName: "provider",
        type: {
          name: "String"
        }
      },
      resource: {
        serializedName: "resource",
        type: {
          name: "String"
        }
      },
      operation: {
        serializedName: "operation",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationResult: msRest.CompositeMapper = {
  serializedName: "OperationResult",
  type: {
    name: "Composite",
    className: "OperationResult",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "AvailableOperationDisplay"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorModel: msRest.CompositeMapper = {
  serializedName: "ErrorModel",
  type: {
    name: "Composite",
    className: "ErrorModel",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EnvironmentVariable: msRest.CompositeMapper = {
  serializedName: "EnvironmentVariable",
  type: {
    name: "Composite",
    className: "EnvironmentVariable",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Setting: msRest.CompositeMapper = {
  serializedName: "Setting",
  type: {
    name: "Composite",
    className: "Setting",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EndpointProperties: msRest.CompositeMapper = {
  serializedName: "EndpointProperties",
  type: {
    name: "Composite",
    className: "EndpointProperties",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      port: {
        serializedName: "port",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ContainerVolume: msRest.CompositeMapper = {
  serializedName: "ContainerVolume",
  type: {
    name: "Composite",
    className: "ContainerVolume",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      readOnly: {
        serializedName: "readOnly",
        type: {
          name: "Boolean"
        }
      },
      destinationPath: {
        required: true,
        serializedName: "destinationPath",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DiagnosticsRef: msRest.CompositeMapper = {
  serializedName: "DiagnosticsRef",
  type: {
    name: "Composite",
    className: "DiagnosticsRef",
    modelProperties: {
      enabled: {
        serializedName: "enabled",
        type: {
          name: "Boolean"
        }
      },
      sinkRefs: {
        serializedName: "sinkRefs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ContainerCodePackageProperties: msRest.CompositeMapper = {
  serializedName: "ContainerCodePackageProperties",
  type: {
    name: "Composite",
    className: "ContainerCodePackageProperties",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      image: {
        required: true,
        serializedName: "image",
        type: {
          name: "String"
        }
      },
      imageRegistryCredential: {
        serializedName: "imageRegistryCredential",
        type: {
          name: "Composite",
          className: "ImageRegistryCredential"
        }
      },
      entrypoint: {
        serializedName: "entrypoint",
        type: {
          name: "String"
        }
      },
      commands: {
        serializedName: "commands",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      environmentVariables: {
        serializedName: "environmentVariables",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EnvironmentVariable"
            }
          }
        }
      },
      settings: {
        serializedName: "settings",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Setting"
            }
          }
        }
      },
      labels: {
        serializedName: "labels",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ContainerLabel"
            }
          }
        }
      },
      endpoints: {
        serializedName: "endpoints",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EndpointProperties"
            }
          }
        }
      },
      resources: {
        required: true,
        serializedName: "resources",
        type: {
          name: "Composite",
          className: "ResourceRequirements"
        }
      },
      volumeRefs: {
        serializedName: "volumeRefs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ContainerVolume"
            }
          }
        }
      },
      instanceView: {
        readOnly: true,
        serializedName: "instanceView",
        type: {
          name: "Composite",
          className: "ContainerInstanceView"
        }
      },
      diagnostics: {
        serializedName: "diagnostics",
        type: {
          name: "Composite",
          className: "DiagnosticsRef"
        }
      }
    }
  }
};

export const ServiceReplicaDescription: msRest.CompositeMapper = {
  serializedName: "ServiceReplicaDescription",
  type: {
    name: "Composite",
    className: "ServiceReplicaDescription",
    modelProperties: {
      ...ServiceReplicaProperties.type.modelProperties,
      replicaName: {
        serializedName: "replicaName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NetworkRef: msRest.CompositeMapper = {
  serializedName: "NetworkRef",
  type: {
    name: "Composite",
    className: "NetworkRef",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureInternalMonitoringPipelineSinkDescription: msRest.CompositeMapper = {
  serializedName: "AzureInternalMonitoringPipeline",
  type: {
    name: "Composite",
    polymorphicDiscriminator: DiagnosticsSinkProperties.type.polymorphicDiscriminator,
    uberParent: "DiagnosticsSinkProperties",
    className: "AzureInternalMonitoringPipelineSinkDescription",
    modelProperties: {
      ...DiagnosticsSinkProperties.type.modelProperties,
      accountName: {
        serializedName: "accountName",
        type: {
          name: "String"
        }
      },
      namespace: {
        serializedName: "namespace",
        type: {
          name: "String"
        }
      },
      maConfigUrl: {
        serializedName: "maConfigUrl",
        type: {
          name: "String"
        }
      },
      fluentdConfigUrl: {
        serializedName: "fluentdConfigUrl",
        type: {
          name: "Object"
        }
      },
      autoKeyConfigUrl: {
        serializedName: "autoKeyConfigUrl",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApplicationResourceDescriptionList: msRest.CompositeMapper = {
  serializedName: "ApplicationResourceDescriptionList",
  type: {
    name: "Composite",
    className: "ApplicationResourceDescriptionList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ApplicationResourceDescription"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServiceList: msRest.CompositeMapper = {
  serializedName: "ServiceList",
  type: {
    name: "Composite",
    className: "ServiceList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ServiceResourceDescription"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServiceReplicaList: msRest.CompositeMapper = {
  serializedName: "ServiceReplicaList",
  type: {
    name: "Composite",
    className: "ServiceReplicaList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ServiceReplicaDescription"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationListResult: msRest.CompositeMapper = {
  serializedName: "OperationListResult",
  type: {
    name: "Composite",
    className: "OperationListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "OperationResult"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NetworkResourceDescriptionList: msRest.CompositeMapper = {
  serializedName: "NetworkResourceDescriptionList",
  type: {
    name: "Composite",
    className: "NetworkResourceDescriptionList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "NetworkResourceDescription"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VolumeResourceDescriptionList: msRest.CompositeMapper = {
  serializedName: "VolumeResourceDescriptionList",
  type: {
    name: "Composite",
    className: "VolumeResourceDescriptionList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VolumeResourceDescription"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const discriminators = {
  'DiagnosticsSinkProperties' : DiagnosticsSinkProperties,
  'DiagnosticsSinkProperties.AzureInternalMonitoringPipeline' : AzureInternalMonitoringPipelineSinkDescription
};
