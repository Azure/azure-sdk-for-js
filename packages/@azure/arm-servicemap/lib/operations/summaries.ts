/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/summariesMappers";
import * as Parameters from "../models/parameters";
import { ServicemapManagementClientContext } from "../servicemapManagementClientContext";

/** Class representing a Summaries. */
export class Summaries {
  private readonly client: ServicemapManagementClientContext;

  /**
   * Create a Summaries.
   * @param {ServicemapManagementClientContext} client Reference to the service client.
   */
  constructor(client: ServicemapManagementClientContext) {
    this.client = client;
  }

  /**
   * Returns summary information about the machines in the workspace.
   * @param resourceGroupName Resource group name within the specified subscriptionId.
   * @param workspaceName OMS workspace containing the resources of interest.
   * @param [options] The optional parameters
   * @returns Promise<Models.SummariesGetMachinesResponse>
   */
  getMachines(resourceGroupName: string, workspaceName: string, options?: Models.SummariesGetMachinesOptionalParams): Promise<Models.SummariesGetMachinesResponse>;
  /**
   * @param resourceGroupName Resource group name within the specified subscriptionId.
   * @param workspaceName OMS workspace containing the resources of interest.
   * @param callback The callback
   */
  getMachines(resourceGroupName: string, workspaceName: string, callback: msRest.ServiceCallback<Models.MachinesSummary>): void;
  /**
   * @param resourceGroupName Resource group name within the specified subscriptionId.
   * @param workspaceName OMS workspace containing the resources of interest.
   * @param options The optional parameters
   * @param callback The callback
   */
  getMachines(resourceGroupName: string, workspaceName: string, options: Models.SummariesGetMachinesOptionalParams, callback: msRest.ServiceCallback<Models.MachinesSummary>): void;
  getMachines(resourceGroupName: string, workspaceName: string, options?: Models.SummariesGetMachinesOptionalParams | msRest.ServiceCallback<Models.MachinesSummary>, callback?: msRest.ServiceCallback<Models.MachinesSummary>): Promise<Models.SummariesGetMachinesResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        workspaceName,
        options
      },
      getMachinesOperationSpec,
      callback) as Promise<Models.SummariesGetMachinesResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const getMachinesOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/features/serviceMap/summaries/machines",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.workspaceName
  ],
  queryParameters: [
    Parameters.apiVersion,
    Parameters.startTime,
    Parameters.endTime
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.MachinesSummary
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};
