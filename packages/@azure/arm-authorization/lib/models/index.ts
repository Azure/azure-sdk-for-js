/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "ms-rest-azure-js";
import * as msRest from "ms-rest-js";

export { BaseResource, CloudError };


/**
 * @interface
 * An interface representing ClassicAdministrator.
 * Classic Administrators
 *
 */
export interface ClassicAdministrator {
  /**
   * @member {string} [id] The ID of the administrator.
   */
  id?: string;
  /**
   * @member {string} [name] The name of the administrator.
   */
  name?: string;
  /**
   * @member {string} [type] The type of the administrator.
   */
  type?: string;
  /**
   * @member {string} [emailAddress] The email address of the administrator.
   */
  emailAddress?: string;
  /**
   * @member {string} [role] The role of the administrator.
   */
  role?: string;
}

/**
 * @interface
 * An interface representing ProviderOperation.
 * Operation
 *
 */
export interface ProviderOperation {
  /**
   * @member {string} [name] The operation name.
   */
  name?: string;
  /**
   * @member {string} [displayName] The operation display name.
   */
  displayName?: string;
  /**
   * @member {string} [description] The operation description.
   */
  description?: string;
  /**
   * @member {string} [origin] The operation origin.
   */
  origin?: string;
  /**
   * @member {any} [properties] The operation properties.
   */
  properties?: any;
  /**
   * @member {boolean} [isDataAction] The dataAction flag to specify the
   * operation type.
   */
  isDataAction?: boolean;
}

/**
 * @interface
 * An interface representing ResourceType.
 * Resource Type
 *
 */
export interface ResourceType {
  /**
   * @member {string} [name] The resource type name.
   */
  name?: string;
  /**
   * @member {string} [displayName] The resource type display name.
   */
  displayName?: string;
  /**
   * @member {ProviderOperation[]} [operations] The resource type operations.
   */
  operations?: ProviderOperation[];
}

/**
 * @interface
 * An interface representing ProviderOperationsMetadata.
 * Provider Operations metadata
 *
 */
export interface ProviderOperationsMetadata {
  /**
   * @member {string} [id] The provider id.
   */
  id?: string;
  /**
   * @member {string} [name] The provider name.
   */
  name?: string;
  /**
   * @member {string} [type] The provider type.
   */
  type?: string;
  /**
   * @member {string} [displayName] The provider display name.
   */
  displayName?: string;
  /**
   * @member {ResourceType[]} [resourceTypes] The provider resource types
   */
  resourceTypes?: ResourceType[];
  /**
   * @member {ProviderOperation[]} [operations] The provider operations.
   */
  operations?: ProviderOperation[];
}

/**
 * @interface
 * An interface representing RoleAssignmentFilter.
 * Role Assignments filter
 *
 */
export interface RoleAssignmentFilter {
  /**
   * @member {string} [principalId] Returns role assignment of the specific
   * principal.
   */
  principalId?: string;
  /**
   * @member {boolean} [canDelegate] The Delegation flag for the roleassignment
   */
  canDelegate?: boolean;
}

/**
 * @interface
 * An interface representing RoleAssignment.
 * Role Assignments
 *
 */
export interface RoleAssignment {
  /**
   * @member {string} [id] The role assignment ID.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [name] The role assignment name.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [type] The role assignment type.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: string;
  /**
   * @member {string} [scope] The role assignment scope.
   */
  scope?: string;
  /**
   * @member {string} [roleDefinitionId] The role definition ID.
   */
  roleDefinitionId?: string;
  /**
   * @member {string} [principalId] The principal ID.
   */
  principalId?: string;
  /**
   * @member {boolean} [canDelegate] The Delegation flag for the roleassignment
   */
  canDelegate?: boolean;
}

/**
 * @interface
 * An interface representing RoleAssignmentCreateParameters.
 * Role assignment create parameters.
 *
 */
export interface RoleAssignmentCreateParameters {
  /**
   * @member {string} roleDefinitionId The role definition ID used in the role
   * assignment.
   */
  roleDefinitionId: string;
  /**
   * @member {string} principalId The principal ID assigned to the role. This
   * maps to the ID inside the Active Directory. It can point to a user,
   * service principal, or security group.
   */
  principalId: string;
  /**
   * @member {PrincipalType} [principalType] The principal type of the assigned
   * principal ID. Possible values include: 'User', 'Group',
   * 'ServicePrincipal', 'Unknown', 'DirectoryRoleTemplate', 'ForeignGroup',
   * 'Application', 'MSI', 'DirectoryObjectOrGroup', 'Everyone'
   */
  principalType?: PrincipalType;
  /**
   * @member {boolean} [canDelegate] The delgation flag used for creating a
   * role assignment
   */
  canDelegate?: boolean;
}

/**
 * @interface
 * An interface representing RoleDefinitionFilter.
 * Role Definitions filter
 *
 */
export interface RoleDefinitionFilter {
  /**
   * @member {string} [roleName] Returns role definition with the specific
   * name.
   */
  roleName?: string;
  /**
   * @member {string} [type] Returns role definition with the specific type.
   */
  type?: string;
}

/**
 * @interface
 * An interface representing Permission.
 * Role definition permissions.
 *
 */
export interface Permission {
  /**
   * @member {string[]} [actions] Allowed actions.
   */
  actions?: string[];
  /**
   * @member {string[]} [notActions] Denied actions.
   */
  notActions?: string[];
  /**
   * @member {string[]} [dataActions] Allowed Data actions.
   */
  dataActions?: string[];
  /**
   * @member {string[]} [notDataActions] Denied Data actions.
   */
  notDataActions?: string[];
}

/**
 * @interface
 * An interface representing RoleDefinition.
 * Role definition.
 *
 */
export interface RoleDefinition {
  /**
   * @member {string} [id] The role definition ID.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [name] The role definition name.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [type] The role definition type.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: string;
  /**
   * @member {string} [roleName] The role name.
   */
  roleName?: string;
  /**
   * @member {string} [description] The role definition description.
   */
  description?: string;
  /**
   * @member {string} [roleType] The role type.
   */
  roleType?: string;
  /**
   * @member {Permission[]} [permissions] Role definition permissions.
   */
  permissions?: Permission[];
  /**
   * @member {string[]} [assignableScopes] Role definition assignable scopes.
   */
  assignableScopes?: string[];
}

/**
 * @interface
 * An interface representing DenyAssignmentFilter.
 * Deny Assignments filter
 *
 */
export interface DenyAssignmentFilter {
  /**
   * @member {string} [denyAssignmentName] Return deny assignment with
   * specified name.
   */
  denyAssignmentName?: string;
  /**
   * @member {string} [principalId] Return all deny assignments where the
   * specified principal is listed in the principals list of deny assignments.
   */
  principalId?: string;
  /**
   * @member {string} [gdprExportPrincipalId] Return all deny assignments where
   * the specified principal is listed either in the principals list or exclude
   * principals list of deny assignments.
   */
  gdprExportPrincipalId?: string;
}

/**
 * @interface
 * An interface representing DenyAssignmentPermission.
 * Deny assignment permissions.
 *
 */
export interface DenyAssignmentPermission {
  /**
   * @member {string[]} [actions] Actions to which the deny assignment does not
   * grant access.
   */
  actions?: string[];
  /**
   * @member {string[]} [notActions] Actions to exclude from that the deny
   * assignment does not grant access.
   */
  notActions?: string[];
  /**
   * @member {string[]} [dataActions] Data actions to which the deny assignment
   * does not grant access.
   */
  dataActions?: string[];
  /**
   * @member {string[]} [notDataActions] Data actions to exclude from that the
   * deny assignment does not grant access.
   */
  notDataActions?: string[];
}

/**
 * @interface
 * An interface representing Principal.
 * Deny assignment principal.
 *
 */
export interface Principal {
  /**
   * @member {string} [id] Object ID of the Azure AD principal (user, group, or
   * service principal) to which the deny assignment applies. An empty guid
   * '00000000-0000-0000-0000-000000000000' as principal id and principal type
   * as 'Everyone' represents all users, groups and service principals.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [type] Type of object represented by principal id (user,
   * group, or service principal). An empty guid
   * '00000000-0000-0000-0000-000000000000' as principal id and principal type
   * as 'Everyone' represents all users, groups and service principals.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: string;
}

/**
 * @interface
 * An interface representing DenyAssignment.
 * Deny Assignment
 *
 */
export interface DenyAssignment {
  /**
   * @member {string} [id] The deny assignment ID.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {string} [name] The deny assignment name.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [type] The deny assignment type.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly type?: string;
  /**
   * @member {string} [denyAssignmentName] The display name of the deny
   * assignment.
   */
  denyAssignmentName?: string;
  /**
   * @member {string} [description] The description of the deny assignment.
   */
  description?: string;
  /**
   * @member {DenyAssignmentPermission[]} [permissions] An array of permissions
   * that are denied by the deny assignment.
   */
  permissions?: DenyAssignmentPermission[];
  /**
   * @member {string} [scope] The deny assignment scope.
   */
  scope?: string;
  /**
   * @member {boolean} [doNotApplyToChildScopes] Determines if the deny
   * assignment applies to child scopes. Default value is false.
   */
  doNotApplyToChildScopes?: boolean;
  /**
   * @member {Principal[]} [principals] Array of principals to which the deny
   * assignment applies.
   */
  principals?: Principal[];
  /**
   * @member {Principal[]} [excludePrincipals] Array of principals to which the
   * deny assignment does not apply.
   */
  excludePrincipals?: Principal[];
  /**
   * @member {boolean} [isSystemProtected] Specifies whether this deny
   * assignment was created by Azure and cannot be edited or deleted.
   */
  isSystemProtected?: boolean;
}

/**
 * @interface
 * An interface representing ProviderOperationsMetadataGetOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ProviderOperationsMetadataGetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [expand] Specifies whether to expand the values. Default
   * value: 'resourceTypes' .
   */
  expand?: string;
}

/**
 * @interface
 * An interface representing ProviderOperationsMetadataListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface ProviderOperationsMetadataListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [expand] Specifies whether to expand the values. Default
   * value: 'resourceTypes' .
   */
  expand?: string;
}

/**
 * @interface
 * An interface representing RoleAssignmentsListForResourceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface RoleAssignmentsListForResourceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [filter] The filter to apply on the operation. Use
   * $filter=atScope() to return all role assignments at or above the scope.
   * Use $filter=principalId eq {id} to return all role assignments at, above
   * or below the scope for the specified principal.
   */
  filter?: string;
}

/**
 * @interface
 * An interface representing RoleAssignmentsListForResourceGroupOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface RoleAssignmentsListForResourceGroupOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [filter] The filter to apply on the operation. Use
   * $filter=atScope() to return all role assignments at or above the scope.
   * Use $filter=principalId eq {id} to return all role assignments at, above
   * or below the scope for the specified principal.
   */
  filter?: string;
}

/**
 * @interface
 * An interface representing RoleAssignmentsListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface RoleAssignmentsListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [filter] The filter to apply on the operation. Use
   * $filter=atScope() to return all role assignments at or above the scope.
   * Use $filter=principalId eq {id} to return all role assignments at, above
   * or below the scope for the specified principal.
   */
  filter?: string;
}

/**
 * @interface
 * An interface representing RoleAssignmentsListForScopeOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface RoleAssignmentsListForScopeOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [filter] The filter to apply on the operation. Use
   * $filter=atScope() to return all role assignments at or above the scope.
   * Use $filter=principalId eq {id} to return all role assignments at, above
   * or below the scope for the specified principal.
   */
  filter?: string;
}

/**
 * @interface
 * An interface representing RoleDefinitionsListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface RoleDefinitionsListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [filter] The filter to apply on the operation. Use
   * atScopeAndBelow filter to search below the given scope as well.
   */
  filter?: string;
}

/**
 * @interface
 * An interface representing DenyAssignmentsListForResourceOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface DenyAssignmentsListForResourceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [filter] The filter to apply on the operation. Use
   * $filter=atScope() to return all deny assignments at or above the scope.
   * Use $filter=denyAssignmentName eq '{name}' to search deny assignments by
   * name at specified scope. Use $filter=principalId eq '{id}' to return all
   * deny assignments at, above and below the scope for the specified
   * principal. Use $filter=gdprExportPrincipalId eq '{id}' to return all deny
   * assignments at, above and below the scope for the specified principal.
   * This filter is different from the principalId filter as it returns not
   * only those deny assignments that contain the specified principal is the
   * Principals list but also those deny assignments that contain the specified
   * principal is the ExcludePrincipals list. Additionally, when
   * gdprExportPrincipalId filter is used, only the deny assignment name and
   * description properties are returned.
   */
  filter?: string;
}

/**
 * @interface
 * An interface representing DenyAssignmentsListForResourceGroupOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface DenyAssignmentsListForResourceGroupOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [filter] The filter to apply on the operation. Use
   * $filter=atScope() to return all deny assignments at or above the scope.
   * Use $filter=denyAssignmentName eq '{name}' to search deny assignments by
   * name at specified scope. Use $filter=principalId eq '{id}' to return all
   * deny assignments at, above and below the scope for the specified
   * principal. Use $filter=gdprExportPrincipalId eq '{id}' to return all deny
   * assignments at, above and below the scope for the specified principal.
   * This filter is different from the principalId filter as it returns not
   * only those deny assignments that contain the specified principal is the
   * Principals list but also those deny assignments that contain the specified
   * principal is the ExcludePrincipals list. Additionally, when
   * gdprExportPrincipalId filter is used, only the deny assignment name and
   * description properties are returned.
   */
  filter?: string;
}

/**
 * @interface
 * An interface representing DenyAssignmentsListOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface DenyAssignmentsListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [filter] The filter to apply on the operation. Use
   * $filter=atScope() to return all deny assignments at or above the scope.
   * Use $filter=denyAssignmentName eq '{name}' to search deny assignments by
   * name at specified scope. Use $filter=principalId eq '{id}' to return all
   * deny assignments at, above and below the scope for the specified
   * principal. Use $filter=gdprExportPrincipalId eq '{id}' to return all deny
   * assignments at, above and below the scope for the specified principal.
   * This filter is different from the principalId filter as it returns not
   * only those deny assignments that contain the specified principal is the
   * Principals list but also those deny assignments that contain the specified
   * principal is the ExcludePrincipals list. Additionally, when
   * gdprExportPrincipalId filter is used, only the deny assignment name and
   * description properties are returned.
   */
  filter?: string;
}

/**
 * @interface
 * An interface representing DenyAssignmentsListForScopeOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface DenyAssignmentsListForScopeOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [filter] The filter to apply on the operation. Use
   * $filter=atScope() to return all deny assignments at or above the scope.
   * Use $filter=denyAssignmentName eq '{name}' to search deny assignments by
   * name at specified scope. Use $filter=principalId eq '{id}' to return all
   * deny assignments at, above and below the scope for the specified
   * principal. Use $filter=gdprExportPrincipalId eq '{id}' to return all deny
   * assignments at, above and below the scope for the specified principal.
   * This filter is different from the principalId filter as it returns not
   * only those deny assignments that contain the specified principal is the
   * Principals list but also those deny assignments that contain the specified
   * principal is the ExcludePrincipals list. Additionally, when
   * gdprExportPrincipalId filter is used, only the deny assignment name and
   * description properties are returned.
   */
  filter?: string;
}

/**
 * @interface
 * An interface representing AuthorizationManagementClientOptions.
 * @extends AzureServiceClientOptions
 */
export interface AuthorizationManagementClientOptions extends AzureServiceClientOptions {
  /**
   * @member {string} [baseUri]
   */
  baseUri?: string;
}


/**
 * @interface
 * An interface representing the ClassicAdministratorListResult.
 * ClassicAdministrator list result information.
 *
 * @extends Array<ClassicAdministrator>
 */
export interface ClassicAdministratorListResult extends Array<ClassicAdministrator> {
  /**
   * @member {string} [nextLink] The URL to use for getting the next set of
   * results.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the ProviderOperationsMetadataListResult.
 * Provider operations metadata list
 *
 * @extends Array<ProviderOperationsMetadata>
 */
export interface ProviderOperationsMetadataListResult extends Array<ProviderOperationsMetadata> {
  /**
   * @member {string} [nextLink] The URL to use for getting the next set of
   * results.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the RoleAssignmentListResult.
 * Role assignment list operation result.
 *
 * @extends Array<RoleAssignment>
 */
export interface RoleAssignmentListResult extends Array<RoleAssignment> {
  /**
   * @member {string} [nextLink] The URL to use for getting the next set of
   * results.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the PermissionGetResult.
 * Permissions information.
 *
 * @extends Array<Permission>
 */
export interface PermissionGetResult extends Array<Permission> {
  /**
   * @member {string} [nextLink] The URL to use for getting the next set of
   * results.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the RoleDefinitionListResult.
 * Role definition list operation result.
 *
 * @extends Array<RoleDefinition>
 */
export interface RoleDefinitionListResult extends Array<RoleDefinition> {
  /**
   * @member {string} [nextLink] The URL to use for getting the next set of
   * results.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the DenyAssignmentListResult.
 * Deny assignment list operation result.
 *
 * @extends Array<DenyAssignment>
 */
export interface DenyAssignmentListResult extends Array<DenyAssignment> {
  /**
   * @member {string} [nextLink] The URL to use for getting the next set of
   * results.
   */
  nextLink?: string;
}

/**
 * Defines values for PrincipalType.
 * Possible values include: 'User', 'Group', 'ServicePrincipal', 'Unknown',
 * 'DirectoryRoleTemplate', 'ForeignGroup', 'Application', 'MSI', 'DirectoryObjectOrGroup',
 * 'Everyone'
 * @readonly
 * @enum {string}
 */
export type PrincipalType = 'User' | 'Group' | 'ServicePrincipal' | 'Unknown' | 'DirectoryRoleTemplate' | 'ForeignGroup' | 'Application' | 'MSI' | 'DirectoryObjectOrGroup' | 'Everyone';

/**
 * Contains response data for the list operation.
 */
export type ClassicAdministratorsListResponse = ClassicAdministratorListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ClassicAdministratorListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type ClassicAdministratorsListNextResponse = ClassicAdministratorListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ClassicAdministratorListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ProviderOperationsMetadataGetResponse = ProviderOperationsMetadata & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProviderOperationsMetadata;
    };
};

/**
 * Contains response data for the list operation.
 */
export type ProviderOperationsMetadataListResponse = ProviderOperationsMetadataListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProviderOperationsMetadataListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type ProviderOperationsMetadataListNextResponse = ProviderOperationsMetadataListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProviderOperationsMetadataListResult;
    };
};

/**
 * Contains response data for the listForResource operation.
 */
export type RoleAssignmentsListForResourceResponse = RoleAssignmentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoleAssignmentListResult;
    };
};

/**
 * Contains response data for the listForResourceGroup operation.
 */
export type RoleAssignmentsListForResourceGroupResponse = RoleAssignmentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoleAssignmentListResult;
    };
};

/**
 * Contains response data for the deleteMethod operation.
 */
export type RoleAssignmentsDeleteMethodResponse = RoleAssignment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoleAssignment;
    };
};

/**
 * Contains response data for the create operation.
 */
export type RoleAssignmentsCreateResponse = RoleAssignment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoleAssignment;
    };
};

/**
 * Contains response data for the get operation.
 */
export type RoleAssignmentsGetResponse = RoleAssignment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoleAssignment;
    };
};

/**
 * Contains response data for the deleteById operation.
 */
export type RoleAssignmentsDeleteByIdResponse = RoleAssignment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoleAssignment;
    };
};

/**
 * Contains response data for the createById operation.
 */
export type RoleAssignmentsCreateByIdResponse = RoleAssignment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoleAssignment;
    };
};

/**
 * Contains response data for the getById operation.
 */
export type RoleAssignmentsGetByIdResponse = RoleAssignment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoleAssignment;
    };
};

/**
 * Contains response data for the list operation.
 */
export type RoleAssignmentsListResponse = RoleAssignmentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoleAssignmentListResult;
    };
};

/**
 * Contains response data for the listForScope operation.
 */
export type RoleAssignmentsListForScopeResponse = RoleAssignmentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoleAssignmentListResult;
    };
};

/**
 * Contains response data for the listForResourceNext operation.
 */
export type RoleAssignmentsListForResourceNextResponse = RoleAssignmentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoleAssignmentListResult;
    };
};

/**
 * Contains response data for the listForResourceGroupNext operation.
 */
export type RoleAssignmentsListForResourceGroupNextResponse = RoleAssignmentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoleAssignmentListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type RoleAssignmentsListNextResponse = RoleAssignmentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoleAssignmentListResult;
    };
};

/**
 * Contains response data for the listForScopeNext operation.
 */
export type RoleAssignmentsListForScopeNextResponse = RoleAssignmentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoleAssignmentListResult;
    };
};

/**
 * Contains response data for the listForResourceGroup operation.
 */
export type PermissionsListForResourceGroupResponse = PermissionGetResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PermissionGetResult;
    };
};

/**
 * Contains response data for the listForResource operation.
 */
export type PermissionsListForResourceResponse = PermissionGetResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PermissionGetResult;
    };
};

/**
 * Contains response data for the listForResourceGroupNext operation.
 */
export type PermissionsListForResourceGroupNextResponse = PermissionGetResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PermissionGetResult;
    };
};

/**
 * Contains response data for the listForResourceNext operation.
 */
export type PermissionsListForResourceNextResponse = PermissionGetResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PermissionGetResult;
    };
};

/**
 * Contains response data for the deleteMethod operation.
 */
export type RoleDefinitionsDeleteMethodResponse = RoleDefinition & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoleDefinition;
    };
};

/**
 * Contains response data for the get operation.
 */
export type RoleDefinitionsGetResponse = RoleDefinition & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoleDefinition;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type RoleDefinitionsCreateOrUpdateResponse = RoleDefinition & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoleDefinition;
    };
};

/**
 * Contains response data for the list operation.
 */
export type RoleDefinitionsListResponse = RoleDefinitionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoleDefinitionListResult;
    };
};

/**
 * Contains response data for the getById operation.
 */
export type RoleDefinitionsGetByIdResponse = RoleDefinition & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoleDefinition;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type RoleDefinitionsListNextResponse = RoleDefinitionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoleDefinitionListResult;
    };
};

/**
 * Contains response data for the listForResource operation.
 */
export type DenyAssignmentsListForResourceResponse = DenyAssignmentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DenyAssignmentListResult;
    };
};

/**
 * Contains response data for the listForResourceGroup operation.
 */
export type DenyAssignmentsListForResourceGroupResponse = DenyAssignmentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DenyAssignmentListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type DenyAssignmentsListResponse = DenyAssignmentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DenyAssignmentListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type DenyAssignmentsGetResponse = DenyAssignment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DenyAssignment;
    };
};

/**
 * Contains response data for the getById operation.
 */
export type DenyAssignmentsGetByIdResponse = DenyAssignment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DenyAssignment;
    };
};

/**
 * Contains response data for the listForScope operation.
 */
export type DenyAssignmentsListForScopeResponse = DenyAssignmentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DenyAssignmentListResult;
    };
};

/**
 * Contains response data for the listForResourceNext operation.
 */
export type DenyAssignmentsListForResourceNextResponse = DenyAssignmentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DenyAssignmentListResult;
    };
};

/**
 * Contains response data for the listForResourceGroupNext operation.
 */
export type DenyAssignmentsListForResourceGroupNextResponse = DenyAssignmentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DenyAssignmentListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type DenyAssignmentsListNextResponse = DenyAssignmentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DenyAssignmentListResult;
    };
};

/**
 * Contains response data for the listForScopeNext operation.
 */
export type DenyAssignmentsListForScopeNextResponse = DenyAssignmentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DenyAssignmentListResult;
    };
};
