"use strict";
/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const ms_rest_azure_js_1 = require("ms-rest-azure-js");
exports.CloudError = ms_rest_azure_js_1.CloudErrorMapper;
exports.BaseResource = ms_rest_azure_js_1.BaseResourceMapper;
exports.ComputeOperationValue = {
    serializedName: "ComputeOperationValue",
    type: {
        name: "Composite",
        className: "ComputeOperationValue",
        modelProperties: {
            origin: {
                readOnly: true,
                serializedName: "origin",
                type: {
                    name: "String"
                }
            },
            name: {
                readOnly: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            operation: {
                readOnly: true,
                serializedName: "display.operation",
                type: {
                    name: "String"
                }
            },
            resource: {
                readOnly: true,
                serializedName: "display.resource",
                type: {
                    name: "String"
                }
            },
            description: {
                readOnly: true,
                serializedName: "display.description",
                type: {
                    name: "String"
                }
            },
            provider: {
                readOnly: true,
                serializedName: "display.provider",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.InstanceViewStatus = {
    serializedName: "InstanceViewStatus",
    type: {
        name: "Composite",
        className: "InstanceViewStatus",
        modelProperties: {
            code: {
                serializedName: "code",
                type: {
                    name: "String"
                }
            },
            level: {
                serializedName: "level",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Info",
                        "Warning",
                        "Error"
                    ]
                }
            },
            displayStatus: {
                serializedName: "displayStatus",
                type: {
                    name: "String"
                }
            },
            message: {
                serializedName: "message",
                type: {
                    name: "String"
                }
            },
            time: {
                serializedName: "time",
                type: {
                    name: "DateTime"
                }
            }
        }
    }
};
exports.SubResource = {
    serializedName: "SubResource",
    type: {
        name: "Composite",
        className: "SubResource",
        modelProperties: {
            id: {
                serializedName: "id",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.Sku = {
    serializedName: "Sku",
    type: {
        name: "Composite",
        className: "Sku",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            tier: {
                serializedName: "tier",
                type: {
                    name: "String"
                }
            },
            capacity: {
                serializedName: "capacity",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
exports.Resource = {
    serializedName: "Resource",
    type: {
        name: "Composite",
        className: "Resource",
        modelProperties: {
            id: {
                readOnly: true,
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            name: {
                readOnly: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            type: {
                readOnly: true,
                serializedName: "type",
                type: {
                    name: "String"
                }
            },
            location: {
                required: true,
                serializedName: "location",
                type: {
                    name: "String"
                }
            },
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
exports.AvailabilitySet = {
    serializedName: "AvailabilitySet",
    type: {
        name: "Composite",
        className: "AvailabilitySet",
        modelProperties: Object.assign({}, exports.Resource.type.modelProperties, { platformUpdateDomainCount: {
                serializedName: "properties.platformUpdateDomainCount",
                type: {
                    name: "Number"
                }
            }, platformFaultDomainCount: {
                serializedName: "properties.platformFaultDomainCount",
                type: {
                    name: "Number"
                }
            }, virtualMachines: {
                serializedName: "properties.virtualMachines",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SubResource"
                        }
                    }
                }
            }, statuses: {
                readOnly: true,
                serializedName: "properties.statuses",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "InstanceViewStatus"
                        }
                    }
                }
            }, sku: {
                serializedName: "sku",
                type: {
                    name: "Composite",
                    className: "Sku"
                }
            } })
    }
};
exports.UpdateResource = {
    serializedName: "UpdateResource",
    type: {
        name: "Composite",
        className: "UpdateResource",
        modelProperties: {
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
exports.AvailabilitySetUpdate = {
    serializedName: "AvailabilitySetUpdate",
    type: {
        name: "Composite",
        className: "AvailabilitySetUpdate",
        modelProperties: Object.assign({}, exports.UpdateResource.type.modelProperties, { platformUpdateDomainCount: {
                serializedName: "properties.platformUpdateDomainCount",
                type: {
                    name: "Number"
                }
            }, platformFaultDomainCount: {
                serializedName: "properties.platformFaultDomainCount",
                type: {
                    name: "Number"
                }
            }, virtualMachines: {
                serializedName: "properties.virtualMachines",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SubResource"
                        }
                    }
                }
            }, statuses: {
                readOnly: true,
                serializedName: "properties.statuses",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "InstanceViewStatus"
                        }
                    }
                }
            }, sku: {
                serializedName: "sku",
                type: {
                    name: "Composite",
                    className: "Sku"
                }
            } })
    }
};
exports.VirtualMachineSize = {
    serializedName: "VirtualMachineSize",
    type: {
        name: "Composite",
        className: "VirtualMachineSize",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            numberOfCores: {
                serializedName: "numberOfCores",
                type: {
                    name: "Number"
                }
            },
            osDiskSizeInMB: {
                serializedName: "osDiskSizeInMB",
                type: {
                    name: "Number"
                }
            },
            resourceDiskSizeInMB: {
                serializedName: "resourceDiskSizeInMB",
                type: {
                    name: "Number"
                }
            },
            memoryInMB: {
                serializedName: "memoryInMB",
                type: {
                    name: "Number"
                }
            },
            maxDataDiskCount: {
                serializedName: "maxDataDiskCount",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
exports.VirtualMachineExtensionImage = {
    serializedName: "VirtualMachineExtensionImage",
    type: {
        name: "Composite",
        className: "VirtualMachineExtensionImage",
        modelProperties: Object.assign({}, exports.Resource.type.modelProperties, { operatingSystem: {
                required: true,
                serializedName: "properties.operatingSystem",
                type: {
                    name: "String"
                }
            }, computeRole: {
                required: true,
                serializedName: "properties.computeRole",
                type: {
                    name: "String"
                }
            }, handlerSchema: {
                required: true,
                serializedName: "properties.handlerSchema",
                type: {
                    name: "String"
                }
            }, vmScaleSetEnabled: {
                serializedName: "properties.vmScaleSetEnabled",
                type: {
                    name: "Boolean"
                }
            }, supportsMultipleExtensions: {
                serializedName: "properties.supportsMultipleExtensions",
                type: {
                    name: "Boolean"
                }
            } })
    }
};
exports.VirtualMachineImageResource = {
    serializedName: "VirtualMachineImageResource",
    type: {
        name: "Composite",
        className: "VirtualMachineImageResource",
        modelProperties: Object.assign({}, exports.SubResource.type.modelProperties, { name: {
                required: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            }, location: {
                required: true,
                serializedName: "location",
                type: {
                    name: "String"
                }
            }, tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            } })
    }
};
exports.VirtualMachineExtensionInstanceView = {
    serializedName: "VirtualMachineExtensionInstanceView",
    type: {
        name: "Composite",
        className: "VirtualMachineExtensionInstanceView",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            type: {
                serializedName: "type",
                type: {
                    name: "String"
                }
            },
            typeHandlerVersion: {
                serializedName: "typeHandlerVersion",
                type: {
                    name: "String"
                }
            },
            substatuses: {
                serializedName: "substatuses",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "InstanceViewStatus"
                        }
                    }
                }
            },
            statuses: {
                serializedName: "statuses",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "InstanceViewStatus"
                        }
                    }
                }
            }
        }
    }
};
exports.VirtualMachineExtension = {
    serializedName: "VirtualMachineExtension",
    type: {
        name: "Composite",
        className: "VirtualMachineExtension",
        modelProperties: Object.assign({}, exports.Resource.type.modelProperties, { forceUpdateTag: {
                serializedName: "properties.forceUpdateTag",
                type: {
                    name: "String"
                }
            }, publisher: {
                serializedName: "properties.publisher",
                type: {
                    name: "String"
                }
            }, virtualMachineExtensionType: {
                serializedName: "properties.type",
                type: {
                    name: "String"
                }
            }, typeHandlerVersion: {
                serializedName: "properties.typeHandlerVersion",
                type: {
                    name: "String"
                }
            }, autoUpgradeMinorVersion: {
                serializedName: "properties.autoUpgradeMinorVersion",
                type: {
                    name: "Boolean"
                }
            }, settings: {
                serializedName: "properties.settings",
                type: {
                    name: "Object"
                }
            }, protectedSettings: {
                serializedName: "properties.protectedSettings",
                type: {
                    name: "Object"
                }
            }, provisioningState: {
                readOnly: true,
                serializedName: "properties.provisioningState",
                type: {
                    name: "String"
                }
            }, instanceView: {
                serializedName: "properties.instanceView",
                type: {
                    name: "Composite",
                    className: "VirtualMachineExtensionInstanceView"
                }
            } })
    }
};
exports.VirtualMachineExtensionUpdate = {
    serializedName: "VirtualMachineExtensionUpdate",
    type: {
        name: "Composite",
        className: "VirtualMachineExtensionUpdate",
        modelProperties: Object.assign({}, exports.UpdateResource.type.modelProperties, { forceUpdateTag: {
                serializedName: "properties.forceUpdateTag",
                type: {
                    name: "String"
                }
            }, publisher: {
                serializedName: "properties.publisher",
                type: {
                    name: "String"
                }
            }, type: {
                serializedName: "properties.type",
                type: {
                    name: "String"
                }
            }, typeHandlerVersion: {
                serializedName: "properties.typeHandlerVersion",
                type: {
                    name: "String"
                }
            }, autoUpgradeMinorVersion: {
                serializedName: "properties.autoUpgradeMinorVersion",
                type: {
                    name: "Boolean"
                }
            }, settings: {
                serializedName: "properties.settings",
                type: {
                    name: "Object"
                }
            }, protectedSettings: {
                serializedName: "properties.protectedSettings",
                type: {
                    name: "Object"
                }
            } })
    }
};
exports.VirtualMachineExtensionsListResult = {
    serializedName: "VirtualMachineExtensionsListResult",
    type: {
        name: "Composite",
        className: "VirtualMachineExtensionsListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "VirtualMachineExtension"
                        }
                    }
                }
            }
        }
    }
};
exports.PurchasePlan = {
    serializedName: "PurchasePlan",
    type: {
        name: "Composite",
        className: "PurchasePlan",
        modelProperties: {
            publisher: {
                required: true,
                serializedName: "publisher",
                type: {
                    name: "String"
                }
            },
            name: {
                required: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            product: {
                required: true,
                serializedName: "product",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.OSDiskImage = {
    serializedName: "OSDiskImage",
    type: {
        name: "Composite",
        className: "OSDiskImage",
        modelProperties: {
            operatingSystem: {
                required: true,
                serializedName: "operatingSystem",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Windows",
                        "Linux"
                    ]
                }
            }
        }
    }
};
exports.DataDiskImage = {
    serializedName: "DataDiskImage",
    type: {
        name: "Composite",
        className: "DataDiskImage",
        modelProperties: {
            lun: {
                readOnly: true,
                serializedName: "lun",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
exports.VirtualMachineImage = {
    serializedName: "VirtualMachineImage",
    type: {
        name: "Composite",
        className: "VirtualMachineImage",
        modelProperties: Object.assign({}, exports.VirtualMachineImageResource.type.modelProperties, { plan: {
                serializedName: "properties.plan",
                type: {
                    name: "Composite",
                    className: "PurchasePlan"
                }
            }, osDiskImage: {
                serializedName: "properties.osDiskImage",
                type: {
                    name: "Composite",
                    className: "OSDiskImage"
                }
            }, dataDiskImages: {
                serializedName: "properties.dataDiskImages",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DataDiskImage"
                        }
                    }
                }
            } })
    }
};
exports.UsageName = {
    serializedName: "UsageName",
    type: {
        name: "Composite",
        className: "UsageName",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "String"
                }
            },
            localizedValue: {
                serializedName: "localizedValue",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.Usage = {
    serializedName: "Usage",
    type: {
        name: "Composite",
        className: "Usage",
        modelProperties: {
            unit: {
                required: true,
                isConstant: true,
                serializedName: "unit",
                defaultValue: 'Count',
                type: {
                    name: "String"
                }
            },
            currentValue: {
                required: true,
                serializedName: "currentValue",
                type: {
                    name: "Number"
                }
            },
            limit: {
                required: true,
                serializedName: "limit",
                type: {
                    name: "Number"
                }
            },
            name: {
                required: true,
                serializedName: "name",
                type: {
                    name: "Composite",
                    className: "UsageName"
                }
            }
        }
    }
};
exports.VirtualMachineCaptureParameters = {
    serializedName: "VirtualMachineCaptureParameters",
    type: {
        name: "Composite",
        className: "VirtualMachineCaptureParameters",
        modelProperties: {
            vhdPrefix: {
                required: true,
                serializedName: "vhdPrefix",
                type: {
                    name: "String"
                }
            },
            destinationContainerName: {
                required: true,
                serializedName: "destinationContainerName",
                type: {
                    name: "String"
                }
            },
            overwriteVhds: {
                required: true,
                serializedName: "overwriteVhds",
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
exports.VirtualMachineCaptureResult = {
    serializedName: "VirtualMachineCaptureResult",
    type: {
        name: "Composite",
        className: "VirtualMachineCaptureResult",
        modelProperties: Object.assign({}, exports.SubResource.type.modelProperties, { schema: {
                readOnly: true,
                serializedName: "$schema",
                type: {
                    name: "String"
                }
            }, contentVersion: {
                readOnly: true,
                serializedName: "contentVersion",
                type: {
                    name: "String"
                }
            }, parameters: {
                readOnly: true,
                serializedName: "parameters",
                type: {
                    name: "Object"
                }
            }, resources: {
                readOnly: true,
                serializedName: "resources",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Object"
                        }
                    }
                }
            } })
    }
};
exports.Plan = {
    serializedName: "Plan",
    type: {
        name: "Composite",
        className: "Plan",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            publisher: {
                serializedName: "publisher",
                type: {
                    name: "String"
                }
            },
            product: {
                serializedName: "product",
                type: {
                    name: "String"
                }
            },
            promotionCode: {
                serializedName: "promotionCode",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.HardwareProfile = {
    serializedName: "HardwareProfile",
    type: {
        name: "Composite",
        className: "HardwareProfile",
        modelProperties: {
            vmSize: {
                serializedName: "vmSize",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.ImageReference = {
    serializedName: "ImageReference",
    type: {
        name: "Composite",
        className: "ImageReference",
        modelProperties: Object.assign({}, exports.SubResource.type.modelProperties, { publisher: {
                serializedName: "publisher",
                type: {
                    name: "String"
                }
            }, offer: {
                serializedName: "offer",
                type: {
                    name: "String"
                }
            }, sku: {
                serializedName: "sku",
                type: {
                    name: "String"
                }
            }, version: {
                serializedName: "version",
                type: {
                    name: "String"
                }
            } })
    }
};
exports.KeyVaultSecretReference = {
    serializedName: "KeyVaultSecretReference",
    type: {
        name: "Composite",
        className: "KeyVaultSecretReference",
        modelProperties: {
            secretUrl: {
                required: true,
                serializedName: "secretUrl",
                type: {
                    name: "String"
                }
            },
            sourceVault: {
                required: true,
                serializedName: "sourceVault",
                type: {
                    name: "Composite",
                    className: "SubResource"
                }
            }
        }
    }
};
exports.KeyVaultKeyReference = {
    serializedName: "KeyVaultKeyReference",
    type: {
        name: "Composite",
        className: "KeyVaultKeyReference",
        modelProperties: {
            keyUrl: {
                required: true,
                serializedName: "keyUrl",
                type: {
                    name: "String"
                }
            },
            sourceVault: {
                required: true,
                serializedName: "sourceVault",
                type: {
                    name: "Composite",
                    className: "SubResource"
                }
            }
        }
    }
};
exports.DiskEncryptionSettings = {
    serializedName: "DiskEncryptionSettings",
    type: {
        name: "Composite",
        className: "DiskEncryptionSettings",
        modelProperties: {
            diskEncryptionKey: {
                serializedName: "diskEncryptionKey",
                type: {
                    name: "Composite",
                    className: "KeyVaultSecretReference"
                }
            },
            keyEncryptionKey: {
                serializedName: "keyEncryptionKey",
                type: {
                    name: "Composite",
                    className: "KeyVaultKeyReference"
                }
            },
            enabled: {
                serializedName: "enabled",
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
exports.VirtualHardDisk = {
    serializedName: "VirtualHardDisk",
    type: {
        name: "Composite",
        className: "VirtualHardDisk",
        modelProperties: {
            uri: {
                serializedName: "uri",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.ManagedDiskParameters = {
    serializedName: "ManagedDiskParameters",
    type: {
        name: "Composite",
        className: "ManagedDiskParameters",
        modelProperties: Object.assign({}, exports.SubResource.type.modelProperties, { storageAccountType: {
                serializedName: "storageAccountType",
                type: {
                    name: "String"
                }
            } })
    }
};
exports.OSDisk = {
    serializedName: "OSDisk",
    type: {
        name: "Composite",
        className: "OSDisk",
        modelProperties: {
            osType: {
                serializedName: "osType",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Windows",
                        "Linux"
                    ]
                }
            },
            encryptionSettings: {
                serializedName: "encryptionSettings",
                type: {
                    name: "Composite",
                    className: "DiskEncryptionSettings"
                }
            },
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            vhd: {
                serializedName: "vhd",
                type: {
                    name: "Composite",
                    className: "VirtualHardDisk"
                }
            },
            image: {
                serializedName: "image",
                type: {
                    name: "Composite",
                    className: "VirtualHardDisk"
                }
            },
            caching: {
                serializedName: "caching",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "None",
                        "ReadOnly",
                        "ReadWrite"
                    ]
                }
            },
            writeAcceleratorEnabled: {
                serializedName: "writeAcceleratorEnabled",
                type: {
                    name: "Boolean"
                }
            },
            createOption: {
                required: true,
                serializedName: "createOption",
                type: {
                    name: "String"
                }
            },
            diskSizeGB: {
                serializedName: "diskSizeGB",
                type: {
                    name: "Number"
                }
            },
            managedDisk: {
                serializedName: "managedDisk",
                type: {
                    name: "Composite",
                    className: "ManagedDiskParameters"
                }
            }
        }
    }
};
exports.DataDisk = {
    serializedName: "DataDisk",
    type: {
        name: "Composite",
        className: "DataDisk",
        modelProperties: {
            lun: {
                required: true,
                serializedName: "lun",
                type: {
                    name: "Number"
                }
            },
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            vhd: {
                serializedName: "vhd",
                type: {
                    name: "Composite",
                    className: "VirtualHardDisk"
                }
            },
            image: {
                serializedName: "image",
                type: {
                    name: "Composite",
                    className: "VirtualHardDisk"
                }
            },
            caching: {
                serializedName: "caching",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "None",
                        "ReadOnly",
                        "ReadWrite"
                    ]
                }
            },
            writeAcceleratorEnabled: {
                serializedName: "writeAcceleratorEnabled",
                type: {
                    name: "Boolean"
                }
            },
            createOption: {
                required: true,
                serializedName: "createOption",
                type: {
                    name: "String"
                }
            },
            diskSizeGB: {
                serializedName: "diskSizeGB",
                type: {
                    name: "Number"
                }
            },
            managedDisk: {
                serializedName: "managedDisk",
                type: {
                    name: "Composite",
                    className: "ManagedDiskParameters"
                }
            }
        }
    }
};
exports.StorageProfile = {
    serializedName: "StorageProfile",
    type: {
        name: "Composite",
        className: "StorageProfile",
        modelProperties: {
            imageReference: {
                serializedName: "imageReference",
                type: {
                    name: "Composite",
                    className: "ImageReference"
                }
            },
            osDisk: {
                serializedName: "osDisk",
                type: {
                    name: "Composite",
                    className: "OSDisk"
                }
            },
            dataDisks: {
                serializedName: "dataDisks",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DataDisk"
                        }
                    }
                }
            }
        }
    }
};
exports.AdditionalCapabilities = {
    serializedName: "AdditionalCapabilities",
    type: {
        name: "Composite",
        className: "AdditionalCapabilities",
        modelProperties: {
            ultraSSDEnabled: {
                serializedName: "ultraSSDEnabled",
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
exports.AdditionalUnattendContent = {
    serializedName: "AdditionalUnattendContent",
    type: {
        name: "Composite",
        className: "AdditionalUnattendContent",
        modelProperties: {
            passName: {
                serializedName: "passName",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "OobeSystem"
                    ]
                }
            },
            componentName: {
                serializedName: "componentName",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Microsoft-Windows-Shell-Setup"
                    ]
                }
            },
            settingName: {
                serializedName: "settingName",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "AutoLogon",
                        "FirstLogonCommands"
                    ]
                }
            },
            content: {
                serializedName: "content",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.WinRMListener = {
    serializedName: "WinRMListener",
    type: {
        name: "Composite",
        className: "WinRMListener",
        modelProperties: {
            protocol: {
                serializedName: "protocol",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Http",
                        "Https"
                    ]
                }
            },
            certificateUrl: {
                serializedName: "certificateUrl",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.WinRMConfiguration = {
    serializedName: "WinRMConfiguration",
    type: {
        name: "Composite",
        className: "WinRMConfiguration",
        modelProperties: {
            listeners: {
                serializedName: "listeners",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "WinRMListener"
                        }
                    }
                }
            }
        }
    }
};
exports.WindowsConfiguration = {
    serializedName: "WindowsConfiguration",
    type: {
        name: "Composite",
        className: "WindowsConfiguration",
        modelProperties: {
            provisionVMAgent: {
                serializedName: "provisionVMAgent",
                type: {
                    name: "Boolean"
                }
            },
            enableAutomaticUpdates: {
                serializedName: "enableAutomaticUpdates",
                type: {
                    name: "Boolean"
                }
            },
            timeZone: {
                serializedName: "timeZone",
                type: {
                    name: "String"
                }
            },
            additionalUnattendContent: {
                serializedName: "additionalUnattendContent",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "AdditionalUnattendContent"
                        }
                    }
                }
            },
            winRM: {
                serializedName: "winRM",
                type: {
                    name: "Composite",
                    className: "WinRMConfiguration"
                }
            }
        }
    }
};
exports.SshPublicKey = {
    serializedName: "SshPublicKey",
    type: {
        name: "Composite",
        className: "SshPublicKey",
        modelProperties: {
            path: {
                serializedName: "path",
                type: {
                    name: "String"
                }
            },
            keyData: {
                serializedName: "keyData",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.SshConfiguration = {
    serializedName: "SshConfiguration",
    type: {
        name: "Composite",
        className: "SshConfiguration",
        modelProperties: {
            publicKeys: {
                serializedName: "publicKeys",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SshPublicKey"
                        }
                    }
                }
            }
        }
    }
};
exports.LinuxConfiguration = {
    serializedName: "LinuxConfiguration",
    type: {
        name: "Composite",
        className: "LinuxConfiguration",
        modelProperties: {
            disablePasswordAuthentication: {
                serializedName: "disablePasswordAuthentication",
                type: {
                    name: "Boolean"
                }
            },
            ssh: {
                serializedName: "ssh",
                type: {
                    name: "Composite",
                    className: "SshConfiguration"
                }
            },
            provisionVMAgent: {
                serializedName: "provisionVMAgent",
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
exports.VaultCertificate = {
    serializedName: "VaultCertificate",
    type: {
        name: "Composite",
        className: "VaultCertificate",
        modelProperties: {
            certificateUrl: {
                serializedName: "certificateUrl",
                type: {
                    name: "String"
                }
            },
            certificateStore: {
                serializedName: "certificateStore",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.VaultSecretGroup = {
    serializedName: "VaultSecretGroup",
    type: {
        name: "Composite",
        className: "VaultSecretGroup",
        modelProperties: {
            sourceVault: {
                serializedName: "sourceVault",
                type: {
                    name: "Composite",
                    className: "SubResource"
                }
            },
            vaultCertificates: {
                serializedName: "vaultCertificates",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "VaultCertificate"
                        }
                    }
                }
            }
        }
    }
};
exports.OSProfile = {
    serializedName: "OSProfile",
    type: {
        name: "Composite",
        className: "OSProfile",
        modelProperties: {
            computerName: {
                serializedName: "computerName",
                type: {
                    name: "String"
                }
            },
            adminUsername: {
                serializedName: "adminUsername",
                type: {
                    name: "String"
                }
            },
            adminPassword: {
                serializedName: "adminPassword",
                type: {
                    name: "String"
                }
            },
            customData: {
                serializedName: "customData",
                type: {
                    name: "String"
                }
            },
            windowsConfiguration: {
                serializedName: "windowsConfiguration",
                type: {
                    name: "Composite",
                    className: "WindowsConfiguration"
                }
            },
            linuxConfiguration: {
                serializedName: "linuxConfiguration",
                type: {
                    name: "Composite",
                    className: "LinuxConfiguration"
                }
            },
            secrets: {
                serializedName: "secrets",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "VaultSecretGroup"
                        }
                    }
                }
            },
            allowExtensionOperations: {
                serializedName: "allowExtensionOperations",
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
exports.NetworkInterfaceReference = {
    serializedName: "NetworkInterfaceReference",
    type: {
        name: "Composite",
        className: "NetworkInterfaceReference",
        modelProperties: Object.assign({}, exports.SubResource.type.modelProperties, { primary: {
                serializedName: "properties.primary",
                type: {
                    name: "Boolean"
                }
            } })
    }
};
exports.NetworkProfile = {
    serializedName: "NetworkProfile",
    type: {
        name: "Composite",
        className: "NetworkProfile",
        modelProperties: {
            networkInterfaces: {
                serializedName: "networkInterfaces",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "NetworkInterfaceReference"
                        }
                    }
                }
            }
        }
    }
};
exports.BootDiagnostics = {
    serializedName: "BootDiagnostics",
    type: {
        name: "Composite",
        className: "BootDiagnostics",
        modelProperties: {
            enabled: {
                serializedName: "enabled",
                type: {
                    name: "Boolean"
                }
            },
            storageUri: {
                serializedName: "storageUri",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.DiagnosticsProfile = {
    serializedName: "DiagnosticsProfile",
    type: {
        name: "Composite",
        className: "DiagnosticsProfile",
        modelProperties: {
            bootDiagnostics: {
                serializedName: "bootDiagnostics",
                type: {
                    name: "Composite",
                    className: "BootDiagnostics"
                }
            }
        }
    }
};
exports.VirtualMachineExtensionHandlerInstanceView = {
    serializedName: "VirtualMachineExtensionHandlerInstanceView",
    type: {
        name: "Composite",
        className: "VirtualMachineExtensionHandlerInstanceView",
        modelProperties: {
            type: {
                serializedName: "type",
                type: {
                    name: "String"
                }
            },
            typeHandlerVersion: {
                serializedName: "typeHandlerVersion",
                type: {
                    name: "String"
                }
            },
            status: {
                serializedName: "status",
                type: {
                    name: "Composite",
                    className: "InstanceViewStatus"
                }
            }
        }
    }
};
exports.VirtualMachineAgentInstanceView = {
    serializedName: "VirtualMachineAgentInstanceView",
    type: {
        name: "Composite",
        className: "VirtualMachineAgentInstanceView",
        modelProperties: {
            vmAgentVersion: {
                serializedName: "vmAgentVersion",
                type: {
                    name: "String"
                }
            },
            extensionHandlers: {
                serializedName: "extensionHandlers",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "VirtualMachineExtensionHandlerInstanceView"
                        }
                    }
                }
            },
            statuses: {
                serializedName: "statuses",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "InstanceViewStatus"
                        }
                    }
                }
            }
        }
    }
};
exports.DiskInstanceView = {
    serializedName: "DiskInstanceView",
    type: {
        name: "Composite",
        className: "DiskInstanceView",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            encryptionSettings: {
                serializedName: "encryptionSettings",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DiskEncryptionSettings"
                        }
                    }
                }
            },
            statuses: {
                serializedName: "statuses",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "InstanceViewStatus"
                        }
                    }
                }
            }
        }
    }
};
exports.BootDiagnosticsInstanceView = {
    serializedName: "BootDiagnosticsInstanceView",
    type: {
        name: "Composite",
        className: "BootDiagnosticsInstanceView",
        modelProperties: {
            consoleScreenshotBlobUri: {
                serializedName: "consoleScreenshotBlobUri",
                type: {
                    name: "String"
                }
            },
            serialConsoleLogBlobUri: {
                serializedName: "serialConsoleLogBlobUri",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.VirtualMachineIdentityUserAssignedIdentitiesValue = {
    serializedName: "VirtualMachineIdentity_userAssignedIdentitiesValue",
    type: {
        name: "Composite",
        className: "VirtualMachineIdentityUserAssignedIdentitiesValue",
        modelProperties: {
            principalId: {
                readOnly: true,
                serializedName: "principalId",
                type: {
                    name: "String"
                }
            },
            clientId: {
                readOnly: true,
                serializedName: "clientId",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.VirtualMachineIdentity = {
    serializedName: "VirtualMachineIdentity",
    type: {
        name: "Composite",
        className: "VirtualMachineIdentity",
        modelProperties: {
            principalId: {
                readOnly: true,
                serializedName: "principalId",
                type: {
                    name: "String"
                }
            },
            tenantId: {
                readOnly: true,
                serializedName: "tenantId",
                type: {
                    name: "String"
                }
            },
            type: {
                serializedName: "type",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned",
                        "None"
                    ]
                }
            },
            userAssignedIdentities: {
                serializedName: "userAssignedIdentities",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "Composite",
                            className: "VirtualMachineIdentityUserAssignedIdentitiesValue"
                        }
                    }
                }
            }
        }
    }
};
exports.MaintenanceRedeployStatus = {
    serializedName: "MaintenanceRedeployStatus",
    type: {
        name: "Composite",
        className: "MaintenanceRedeployStatus",
        modelProperties: {
            isCustomerInitiatedMaintenanceAllowed: {
                serializedName: "isCustomerInitiatedMaintenanceAllowed",
                type: {
                    name: "Boolean"
                }
            },
            preMaintenanceWindowStartTime: {
                serializedName: "preMaintenanceWindowStartTime",
                type: {
                    name: "DateTime"
                }
            },
            preMaintenanceWindowEndTime: {
                serializedName: "preMaintenanceWindowEndTime",
                type: {
                    name: "DateTime"
                }
            },
            maintenanceWindowStartTime: {
                serializedName: "maintenanceWindowStartTime",
                type: {
                    name: "DateTime"
                }
            },
            maintenanceWindowEndTime: {
                serializedName: "maintenanceWindowEndTime",
                type: {
                    name: "DateTime"
                }
            },
            lastOperationResultCode: {
                serializedName: "lastOperationResultCode",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "None",
                        "RetryLater",
                        "MaintenanceAborted",
                        "MaintenanceCompleted"
                    ]
                }
            },
            lastOperationMessage: {
                serializedName: "lastOperationMessage",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.VirtualMachineInstanceView = {
    serializedName: "VirtualMachineInstanceView",
    type: {
        name: "Composite",
        className: "VirtualMachineInstanceView",
        modelProperties: {
            platformUpdateDomain: {
                serializedName: "platformUpdateDomain",
                type: {
                    name: "Number"
                }
            },
            platformFaultDomain: {
                serializedName: "platformFaultDomain",
                type: {
                    name: "Number"
                }
            },
            computerName: {
                serializedName: "computerName",
                type: {
                    name: "String"
                }
            },
            osName: {
                serializedName: "osName",
                type: {
                    name: "String"
                }
            },
            osVersion: {
                serializedName: "osVersion",
                type: {
                    name: "String"
                }
            },
            rdpThumbPrint: {
                serializedName: "rdpThumbPrint",
                type: {
                    name: "String"
                }
            },
            vmAgent: {
                serializedName: "vmAgent",
                type: {
                    name: "Composite",
                    className: "VirtualMachineAgentInstanceView"
                }
            },
            maintenanceRedeployStatus: {
                serializedName: "maintenanceRedeployStatus",
                type: {
                    name: "Composite",
                    className: "MaintenanceRedeployStatus"
                }
            },
            disks: {
                serializedName: "disks",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DiskInstanceView"
                        }
                    }
                }
            },
            extensions: {
                serializedName: "extensions",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "VirtualMachineExtensionInstanceView"
                        }
                    }
                }
            },
            bootDiagnostics: {
                serializedName: "bootDiagnostics",
                type: {
                    name: "Composite",
                    className: "BootDiagnosticsInstanceView"
                }
            },
            statuses: {
                serializedName: "statuses",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "InstanceViewStatus"
                        }
                    }
                }
            }
        }
    }
};
exports.VirtualMachine = {
    serializedName: "VirtualMachine",
    type: {
        name: "Composite",
        className: "VirtualMachine",
        modelProperties: Object.assign({}, exports.Resource.type.modelProperties, { plan: {
                serializedName: "plan",
                type: {
                    name: "Composite",
                    className: "Plan"
                }
            }, hardwareProfile: {
                serializedName: "properties.hardwareProfile",
                type: {
                    name: "Composite",
                    className: "HardwareProfile"
                }
            }, storageProfile: {
                serializedName: "properties.storageProfile",
                type: {
                    name: "Composite",
                    className: "StorageProfile"
                }
            }, additionalCapabilities: {
                serializedName: "properties.additionalCapabilities",
                type: {
                    name: "Composite",
                    className: "AdditionalCapabilities"
                }
            }, osProfile: {
                serializedName: "properties.osProfile",
                type: {
                    name: "Composite",
                    className: "OSProfile"
                }
            }, networkProfile: {
                serializedName: "properties.networkProfile",
                type: {
                    name: "Composite",
                    className: "NetworkProfile"
                }
            }, diagnosticsProfile: {
                serializedName: "properties.diagnosticsProfile",
                type: {
                    name: "Composite",
                    className: "DiagnosticsProfile"
                }
            }, availabilitySet: {
                serializedName: "properties.availabilitySet",
                type: {
                    name: "Composite",
                    className: "SubResource"
                }
            }, provisioningState: {
                readOnly: true,
                serializedName: "properties.provisioningState",
                type: {
                    name: "String"
                }
            }, instanceView: {
                readOnly: true,
                serializedName: "properties.instanceView",
                type: {
                    name: "Composite",
                    className: "VirtualMachineInstanceView"
                }
            }, licenseType: {
                serializedName: "properties.licenseType",
                type: {
                    name: "String"
                }
            }, vmId: {
                readOnly: true,
                serializedName: "properties.vmId",
                type: {
                    name: "String"
                }
            }, resources: {
                readOnly: true,
                serializedName: "resources",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "VirtualMachineExtension"
                        }
                    }
                }
            }, identity: {
                serializedName: "identity",
                type: {
                    name: "Composite",
                    className: "VirtualMachineIdentity"
                }
            }, zones: {
                serializedName: "zones",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            } })
    }
};
exports.VirtualMachineUpdate = {
    serializedName: "VirtualMachineUpdate",
    type: {
        name: "Composite",
        className: "VirtualMachineUpdate",
        modelProperties: Object.assign({}, exports.UpdateResource.type.modelProperties, { plan: {
                serializedName: "plan",
                type: {
                    name: "Composite",
                    className: "Plan"
                }
            }, hardwareProfile: {
                serializedName: "properties.hardwareProfile",
                type: {
                    name: "Composite",
                    className: "HardwareProfile"
                }
            }, storageProfile: {
                serializedName: "properties.storageProfile",
                type: {
                    name: "Composite",
                    className: "StorageProfile"
                }
            }, additionalCapabilities: {
                serializedName: "properties.additionalCapabilities",
                type: {
                    name: "Composite",
                    className: "AdditionalCapabilities"
                }
            }, osProfile: {
                serializedName: "properties.osProfile",
                type: {
                    name: "Composite",
                    className: "OSProfile"
                }
            }, networkProfile: {
                serializedName: "properties.networkProfile",
                type: {
                    name: "Composite",
                    className: "NetworkProfile"
                }
            }, diagnosticsProfile: {
                serializedName: "properties.diagnosticsProfile",
                type: {
                    name: "Composite",
                    className: "DiagnosticsProfile"
                }
            }, availabilitySet: {
                serializedName: "properties.availabilitySet",
                type: {
                    name: "Composite",
                    className: "SubResource"
                }
            }, provisioningState: {
                readOnly: true,
                serializedName: "properties.provisioningState",
                type: {
                    name: "String"
                }
            }, instanceView: {
                readOnly: true,
                serializedName: "properties.instanceView",
                type: {
                    name: "Composite",
                    className: "VirtualMachineInstanceView"
                }
            }, licenseType: {
                serializedName: "properties.licenseType",
                type: {
                    name: "String"
                }
            }, vmId: {
                readOnly: true,
                serializedName: "properties.vmId",
                type: {
                    name: "String"
                }
            }, identity: {
                serializedName: "identity",
                type: {
                    name: "Composite",
                    className: "VirtualMachineIdentity"
                }
            }, zones: {
                serializedName: "zones",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            } })
    }
};
exports.AutoOSUpgradePolicy = {
    serializedName: "AutoOSUpgradePolicy",
    type: {
        name: "Composite",
        className: "AutoOSUpgradePolicy",
        modelProperties: {
            disableAutoRollback: {
                serializedName: "disableAutoRollback",
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
exports.RollingUpgradePolicy = {
    serializedName: "RollingUpgradePolicy",
    type: {
        name: "Composite",
        className: "RollingUpgradePolicy",
        modelProperties: {
            maxBatchInstancePercent: {
                serializedName: "maxBatchInstancePercent",
                constraints: {
                    InclusiveMaximum: 100,
                    InclusiveMinimum: 5
                },
                type: {
                    name: "Number"
                }
            },
            maxUnhealthyInstancePercent: {
                serializedName: "maxUnhealthyInstancePercent",
                constraints: {
                    InclusiveMaximum: 100,
                    InclusiveMinimum: 5
                },
                type: {
                    name: "Number"
                }
            },
            maxUnhealthyUpgradedInstancePercent: {
                serializedName: "maxUnhealthyUpgradedInstancePercent",
                constraints: {
                    InclusiveMaximum: 100,
                    InclusiveMinimum: 0
                },
                type: {
                    name: "Number"
                }
            },
            pauseTimeBetweenBatches: {
                serializedName: "pauseTimeBetweenBatches",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.UpgradePolicy = {
    serializedName: "UpgradePolicy",
    type: {
        name: "Composite",
        className: "UpgradePolicy",
        modelProperties: {
            mode: {
                serializedName: "mode",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Automatic",
                        "Manual",
                        "Rolling"
                    ]
                }
            },
            rollingUpgradePolicy: {
                serializedName: "rollingUpgradePolicy",
                type: {
                    name: "Composite",
                    className: "RollingUpgradePolicy"
                }
            },
            automaticOSUpgrade: {
                serializedName: "automaticOSUpgrade",
                type: {
                    name: "Boolean"
                }
            },
            autoOSUpgradePolicy: {
                serializedName: "autoOSUpgradePolicy",
                type: {
                    name: "Composite",
                    className: "AutoOSUpgradePolicy"
                }
            }
        }
    }
};
exports.ImageOSDisk = {
    serializedName: "ImageOSDisk",
    type: {
        name: "Composite",
        className: "ImageOSDisk",
        modelProperties: {
            osType: {
                required: true,
                serializedName: "osType",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Windows",
                        "Linux"
                    ]
                }
            },
            osState: {
                required: true,
                serializedName: "osState",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Generalized",
                        "Specialized"
                    ]
                }
            },
            snapshot: {
                serializedName: "snapshot",
                type: {
                    name: "Composite",
                    className: "SubResource"
                }
            },
            managedDisk: {
                serializedName: "managedDisk",
                type: {
                    name: "Composite",
                    className: "SubResource"
                }
            },
            blobUri: {
                serializedName: "blobUri",
                type: {
                    name: "String"
                }
            },
            caching: {
                serializedName: "caching",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "None",
                        "ReadOnly",
                        "ReadWrite"
                    ]
                }
            },
            diskSizeGB: {
                serializedName: "diskSizeGB",
                type: {
                    name: "Number"
                }
            },
            storageAccountType: {
                serializedName: "storageAccountType",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.ImageDataDisk = {
    serializedName: "ImageDataDisk",
    type: {
        name: "Composite",
        className: "ImageDataDisk",
        modelProperties: {
            lun: {
                required: true,
                serializedName: "lun",
                type: {
                    name: "Number"
                }
            },
            snapshot: {
                serializedName: "snapshot",
                type: {
                    name: "Composite",
                    className: "SubResource"
                }
            },
            managedDisk: {
                serializedName: "managedDisk",
                type: {
                    name: "Composite",
                    className: "SubResource"
                }
            },
            blobUri: {
                serializedName: "blobUri",
                type: {
                    name: "String"
                }
            },
            caching: {
                serializedName: "caching",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "None",
                        "ReadOnly",
                        "ReadWrite"
                    ]
                }
            },
            diskSizeGB: {
                serializedName: "diskSizeGB",
                type: {
                    name: "Number"
                }
            },
            storageAccountType: {
                serializedName: "storageAccountType",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.ImageStorageProfile = {
    serializedName: "ImageStorageProfile",
    type: {
        name: "Composite",
        className: "ImageStorageProfile",
        modelProperties: {
            osDisk: {
                serializedName: "osDisk",
                type: {
                    name: "Composite",
                    className: "ImageOSDisk"
                }
            },
            dataDisks: {
                serializedName: "dataDisks",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ImageDataDisk"
                        }
                    }
                }
            },
            zoneResilient: {
                serializedName: "zoneResilient",
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
exports.Image = {
    serializedName: "Image",
    type: {
        name: "Composite",
        className: "Image",
        modelProperties: Object.assign({}, exports.Resource.type.modelProperties, { sourceVirtualMachine: {
                serializedName: "properties.sourceVirtualMachine",
                type: {
                    name: "Composite",
                    className: "SubResource"
                }
            }, storageProfile: {
                serializedName: "properties.storageProfile",
                type: {
                    name: "Composite",
                    className: "ImageStorageProfile"
                }
            }, provisioningState: {
                readOnly: true,
                serializedName: "properties.provisioningState",
                type: {
                    name: "String"
                }
            } })
    }
};
exports.ImageUpdate = {
    serializedName: "ImageUpdate",
    type: {
        name: "Composite",
        className: "ImageUpdate",
        modelProperties: Object.assign({}, exports.UpdateResource.type.modelProperties, { sourceVirtualMachine: {
                serializedName: "properties.sourceVirtualMachine",
                type: {
                    name: "Composite",
                    className: "SubResource"
                }
            }, storageProfile: {
                serializedName: "properties.storageProfile",
                type: {
                    name: "Composite",
                    className: "ImageStorageProfile"
                }
            }, provisioningState: {
                readOnly: true,
                serializedName: "properties.provisioningState",
                type: {
                    name: "String"
                }
            } })
    }
};
exports.VirtualMachineScaleSetIdentityUserAssignedIdentitiesValue = {
    serializedName: "VirtualMachineScaleSetIdentity_userAssignedIdentitiesValue",
    type: {
        name: "Composite",
        className: "VirtualMachineScaleSetIdentityUserAssignedIdentitiesValue",
        modelProperties: {
            principalId: {
                readOnly: true,
                serializedName: "principalId",
                type: {
                    name: "String"
                }
            },
            clientId: {
                readOnly: true,
                serializedName: "clientId",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.VirtualMachineScaleSetIdentity = {
    serializedName: "VirtualMachineScaleSetIdentity",
    type: {
        name: "Composite",
        className: "VirtualMachineScaleSetIdentity",
        modelProperties: {
            principalId: {
                readOnly: true,
                serializedName: "principalId",
                type: {
                    name: "String"
                }
            },
            tenantId: {
                readOnly: true,
                serializedName: "tenantId",
                type: {
                    name: "String"
                }
            },
            type: {
                serializedName: "type",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned",
                        "None"
                    ]
                }
            },
            userAssignedIdentities: {
                serializedName: "userAssignedIdentities",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "Composite",
                            className: "VirtualMachineScaleSetIdentityUserAssignedIdentitiesValue"
                        }
                    }
                }
            }
        }
    }
};
exports.VirtualMachineScaleSetOSProfile = {
    serializedName: "VirtualMachineScaleSetOSProfile",
    type: {
        name: "Composite",
        className: "VirtualMachineScaleSetOSProfile",
        modelProperties: {
            computerNamePrefix: {
                serializedName: "computerNamePrefix",
                type: {
                    name: "String"
                }
            },
            adminUsername: {
                serializedName: "adminUsername",
                type: {
                    name: "String"
                }
            },
            adminPassword: {
                serializedName: "adminPassword",
                type: {
                    name: "String"
                }
            },
            customData: {
                serializedName: "customData",
                type: {
                    name: "String"
                }
            },
            windowsConfiguration: {
                serializedName: "windowsConfiguration",
                type: {
                    name: "Composite",
                    className: "WindowsConfiguration"
                }
            },
            linuxConfiguration: {
                serializedName: "linuxConfiguration",
                type: {
                    name: "Composite",
                    className: "LinuxConfiguration"
                }
            },
            secrets: {
                serializedName: "secrets",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "VaultSecretGroup"
                        }
                    }
                }
            }
        }
    }
};
exports.VirtualMachineScaleSetUpdateOSProfile = {
    serializedName: "VirtualMachineScaleSetUpdateOSProfile",
    type: {
        name: "Composite",
        className: "VirtualMachineScaleSetUpdateOSProfile",
        modelProperties: {
            customData: {
                serializedName: "customData",
                type: {
                    name: "String"
                }
            },
            windowsConfiguration: {
                serializedName: "windowsConfiguration",
                type: {
                    name: "Composite",
                    className: "WindowsConfiguration"
                }
            },
            linuxConfiguration: {
                serializedName: "linuxConfiguration",
                type: {
                    name: "Composite",
                    className: "LinuxConfiguration"
                }
            },
            secrets: {
                serializedName: "secrets",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "VaultSecretGroup"
                        }
                    }
                }
            }
        }
    }
};
exports.VirtualMachineScaleSetManagedDiskParameters = {
    serializedName: "VirtualMachineScaleSetManagedDiskParameters",
    type: {
        name: "Composite",
        className: "VirtualMachineScaleSetManagedDiskParameters",
        modelProperties: {
            storageAccountType: {
                serializedName: "storageAccountType",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.VirtualMachineScaleSetOSDisk = {
    serializedName: "VirtualMachineScaleSetOSDisk",
    type: {
        name: "Composite",
        className: "VirtualMachineScaleSetOSDisk",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            caching: {
                serializedName: "caching",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "None",
                        "ReadOnly",
                        "ReadWrite"
                    ]
                }
            },
            writeAcceleratorEnabled: {
                serializedName: "writeAcceleratorEnabled",
                type: {
                    name: "Boolean"
                }
            },
            createOption: {
                required: true,
                serializedName: "createOption",
                type: {
                    name: "String"
                }
            },
            diskSizeGB: {
                serializedName: "diskSizeGB",
                type: {
                    name: "Number"
                }
            },
            osType: {
                serializedName: "osType",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Windows",
                        "Linux"
                    ]
                }
            },
            image: {
                serializedName: "image",
                type: {
                    name: "Composite",
                    className: "VirtualHardDisk"
                }
            },
            vhdContainers: {
                serializedName: "vhdContainers",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            managedDisk: {
                serializedName: "managedDisk",
                type: {
                    name: "Composite",
                    className: "VirtualMachineScaleSetManagedDiskParameters"
                }
            }
        }
    }
};
exports.VirtualMachineScaleSetUpdateOSDisk = {
    serializedName: "VirtualMachineScaleSetUpdateOSDisk",
    type: {
        name: "Composite",
        className: "VirtualMachineScaleSetUpdateOSDisk",
        modelProperties: {
            caching: {
                serializedName: "caching",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "None",
                        "ReadOnly",
                        "ReadWrite"
                    ]
                }
            },
            writeAcceleratorEnabled: {
                serializedName: "writeAcceleratorEnabled",
                type: {
                    name: "Boolean"
                }
            },
            diskSizeGB: {
                serializedName: "diskSizeGB",
                type: {
                    name: "Number"
                }
            },
            image: {
                serializedName: "image",
                type: {
                    name: "Composite",
                    className: "VirtualHardDisk"
                }
            },
            vhdContainers: {
                serializedName: "vhdContainers",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            managedDisk: {
                serializedName: "managedDisk",
                type: {
                    name: "Composite",
                    className: "VirtualMachineScaleSetManagedDiskParameters"
                }
            }
        }
    }
};
exports.VirtualMachineScaleSetDataDisk = {
    serializedName: "VirtualMachineScaleSetDataDisk",
    type: {
        name: "Composite",
        className: "VirtualMachineScaleSetDataDisk",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            lun: {
                required: true,
                serializedName: "lun",
                type: {
                    name: "Number"
                }
            },
            caching: {
                serializedName: "caching",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "None",
                        "ReadOnly",
                        "ReadWrite"
                    ]
                }
            },
            writeAcceleratorEnabled: {
                serializedName: "writeAcceleratorEnabled",
                type: {
                    name: "Boolean"
                }
            },
            createOption: {
                required: true,
                serializedName: "createOption",
                type: {
                    name: "String"
                }
            },
            diskSizeGB: {
                serializedName: "diskSizeGB",
                type: {
                    name: "Number"
                }
            },
            managedDisk: {
                serializedName: "managedDisk",
                type: {
                    name: "Composite",
                    className: "VirtualMachineScaleSetManagedDiskParameters"
                }
            }
        }
    }
};
exports.VirtualMachineScaleSetStorageProfile = {
    serializedName: "VirtualMachineScaleSetStorageProfile",
    type: {
        name: "Composite",
        className: "VirtualMachineScaleSetStorageProfile",
        modelProperties: {
            imageReference: {
                serializedName: "imageReference",
                type: {
                    name: "Composite",
                    className: "ImageReference"
                }
            },
            osDisk: {
                serializedName: "osDisk",
                type: {
                    name: "Composite",
                    className: "VirtualMachineScaleSetOSDisk"
                }
            },
            dataDisks: {
                serializedName: "dataDisks",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "VirtualMachineScaleSetDataDisk"
                        }
                    }
                }
            }
        }
    }
};
exports.VirtualMachineScaleSetUpdateStorageProfile = {
    serializedName: "VirtualMachineScaleSetUpdateStorageProfile",
    type: {
        name: "Composite",
        className: "VirtualMachineScaleSetUpdateStorageProfile",
        modelProperties: {
            imageReference: {
                serializedName: "imageReference",
                type: {
                    name: "Composite",
                    className: "ImageReference"
                }
            },
            osDisk: {
                serializedName: "osDisk",
                type: {
                    name: "Composite",
                    className: "VirtualMachineScaleSetUpdateOSDisk"
                }
            },
            dataDisks: {
                serializedName: "dataDisks",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "VirtualMachineScaleSetDataDisk"
                        }
                    }
                }
            }
        }
    }
};
exports.ApiEntityReference = {
    serializedName: "ApiEntityReference",
    type: {
        name: "Composite",
        className: "ApiEntityReference",
        modelProperties: {
            id: {
                serializedName: "id",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings = {
    serializedName: "VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings",
    type: {
        name: "Composite",
        className: "VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings",
        modelProperties: {
            domainNameLabel: {
                required: true,
                serializedName: "domainNameLabel",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.VirtualMachineScaleSetIpTag = {
    serializedName: "VirtualMachineScaleSetIpTag",
    type: {
        name: "Composite",
        className: "VirtualMachineScaleSetIpTag",
        modelProperties: {
            ipTagType: {
                serializedName: "ipTagType",
                type: {
                    name: "String"
                }
            },
            tag: {
                serializedName: "tag",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.VirtualMachineScaleSetPublicIPAddressConfiguration = {
    serializedName: "VirtualMachineScaleSetPublicIPAddressConfiguration",
    type: {
        name: "Composite",
        className: "VirtualMachineScaleSetPublicIPAddressConfiguration",
        modelProperties: {
            name: {
                required: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            idleTimeoutInMinutes: {
                serializedName: "properties.idleTimeoutInMinutes",
                type: {
                    name: "Number"
                }
            },
            dnsSettings: {
                serializedName: "properties.dnsSettings",
                type: {
                    name: "Composite",
                    className: "VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings"
                }
            },
            ipTags: {
                serializedName: "properties.ipTags",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "VirtualMachineScaleSetIpTag"
                        }
                    }
                }
            },
            publicIPPrefix: {
                serializedName: "properties.publicIPPrefix",
                type: {
                    name: "Composite",
                    className: "SubResource"
                }
            }
        }
    }
};
exports.VirtualMachineScaleSetUpdatePublicIPAddressConfiguration = {
    serializedName: "VirtualMachineScaleSetUpdatePublicIPAddressConfiguration",
    type: {
        name: "Composite",
        className: "VirtualMachineScaleSetUpdatePublicIPAddressConfiguration",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            idleTimeoutInMinutes: {
                serializedName: "properties.idleTimeoutInMinutes",
                type: {
                    name: "Number"
                }
            },
            dnsSettings: {
                serializedName: "properties.dnsSettings",
                type: {
                    name: "Composite",
                    className: "VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings"
                }
            }
        }
    }
};
exports.VirtualMachineScaleSetIPConfiguration = {
    serializedName: "VirtualMachineScaleSetIPConfiguration",
    type: {
        name: "Composite",
        className: "VirtualMachineScaleSetIPConfiguration",
        modelProperties: Object.assign({}, exports.SubResource.type.modelProperties, { name: {
                required: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            }, subnet: {
                serializedName: "properties.subnet",
                type: {
                    name: "Composite",
                    className: "ApiEntityReference"
                }
            }, primary: {
                serializedName: "properties.primary",
                type: {
                    name: "Boolean"
                }
            }, publicIPAddressConfiguration: {
                serializedName: "properties.publicIPAddressConfiguration",
                type: {
                    name: "Composite",
                    className: "VirtualMachineScaleSetPublicIPAddressConfiguration"
                }
            }, privateIPAddressVersion: {
                serializedName: "properties.privateIPAddressVersion",
                type: {
                    name: "String"
                }
            }, applicationGatewayBackendAddressPools: {
                serializedName: "properties.applicationGatewayBackendAddressPools",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SubResource"
                        }
                    }
                }
            }, applicationSecurityGroups: {
                serializedName: "properties.applicationSecurityGroups",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SubResource"
                        }
                    }
                }
            }, loadBalancerBackendAddressPools: {
                serializedName: "properties.loadBalancerBackendAddressPools",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SubResource"
                        }
                    }
                }
            }, loadBalancerInboundNatPools: {
                serializedName: "properties.loadBalancerInboundNatPools",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SubResource"
                        }
                    }
                }
            } })
    }
};
exports.VirtualMachineScaleSetUpdateIPConfiguration = {
    serializedName: "VirtualMachineScaleSetUpdateIPConfiguration",
    type: {
        name: "Composite",
        className: "VirtualMachineScaleSetUpdateIPConfiguration",
        modelProperties: Object.assign({}, exports.SubResource.type.modelProperties, { name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            }, subnet: {
                serializedName: "properties.subnet",
                type: {
                    name: "Composite",
                    className: "ApiEntityReference"
                }
            }, primary: {
                serializedName: "properties.primary",
                type: {
                    name: "Boolean"
                }
            }, publicIPAddressConfiguration: {
                serializedName: "properties.publicIPAddressConfiguration",
                type: {
                    name: "Composite",
                    className: "VirtualMachineScaleSetUpdatePublicIPAddressConfiguration"
                }
            }, privateIPAddressVersion: {
                serializedName: "properties.privateIPAddressVersion",
                type: {
                    name: "String"
                }
            }, applicationGatewayBackendAddressPools: {
                serializedName: "properties.applicationGatewayBackendAddressPools",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SubResource"
                        }
                    }
                }
            }, applicationSecurityGroups: {
                serializedName: "properties.applicationSecurityGroups",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SubResource"
                        }
                    }
                }
            }, loadBalancerBackendAddressPools: {
                serializedName: "properties.loadBalancerBackendAddressPools",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SubResource"
                        }
                    }
                }
            }, loadBalancerInboundNatPools: {
                serializedName: "properties.loadBalancerInboundNatPools",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SubResource"
                        }
                    }
                }
            } })
    }
};
exports.VirtualMachineScaleSetNetworkConfigurationDnsSettings = {
    serializedName: "VirtualMachineScaleSetNetworkConfigurationDnsSettings",
    type: {
        name: "Composite",
        className: "VirtualMachineScaleSetNetworkConfigurationDnsSettings",
        modelProperties: {
            dnsServers: {
                serializedName: "dnsServers",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
exports.VirtualMachineScaleSetNetworkConfiguration = {
    serializedName: "VirtualMachineScaleSetNetworkConfiguration",
    type: {
        name: "Composite",
        className: "VirtualMachineScaleSetNetworkConfiguration",
        modelProperties: Object.assign({}, exports.SubResource.type.modelProperties, { name: {
                required: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            }, primary: {
                serializedName: "properties.primary",
                type: {
                    name: "Boolean"
                }
            }, enableAcceleratedNetworking: {
                serializedName: "properties.enableAcceleratedNetworking",
                type: {
                    name: "Boolean"
                }
            }, networkSecurityGroup: {
                serializedName: "properties.networkSecurityGroup",
                type: {
                    name: "Composite",
                    className: "SubResource"
                }
            }, dnsSettings: {
                serializedName: "properties.dnsSettings",
                type: {
                    name: "Composite",
                    className: "VirtualMachineScaleSetNetworkConfigurationDnsSettings"
                }
            }, ipConfigurations: {
                required: true,
                serializedName: "properties.ipConfigurations",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "VirtualMachineScaleSetIPConfiguration"
                        }
                    }
                }
            }, enableIPForwarding: {
                serializedName: "properties.enableIPForwarding",
                type: {
                    name: "Boolean"
                }
            } })
    }
};
exports.VirtualMachineScaleSetUpdateNetworkConfiguration = {
    serializedName: "VirtualMachineScaleSetUpdateNetworkConfiguration",
    type: {
        name: "Composite",
        className: "VirtualMachineScaleSetUpdateNetworkConfiguration",
        modelProperties: Object.assign({}, exports.SubResource.type.modelProperties, { name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            }, primary: {
                serializedName: "properties.primary",
                type: {
                    name: "Boolean"
                }
            }, enableAcceleratedNetworking: {
                serializedName: "properties.enableAcceleratedNetworking",
                type: {
                    name: "Boolean"
                }
            }, networkSecurityGroup: {
                serializedName: "properties.networkSecurityGroup",
                type: {
                    name: "Composite",
                    className: "SubResource"
                }
            }, dnsSettings: {
                serializedName: "properties.dnsSettings",
                type: {
                    name: "Composite",
                    className: "VirtualMachineScaleSetNetworkConfigurationDnsSettings"
                }
            }, ipConfigurations: {
                serializedName: "properties.ipConfigurations",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "VirtualMachineScaleSetUpdateIPConfiguration"
                        }
                    }
                }
            }, enableIPForwarding: {
                serializedName: "properties.enableIPForwarding",
                type: {
                    name: "Boolean"
                }
            } })
    }
};
exports.VirtualMachineScaleSetNetworkProfile = {
    serializedName: "VirtualMachineScaleSetNetworkProfile",
    type: {
        name: "Composite",
        className: "VirtualMachineScaleSetNetworkProfile",
        modelProperties: {
            healthProbe: {
                serializedName: "healthProbe",
                type: {
                    name: "Composite",
                    className: "ApiEntityReference"
                }
            },
            networkInterfaceConfigurations: {
                serializedName: "networkInterfaceConfigurations",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "VirtualMachineScaleSetNetworkConfiguration"
                        }
                    }
                }
            }
        }
    }
};
exports.VirtualMachineScaleSetUpdateNetworkProfile = {
    serializedName: "VirtualMachineScaleSetUpdateNetworkProfile",
    type: {
        name: "Composite",
        className: "VirtualMachineScaleSetUpdateNetworkProfile",
        modelProperties: {
            networkInterfaceConfigurations: {
                serializedName: "networkInterfaceConfigurations",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "VirtualMachineScaleSetUpdateNetworkConfiguration"
                        }
                    }
                }
            }
        }
    }
};
exports.SubResourceReadOnly = {
    serializedName: "SubResourceReadOnly",
    type: {
        name: "Composite",
        className: "SubResourceReadOnly",
        modelProperties: {
            id: {
                readOnly: true,
                serializedName: "id",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.VirtualMachineScaleSetExtension = {
    serializedName: "VirtualMachineScaleSetExtension",
    type: {
        name: "Composite",
        className: "VirtualMachineScaleSetExtension",
        modelProperties: Object.assign({}, exports.SubResourceReadOnly.type.modelProperties, { name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            }, forceUpdateTag: {
                serializedName: "properties.forceUpdateTag",
                type: {
                    name: "String"
                }
            }, publisher: {
                serializedName: "properties.publisher",
                type: {
                    name: "String"
                }
            }, type: {
                serializedName: "properties.type",
                type: {
                    name: "String"
                }
            }, typeHandlerVersion: {
                serializedName: "properties.typeHandlerVersion",
                type: {
                    name: "String"
                }
            }, autoUpgradeMinorVersion: {
                serializedName: "properties.autoUpgradeMinorVersion",
                type: {
                    name: "Boolean"
                }
            }, settings: {
                serializedName: "properties.settings",
                type: {
                    name: "Object"
                }
            }, protectedSettings: {
                serializedName: "properties.protectedSettings",
                type: {
                    name: "Object"
                }
            }, provisioningState: {
                readOnly: true,
                serializedName: "properties.provisioningState",
                type: {
                    name: "String"
                }
            } })
    }
};
exports.VirtualMachineScaleSetExtensionProfile = {
    serializedName: "VirtualMachineScaleSetExtensionProfile",
    type: {
        name: "Composite",
        className: "VirtualMachineScaleSetExtensionProfile",
        modelProperties: {
            extensions: {
                serializedName: "extensions",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "VirtualMachineScaleSetExtension"
                        }
                    }
                }
            }
        }
    }
};
exports.VirtualMachineScaleSetVMProfile = {
    serializedName: "VirtualMachineScaleSetVMProfile",
    type: {
        name: "Composite",
        className: "VirtualMachineScaleSetVMProfile",
        modelProperties: {
            osProfile: {
                serializedName: "osProfile",
                type: {
                    name: "Composite",
                    className: "VirtualMachineScaleSetOSProfile"
                }
            },
            storageProfile: {
                serializedName: "storageProfile",
                type: {
                    name: "Composite",
                    className: "VirtualMachineScaleSetStorageProfile"
                }
            },
            additionalCapabilities: {
                serializedName: "additionalCapabilities",
                type: {
                    name: "Composite",
                    className: "AdditionalCapabilities"
                }
            },
            networkProfile: {
                serializedName: "networkProfile",
                type: {
                    name: "Composite",
                    className: "VirtualMachineScaleSetNetworkProfile"
                }
            },
            diagnosticsProfile: {
                serializedName: "diagnosticsProfile",
                type: {
                    name: "Composite",
                    className: "DiagnosticsProfile"
                }
            },
            extensionProfile: {
                serializedName: "extensionProfile",
                type: {
                    name: "Composite",
                    className: "VirtualMachineScaleSetExtensionProfile"
                }
            },
            licenseType: {
                serializedName: "licenseType",
                type: {
                    name: "String"
                }
            },
            priority: {
                serializedName: "priority",
                type: {
                    name: "String"
                }
            },
            evictionPolicy: {
                serializedName: "evictionPolicy",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.VirtualMachineScaleSetUpdateVMProfile = {
    serializedName: "VirtualMachineScaleSetUpdateVMProfile",
    type: {
        name: "Composite",
        className: "VirtualMachineScaleSetUpdateVMProfile",
        modelProperties: {
            osProfile: {
                serializedName: "osProfile",
                type: {
                    name: "Composite",
                    className: "VirtualMachineScaleSetUpdateOSProfile"
                }
            },
            storageProfile: {
                serializedName: "storageProfile",
                type: {
                    name: "Composite",
                    className: "VirtualMachineScaleSetUpdateStorageProfile"
                }
            },
            networkProfile: {
                serializedName: "networkProfile",
                type: {
                    name: "Composite",
                    className: "VirtualMachineScaleSetUpdateNetworkProfile"
                }
            },
            diagnosticsProfile: {
                serializedName: "diagnosticsProfile",
                type: {
                    name: "Composite",
                    className: "DiagnosticsProfile"
                }
            },
            extensionProfile: {
                serializedName: "extensionProfile",
                type: {
                    name: "Composite",
                    className: "VirtualMachineScaleSetExtensionProfile"
                }
            },
            licenseType: {
                serializedName: "licenseType",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.VirtualMachineScaleSet = {
    serializedName: "VirtualMachineScaleSet",
    type: {
        name: "Composite",
        className: "VirtualMachineScaleSet",
        modelProperties: Object.assign({}, exports.Resource.type.modelProperties, { sku: {
                serializedName: "sku",
                type: {
                    name: "Composite",
                    className: "Sku"
                }
            }, plan: {
                serializedName: "plan",
                type: {
                    name: "Composite",
                    className: "Plan"
                }
            }, upgradePolicy: {
                serializedName: "properties.upgradePolicy",
                type: {
                    name: "Composite",
                    className: "UpgradePolicy"
                }
            }, virtualMachineProfile: {
                serializedName: "properties.virtualMachineProfile",
                type: {
                    name: "Composite",
                    className: "VirtualMachineScaleSetVMProfile"
                }
            }, provisioningState: {
                readOnly: true,
                serializedName: "properties.provisioningState",
                type: {
                    name: "String"
                }
            }, overprovision: {
                serializedName: "properties.overprovision",
                type: {
                    name: "Boolean"
                }
            }, uniqueId: {
                readOnly: true,
                serializedName: "properties.uniqueId",
                type: {
                    name: "String"
                }
            }, singlePlacementGroup: {
                serializedName: "properties.singlePlacementGroup",
                type: {
                    name: "Boolean"
                }
            }, zoneBalance: {
                serializedName: "properties.zoneBalance",
                type: {
                    name: "Boolean"
                }
            }, platformFaultDomainCount: {
                serializedName: "properties.platformFaultDomainCount",
                type: {
                    name: "Number"
                }
            }, identity: {
                serializedName: "identity",
                type: {
                    name: "Composite",
                    className: "VirtualMachineScaleSetIdentity"
                }
            }, zones: {
                serializedName: "zones",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            } })
    }
};
exports.VirtualMachineScaleSetUpdate = {
    serializedName: "VirtualMachineScaleSetUpdate",
    type: {
        name: "Composite",
        className: "VirtualMachineScaleSetUpdate",
        modelProperties: Object.assign({}, exports.UpdateResource.type.modelProperties, { sku: {
                serializedName: "sku",
                type: {
                    name: "Composite",
                    className: "Sku"
                }
            }, plan: {
                serializedName: "plan",
                type: {
                    name: "Composite",
                    className: "Plan"
                }
            }, upgradePolicy: {
                serializedName: "properties.upgradePolicy",
                type: {
                    name: "Composite",
                    className: "UpgradePolicy"
                }
            }, virtualMachineProfile: {
                serializedName: "properties.virtualMachineProfile",
                type: {
                    name: "Composite",
                    className: "VirtualMachineScaleSetUpdateVMProfile"
                }
            }, overprovision: {
                serializedName: "properties.overprovision",
                type: {
                    name: "Boolean"
                }
            }, singlePlacementGroup: {
                serializedName: "properties.singlePlacementGroup",
                type: {
                    name: "Boolean"
                }
            }, identity: {
                serializedName: "identity",
                type: {
                    name: "Composite",
                    className: "VirtualMachineScaleSetIdentity"
                }
            } })
    }
};
exports.VirtualMachineScaleSetVMInstanceIDs = {
    serializedName: "VirtualMachineScaleSetVMInstanceIDs",
    type: {
        name: "Composite",
        className: "VirtualMachineScaleSetVMInstanceIDs",
        modelProperties: {
            instanceIds: {
                serializedName: "instanceIds",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
exports.VirtualMachineScaleSetVMInstanceRequiredIDs = {
    serializedName: "VirtualMachineScaleSetVMInstanceRequiredIDs",
    type: {
        name: "Composite",
        className: "VirtualMachineScaleSetVMInstanceRequiredIDs",
        modelProperties: {
            instanceIds: {
                required: true,
                serializedName: "instanceIds",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
exports.VirtualMachineStatusCodeCount = {
    serializedName: "VirtualMachineStatusCodeCount",
    type: {
        name: "Composite",
        className: "VirtualMachineStatusCodeCount",
        modelProperties: {
            code: {
                readOnly: true,
                serializedName: "code",
                type: {
                    name: "String"
                }
            },
            count: {
                readOnly: true,
                serializedName: "count",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
exports.VirtualMachineScaleSetInstanceViewStatusesSummary = {
    serializedName: "VirtualMachineScaleSetInstanceViewStatusesSummary",
    type: {
        name: "Composite",
        className: "VirtualMachineScaleSetInstanceViewStatusesSummary",
        modelProperties: {
            statusesSummary: {
                readOnly: true,
                serializedName: "statusesSummary",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "VirtualMachineStatusCodeCount"
                        }
                    }
                }
            }
        }
    }
};
exports.VirtualMachineScaleSetVMExtensionsSummary = {
    serializedName: "VirtualMachineScaleSetVMExtensionsSummary",
    type: {
        name: "Composite",
        className: "VirtualMachineScaleSetVMExtensionsSummary",
        modelProperties: {
            name: {
                readOnly: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            statusesSummary: {
                readOnly: true,
                serializedName: "statusesSummary",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "VirtualMachineStatusCodeCount"
                        }
                    }
                }
            }
        }
    }
};
exports.VirtualMachineScaleSetInstanceView = {
    serializedName: "VirtualMachineScaleSetInstanceView",
    type: {
        name: "Composite",
        className: "VirtualMachineScaleSetInstanceView",
        modelProperties: {
            virtualMachine: {
                readOnly: true,
                serializedName: "virtualMachine",
                type: {
                    name: "Composite",
                    className: "VirtualMachineScaleSetInstanceViewStatusesSummary"
                }
            },
            extensions: {
                readOnly: true,
                serializedName: "extensions",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "VirtualMachineScaleSetVMExtensionsSummary"
                        }
                    }
                }
            },
            statuses: {
                serializedName: "statuses",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "InstanceViewStatus"
                        }
                    }
                }
            }
        }
    }
};
exports.VirtualMachineScaleSetSkuCapacity = {
    serializedName: "VirtualMachineScaleSetSkuCapacity",
    type: {
        name: "Composite",
        className: "VirtualMachineScaleSetSkuCapacity",
        modelProperties: {
            minimum: {
                readOnly: true,
                serializedName: "minimum",
                type: {
                    name: "Number"
                }
            },
            maximum: {
                readOnly: true,
                serializedName: "maximum",
                type: {
                    name: "Number"
                }
            },
            defaultCapacity: {
                readOnly: true,
                serializedName: "defaultCapacity",
                type: {
                    name: "Number"
                }
            },
            scaleType: {
                readOnly: true,
                serializedName: "scaleType",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Automatic",
                        "None"
                    ]
                }
            }
        }
    }
};
exports.VirtualMachineScaleSetSku = {
    serializedName: "VirtualMachineScaleSetSku",
    type: {
        name: "Composite",
        className: "VirtualMachineScaleSetSku",
        modelProperties: {
            resourceType: {
                readOnly: true,
                serializedName: "resourceType",
                type: {
                    name: "String"
                }
            },
            sku: {
                readOnly: true,
                serializedName: "sku",
                type: {
                    name: "Composite",
                    className: "Sku"
                }
            },
            capacity: {
                readOnly: true,
                serializedName: "capacity",
                type: {
                    name: "Composite",
                    className: "VirtualMachineScaleSetSkuCapacity"
                }
            }
        }
    }
};
exports.ApiErrorBase = {
    serializedName: "ApiErrorBase",
    type: {
        name: "Composite",
        className: "ApiErrorBase",
        modelProperties: {
            code: {
                serializedName: "code",
                type: {
                    name: "String"
                }
            },
            target: {
                serializedName: "target",
                type: {
                    name: "String"
                }
            },
            message: {
                serializedName: "message",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.InnerError = {
    serializedName: "InnerError",
    type: {
        name: "Composite",
        className: "InnerError",
        modelProperties: {
            exceptiontype: {
                serializedName: "exceptiontype",
                type: {
                    name: "String"
                }
            },
            errordetail: {
                serializedName: "errordetail",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.ApiError = {
    serializedName: "ApiError",
    type: {
        name: "Composite",
        className: "ApiError",
        modelProperties: {
            details: {
                serializedName: "details",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ApiErrorBase"
                        }
                    }
                }
            },
            innererror: {
                serializedName: "innererror",
                type: {
                    name: "Composite",
                    className: "InnerError"
                }
            },
            code: {
                serializedName: "code",
                type: {
                    name: "String"
                }
            },
            target: {
                serializedName: "target",
                type: {
                    name: "String"
                }
            },
            message: {
                serializedName: "message",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.RollbackStatusInfo = {
    serializedName: "RollbackStatusInfo",
    type: {
        name: "Composite",
        className: "RollbackStatusInfo",
        modelProperties: {
            successfullyRolledbackInstanceCount: {
                readOnly: true,
                serializedName: "successfullyRolledbackInstanceCount",
                type: {
                    name: "Number"
                }
            },
            failedRolledbackInstanceCount: {
                readOnly: true,
                serializedName: "failedRolledbackInstanceCount",
                type: {
                    name: "Number"
                }
            },
            rollbackError: {
                readOnly: true,
                serializedName: "rollbackError",
                type: {
                    name: "Composite",
                    className: "ApiError"
                }
            }
        }
    }
};
exports.UpgradeOperationHistoryStatus = {
    serializedName: "UpgradeOperationHistoryStatus",
    type: {
        name: "Composite",
        className: "UpgradeOperationHistoryStatus",
        modelProperties: {
            code: {
                readOnly: true,
                serializedName: "code",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "RollingForward",
                        "Cancelled",
                        "Completed",
                        "Faulted"
                    ]
                }
            },
            startTime: {
                readOnly: true,
                serializedName: "startTime",
                type: {
                    name: "DateTime"
                }
            },
            endTime: {
                readOnly: true,
                serializedName: "endTime",
                type: {
                    name: "DateTime"
                }
            }
        }
    }
};
exports.RollingUpgradeProgressInfo = {
    serializedName: "RollingUpgradeProgressInfo",
    type: {
        name: "Composite",
        className: "RollingUpgradeProgressInfo",
        modelProperties: {
            successfulInstanceCount: {
                readOnly: true,
                serializedName: "successfulInstanceCount",
                type: {
                    name: "Number"
                }
            },
            failedInstanceCount: {
                readOnly: true,
                serializedName: "failedInstanceCount",
                type: {
                    name: "Number"
                }
            },
            inProgressInstanceCount: {
                readOnly: true,
                serializedName: "inProgressInstanceCount",
                type: {
                    name: "Number"
                }
            },
            pendingInstanceCount: {
                readOnly: true,
                serializedName: "pendingInstanceCount",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
exports.UpgradeOperationHistoricalStatusInfoProperties = {
    serializedName: "UpgradeOperationHistoricalStatusInfoProperties",
    type: {
        name: "Composite",
        className: "UpgradeOperationHistoricalStatusInfoProperties",
        modelProperties: {
            runningStatus: {
                readOnly: true,
                serializedName: "runningStatus",
                type: {
                    name: "Composite",
                    className: "UpgradeOperationHistoryStatus"
                }
            },
            progress: {
                readOnly: true,
                serializedName: "progress",
                type: {
                    name: "Composite",
                    className: "RollingUpgradeProgressInfo"
                }
            },
            error: {
                readOnly: true,
                serializedName: "error",
                type: {
                    name: "Composite",
                    className: "ApiError"
                }
            },
            startedBy: {
                readOnly: true,
                serializedName: "startedBy",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Unknown",
                        "User",
                        "Platform"
                    ]
                }
            },
            targetImageReference: {
                readOnly: true,
                serializedName: "targetImageReference",
                type: {
                    name: "Composite",
                    className: "ImageReference"
                }
            },
            rollbackInfo: {
                readOnly: true,
                serializedName: "rollbackInfo",
                type: {
                    name: "Composite",
                    className: "RollbackStatusInfo"
                }
            }
        }
    }
};
exports.UpgradeOperationHistoricalStatusInfo = {
    serializedName: "UpgradeOperationHistoricalStatusInfo",
    type: {
        name: "Composite",
        className: "UpgradeOperationHistoricalStatusInfo",
        modelProperties: {
            properties: {
                readOnly: true,
                serializedName: "properties",
                type: {
                    name: "Composite",
                    className: "UpgradeOperationHistoricalStatusInfoProperties"
                }
            },
            type: {
                readOnly: true,
                serializedName: "type",
                type: {
                    name: "String"
                }
            },
            location: {
                readOnly: true,
                serializedName: "location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.VirtualMachineHealthStatus = {
    serializedName: "VirtualMachineHealthStatus",
    type: {
        name: "Composite",
        className: "VirtualMachineHealthStatus",
        modelProperties: {
            status: {
                readOnly: true,
                serializedName: "status",
                type: {
                    name: "Composite",
                    className: "InstanceViewStatus"
                }
            }
        }
    }
};
exports.VirtualMachineScaleSetVMInstanceView = {
    serializedName: "VirtualMachineScaleSetVMInstanceView",
    type: {
        name: "Composite",
        className: "VirtualMachineScaleSetVMInstanceView",
        modelProperties: {
            platformUpdateDomain: {
                serializedName: "platformUpdateDomain",
                type: {
                    name: "Number"
                }
            },
            platformFaultDomain: {
                serializedName: "platformFaultDomain",
                type: {
                    name: "Number"
                }
            },
            rdpThumbPrint: {
                serializedName: "rdpThumbPrint",
                type: {
                    name: "String"
                }
            },
            vmAgent: {
                serializedName: "vmAgent",
                type: {
                    name: "Composite",
                    className: "VirtualMachineAgentInstanceView"
                }
            },
            maintenanceRedeployStatus: {
                serializedName: "maintenanceRedeployStatus",
                type: {
                    name: "Composite",
                    className: "MaintenanceRedeployStatus"
                }
            },
            disks: {
                serializedName: "disks",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DiskInstanceView"
                        }
                    }
                }
            },
            extensions: {
                serializedName: "extensions",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "VirtualMachineExtensionInstanceView"
                        }
                    }
                }
            },
            vmHealth: {
                readOnly: true,
                serializedName: "vmHealth",
                type: {
                    name: "Composite",
                    className: "VirtualMachineHealthStatus"
                }
            },
            bootDiagnostics: {
                serializedName: "bootDiagnostics",
                type: {
                    name: "Composite",
                    className: "BootDiagnosticsInstanceView"
                }
            },
            statuses: {
                serializedName: "statuses",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "InstanceViewStatus"
                        }
                    }
                }
            },
            placementGroupId: {
                serializedName: "placementGroupId",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.VirtualMachineScaleSetVM = {
    serializedName: "VirtualMachineScaleSetVM",
    type: {
        name: "Composite",
        className: "VirtualMachineScaleSetVM",
        modelProperties: Object.assign({}, exports.Resource.type.modelProperties, { instanceId: {
                readOnly: true,
                serializedName: "instanceId",
                type: {
                    name: "String"
                }
            }, sku: {
                readOnly: true,
                serializedName: "sku",
                type: {
                    name: "Composite",
                    className: "Sku"
                }
            }, latestModelApplied: {
                readOnly: true,
                serializedName: "properties.latestModelApplied",
                type: {
                    name: "Boolean"
                }
            }, vmId: {
                readOnly: true,
                serializedName: "properties.vmId",
                type: {
                    name: "String"
                }
            }, instanceView: {
                readOnly: true,
                serializedName: "properties.instanceView",
                type: {
                    name: "Composite",
                    className: "VirtualMachineScaleSetVMInstanceView"
                }
            }, hardwareProfile: {
                serializedName: "properties.hardwareProfile",
                type: {
                    name: "Composite",
                    className: "HardwareProfile"
                }
            }, storageProfile: {
                serializedName: "properties.storageProfile",
                type: {
                    name: "Composite",
                    className: "StorageProfile"
                }
            }, additionalCapabilities: {
                serializedName: "properties.additionalCapabilities",
                type: {
                    name: "Composite",
                    className: "AdditionalCapabilities"
                }
            }, osProfile: {
                serializedName: "properties.osProfile",
                type: {
                    name: "Composite",
                    className: "OSProfile"
                }
            }, networkProfile: {
                serializedName: "properties.networkProfile",
                type: {
                    name: "Composite",
                    className: "NetworkProfile"
                }
            }, diagnosticsProfile: {
                serializedName: "properties.diagnosticsProfile",
                type: {
                    name: "Composite",
                    className: "DiagnosticsProfile"
                }
            }, availabilitySet: {
                serializedName: "properties.availabilitySet",
                type: {
                    name: "Composite",
                    className: "SubResource"
                }
            }, provisioningState: {
                readOnly: true,
                serializedName: "properties.provisioningState",
                type: {
                    name: "String"
                }
            }, licenseType: {
                serializedName: "properties.licenseType",
                type: {
                    name: "String"
                }
            }, plan: {
                serializedName: "plan",
                type: {
                    name: "Composite",
                    className: "Plan"
                }
            }, resources: {
                readOnly: true,
                serializedName: "resources",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "VirtualMachineExtension"
                        }
                    }
                }
            }, zones: {
                readOnly: true,
                serializedName: "zones",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            } })
    }
};
exports.RollingUpgradeRunningStatus = {
    serializedName: "RollingUpgradeRunningStatus",
    type: {
        name: "Composite",
        className: "RollingUpgradeRunningStatus",
        modelProperties: {
            code: {
                readOnly: true,
                serializedName: "code",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "RollingForward",
                        "Cancelled",
                        "Completed",
                        "Faulted"
                    ]
                }
            },
            startTime: {
                readOnly: true,
                serializedName: "startTime",
                type: {
                    name: "DateTime"
                }
            },
            lastAction: {
                readOnly: true,
                serializedName: "lastAction",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Start",
                        "Cancel"
                    ]
                }
            },
            lastActionTime: {
                readOnly: true,
                serializedName: "lastActionTime",
                type: {
                    name: "DateTime"
                }
            }
        }
    }
};
exports.RollingUpgradeStatusInfo = {
    serializedName: "RollingUpgradeStatusInfo",
    type: {
        name: "Composite",
        className: "RollingUpgradeStatusInfo",
        modelProperties: Object.assign({}, exports.Resource.type.modelProperties, { policy: {
                readOnly: true,
                serializedName: "properties.policy",
                type: {
                    name: "Composite",
                    className: "RollingUpgradePolicy"
                }
            }, runningStatus: {
                readOnly: true,
                serializedName: "properties.runningStatus",
                type: {
                    name: "Composite",
                    className: "RollingUpgradeRunningStatus"
                }
            }, progress: {
                readOnly: true,
                serializedName: "properties.progress",
                type: {
                    name: "Composite",
                    className: "RollingUpgradeProgressInfo"
                }
            }, error: {
                readOnly: true,
                serializedName: "properties.error",
                type: {
                    name: "Composite",
                    className: "ApiError"
                }
            } })
    }
};
exports.RecoveryWalkResponse = {
    serializedName: "RecoveryWalkResponse",
    type: {
        name: "Composite",
        className: "RecoveryWalkResponse",
        modelProperties: {
            walkPerformed: {
                readOnly: true,
                serializedName: "walkPerformed",
                type: {
                    name: "Boolean"
                }
            },
            nextPlatformUpdateDomain: {
                readOnly: true,
                serializedName: "nextPlatformUpdateDomain",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
exports.LogAnalyticsInputBase = {
    serializedName: "LogAnalyticsInputBase",
    type: {
        name: "Composite",
        className: "LogAnalyticsInputBase",
        modelProperties: {
            blobContainerSasUri: {
                required: true,
                serializedName: "blobContainerSasUri",
                type: {
                    name: "String"
                }
            },
            fromTime: {
                required: true,
                serializedName: "fromTime",
                type: {
                    name: "DateTime"
                }
            },
            toTime: {
                required: true,
                serializedName: "toTime",
                type: {
                    name: "DateTime"
                }
            },
            groupByThrottlePolicy: {
                serializedName: "groupByThrottlePolicy",
                type: {
                    name: "Boolean"
                }
            },
            groupByOperationName: {
                serializedName: "groupByOperationName",
                type: {
                    name: "Boolean"
                }
            },
            groupByResourceName: {
                serializedName: "groupByResourceName",
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
exports.RequestRateByIntervalInput = {
    serializedName: "RequestRateByIntervalInput",
    type: {
        name: "Composite",
        className: "RequestRateByIntervalInput",
        modelProperties: Object.assign({}, exports.LogAnalyticsInputBase.type.modelProperties, { intervalLength: {
                required: true,
                serializedName: "intervalLength",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "ThreeMins",
                        "FiveMins",
                        "ThirtyMins",
                        "SixtyMins"
                    ]
                }
            } })
    }
};
exports.ThrottledRequestsInput = {
    serializedName: "ThrottledRequestsInput",
    type: {
        name: "Composite",
        className: "ThrottledRequestsInput",
        modelProperties: Object.assign({}, exports.LogAnalyticsInputBase.type.modelProperties)
    }
};
exports.LogAnalyticsOutput = {
    serializedName: "LogAnalyticsOutput",
    type: {
        name: "Composite",
        className: "LogAnalyticsOutput",
        modelProperties: {
            output: {
                readOnly: true,
                serializedName: "output",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.LogAnalyticsOperationResult = {
    serializedName: "LogAnalyticsOperationResult",
    type: {
        name: "Composite",
        className: "LogAnalyticsOperationResult",
        modelProperties: {
            properties: {
                readOnly: true,
                serializedName: "properties",
                type: {
                    name: "Composite",
                    className: "LogAnalyticsOutput"
                }
            }
        }
    }
};
exports.RunCommandInputParameter = {
    serializedName: "RunCommandInputParameter",
    type: {
        name: "Composite",
        className: "RunCommandInputParameter",
        modelProperties: {
            name: {
                required: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            value: {
                required: true,
                serializedName: "value",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.RunCommandInput = {
    serializedName: "RunCommandInput",
    type: {
        name: "Composite",
        className: "RunCommandInput",
        modelProperties: {
            commandId: {
                required: true,
                serializedName: "commandId",
                type: {
                    name: "String"
                }
            },
            script: {
                serializedName: "script",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            parameters: {
                serializedName: "parameters",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "RunCommandInputParameter"
                        }
                    }
                }
            }
        }
    }
};
exports.RunCommandParameterDefinition = {
    serializedName: "RunCommandParameterDefinition",
    type: {
        name: "Composite",
        className: "RunCommandParameterDefinition",
        modelProperties: {
            name: {
                required: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            type: {
                required: true,
                serializedName: "type",
                type: {
                    name: "String"
                }
            },
            defaultValue: {
                serializedName: "defaultValue",
                type: {
                    name: "String"
                }
            },
            required: {
                serializedName: "required",
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
exports.RunCommandDocumentBase = {
    serializedName: "RunCommandDocumentBase",
    type: {
        name: "Composite",
        className: "RunCommandDocumentBase",
        modelProperties: {
            schema: {
                required: true,
                serializedName: "$schema",
                type: {
                    name: "String"
                }
            },
            id: {
                required: true,
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            osType: {
                required: true,
                serializedName: "osType",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Windows",
                        "Linux"
                    ]
                }
            },
            label: {
                required: true,
                serializedName: "label",
                type: {
                    name: "String"
                }
            },
            description: {
                required: true,
                serializedName: "description",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.RunCommandDocument = {
    serializedName: "RunCommandDocument",
    type: {
        name: "Composite",
        className: "RunCommandDocument",
        modelProperties: Object.assign({}, exports.RunCommandDocumentBase.type.modelProperties, { script: {
                required: true,
                serializedName: "script",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, parameters: {
                serializedName: "parameters",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "RunCommandParameterDefinition"
                        }
                    }
                }
            } })
    }
};
exports.RunCommandResult = {
    serializedName: "RunCommandResult",
    type: {
        name: "Composite",
        className: "RunCommandResult",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "InstanceViewStatus"
                        }
                    }
                }
            }
        }
    }
};
exports.ResourceSkuCapacity = {
    serializedName: "ResourceSkuCapacity",
    type: {
        name: "Composite",
        className: "ResourceSkuCapacity",
        modelProperties: {
            minimum: {
                readOnly: true,
                serializedName: "minimum",
                type: {
                    name: "Number"
                }
            },
            maximum: {
                readOnly: true,
                serializedName: "maximum",
                type: {
                    name: "Number"
                }
            },
            default: {
                readOnly: true,
                serializedName: "default",
                type: {
                    name: "Number"
                }
            },
            scaleType: {
                readOnly: true,
                serializedName: "scaleType",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Automatic",
                        "Manual",
                        "None"
                    ]
                }
            }
        }
    }
};
exports.ResourceSkuCosts = {
    serializedName: "ResourceSkuCosts",
    type: {
        name: "Composite",
        className: "ResourceSkuCosts",
        modelProperties: {
            meterID: {
                readOnly: true,
                serializedName: "meterID",
                type: {
                    name: "String"
                }
            },
            quantity: {
                readOnly: true,
                serializedName: "quantity",
                type: {
                    name: "Number"
                }
            },
            extendedUnit: {
                readOnly: true,
                serializedName: "extendedUnit",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.ResourceSkuCapabilities = {
    serializedName: "ResourceSkuCapabilities",
    type: {
        name: "Composite",
        className: "ResourceSkuCapabilities",
        modelProperties: {
            name: {
                readOnly: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            value: {
                readOnly: true,
                serializedName: "value",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.ResourceSkuRestrictionInfo = {
    serializedName: "ResourceSkuRestrictionInfo",
    type: {
        name: "Composite",
        className: "ResourceSkuRestrictionInfo",
        modelProperties: {
            locations: {
                readOnly: true,
                serializedName: "locations",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            zones: {
                readOnly: true,
                serializedName: "zones",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
exports.ResourceSkuRestrictions = {
    serializedName: "ResourceSkuRestrictions",
    type: {
        name: "Composite",
        className: "ResourceSkuRestrictions",
        modelProperties: {
            type: {
                readOnly: true,
                serializedName: "type",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Location",
                        "Zone"
                    ]
                }
            },
            values: {
                readOnly: true,
                serializedName: "values",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            restrictionInfo: {
                readOnly: true,
                serializedName: "restrictionInfo",
                type: {
                    name: "Composite",
                    className: "ResourceSkuRestrictionInfo"
                }
            },
            reasonCode: {
                readOnly: true,
                serializedName: "reasonCode",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "QuotaId",
                        "NotAvailableForSubscription"
                    ]
                }
            }
        }
    }
};
exports.ResourceSkuLocationInfo = {
    serializedName: "ResourceSkuLocationInfo",
    type: {
        name: "Composite",
        className: "ResourceSkuLocationInfo",
        modelProperties: {
            location: {
                readOnly: true,
                serializedName: "location",
                type: {
                    name: "String"
                }
            },
            zones: {
                readOnly: true,
                serializedName: "zones",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
exports.ResourceSku = {
    serializedName: "ResourceSku",
    type: {
        name: "Composite",
        className: "ResourceSku",
        modelProperties: {
            resourceType: {
                readOnly: true,
                serializedName: "resourceType",
                type: {
                    name: "String"
                }
            },
            name: {
                readOnly: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            tier: {
                readOnly: true,
                serializedName: "tier",
                type: {
                    name: "String"
                }
            },
            size: {
                readOnly: true,
                serializedName: "size",
                type: {
                    name: "String"
                }
            },
            family: {
                readOnly: true,
                serializedName: "family",
                type: {
                    name: "String"
                }
            },
            kind: {
                readOnly: true,
                serializedName: "kind",
                type: {
                    name: "String"
                }
            },
            capacity: {
                readOnly: true,
                serializedName: "capacity",
                type: {
                    name: "Composite",
                    className: "ResourceSkuCapacity"
                }
            },
            locations: {
                readOnly: true,
                serializedName: "locations",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            locationInfo: {
                readOnly: true,
                serializedName: "locationInfo",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ResourceSkuLocationInfo"
                        }
                    }
                }
            },
            apiVersions: {
                readOnly: true,
                serializedName: "apiVersions",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            costs: {
                readOnly: true,
                serializedName: "costs",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ResourceSkuCosts"
                        }
                    }
                }
            },
            capabilities: {
                readOnly: true,
                serializedName: "capabilities",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ResourceSkuCapabilities"
                        }
                    }
                }
            },
            restrictions: {
                readOnly: true,
                serializedName: "restrictions",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ResourceSkuRestrictions"
                        }
                    }
                }
            }
        }
    }
};
exports.DiskSku = {
    serializedName: "DiskSku",
    type: {
        name: "Composite",
        className: "DiskSku",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            tier: {
                readOnly: true,
                serializedName: "tier",
                defaultValue: 'Standard',
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.ImageDiskReference = {
    serializedName: "ImageDiskReference",
    type: {
        name: "Composite",
        className: "ImageDiskReference",
        modelProperties: {
            id: {
                required: true,
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            lun: {
                serializedName: "lun",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
exports.CreationData = {
    serializedName: "CreationData",
    type: {
        name: "Composite",
        className: "CreationData",
        modelProperties: {
            createOption: {
                required: true,
                serializedName: "createOption",
                type: {
                    name: "String"
                }
            },
            storageAccountId: {
                serializedName: "storageAccountId",
                type: {
                    name: "String"
                }
            },
            imageReference: {
                serializedName: "imageReference",
                type: {
                    name: "Composite",
                    className: "ImageDiskReference"
                }
            },
            sourceUri: {
                serializedName: "sourceUri",
                type: {
                    name: "String"
                }
            },
            sourceResourceId: {
                serializedName: "sourceResourceId",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.SourceVault = {
    serializedName: "SourceVault",
    type: {
        name: "Composite",
        className: "SourceVault",
        modelProperties: {
            id: {
                serializedName: "id",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.KeyVaultAndSecretReference = {
    serializedName: "KeyVaultAndSecretReference",
    type: {
        name: "Composite",
        className: "KeyVaultAndSecretReference",
        modelProperties: {
            sourceVault: {
                required: true,
                serializedName: "sourceVault",
                type: {
                    name: "Composite",
                    className: "SourceVault"
                }
            },
            secretUrl: {
                required: true,
                serializedName: "secretUrl",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.KeyVaultAndKeyReference = {
    serializedName: "KeyVaultAndKeyReference",
    type: {
        name: "Composite",
        className: "KeyVaultAndKeyReference",
        modelProperties: {
            sourceVault: {
                required: true,
                serializedName: "sourceVault",
                type: {
                    name: "Composite",
                    className: "SourceVault"
                }
            },
            keyUrl: {
                required: true,
                serializedName: "keyUrl",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.EncryptionSettings = {
    serializedName: "EncryptionSettings",
    type: {
        name: "Composite",
        className: "EncryptionSettings",
        modelProperties: {
            enabled: {
                serializedName: "enabled",
                type: {
                    name: "Boolean"
                }
            },
            diskEncryptionKey: {
                serializedName: "diskEncryptionKey",
                type: {
                    name: "Composite",
                    className: "KeyVaultAndSecretReference"
                }
            },
            keyEncryptionKey: {
                serializedName: "keyEncryptionKey",
                type: {
                    name: "Composite",
                    className: "KeyVaultAndKeyReference"
                }
            }
        }
    }
};
exports.Disk = {
    serializedName: "Disk",
    type: {
        name: "Composite",
        className: "Disk",
        modelProperties: Object.assign({}, exports.Resource.type.modelProperties, { managedBy: {
                readOnly: true,
                serializedName: "managedBy",
                type: {
                    name: "String"
                }
            }, sku: {
                serializedName: "sku",
                type: {
                    name: "Composite",
                    className: "DiskSku"
                }
            }, zones: {
                serializedName: "zones",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, timeCreated: {
                readOnly: true,
                serializedName: "properties.timeCreated",
                type: {
                    name: "DateTime"
                }
            }, osType: {
                serializedName: "properties.osType",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Windows",
                        "Linux"
                    ]
                }
            }, creationData: {
                required: true,
                serializedName: "properties.creationData",
                type: {
                    name: "Composite",
                    className: "CreationData"
                }
            }, diskSizeGB: {
                serializedName: "properties.diskSizeGB",
                type: {
                    name: "Number"
                }
            }, encryptionSettings: {
                serializedName: "properties.encryptionSettings",
                type: {
                    name: "Composite",
                    className: "EncryptionSettings"
                }
            }, provisioningState: {
                readOnly: true,
                serializedName: "properties.provisioningState",
                type: {
                    name: "String"
                }
            }, diskIOPSReadWrite: {
                serializedName: "properties.diskIOPSReadWrite",
                type: {
                    name: "Number"
                }
            }, diskMBpsReadWrite: {
                serializedName: "properties.diskMBpsReadWrite",
                type: {
                    name: "Number"
                }
            } })
    }
};
exports.DiskUpdate = {
    serializedName: "DiskUpdate",
    type: {
        name: "Composite",
        className: "DiskUpdate",
        modelProperties: {
            osType: {
                serializedName: "properties.osType",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Windows",
                        "Linux"
                    ]
                }
            },
            diskSizeGB: {
                serializedName: "properties.diskSizeGB",
                type: {
                    name: "Number"
                }
            },
            encryptionSettings: {
                serializedName: "properties.encryptionSettings",
                type: {
                    name: "Composite",
                    className: "EncryptionSettings"
                }
            },
            diskIOPSReadWrite: {
                serializedName: "properties.diskIOPSReadWrite",
                type: {
                    name: "Number"
                }
            },
            diskMBpsReadWrite: {
                serializedName: "properties.diskMBpsReadWrite",
                type: {
                    name: "Number"
                }
            },
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            sku: {
                serializedName: "sku",
                type: {
                    name: "Composite",
                    className: "DiskSku"
                }
            }
        }
    }
};
exports.SnapshotSku = {
    serializedName: "SnapshotSku",
    type: {
        name: "Composite",
        className: "SnapshotSku",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            tier: {
                readOnly: true,
                serializedName: "tier",
                defaultValue: 'Standard',
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.GrantAccessData = {
    serializedName: "GrantAccessData",
    type: {
        name: "Composite",
        className: "GrantAccessData",
        modelProperties: {
            access: {
                required: true,
                serializedName: "access",
                type: {
                    name: "String"
                }
            },
            durationInSeconds: {
                required: true,
                serializedName: "durationInSeconds",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
exports.AccessUri = {
    serializedName: "AccessUri",
    type: {
        name: "Composite",
        className: "AccessUri",
        modelProperties: {
            accessSAS: {
                readOnly: true,
                serializedName: "accessSAS",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.Snapshot = {
    serializedName: "Snapshot",
    type: {
        name: "Composite",
        className: "Snapshot",
        modelProperties: Object.assign({}, exports.Resource.type.modelProperties, { managedBy: {
                readOnly: true,
                serializedName: "managedBy",
                type: {
                    name: "String"
                }
            }, sku: {
                serializedName: "sku",
                type: {
                    name: "Composite",
                    className: "SnapshotSku"
                }
            }, timeCreated: {
                readOnly: true,
                serializedName: "properties.timeCreated",
                type: {
                    name: "DateTime"
                }
            }, osType: {
                serializedName: "properties.osType",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Windows",
                        "Linux"
                    ]
                }
            }, creationData: {
                required: true,
                serializedName: "properties.creationData",
                type: {
                    name: "Composite",
                    className: "CreationData"
                }
            }, diskSizeGB: {
                serializedName: "properties.diskSizeGB",
                type: {
                    name: "Number"
                }
            }, encryptionSettings: {
                serializedName: "properties.encryptionSettings",
                type: {
                    name: "Composite",
                    className: "EncryptionSettings"
                }
            }, provisioningState: {
                readOnly: true,
                serializedName: "properties.provisioningState",
                type: {
                    name: "String"
                }
            } })
    }
};
exports.SnapshotUpdate = {
    serializedName: "SnapshotUpdate",
    type: {
        name: "Composite",
        className: "SnapshotUpdate",
        modelProperties: {
            osType: {
                serializedName: "properties.osType",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Windows",
                        "Linux"
                    ]
                }
            },
            diskSizeGB: {
                serializedName: "properties.diskSizeGB",
                type: {
                    name: "Number"
                }
            },
            encryptionSettings: {
                serializedName: "properties.encryptionSettings",
                type: {
                    name: "Composite",
                    className: "EncryptionSettings"
                }
            },
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            sku: {
                serializedName: "sku",
                type: {
                    name: "Composite",
                    className: "SnapshotSku"
                }
            }
        }
    }
};
exports.ContainerServiceCustomProfile = {
    serializedName: "ContainerServiceCustomProfile",
    type: {
        name: "Composite",
        className: "ContainerServiceCustomProfile",
        modelProperties: {
            orchestrator: {
                required: true,
                serializedName: "orchestrator",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.ContainerServiceServicePrincipalProfile = {
    serializedName: "ContainerServiceServicePrincipalProfile",
    type: {
        name: "Composite",
        className: "ContainerServiceServicePrincipalProfile",
        modelProperties: {
            clientId: {
                required: true,
                serializedName: "clientId",
                type: {
                    name: "String"
                }
            },
            secret: {
                required: true,
                serializedName: "secret",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.ContainerServiceOrchestratorProfile = {
    serializedName: "ContainerServiceOrchestratorProfile",
    type: {
        name: "Composite",
        className: "ContainerServiceOrchestratorProfile",
        modelProperties: {
            orchestratorType: {
                required: true,
                serializedName: "orchestratorType",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Swarm",
                        "DCOS",
                        "Custom",
                        "Kubernetes"
                    ]
                }
            }
        }
    }
};
exports.ContainerServiceMasterProfile = {
    serializedName: "ContainerServiceMasterProfile",
    type: {
        name: "Composite",
        className: "ContainerServiceMasterProfile",
        modelProperties: {
            count: {
                serializedName: "count",
                defaultValue: 1,
                type: {
                    name: "Number"
                }
            },
            dnsPrefix: {
                required: true,
                serializedName: "dnsPrefix",
                type: {
                    name: "String"
                }
            },
            fqdn: {
                readOnly: true,
                serializedName: "fqdn",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.ContainerServiceAgentPoolProfile = {
    serializedName: "ContainerServiceAgentPoolProfile",
    type: {
        name: "Composite",
        className: "ContainerServiceAgentPoolProfile",
        modelProperties: {
            name: {
                required: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            count: {
                required: true,
                serializedName: "count",
                defaultValue: 1,
                constraints: {
                    InclusiveMaximum: 100,
                    InclusiveMinimum: 1
                },
                type: {
                    name: "Number"
                }
            },
            vmSize: {
                required: true,
                serializedName: "vmSize",
                type: {
                    name: "String"
                }
            },
            dnsPrefix: {
                required: true,
                serializedName: "dnsPrefix",
                type: {
                    name: "String"
                }
            },
            fqdn: {
                readOnly: true,
                serializedName: "fqdn",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.ContainerServiceWindowsProfile = {
    serializedName: "ContainerServiceWindowsProfile",
    type: {
        name: "Composite",
        className: "ContainerServiceWindowsProfile",
        modelProperties: {
            adminUsername: {
                required: true,
                serializedName: "adminUsername",
                constraints: {
                    Pattern: /^[a-zA-Z0-9]+([._]?[a-zA-Z0-9]+)*$/
                },
                type: {
                    name: "String"
                }
            },
            adminPassword: {
                required: true,
                serializedName: "adminPassword",
                constraints: {
                    Pattern: /^(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%\^&\*\(\)])[a-zA-Z\d!@#$%\^&\*\(\)]{12,123}$/
                },
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.ContainerServiceSshPublicKey = {
    serializedName: "ContainerServiceSshPublicKey",
    type: {
        name: "Composite",
        className: "ContainerServiceSshPublicKey",
        modelProperties: {
            keyData: {
                required: true,
                serializedName: "keyData",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.ContainerServiceSshConfiguration = {
    serializedName: "ContainerServiceSshConfiguration",
    type: {
        name: "Composite",
        className: "ContainerServiceSshConfiguration",
        modelProperties: {
            publicKeys: {
                required: true,
                serializedName: "publicKeys",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ContainerServiceSshPublicKey"
                        }
                    }
                }
            }
        }
    }
};
exports.ContainerServiceLinuxProfile = {
    serializedName: "ContainerServiceLinuxProfile",
    type: {
        name: "Composite",
        className: "ContainerServiceLinuxProfile",
        modelProperties: {
            adminUsername: {
                required: true,
                serializedName: "adminUsername",
                constraints: {
                    Pattern: /^[a-z][a-z0-9_-]*$/
                },
                type: {
                    name: "String"
                }
            },
            ssh: {
                required: true,
                serializedName: "ssh",
                type: {
                    name: "Composite",
                    className: "ContainerServiceSshConfiguration"
                }
            }
        }
    }
};
exports.ContainerServiceVMDiagnostics = {
    serializedName: "ContainerServiceVMDiagnostics",
    type: {
        name: "Composite",
        className: "ContainerServiceVMDiagnostics",
        modelProperties: {
            enabled: {
                required: true,
                serializedName: "enabled",
                type: {
                    name: "Boolean"
                }
            },
            storageUri: {
                readOnly: true,
                serializedName: "storageUri",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.ContainerServiceDiagnosticsProfile = {
    serializedName: "ContainerServiceDiagnosticsProfile",
    type: {
        name: "Composite",
        className: "ContainerServiceDiagnosticsProfile",
        modelProperties: {
            vmDiagnostics: {
                required: true,
                serializedName: "vmDiagnostics",
                type: {
                    name: "Composite",
                    className: "ContainerServiceVMDiagnostics"
                }
            }
        }
    }
};
exports.ContainerService = {
    serializedName: "ContainerService",
    type: {
        name: "Composite",
        className: "ContainerService",
        modelProperties: Object.assign({}, exports.Resource.type.modelProperties, { provisioningState: {
                readOnly: true,
                serializedName: "properties.provisioningState",
                type: {
                    name: "String"
                }
            }, orchestratorProfile: {
                serializedName: "properties.orchestratorProfile",
                type: {
                    name: "Composite",
                    className: "ContainerServiceOrchestratorProfile"
                }
            }, customProfile: {
                serializedName: "properties.customProfile",
                type: {
                    name: "Composite",
                    className: "ContainerServiceCustomProfile"
                }
            }, servicePrincipalProfile: {
                serializedName: "properties.servicePrincipalProfile",
                type: {
                    name: "Composite",
                    className: "ContainerServiceServicePrincipalProfile"
                }
            }, masterProfile: {
                required: true,
                serializedName: "properties.masterProfile",
                type: {
                    name: "Composite",
                    className: "ContainerServiceMasterProfile"
                }
            }, agentPoolProfiles: {
                required: true,
                serializedName: "properties.agentPoolProfiles",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ContainerServiceAgentPoolProfile"
                        }
                    }
                }
            }, windowsProfile: {
                serializedName: "properties.windowsProfile",
                type: {
                    name: "Composite",
                    className: "ContainerServiceWindowsProfile"
                }
            }, linuxProfile: {
                required: true,
                serializedName: "properties.linuxProfile",
                type: {
                    name: "Composite",
                    className: "ContainerServiceLinuxProfile"
                }
            }, diagnosticsProfile: {
                serializedName: "properties.diagnosticsProfile",
                type: {
                    name: "Composite",
                    className: "ContainerServiceDiagnosticsProfile"
                }
            } })
    }
};
exports.ComputeOperationListResult = {
    serializedName: "ComputeOperationListResult",
    type: {
        name: "Composite",
        className: "ComputeOperationListResult",
        modelProperties: {
            value: {
                readOnly: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ComputeOperationValue"
                        }
                    }
                }
            }
        }
    }
};
exports.AvailabilitySetListResult = {
    serializedName: "AvailabilitySetListResult",
    type: {
        name: "Composite",
        className: "AvailabilitySetListResult",
        modelProperties: {
            value: {
                required: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "AvailabilitySet"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.VirtualMachineSizeListResult = {
    serializedName: "VirtualMachineSizeListResult",
    type: {
        name: "Composite",
        className: "VirtualMachineSizeListResult",
        modelProperties: {
            value: {
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "VirtualMachineSize"
                        }
                    }
                }
            }
        }
    }
};
exports.ListUsagesResult = {
    serializedName: "ListUsagesResult",
    type: {
        name: "Composite",
        className: "ListUsagesResult",
        modelProperties: {
            value: {
                required: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Usage"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.ImageListResult = {
    serializedName: "ImageListResult",
    type: {
        name: "Composite",
        className: "ImageListResult",
        modelProperties: {
            value: {
                required: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Image"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.VirtualMachineListResult = {
    serializedName: "VirtualMachineListResult",
    type: {
        name: "Composite",
        className: "VirtualMachineListResult",
        modelProperties: {
            value: {
                required: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "VirtualMachine"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.VirtualMachineScaleSetListResult = {
    serializedName: "VirtualMachineScaleSetListResult",
    type: {
        name: "Composite",
        className: "VirtualMachineScaleSetListResult",
        modelProperties: {
            value: {
                required: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "VirtualMachineScaleSet"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.VirtualMachineScaleSetListWithLinkResult = {
    serializedName: "VirtualMachineScaleSetListWithLinkResult",
    type: {
        name: "Composite",
        className: "VirtualMachineScaleSetListWithLinkResult",
        modelProperties: {
            value: {
                required: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "VirtualMachineScaleSet"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.VirtualMachineScaleSetListSkusResult = {
    serializedName: "VirtualMachineScaleSetListSkusResult",
    type: {
        name: "Composite",
        className: "VirtualMachineScaleSetListSkusResult",
        modelProperties: {
            value: {
                required: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "VirtualMachineScaleSetSku"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.VirtualMachineScaleSetListOSUpgradeHistory = {
    serializedName: "VirtualMachineScaleSetListOSUpgradeHistory",
    type: {
        name: "Composite",
        className: "VirtualMachineScaleSetListOSUpgradeHistory",
        modelProperties: {
            value: {
                required: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "UpgradeOperationHistoricalStatusInfo"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.VirtualMachineScaleSetExtensionListResult = {
    serializedName: "VirtualMachineScaleSetExtensionListResult",
    type: {
        name: "Composite",
        className: "VirtualMachineScaleSetExtensionListResult",
        modelProperties: {
            value: {
                required: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "VirtualMachineScaleSetExtension"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.VirtualMachineScaleSetVMListResult = {
    serializedName: "VirtualMachineScaleSetVMListResult",
    type: {
        name: "Composite",
        className: "VirtualMachineScaleSetVMListResult",
        modelProperties: {
            value: {
                required: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "VirtualMachineScaleSetVM"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.RunCommandListResult = {
    serializedName: "RunCommandListResult",
    type: {
        name: "Composite",
        className: "RunCommandListResult",
        modelProperties: {
            value: {
                required: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "RunCommandDocumentBase"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.ResourceSkusResult = {
    serializedName: "ResourceSkusResult",
    type: {
        name: "Composite",
        className: "ResourceSkusResult",
        modelProperties: {
            value: {
                required: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ResourceSku"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.DiskList = {
    serializedName: "DiskList",
    type: {
        name: "Composite",
        className: "DiskList",
        modelProperties: {
            value: {
                required: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Disk"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.SnapshotList = {
    serializedName: "SnapshotList",
    type: {
        name: "Composite",
        className: "SnapshotList",
        modelProperties: {
            value: {
                required: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Snapshot"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.ContainerServiceListResult = {
    serializedName: "ContainerServiceListResult",
    type: {
        name: "Composite",
        className: "ContainerServiceListResult",
        modelProperties: {
            value: {
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ContainerService"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
//# sourceMappingURL=mappers.js.map