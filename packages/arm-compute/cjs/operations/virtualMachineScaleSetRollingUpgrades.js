"use strict";
/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const msRest = __importStar(require("ms-rest-js"));
const Mappers = __importStar(require("../models/virtualMachineScaleSetRollingUpgradesMappers"));
const Parameters = __importStar(require("../models/parameters"));
/** Class representing a VirtualMachineScaleSetRollingUpgrades. */
class VirtualMachineScaleSetRollingUpgrades {
    /**
     * Create a VirtualMachineScaleSetRollingUpgrades.
     * @param {ComputeManagementClientContext} client Reference to the service client.
     */
    constructor(client) {
        this.client = client;
    }
    /**
     * Cancels the current virtual machine scale set rolling upgrade.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} vmScaleSetName The name of the VM scale set.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    cancel(resourceGroupName, vmScaleSetName, options) {
        return this.beginCancel(resourceGroupName, vmScaleSetName, options)
            .then(lroPoller => lroPoller.pollUntilFinished());
    }
    /**
     * Starts a rolling upgrade to move all virtual machine scale set instances to the latest available
     * Platform Image OS version. Instances which are already running the latest available OS version
     * are not affected.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} vmScaleSetName The name of the VM scale set.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    startOSUpgrade(resourceGroupName, vmScaleSetName, options) {
        return this.beginStartOSUpgrade(resourceGroupName, vmScaleSetName, options)
            .then(lroPoller => lroPoller.pollUntilFinished());
    }
    /**
     * Starts a rolling upgrade to move all extensions for all virtual machine scale set instances to
     * the latest available extension version. Instances which are already running the latest extension
     * versions are not affected.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} vmScaleSetName The name of the VM scale set.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    startExtensionUpgrade(resourceGroupName, vmScaleSetName, options) {
        return this.beginStartExtensionUpgrade(resourceGroupName, vmScaleSetName, options)
            .then(lroPoller => lroPoller.pollUntilFinished());
    }
    getLatest(resourceGroupName, vmScaleSetName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName,
            vmScaleSetName,
            options
        }, getLatestOperationSpec, callback);
    }
    /**
     * Cancels the current virtual machine scale set rolling upgrade.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} vmScaleSetName The name of the VM scale set.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    beginCancel(resourceGroupName, vmScaleSetName, options) {
        return this.client.sendLRORequest({
            resourceGroupName,
            vmScaleSetName,
            options
        }, beginCancelOperationSpec, options);
    }
    /**
     * Starts a rolling upgrade to move all virtual machine scale set instances to the latest available
     * Platform Image OS version. Instances which are already running the latest available OS version
     * are not affected.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} vmScaleSetName The name of the VM scale set.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    beginStartOSUpgrade(resourceGroupName, vmScaleSetName, options) {
        return this.client.sendLRORequest({
            resourceGroupName,
            vmScaleSetName,
            options
        }, beginStartOSUpgradeOperationSpec, options);
    }
    /**
     * Starts a rolling upgrade to move all extensions for all virtual machine scale set instances to
     * the latest available extension version. Instances which are already running the latest extension
     * versions are not affected.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} vmScaleSetName The name of the VM scale set.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    beginStartExtensionUpgrade(resourceGroupName, vmScaleSetName, options) {
        return this.client.sendLRORequest({
            resourceGroupName,
            vmScaleSetName,
            options
        }, beginStartExtensionUpgradeOperationSpec, options);
    }
}
exports.VirtualMachineScaleSetRollingUpgrades = VirtualMachineScaleSetRollingUpgrades;
// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const getLatestOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/rollingUpgrades/latest",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.vmScaleSetName,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion0
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.RollingUpgradeStatusInfo
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer
};
const beginCancelOperationSpec = {
    httpMethod: "POST",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/rollingUpgrades/cancel",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.vmScaleSetName,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion0
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {},
        202: {},
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer
};
const beginStartOSUpgradeOperationSpec = {
    httpMethod: "POST",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/osRollingUpgrade",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.vmScaleSetName,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion0
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {},
        202: {},
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer
};
const beginStartExtensionUpgradeOperationSpec = {
    httpMethod: "POST",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/extensionRollingUpgrade",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.vmScaleSetName,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion0
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {},
        202: {},
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer
};
//# sourceMappingURL=virtualMachineScaleSetRollingUpgrades.js.map