"use strict";
/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const msRest = __importStar(require("ms-rest-js"));
const Mappers = __importStar(require("../models/virtualMachineImagesMappers"));
const Parameters = __importStar(require("../models/parameters"));
/** Class representing a VirtualMachineImages. */
class VirtualMachineImages {
    /**
     * Create a VirtualMachineImages.
     * @param {ComputeManagementClientContext} client Reference to the service client.
     */
    constructor(client) {
        this.client = client;
    }
    get(location, publisherName, offer, skus, version, options, callback) {
        return this.client.sendOperationRequest({
            location,
            publisherName,
            offer,
            skus,
            version,
            options
        }, getOperationSpec, callback);
    }
    list(location, publisherName, offer, skus, options, callback) {
        return this.client.sendOperationRequest({
            location,
            publisherName,
            offer,
            skus,
            options
        }, listOperationSpec, callback);
    }
    listOffers(location, publisherName, options, callback) {
        return this.client.sendOperationRequest({
            location,
            publisherName,
            options
        }, listOffersOperationSpec, callback);
    }
    listPublishers(location, options, callback) {
        return this.client.sendOperationRequest({
            location,
            options
        }, listPublishersOperationSpec, callback);
    }
    listSkus(location, publisherName, offer, options, callback) {
        return this.client.sendOperationRequest({
            location,
            publisherName,
            offer,
            options
        }, listSkusOperationSpec, callback);
    }
}
exports.VirtualMachineImages = VirtualMachineImages;
// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const getOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/publishers/{publisherName}/artifacttypes/vmimage/offers/{offer}/skus/{skus}/versions/{version}",
    urlParameters: [
        Parameters.location0,
        Parameters.publisherName,
        Parameters.offer,
        Parameters.skus,
        Parameters.version,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion0
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.VirtualMachineImage
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer
};
const listOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/publishers/{publisherName}/artifacttypes/vmimage/offers/{offer}/skus/{skus}/versions",
    urlParameters: [
        Parameters.location0,
        Parameters.publisherName,
        Parameters.offer,
        Parameters.skus,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.filter,
        Parameters.top,
        Parameters.orderby,
        Parameters.apiVersion0
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "VirtualMachineImageResource"
                        }
                    }
                }
            }
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer
};
const listOffersOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/publishers/{publisherName}/artifacttypes/vmimage/offers",
    urlParameters: [
        Parameters.location0,
        Parameters.publisherName,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion0
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "VirtualMachineImageResource"
                        }
                    }
                }
            }
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer
};
const listPublishersOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/publishers",
    urlParameters: [
        Parameters.location0,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion0
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "VirtualMachineImageResource"
                        }
                    }
                }
            }
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer
};
const listSkusOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/publishers/{publisherName}/artifacttypes/vmimage/offers/{offer}/skus",
    urlParameters: [
        Parameters.location0,
        Parameters.publisherName,
        Parameters.offer,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion0
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "VirtualMachineImageResource"
                        }
                    }
                }
            }
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer
};
//# sourceMappingURL=virtualMachineImages.js.map