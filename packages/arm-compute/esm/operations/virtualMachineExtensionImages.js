/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
import * as msRest from "ms-rest-js";
import * as Mappers from "../models/virtualMachineExtensionImagesMappers";
import * as Parameters from "../models/parameters";
/** Class representing a VirtualMachineExtensionImages. */
var VirtualMachineExtensionImages = /** @class */ (function () {
    /**
     * Create a VirtualMachineExtensionImages.
     * @param {ComputeManagementClientContext} client Reference to the service client.
     */
    function VirtualMachineExtensionImages(client) {
        this.client = client;
    }
    VirtualMachineExtensionImages.prototype.get = function (location, publisherName, type, version, options, callback) {
        return this.client.sendOperationRequest({
            location: location,
            publisherName: publisherName,
            type: type,
            version: version,
            options: options
        }, getOperationSpec, callback);
    };
    VirtualMachineExtensionImages.prototype.listTypes = function (location, publisherName, options, callback) {
        return this.client.sendOperationRequest({
            location: location,
            publisherName: publisherName,
            options: options
        }, listTypesOperationSpec, callback);
    };
    VirtualMachineExtensionImages.prototype.listVersions = function (location, publisherName, type, options, callback) {
        return this.client.sendOperationRequest({
            location: location,
            publisherName: publisherName,
            type: type,
            options: options
        }, listVersionsOperationSpec, callback);
    };
    return VirtualMachineExtensionImages;
}());
export { VirtualMachineExtensionImages };
// Operation Specifications
var serializer = new msRest.Serializer(Mappers);
var getOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/publishers/{publisherName}/artifacttypes/vmextension/types/{type}/versions/{version}",
    urlParameters: [
        Parameters.location0,
        Parameters.publisherName,
        Parameters.type,
        Parameters.version,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion0
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.VirtualMachineExtensionImage
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var listTypesOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/publishers/{publisherName}/artifacttypes/vmextension/types",
    urlParameters: [
        Parameters.location0,
        Parameters.publisherName,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion0
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "VirtualMachineExtensionImage"
                        }
                    }
                }
            }
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var listVersionsOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/publishers/{publisherName}/artifacttypes/vmextension/types/{type}/versions",
    urlParameters: [
        Parameters.location0,
        Parameters.publisherName,
        Parameters.type,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.filter,
        Parameters.top,
        Parameters.orderby,
        Parameters.apiVersion0
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "VirtualMachineExtensionImage"
                        }
                    }
                }
            }
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
//# sourceMappingURL=virtualMachineExtensionImages.js.map