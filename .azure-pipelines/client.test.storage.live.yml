# External variables:
# Package
#   The package to build and test. Defined in pipeline web ui because multiple pipelines use this YAML with different packages.
#   Example: @azure/storage-blob

variables:
  NodeVersion: '10.x'

jobs:
  - job: 'LiveTest'
    strategy:
      # Live tests currently lack support for running multiple test suites in parallel,
      # since the tests would attempt to use the same resources which causes conflicts.
      maxParallel: 1
      matrix:
        Linux_Node8:
          OSName: 'Linux'
          OSVmImage: 'ubuntu-16.04'
          NodeVersion: '8.x'
          TestTarget: 'node'
        Linux_Node10:
          OSName: 'Linux'
          OSVmImage: 'ubuntu-16.04'
          NodeVersion: '10.x'
          TestTarget: 'node'
        Linux_Node12:
          OSName: 'Linux'
          OSVmImage: 'ubuntu-16.04'
          NodeVersion: '12.x'
          TestTarget: 'node'
        Linux_Browser:
          OSName: 'Linux'
          OSVmImage: 'ubuntu-16.04'
          TestTarget: 'browser'
        Windows_Node8:
          OSName: 'Windows'
          OSVmImage: 'vs2017-win2016'
          NodeVersion: '8.x'
          TestTarget: 'node'
        Windows_Node10:
          OSName: 'Windows'
          OSVmImage: 'vs2017-win2016'
          NodeVersion: '10.x'
          TestTarget: 'node'
        Windows_Node12:
          OSName: 'Windows'
          OSVmImage: 'vs2017-win2016'
          NodeVersion: '12.x'
          TestTarget: 'node'
        Windows_Browser:
          OSName: 'Windows'
          OSVmImage: 'vs2017-win2016'
          TestTarget: 'browser'
        Mac_Node8:
          OSName: 'Mac'
          OSVmImage: 'macOS-10.13'
          NodeVersion: '8.x'
          TestTarget: 'node'
        Mac_Node10:
          OSName: 'Mac'
          OSVmImage: 'macOS-10.13'
          NodeVersion: '10.x'
          TestTarget: 'node'
        Mac_Node12:
          OSName: 'Mac'
          OSVmImage: 'macOS-10.13'
          NodeVersion: '12.x'
          TestTarget: 'node'
        Mac_Browser:
          OSName: 'Mac'
          OSVmImage: 'macOS-10.13'
          TestTarget: 'browser'

    pool:
      vmImage: '$(OSVmImage)'

    timeoutInMinutes: 240

    steps:
      - task: NodeTool@0
        inputs:
          versionSpec: '$(NodeVersion)'
        displayName: 'Install Node.js $(NodeVersion)'

      - script: |
          node common/scripts/install-run-rush.js install
        displayName: 'Install dependencies'

      - script: |
          node common/scripts/install-run-rush.js build -t "$(Package)" --verbose
        displayName: 'rush build -t "$(Package)"'

      - script: |
          node common/scripts/install-run-rush.js build:test -t "$(Package)" --verbose
        displayName: 'rush build:test -t "$(Package)"'

      - script: |
          node common/scripts/install-run-rush.js integration-test:$(TestTarget) -t "$(Package)" --verbose
        displayName: 'rush integration-test:$(TestTarget) -t "$(Package)"'
        env:
          # Storage
          ACCOUNT_NAME: $(js-storage-test-account-name)
          ACCOUNT_KEY: $(js-storage-test-account-key)
          ACCOUNT_SAS: $(js-storage-test-account-sas)

      - task: PublishTestResults@2
        inputs:
          testResultsFiles: '**/test-results.xml'
          testRunTitle: '$(OSName) Live Tests - $(TestTarget) [Node $(NodeVersion)]'
        condition: succeededOrFailed()
        displayName: 'Publish test results'
