# External variables:
# packageSuffix
#   The package suffix for the package to build and test. Defined in pipeline web ui because multiple pipelines use this YAML with different packages.
#   Example: -eventhubs-client
#
trigger:
  - master

variables:
  NodeVersion: '10.x'

jobs:
  - job: 'Build'

    pool:
      vmImage: 'ubuntu-16.04'

    steps:
      - task: NodeTool@0
        inputs:
          versionSpec: '$(NodeVersion)'
        displayName: 'Install Node.js $(NodeVersion)'

      # Rather than running "npm install" in the repo root, reduce build time by only installing the "npm-run-all" package,
      # which is the minimum required to run the composite script commands.
      - task: Npm@1
        inputs:
          command: 'custom'
          customCommand: 'install npm-run-all'
        displayName: 'npm install npm-run-all'

      - task: Npm@1
        inputs:
          command: 'custom'
          customCommand: 'run install-client$(packageSuffix)'
        displayName: 'npm run install-client$(packageSuffix)'

      - task: Npm@1
        inputs:
          command: 'custom'
          customCommand: 'run build-client$(packageSuffix)'
        displayName: 'npm run build-client$(packageSuffix)'

      - task: Npm@1
        inputs:
          command: 'custom'
          customCommand: 'run pack-client$(packageSuffix)'
        displayName: 'npm run pack-client$(packageSuffix)'

      - task: CopyFiles@2
        inputs:
          contents: 'sdk/**/**/*.tgz'
          targetFolder: $(Build.ArtifactStagingDirectory)
          flattenFolders: true
        displayName: 'Copy Packages'

      - task: PublishBuildArtifacts@1
        condition: succeededOrFailed()
        displayName: 'Publish Artifacts'
        inputs:
          artifactName: packages

  - job: 'Analyze'

    pool:
      vmImage: 'ubuntu-16.04'

    steps:
      - task: UsePythonVersion@0
        displayName: 'Use Python 3.6'
        inputs:
          versionSpec: '3.6'

      - task: NodeTool@0
        inputs:
          versionSpec: '$(NodeVersion)'
        displayName: 'Install Node.js $(NodeVersion)'

      - script: |
          pip install setuptools wheel
          pip install doc-warden
          ward scan -d $(Build.SourcesDirectory) -c $(Build.SourcesDirectory)/.docsettings.yml
        displayName: 'Verify Readmes'

      # Rather than running "npm install" in the repo root, reduce build time by only installing the "npm-run-all" package,
      # which is the minimum required to run the composite script commands.
      - task: Npm@1
        inputs:
          command: 'custom'
          customCommand: 'install npm-run-all'
        displayName: 'npm install npm-run-all'

      - task: Npm@1
        condition: and(succeeded(), eq(variables['RunNpmAudit'], 'true'))
        inputs:
          command: 'custom'
          customCommand: 'run audit-client$(packageSuffix)'
        displayName: 'npm run audit-client$(packageSuffix)'

      - task: ms.vss-governance-buildtask.governance-build-task-component-detection.ComponentGovernanceComponentDetection@0
        # ComponentGovernance is currently unable to run on pull requests of public projects. Running on non-PR
        # builds should be sufficient.
        condition: and(succeededOrFailed(), ne(variables['Build.Reason'], 'PullRequest'))
        displayName: 'Component Detection'

  - job: 'Test'

    strategy:
      matrix:
        Linux_Node8:
          OSName: 'Linux'
          OSVmImage: 'ubuntu-16.04'
          NodeVersion: '8.x'
        Linux_Node10:
          OSName: 'Linux'
          OSVmImage: 'ubuntu-16.04'
          NodeVersion: '10.x'
        Linux_Node11:
          OSName: 'Linux'
          OSVmImage: 'ubuntu-16.04'
          NodeVersion: '11.x'
        macOS_Node8:
          OSName: 'macOS'
          OSVmImage: 'macOS-10.13'
          NodeVersion: '8.x'
        macOS_Node10:
          OSName: 'macOS'
          OSVmImage: 'macOS-10.13'
          NodeVersion: '10.x'
        macOS_Node11:
          OSName: 'macOS'
          OSVmImage: 'macOS-10.13'
          NodeVersion: '11.x'
        Windows_Node8:
          OSName: 'Windows'
          OSVmImage: 'vs2017-win2016'
          NodeVersion: '8.x'
        Windows_Node10:
          OSName: 'Windows'
          OSVmImage: 'vs2017-win2016'
          NodeVersion: '10.x'
        Windows_Node11:
          OSName: 'Windows'
          OSVmImage: 'vs2017-win2016'
          NodeVersion: '11.x'

    pool:
      vmImage: '$(OSVmImage)'

    steps:
      - task: NodeTool@0
        inputs:
          versionSpec: '$(NodeVersion)'
        displayName: 'Install Node.js $(NodeVersion)'

      # Rather than running "npm install" in the repo root, reduce build time by only installing the "npm-run-all" package,
      # which is the minimum required to run the composite script commands.
      #
      # Also, "npm install" in the repo root fails when using Node11 on Windows or Linux
      # (https://github.com/Azure/azure-sdk-for-js/issues/845)
      - task: Npm@1
        inputs:
          command: 'custom'
          customCommand: 'install npm-run-all'
        displayName: 'npm install npm-run-all'

      - task: Npm@1
        inputs:
          command: 'custom'
          customCommand: 'run install-client$(packageSuffix)'
        displayName: 'npm run install-client$(packageSuffix)'

      - task: Npm@1
        inputs:
          command: 'custom'
          customCommand: 'run test-client$(packageSuffix) -- -- -- --reporter mocha-junit-reporter'
        displayName: 'npm run test-client$(packageSuffix)'

      - task: PublishTestResults@2
        inputs:
          testResultsFiles: '**/test-results.xml'
          testRunTitle: '$(OSName) Node $(NodeVersion)'
        condition: succeededOrFailed()
        displayName: 'Publish test results'
