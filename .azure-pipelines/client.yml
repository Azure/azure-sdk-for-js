trigger:
  - master

variables:
  node.version: '10.x'

jobs:
  - job: 'Publish'

    pool:
      vmImage: 'ubuntu-16.04'

    steps:
      - task: NodeTool@0
        inputs:
          versionSpec: '$(node.version)'
        displayName: 'Install Node.js $(node.version)'

      - task: Npm@1
        inputs:
          command: 'install'
        displayName: 'npm install'

      - task: Npm@1
        inputs:
          command: 'custom'
          customCommand: 'run install-client'
        displayName: 'npm run install-client'

      - task: Npm@1
        inputs:
          command: 'custom'
          customCommand: 'run build-client'
        displayName: 'npm run build-client'

      - task: Npm@1
        inputs:
          command: 'custom'
          customCommand: 'run pack-client'
        displayName: 'npm run pack-client'

      - task: CopyFiles@2
        inputs:
          contents: 'packages/**/*.tgz'
          targetFolder: $(Build.ArtifactStagingDirectory)
        displayName: 'Copy Packages'

      - task: PublishBuildArtifacts@1
        displayName: 'Publish Package'

  - job: 'Audit'

    pool:
      vmImage: 'ubuntu-16.04'

    steps:
      - task: NodeTool@0
        inputs:
          versionSpec: '$(node.version)'
        displayName: 'Install Node.js $(node.version)'

      - task: Npm@1
        inputs:
          command: 'install'
        displayName: 'npm install'

      - task: Npm@1
        inputs:
          command: 'custom'
          customCommand: 'run audit-client'
        displayName: 'npm run audit-client'

      - task: ms.vss-governance-buildtask.governance-build-task-component-detection.ComponentGovernanceComponentDetection@0
        # ComponentGovernance is currently unable to run on pull requests of public projects. Running on non-PR
        # builds should be sufficient.
        condition: and(succeededOrFailed(), ne(variables['Build.Reason'], 'PullRequest'))
        displayName: 'Component Detection'

  - template: client.test.yml
    parameters:
      name: Linux
      vmImage: 'ubuntu-16.04'

  - template: client.test.yml
    parameters:
      name: macOS
      vmImage: 'macOS-10.13'

  - template: client.test.yml
    parameters:
      name: Windows
      vmImage: 'vs2017-win2016'

