variables:
  OSName: 'Windows'
  OSVmImage: 'vs2017-win2016'
  NodeVersion: '10.x'

jobs:
- job: 'Test'

  pool:
    vmImage: '$(OSVmImage)'

  timeoutInMinutes: 240

  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '$(NodeVersion)'
    displayName: 'Install Node.js $(NodeVersion)'

  # Rather than running "npm install" in the repo root, reduce build time by only installing the "npm-run-all" package,
  # which is the minimum required to run the composite script commands.
  - task: Npm@1
    inputs:
      command: 'custom'
      customCommand: 'install npm-run-all'
    displayName: 'npm install npm-run-all'

  - task: Npm@1
    inputs:
      command: 'custom'
      customCommand: 'run install-client'
    displayName: 'npm run install-client'

  # To get realtime logging of test progress in Azure Pipelines, we need to use "script" instead of "Npm@1",
  # since "Npm@1" currently buffers output (https://github.com/Microsoft/azure-pipelines-tasks/issues/8171).
  - script: npm run live-test-client -- -- -- --reporter mocha-multi --reporter-options spec=-,mocha-junit-reporter=-
    displayName: 'npm run live-test-client'
    env:
      AAD_CLIENT_ID: $(aad-azure-sdk-test-client-id)
      AAD_TENANT_ID: $(aad-azure-sdk-test-tenant-id)
      AAD_CLIENT_SECRET: $(aad-azure-sdk-test-client-secret)
      AZURE_SUBSCRIPTION_ID: $(test-subscription-id)
      CLEAN_NAMESPACE: 'true'
      RESOURCE_GROUP: $(service-bus-test-resource-group)
      SERVICEBUS_CONNECTION_STRING: $(service-bus-test-connection-string)

  - task: PublishTestResults@2
    inputs:
      testResultsFiles: '**/test-results.xml'
      testRunTitle: '$(OSName) Node $(NodeVersion)'
    condition: succeededOrFailed()
    displayName: 'Publish test results'
