{"version":3,"file":"context.js","sourceRoot":"","sources":["../../../src/tokenIssuanceStart/context.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * Container file for all interfaces that pertain to the OnTokenIssuanceStart event API schema version 10-01-2021-preview.\n */\nimport type {\n  ActionableCloudEventResponse,\n  AuthenticationEventAction,\n  AuthenticationEventData,\n  CloudEventRequest,\n} from \"../events.js\";\n\n/**\n * The main request interface, this will relate it's response and payload.\n */\nexport interface TokenIssuanceStartRequest\n  extends CloudEventRequest<TokenIssuanceStartResponse, TokenIssuanceStartData> {\n  /** A dictionary of token claims. */\n  tokenClaims?: Record<string, string>;\n}\n\n/**\n * The main response interface that is related to the request, this extends IActionable as the response\n * contains actions, we only allow actions that inherit the TokenIssuanceStartAction.\n */\nexport type TokenIssuanceStartResponse = ActionableCloudEventResponse<TokenIssuanceStartAction>;\n\n/**\n * The main data interface related to the request.\n */\nexport interface TokenIssuanceStartData extends AuthenticationEventData {\n  /** The main context of the data. */\n  authenticationContext: AuthenticationEventContext;\n}\n\n/**\n * Client interface for data.\n */\nexport interface AuthenticationEventContextClient {\n  /** The Ip Address */\n  ip: string;\n  /** Gets or sets the locale. */\n  locale: string;\n  /** Gets or sets the market. */\n  market: string;\n}\n\n/**\n * ResourceServicePrincipal interface for data.\n */\nexport interface AuthenticationEventContextServicePrincipal {\n  /** The identifier for the service principal. */\n  id: string;\n  /** The application identifier. */\n  appId: string;\n  /** The application display name. */\n  appDisplayName: string;\n  /** The display name. */\n  displayName: string;\n}\n\n/**\n * User interface for data.\n */\nexport interface AuthenticationEventContextUser {\n  /** The user's company name. */\n  companyName: string;\n  /** The user's country. */\n  country: string;\n  /** The user's display name. */\n  displayName: string;\n  /** The user's given name. */\n  givenName: string;\n  /** The user identifier. */\n  id: string;\n  /** The user's email address. */\n  mail: string;\n  /** The user's on premise SAM account name. */\n  onPremisesSamAccountName: string;\n  /** The user's on premise security identifier. */\n  onPremisesSecurityIdentifier: string;\n  /** The user's on premise principal name. */\n  onPremiseUserPrincipalName: string;\n  /** The user's preferred data location */\n  preferredDataLocation: string;\n  /** The user's preferred language. */\n  preferredLanguage: string;\n  /** The user's surname. */\n  surname: string;\n  /** The user's principal name. */\n  userPrincipalName: string;\n  /** The user type. */\n  userType: string;\n}\n\n/**\n * Context interface for data.\n */\nexport interface AuthenticationEventContext {\n  /** Unique identifier for the request. */\n  correlationId: string;\n  /** The client. */\n  client: AuthenticationEventContextClient;\n  /** The authorization protocol. */\n  authenticationProtocol: \"OAUTH2.0\" | \"SAML\" | \"WS-FED\" | \"unknownFutureValue\" | undefined;\n  /** The client service principal. */\n  clientServicePrincipal: AuthenticationEventContextServicePrincipal;\n  /** The resource service principal. */\n  resourceServicePrincipal: AuthenticationEventContextServicePrincipal;\n  /** Data pertaining to the user requesting a token. */\n  user: AuthenticationEventContextUser;\n}\n\n/**\n * All actions for the token issuance start event should extended this interface, as it looks the correct action to the correct event.\n */\nexport interface TokenIssuanceStartAction extends AuthenticationEventAction {\n  /** This will be the 'Name' of the action in the JSON. */\n  actionType: string;\n}\n"]}