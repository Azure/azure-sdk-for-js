/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/sshPublicKeysMappers";
import * as Parameters from "../models/parameters";
import { ComputeManagementClientContext } from "../computeManagementClientContext";

/** Class representing a SshPublicKeys. */
export class SshPublicKeys {
  private readonly client: ComputeManagementClientContext;

  /**
   * Create a SshPublicKeys.
   * @param {ComputeManagementClientContext} client Reference to the service client.
   */
  constructor(client: ComputeManagementClientContext) {
    this.client = client;
  }

  /**
   * Lists all of the SSH public keys in the subscription. Use the nextLink property in the response
   * to get the next page of SSH public keys.
   * @param [options] The optional parameters
   * @returns Promise<Models.SshPublicKeysListBySubscriptionResponse>
   */
  listBySubscription(options?: msRest.RequestOptionsBase): Promise<Models.SshPublicKeysListBySubscriptionResponse>;
  /**
   * @param callback The callback
   */
  listBySubscription(callback: msRest.ServiceCallback<Models.SshPublicKeysGroupListResult>): void;
  /**
   * @param options The optional parameters
   * @param callback The callback
   */
  listBySubscription(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SshPublicKeysGroupListResult>): void;
  listBySubscription(options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.SshPublicKeysGroupListResult>, callback?: msRest.ServiceCallback<Models.SshPublicKeysGroupListResult>): Promise<Models.SshPublicKeysListBySubscriptionResponse> {
    return this.client.sendOperationRequest(
      {
        options
      },
      listBySubscriptionOperationSpec,
      callback) as Promise<Models.SshPublicKeysListBySubscriptionResponse>;
  }

  /**
   * Lists all of the SSH public keys in the specified resource group. Use the nextLink property in
   * the response to get the next page of SSH public keys.
   * @param resourceGroupName The name of the resource group.
   * @param [options] The optional parameters
   * @returns Promise<Models.SshPublicKeysListByResourceGroupResponse>
   */
  listByResourceGroup(resourceGroupName: string, options?: msRest.RequestOptionsBase): Promise<Models.SshPublicKeysListByResourceGroupResponse>;
  /**
   * @param resourceGroupName The name of the resource group.
   * @param callback The callback
   */
  listByResourceGroup(resourceGroupName: string, callback: msRest.ServiceCallback<Models.SshPublicKeysGroupListResult>): void;
  /**
   * @param resourceGroupName The name of the resource group.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByResourceGroup(resourceGroupName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SshPublicKeysGroupListResult>): void;
  listByResourceGroup(resourceGroupName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.SshPublicKeysGroupListResult>, callback?: msRest.ServiceCallback<Models.SshPublicKeysGroupListResult>): Promise<Models.SshPublicKeysListByResourceGroupResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        options
      },
      listByResourceGroupOperationSpec,
      callback) as Promise<Models.SshPublicKeysListByResourceGroupResponse>;
  }

  /**
   * Creates a new SSH public key resource.
   * @param resourceGroupName The name of the resource group.
   * @param sshPublicKeyName The name of the SSH public key.
   * @param parameters Parameters supplied to create the SSH public key.
   * @param [options] The optional parameters
   * @returns Promise<Models.SshPublicKeysCreateResponse>
   */
  create(resourceGroupName: string, sshPublicKeyName: string, parameters: Models.SshPublicKeyResource, options?: msRest.RequestOptionsBase): Promise<Models.SshPublicKeysCreateResponse>;
  /**
   * @param resourceGroupName The name of the resource group.
   * @param sshPublicKeyName The name of the SSH public key.
   * @param parameters Parameters supplied to create the SSH public key.
   * @param callback The callback
   */
  create(resourceGroupName: string, sshPublicKeyName: string, parameters: Models.SshPublicKeyResource, callback: msRest.ServiceCallback<Models.SshPublicKeyResource>): void;
  /**
   * @param resourceGroupName The name of the resource group.
   * @param sshPublicKeyName The name of the SSH public key.
   * @param parameters Parameters supplied to create the SSH public key.
   * @param options The optional parameters
   * @param callback The callback
   */
  create(resourceGroupName: string, sshPublicKeyName: string, parameters: Models.SshPublicKeyResource, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SshPublicKeyResource>): void;
  create(resourceGroupName: string, sshPublicKeyName: string, parameters: Models.SshPublicKeyResource, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.SshPublicKeyResource>, callback?: msRest.ServiceCallback<Models.SshPublicKeyResource>): Promise<Models.SshPublicKeysCreateResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        sshPublicKeyName,
        parameters,
        options
      },
      createOperationSpec,
      callback) as Promise<Models.SshPublicKeysCreateResponse>;
  }

  /**
   * Updates a new SSH public key resource.
   * @param resourceGroupName The name of the resource group.
   * @param sshPublicKeyName The name of the SSH public key.
   * @param parameters Parameters supplied to update the SSH public key.
   * @param [options] The optional parameters
   * @returns Promise<Models.SshPublicKeysUpdateResponse>
   */
  update(resourceGroupName: string, sshPublicKeyName: string, parameters: Models.SshPublicKeyUpdateResource, options?: msRest.RequestOptionsBase): Promise<Models.SshPublicKeysUpdateResponse>;
  /**
   * @param resourceGroupName The name of the resource group.
   * @param sshPublicKeyName The name of the SSH public key.
   * @param parameters Parameters supplied to update the SSH public key.
   * @param callback The callback
   */
  update(resourceGroupName: string, sshPublicKeyName: string, parameters: Models.SshPublicKeyUpdateResource, callback: msRest.ServiceCallback<Models.SshPublicKeyResource>): void;
  /**
   * @param resourceGroupName The name of the resource group.
   * @param sshPublicKeyName The name of the SSH public key.
   * @param parameters Parameters supplied to update the SSH public key.
   * @param options The optional parameters
   * @param callback The callback
   */
  update(resourceGroupName: string, sshPublicKeyName: string, parameters: Models.SshPublicKeyUpdateResource, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SshPublicKeyResource>): void;
  update(resourceGroupName: string, sshPublicKeyName: string, parameters: Models.SshPublicKeyUpdateResource, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.SshPublicKeyResource>, callback?: msRest.ServiceCallback<Models.SshPublicKeyResource>): Promise<Models.SshPublicKeysUpdateResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        sshPublicKeyName,
        parameters,
        options
      },
      updateOperationSpec,
      callback) as Promise<Models.SshPublicKeysUpdateResponse>;
  }

  /**
   * Delete an SSH public key.
   * @param resourceGroupName The name of the resource group.
   * @param sshPublicKeyName The name of the SSH public key.
   * @param [options] The optional parameters
   * @returns Promise<msRest.RestResponse>
   */
  deleteMethod(resourceGroupName: string, sshPublicKeyName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
  /**
   * @param resourceGroupName The name of the resource group.
   * @param sshPublicKeyName The name of the SSH public key.
   * @param callback The callback
   */
  deleteMethod(resourceGroupName: string, sshPublicKeyName: string, callback: msRest.ServiceCallback<void>): void;
  /**
   * @param resourceGroupName The name of the resource group.
   * @param sshPublicKeyName The name of the SSH public key.
   * @param options The optional parameters
   * @param callback The callback
   */
  deleteMethod(resourceGroupName: string, sshPublicKeyName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
  deleteMethod(resourceGroupName: string, sshPublicKeyName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        sshPublicKeyName,
        options
      },
      deleteMethodOperationSpec,
      callback);
  }

  /**
   * Retrieves information about an SSH public key.
   * @param resourceGroupName The name of the resource group.
   * @param sshPublicKeyName The name of the SSH public key.
   * @param [options] The optional parameters
   * @returns Promise<Models.SshPublicKeysGetResponse>
   */
  get(resourceGroupName: string, sshPublicKeyName: string, options?: msRest.RequestOptionsBase): Promise<Models.SshPublicKeysGetResponse>;
  /**
   * @param resourceGroupName The name of the resource group.
   * @param sshPublicKeyName The name of the SSH public key.
   * @param callback The callback
   */
  get(resourceGroupName: string, sshPublicKeyName: string, callback: msRest.ServiceCallback<Models.SshPublicKeyResource>): void;
  /**
   * @param resourceGroupName The name of the resource group.
   * @param sshPublicKeyName The name of the SSH public key.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(resourceGroupName: string, sshPublicKeyName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SshPublicKeyResource>): void;
  get(resourceGroupName: string, sshPublicKeyName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.SshPublicKeyResource>, callback?: msRest.ServiceCallback<Models.SshPublicKeyResource>): Promise<Models.SshPublicKeysGetResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        sshPublicKeyName,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.SshPublicKeysGetResponse>;
  }

  /**
   * Generates and returns a public/private key pair and populates the SSH public key resource with
   * the public key. The length of the key will be 3072 bits. This operation can only be performed
   * once per SSH public key resource.
   * @param resourceGroupName The name of the resource group.
   * @param sshPublicKeyName The name of the SSH public key.
   * @param [options] The optional parameters
   * @returns Promise<Models.SshPublicKeysGenerateKeyPairResponse>
   */
  generateKeyPair(resourceGroupName: string, sshPublicKeyName: string, options?: msRest.RequestOptionsBase): Promise<Models.SshPublicKeysGenerateKeyPairResponse>;
  /**
   * @param resourceGroupName The name of the resource group.
   * @param sshPublicKeyName The name of the SSH public key.
   * @param callback The callback
   */
  generateKeyPair(resourceGroupName: string, sshPublicKeyName: string, callback: msRest.ServiceCallback<Models.SshPublicKeyGenerateKeyPairResult>): void;
  /**
   * @param resourceGroupName The name of the resource group.
   * @param sshPublicKeyName The name of the SSH public key.
   * @param options The optional parameters
   * @param callback The callback
   */
  generateKeyPair(resourceGroupName: string, sshPublicKeyName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SshPublicKeyGenerateKeyPairResult>): void;
  generateKeyPair(resourceGroupName: string, sshPublicKeyName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.SshPublicKeyGenerateKeyPairResult>, callback?: msRest.ServiceCallback<Models.SshPublicKeyGenerateKeyPairResult>): Promise<Models.SshPublicKeysGenerateKeyPairResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        sshPublicKeyName,
        options
      },
      generateKeyPairOperationSpec,
      callback) as Promise<Models.SshPublicKeysGenerateKeyPairResponse>;
  }

  /**
   * Lists all of the SSH public keys in the subscription. Use the nextLink property in the response
   * to get the next page of SSH public keys.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.SshPublicKeysListBySubscriptionNextResponse>
   */
  listBySubscriptionNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.SshPublicKeysListBySubscriptionNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listBySubscriptionNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.SshPublicKeysGroupListResult>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listBySubscriptionNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SshPublicKeysGroupListResult>): void;
  listBySubscriptionNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.SshPublicKeysGroupListResult>, callback?: msRest.ServiceCallback<Models.SshPublicKeysGroupListResult>): Promise<Models.SshPublicKeysListBySubscriptionNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listBySubscriptionNextOperationSpec,
      callback) as Promise<Models.SshPublicKeysListBySubscriptionNextResponse>;
  }

  /**
   * Lists all of the SSH public keys in the specified resource group. Use the nextLink property in
   * the response to get the next page of SSH public keys.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.SshPublicKeysListByResourceGroupNextResponse>
   */
  listByResourceGroupNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.SshPublicKeysListByResourceGroupNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listByResourceGroupNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.SshPublicKeysGroupListResult>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByResourceGroupNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SshPublicKeysGroupListResult>): void;
  listByResourceGroupNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.SshPublicKeysGroupListResult>, callback?: msRest.ServiceCallback<Models.SshPublicKeysGroupListResult>): Promise<Models.SshPublicKeysListByResourceGroupNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listByResourceGroupNextOperationSpec,
      callback) as Promise<Models.SshPublicKeysListByResourceGroupNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listBySubscriptionOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/providers/Microsoft.Compute/sshPublicKeys",
  urlParameters: [
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion0
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.SshPublicKeysGroupListResult
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listByResourceGroupOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/sshPublicKeys",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion0
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.SshPublicKeysGroupListResult
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const createOperationSpec: msRest.OperationSpec = {
  httpMethod: "PUT",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/sshPublicKeys/{sshPublicKeyName}",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.sshPublicKeyName,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion0
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "parameters",
    mapper: {
      ...Mappers.SshPublicKeyResource,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.SshPublicKeyResource
    },
    201: {
      bodyMapper: Mappers.SshPublicKeyResource
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const updateOperationSpec: msRest.OperationSpec = {
  httpMethod: "PATCH",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/sshPublicKeys/{sshPublicKeyName}",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.sshPublicKeyName,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion0
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "parameters",
    mapper: {
      ...Mappers.SshPublicKeyUpdateResource,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.SshPublicKeyResource
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const deleteMethodOperationSpec: msRest.OperationSpec = {
  httpMethod: "DELETE",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/sshPublicKeys/{sshPublicKeyName}",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.sshPublicKeyName,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion0
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {},
    204: {},
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/sshPublicKeys/{sshPublicKeyName}",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.sshPublicKeyName,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion0
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.SshPublicKeyResource
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const generateKeyPairOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/sshPublicKeys/{sshPublicKeyName}/generateKeyPair",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.sshPublicKeyName,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion0
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.SshPublicKeyGenerateKeyPairResult
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listBySubscriptionNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.SshPublicKeysGroupListResult
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listByResourceGroupNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.SshPublicKeysGroupListResult
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};
