/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/sharedGalleriesMappers";
import * as Parameters from "../models/parameters";
import { ComputeManagementClientContext } from "../computeManagementClientContext";

/** Class representing a SharedGalleries. */
export class SharedGalleries {
  private readonly client: ComputeManagementClientContext;

  /**
   * Create a SharedGalleries.
   * @param {ComputeManagementClientContext} client Reference to the service client.
   */
  constructor(client: ComputeManagementClientContext) {
    this.client = client;
  }

  /**
   * List shared galleries by subscription id or tenant id.
   * @param location Resource location.
   * @param [options] The optional parameters
   * @returns Promise<Models.SharedGalleriesListResponse>
   */
  list(location: string, options?: Models.SharedGalleriesListOptionalParams): Promise<Models.SharedGalleriesListResponse>;
  /**
   * @param location Resource location.
   * @param callback The callback
   */
  list(location: string, callback: msRest.ServiceCallback<Models.SharedGalleryList>): void;
  /**
   * @param location Resource location.
   * @param options The optional parameters
   * @param callback The callback
   */
  list(location: string, options: Models.SharedGalleriesListOptionalParams, callback: msRest.ServiceCallback<Models.SharedGalleryList>): void;
  list(location: string, options?: Models.SharedGalleriesListOptionalParams | msRest.ServiceCallback<Models.SharedGalleryList>, callback?: msRest.ServiceCallback<Models.SharedGalleryList>): Promise<Models.SharedGalleriesListResponse> {
    return this.client.sendOperationRequest(
      {
        location,
        options
      },
      listOperationSpec,
      callback) as Promise<Models.SharedGalleriesListResponse>;
  }

  /**
   * Get a shared gallery by subscription id or tenant id.
   * @param location Resource location.
   * @param galleryUniqueName The unique name of the Shared Gallery.
   * @param [options] The optional parameters
   * @returns Promise<Models.SharedGalleriesGetResponse>
   */
  get(location: string, galleryUniqueName: string, options?: msRest.RequestOptionsBase): Promise<Models.SharedGalleriesGetResponse>;
  /**
   * @param location Resource location.
   * @param galleryUniqueName The unique name of the Shared Gallery.
   * @param callback The callback
   */
  get(location: string, galleryUniqueName: string, callback: msRest.ServiceCallback<Models.SharedGallery>): void;
  /**
   * @param location Resource location.
   * @param galleryUniqueName The unique name of the Shared Gallery.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(location: string, galleryUniqueName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SharedGallery>): void;
  get(location: string, galleryUniqueName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.SharedGallery>, callback?: msRest.ServiceCallback<Models.SharedGallery>): Promise<Models.SharedGalleriesGetResponse> {
    return this.client.sendOperationRequest(
      {
        location,
        galleryUniqueName,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.SharedGalleriesGetResponse>;
  }

  /**
   * List shared galleries by subscription id or tenant id.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.SharedGalleriesListNextResponse>
   */
  listNext(nextPageLink: string, options?: Models.SharedGalleriesListNextOptionalParams): Promise<Models.SharedGalleriesListNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.SharedGalleryList>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listNext(nextPageLink: string, options: Models.SharedGalleriesListNextOptionalParams, callback: msRest.ServiceCallback<Models.SharedGalleryList>): void;
  listNext(nextPageLink: string, options?: Models.SharedGalleriesListNextOptionalParams | msRest.ServiceCallback<Models.SharedGalleryList>, callback?: msRest.ServiceCallback<Models.SharedGalleryList>): Promise<Models.SharedGalleriesListNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listNextOperationSpec,
      callback) as Promise<Models.SharedGalleriesListNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/sharedGalleries",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.location0
  ],
  queryParameters: [
    Parameters.apiVersion3,
    Parameters.sharedTo
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.SharedGalleryList
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/sharedGalleries/{galleryUniqueName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.location0,
    Parameters.galleryUniqueName
  ],
  queryParameters: [
    Parameters.apiVersion3
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.SharedGallery
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  queryParameters: [
    Parameters.apiVersion3,
    Parameters.sharedTo
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.SharedGalleryList
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};
