/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as msRestAzure from "@azure/ms-rest-azure-js";
import * as Models from "../models";
import * as Mappers from "../models/virtualMachineScaleSetVMRunCommandsMappers";
import * as Parameters from "../models/parameters";
import { ComputeManagementClientContext } from "../computeManagementClientContext";

/** Class representing a VirtualMachineScaleSetVMRunCommands. */
export class VirtualMachineScaleSetVMRunCommands {
  private readonly client: ComputeManagementClientContext;

  /**
   * Create a VirtualMachineScaleSetVMRunCommands.
   * @param {ComputeManagementClientContext} client Reference to the service client.
   */
  constructor(client: ComputeManagementClientContext) {
    this.client = client;
  }

  /**
   * The operation to create or update the VMSS VM run command.
   * @param resourceGroupName The name of the resource group.
   * @param vmScaleSetName The name of the VM scale set.
   * @param instanceId The instance ID of the virtual machine.
   * @param runCommandName The name of the virtual machine run command.
   * @param runCommand Parameters supplied to the Create Virtual Machine RunCommand operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.VirtualMachineScaleSetVMRunCommandsCreateOrUpdateResponse>
   */
  createOrUpdate(resourceGroupName: string, vmScaleSetName: string, instanceId: string, runCommandName: string, runCommand: Models.VirtualMachineRunCommand, options?: msRest.RequestOptionsBase): Promise<Models.VirtualMachineScaleSetVMRunCommandsCreateOrUpdateResponse> {
    return this.beginCreateOrUpdate(resourceGroupName,vmScaleSetName,instanceId,runCommandName,runCommand,options)
      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.VirtualMachineScaleSetVMRunCommandsCreateOrUpdateResponse>;
  }

  /**
   * The operation to update the VMSS VM run command.
   * @param resourceGroupName The name of the resource group.
   * @param vmScaleSetName The name of the VM scale set.
   * @param instanceId The instance ID of the virtual machine.
   * @param runCommandName The name of the virtual machine run command.
   * @param runCommand Parameters supplied to the Update Virtual Machine RunCommand operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.VirtualMachineScaleSetVMRunCommandsUpdateResponse>
   */
  update(resourceGroupName: string, vmScaleSetName: string, instanceId: string, runCommandName: string, runCommand: Models.VirtualMachineRunCommandUpdate, options?: msRest.RequestOptionsBase): Promise<Models.VirtualMachineScaleSetVMRunCommandsUpdateResponse> {
    return this.beginUpdate(resourceGroupName,vmScaleSetName,instanceId,runCommandName,runCommand,options)
      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.VirtualMachineScaleSetVMRunCommandsUpdateResponse>;
  }

  /**
   * The operation to delete the VMSS VM run command.
   * @param resourceGroupName The name of the resource group.
   * @param vmScaleSetName The name of the VM scale set.
   * @param instanceId The instance ID of the virtual machine.
   * @param runCommandName The name of the virtual machine run command.
   * @param [options] The optional parameters
   * @returns Promise<msRest.RestResponse>
   */
  deleteMethod(resourceGroupName: string, vmScaleSetName: string, instanceId: string, runCommandName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse> {
    return this.beginDeleteMethod(resourceGroupName,vmScaleSetName,instanceId,runCommandName,options)
      .then(lroPoller => lroPoller.pollUntilFinished());
  }

  /**
   * The operation to get the VMSS VM run command.
   * @param resourceGroupName The name of the resource group.
   * @param vmScaleSetName The name of the VM scale set.
   * @param instanceId The instance ID of the virtual machine.
   * @param runCommandName The name of the virtual machine run command.
   * @param [options] The optional parameters
   * @returns Promise<Models.VirtualMachineScaleSetVMRunCommandsGetResponse>
   */
  get(resourceGroupName: string, vmScaleSetName: string, instanceId: string, runCommandName: string, options?: Models.VirtualMachineScaleSetVMRunCommandsGetOptionalParams): Promise<Models.VirtualMachineScaleSetVMRunCommandsGetResponse>;
  /**
   * @param resourceGroupName The name of the resource group.
   * @param vmScaleSetName The name of the VM scale set.
   * @param instanceId The instance ID of the virtual machine.
   * @param runCommandName The name of the virtual machine run command.
   * @param callback The callback
   */
  get(resourceGroupName: string, vmScaleSetName: string, instanceId: string, runCommandName: string, callback: msRest.ServiceCallback<Models.VirtualMachineRunCommand>): void;
  /**
   * @param resourceGroupName The name of the resource group.
   * @param vmScaleSetName The name of the VM scale set.
   * @param instanceId The instance ID of the virtual machine.
   * @param runCommandName The name of the virtual machine run command.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(resourceGroupName: string, vmScaleSetName: string, instanceId: string, runCommandName: string, options: Models.VirtualMachineScaleSetVMRunCommandsGetOptionalParams, callback: msRest.ServiceCallback<Models.VirtualMachineRunCommand>): void;
  get(resourceGroupName: string, vmScaleSetName: string, instanceId: string, runCommandName: string, options?: Models.VirtualMachineScaleSetVMRunCommandsGetOptionalParams | msRest.ServiceCallback<Models.VirtualMachineRunCommand>, callback?: msRest.ServiceCallback<Models.VirtualMachineRunCommand>): Promise<Models.VirtualMachineScaleSetVMRunCommandsGetResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        vmScaleSetName,
        instanceId,
        runCommandName,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.VirtualMachineScaleSetVMRunCommandsGetResponse>;
  }

  /**
   * The operation to get all run commands of an instance in Virtual Machine Scaleset.
   * @param resourceGroupName The name of the resource group.
   * @param vmScaleSetName The name of the VM scale set.
   * @param instanceId The instance ID of the virtual machine.
   * @param [options] The optional parameters
   * @returns Promise<Models.VirtualMachineScaleSetVMRunCommandsListResponse>
   */
  list(resourceGroupName: string, vmScaleSetName: string, instanceId: string, options?: Models.VirtualMachineScaleSetVMRunCommandsListOptionalParams): Promise<Models.VirtualMachineScaleSetVMRunCommandsListResponse>;
  /**
   * @param resourceGroupName The name of the resource group.
   * @param vmScaleSetName The name of the VM scale set.
   * @param instanceId The instance ID of the virtual machine.
   * @param callback The callback
   */
  list(resourceGroupName: string, vmScaleSetName: string, instanceId: string, callback: msRest.ServiceCallback<Models.VirtualMachineRunCommandsListResult>): void;
  /**
   * @param resourceGroupName The name of the resource group.
   * @param vmScaleSetName The name of the VM scale set.
   * @param instanceId The instance ID of the virtual machine.
   * @param options The optional parameters
   * @param callback The callback
   */
  list(resourceGroupName: string, vmScaleSetName: string, instanceId: string, options: Models.VirtualMachineScaleSetVMRunCommandsListOptionalParams, callback: msRest.ServiceCallback<Models.VirtualMachineRunCommandsListResult>): void;
  list(resourceGroupName: string, vmScaleSetName: string, instanceId: string, options?: Models.VirtualMachineScaleSetVMRunCommandsListOptionalParams | msRest.ServiceCallback<Models.VirtualMachineRunCommandsListResult>, callback?: msRest.ServiceCallback<Models.VirtualMachineRunCommandsListResult>): Promise<Models.VirtualMachineScaleSetVMRunCommandsListResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        vmScaleSetName,
        instanceId,
        options
      },
      listOperationSpec,
      callback) as Promise<Models.VirtualMachineScaleSetVMRunCommandsListResponse>;
  }

  /**
   * The operation to create or update the VMSS VM run command.
   * @param resourceGroupName The name of the resource group.
   * @param vmScaleSetName The name of the VM scale set.
   * @param instanceId The instance ID of the virtual machine.
   * @param runCommandName The name of the virtual machine run command.
   * @param runCommand Parameters supplied to the Create Virtual Machine RunCommand operation.
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginCreateOrUpdate(resourceGroupName: string, vmScaleSetName: string, instanceId: string, runCommandName: string, runCommand: Models.VirtualMachineRunCommand, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        resourceGroupName,
        vmScaleSetName,
        instanceId,
        runCommandName,
        runCommand,
        options
      },
      beginCreateOrUpdateOperationSpec,
      options);
  }

  /**
   * The operation to update the VMSS VM run command.
   * @param resourceGroupName The name of the resource group.
   * @param vmScaleSetName The name of the VM scale set.
   * @param instanceId The instance ID of the virtual machine.
   * @param runCommandName The name of the virtual machine run command.
   * @param runCommand Parameters supplied to the Update Virtual Machine RunCommand operation.
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginUpdate(resourceGroupName: string, vmScaleSetName: string, instanceId: string, runCommandName: string, runCommand: Models.VirtualMachineRunCommandUpdate, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        resourceGroupName,
        vmScaleSetName,
        instanceId,
        runCommandName,
        runCommand,
        options
      },
      beginUpdateOperationSpec,
      options);
  }

  /**
   * The operation to delete the VMSS VM run command.
   * @param resourceGroupName The name of the resource group.
   * @param vmScaleSetName The name of the VM scale set.
   * @param instanceId The instance ID of the virtual machine.
   * @param runCommandName The name of the virtual machine run command.
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginDeleteMethod(resourceGroupName: string, vmScaleSetName: string, instanceId: string, runCommandName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        resourceGroupName,
        vmScaleSetName,
        instanceId,
        runCommandName,
        options
      },
      beginDeleteMethodOperationSpec,
      options);
  }

  /**
   * The operation to get all run commands of an instance in Virtual Machine Scaleset.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.VirtualMachineScaleSetVMRunCommandsListNextResponse>
   */
  listNext(nextPageLink: string, options?: Models.VirtualMachineScaleSetVMRunCommandsListNextOptionalParams): Promise<Models.VirtualMachineScaleSetVMRunCommandsListNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.VirtualMachineRunCommandsListResult>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listNext(nextPageLink: string, options: Models.VirtualMachineScaleSetVMRunCommandsListNextOptionalParams, callback: msRest.ServiceCallback<Models.VirtualMachineRunCommandsListResult>): void;
  listNext(nextPageLink: string, options?: Models.VirtualMachineScaleSetVMRunCommandsListNextOptionalParams | msRest.ServiceCallback<Models.VirtualMachineRunCommandsListResult>, callback?: msRest.ServiceCallback<Models.VirtualMachineRunCommandsListResult>): Promise<Models.VirtualMachineScaleSetVMRunCommandsListNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listNextOperationSpec,
      callback) as Promise<Models.VirtualMachineScaleSetVMRunCommandsListNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualMachines/{instanceId}/runCommands/{runCommandName}",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.vmScaleSetName,
    Parameters.instanceId,
    Parameters.runCommandName,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.expand0,
    Parameters.apiVersion0
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.VirtualMachineRunCommand
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualMachines/{instanceId}/runCommands",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.vmScaleSetName,
    Parameters.instanceId,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.expand0,
    Parameters.apiVersion0
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.VirtualMachineRunCommandsListResult
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const beginCreateOrUpdateOperationSpec: msRest.OperationSpec = {
  httpMethod: "PUT",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualMachines/{instanceId}/runCommands/{runCommandName}",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.vmScaleSetName,
    Parameters.instanceId,
    Parameters.runCommandName,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion0
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "runCommand",
    mapper: {
      ...Mappers.VirtualMachineRunCommand,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.VirtualMachineRunCommand
    },
    201: {
      bodyMapper: Mappers.VirtualMachineRunCommand
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const beginUpdateOperationSpec: msRest.OperationSpec = {
  httpMethod: "PATCH",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualMachines/{instanceId}/runCommands/{runCommandName}",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.vmScaleSetName,
    Parameters.instanceId,
    Parameters.runCommandName,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion0
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "runCommand",
    mapper: {
      ...Mappers.VirtualMachineRunCommandUpdate,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.VirtualMachineRunCommand
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const beginDeleteMethodOperationSpec: msRest.OperationSpec = {
  httpMethod: "DELETE",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualMachines/{instanceId}/runCommands/{runCommandName}",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.vmScaleSetName,
    Parameters.instanceId,
    Parameters.runCommandName,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion0
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {},
    202: {},
    204: {},
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  queryParameters: [
    Parameters.expand0,
    Parameters.apiVersion0
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.VirtualMachineRunCommandsListResult
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};
