/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as msRestAzure from "@azure/ms-rest-azure-js";
import * as Models from "../models";
import * as Mappers from "../models/gallerySharingProfileMappers";
import * as Parameters from "../models/parameters";
import { ComputeManagementClientContext } from "../computeManagementClientContext";

/** Class representing a GallerySharingProfile. */
export class GallerySharingProfile {
  private readonly client: ComputeManagementClientContext;

  /**
   * Create a GallerySharingProfile.
   * @param {ComputeManagementClientContext} client Reference to the service client.
   */
  constructor(client: ComputeManagementClientContext) {
    this.client = client;
  }

  /**
   * Update sharing profile of a gallery.
   * @param resourceGroupName The name of the resource group.
   * @param galleryName The name of the Shared Image Gallery.
   * @param sharingUpdate Parameters supplied to the update gallery sharing profile.
   * @param [options] The optional parameters
   * @returns Promise<Models.GallerySharingProfileUpdateResponse>
   */
  update(resourceGroupName: string, galleryName: string, sharingUpdate: Models.SharingUpdate, options?: msRest.RequestOptionsBase): Promise<Models.GallerySharingProfileUpdateResponse> {
    return this.beginUpdate(resourceGroupName,galleryName,sharingUpdate,options)
      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.GallerySharingProfileUpdateResponse>;
  }

  /**
   * Update sharing profile of a gallery.
   * @param resourceGroupName The name of the resource group.
   * @param galleryName The name of the Shared Image Gallery.
   * @param sharingUpdate Parameters supplied to the update gallery sharing profile.
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginUpdate(resourceGroupName: string, galleryName: string, sharingUpdate: Models.SharingUpdate, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        resourceGroupName,
        galleryName,
        sharingUpdate,
        options
      },
      beginUpdateOperationSpec,
      options);
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const beginUpdateOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/share",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.galleryName
  ],
  queryParameters: [
    Parameters.apiVersion3
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "sharingUpdate",
    mapper: {
      ...Mappers.SharingUpdate,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.SharingUpdate
    },
    202: {
      bodyMapper: Mappers.SharingUpdate
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};
