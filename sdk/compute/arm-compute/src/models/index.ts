/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };

/**
 * Describes the properties of a Compute Operation value.
 */
export interface ComputeOperationValue {
  /**
   * The origin of the compute operation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly origin?: string;
  /**
   * The name of the compute operation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The display name of the compute operation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly operation?: string;
  /**
   * The display name of the resource the operation applies to.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly resource?: string;
  /**
   * The description of the operation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * The resource provider for the operation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provider?: string;
}

/**
 * Specifies the disallowed configuration for a virtual machine image.
 */
export interface DisallowedConfiguration {
  /**
   * VM disk types which are disallowed. Possible values include: 'None', 'Unmanaged'
   */
  vmDiskType?: VmDiskTypes;
}

/**
 * The SAS URIs of the console screenshot and serial log blobs.
 */
export interface RetrieveBootDiagnosticsDataResult {
  /**
   * The console screenshot blob URI
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly consoleScreenshotBlobUri?: string;
  /**
   * The serial console log blob URI.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly serialConsoleLogBlobUri?: string;
}

/**
 * Instance view status.
 */
export interface InstanceViewStatus {
  /**
   * The status code.
   */
  code?: string;
  /**
   * The level code. Possible values include: 'Info', 'Warning', 'Error'
   */
  level?: StatusLevelTypes;
  /**
   * The short localizable label for the status.
   */
  displayStatus?: string;
  /**
   * The detailed status message, including for alerts and error messages.
   */
  message?: string;
  /**
   * The time of the status.
   */
  time?: Date;
}

/**
 * An interface representing SubResource.
 */
export interface SubResource extends BaseResource {
  /**
   * Resource Id
   */
  id?: string;
}

/**
 * Describes a virtual machine scale set sku. NOTE: If the new VM SKU is not supported on the
 * hardware the scale set is currently on, you need to deallocate the VMs in the scale set before
 * you modify the SKU name.
 */
export interface Sku {
  /**
   * The sku name.
   */
  name?: string;
  /**
   * Specifies the tier of virtual machines in a scale set.<br /><br /> Possible Values:<br /><br
   * /> **Standard**<br /><br /> **Basic**
   */
  tier?: string;
  /**
   * Specifies the number of virtual machines in the scale set.
   */
  capacity?: number;
}

/**
 * The Resource model definition.
 */
export interface Resource extends BaseResource {
  /**
   * Resource Id
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Resource name
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Resource type
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Resource location
   */
  location: string;
  /**
   * Resource tags
   */
  tags?: { [propertyName: string]: string };
}

/**
 * Specifies information about the availability set that the virtual machine should be assigned to.
 * Virtual machines specified in the same availability set are allocated to different nodes to
 * maximize availability. For more information about availability sets, see [Manage the
 * availability of virtual
 * machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-manage-availability?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
 * <br><br> For more information on Azure planned maintenance, see [Planned maintenance for virtual
 * machines in
 * Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-planned-maintenance?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json)
 * <br><br> Currently, a VM can only be added to availability set at creation time. An existing VM
 * cannot be added to an availability set.
 */
export interface AvailabilitySet extends Resource {
  /**
   * Update Domain count.
   */
  platformUpdateDomainCount?: number;
  /**
   * Fault Domain count.
   */
  platformFaultDomainCount?: number;
  /**
   * A list of references to all virtual machines in the availability set.
   */
  virtualMachines?: SubResource[];
  /**
   * Specifies information about the proximity placement group that the availability set should be
   * assigned to. <br><br>Minimum api-version: 2018-04-01.
   */
  proximityPlacementGroup?: SubResource;
  /**
   * The resource status information.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly statuses?: InstanceViewStatus[];
  /**
   * Sku of the availability set, only name is required to be set. See AvailabilitySetSkuTypes for
   * possible set of values. Use 'Aligned' for virtual machines with managed disks and 'Classic'
   * for virtual machines with unmanaged disks. Default value is 'Classic'.
   */
  sku?: Sku;
}

/**
 * The Update Resource model definition.
 */
export interface UpdateResource {
  /**
   * Resource tags
   */
  tags?: { [propertyName: string]: string };
}

/**
 * Specifies information about the availability set that the virtual machine should be assigned to.
 * Only tags may be updated.
 */
export interface AvailabilitySetUpdate extends UpdateResource {
  /**
   * Update Domain count.
   */
  platformUpdateDomainCount?: number;
  /**
   * Fault Domain count.
   */
  platformFaultDomainCount?: number;
  /**
   * A list of references to all virtual machines in the availability set.
   */
  virtualMachines?: SubResource[];
  /**
   * Specifies information about the proximity placement group that the availability set should be
   * assigned to. <br><br>Minimum api-version: 2018-04-01.
   */
  proximityPlacementGroup?: SubResource;
  /**
   * The resource status information.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly statuses?: InstanceViewStatus[];
  /**
   * Sku of the availability set
   */
  sku?: Sku;
}

/**
 * An interface representing SubResourceWithColocationStatus.
 */
export interface SubResourceWithColocationStatus extends SubResource {
  /**
   * Describes colocation status of a resource in the Proximity Placement Group.
   */
  colocationStatus?: InstanceViewStatus;
}

/**
 * Specifies information about the proximity placement group.
 */
export interface ProximityPlacementGroup extends Resource {
  /**
   * Specifies the type of the proximity placement group. <br><br> Possible values are: <br><br>
   * **Standard** : Co-locate resources within an Azure region or Availability Zone. <br><br>
   * **Ultra** : For future use. Possible values include: 'Standard', 'Ultra'
   */
  proximityPlacementGroupType?: ProximityPlacementGroupType;
  /**
   * A list of references to all virtual machines in the proximity placement group.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly virtualMachines?: SubResourceWithColocationStatus[];
  /**
   * A list of references to all virtual machine scale sets in the proximity placement group.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly virtualMachineScaleSets?: SubResourceWithColocationStatus[];
  /**
   * A list of references to all availability sets in the proximity placement group.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly availabilitySets?: SubResourceWithColocationStatus[];
  /**
   * Describes colocation status of the Proximity Placement Group.
   */
  colocationStatus?: InstanceViewStatus;
}

/**
 * Specifies information about the proximity placement group.
 */
export interface ProximityPlacementGroupUpdate extends UpdateResource {
}

/**
 * The instance view of a dedicated host.
 */
export interface DedicatedHostInstanceView {
  /**
   * Specifies the unique id of the dedicated physical machine on which the dedicated host resides.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly assetId?: string;
  /**
   * Unutilized capacity of the dedicated host.
   */
  availableCapacity?: DedicatedHostAvailableCapacity;
  /**
   * The resource status information.
   */
  statuses?: InstanceViewStatus[];
}

/**
 * The instance view of a dedicated host that includes the name of the dedicated host. It is used
 * for the response to the instance view of a dedicated host group.
 */
export interface DedicatedHostInstanceViewWithName extends DedicatedHostInstanceView {
  /**
   * The name of the dedicated host.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
}

/**
 * An interface representing DedicatedHostGroupInstanceView.
 */
export interface DedicatedHostGroupInstanceView {
  /**
   * List of instance view of the dedicated hosts under the dedicated host group.
   */
  hosts?: DedicatedHostInstanceViewWithName[];
}

/**
 * An interface representing SubResourceReadOnly.
 */
export interface SubResourceReadOnly extends BaseResource {
  /**
   * Resource Id
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
}

/**
 * Specifies information about the dedicated host group that the dedicated hosts should be assigned
 * to. <br><br> Currently, a dedicated host can only be added to a dedicated host group at creation
 * time. An existing dedicated host cannot be added to another dedicated host group.
 */
export interface DedicatedHostGroup extends Resource {
  /**
   * Number of fault domains that the host group can span.
   */
  platformFaultDomainCount: number;
  /**
   * A list of references to all dedicated hosts in the dedicated host group.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly hosts?: SubResourceReadOnly[];
  /**
   * The dedicated host group instance view, which has the list of instance view of the dedicated
   * hosts under the dedicated host group.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly instanceView?: DedicatedHostGroupInstanceView;
  /**
   * Specifies whether virtual machines or virtual machine scale sets can be placed automatically
   * on the dedicated host group. Automatic placement means resources are allocated on dedicated
   * hosts, that are chosen by Azure, under the dedicated host group. The value is defaulted to
   * 'false' when not provided. <br><br>Minimum api-version: 2020-06-01.
   */
  supportAutomaticPlacement?: boolean;
  /**
   * Availability Zone to use for this host group. Only single zone is supported. The zone can be
   * assigned only during creation. If not provided, the group supports all zones in the region. If
   * provided, enforces each host in the group to be in the same zone.
   */
  zones?: string[];
}

/**
 * Specifies information about the dedicated host group that the dedicated host should be assigned
 * to. Only tags may be updated.
 */
export interface DedicatedHostGroupUpdate extends UpdateResource {
  /**
   * Number of fault domains that the host group can span.
   */
  platformFaultDomainCount: number;
  /**
   * A list of references to all dedicated hosts in the dedicated host group.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly hosts?: SubResourceReadOnly[];
  /**
   * The dedicated host group instance view, which has the list of instance view of the dedicated
   * hosts under the dedicated host group.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly instanceView?: DedicatedHostGroupInstanceView;
  /**
   * Specifies whether virtual machines or virtual machine scale sets can be placed automatically
   * on the dedicated host group. Automatic placement means resources are allocated on dedicated
   * hosts, that are chosen by Azure, under the dedicated host group. The value is defaulted to
   * 'false' when not provided. <br><br>Minimum api-version: 2020-06-01.
   */
  supportAutomaticPlacement?: boolean;
  /**
   * Availability Zone to use for this host group. Only single zone is supported. The zone can be
   * assigned only during creation. If not provided, the group supports all zones in the region. If
   * provided, enforces each host in the group to be in the same zone.
   */
  zones?: string[];
}

/**
 * Represents the dedicated host unutilized capacity in terms of a specific VM size.
 */
export interface DedicatedHostAllocatableVM {
  /**
   * VM size in terms of which the unutilized capacity is represented.
   */
  vmSize?: string;
  /**
   * Maximum number of VMs of size vmSize that can fit in the dedicated host's remaining capacity.
   */
  count?: number;
}

/**
 * Dedicated host unutilized capacity.
 */
export interface DedicatedHostAvailableCapacity {
  /**
   * The unutilized capacity of the dedicated host represented in terms of each VM size that is
   * allowed to be deployed to the dedicated host.
   */
  allocatableVMs?: DedicatedHostAllocatableVM[];
}

/**
 * Specifies information about the Dedicated host.
 */
export interface DedicatedHost extends Resource {
  /**
   * Fault domain of the dedicated host within a dedicated host group.
   */
  platformFaultDomain?: number;
  /**
   * Specifies whether the dedicated host should be replaced automatically in case of a failure.
   * The value is defaulted to 'true' when not provided.
   */
  autoReplaceOnFailure?: boolean;
  /**
   * A unique id generated and assigned to the dedicated host by the platform. <br><br> Does not
   * change throughout the lifetime of the host.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly hostId?: string;
  /**
   * A list of references to all virtual machines in the Dedicated Host.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly virtualMachines?: SubResourceReadOnly[];
  /**
   * Specifies the software license type that will be applied to the VMs deployed on the dedicated
   * host. <br><br> Possible values are: <br><br> **None** <br><br> **Windows_Server_Hybrid**
   * <br><br> **Windows_Server_Perpetual** <br><br> Default: **None**. Possible values include:
   * 'None', 'Windows_Server_Hybrid', 'Windows_Server_Perpetual'
   */
  licenseType?: DedicatedHostLicenseTypes;
  /**
   * The date when the host was first provisioned.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningTime?: Date;
  /**
   * The provisioning state, which only appears in the response.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: string;
  /**
   * The dedicated host instance view.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly instanceView?: DedicatedHostInstanceView;
  /**
   * SKU of the dedicated host for Hardware Generation and VM family. Only name is required to be
   * set. List Microsoft.Compute SKUs for a list of possible values.
   */
  sku: Sku;
}

/**
 * Specifies information about the dedicated host. Only tags, autoReplaceOnFailure and licenseType
 * may be updated.
 */
export interface DedicatedHostUpdate extends UpdateResource {
  /**
   * Fault domain of the dedicated host within a dedicated host group.
   */
  platformFaultDomain?: number;
  /**
   * Specifies whether the dedicated host should be replaced automatically in case of a failure.
   * The value is defaulted to 'true' when not provided.
   */
  autoReplaceOnFailure?: boolean;
  /**
   * A unique id generated and assigned to the dedicated host by the platform. <br><br> Does not
   * change throughout the lifetime of the host.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly hostId?: string;
  /**
   * A list of references to all virtual machines in the Dedicated Host.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly virtualMachines?: SubResourceReadOnly[];
  /**
   * Specifies the software license type that will be applied to the VMs deployed on the dedicated
   * host. <br><br> Possible values are: <br><br> **None** <br><br> **Windows_Server_Hybrid**
   * <br><br> **Windows_Server_Perpetual** <br><br> Default: **None**. Possible values include:
   * 'None', 'Windows_Server_Hybrid', 'Windows_Server_Perpetual'
   */
  licenseType?: DedicatedHostLicenseTypes;
  /**
   * The date when the host was first provisioned.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningTime?: Date;
  /**
   * The provisioning state, which only appears in the response.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: string;
  /**
   * The dedicated host instance view.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly instanceView?: DedicatedHostInstanceView;
}

/**
 * Response from generation of an SSH key pair.
 */
export interface SshPublicKeyGenerateKeyPairResult {
  /**
   * Private key portion of the key pair used to authenticate to a virtual machine through ssh. The
   * private key is returned in RFC3447 format and should be treated as a secret.
   */
  privateKey: string;
  /**
   * Public key portion of the key pair used to authenticate to a virtual machine through ssh. The
   * public key is in ssh-rsa format.
   */
  publicKey: string;
  /**
   * The ARM resource id in the form of
   * /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/providers/Microsoft.Compute/sshPublicKeys/{SshPublicKeyName}
   */
  id: string;
}

/**
 * Specifies information about the SSH public key.
 */
export interface SshPublicKeyResource extends Resource {
  /**
   * SSH public key used to authenticate to a virtual machine through ssh. If this property is not
   * initially provided when the resource is created, the publicKey property will be populated when
   * generateKeyPair is called. If the public key is provided upon resource creation, the provided
   * public key needs to be at least 2048-bit and in ssh-rsa format.
   */
  publicKey?: string;
}

/**
 * Specifies information about the SSH public key.
 */
export interface SshPublicKeyUpdateResource extends UpdateResource {
  /**
   * SSH public key used to authenticate to a virtual machine through ssh. If this property is not
   * initially provided when the resource is created, the publicKey property will be populated when
   * generateKeyPair is called. If the public key is provided upon resource creation, the provided
   * public key needs to be at least 2048-bit and in ssh-rsa format.
   */
  publicKey?: string;
}

/**
 * Describes the properties of a VM size.
 */
export interface VirtualMachineSize {
  /**
   * The name of the virtual machine size.
   */
  name?: string;
  /**
   * The number of cores supported by the virtual machine size.
   */
  numberOfCores?: number;
  /**
   * The OS disk size, in MB, allowed by the virtual machine size.
   */
  osDiskSizeInMB?: number;
  /**
   * The resource disk size, in MB, allowed by the virtual machine size.
   */
  resourceDiskSizeInMB?: number;
  /**
   * The amount of memory, in MB, supported by the virtual machine size.
   */
  memoryInMB?: number;
  /**
   * The maximum number of data disks that can be attached to the virtual machine size.
   */
  maxDataDiskCount?: number;
}

/**
 * Describes a Virtual Machine Extension Image.
 */
export interface VirtualMachineExtensionImage extends Resource {
  /**
   * The operating system this extension supports.
   */
  operatingSystem: string;
  /**
   * The type of role (IaaS or PaaS) this extension supports.
   */
  computeRole: string;
  /**
   * The schema defined by publisher, where extension consumers should provide settings in a
   * matching schema.
   */
  handlerSchema: string;
  /**
   * Whether the extension can be used on xRP VMScaleSets. By default existing extensions are
   * usable on scalesets, but there might be cases where a publisher wants to explicitly indicate
   * the extension is only enabled for CRP VMs but not VMSS.
   */
  vmScaleSetEnabled?: boolean;
  /**
   * Whether the handler can support multiple extensions.
   */
  supportsMultipleExtensions?: boolean;
}

/**
 * The complex type of the extended location.
 */
export interface ExtendedLocation {
  /**
   * The name of the extended location.
   */
  name?: string;
  /**
   * The type of the extended location. Possible values include: 'EdgeZone'
   */
  type?: ExtendedLocationTypes;
}

/**
 * Virtual machine image resource information.
 */
export interface VirtualMachineImageResource extends SubResource {
  /**
   * The name of the resource.
   */
  name: string;
  /**
   * The supported Azure location of the resource.
   */
  location: string;
  /**
   * Specifies the tags that are assigned to the virtual machine. For more information about using
   * tags, see [Using tags to organize your Azure
   * resources](https://docs.microsoft.com/azure/azure-resource-manager/resource-group-using-tags.md).
   */
  tags?: { [propertyName: string]: string };
  /**
   * The extended location of the Virtual Machine.
   */
  extendedLocation?: ExtendedLocation;
}

/**
 * The instance view of a virtual machine extension.
 */
export interface VirtualMachineExtensionInstanceView {
  /**
   * The virtual machine extension name.
   */
  name?: string;
  /**
   * Specifies the type of the extension; an example is "CustomScriptExtension".
   */
  type?: string;
  /**
   * Specifies the version of the script handler.
   */
  typeHandlerVersion?: string;
  /**
   * The resource status information.
   */
  substatuses?: InstanceViewStatus[];
  /**
   * The resource status information.
   */
  statuses?: InstanceViewStatus[];
}

/**
 * Describes a Virtual Machine Extension.
 */
export interface VirtualMachineExtension extends Resource {
  /**
   * How the extension handler should be forced to update even if the extension configuration has
   * not changed.
   */
  forceUpdateTag?: string;
  /**
   * The name of the extension handler publisher.
   */
  publisher?: string;
  /**
   * Specifies the type of the extension; an example is "CustomScriptExtension".
   */
  virtualMachineExtensionType?: string;
  /**
   * Specifies the version of the script handler.
   */
  typeHandlerVersion?: string;
  /**
   * Indicates whether the extension should use a newer minor version if one is available at
   * deployment time. Once deployed, however, the extension will not upgrade minor versions unless
   * redeployed, even with this property set to true.
   */
  autoUpgradeMinorVersion?: boolean;
  /**
   * Indicates whether the extension should be automatically upgraded by the platform if there is a
   * newer version of the extension available.
   */
  enableAutomaticUpgrade?: boolean;
  /**
   * Json formatted public settings for the extension.
   */
  settings?: any;
  /**
   * The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no
   * protected settings at all.
   */
  protectedSettings?: any;
  /**
   * The provisioning state, which only appears in the response.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: string;
  /**
   * The virtual machine extension instance view.
   */
  instanceView?: VirtualMachineExtensionInstanceView;
}

/**
 * Describes a VMSS VM Extension.
 */
export interface VirtualMachineScaleSetVMExtension extends SubResourceReadOnly {
  /**
   * The name of the extension.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Resource type
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * How the extension handler should be forced to update even if the extension configuration has
   * not changed.
   */
  forceUpdateTag?: string;
  /**
   * The name of the extension handler publisher.
   */
  publisher?: string;
  /**
   * Specifies the type of the extension; an example is "CustomScriptExtension".
   */
  type1?: string;
  /**
   * Specifies the version of the script handler.
   */
  typeHandlerVersion?: string;
  /**
   * Indicates whether the extension should use a newer minor version if one is available at
   * deployment time. Once deployed, however, the extension will not upgrade minor versions unless
   * redeployed, even with this property set to true.
   */
  autoUpgradeMinorVersion?: boolean;
  /**
   * Indicates whether the extension should be automatically upgraded by the platform if there is a
   * newer version of the extension available.
   */
  enableAutomaticUpgrade?: boolean;
  /**
   * Json formatted public settings for the extension.
   */
  settings?: any;
  /**
   * The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no
   * protected settings at all.
   */
  protectedSettings?: any;
  /**
   * The provisioning state, which only appears in the response.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: string;
  /**
   * The virtual machine extension instance view.
   */
  instanceView?: VirtualMachineExtensionInstanceView;
}

/**
 * Describes a Virtual Machine Extension.
 */
export interface VirtualMachineExtensionUpdate extends UpdateResource {
  /**
   * How the extension handler should be forced to update even if the extension configuration has
   * not changed.
   */
  forceUpdateTag?: string;
  /**
   * The name of the extension handler publisher.
   */
  publisher?: string;
  /**
   * Specifies the type of the extension; an example is "CustomScriptExtension".
   */
  type?: string;
  /**
   * Specifies the version of the script handler.
   */
  typeHandlerVersion?: string;
  /**
   * Indicates whether the extension should use a newer minor version if one is available at
   * deployment time. Once deployed, however, the extension will not upgrade minor versions unless
   * redeployed, even with this property set to true.
   */
  autoUpgradeMinorVersion?: boolean;
  /**
   * Indicates whether the extension should be automatically upgraded by the platform if there is a
   * newer version of the extension available.
   */
  enableAutomaticUpgrade?: boolean;
  /**
   * Json formatted public settings for the extension.
   */
  settings?: any;
  /**
   * The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no
   * protected settings at all.
   */
  protectedSettings?: any;
}

/**
 * Describes a VMSS VM Extension.
 */
export interface VirtualMachineScaleSetVMExtensionUpdate extends SubResourceReadOnly {
  /**
   * The name of the extension.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Resource type
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * How the extension handler should be forced to update even if the extension configuration has
   * not changed.
   */
  forceUpdateTag?: string;
  /**
   * The name of the extension handler publisher.
   */
  publisher?: string;
  /**
   * Specifies the type of the extension; an example is "CustomScriptExtension".
   */
  type1?: string;
  /**
   * Specifies the version of the script handler.
   */
  typeHandlerVersion?: string;
  /**
   * Indicates whether the extension should use a newer minor version if one is available at
   * deployment time. Once deployed, however, the extension will not upgrade minor versions unless
   * redeployed, even with this property set to true.
   */
  autoUpgradeMinorVersion?: boolean;
  /**
   * Indicates whether the extension should be automatically upgraded by the platform if there is a
   * newer version of the extension available.
   */
  enableAutomaticUpgrade?: boolean;
  /**
   * Json formatted public settings for the extension.
   */
  settings?: any;
  /**
   * The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no
   * protected settings at all.
   */
  protectedSettings?: any;
}

/**
 * The List Extension operation response
 */
export interface VirtualMachineExtensionsListResult {
  /**
   * The list of extensions
   */
  value?: VirtualMachineExtension[];
}

/**
 * The List VMSS VM Extension operation response
 */
export interface VirtualMachineScaleSetVMExtensionsListResult {
  /**
   * The list of VMSS VM extensions
   */
  value?: VirtualMachineScaleSetVMExtension[];
}

/**
 * Describes the properties of a Virtual Machine software patch.
 */
export interface VirtualMachineSoftwarePatchProperties {
  /**
   * A unique identifier for the patch.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly patchId?: string;
  /**
   * The friendly name of the patch.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The version number of the patch. This property applies only to Linux patches.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly version?: string;
  /**
   * The KBID of the patch. Only applies to Windows patches.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly kbId?: string;
  /**
   * The classification(s) of the patch as provided by the patch publisher.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly classifications?: string[];
  /**
   * Describes the reboot requirements of the patch. Possible values include: 'Unknown',
   * 'NeverReboots', 'AlwaysRequiresReboot', 'CanRequestReboot'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly rebootBehavior?: VMGuestPatchRebootBehavior;
  /**
   * The activity ID of the operation that produced this result. It is used to correlate across CRP
   * and extension logs.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly activityId?: string;
  /**
   * The UTC timestamp when the repository published this patch.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly publishedDate?: Date;
  /**
   * The UTC timestamp of the last update to this patch record.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastModifiedDateTime?: Date;
  /**
   * Describes the availability of a given patch. Possible values include: 'Unknown', 'Available'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly assessmentState?: PatchAssessmentState;
}

/**
 * Api error base.
 */
export interface ApiErrorBase {
  /**
   * The error code.
   */
  code?: string;
  /**
   * The target of the particular error.
   */
  target?: string;
  /**
   * The error message.
   */
  message?: string;
}

/**
 * Inner error details.
 */
export interface InnerError {
  /**
   * The exception type.
   */
  exceptiontype?: string;
  /**
   * The internal error message or exception dump.
   */
  errordetail?: string;
}

/**
 * Api error.
 */
export interface ApiError {
  /**
   * The Api error details
   */
  details?: ApiErrorBase[];
  /**
   * The Api inner error
   */
  innererror?: InnerError;
  /**
   * The error code.
   */
  code?: string;
  /**
   * The target of the particular error.
   */
  target?: string;
  /**
   * The error message.
   */
  message?: string;
}

/**
 * Describes the properties of an AssessPatches result.
 */
export interface VirtualMachineAssessPatchesResult {
  /**
   * The overall success or failure status of the operation. It remains "InProgress" until the
   * operation completes. At that point it will become "Unknown", "Failed", "Succeeded", or
   * "CompletedWithWarnings.". Possible values include: 'Unknown', 'InProgress', 'Failed',
   * 'Succeeded', 'CompletedWithWarnings'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: PatchOperationStatus;
  /**
   * The activity ID of the operation that produced this result. It is used to correlate across CRP
   * and extension logs.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly assessmentActivityId?: string;
  /**
   * The overall reboot status of the VM. It will be true when partially installed patches require
   * a reboot to complete installation but the reboot has not yet occurred.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly rebootPending?: boolean;
  /**
   * The number of critical or security patches that have been detected as available and not yet
   * installed.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly criticalAndSecurityPatchCount?: number;
  /**
   * The number of all available patches excluding critical and security.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly otherPatchCount?: number;
  /**
   * The UTC timestamp when the operation began.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly startDateTime?: Date;
  /**
   * The list of patches that have been detected as available for installation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly availablePatches?: VirtualMachineSoftwarePatchProperties[];
  /**
   * The errors that were encountered during execution of the operation. The details array contains
   * the list of them.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly error?: ApiError;
}

/**
 * Input for InstallPatches on a Windows VM, as directly received by the API
 */
export interface WindowsParameters {
  /**
   * The update classifications to select when installing patches for Windows.
   */
  classificationsToInclude?: VMGuestPatchClassificationWindows[];
  /**
   * Kbs to include in the patch operation
   */
  kbNumbersToInclude?: string[];
  /**
   * Kbs to exclude in the patch operation
   */
  kbNumbersToExclude?: string[];
  /**
   * Filters out Kbs that don't have an InstallationRebootBehavior of 'NeverReboots' when this is
   * set to true.
   */
  excludeKbsRequiringReboot?: boolean;
  /**
   * This is used to install patches that were published on or before this given max published
   * date.
   */
  maxPatchPublishDate?: Date;
}

/**
 * Input for InstallPatches on a Linux VM, as directly received by the API
 */
export interface LinuxParameters {
  /**
   * The update classifications to select when installing patches for Linux.
   */
  classificationsToInclude?: VMGuestPatchClassificationLinux[];
  /**
   * packages to include in the patch operation. Format: packageName_packageVersion
   */
  packageNameMasksToInclude?: string[];
  /**
   * packages to exclude in the patch operation. Format: packageName_packageVersion
   */
  packageNameMasksToExclude?: string[];
  /**
   * This is used as a maintenance run identifier for Auto VM Guest Patching in Linux.
   */
  maintenanceRunId?: string;
}

/**
 * Input for InstallPatches as directly received by the API
 */
export interface VirtualMachineInstallPatchesParameters {
  /**
   * Specifies the maximum amount of time that the operation will run. It must be an ISO
   * 8601-compliant duration string such as PT4H (4 hours)
   */
  maximumDuration: string;
  /**
   * Defines when it is acceptable to reboot a VM during a software update operation. Possible
   * values include: 'IfRequired', 'Never', 'Always'
   */
  rebootSetting: VMGuestPatchRebootSetting;
  /**
   * Input for InstallPatches on a Windows VM, as directly received by the API
   */
  windowsParameters?: WindowsParameters;
  /**
   * Input for InstallPatches on a Linux VM, as directly received by the API
   */
  linuxParameters?: LinuxParameters;
}

/**
 * Information about a specific patch that was encountered during an installation action.
 */
export interface PatchInstallationDetail {
  /**
   * A unique identifier for the patch.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly patchId?: string;
  /**
   * The friendly name of the patch.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The version string of the package. It may conform to Semantic Versioning. Only applies to
   * Linux.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly version?: string;
  /**
   * The KBID of the patch. Only applies to Windows patches.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly kbId?: string;
  /**
   * The classification(s) of the patch as provided by the patch publisher.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly classifications?: string[];
  /**
   * The state of the patch after the installation operation completed. Possible values include:
   * 'Unknown', 'Installed', 'Failed', 'Excluded', 'NotSelected', 'Pending'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly installationState?: PatchInstallationState;
}

/**
 * The result summary of an installation operation.
 */
export interface VirtualMachineInstallPatchesResult {
  /**
   * The overall success or failure status of the operation. It remains "InProgress" until the
   * operation completes. At that point it will become "Failed", "Succeeded", "Unknown" or
   * "CompletedWithWarnings.". Possible values include: 'Unknown', 'InProgress', 'Failed',
   * 'Succeeded', 'CompletedWithWarnings'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: PatchOperationStatus;
  /**
   * The activity ID of the operation that produced this result. It is used to correlate across CRP
   * and extension logs.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly installationActivityId?: string;
  /**
   * The reboot state of the VM following completion of the operation. Possible values include:
   * 'Unknown', 'NotNeeded', 'Required', 'Started', 'Failed', 'Completed'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly rebootStatus?: VMGuestPatchRebootStatus;
  /**
   * Whether the operation ran out of time before it completed all its intended actions.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly maintenanceWindowExceeded?: boolean;
  /**
   * The number of patches that were not installed due to the user blocking their installation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly excludedPatchCount?: number;
  /**
   * The number of patches that were detected as available for install, but did not meet the
   * operation's criteria.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly notSelectedPatchCount?: number;
  /**
   * The number of patches that were identified as meeting the installation criteria, but were not
   * able to be installed. Typically this happens when maintenanceWindowExceeded == true.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly pendingPatchCount?: number;
  /**
   * The number of patches successfully installed.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly installedPatchCount?: number;
  /**
   * The number of patches that could not be installed due to some issue. See errors for details.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly failedPatchCount?: number;
  /**
   * The patches that were installed during the operation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly patches?: PatchInstallationDetail[];
  /**
   * The UTC timestamp when the operation began.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly startDateTime?: Date;
  /**
   * The errors that were encountered during execution of the operation. The details array contains
   * the list of them.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly error?: ApiError;
}

/**
 * Used for establishing the purchase context of any 3rd Party artifact through MarketPlace.
 */
export interface PurchasePlan {
  /**
   * The publisher ID.
   */
  publisher: string;
  /**
   * The plan ID.
   */
  name: string;
  /**
   * Specifies the product of the image from the marketplace. This is the same value as Offer under
   * the imageReference element.
   */
  product: string;
  /**
   * The Offer Promotion Code.
   */
  promotionCode?: string;
}

/**
 * Contains the os disk image information.
 */
export interface OSDiskImage {
  /**
   * The operating system of the osDiskImage. Possible values include: 'Windows', 'Linux'
   */
  operatingSystem: OperatingSystemTypes;
}

/**
 * Contains the data disk images information.
 */
export interface DataDiskImage {
  /**
   * Specifies the logical unit number of the data disk. This value is used to identify data disks
   * within the VM and therefore must be unique for each data disk attached to a VM.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lun?: number;
}

/**
 * Describes automatic OS upgrade properties on the image.
 */
export interface AutomaticOSUpgradeProperties {
  /**
   * Specifies whether automatic OS upgrade is supported on the image.
   */
  automaticOSUpgradeSupported: boolean;
}

/**
 * Specifies additional capabilities supported by the image
 */
export interface VirtualMachineImageFeature {
  /**
   * The name of the feature.
   */
  name?: string;
  /**
   * The corresponding value for the feature.
   */
  value?: string;
}

/**
 * Describes a Virtual Machine Image.
 */
export interface VirtualMachineImage extends VirtualMachineImageResource {
  plan?: PurchasePlan;
  osDiskImage?: OSDiskImage;
  dataDiskImages?: DataDiskImage[];
  automaticOSUpgradeProperties?: AutomaticOSUpgradeProperties;
  /**
   * Possible values include: 'V1', 'V2'
   */
  hyperVGeneration?: HyperVGenerationTypes;
  /**
   * Specifies disallowed configuration for the VirtualMachine created from the image
   */
  disallowed?: DisallowedConfiguration;
  features?: VirtualMachineImageFeature[];
}

/**
 * The Usage Names.
 */
export interface UsageName {
  /**
   * The name of the resource.
   */
  value?: string;
  /**
   * The localized name of the resource.
   */
  localizedValue?: string;
}

/**
 * Describes Compute Resource Usage.
 */
export interface Usage {
  /**
   * The current usage of the resource.
   */
  currentValue: number;
  /**
   * The maximum permitted usage of the resource.
   */
  limit: number;
  /**
   * The name of the type of usage.
   */
  name: UsageName;
}

/**
 * Parameters for Reimaging Virtual Machine. NOTE: Virtual Machine OS disk will always be reimaged
 */
export interface VirtualMachineReimageParameters {
  /**
   * Specifies whether to reimage temp disk. Default value: false. Note: This temp disk reimage
   * parameter is only supported for VM/VMSS with Ephemeral OS disk.
   */
  tempDisk?: boolean;
}

/**
 * Capture Virtual Machine parameters.
 */
export interface VirtualMachineCaptureParameters {
  /**
   * The captured virtual hard disk's name prefix.
   */
  vhdPrefix: string;
  /**
   * The destination container name.
   */
  destinationContainerName: string;
  /**
   * Specifies whether to overwrite the destination virtual hard disk, in case of conflict.
   */
  overwriteVhds: boolean;
}

/**
 * Output of virtual machine capture operation.
 */
export interface VirtualMachineCaptureResult extends SubResource {
  /**
   * the schema of the captured virtual machine
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly schema?: string;
  /**
   * the version of the content
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly contentVersion?: string;
  /**
   * parameters of the captured virtual machine
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly parameters?: any;
  /**
   * a list of resource items of the captured virtual machine
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly resources?: any[];
}

/**
 * Specifies information about the marketplace image used to create the virtual machine. This
 * element is only used for marketplace images. Before you can use a marketplace image from an API,
 * you must enable the image for programmatic use.  In the Azure portal, find the marketplace image
 * that you want to use and then click **Want to deploy programmatically, Get Started ->**. Enter
 * any required information and then click **Save**.
 */
export interface Plan {
  /**
   * The plan ID.
   */
  name?: string;
  /**
   * The publisher ID.
   */
  publisher?: string;
  /**
   * Specifies the product of the image from the marketplace. This is the same value as Offer under
   * the imageReference element.
   */
  product?: string;
  /**
   * The promotion code.
   */
  promotionCode?: string;
}

/**
 * Specifies the hardware settings for the virtual machine.
 */
export interface HardwareProfile {
  /**
   * Specifies the size of the virtual machine. <br><br> The enum data type is currently deprecated
   * and will be removed by December 23rd 2023. <br><br> Recommended way to get the list of
   * available sizes is using these APIs: <br><br> [List all available virtual machine sizes in an
   * availability
   * set](https://docs.microsoft.com/rest/api/compute/availabilitysets/listavailablesizes) <br><br>
   * [List all available virtual machine sizes in a region](
   * https://docs.microsoft.com/en-us/rest/api/compute/resourceskus/list) <br><br> [List all
   * available virtual machine sizes for
   * resizing](https://docs.microsoft.com/rest/api/compute/virtualmachines/listavailablesizes). For
   * more information about virtual machine sizes, see [Sizes for virtual
   * machines](https://docs.microsoft.com/en-us/azure/virtual-machines/sizes). <br><br> The
   * available VM sizes depend on region and availability set. Possible values include: 'Basic_A0',
   * 'Basic_A1', 'Basic_A2', 'Basic_A3', 'Basic_A4', 'Standard_A0', 'Standard_A1', 'Standard_A2',
   * 'Standard_A3', 'Standard_A4', 'Standard_A5', 'Standard_A6', 'Standard_A7', 'Standard_A8',
   * 'Standard_A9', 'Standard_A10', 'Standard_A11', 'Standard_A1_v2', 'Standard_A2_v2',
   * 'Standard_A4_v2', 'Standard_A8_v2', 'Standard_A2m_v2', 'Standard_A4m_v2', 'Standard_A8m_v2',
   * 'Standard_B1s', 'Standard_B1ms', 'Standard_B2s', 'Standard_B2ms', 'Standard_B4ms',
   * 'Standard_B8ms', 'Standard_D1', 'Standard_D2', 'Standard_D3', 'Standard_D4', 'Standard_D11',
   * 'Standard_D12', 'Standard_D13', 'Standard_D14', 'Standard_D1_v2', 'Standard_D2_v2',
   * 'Standard_D3_v2', 'Standard_D4_v2', 'Standard_D5_v2', 'Standard_D2_v3', 'Standard_D4_v3',
   * 'Standard_D8_v3', 'Standard_D16_v3', 'Standard_D32_v3', 'Standard_D64_v3', 'Standard_D2s_v3',
   * 'Standard_D4s_v3', 'Standard_D8s_v3', 'Standard_D16s_v3', 'Standard_D32s_v3',
   * 'Standard_D64s_v3', 'Standard_D11_v2', 'Standard_D12_v2', 'Standard_D13_v2',
   * 'Standard_D14_v2', 'Standard_D15_v2', 'Standard_DS1', 'Standard_DS2', 'Standard_DS3',
   * 'Standard_DS4', 'Standard_DS11', 'Standard_DS12', 'Standard_DS13', 'Standard_DS14',
   * 'Standard_DS1_v2', 'Standard_DS2_v2', 'Standard_DS3_v2', 'Standard_DS4_v2', 'Standard_DS5_v2',
   * 'Standard_DS11_v2', 'Standard_DS12_v2', 'Standard_DS13_v2', 'Standard_DS14_v2',
   * 'Standard_DS15_v2', 'Standard_DS13-4_v2', 'Standard_DS13-2_v2', 'Standard_DS14-8_v2',
   * 'Standard_DS14-4_v2', 'Standard_E2_v3', 'Standard_E4_v3', 'Standard_E8_v3', 'Standard_E16_v3',
   * 'Standard_E32_v3', 'Standard_E64_v3', 'Standard_E2s_v3', 'Standard_E4s_v3', 'Standard_E8s_v3',
   * 'Standard_E16s_v3', 'Standard_E32s_v3', 'Standard_E64s_v3', 'Standard_E32-16_v3',
   * 'Standard_E32-8s_v3', 'Standard_E64-32s_v3', 'Standard_E64-16s_v3', 'Standard_F1',
   * 'Standard_F2', 'Standard_F4', 'Standard_F8', 'Standard_F16', 'Standard_F1s', 'Standard_F2s',
   * 'Standard_F4s', 'Standard_F8s', 'Standard_F16s', 'Standard_F2s_v2', 'Standard_F4s_v2',
   * 'Standard_F8s_v2', 'Standard_F16s_v2', 'Standard_F32s_v2', 'Standard_F64s_v2',
   * 'Standard_F72s_v2', 'Standard_G1', 'Standard_G2', 'Standard_G3', 'Standard_G4', 'Standard_G5',
   * 'Standard_GS1', 'Standard_GS2', 'Standard_GS3', 'Standard_GS4', 'Standard_GS5',
   * 'Standard_GS4-8', 'Standard_GS4-4', 'Standard_GS5-16', 'Standard_GS5-8', 'Standard_H8',
   * 'Standard_H16', 'Standard_H8m', 'Standard_H16m', 'Standard_H16r', 'Standard_H16mr',
   * 'Standard_L4s', 'Standard_L8s', 'Standard_L16s', 'Standard_L32s', 'Standard_M64s',
   * 'Standard_M64ms', 'Standard_M128s', 'Standard_M128ms', 'Standard_M64-32ms',
   * 'Standard_M64-16ms', 'Standard_M128-64ms', 'Standard_M128-32ms', 'Standard_NC6',
   * 'Standard_NC12', 'Standard_NC24', 'Standard_NC24r', 'Standard_NC6s_v2', 'Standard_NC12s_v2',
   * 'Standard_NC24s_v2', 'Standard_NC24rs_v2', 'Standard_NC6s_v3', 'Standard_NC12s_v3',
   * 'Standard_NC24s_v3', 'Standard_NC24rs_v3', 'Standard_ND6s', 'Standard_ND12s',
   * 'Standard_ND24s', 'Standard_ND24rs', 'Standard_NV6', 'Standard_NV12', 'Standard_NV24'
   */
  vmSize?: VirtualMachineSizeTypes;
}

/**
 * Specifies information about the image to use. You can specify information about platform images,
 * marketplace images, or virtual machine images. This element is required when you want to use a
 * platform image, marketplace image, or virtual machine image, but is not used in other creation
 * operations. NOTE: Image reference publisher and offer can only be set when you create the scale
 * set.
 */
export interface ImageReference extends SubResource {
  /**
   * The image publisher.
   */
  publisher?: string;
  /**
   * Specifies the offer of the platform image or marketplace image used to create the virtual
   * machine.
   */
  offer?: string;
  /**
   * The image SKU.
   */
  sku?: string;
  /**
   * Specifies the version of the platform image or marketplace image used to create the virtual
   * machine. The allowed formats are Major.Minor.Build or 'latest'. Major, Minor, and Build are
   * decimal numbers. Specify 'latest' to use the latest version of an image available at deploy
   * time. Even if you use 'latest', the VM image will not automatically update after deploy time
   * even if a new version becomes available.
   */
  version?: string;
  /**
   * Specifies in decimal numbers, the version of platform image or marketplace image used to
   * create the virtual machine. This readonly field differs from 'version', only if the value
   * specified in 'version' field is 'latest'.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly exactVersion?: string;
}

/**
 * Describes a reference to Key Vault Secret
 */
export interface KeyVaultSecretReference {
  /**
   * The URL referencing a secret in a Key Vault.
   */
  secretUrl: string;
  /**
   * The relative URL of the Key Vault containing the secret.
   */
  sourceVault: SubResource;
}

/**
 * Describes the parameter of customer managed disk encryption set resource id that can be
 * specified for disk. <br><br> NOTE: The disk encryption set resource id can only be specified for
 * managed disk. Please refer https://aka.ms/mdssewithcmkoverview for more details.
 */
export interface DiskEncryptionSetParameters extends SubResource {
}

/**
 * Describes a reference to Key Vault Key
 */
export interface KeyVaultKeyReference {
  /**
   * The URL referencing a key encryption key in Key Vault.
   */
  keyUrl: string;
  /**
   * The relative URL of the Key Vault containing the key.
   */
  sourceVault: SubResource;
}

/**
 * Describes a Encryption Settings for a Disk
 */
export interface DiskEncryptionSettings {
  /**
   * Specifies the location of the disk encryption key, which is a Key Vault Secret.
   */
  diskEncryptionKey?: KeyVaultSecretReference;
  /**
   * Specifies the location of the key encryption key in Key Vault.
   */
  keyEncryptionKey?: KeyVaultKeyReference;
  /**
   * Specifies whether disk encryption should be enabled on the virtual machine.
   */
  enabled?: boolean;
}

/**
 * Describes the uri of a disk.
 */
export interface VirtualHardDisk {
  /**
   * Specifies the virtual hard disk's uri.
   */
  uri?: string;
}

/**
 * Describes the parameters of ephemeral disk settings that can be specified for operating system
 * disk. <br><br> NOTE: The ephemeral disk settings can only be specified for managed disk.
 */
export interface DiffDiskSettings {
  /**
   * Specifies the ephemeral disk settings for operating system disk. Possible values include:
   * 'Local'
   */
  option?: DiffDiskOptions;
  /**
   * Specifies the ephemeral disk placement for operating system disk.<br><br> Possible values are:
   * <br><br> **CacheDisk** <br><br> **ResourceDisk** <br><br> Default: **CacheDisk** if one is
   * configured for the VM size otherwise **ResourceDisk** is used.<br><br> Refer to VM size
   * documentation for Windows VM at
   * https://docs.microsoft.com/en-us/azure/virtual-machines/windows/sizes and Linux VM at
   * https://docs.microsoft.com/en-us/azure/virtual-machines/linux/sizes to check which VM sizes
   * exposes a cache disk. Possible values include: 'CacheDisk', 'ResourceDisk'
   */
  placement?: DiffDiskPlacement;
}

/**
 * The parameters of a managed disk.
 */
export interface ManagedDiskParameters extends SubResource {
  /**
   * Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can only be used
   * with data disks, it cannot be used with OS Disk. Possible values include: 'Standard_LRS',
   * 'Premium_LRS', 'StandardSSD_LRS', 'UltraSSD_LRS', 'Premium_ZRS', 'StandardSSD_ZRS'
   */
  storageAccountType?: StorageAccountTypes;
  /**
   * Specifies the customer managed disk encryption set resource id for the managed disk.
   */
  diskEncryptionSet?: DiskEncryptionSetParameters;
}

/**
 * Specifies information about the operating system disk used by the virtual machine. <br><br> For
 * more information about disks, see [About disks and VHDs for Azure virtual
 * machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
 */
export interface OSDisk {
  /**
   * This property allows you to specify the type of the OS that is included in the disk if
   * creating a VM from user-image or a specialized VHD. <br><br> Possible values are: <br><br>
   * **Windows** <br><br> **Linux**. Possible values include: 'Windows', 'Linux'
   */
  osType?: OperatingSystemTypes;
  /**
   * Specifies the encryption settings for the OS Disk. <br><br> Minimum api-version: 2015-06-15
   */
  encryptionSettings?: DiskEncryptionSettings;
  /**
   * The disk name.
   */
  name?: string;
  /**
   * The virtual hard disk.
   */
  vhd?: VirtualHardDisk;
  /**
   * The source user image virtual hard disk. The virtual hard disk will be copied before being
   * attached to the virtual machine. If SourceImage is provided, the destination virtual hard
   * drive must not exist.
   */
  image?: VirtualHardDisk;
  /**
   * Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br>
   * **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None** for Standard storage.
   * **ReadOnly** for Premium storage. Possible values include: 'None', 'ReadOnly', 'ReadWrite'
   */
  caching?: CachingTypes;
  /**
   * Specifies whether writeAccelerator should be enabled or disabled on the disk.
   */
  writeAcceleratorEnabled?: boolean;
  /**
   * Specifies the ephemeral Disk Settings for the operating system disk used by the virtual
   * machine.
   */
  diffDiskSettings?: DiffDiskSettings;
  /**
   * Specifies how the virtual machine should be created.<br><br> Possible values are:<br><br>
   * **Attach** \u2013 This value is used when you are using a specialized disk to create the
   * virtual machine.<br><br> **FromImage** \u2013 This value is used when you are using an image
   * to create the virtual machine. If you are using a platform image, you also use the
   * imageReference element described above. If you are using a marketplace image, you  also use
   * the plan element previously described. Possible values include: 'FromImage', 'Empty', 'Attach'
   */
  createOption: DiskCreateOptionTypes;
  /**
   * Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite
   * the size of the disk in a virtual machine image. <br><br> This value cannot be larger than
   * 1023 GB
   */
  diskSizeGB?: number;
  /**
   * The managed disk parameters.
   */
  managedDisk?: ManagedDiskParameters;
}

/**
 * Describes a data disk.
 */
export interface DataDisk {
  /**
   * Specifies the logical unit number of the data disk. This value is used to identify data disks
   * within the VM and therefore must be unique for each data disk attached to a VM.
   */
  lun: number;
  /**
   * The disk name.
   */
  name?: string;
  /**
   * The virtual hard disk.
   */
  vhd?: VirtualHardDisk;
  /**
   * The source user image virtual hard disk. The virtual hard disk will be copied before being
   * attached to the virtual machine. If SourceImage is provided, the destination virtual hard
   * drive must not exist.
   */
  image?: VirtualHardDisk;
  /**
   * Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br>
   * **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None for Standard storage. ReadOnly
   * for Premium storage**. Possible values include: 'None', 'ReadOnly', 'ReadWrite'
   */
  caching?: CachingTypes;
  /**
   * Specifies whether writeAccelerator should be enabled or disabled on the disk.
   */
  writeAcceleratorEnabled?: boolean;
  /**
   * Specifies how the virtual machine should be created.<br><br> Possible values are:<br><br>
   * **Attach** \u2013 This value is used when you are using a specialized disk to create the
   * virtual machine.<br><br> **FromImage** \u2013 This value is used when you are using an image
   * to create the virtual machine. If you are using a platform image, you also use the
   * imageReference element described above. If you are using a marketplace image, you  also use
   * the plan element previously described. Possible values include: 'FromImage', 'Empty', 'Attach'
   */
  createOption: DiskCreateOptionTypes;
  /**
   * Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite
   * the size of the disk in a virtual machine image. <br><br> This value cannot be larger than
   * 1023 GB
   */
  diskSizeGB?: number;
  /**
   * The managed disk parameters.
   */
  managedDisk?: ManagedDiskParameters;
  /**
   * Specifies whether the data disk is in process of detachment from the
   * VirtualMachine/VirtualMachineScaleset
   */
  toBeDetached?: boolean;
  /**
   * Specifies the Read-Write IOPS for the managed disk when StorageAccountType is UltraSSD_LRS.
   * Returned only for VirtualMachine ScaleSet VM disks. Can be updated only via updates to the
   * VirtualMachine Scale Set.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly diskIOPSReadWrite?: number;
  /**
   * Specifies the bandwidth in MB per second for the managed disk when StorageAccountType is
   * UltraSSD_LRS. Returned only for VirtualMachine ScaleSet VM disks. Can be updated only via
   * updates to the VirtualMachine Scale Set.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly diskMBpsReadWrite?: number;
  /**
   * Specifies the detach behavior to be used while detaching a disk or which is already in the
   * process of detachment from the virtual machine. Supported values: **ForceDetach**. <br><br>
   * detachOption: **ForceDetach** is applicable only for managed data disks. If a previous
   * detachment attempt of the data disk did not complete due to an unexpected failure from the
   * virtual machine and the disk is still not released then use force-detach as a last resort
   * option to detach the disk forcibly from the VM. All writes might not have been flushed when
   * using this detach behavior. <br><br> This feature is still in preview mode and is not
   * supported for VirtualMachineScaleSet. To force-detach a data disk update toBeDetached to
   * 'true' along with setting detachOption: 'ForceDetach'. Possible values include: 'ForceDetach'
   */
  detachOption?: DiskDetachOptionTypes;
}

/**
 * Specifies the storage settings for the virtual machine disks.
 */
export interface StorageProfile {
  /**
   * Specifies information about the image to use. You can specify information about platform
   * images, marketplace images, or virtual machine images. This element is required when you want
   * to use a platform image, marketplace image, or virtual machine image, but is not used in other
   * creation operations.
   */
  imageReference?: ImageReference;
  /**
   * Specifies information about the operating system disk used by the virtual machine. <br><br>
   * For more information about disks, see [About disks and VHDs for Azure virtual
   * machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
   */
  osDisk?: OSDisk;
  /**
   * Specifies the parameters that are used to add a data disk to a virtual machine. <br><br> For
   * more information about disks, see [About disks and VHDs for Azure virtual
   * machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
   */
  dataDisks?: DataDisk[];
}

/**
 * Specifies the security settings like secure boot and vTPM used while creating the virtual
 * machine. <br><br>Minimum api-version: 2020-12-01
 */
export interface UefiSettings {
  /**
   * Specifies whether secure boot should be enabled on the virtual machine. <br><br>Minimum
   * api-version: 2020-12-01
   */
  secureBootEnabled?: boolean;
  /**
   * Specifies whether vTPM should be enabled on the virtual machine. <br><br>Minimum api-version:
   * 2020-12-01
   */
  vTpmEnabled?: boolean;
}

/**
 * Specifies the Security profile settings for the virtual machine or virtual machine scale set.
 */
export interface SecurityProfile {
  /**
   * Specifies the security settings like secure boot and vTPM used while creating the virtual
   * machine. <br><br>Minimum api-version: 2020-12-01
   */
  uefiSettings?: UefiSettings;
  /**
   * This property can be used by user in the request to enable or disable the Host Encryption for
   * the virtual machine or virtual machine scale set. This will enable the encryption for all the
   * disks including Resource/Temp disk at host itself. <br><br> Default: The Encryption at host
   * will be disabled unless this property is set to true for the resource.
   */
  encryptionAtHost?: boolean;
  /**
   * Specifies the SecurityType of the virtual machine. It is set as TrustedLaunch to enable
   * UefiSettings. <br><br> Default: UefiSettings will not be enabled unless this property is set
   * as TrustedLaunch. Possible values include: 'TrustedLaunch'
   */
  securityType?: SecurityTypes;
}

/**
 * Enables or disables a capability on the virtual machine or virtual machine scale set.
 */
export interface AdditionalCapabilities {
  /**
   * The flag that enables or disables a capability to have one or more managed data disks with
   * UltraSSD_LRS storage account type on the VM or VMSS. Managed disks with storage account type
   * UltraSSD_LRS can be added to a virtual machine or virtual machine scale set only if this
   * property is enabled.
   */
  ultraSSDEnabled?: boolean;
}

/**
 * Specifies additional XML formatted information that can be included in the Unattend.xml file,
 * which is used by Windows Setup. Contents are defined by setting name, component name, and the
 * pass in which the content is applied.
 */
export interface AdditionalUnattendContent {
  /**
   * The pass name. Currently, the only allowable value is OobeSystem. Possible values include:
   * 'OobeSystem'
   */
  passName?: PassNames;
  /**
   * The component name. Currently, the only allowable value is Microsoft-Windows-Shell-Setup.
   * Possible values include: 'Microsoft-Windows-Shell-Setup'
   */
  componentName?: ComponentNames;
  /**
   * Specifies the name of the setting to which the content applies. Possible values are:
   * FirstLogonCommands and AutoLogon. Possible values include: 'AutoLogon', 'FirstLogonCommands'
   */
  settingName?: SettingNames;
  /**
   * Specifies the XML formatted content that is added to the unattend.xml file for the specified
   * path and component. The XML must be less than 4KB and must include the root element for the
   * setting or feature that is being inserted.
   */
  content?: string;
}

/**
 * Describes Protocol and thumbprint of Windows Remote Management listener
 */
export interface WinRMListener {
  /**
   * Specifies the protocol of WinRM listener. <br><br> Possible values are: <br>**http** <br><br>
   * **https**. Possible values include: 'Http', 'Https'
   */
  protocol?: ProtocolTypes;
  /**
   * This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a
   * secret to the Key Vault, see [Add a key or secret to the key
   * vault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add). In this case,
   * your certificate needs to be It is the Base64 encoding of the following JSON Object which is
   * encoded in UTF-8: <br><br> {<br>  "data":"<Base64-encoded-certificate>",<br>
   * "dataType":"pfx",<br>  "password":"<pfx-file-password>"<br>}
   */
  certificateUrl?: string;
}

/**
 * Describes Windows Remote Management configuration of the VM
 */
export interface WinRMConfiguration {
  /**
   * The list of Windows Remote Management listeners
   */
  listeners?: WinRMListener[];
}

/**
 * Specifies settings related to VM Guest Patching on Windows.
 */
export interface PatchSettings {
  /**
   * Specifies the mode of VM Guest Patching to IaaS virtual machine.<br /><br /> Possible values
   * are:<br /><br /> **Manual** - You  control the application of patches to a virtual machine.
   * You do this by applying patches manually inside the VM. In this mode, automatic updates are
   * disabled; the property WindowsConfiguration.enableAutomaticUpdates must be false<br /><br />
   * **AutomaticByOS** - The virtual machine will automatically be updated by the OS. The property
   * WindowsConfiguration.enableAutomaticUpdates must be true. <br /><br /> **AutomaticByPlatform**
   * - the virtual machine will automatically updated by the platform. The properties
   * provisionVMAgent and WindowsConfiguration.enableAutomaticUpdates must be true. Possible values
   * include: 'Manual', 'AutomaticByOS', 'AutomaticByPlatform'
   */
  patchMode?: WindowsVMGuestPatchMode;
  /**
   * Enables customers to patch their Azure VMs without requiring a reboot. For enableHotpatching,
   * the 'provisionVMAgent' must be set to true and 'patchMode' must be set to
   * 'AutomaticByPlatform'.
   */
  enableHotpatching?: boolean;
}

/**
 * Specifies Windows operating system settings on the virtual machine.
 */
export interface WindowsConfiguration {
  /**
   * Indicates whether virtual machine agent should be provisioned on the virtual machine. <br><br>
   * When this property is not specified in the request body, default behavior is to set it to
   * true.  This will ensure that VM Agent is installed on the VM so that extensions can be added
   * to the VM later.
   */
  provisionVMAgent?: boolean;
  /**
   * Indicates whether Automatic Updates is enabled for the Windows virtual machine. Default value
   * is true. <br><br> For virtual machine scale sets, this property can be updated and updates
   * will take effect on OS reprovisioning.
   */
  enableAutomaticUpdates?: boolean;
  /**
   * Specifies the time zone of the virtual machine. e.g. "Pacific Standard Time". <br><br>
   * Possible values can be
   * [TimeZoneInfo.Id](https://docs.microsoft.com/en-us/dotnet/api/system.timezoneinfo.id?#System_TimeZoneInfo_Id)
   * value from time zones returned by
   * [TimeZoneInfo.GetSystemTimeZones](https://docs.microsoft.com/en-us/dotnet/api/system.timezoneinfo.getsystemtimezones).
   */
  timeZone?: string;
  /**
   * Specifies additional base-64 encoded XML formatted information that can be included in the
   * Unattend.xml file, which is used by Windows Setup.
   */
  additionalUnattendContent?: AdditionalUnattendContent[];
  /**
   * [Preview Feature] Specifies settings related to VM Guest Patching on Windows.
   */
  patchSettings?: PatchSettings;
  /**
   * Specifies the Windows Remote Management listeners. This enables remote Windows PowerShell.
   */
  winRM?: WinRMConfiguration;
}

/**
 * Contains information about SSH certificate public key and the path on the Linux VM where the
 * public key is placed.
 */
export interface SshPublicKey {
  /**
   * Specifies the full path on the created VM where ssh public key is stored. If the file already
   * exists, the specified key is appended to the file. Example: /home/user/.ssh/authorized_keys
   */
  path?: string;
  /**
   * SSH public key certificate used to authenticate with the VM through ssh. The key needs to be
   * at least 2048-bit and in ssh-rsa format. <br><br> For creating ssh keys, see [Create SSH keys
   * on Linux and Mac for Linux VMs in
   * Azure](https://docs.microsoft.com/en-us/azure/virtual-machines/linux/mac-create-ssh-keys?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json).
   */
  keyData?: string;
}

/**
 * SSH configuration for Linux based VMs running on Azure
 */
export interface SshConfiguration {
  /**
   * The list of SSH public keys used to authenticate with linux based VMs.
   */
  publicKeys?: SshPublicKey[];
}

/**
 * Specifies settings related to VM Guest Patching on Linux.
 */
export interface LinuxPatchSettings {
  /**
   * Specifies the mode of VM Guest Patching to IaaS virtual machine.<br /><br /> Possible values
   * are:<br /><br /> **ImageDefault** - The virtual machine's default patching configuration is
   * used. <br /><br /> **AutomaticByPlatform** - The virtual machine will be automatically updated
   * by the platform. The property provisionVMAgent must be true. Possible values include:
   * 'ImageDefault', 'AutomaticByPlatform'
   */
  patchMode?: LinuxVMGuestPatchMode;
}

/**
 * Specifies the Linux operating system settings on the virtual machine. <br><br>For a list of
 * supported Linux distributions, see [Linux on Azure-Endorsed
 * Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-endorsed-distros?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
 * <br><br> For running non-endorsed distributions, see [Information for Non-Endorsed
 * Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-create-upload-generic?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json).
 */
export interface LinuxConfiguration {
  /**
   * Specifies whether password authentication should be disabled.
   */
  disablePasswordAuthentication?: boolean;
  /**
   * Specifies the ssh key configuration for a Linux OS.
   */
  ssh?: SshConfiguration;
  /**
   * Indicates whether virtual machine agent should be provisioned on the virtual machine. <br><br>
   * When this property is not specified in the request body, default behavior is to set it to
   * true.  This will ensure that VM Agent is installed on the VM so that extensions can be added
   * to the VM later.
   */
  provisionVMAgent?: boolean;
  /**
   * [Preview Feature] Specifies settings related to VM Guest Patching on Linux.
   */
  patchSettings?: LinuxPatchSettings;
}

/**
 * Describes a single certificate reference in a Key Vault, and where the certificate should reside
 * on the VM.
 */
export interface VaultCertificate {
  /**
   * This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a
   * secret to the Key Vault, see [Add a key or secret to the key
   * vault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add). In this case,
   * your certificate needs to be It is the Base64 encoding of the following JSON Object which is
   * encoded in UTF-8: <br><br> {<br>  "data":"<Base64-encoded-certificate>",<br>
   * "dataType":"pfx",<br>  "password":"<pfx-file-password>"<br>}
   */
  certificateUrl?: string;
  /**
   * For Windows VMs, specifies the certificate store on the Virtual Machine to which the
   * certificate should be added. The specified certificate store is implicitly in the LocalMachine
   * account. <br><br>For Linux VMs, the certificate file is placed under the /var/lib/waagent
   * directory, with the file name &lt;UppercaseThumbprint&gt;.crt for the X509 certificate file
   * and &lt;UppercaseThumbprint&gt;.prv for private key. Both of these files are .pem formatted.
   */
  certificateStore?: string;
}

/**
 * Describes a set of certificates which are all in the same Key Vault.
 */
export interface VaultSecretGroup {
  /**
   * The relative URL of the Key Vault containing all of the certificates in VaultCertificates.
   */
  sourceVault?: SubResource;
  /**
   * The list of key vault references in SourceVault which contain certificates.
   */
  vaultCertificates?: VaultCertificate[];
}

/**
 * Specifies the operating system settings for the virtual machine. Some of the settings cannot be
 * changed once VM is provisioned.
 */
export interface OSProfile {
  /**
   * Specifies the host OS name of the virtual machine. <br><br> This name cannot be updated after
   * the VM is created. <br><br> **Max-length (Windows):** 15 characters <br><br> **Max-length
   * (Linux):** 64 characters. <br><br> For naming conventions and restrictions see [Azure
   * infrastructure services implementation
   * guidelines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-infrastructure-subscription-accounts-guidelines?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json#1-naming-conventions).
   */
  computerName?: string;
  /**
   * Specifies the name of the administrator account. <br><br> This property cannot be updated
   * after the VM is created. <br><br> **Windows-only restriction:** Cannot end in "." <br><br>
   * **Disallowed values:** "administrator", "admin", "user", "user1", "test", "user2", "test1",
   * "user3", "admin1", "1", "123", "a", "actuser", "adm", "admin2", "aspnet", "backup", "console",
   * "david", "guest", "john", "owner", "root", "server", "sql", "support", "support_388945a0",
   * "sys", "test2", "test3", "user4", "user5". <br><br> **Minimum-length (Linux):** 1  character
   * <br><br> **Max-length (Linux):** 64 characters <br><br> **Max-length (Windows):** 20
   * characters  <br><br><li> For root access to the Linux VM, see [Using root privileges on Linux
   * virtual machines in
   * Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-use-root-privileges?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)<br><li>
   * For a list of built-in system users on Linux that should not be used in this field, see
   * [Selecting User Names for Linux on
   * Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-usernames?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
   */
  adminUsername?: string;
  /**
   * Specifies the password of the administrator account. <br><br> **Minimum-length (Windows):** 8
   * characters <br><br> **Minimum-length (Linux):** 6 characters <br><br> **Max-length
   * (Windows):** 123 characters <br><br> **Max-length (Linux):** 72 characters <br><br>
   * **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled <br> Has lower
   * characters <br>Has upper characters <br> Has a digit <br> Has a special character (Regex match
   * [\W_]) <br><br> **Disallowed values:** "abc@123", "P@$$w0rd", "P@ssw0rd", "P@ssword123",
   * "Pa$$word", "pass@word1", "Password!", "Password1", "Password22", "iloveyou!" <br><br> For
   * resetting the password, see [How to reset the Remote Desktop service or its login password in
   * a Windows
   * VM](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-reset-rdp?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json)
   * <br><br> For resetting root password, see [Manage users, SSH, and check or repair disks on
   * Azure Linux VMs using the VMAccess
   * Extension](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-using-vmaccess-extension?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json#reset-root-password)
   */
  adminPassword?: string;
  /**
   * Specifies a base-64 encoded string of custom data. The base-64 encoded string is decoded to a
   * binary array that is saved as a file on the Virtual Machine. The maximum length of the binary
   * array is 65535 bytes. <br><br> **Note: Do not pass any secrets or passwords in customData
   * property** <br><br> This property cannot be updated after the VM is created. <br><br>
   * customData is passed to the VM to be saved as a file, for more information see [Custom Data on
   * Azure
   * VMs](https://azure.microsoft.com/en-us/blog/custom-data-and-cloud-init-on-windows-azure/)
   * <br><br> For using cloud-init for your Linux VM, see [Using cloud-init to customize a Linux VM
   * during
   * creation](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-using-cloud-init?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
   */
  customData?: string;
  /**
   * Specifies Windows operating system settings on the virtual machine.
   */
  windowsConfiguration?: WindowsConfiguration;
  /**
   * Specifies the Linux operating system settings on the virtual machine. <br><br>For a list of
   * supported Linux distributions, see [Linux on Azure-Endorsed
   * Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-endorsed-distros?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
   * <br><br> For running non-endorsed distributions, see [Information for Non-Endorsed
   * Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-create-upload-generic?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json).
   */
  linuxConfiguration?: LinuxConfiguration;
  /**
   * Specifies set of certificates that should be installed onto the virtual machine.
   */
  secrets?: VaultSecretGroup[];
  /**
   * Specifies whether extension operations should be allowed on the virtual machine. <br><br>This
   * may only be set to False when no extensions are present on the virtual machine.
   */
  allowExtensionOperations?: boolean;
  /**
   * Specifies whether the guest provision signal is required to infer provision success of the
   * virtual machine.  **Note: This property is for private testing only, and all customers must
   * not set the property to false.**
   */
  requireGuestProvisionSignal?: boolean;
}

/**
 * Specifies the configuration parameters for automatic repairs on the virtual machine scale set.
 */
export interface AutomaticRepairsPolicy {
  /**
   * Specifies whether automatic repairs should be enabled on the virtual machine scale set. The
   * default value is false.
   */
  enabled?: boolean;
  /**
   * The amount of time for which automatic repairs are suspended due to a state change on VM. The
   * grace time starts after the state change has completed. This helps avoid premature or
   * accidental repairs. The time duration should be specified in ISO 8601 format. The minimum
   * allowed grace period is 30 minutes (PT30M), which is also the default value. The maximum
   * allowed grace period is 90 minutes (PT90M).
   */
  gracePeriod?: string;
}

/**
 * Describes a network interface reference.
 */
export interface NetworkInterfaceReference extends SubResource {
  /**
   * Specifies the primary network interface in case the virtual machine has more than 1 network
   * interface.
   */
  primary?: boolean;
}

/**
 * Specifies the network interfaces of the virtual machine.
 */
export interface NetworkProfile {
  /**
   * Specifies the list of resource Ids for the network interfaces associated with the virtual
   * machine.
   */
  networkInterfaces?: NetworkInterfaceReference[];
}

/**
 * Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot
 * to diagnose VM status. <br><br> You can easily view the output of your console log. <br><br>
 * Azure also enables you to see a screenshot of the VM from the hypervisor.
 */
export interface BootDiagnostics {
  /**
   * Whether boot diagnostics should be enabled on the Virtual Machine.
   */
  enabled?: boolean;
  /**
   * Uri of the storage account to use for placing the console output and screenshot. <br><br>If
   * storageUri is not specified while enabling boot diagnostics, managed storage will be used.
   */
  storageUri?: string;
}

/**
 * Specifies the boot diagnostic settings state. <br><br>Minimum api-version: 2015-06-15.
 */
export interface DiagnosticsProfile {
  /**
   * Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot
   * to diagnose VM status. <br><br> You can easily view the output of your console log. <br><br>
   * Azure also enables you to see a screenshot of the VM from the hypervisor.
   */
  bootDiagnostics?: BootDiagnostics;
}

/**
 * Specifies the billing related details of a Azure Spot VM or VMSS. <br><br>Minimum api-version:
 * 2019-03-01.
 */
export interface BillingProfile {
  /**
   * Specifies the maximum price you are willing to pay for a Azure Spot VM/VMSS. This price is in
   * US Dollars. <br><br> This price will be compared with the current Azure Spot price for the VM
   * size. Also, the prices are compared at the time of create/update of Azure Spot VM/VMSS and the
   * operation will only succeed if  the maxPrice is greater than the current Azure Spot price.
   * <br><br> The maxPrice will also be used for evicting a Azure Spot VM/VMSS if the current Azure
   * Spot price goes beyond the maxPrice after creation of VM/VMSS. <br><br> Possible values are:
   * <br><br> - Any decimal value greater than zero. Example: 0.01538 <br><br> -1 – indicates
   * default price to be up-to on-demand. <br><br> You can set the maxPrice to -1 to indicate that
   * the Azure Spot VM/VMSS should not be evicted for price reasons. Also, the default max price is
   * -1 if it is not provided by you. <br><br>Minimum api-version: 2019-03-01.
   */
  maxPrice?: number;
}

/**
 * The instance view of a virtual machine extension handler.
 */
export interface VirtualMachineExtensionHandlerInstanceView {
  /**
   * Specifies the type of the extension; an example is "CustomScriptExtension".
   */
  type?: string;
  /**
   * Specifies the version of the script handler.
   */
  typeHandlerVersion?: string;
  /**
   * The extension handler status.
   */
  status?: InstanceViewStatus;
}

/**
 * The instance view of the VM Agent running on the virtual machine.
 */
export interface VirtualMachineAgentInstanceView {
  /**
   * The VM Agent full version.
   */
  vmAgentVersion?: string;
  /**
   * The virtual machine extension handler instance view.
   */
  extensionHandlers?: VirtualMachineExtensionHandlerInstanceView[];
  /**
   * The resource status information.
   */
  statuses?: InstanceViewStatus[];
}

/**
 * The instance view of the disk.
 */
export interface DiskInstanceView {
  /**
   * The disk name.
   */
  name?: string;
  /**
   * Specifies the encryption settings for the OS Disk. <br><br> Minimum api-version: 2015-06-15
   */
  encryptionSettings?: DiskEncryptionSettings[];
  /**
   * The resource status information.
   */
  statuses?: InstanceViewStatus[];
}

/**
 * The instance view of a virtual machine boot diagnostics.
 */
export interface BootDiagnosticsInstanceView {
  /**
   * The console screenshot blob URI. <br><br>NOTE: This will **not** be set if boot diagnostics is
   * currently enabled with managed storage.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly consoleScreenshotBlobUri?: string;
  /**
   * The serial console log blob Uri. <br><br>NOTE: This will **not** be set if boot diagnostics is
   * currently enabled with managed storage.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly serialConsoleLogBlobUri?: string;
  /**
   * The boot diagnostics status information for the VM. <br><br> NOTE: It will be set only if
   * there are errors encountered in enabling boot diagnostics.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: InstanceViewStatus;
}

/**
 * An interface representing VirtualMachineIdentityUserAssignedIdentitiesValue.
 */
export interface VirtualMachineIdentityUserAssignedIdentitiesValue {
  /**
   * The principal id of user assigned identity.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly principalId?: string;
  /**
   * The client id of user assigned identity.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly clientId?: string;
}

/**
 * Identity for the virtual machine.
 */
export interface VirtualMachineIdentity {
  /**
   * The principal id of virtual machine identity. This property will only be provided for a system
   * assigned identity.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly principalId?: string;
  /**
   * The tenant id associated with the virtual machine. This property will only be provided for a
   * system assigned identity.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly tenantId?: string;
  /**
   * The type of identity used for the virtual machine. The type 'SystemAssigned, UserAssigned'
   * includes both an implicitly created identity and a set of user assigned identities. The type
   * 'None' will remove any identities from the virtual machine. Possible values include:
   * 'SystemAssigned', 'UserAssigned', 'SystemAssigned, UserAssigned', 'None'
   */
  type?: ResourceIdentityType;
  /**
   * The list of user identities associated with the Virtual Machine. The user identity dictionary
   * key references will be ARM resource ids in the form:
   * '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
   */
  userAssignedIdentities?: { [propertyName: string]: VirtualMachineIdentityUserAssignedIdentitiesValue };
}

/**
 * Maintenance Operation Status.
 */
export interface MaintenanceRedeployStatus {
  /**
   * True, if customer is allowed to perform Maintenance.
   */
  isCustomerInitiatedMaintenanceAllowed?: boolean;
  /**
   * Start Time for the Pre Maintenance Window.
   */
  preMaintenanceWindowStartTime?: Date;
  /**
   * End Time for the Pre Maintenance Window.
   */
  preMaintenanceWindowEndTime?: Date;
  /**
   * Start Time for the Maintenance Window.
   */
  maintenanceWindowStartTime?: Date;
  /**
   * End Time for the Maintenance Window.
   */
  maintenanceWindowEndTime?: Date;
  /**
   * The Last Maintenance Operation Result Code. Possible values include: 'None', 'RetryLater',
   * 'MaintenanceAborted', 'MaintenanceCompleted'
   */
  lastOperationResultCode?: MaintenanceOperationResultCodeTypes;
  /**
   * Message returned for the last Maintenance Operation.
   */
  lastOperationMessage?: string;
}

/**
 * The health status of the VM.
 */
export interface VirtualMachineHealthStatus {
  /**
   * The health status information for the VM.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: InstanceViewStatus;
}

/**
 * Describes the properties of an virtual machine instance view for available patch summary.
 */
export interface AvailablePatchSummary {
  /**
   * The overall success or failure status of the operation. It remains "InProgress" until the
   * operation completes. At that point it will become "Unknown", "Failed", "Succeeded", or
   * "CompletedWithWarnings.". Possible values include: 'Unknown', 'InProgress', 'Failed',
   * 'Succeeded', 'CompletedWithWarnings'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: PatchOperationStatus;
  /**
   * The activity ID of the operation that produced this result. It is used to correlate across CRP
   * and extension logs.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly assessmentActivityId?: string;
  /**
   * The overall reboot status of the VM. It will be true when partially installed patches require
   * a reboot to complete installation but the reboot has not yet occurred.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly rebootPending?: boolean;
  /**
   * The number of critical or security patches that have been detected as available and not yet
   * installed.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly criticalAndSecurityPatchCount?: number;
  /**
   * The number of all available patches excluding critical and security.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly otherPatchCount?: number;
  /**
   * The UTC timestamp when the operation began.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly startTime?: Date;
  /**
   * The UTC timestamp when the operation began.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastModifiedTime?: Date;
  /**
   * The errors that were encountered during execution of the operation. The details array contains
   * the list of them.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly error?: ApiError;
}

/**
 * Describes the properties of the last installed patch summary.
 */
export interface LastPatchInstallationSummary {
  /**
   * The overall success or failure status of the operation. It remains "InProgress" until the
   * operation completes. At that point it will become "Unknown", "Failed", "Succeeded", or
   * "CompletedWithWarnings.". Possible values include: 'Unknown', 'InProgress', 'Failed',
   * 'Succeeded', 'CompletedWithWarnings'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: PatchOperationStatus;
  /**
   * The activity ID of the operation that produced this result. It is used to correlate across CRP
   * and extension logs.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly installationActivityId?: string;
  /**
   * Describes whether the operation ran out of time before it completed all its intended actions
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly maintenanceWindowExceeded?: boolean;
  /**
   * The number of all available patches but not going to be installed because it didn't match a
   * classification or inclusion list entry.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly notSelectedPatchCount?: number;
  /**
   * The number of all available patches but excluded explicitly by a customer-specified exclusion
   * list match.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly excludedPatchCount?: number;
  /**
   * The number of all available patches expected to be installed over the course of the patch
   * installation operation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly pendingPatchCount?: number;
  /**
   * The count of patches that successfully installed.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly installedPatchCount?: number;
  /**
   * The count of patches that failed installation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly failedPatchCount?: number;
  /**
   * The UTC timestamp when the operation began.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly startTime?: Date;
  /**
   * The UTC timestamp when the operation began.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastModifiedTime?: Date;
  /**
   * The errors that were encountered during execution of the operation. The details array contains
   * the list of them.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly error?: ApiError;
}

/**
 * The status of virtual machine patch operations.
 */
export interface VirtualMachinePatchStatus {
  /**
   * The available patch summary of the latest assessment operation for the virtual machine.
   */
  availablePatchSummary?: AvailablePatchSummary;
  /**
   * The installation summary of the latest installation operation for the virtual machine.
   */
  lastPatchInstallationSummary?: LastPatchInstallationSummary;
  /**
   * The enablement status of the specified patchMode
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly configurationStatuses?: InstanceViewStatus[];
}

/**
 * The instance view of a virtual machine.
 */
export interface VirtualMachineInstanceView {
  /**
   * Specifies the update domain of the virtual machine.
   */
  platformUpdateDomain?: number;
  /**
   * Specifies the fault domain of the virtual machine.
   */
  platformFaultDomain?: number;
  /**
   * The computer name assigned to the virtual machine.
   */
  computerName?: string;
  /**
   * The Operating System running on the virtual machine.
   */
  osName?: string;
  /**
   * The version of Operating System running on the virtual machine.
   */
  osVersion?: string;
  /**
   * Specifies the HyperVGeneration Type associated with a resource. Possible values include: 'V1',
   * 'V2'
   */
  hyperVGeneration?: HyperVGenerationType;
  /**
   * The Remote desktop certificate thumbprint.
   */
  rdpThumbPrint?: string;
  /**
   * The VM Agent running on the virtual machine.
   */
  vmAgent?: VirtualMachineAgentInstanceView;
  /**
   * The Maintenance Operation status on the virtual machine.
   */
  maintenanceRedeployStatus?: MaintenanceRedeployStatus;
  /**
   * The virtual machine disk information.
   */
  disks?: DiskInstanceView[];
  /**
   * The extensions information.
   */
  extensions?: VirtualMachineExtensionInstanceView[];
  /**
   * The health status for the VM.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly vmHealth?: VirtualMachineHealthStatus;
  /**
   * Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot
   * to diagnose VM status. <br><br> You can easily view the output of your console log. <br><br>
   * Azure also enables you to see a screenshot of the VM from the hypervisor.
   */
  bootDiagnostics?: BootDiagnosticsInstanceView;
  /**
   * Resource id of the dedicated host, on which the virtual machine is allocated through automatic
   * placement, when the virtual machine is associated with a dedicated host group that has
   * automatic placement enabled. <br><br>Minimum api-version: 2020-06-01.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly assignedHost?: string;
  /**
   * The resource status information.
   */
  statuses?: InstanceViewStatus[];
  /**
   * [Preview Feature] The status of virtual machine patch operations.
   */
  patchStatus?: VirtualMachinePatchStatus;
}

/**
 * Describes a Virtual Machine.
 */
export interface VirtualMachine extends Resource {
  /**
   * Specifies information about the marketplace image used to create the virtual machine. This
   * element is only used for marketplace images. Before you can use a marketplace image from an
   * API, you must enable the image for programmatic use.  In the Azure portal, find the
   * marketplace image that you want to use and then click **Want to deploy programmatically, Get
   * Started ->**. Enter any required information and then click **Save**.
   */
  plan?: Plan;
  /**
   * Specifies the hardware settings for the virtual machine.
   */
  hardwareProfile?: HardwareProfile;
  /**
   * Specifies the storage settings for the virtual machine disks.
   */
  storageProfile?: StorageProfile;
  /**
   * Specifies additional capabilities enabled or disabled on the virtual machine.
   */
  additionalCapabilities?: AdditionalCapabilities;
  /**
   * Specifies the operating system settings used while creating the virtual machine. Some of the
   * settings cannot be changed once VM is provisioned.
   */
  osProfile?: OSProfile;
  /**
   * Specifies the network interfaces of the virtual machine.
   */
  networkProfile?: NetworkProfile;
  /**
   * Specifies the Security related profile settings for the virtual machine.
   */
  securityProfile?: SecurityProfile;
  /**
   * Specifies the boot diagnostic settings state. <br><br>Minimum api-version: 2015-06-15.
   */
  diagnosticsProfile?: DiagnosticsProfile;
  /**
   * Specifies information about the availability set that the virtual machine should be assigned
   * to. Virtual machines specified in the same availability set are allocated to different nodes
   * to maximize availability. For more information about availability sets, see [Manage the
   * availability of virtual
   * machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-manage-availability?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
   * <br><br> For more information on Azure planned maintenance, see [Planned maintenance for
   * virtual machines in
   * Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-planned-maintenance?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json)
   * <br><br> Currently, a VM can only be added to availability set at creation time. The
   * availability set to which the VM is being added should be under the same resource group as the
   * availability set resource. An existing VM cannot be added to an availability set. <br><br>This
   * property cannot exist along with a non-null properties.virtualMachineScaleSet reference.
   */
  availabilitySet?: SubResource;
  /**
   * Specifies information about the virtual machine scale set that the virtual machine should be
   * assigned to. Virtual machines specified in the same virtual machine scale set are allocated to
   * different nodes to maximize availability. Currently, a VM can only be added to virtual machine
   * scale set at creation time. An existing VM cannot be added to a virtual machine scale set.
   * <br><br>This property cannot exist along with a non-null properties.availabilitySet reference.
   * <br><br>Minimum api‐version: 2019‐03‐01
   */
  virtualMachineScaleSet?: SubResource;
  /**
   * Specifies information about the proximity placement group that the virtual machine should be
   * assigned to. <br><br>Minimum api-version: 2018-04-01.
   */
  proximityPlacementGroup?: SubResource;
  /**
   * Specifies the priority for the virtual machine. <br><br>Minimum api-version: 2019-03-01.
   * Possible values include: 'Regular', 'Low', 'Spot'
   */
  priority?: VirtualMachinePriorityTypes;
  /**
   * Specifies the eviction policy for the Azure Spot virtual machine and Azure Spot scale set.
   * <br><br>For Azure Spot virtual machines, both 'Deallocate' and 'Delete' are supported and the
   * minimum api-version is 2019-03-01. <br><br>For Azure Spot scale sets, both 'Deallocate' and
   * 'Delete' are supported and the minimum api-version is 2017-10-30-preview. Possible values
   * include: 'Deallocate', 'Delete'
   */
  evictionPolicy?: VirtualMachineEvictionPolicyTypes;
  /**
   * Specifies the billing related details of a Azure Spot virtual machine. <br><br>Minimum
   * api-version: 2019-03-01.
   */
  billingProfile?: BillingProfile;
  /**
   * Specifies information about the dedicated host that the virtual machine resides in.
   * <br><br>Minimum api-version: 2018-10-01.
   */
  host?: SubResource;
  /**
   * Specifies information about the dedicated host group that the virtual machine resides in.
   * <br><br>Minimum api-version: 2020-06-01. <br><br>NOTE: User cannot specify both host and
   * hostGroup properties.
   */
  hostGroup?: SubResource;
  /**
   * The provisioning state, which only appears in the response.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: string;
  /**
   * The virtual machine instance view.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly instanceView?: VirtualMachineInstanceView;
  /**
   * Specifies that the image or disk that is being used was licensed on-premises. <br><br>
   * Possible values for Windows Server operating system are: <br><br> Windows_Client <br><br>
   * Windows_Server <br><br> Possible values for Linux Server operating system are: <br><br>
   * RHEL_BYOS (for RHEL) <br><br> SLES_BYOS (for SUSE) <br><br> For more information, see [Azure
   * Hybrid Use Benefit for Windows
   * Server](https://docs.microsoft.com/azure/virtual-machines/windows/hybrid-use-benefit-licensing)
   * <br><br> [Azure Hybrid Use Benefit for Linux
   * Server](https://docs.microsoft.com/azure/virtual-machines/linux/azure-hybrid-benefit-linux)
   * <br><br> Minimum api-version: 2015-06-15
   */
  licenseType?: string;
  /**
   * Specifies the VM unique ID which is a 128-bits identifier that is encoded and stored in all
   * Azure IaaS VMs SMBIOS and can be read using platform BIOS commands.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly vmId?: string;
  /**
   * Specifies the time alloted for all extensions to start. The time duration should be between 15
   * minutes and 120 minutes (inclusive) and should be specified in ISO 8601 format. The default
   * value is 90 minutes (PT1H30M). <br><br> Minimum api-version: 2020-06-01
   */
  extensionsTimeBudget?: string;
  /**
   * Specifies the scale set logical fault domain into which the Virtual Machine will be created.
   * By default, the Virtual Machine will by automatically assigned to a fault domain that best
   * maintains balance across available fault domains.<br><li>This is applicable only if the
   * 'virtualMachineScaleSet' property of this Virtual Machine is set.<li>The Virtual Machine Scale
   * Set that is referenced, must have 'platformFaultDomainCount' &gt; 1.<li>This property cannot
   * be updated once the Virtual Machine is created.<li>Fault domain assignment can be viewed in
   * the Virtual Machine Instance View.<br><br>Minimum api‐version: 2020‐12‐01
   */
  platformFaultDomain?: number;
  /**
   * The virtual machine child extension resources.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly resources?: VirtualMachineExtension[];
  /**
   * The identity of the virtual machine, if configured.
   */
  identity?: VirtualMachineIdentity;
  /**
   * The virtual machine zones.
   */
  zones?: string[];
  /**
   * The extended location of the Virtual Machine.
   */
  extendedLocation?: ExtendedLocation;
}

/**
 * Describes a Virtual Machine Update.
 */
export interface VirtualMachineUpdate extends UpdateResource {
  /**
   * Specifies information about the marketplace image used to create the virtual machine. This
   * element is only used for marketplace images. Before you can use a marketplace image from an
   * API, you must enable the image for programmatic use.  In the Azure portal, find the
   * marketplace image that you want to use and then click **Want to deploy programmatically, Get
   * Started ->**. Enter any required information and then click **Save**.
   */
  plan?: Plan;
  /**
   * Specifies the hardware settings for the virtual machine.
   */
  hardwareProfile?: HardwareProfile;
  /**
   * Specifies the storage settings for the virtual machine disks.
   */
  storageProfile?: StorageProfile;
  /**
   * Specifies additional capabilities enabled or disabled on the virtual machine.
   */
  additionalCapabilities?: AdditionalCapabilities;
  /**
   * Specifies the operating system settings used while creating the virtual machine. Some of the
   * settings cannot be changed once VM is provisioned.
   */
  osProfile?: OSProfile;
  /**
   * Specifies the network interfaces of the virtual machine.
   */
  networkProfile?: NetworkProfile;
  /**
   * Specifies the Security related profile settings for the virtual machine.
   */
  securityProfile?: SecurityProfile;
  /**
   * Specifies the boot diagnostic settings state. <br><br>Minimum api-version: 2015-06-15.
   */
  diagnosticsProfile?: DiagnosticsProfile;
  /**
   * Specifies information about the availability set that the virtual machine should be assigned
   * to. Virtual machines specified in the same availability set are allocated to different nodes
   * to maximize availability. For more information about availability sets, see [Manage the
   * availability of virtual
   * machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-manage-availability?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
   * <br><br> For more information on Azure planned maintenance, see [Planned maintenance for
   * virtual machines in
   * Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-planned-maintenance?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json)
   * <br><br> Currently, a VM can only be added to availability set at creation time. The
   * availability set to which the VM is being added should be under the same resource group as the
   * availability set resource. An existing VM cannot be added to an availability set. <br><br>This
   * property cannot exist along with a non-null properties.virtualMachineScaleSet reference.
   */
  availabilitySet?: SubResource;
  /**
   * Specifies information about the virtual machine scale set that the virtual machine should be
   * assigned to. Virtual machines specified in the same virtual machine scale set are allocated to
   * different nodes to maximize availability. Currently, a VM can only be added to virtual machine
   * scale set at creation time. An existing VM cannot be added to a virtual machine scale set.
   * <br><br>This property cannot exist along with a non-null properties.availabilitySet reference.
   * <br><br>Minimum api‐version: 2019‐03‐01
   */
  virtualMachineScaleSet?: SubResource;
  /**
   * Specifies information about the proximity placement group that the virtual machine should be
   * assigned to. <br><br>Minimum api-version: 2018-04-01.
   */
  proximityPlacementGroup?: SubResource;
  /**
   * Specifies the priority for the virtual machine. <br><br>Minimum api-version: 2019-03-01.
   * Possible values include: 'Regular', 'Low', 'Spot'
   */
  priority?: VirtualMachinePriorityTypes;
  /**
   * Specifies the eviction policy for the Azure Spot virtual machine and Azure Spot scale set.
   * <br><br>For Azure Spot virtual machines, both 'Deallocate' and 'Delete' are supported and the
   * minimum api-version is 2019-03-01. <br><br>For Azure Spot scale sets, both 'Deallocate' and
   * 'Delete' are supported and the minimum api-version is 2017-10-30-preview. Possible values
   * include: 'Deallocate', 'Delete'
   */
  evictionPolicy?: VirtualMachineEvictionPolicyTypes;
  /**
   * Specifies the billing related details of a Azure Spot virtual machine. <br><br>Minimum
   * api-version: 2019-03-01.
   */
  billingProfile?: BillingProfile;
  /**
   * Specifies information about the dedicated host that the virtual machine resides in.
   * <br><br>Minimum api-version: 2018-10-01.
   */
  host?: SubResource;
  /**
   * Specifies information about the dedicated host group that the virtual machine resides in.
   * <br><br>Minimum api-version: 2020-06-01. <br><br>NOTE: User cannot specify both host and
   * hostGroup properties.
   */
  hostGroup?: SubResource;
  /**
   * The provisioning state, which only appears in the response.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: string;
  /**
   * The virtual machine instance view.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly instanceView?: VirtualMachineInstanceView;
  /**
   * Specifies that the image or disk that is being used was licensed on-premises. <br><br>
   * Possible values for Windows Server operating system are: <br><br> Windows_Client <br><br>
   * Windows_Server <br><br> Possible values for Linux Server operating system are: <br><br>
   * RHEL_BYOS (for RHEL) <br><br> SLES_BYOS (for SUSE) <br><br> For more information, see [Azure
   * Hybrid Use Benefit for Windows
   * Server](https://docs.microsoft.com/azure/virtual-machines/windows/hybrid-use-benefit-licensing)
   * <br><br> [Azure Hybrid Use Benefit for Linux
   * Server](https://docs.microsoft.com/azure/virtual-machines/linux/azure-hybrid-benefit-linux)
   * <br><br> Minimum api-version: 2015-06-15
   */
  licenseType?: string;
  /**
   * Specifies the VM unique ID which is a 128-bits identifier that is encoded and stored in all
   * Azure IaaS VMs SMBIOS and can be read using platform BIOS commands.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly vmId?: string;
  /**
   * Specifies the time alloted for all extensions to start. The time duration should be between 15
   * minutes and 120 minutes (inclusive) and should be specified in ISO 8601 format. The default
   * value is 90 minutes (PT1H30M). <br><br> Minimum api-version: 2020-06-01
   */
  extensionsTimeBudget?: string;
  /**
   * Specifies the scale set logical fault domain into which the Virtual Machine will be created.
   * By default, the Virtual Machine will by automatically assigned to a fault domain that best
   * maintains balance across available fault domains.<br><li>This is applicable only if the
   * 'virtualMachineScaleSet' property of this Virtual Machine is set.<li>The Virtual Machine Scale
   * Set that is referenced, must have 'platformFaultDomainCount' &gt; 1.<li>This property cannot
   * be updated once the Virtual Machine is created.<li>Fault domain assignment can be viewed in
   * the Virtual Machine Instance View.<br><br>Minimum api‐version: 2020‐12‐01
   */
  platformFaultDomain?: number;
  /**
   * The identity of the virtual machine, if configured.
   */
  identity?: VirtualMachineIdentity;
  /**
   * The virtual machine zones.
   */
  zones?: string[];
}

/**
 * The configuration parameters used for performing automatic OS upgrade.
 */
export interface AutomaticOSUpgradePolicy {
  /**
   * Indicates whether OS upgrades should automatically be applied to scale set instances in a
   * rolling fashion when a newer version of the OS image becomes available. Default value is
   * false. <br><br> If this is set to true for Windows based scale sets,
   * [enableAutomaticUpdates](https://docs.microsoft.com/dotnet/api/microsoft.azure.management.compute.models.windowsconfiguration.enableautomaticupdates?view=azure-dotnet)
   * is automatically set to false and cannot be set to true.
   */
  enableAutomaticOSUpgrade?: boolean;
  /**
   * Whether OS image rollback feature should be disabled. Default value is false.
   */
  disableAutomaticRollback?: boolean;
}

/**
 * The configuration parameters used while performing a rolling upgrade.
 */
export interface RollingUpgradePolicy {
  /**
   * The maximum percent of total virtual machine instances that will be upgraded simultaneously by
   * the rolling upgrade in one batch. As this is a maximum, unhealthy instances in previous or
   * future batches can cause the percentage of instances in a batch to decrease to ensure higher
   * reliability. The default value for this parameter is 20%.
   */
  maxBatchInstancePercent?: number;
  /**
   * The maximum percentage of the total virtual machine instances in the scale set that can be
   * simultaneously unhealthy, either as a result of being upgraded, or by being found in an
   * unhealthy state by the virtual machine health checks before the rolling upgrade aborts. This
   * constraint will be checked prior to starting any batch. The default value for this parameter
   * is 20%.
   */
  maxUnhealthyInstancePercent?: number;
  /**
   * The maximum percentage of upgraded virtual machine instances that can be found to be in an
   * unhealthy state. This check will happen after each batch is upgraded. If this percentage is
   * ever exceeded, the rolling update aborts. The default value for this parameter is 20%.
   */
  maxUnhealthyUpgradedInstancePercent?: number;
  /**
   * The wait time between completing the update for all virtual machines in one batch and starting
   * the next batch. The time duration should be specified in ISO 8601 format. The default value is
   * 0 seconds (PT0S).
   */
  pauseTimeBetweenBatches?: string;
  /**
   * Allow VMSS to ignore AZ boundaries when constructing upgrade batches. Take into consideration
   * the Update Domain and maxBatchInstancePercent to determine the batch size.
   */
  enableCrossZoneUpgrade?: boolean;
  /**
   * Upgrade all unhealthy instances in a scale set before any healthy instances.
   */
  prioritizeUnhealthyInstances?: boolean;
}

/**
 * Describes an upgrade policy - automatic, manual, or rolling.
 */
export interface UpgradePolicy {
  /**
   * Specifies the mode of an upgrade to virtual machines in the scale set.<br /><br /> Possible
   * values are:<br /><br /> **Manual** - You  control the application of updates to virtual
   * machines in the scale set. You do this by using the manualUpgrade action.<br /><br />
   * **Automatic** - All virtual machines in the scale set are  automatically updated at the same
   * time. Possible values include: 'Automatic', 'Manual', 'Rolling'
   */
  mode?: UpgradeMode;
  /**
   * The configuration parameters used while performing a rolling upgrade.
   */
  rollingUpgradePolicy?: RollingUpgradePolicy;
  /**
   * Configuration parameters used for performing automatic OS Upgrade.
   */
  automaticOSUpgradePolicy?: AutomaticOSUpgradePolicy;
}

/**
 * Describes a scale-in policy for a virtual machine scale set.
 */
export interface ScaleInPolicy {
  /**
   * The rules to be followed when scaling-in a virtual machine scale set. <br><br> Possible values
   * are: <br><br> **Default** When a virtual machine scale set is scaled in, the scale set will
   * first be balanced across zones if it is a zonal scale set. Then, it will be balanced across
   * Fault Domains as far as possible. Within each Fault Domain, the virtual machines chosen for
   * removal will be the newest ones that are not protected from scale-in. <br><br> **OldestVM**
   * When a virtual machine scale set is being scaled-in, the oldest virtual machines that are not
   * protected from scale-in will be chosen for removal. For zonal virtual machine scale sets, the
   * scale set will first be balanced across zones. Within each zone, the oldest virtual machines
   * that are not protected will be chosen for removal. <br><br> **NewestVM** When a virtual
   * machine scale set is being scaled-in, the newest virtual machines that are not protected from
   * scale-in will be chosen for removal. For zonal virtual machine scale sets, the scale set will
   * first be balanced across zones. Within each zone, the newest virtual machines that are not
   * protected will be chosen for removal. <br><br>
   */
  rules?: VirtualMachineScaleSetScaleInRules[];
}

/**
 * Describes a image disk.
 */
export interface ImageDisk {
  /**
   * The snapshot.
   */
  snapshot?: SubResource;
  /**
   * The managedDisk.
   */
  managedDisk?: SubResource;
  /**
   * The Virtual Hard Disk.
   */
  blobUri?: string;
  /**
   * Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br>
   * **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None for Standard storage. ReadOnly
   * for Premium storage**. Possible values include: 'None', 'ReadOnly', 'ReadWrite'
   */
  caching?: CachingTypes;
  /**
   * Specifies the size of empty data disks in gigabytes. This element can be used to overwrite the
   * name of the disk in a virtual machine image. <br><br> This value cannot be larger than 1023 GB
   */
  diskSizeGB?: number;
  /**
   * Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can only be used
   * with data disks, it cannot be used with OS Disk. Possible values include: 'Standard_LRS',
   * 'Premium_LRS', 'StandardSSD_LRS', 'UltraSSD_LRS', 'Premium_ZRS', 'StandardSSD_ZRS'
   */
  storageAccountType?: StorageAccountTypes;
  /**
   * Specifies the customer managed disk encryption set resource id for the managed image disk.
   */
  diskEncryptionSet?: DiskEncryptionSetParameters;
}

/**
 * Describes an Operating System disk.
 */
export interface ImageOSDisk extends ImageDisk {
  /**
   * This property allows you to specify the type of the OS that is included in the disk if
   * creating a VM from a custom image. <br><br> Possible values are: <br><br> **Windows** <br><br>
   * **Linux**. Possible values include: 'Windows', 'Linux'
   */
  osType: OperatingSystemTypes;
  /**
   * The OS State. Possible values include: 'Generalized', 'Specialized'
   */
  osState: OperatingSystemStateTypes;
}

/**
 * Describes a data disk.
 */
export interface ImageDataDisk extends ImageDisk {
  /**
   * Specifies the logical unit number of the data disk. This value is used to identify data disks
   * within the VM and therefore must be unique for each data disk attached to a VM.
   */
  lun: number;
}

/**
 * Describes a storage profile.
 */
export interface ImageStorageProfile {
  /**
   * Specifies information about the operating system disk used by the virtual machine. <br><br>
   * For more information about disks, see [About disks and VHDs for Azure virtual
   * machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
   */
  osDisk?: ImageOSDisk;
  /**
   * Specifies the parameters that are used to add a data disk to a virtual machine. <br><br> For
   * more information about disks, see [About disks and VHDs for Azure virtual
   * machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
   */
  dataDisks?: ImageDataDisk[];
  /**
   * Specifies whether an image is zone resilient or not. Default is false. Zone resilient images
   * can be created only in regions that provide Zone Redundant Storage (ZRS).
   */
  zoneResilient?: boolean;
}

/**
 * The source user image virtual hard disk. The virtual hard disk will be copied before being
 * attached to the virtual machine. If SourceImage is provided, the destination virtual hard drive
 * must not exist.
 */
export interface Image extends Resource {
  /**
   * The source virtual machine from which Image is created.
   */
  sourceVirtualMachine?: SubResource;
  /**
   * Specifies the storage settings for the virtual machine disks.
   */
  storageProfile?: ImageStorageProfile;
  /**
   * The provisioning state.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: string;
  /**
   * Specifies the HyperVGenerationType of the VirtualMachine created from the image. From API
   * Version 2019-03-01 if the image source is a blob, then we need the user to specify the value,
   * if the source is managed resource like disk or snapshot, we may require the user to specify
   * the property if we cannot deduce it from the source managed resource. Possible values include:
   * 'V1', 'V2'
   */
  hyperVGeneration?: HyperVGenerationTypes;
  /**
   * The extended location of the Image.
   */
  extendedLocation?: ExtendedLocation;
}

/**
 * The source user image virtual hard disk. Only tags may be updated.
 */
export interface ImageUpdate extends UpdateResource {
  /**
   * The source virtual machine from which Image is created.
   */
  sourceVirtualMachine?: SubResource;
  /**
   * Specifies the storage settings for the virtual machine disks.
   */
  storageProfile?: ImageStorageProfile;
  /**
   * The provisioning state.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: string;
  /**
   * Specifies the HyperVGenerationType of the VirtualMachine created from the image. From API
   * Version 2019-03-01 if the image source is a blob, then we need the user to specify the value,
   * if the source is managed resource like disk or snapshot, we may require the user to specify
   * the property if we cannot deduce it from the source managed resource. Possible values include:
   * 'V1', 'V2'
   */
  hyperVGeneration?: HyperVGenerationTypes;
}

/**
 * An interface representing VirtualMachineScaleSetIdentityUserAssignedIdentitiesValue.
 */
export interface VirtualMachineScaleSetIdentityUserAssignedIdentitiesValue {
  /**
   * The principal id of user assigned identity.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly principalId?: string;
  /**
   * The client id of user assigned identity.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly clientId?: string;
}

/**
 * Identity for the virtual machine scale set.
 */
export interface VirtualMachineScaleSetIdentity {
  /**
   * The principal id of virtual machine scale set identity. This property will only be provided
   * for a system assigned identity.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly principalId?: string;
  /**
   * The tenant id associated with the virtual machine scale set. This property will only be
   * provided for a system assigned identity.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly tenantId?: string;
  /**
   * The type of identity used for the virtual machine scale set. The type 'SystemAssigned,
   * UserAssigned' includes both an implicitly created identity and a set of user assigned
   * identities. The type 'None' will remove any identities from the virtual machine scale set.
   * Possible values include: 'SystemAssigned', 'UserAssigned', 'SystemAssigned, UserAssigned',
   * 'None'
   */
  type?: ResourceIdentityType;
  /**
   * The list of user identities associated with the virtual machine scale set. The user identity
   * dictionary key references will be ARM resource ids in the form:
   * '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
   */
  userAssignedIdentities?: { [propertyName: string]: VirtualMachineScaleSetIdentityUserAssignedIdentitiesValue };
}

/**
 * Describes a virtual machine scale set OS profile.
 */
export interface VirtualMachineScaleSetOSProfile {
  /**
   * Specifies the computer name prefix for all of the virtual machines in the scale set. Computer
   * name prefixes must be 1 to 15 characters long.
   */
  computerNamePrefix?: string;
  /**
   * Specifies the name of the administrator account. <br><br> **Windows-only restriction:** Cannot
   * end in "." <br><br> **Disallowed values:** "administrator", "admin", "user", "user1", "test",
   * "user2", "test1", "user3", "admin1", "1", "123", "a", "actuser", "adm", "admin2", "aspnet",
   * "backup", "console", "david", "guest", "john", "owner", "root", "server", "sql", "support",
   * "support_388945a0", "sys", "test2", "test3", "user4", "user5". <br><br> **Minimum-length
   * (Linux):** 1  character <br><br> **Max-length (Linux):** 64 characters <br><br> **Max-length
   * (Windows):** 20 characters  <br><br><li> For root access to the Linux VM, see [Using root
   * privileges on Linux virtual machines in
   * Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-use-root-privileges?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)<br><li>
   * For a list of built-in system users on Linux that should not be used in this field, see
   * [Selecting User Names for Linux on
   * Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-usernames?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
   */
  adminUsername?: string;
  /**
   * Specifies the password of the administrator account. <br><br> **Minimum-length (Windows):** 8
   * characters <br><br> **Minimum-length (Linux):** 6 characters <br><br> **Max-length
   * (Windows):** 123 characters <br><br> **Max-length (Linux):** 72 characters <br><br>
   * **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled <br> Has lower
   * characters <br>Has upper characters <br> Has a digit <br> Has a special character (Regex match
   * [\W_]) <br><br> **Disallowed values:** "abc@123", "P@$$w0rd", "P@ssw0rd", "P@ssword123",
   * "Pa$$word", "pass@word1", "Password!", "Password1", "Password22", "iloveyou!" <br><br> For
   * resetting the password, see [How to reset the Remote Desktop service or its login password in
   * a Windows
   * VM](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-reset-rdp?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json)
   * <br><br> For resetting root password, see [Manage users, SSH, and check or repair disks on
   * Azure Linux VMs using the VMAccess
   * Extension](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-using-vmaccess-extension?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json#reset-root-password)
   */
  adminPassword?: string;
  /**
   * Specifies a base-64 encoded string of custom data. The base-64 encoded string is decoded to a
   * binary array that is saved as a file on the Virtual Machine. The maximum length of the binary
   * array is 65535 bytes. <br><br> For using cloud-init for your VM, see [Using cloud-init to
   * customize a Linux VM during
   * creation](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-using-cloud-init?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
   */
  customData?: string;
  /**
   * Specifies Windows operating system settings on the virtual machine.
   */
  windowsConfiguration?: WindowsConfiguration;
  /**
   * Specifies the Linux operating system settings on the virtual machine. <br><br>For a list of
   * supported Linux distributions, see [Linux on Azure-Endorsed
   * Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-endorsed-distros?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
   * <br><br> For running non-endorsed distributions, see [Information for Non-Endorsed
   * Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-create-upload-generic?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json).
   */
  linuxConfiguration?: LinuxConfiguration;
  /**
   * Specifies set of certificates that should be installed onto the virtual machines in the scale
   * set.
   */
  secrets?: VaultSecretGroup[];
}

/**
 * Describes a virtual machine scale set OS profile.
 */
export interface VirtualMachineScaleSetUpdateOSProfile {
  /**
   * A base-64 encoded string of custom data.
   */
  customData?: string;
  /**
   * The Windows Configuration of the OS profile.
   */
  windowsConfiguration?: WindowsConfiguration;
  /**
   * The Linux Configuration of the OS profile.
   */
  linuxConfiguration?: LinuxConfiguration;
  /**
   * The List of certificates for addition to the VM.
   */
  secrets?: VaultSecretGroup[];
}

/**
 * Describes the parameters of a ScaleSet managed disk.
 */
export interface VirtualMachineScaleSetManagedDiskParameters {
  /**
   * Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can only be used
   * with data disks, it cannot be used with OS Disk. Possible values include: 'Standard_LRS',
   * 'Premium_LRS', 'StandardSSD_LRS', 'UltraSSD_LRS', 'Premium_ZRS', 'StandardSSD_ZRS'
   */
  storageAccountType?: StorageAccountTypes;
  /**
   * Specifies the customer managed disk encryption set resource id for the managed disk.
   */
  diskEncryptionSet?: DiskEncryptionSetParameters;
}

/**
 * Describes a virtual machine scale set operating system disk.
 */
export interface VirtualMachineScaleSetOSDisk {
  /**
   * The disk name.
   */
  name?: string;
  /**
   * Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br>
   * **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None for Standard storage. ReadOnly
   * for Premium storage**. Possible values include: 'None', 'ReadOnly', 'ReadWrite'
   */
  caching?: CachingTypes;
  /**
   * Specifies whether writeAccelerator should be enabled or disabled on the disk.
   */
  writeAcceleratorEnabled?: boolean;
  /**
   * Specifies how the virtual machines in the scale set should be created.<br><br> The only
   * allowed value is: **FromImage** \u2013 This value is used when you are using an image to
   * create the virtual machine. If you are using a platform image, you also use the imageReference
   * element described above. If you are using a marketplace image, you  also use the plan element
   * previously described. Possible values include: 'FromImage', 'Empty', 'Attach'
   */
  createOption: DiskCreateOptionTypes;
  /**
   * Specifies the ephemeral disk Settings for the operating system disk used by the virtual
   * machine scale set.
   */
  diffDiskSettings?: DiffDiskSettings;
  /**
   * Specifies the size of the operating system disk in gigabytes. This element can be used to
   * overwrite the size of the disk in a virtual machine image. <br><br> This value cannot be
   * larger than 1023 GB
   */
  diskSizeGB?: number;
  /**
   * This property allows you to specify the type of the OS that is included in the disk if
   * creating a VM from user-image or a specialized VHD. <br><br> Possible values are: <br><br>
   * **Windows** <br><br> **Linux**. Possible values include: 'Windows', 'Linux'
   */
  osType?: OperatingSystemTypes;
  /**
   * Specifies information about the unmanaged user image to base the scale set on.
   */
  image?: VirtualHardDisk;
  /**
   * Specifies the container urls that are used to store operating system disks for the scale set.
   */
  vhdContainers?: string[];
  /**
   * The managed disk parameters.
   */
  managedDisk?: VirtualMachineScaleSetManagedDiskParameters;
}

/**
 * Describes virtual machine scale set operating system disk Update Object. This should be used for
 * Updating VMSS OS Disk.
 */
export interface VirtualMachineScaleSetUpdateOSDisk {
  /**
   * The caching type. Possible values include: 'None', 'ReadOnly', 'ReadWrite'
   */
  caching?: CachingTypes;
  /**
   * Specifies whether writeAccelerator should be enabled or disabled on the disk.
   */
  writeAcceleratorEnabled?: boolean;
  /**
   * Specifies the size of the operating system disk in gigabytes. This element can be used to
   * overwrite the size of the disk in a virtual machine image. <br><br> This value cannot be
   * larger than 1023 GB
   */
  diskSizeGB?: number;
  /**
   * The Source User Image VirtualHardDisk. This VirtualHardDisk will be copied before using it to
   * attach to the Virtual Machine. If SourceImage is provided, the destination VirtualHardDisk
   * should not exist.
   */
  image?: VirtualHardDisk;
  /**
   * The list of virtual hard disk container uris.
   */
  vhdContainers?: string[];
  /**
   * The managed disk parameters.
   */
  managedDisk?: VirtualMachineScaleSetManagedDiskParameters;
}

/**
 * Describes a virtual machine scale set data disk.
 */
export interface VirtualMachineScaleSetDataDisk {
  /**
   * The disk name.
   */
  name?: string;
  /**
   * Specifies the logical unit number of the data disk. This value is used to identify data disks
   * within the VM and therefore must be unique for each data disk attached to a VM.
   */
  lun: number;
  /**
   * Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br>
   * **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None for Standard storage. ReadOnly
   * for Premium storage**. Possible values include: 'None', 'ReadOnly', 'ReadWrite'
   */
  caching?: CachingTypes;
  /**
   * Specifies whether writeAccelerator should be enabled or disabled on the disk.
   */
  writeAcceleratorEnabled?: boolean;
  /**
   * The create option. Possible values include: 'FromImage', 'Empty', 'Attach'
   */
  createOption: DiskCreateOptionTypes;
  /**
   * Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite
   * the size of the disk in a virtual machine image. <br><br> This value cannot be larger than
   * 1023 GB
   */
  diskSizeGB?: number;
  /**
   * The managed disk parameters.
   */
  managedDisk?: VirtualMachineScaleSetManagedDiskParameters;
  /**
   * Specifies the Read-Write IOPS for the managed disk. Should be used only when
   * StorageAccountType is UltraSSD_LRS. If not specified, a default value would be assigned based
   * on diskSizeGB.
   */
  diskIOPSReadWrite?: number;
  /**
   * Specifies the bandwidth in MB per second for the managed disk. Should be used only when
   * StorageAccountType is UltraSSD_LRS. If not specified, a default value would be assigned based
   * on diskSizeGB.
   */
  diskMBpsReadWrite?: number;
}

/**
 * Describes a virtual machine scale set storage profile.
 */
export interface VirtualMachineScaleSetStorageProfile {
  /**
   * Specifies information about the image to use. You can specify information about platform
   * images, marketplace images, or virtual machine images. This element is required when you want
   * to use a platform image, marketplace image, or virtual machine image, but is not used in other
   * creation operations.
   */
  imageReference?: ImageReference;
  /**
   * Specifies information about the operating system disk used by the virtual machines in the
   * scale set. <br><br> For more information about disks, see [About disks and VHDs for Azure
   * virtual
   * machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
   */
  osDisk?: VirtualMachineScaleSetOSDisk;
  /**
   * Specifies the parameters that are used to add data disks to the virtual machines in the scale
   * set. <br><br> For more information about disks, see [About disks and VHDs for Azure virtual
   * machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
   */
  dataDisks?: VirtualMachineScaleSetDataDisk[];
}

/**
 * Describes a virtual machine scale set storage profile.
 */
export interface VirtualMachineScaleSetUpdateStorageProfile {
  /**
   * The image reference.
   */
  imageReference?: ImageReference;
  /**
   * The OS disk.
   */
  osDisk?: VirtualMachineScaleSetUpdateOSDisk;
  /**
   * The data disks.
   */
  dataDisks?: VirtualMachineScaleSetDataDisk[];
}

/**
 * The API entity reference.
 */
export interface ApiEntityReference {
  /**
   * The ARM resource id in the form of
   * /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/...
   */
  id?: string;
}

/**
 * Describes a virtual machines scale sets network configuration's DNS settings.
 */
export interface VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings {
  /**
   * The Domain name label.The concatenation of the domain name label and vm index will be the
   * domain name labels of the PublicIPAddress resources that will be created
   */
  domainNameLabel: string;
}

/**
 * Contains the IP tag associated with the public IP address.
 */
export interface VirtualMachineScaleSetIpTag {
  /**
   * IP tag type. Example: FirstPartyUsage.
   */
  ipTagType?: string;
  /**
   * IP tag associated with the public IP. Example: SQL, Storage etc.
   */
  tag?: string;
}

/**
 * Describes a virtual machines scale set IP Configuration's PublicIPAddress configuration
 */
export interface VirtualMachineScaleSetPublicIPAddressConfiguration {
  /**
   * The publicIP address configuration name.
   */
  name: string;
  /**
   * The idle timeout of the public IP address.
   */
  idleTimeoutInMinutes?: number;
  /**
   * The dns settings to be applied on the publicIP addresses .
   */
  dnsSettings?: VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings;
  /**
   * The list of IP tags associated with the public IP address.
   */
  ipTags?: VirtualMachineScaleSetIpTag[];
  /**
   * The PublicIPPrefix from which to allocate publicIP addresses.
   */
  publicIPPrefix?: SubResource;
  /**
   * Available from Api-Version 2019-07-01 onwards, it represents whether the specific
   * ipconfiguration is IPv4 or IPv6. Default is taken as IPv4. Possible values are: 'IPv4' and
   * 'IPv6'. Possible values include: 'IPv4', 'IPv6'
   */
  publicIPAddressVersion?: IPVersion;
}

/**
 * Describes a virtual machines scale set IP Configuration's PublicIPAddress configuration
 */
export interface VirtualMachineScaleSetUpdatePublicIPAddressConfiguration {
  /**
   * The publicIP address configuration name.
   */
  name?: string;
  /**
   * The idle timeout of the public IP address.
   */
  idleTimeoutInMinutes?: number;
  /**
   * The dns settings to be applied on the publicIP addresses .
   */
  dnsSettings?: VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings;
}

/**
 * Describes a virtual machine scale set network profile's IP configuration.
 */
export interface VirtualMachineScaleSetIPConfiguration extends SubResource {
  /**
   * The IP configuration name.
   */
  name: string;
  /**
   * Specifies the identifier of the subnet.
   */
  subnet?: ApiEntityReference;
  /**
   * Specifies the primary network interface in case the virtual machine has more than 1 network
   * interface.
   */
  primary?: boolean;
  /**
   * The publicIPAddressConfiguration.
   */
  publicIPAddressConfiguration?: VirtualMachineScaleSetPublicIPAddressConfiguration;
  /**
   * Available from Api-Version 2017-03-30 onwards, it represents whether the specific
   * ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.  Possible values are: 'IPv4' and
   * 'IPv6'. Possible values include: 'IPv4', 'IPv6'
   */
  privateIPAddressVersion?: IPVersion;
  /**
   * Specifies an array of references to backend address pools of application gateways. A scale set
   * can reference backend address pools of multiple application gateways. Multiple scale sets
   * cannot use the same application gateway.
   */
  applicationGatewayBackendAddressPools?: SubResource[];
  /**
   * Specifies an array of references to application security group.
   */
  applicationSecurityGroups?: SubResource[];
  /**
   * Specifies an array of references to backend address pools of load balancers. A scale set can
   * reference backend address pools of one public and one internal load balancer. Multiple scale
   * sets cannot use the same basic sku load balancer.
   */
  loadBalancerBackendAddressPools?: SubResource[];
  /**
   * Specifies an array of references to inbound Nat pools of the load balancers. A scale set can
   * reference inbound nat pools of one public and one internal load balancer. Multiple scale sets
   * cannot use the same basic sku load balancer.
   */
  loadBalancerInboundNatPools?: SubResource[];
}

/**
 * Describes a virtual machine scale set network profile's IP configuration. NOTE: The subnet of a
 * scale set may be modified as long as the original subnet and the new subnet are in the same
 * virtual network
 */
export interface VirtualMachineScaleSetUpdateIPConfiguration extends SubResource {
  /**
   * The IP configuration name.
   */
  name?: string;
  /**
   * The subnet.
   */
  subnet?: ApiEntityReference;
  /**
   * Specifies the primary IP Configuration in case the network interface has more than one IP
   * Configuration.
   */
  primary?: boolean;
  /**
   * The publicIPAddressConfiguration.
   */
  publicIPAddressConfiguration?: VirtualMachineScaleSetUpdatePublicIPAddressConfiguration;
  /**
   * Available from Api-Version 2017-03-30 onwards, it represents whether the specific
   * ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.  Possible values are: 'IPv4' and
   * 'IPv6'. Possible values include: 'IPv4', 'IPv6'
   */
  privateIPAddressVersion?: IPVersion;
  /**
   * The application gateway backend address pools.
   */
  applicationGatewayBackendAddressPools?: SubResource[];
  /**
   * Specifies an array of references to application security group.
   */
  applicationSecurityGroups?: SubResource[];
  /**
   * The load balancer backend address pools.
   */
  loadBalancerBackendAddressPools?: SubResource[];
  /**
   * The load balancer inbound nat pools.
   */
  loadBalancerInboundNatPools?: SubResource[];
}

/**
 * Describes a virtual machines scale sets network configuration's DNS settings.
 */
export interface VirtualMachineScaleSetNetworkConfigurationDnsSettings {
  /**
   * List of DNS servers IP addresses
   */
  dnsServers?: string[];
}

/**
 * Describes a virtual machine scale set network profile's network configurations.
 */
export interface VirtualMachineScaleSetNetworkConfiguration extends SubResource {
  /**
   * The network configuration name.
   */
  name: string;
  /**
   * Specifies the primary network interface in case the virtual machine has more than 1 network
   * interface.
   */
  primary?: boolean;
  /**
   * Specifies whether the network interface is accelerated networking-enabled.
   */
  enableAcceleratedNetworking?: boolean;
  /**
   * Specifies whether the network interface is FPGA networking-enabled.
   */
  enableFpga?: boolean;
  /**
   * The network security group.
   */
  networkSecurityGroup?: SubResource;
  /**
   * The dns settings to be applied on the network interfaces.
   */
  dnsSettings?: VirtualMachineScaleSetNetworkConfigurationDnsSettings;
  /**
   * Specifies the IP configurations of the network interface.
   */
  ipConfigurations: VirtualMachineScaleSetIPConfiguration[];
  /**
   * Whether IP forwarding enabled on this NIC.
   */
  enableIPForwarding?: boolean;
}

/**
 * Describes a virtual machine scale set network profile's network configurations.
 */
export interface VirtualMachineScaleSetUpdateNetworkConfiguration extends SubResource {
  /**
   * The network configuration name.
   */
  name?: string;
  /**
   * Whether this is a primary NIC on a virtual machine.
   */
  primary?: boolean;
  /**
   * Specifies whether the network interface is accelerated networking-enabled.
   */
  enableAcceleratedNetworking?: boolean;
  /**
   * Specifies whether the network interface is FPGA networking-enabled.
   */
  enableFpga?: boolean;
  /**
   * The network security group.
   */
  networkSecurityGroup?: SubResource;
  /**
   * The dns settings to be applied on the network interfaces.
   */
  dnsSettings?: VirtualMachineScaleSetNetworkConfigurationDnsSettings;
  /**
   * The virtual machine scale set IP Configuration.
   */
  ipConfigurations?: VirtualMachineScaleSetUpdateIPConfiguration[];
  /**
   * Whether IP forwarding enabled on this NIC.
   */
  enableIPForwarding?: boolean;
}

/**
 * Describes a virtual machine scale set network profile.
 */
export interface VirtualMachineScaleSetNetworkProfile {
  /**
   * A reference to a load balancer probe used to determine the health of an instance in the
   * virtual machine scale set. The reference will be in the form:
   * '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/probes/{probeName}'.
   */
  healthProbe?: ApiEntityReference;
  /**
   * The list of network configurations.
   */
  networkInterfaceConfigurations?: VirtualMachineScaleSetNetworkConfiguration[];
}

/**
 * Describes a virtual machine scale set network profile.
 */
export interface VirtualMachineScaleSetUpdateNetworkProfile {
  /**
   * A reference to a load balancer probe used to determine the health of an instance in the
   * virtual machine scale set. The reference will be in the form:
   * '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/probes/{probeName}'.
   */
  healthProbe?: ApiEntityReference;
  /**
   * The list of network configurations.
   */
  networkInterfaceConfigurations?: VirtualMachineScaleSetUpdateNetworkConfiguration[];
}

/**
 * Describes a Virtual Machine Scale Set Extension.
 */
export interface VirtualMachineScaleSetExtension extends SubResourceReadOnly {
  /**
   * The name of the extension.
   */
  name?: string;
  /**
   * Resource type
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * If a value is provided and is different from the previous value, the extension handler will be
   * forced to update even if the extension configuration has not changed.
   */
  forceUpdateTag?: string;
  /**
   * The name of the extension handler publisher.
   */
  publisher?: string;
  /**
   * Specifies the type of the extension; an example is "CustomScriptExtension".
   */
  type1?: string;
  /**
   * Specifies the version of the script handler.
   */
  typeHandlerVersion?: string;
  /**
   * Indicates whether the extension should use a newer minor version if one is available at
   * deployment time. Once deployed, however, the extension will not upgrade minor versions unless
   * redeployed, even with this property set to true.
   */
  autoUpgradeMinorVersion?: boolean;
  /**
   * Indicates whether the extension should be automatically upgraded by the platform if there is a
   * newer version of the extension available.
   */
  enableAutomaticUpgrade?: boolean;
  /**
   * Json formatted public settings for the extension.
   */
  settings?: any;
  /**
   * The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no
   * protected settings at all.
   */
  protectedSettings?: any;
  /**
   * The provisioning state, which only appears in the response.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: string;
  /**
   * Collection of extension names after which this extension needs to be provisioned.
   */
  provisionAfterExtensions?: string[];
}

/**
 * Describes a Virtual Machine Scale Set Extension.
 */
export interface VirtualMachineScaleSetExtensionUpdate extends SubResourceReadOnly {
  /**
   * The name of the extension.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Resource type
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * If a value is provided and is different from the previous value, the extension handler will be
   * forced to update even if the extension configuration has not changed.
   */
  forceUpdateTag?: string;
  /**
   * The name of the extension handler publisher.
   */
  publisher?: string;
  /**
   * Specifies the type of the extension; an example is "CustomScriptExtension".
   */
  type1?: string;
  /**
   * Specifies the version of the script handler.
   */
  typeHandlerVersion?: string;
  /**
   * Indicates whether the extension should use a newer minor version if one is available at
   * deployment time. Once deployed, however, the extension will not upgrade minor versions unless
   * redeployed, even with this property set to true.
   */
  autoUpgradeMinorVersion?: boolean;
  /**
   * Indicates whether the extension should be automatically upgraded by the platform if there is a
   * newer version of the extension available.
   */
  enableAutomaticUpgrade?: boolean;
  /**
   * Json formatted public settings for the extension.
   */
  settings?: any;
  /**
   * The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no
   * protected settings at all.
   */
  protectedSettings?: any;
  /**
   * The provisioning state, which only appears in the response.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: string;
  /**
   * Collection of extension names after which this extension needs to be provisioned.
   */
  provisionAfterExtensions?: string[];
}

/**
 * Describes a virtual machine scale set extension profile.
 */
export interface VirtualMachineScaleSetExtensionProfile {
  /**
   * The virtual machine scale set child extension resources.
   */
  extensions?: VirtualMachineScaleSetExtension[];
  /**
   * Specifies the time alloted for all extensions to start. The time duration should be between 15
   * minutes and 120 minutes (inclusive) and should be specified in ISO 8601 format. The default
   * value is 90 minutes (PT1H30M). <br><br> Minimum api-version: 2020-06-01
   */
  extensionsTimeBudget?: string;
}

/**
 * An interface representing TerminateNotificationProfile.
 */
export interface TerminateNotificationProfile {
  /**
   * Configurable length of time a Virtual Machine being deleted will have to potentially approve
   * the Terminate Scheduled Event before the event is auto approved (timed out). The configuration
   * must be specified in ISO 8601 format, the default value is 5 minutes (PT5M)
   */
  notBeforeTimeout?: string;
  /**
   * Specifies whether the Terminate Scheduled event is enabled or disabled.
   */
  enable?: boolean;
}

/**
 * An interface representing ScheduledEventsProfile.
 */
export interface ScheduledEventsProfile {
  /**
   * Specifies Terminate Scheduled Event related configurations.
   */
  terminateNotificationProfile?: TerminateNotificationProfile;
}

/**
 * Describes a virtual machine scale set virtual machine profile.
 */
export interface VirtualMachineScaleSetVMProfile {
  /**
   * Specifies the operating system settings for the virtual machines in the scale set.
   */
  osProfile?: VirtualMachineScaleSetOSProfile;
  /**
   * Specifies the storage settings for the virtual machine disks.
   */
  storageProfile?: VirtualMachineScaleSetStorageProfile;
  /**
   * Specifies properties of the network interfaces of the virtual machines in the scale set.
   */
  networkProfile?: VirtualMachineScaleSetNetworkProfile;
  /**
   * Specifies the Security related profile settings for the virtual machines in the scale set.
   */
  securityProfile?: SecurityProfile;
  /**
   * Specifies the boot diagnostic settings state. <br><br>Minimum api-version: 2015-06-15.
   */
  diagnosticsProfile?: DiagnosticsProfile;
  /**
   * Specifies a collection of settings for extensions installed on virtual machines in the scale
   * set.
   */
  extensionProfile?: VirtualMachineScaleSetExtensionProfile;
  /**
   * Specifies that the image or disk that is being used was licensed on-premises. <br><br>
   * Possible values for Windows Server operating system are: <br><br> Windows_Client <br><br>
   * Windows_Server <br><br> Possible values for Linux Server operating system are: <br><br>
   * RHEL_BYOS (for RHEL) <br><br> SLES_BYOS (for SUSE) <br><br> For more information, see [Azure
   * Hybrid Use Benefit for Windows
   * Server](https://docs.microsoft.com/azure/virtual-machines/windows/hybrid-use-benefit-licensing)
   * <br><br> [Azure Hybrid Use Benefit for Linux
   * Server](https://docs.microsoft.com/azure/virtual-machines/linux/azure-hybrid-benefit-linux)
   * <br><br> Minimum api-version: 2015-06-15
   */
  licenseType?: string;
  /**
   * Specifies the priority for the virtual machines in the scale set. <br><br>Minimum api-version:
   * 2017-10-30-preview. Possible values include: 'Regular', 'Low', 'Spot'
   */
  priority?: VirtualMachinePriorityTypes;
  /**
   * Specifies the eviction policy for the Azure Spot virtual machine and Azure Spot scale set.
   * <br><br>For Azure Spot virtual machines, both 'Deallocate' and 'Delete' are supported and the
   * minimum api-version is 2019-03-01. <br><br>For Azure Spot scale sets, both 'Deallocate' and
   * 'Delete' are supported and the minimum api-version is 2017-10-30-preview. Possible values
   * include: 'Deallocate', 'Delete'
   */
  evictionPolicy?: VirtualMachineEvictionPolicyTypes;
  /**
   * Specifies the billing related details of a Azure Spot VMSS. <br><br>Minimum api-version:
   * 2019-03-01.
   */
  billingProfile?: BillingProfile;
  /**
   * Specifies Scheduled Event related configurations.
   */
  scheduledEventsProfile?: ScheduledEventsProfile;
}

/**
 * Describes a virtual machine scale set virtual machine profile.
 */
export interface VirtualMachineScaleSetUpdateVMProfile {
  /**
   * The virtual machine scale set OS profile.
   */
  osProfile?: VirtualMachineScaleSetUpdateOSProfile;
  /**
   * The virtual machine scale set storage profile.
   */
  storageProfile?: VirtualMachineScaleSetUpdateStorageProfile;
  /**
   * The virtual machine scale set network profile.
   */
  networkProfile?: VirtualMachineScaleSetUpdateNetworkProfile;
  /**
   * The virtual machine scale set Security profile
   */
  securityProfile?: SecurityProfile;
  /**
   * The virtual machine scale set diagnostics profile.
   */
  diagnosticsProfile?: DiagnosticsProfile;
  /**
   * The virtual machine scale set extension profile.
   */
  extensionProfile?: VirtualMachineScaleSetExtensionProfile;
  /**
   * The license type, which is for bring your own license scenario.
   */
  licenseType?: string;
  /**
   * Specifies the billing related details of a Azure Spot VMSS. <br><br>Minimum api-version:
   * 2019-03-01.
   */
  billingProfile?: BillingProfile;
  /**
   * Specifies Scheduled Event related configurations.
   */
  scheduledEventsProfile?: ScheduledEventsProfile;
}

/**
 * Describes a Virtual Machine Scale Set.
 */
export interface VirtualMachineScaleSet extends Resource {
  /**
   * The virtual machine scale set sku.
   */
  sku?: Sku;
  /**
   * Specifies information about the marketplace image used to create the virtual machine. This
   * element is only used for marketplace images. Before you can use a marketplace image from an
   * API, you must enable the image for programmatic use.  In the Azure portal, find the
   * marketplace image that you want to use and then click **Want to deploy programmatically, Get
   * Started ->**. Enter any required information and then click **Save**.
   */
  plan?: Plan;
  /**
   * The upgrade policy.
   */
  upgradePolicy?: UpgradePolicy;
  /**
   * Policy for automatic repairs.
   */
  automaticRepairsPolicy?: AutomaticRepairsPolicy;
  /**
   * The virtual machine profile.
   */
  virtualMachineProfile?: VirtualMachineScaleSetVMProfile;
  /**
   * The provisioning state, which only appears in the response.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: string;
  /**
   * Specifies whether the Virtual Machine Scale Set should be overprovisioned.
   */
  overprovision?: boolean;
  /**
   * When Overprovision is enabled, extensions are launched only on the requested number of VMs
   * which are finally kept. This property will hence ensure that the extensions do not run on the
   * extra overprovisioned VMs.
   */
  doNotRunExtensionsOnOverprovisionedVMs?: boolean;
  /**
   * Specifies the ID which uniquely identifies a Virtual Machine Scale Set.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly uniqueId?: string;
  /**
   * When true this limits the scale set to a single placement group, of max size 100 virtual
   * machines. NOTE: If singlePlacementGroup is true, it may be modified to false. However, if
   * singlePlacementGroup is false, it may not be modified to true.
   */
  singlePlacementGroup?: boolean;
  /**
   * Whether to force strictly even Virtual Machine distribution cross x-zones in case there is
   * zone outage.
   */
  zoneBalance?: boolean;
  /**
   * Fault Domain count for each placement group.
   */
  platformFaultDomainCount?: number;
  /**
   * Specifies information about the proximity placement group that the virtual machine scale set
   * should be assigned to. <br><br>Minimum api-version: 2018-04-01.
   */
  proximityPlacementGroup?: SubResource;
  /**
   * Specifies information about the dedicated host group that the virtual machine scale set
   * resides in. <br><br>Minimum api-version: 2020-06-01.
   */
  hostGroup?: SubResource;
  /**
   * Specifies additional capabilities enabled or disabled on the Virtual Machines in the Virtual
   * Machine Scale Set. For instance: whether the Virtual Machines have the capability to support
   * attaching managed data disks with UltraSSD_LRS storage account type.
   */
  additionalCapabilities?: AdditionalCapabilities;
  /**
   * Specifies the scale-in policy that decides which virtual machines are chosen for removal when
   * a Virtual Machine Scale Set is scaled-in.
   */
  scaleInPolicy?: ScaleInPolicy;
  /**
   * Specifies the orchestration mode for the virtual machine scale set. Possible values include:
   * 'Uniform', 'Flexible'
   */
  orchestrationMode?: OrchestrationMode;
  /**
   * The identity of the virtual machine scale set, if configured.
   */
  identity?: VirtualMachineScaleSetIdentity;
  /**
   * The virtual machine scale set zones. NOTE: Availability zones can only be set when you create
   * the scale set
   */
  zones?: string[];
  /**
   * The extended location of the Virtual Machine Scale Set.
   */
  extendedLocation?: ExtendedLocation;
}

/**
 * Describes a Virtual Machine Scale Set VM Reimage Parameters.
 */
export interface VirtualMachineScaleSetVMReimageParameters extends VirtualMachineReimageParameters {
}

/**
 * Describes a Virtual Machine Scale Set VM Reimage Parameters.
 */
export interface VirtualMachineScaleSetReimageParameters extends VirtualMachineScaleSetVMReimageParameters {
  /**
   * The virtual machine scale set instance ids. Omitting the virtual machine scale set instance
   * ids will result in the operation being performed on all virtual machines in the virtual
   * machine scale set.
   */
  instanceIds?: string[];
}

/**
 * Describes a Virtual Machine Scale Set.
 */
export interface VirtualMachineScaleSetUpdate extends UpdateResource {
  /**
   * The virtual machine scale set sku.
   */
  sku?: Sku;
  /**
   * The purchase plan when deploying a virtual machine scale set from VM Marketplace images.
   */
  plan?: Plan;
  /**
   * The upgrade policy.
   */
  upgradePolicy?: UpgradePolicy;
  /**
   * Policy for automatic repairs.
   */
  automaticRepairsPolicy?: AutomaticRepairsPolicy;
  /**
   * The virtual machine profile.
   */
  virtualMachineProfile?: VirtualMachineScaleSetUpdateVMProfile;
  /**
   * Specifies whether the Virtual Machine Scale Set should be overprovisioned.
   */
  overprovision?: boolean;
  /**
   * When Overprovision is enabled, extensions are launched only on the requested number of VMs
   * which are finally kept. This property will hence ensure that the extensions do not run on the
   * extra overprovisioned VMs.
   */
  doNotRunExtensionsOnOverprovisionedVMs?: boolean;
  /**
   * When true this limits the scale set to a single placement group, of max size 100 virtual
   * machines. NOTE: If singlePlacementGroup is true, it may be modified to false. However, if
   * singlePlacementGroup is false, it may not be modified to true.
   */
  singlePlacementGroup?: boolean;
  /**
   * Specifies additional capabilities enabled or disabled on the Virtual Machines in the Virtual
   * Machine Scale Set. For instance: whether the Virtual Machines have the capability to support
   * attaching managed data disks with UltraSSD_LRS storage account type.
   */
  additionalCapabilities?: AdditionalCapabilities;
  /**
   * Specifies the scale-in policy that decides which virtual machines are chosen for removal when
   * a Virtual Machine Scale Set is scaled-in.
   */
  scaleInPolicy?: ScaleInPolicy;
  /**
   * Specifies information about the proximity placement group that the virtual machine scale set
   * should be assigned to. <br><br>Minimum api-version: 2018-04-01.
   */
  proximityPlacementGroup?: SubResource;
  /**
   * The identity of the virtual machine scale set, if configured.
   */
  identity?: VirtualMachineScaleSetIdentity;
}

/**
 * Specifies a list of virtual machine instance IDs from the VM scale set.
 */
export interface VirtualMachineScaleSetVMInstanceIDs {
  /**
   * The virtual machine scale set instance ids. Omitting the virtual machine scale set instance
   * ids will result in the operation being performed on all virtual machines in the virtual
   * machine scale set.
   */
  instanceIds?: string[];
}

/**
 * Specifies a list of virtual machine instance IDs from the VM scale set.
 */
export interface VirtualMachineScaleSetVMInstanceRequiredIDs {
  /**
   * The virtual machine scale set instance ids.
   */
  instanceIds: string[];
}

/**
 * The status code and count of the virtual machine scale set instance view status summary.
 */
export interface VirtualMachineStatusCodeCount {
  /**
   * The instance view status code.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly code?: string;
  /**
   * The number of instances having a particular status code.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly count?: number;
}

/**
 * Instance view statuses summary for virtual machines of a virtual machine scale set.
 */
export interface VirtualMachineScaleSetInstanceViewStatusesSummary {
  /**
   * The extensions information.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly statusesSummary?: VirtualMachineStatusCodeCount[];
}

/**
 * Extensions summary for virtual machines of a virtual machine scale set.
 */
export interface VirtualMachineScaleSetVMExtensionsSummary {
  /**
   * The extension name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The extensions information.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly statusesSummary?: VirtualMachineStatusCodeCount[];
}

/**
 * Summary for an orchestration service of a virtual machine scale set.
 */
export interface OrchestrationServiceSummary {
  /**
   * The name of the service. Possible values include: 'AutomaticRepairs',
   
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly serviceName?: OrchestrationServiceNames;
  /**
   * The current state of the service. Possible values include: 'NotRunning', 'Running',
   * 'Suspended'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly serviceState?: OrchestrationServiceState;
}

/**
 * The instance view of a virtual machine scale set.
 */
export interface VirtualMachineScaleSetInstanceView {
  /**
   * The instance view status summary for the virtual machine scale set.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly virtualMachine?: VirtualMachineScaleSetInstanceViewStatusesSummary;
  /**
   * The extensions information.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly extensions?: VirtualMachineScaleSetVMExtensionsSummary[];
  /**
   * The resource status information.
   */
  statuses?: InstanceViewStatus[];
  /**
   * The orchestration services information.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly orchestrationServices?: OrchestrationServiceSummary[];
}

/**
 * Describes scaling information of a sku.
 */
export interface VirtualMachineScaleSetSkuCapacity {
  /**
   * The minimum capacity.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly minimum?: number;
  /**
   * The maximum capacity that can be set.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly maximum?: number;
  /**
   * The default capacity.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly defaultCapacity?: number;
  /**
   * The scale type applicable to the sku. Possible values include: 'Automatic', 'None'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly scaleType?: VirtualMachineScaleSetSkuScaleType;
}

/**
 * Describes an available virtual machine scale set sku.
 */
export interface VirtualMachineScaleSetSku {
  /**
   * The type of resource the sku applies to.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly resourceType?: string;
  /**
   * The Sku.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly sku?: Sku;
  /**
   * Specifies the number of virtual machines in the scale set.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly capacity?: VirtualMachineScaleSetSkuCapacity;
}

/**
 * Information about rollback on failed VM instances after a OS Upgrade operation.
 */
export interface RollbackStatusInfo {
  /**
   * The number of instances which have been successfully rolled back.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly successfullyRolledbackInstanceCount?: number;
  /**
   * The number of instances which failed to rollback.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly failedRolledbackInstanceCount?: number;
  /**
   * Error details if OS rollback failed.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly rollbackError?: ApiError;
}

/**
 * Information about the current running state of the overall upgrade.
 */
export interface UpgradeOperationHistoryStatus {
  /**
   * Code indicating the current status of the upgrade. Possible values include: 'RollingForward',
   * 'Cancelled', 'Completed', 'Faulted'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly code?: UpgradeState;
  /**
   * Start time of the upgrade.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly startTime?: Date;
  /**
   * End time of the upgrade.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly endTime?: Date;
}

/**
 * Information about the number of virtual machine instances in each upgrade state.
 */
export interface RollingUpgradeProgressInfo {
  /**
   * The number of instances that have been successfully upgraded.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly successfulInstanceCount?: number;
  /**
   * The number of instances that have failed to be upgraded successfully.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly failedInstanceCount?: number;
  /**
   * The number of instances that are currently being upgraded.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly inProgressInstanceCount?: number;
  /**
   * The number of instances that have not yet begun to be upgraded.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly pendingInstanceCount?: number;
}

/**
 * Describes each OS upgrade on the Virtual Machine Scale Set.
 */
export interface UpgradeOperationHistoricalStatusInfoProperties {
  /**
   * Information about the overall status of the upgrade operation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly runningStatus?: UpgradeOperationHistoryStatus;
  /**
   * Counts of the VMs in each state.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly progress?: RollingUpgradeProgressInfo;
  /**
   * Error Details for this upgrade if there are any.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly error?: ApiError;
  /**
   * Invoker of the Upgrade Operation. Possible values include: 'Unknown', 'User', 'Platform'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly startedBy?: UpgradeOperationInvoker;
  /**
   * Image Reference details
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly targetImageReference?: ImageReference;
  /**
   * Information about OS rollback if performed
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly rollbackInfo?: RollbackStatusInfo;
}

/**
 * Virtual Machine Scale Set OS Upgrade History operation response.
 */
export interface UpgradeOperationHistoricalStatusInfo {
  /**
   * Information about the properties of the upgrade operation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly properties?: UpgradeOperationHistoricalStatusInfoProperties;
  /**
   * Resource type
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Resource location
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly location?: string;
}

/**
 * The instance view of a virtual machine scale set VM.
 */
export interface VirtualMachineScaleSetVMInstanceView {
  /**
   * The Update Domain count.
   */
  platformUpdateDomain?: number;
  /**
   * The Fault Domain count.
   */
  platformFaultDomain?: number;
  /**
   * The Remote desktop certificate thumbprint.
   */
  rdpThumbPrint?: string;
  /**
   * The VM Agent running on the virtual machine.
   */
  vmAgent?: VirtualMachineAgentInstanceView;
  /**
   * The Maintenance Operation status on the virtual machine.
   */
  maintenanceRedeployStatus?: MaintenanceRedeployStatus;
  /**
   * The disks information.
   */
  disks?: DiskInstanceView[];
  /**
   * The extensions information.
   */
  extensions?: VirtualMachineExtensionInstanceView[];
  /**
   * The health status for the VM.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly vmHealth?: VirtualMachineHealthStatus;
  /**
   * Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot
   * to diagnose VM status. <br><br> You can easily view the output of your console log. <br><br>
   * Azure also enables you to see a screenshot of the VM from the hypervisor.
   */
  bootDiagnostics?: BootDiagnosticsInstanceView;
  /**
   * The resource status information.
   */
  statuses?: InstanceViewStatus[];
  /**
   * Resource id of the dedicated host, on which the virtual machine is allocated through automatic
   * placement, when the virtual machine is associated with a dedicated host group that has
   * automatic placement enabled. <br><br>Minimum api-version: 2020-06-01.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly assignedHost?: string;
  /**
   * The placement group in which the VM is running. If the VM is deallocated it will not have a
   * placementGroupId.
   */
  placementGroupId?: string;
}

/**
 * Describes a virtual machine scale set VM network profile.
 */
export interface VirtualMachineScaleSetVMNetworkProfileConfiguration {
  /**
   * The list of network configurations.
   */
  networkInterfaceConfigurations?: VirtualMachineScaleSetNetworkConfiguration[];
}

/**
 * The protection policy of a virtual machine scale set VM.
 */
export interface VirtualMachineScaleSetVMProtectionPolicy {
  /**
   * Indicates that the virtual machine scale set VM shouldn't be considered for deletion during a
   * scale-in operation.
   */
  protectFromScaleIn?: boolean;
  /**
   * Indicates that model updates or actions (including scale-in) initiated on the virtual machine
   * scale set should not be applied to the virtual machine scale set VM.
   */
  protectFromScaleSetActions?: boolean;
}

/**
 * Describes a virtual machine scale set virtual machine.
 */
export interface VirtualMachineScaleSetVM extends Resource {
  /**
   * The virtual machine instance ID.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly instanceId?: string;
  /**
   * The virtual machine SKU.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly sku?: Sku;
  /**
   * Specifies whether the latest model has been applied to the virtual machine.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly latestModelApplied?: boolean;
  /**
   * Azure VM unique ID.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly vmId?: string;
  /**
   * The virtual machine instance view.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly instanceView?: VirtualMachineScaleSetVMInstanceView;
  /**
   * Specifies the hardware settings for the virtual machine.
   */
  hardwareProfile?: HardwareProfile;
  /**
   * Specifies the storage settings for the virtual machine disks.
   */
  storageProfile?: StorageProfile;
  /**
   * Specifies additional capabilities enabled or disabled on the virtual machine in the scale set.
   * For instance: whether the virtual machine has the capability to support attaching managed data
   * disks with UltraSSD_LRS storage account type.
   */
  additionalCapabilities?: AdditionalCapabilities;
  /**
   * Specifies the operating system settings for the virtual machine.
   */
  osProfile?: OSProfile;
  /**
   * Specifies the Security related profile settings for the virtual machine.
   */
  securityProfile?: SecurityProfile;
  /**
   * Specifies the network interfaces of the virtual machine.
   */
  networkProfile?: NetworkProfile;
  /**
   * Specifies the network profile configuration of the virtual machine.
   */
  networkProfileConfiguration?: VirtualMachineScaleSetVMNetworkProfileConfiguration;
  /**
   * Specifies the boot diagnostic settings state. <br><br>Minimum api-version: 2015-06-15.
   */
  diagnosticsProfile?: DiagnosticsProfile;
  /**
   * Specifies information about the availability set that the virtual machine should be assigned
   * to. Virtual machines specified in the same availability set are allocated to different nodes
   * to maximize availability. For more information about availability sets, see [Manage the
   * availability of virtual
   * machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-manage-availability?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
   * <br><br> For more information on Azure planned maintenance, see [Planned maintenance for
   * virtual machines in
   * Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-planned-maintenance?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json)
   * <br><br> Currently, a VM can only be added to availability set at creation time. An existing
   * VM cannot be added to an availability set.
   */
  availabilitySet?: SubResource;
  /**
   * The provisioning state, which only appears in the response.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: string;
  /**
   * Specifies that the image or disk that is being used was licensed on-premises. <br><br>
   * Possible values for Windows Server operating system are: <br><br> Windows_Client <br><br>
   * Windows_Server <br><br> Possible values for Linux Server operating system are: <br><br>
   * RHEL_BYOS (for RHEL) <br><br> SLES_BYOS (for SUSE) <br><br> For more information, see [Azure
   * Hybrid Use Benefit for Windows
   * Server](https://docs.microsoft.com/azure/virtual-machines/windows/hybrid-use-benefit-licensing)
   * <br><br> [Azure Hybrid Use Benefit for Linux
   * Server](https://docs.microsoft.com/azure/virtual-machines/linux/azure-hybrid-benefit-linux)
   * <br><br> Minimum api-version: 2015-06-15
   */
  licenseType?: string;
  /**
   * Specifies whether the model applied to the virtual machine is the model of the virtual machine
   * scale set or the customized model for the virtual machine.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly modelDefinitionApplied?: string;
  /**
   * Specifies the protection policy of the virtual machine.
   */
  protectionPolicy?: VirtualMachineScaleSetVMProtectionPolicy;
  /**
   * Specifies information about the marketplace image used to create the virtual machine. This
   * element is only used for marketplace images. Before you can use a marketplace image from an
   * API, you must enable the image for programmatic use.  In the Azure portal, find the
   * marketplace image that you want to use and then click **Want to deploy programmatically, Get
   * Started ->**. Enter any required information and then click **Save**.
   */
  plan?: Plan;
  /**
   * The virtual machine child extension resources.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly resources?: VirtualMachineExtension[];
  /**
   * The virtual machine zones.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly zones?: string[];
}

/**
 * Information about the current running state of the overall upgrade.
 */
export interface RollingUpgradeRunningStatus {
  /**
   * Code indicating the current status of the upgrade. Possible values include: 'RollingForward',
   * 'Cancelled', 'Completed', 'Faulted'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly code?: RollingUpgradeStatusCode;
  /**
   * Start time of the upgrade.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly startTime?: Date;
  /**
   * The last action performed on the rolling upgrade. Possible values include: 'Start', 'Cancel'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastAction?: RollingUpgradeActionType;
  /**
   * Last action time of the upgrade.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastActionTime?: Date;
}

/**
 * The status of the latest virtual machine scale set rolling upgrade.
 */
export interface RollingUpgradeStatusInfo extends Resource {
  /**
   * The rolling upgrade policies applied for this upgrade.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly policy?: RollingUpgradePolicy;
  /**
   * Information about the current running state of the overall upgrade.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly runningStatus?: RollingUpgradeRunningStatus;
  /**
   * Information about the number of virtual machine instances in each upgrade state.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly progress?: RollingUpgradeProgressInfo;
  /**
   * Error details for this upgrade, if there are any.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly error?: ApiError;
}

/**
 * Response after calling a manual recovery walk
 */
export interface RecoveryWalkResponse {
  /**
   * Whether the recovery walk was performed
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly walkPerformed?: boolean;
  /**
   * The next update domain that needs to be walked. Null means walk spanning all update domains
   * has been completed
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextPlatformUpdateDomain?: number;
}

/**
 * Api input base class for LogAnalytics Api.
 */
export interface LogAnalyticsInputBase {
  /**
   * SAS Uri of the logging blob container to which LogAnalytics Api writes output logs to.
   */
  blobContainerSasUri: string;
  /**
   * From time of the query
   */
  fromTime: Date;
  /**
   * To time of the query
   */
  toTime: Date;
  /**
   * Group query result by Throttle Policy applied.
   */
  groupByThrottlePolicy?: boolean;
  /**
   * Group query result by Operation Name.
   */
  groupByOperationName?: boolean;
  /**
   * Group query result by Resource Name.
   */
  groupByResourceName?: boolean;
  /**
   * Group query result by Client Application ID.
   */
  groupByClientApplicationId?: boolean;
  /**
   * Group query result by User Agent.
   */
  groupByUserAgent?: boolean;
}

/**
 * Api request input for LogAnalytics getRequestRateByInterval Api.
 */
export interface RequestRateByIntervalInput extends LogAnalyticsInputBase {
  /**
   * Interval value in minutes used to create LogAnalytics call rate logs. Possible values include:
   * 'ThreeMins', 'FiveMins', 'ThirtyMins', 'SixtyMins'
   */
  intervalLength: IntervalInMins;
}

/**
 * Api request input for LogAnalytics getThrottledRequests Api.
 */
export interface ThrottledRequestsInput extends LogAnalyticsInputBase {
}

/**
 * LogAnalytics output properties
 */
export interface LogAnalyticsOutput {
  /**
   * Output file Uri path to blob container.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly output?: string;
}

/**
 * LogAnalytics operation status response
 */
export interface LogAnalyticsOperationResult {
  /**
   * LogAnalyticsOutput
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly properties?: LogAnalyticsOutput;
}

/**
 * An interface representing VMScaleSetConvertToSinglePlacementGroupInput.
 */
export interface VMScaleSetConvertToSinglePlacementGroupInput {
  /**
   * Id of the placement group in which you want future virtual machine instances to be placed. To
   * query placement group Id, please use Virtual Machine Scale Set VMs - Get API. If not provided,
   * the platform will choose one with maximum number of virtual machine instances.
   */
  activePlacementGroupId?: string;
}

/**
 * The input for OrchestrationServiceState
 */
export interface OrchestrationServiceStateInput {
  /**
   * The name of the service. Possible values include: 'AutomaticRepairs',
   
   */
  serviceName: OrchestrationServiceNames;
  /**
   * The action to be performed. Possible values include: 'Resume', 'Suspend'
   */
  action: OrchestrationServiceStateAction;
}

/**
 * Describes the properties of a run command parameter.
 */
export interface RunCommandInputParameter {
  /**
   * The run command parameter name.
   */
  name: string;
  /**
   * The run command parameter value.
   */
  value: string;
}

/**
 * Capture Virtual Machine parameters.
 */
export interface RunCommandInput {
  /**
   * The run command id.
   */
  commandId: string;
  /**
   * Optional. The script to be executed.  When this value is given, the given script will override
   * the default script of the command.
   */
  script?: string[];
  /**
   * The run command parameters.
   */
  parameters?: RunCommandInputParameter[];
}

/**
 * Describes the properties of a run command parameter.
 */
export interface RunCommandParameterDefinition {
  /**
   * The run command parameter name.
   */
  name: string;
  /**
   * The run command parameter type.
   */
  type: string;
  /**
   * The run command parameter default value.
   */
  defaultValue?: string;
  /**
   * The run command parameter required. Default value: false.
   */
  required?: boolean;
}

/**
 * Describes the properties of a Run Command metadata.
 */
export interface RunCommandDocumentBase {
  /**
   * The VM run command schema.
   */
  schema: string;
  /**
   * The VM run command id.
   */
  id: string;
  /**
   * The Operating System type. Possible values include: 'Windows', 'Linux'
   */
  osType: OperatingSystemTypes;
  /**
   * The VM run command label.
   */
  label: string;
  /**
   * The VM run command description.
   */
  description: string;
}

/**
 * Describes the properties of a Run Command.
 */
export interface RunCommandDocument extends RunCommandDocumentBase {
  /**
   * The script to be executed.
   */
  script: string[];
  /**
   * The parameters used by the script.
   */
  parameters?: RunCommandParameterDefinition[];
}

/**
 * An interface representing RunCommandResult.
 */
export interface RunCommandResult {
  /**
   * Run command operation response.
   */
  value?: InstanceViewStatus[];
}

/**
 * The instance view of a virtual machine run command.
 */
export interface VirtualMachineRunCommandInstanceView {
  /**
   * Script execution status. Possible values include: 'Unknown', 'Pending', 'Running', 'Failed',
   * 'Succeeded', 'TimedOut', 'Canceled'
   */
  executionState?: ExecutionState;
  /**
   * Communicate script configuration errors or execution messages.
   */
  executionMessage?: string;
  /**
   * Exit code returned from script execution.
   */
  exitCode?: number;
  /**
   * Script output stream.
   */
  output?: string;
  /**
   * Script error stream.
   */
  error?: string;
  /**
   * Script start time.
   */
  startTime?: Date;
  /**
   * Script end time.
   */
  endTime?: Date;
  /**
   * The resource status information.
   */
  statuses?: InstanceViewStatus[];
}

/**
 * Describes the script sources for run command.
 */
export interface VirtualMachineRunCommandScriptSource {
  /**
   * Specifies the script content to be executed on the VM.
   */
  script?: string;
  /**
   * Specifies the script download location.
   */
  scriptUri?: string;
  /**
   * Specifies a commandId of predefined built-in script.
   */
  commandId?: string;
}

/**
 * Describes a Virtual Machine run command.
 */
export interface VirtualMachineRunCommand extends Resource {
  /**
   * The source of the run command script.
   */
  source?: VirtualMachineRunCommandScriptSource;
  /**
   * The parameters used by the script.
   */
  parameters?: RunCommandInputParameter[];
  /**
   * The parameters used by the script.
   */
  protectedParameters?: RunCommandInputParameter[];
  /**
   * Optional. If set to true, provisioning will complete as soon as the script starts and will not
   * wait for script to complete. Default value: false.
   */
  asyncExecution?: boolean;
  /**
   * Specifies the user account on the VM when executing the run command.
   */
  runAsUser?: string;
  /**
   * Specifies the user account password on the VM when executing the run command.
   */
  runAsPassword?: string;
  /**
   * The timeout in seconds to execute the run command.
   */
  timeoutInSeconds?: number;
  /**
   * Specifies the Azure storage blob where script output stream will be uploaded.
   */
  outputBlobUri?: string;
  /**
   * Specifies the Azure storage blob where script error stream will be uploaded.
   */
  errorBlobUri?: string;
  /**
   * The provisioning state, which only appears in the response.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: string;
  /**
   * The virtual machine run command instance view.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly instanceView?: VirtualMachineRunCommandInstanceView;
}

/**
 * Describes a Virtual Machine run command.
 */
export interface VirtualMachineRunCommandUpdate extends UpdateResource {
  /**
   * The source of the run command script.
   */
  source?: VirtualMachineRunCommandScriptSource;
  /**
   * The parameters used by the script.
   */
  parameters?: RunCommandInputParameter[];
  /**
   * The parameters used by the script.
   */
  protectedParameters?: RunCommandInputParameter[];
  /**
   * Optional. If set to true, provisioning will complete as soon as the script starts and will not
   * wait for script to complete. Default value: false.
   */
  asyncExecution?: boolean;
  /**
   * Specifies the user account on the VM when executing the run command.
   */
  runAsUser?: string;
  /**
   * Specifies the user account password on the VM when executing the run command.
   */
  runAsPassword?: string;
  /**
   * The timeout in seconds to execute the run command.
   */
  timeoutInSeconds?: number;
  /**
   * Specifies the Azure storage blob where script output stream will be uploaded.
   */
  outputBlobUri?: string;
  /**
   * Specifies the Azure storage blob where script error stream will be uploaded.
   */
  errorBlobUri?: string;
  /**
   * The provisioning state, which only appears in the response.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: string;
  /**
   * The virtual machine run command instance view.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly instanceView?: VirtualMachineRunCommandInstanceView;
}

/**
 * Describes scaling information of a SKU.
 */
export interface ResourceSkuCapacity {
  /**
   * The minimum capacity.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly minimum?: number;
  /**
   * The maximum capacity that can be set.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly maximum?: number;
  /**
   * The default capacity.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly default?: number;
  /**
   * The scale type applicable to the sku. Possible values include: 'Automatic', 'Manual', 'None'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly scaleType?: ResourceSkuCapacityScaleType;
}

/**
 * Describes metadata for retrieving price info.
 */
export interface ResourceSkuCosts {
  /**
   * Used for querying price from commerce.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly meterID?: string;
  /**
   * The multiplier is needed to extend the base metered cost.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly quantity?: number;
  /**
   * An invariant to show the extended unit.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly extendedUnit?: string;
}

/**
 * Describes The SKU capabilities object.
 */
export interface ResourceSkuCapabilities {
  /**
   * An invariant to describe the feature.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * An invariant if the feature is measured by quantity.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly value?: string;
}

/**
 * Describes The zonal capabilities of a SKU.
 */
export interface ResourceSkuZoneDetails {
  /**
   * The set of zones that the SKU is available in with the specified capabilities.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string[];
  /**
   * A list of capabilities that are available for the SKU in the specified list of zones.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly capabilities?: ResourceSkuCapabilities[];
}

/**
 * An interface representing ResourceSkuRestrictionInfo.
 */
export interface ResourceSkuRestrictionInfo {
  /**
   * Locations where the SKU is restricted
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly locations?: string[];
  /**
   * List of availability zones where the SKU is restricted.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly zones?: string[];
}

/**
 * Describes scaling information of a SKU.
 */
export interface ResourceSkuRestrictions {
  /**
   * The type of restrictions. Possible values include: 'Location', 'Zone'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: ResourceSkuRestrictionsType;
  /**
   * The value of restrictions. If the restriction type is set to location. This would be different
   * locations where the SKU is restricted.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly values?: string[];
  /**
   * The information about the restriction where the SKU cannot be used.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly restrictionInfo?: ResourceSkuRestrictionInfo;
  /**
   * The reason for restriction. Possible values include: 'QuotaId', 'NotAvailableForSubscription'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly reasonCode?: ResourceSkuRestrictionsReasonCode;
}

/**
 * An interface representing ResourceSkuLocationInfo.
 */
export interface ResourceSkuLocationInfo {
  /**
   * Location of the SKU
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly location?: string;
  /**
   * List of availability zones where the SKU is supported.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly zones?: string[];
  /**
   * Details of capabilities available to a SKU in specific zones.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly zoneDetails?: ResourceSkuZoneDetails[];
}

/**
 * Describes an available Compute SKU.
 */
export interface ResourceSku {
  /**
   * The type of resource the SKU applies to.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly resourceType?: string;
  /**
   * The name of SKU.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Specifies the tier of virtual machines in a scale set.<br /><br /> Possible Values:<br /><br
   * /> **Standard**<br /><br /> **Basic**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly tier?: string;
  /**
   * The Size of the SKU.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly size?: string;
  /**
   * The Family of this particular SKU.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly family?: string;
  /**
   * The Kind of resources that are supported in this SKU.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly kind?: string;
  /**
   * Specifies the number of virtual machines in the scale set.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly capacity?: ResourceSkuCapacity;
  /**
   * The set of locations that the SKU is available.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly locations?: string[];
  /**
   * A list of locations and availability zones in those locations where the SKU is available.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly locationInfo?: ResourceSkuLocationInfo[];
  /**
   * The api versions that support this SKU.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly apiVersions?: string[];
  /**
   * Metadata for retrieving price info.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly costs?: ResourceSkuCosts[];
  /**
   * A name value pair to describe the capability.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly capabilities?: ResourceSkuCapabilities[];
  /**
   * The restrictions because of which SKU cannot be used. This is empty if there are no
   * restrictions.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly restrictions?: ResourceSkuRestrictions[];
}

/**
 * The ProxyOnly Resource model definition.
 */
export interface ProxyOnlyResource {
  /**
   * Resource Id
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Resource name
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Resource type
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
}

/**
 * The disks sku name. Can be Standard_LRS, Premium_LRS, StandardSSD_LRS, UltraSSD_LRS,
 * Premium_ZRS, or StandardSSD_ZRS.
 */
export interface DiskSku {
  /**
   * The sku name. Possible values include: 'Standard_LRS', 'Premium_LRS', 'StandardSSD_LRS',
   * 'UltraSSD_LRS', 'Premium_ZRS', 'StandardSSD_ZRS'
   */
  name?: DiskStorageAccountTypes;
  /**
   * The sku tier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly tier?: string;
}

/**
 * The source image used for creating the disk.
 */
export interface ImageDiskReference {
  /**
   * A relative uri containing either a Platform Image Repository or user image reference.
   */
  id: string;
  /**
   * If the disk is created from an image's data disk, this is an index that indicates which of the
   * data disks in the image to use. For OS disks, this field is null.
   */
  lun?: number;
}

/**
 * Data used when creating a disk.
 */
export interface CreationData {
  /**
   * This enumerates the possible sources of a disk's creation. Possible values include: 'Empty',
   * 'Attach', 'FromImage', 'Import', 'Copy', 'Restore', 'Upload'
   */
  createOption: DiskCreateOption;
  /**
   * Required if createOption is Import. The Azure Resource Manager identifier of the storage
   * account containing the blob to import as a disk.
   */
  storageAccountId?: string;
  /**
   * Disk source information.
   */
  imageReference?: ImageDiskReference;
  /**
   * Required if creating from a Gallery Image. The id of the ImageDiskReference will be the ARM id
   * of the shared galley image version from which to create a disk.
   */
  galleryImageReference?: ImageDiskReference;
  /**
   * If createOption is Import, this is the URI of a blob to be imported into a managed disk.
   */
  sourceUri?: string;
  /**
   * If createOption is Copy, this is the ARM id of the source snapshot or disk.
   */
  sourceResourceId?: string;
  /**
   * If this field is set, this is the unique id identifying the source of this resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly sourceUniqueId?: string;
  /**
   * If createOption is Upload, this is the size of the contents of the upload including the VHD
   * footer. This value should be between 20972032 (20 MiB + 512 bytes for the VHD footer) and
   * 35183298347520 bytes (32 TiB + 512 bytes for the VHD footer).
   */
  uploadSizeBytes?: number;
  /**
   * Logical sector size in bytes for Ultra disks. Supported values are 512 ad 4096. 4096 is the
   * default.
   */
  logicalSectorSize?: number;
}

/**
 * The vault id is an Azure Resource Manager Resource id in the form
 * /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}
 */
export interface SourceVault {
  /**
   * Resource Id
   */
  id?: string;
}

/**
 * Key Vault Secret Url and vault id of the encryption key
 */
export interface KeyVaultAndSecretReference {
  /**
   * Resource id of the KeyVault containing the key or secret
   */
  sourceVault: SourceVault;
  /**
   * Url pointing to a key or secret in KeyVault
   */
  secretUrl: string;
}

/**
 * Key Vault Key Url and vault id of KeK, KeK is optional and when provided is used to unwrap the
 * encryptionKey
 */
export interface KeyVaultAndKeyReference {
  /**
   * Resource id of the KeyVault containing the key or secret
   */
  sourceVault: SourceVault;
  /**
   * Url pointing to a key or secret in KeyVault
   */
  keyUrl: string;
}

/**
 * Encryption settings for one disk volume.
 */
export interface EncryptionSettingsElement {
  /**
   * Key Vault Secret Url and vault id of the disk encryption key
   */
  diskEncryptionKey?: KeyVaultAndSecretReference;
  /**
   * Key Vault Key Url and vault id of the key encryption key. KeyEncryptionKey is optional and
   * when provided is used to unwrap the disk encryption key.
   */
  keyEncryptionKey?: KeyVaultAndKeyReference;
}

/**
 * Encryption settings for disk or snapshot
 */
export interface EncryptionSettingsCollection {
  /**
   * Set this flag to true and provide DiskEncryptionKey and optional KeyEncryptionKey to enable
   * encryption. Set this flag to false and remove DiskEncryptionKey and KeyEncryptionKey to
   * disable encryption. If EncryptionSettings is null in the request object, the existing settings
   * remain unchanged.
   */
  enabled: boolean;
  /**
   * A collection of encryption settings, one for each disk volume.
   */
  encryptionSettings?: EncryptionSettingsElement[];
  /**
   * Describes what type of encryption is used for the disks. Once this field is set, it cannot be
   * overwritten. '1.0' corresponds to Azure Disk Encryption with AAD app.'1.1' corresponds to
   * Azure Disk Encryption.
   */
  encryptionSettingsVersion?: string;
}

/**
 * Encryption at rest settings for disk or snapshot
 */
export interface Encryption {
  /**
   * ResourceId of the disk encryption set to use for enabling encryption at rest.
   */
  diskEncryptionSetId?: string;
  /**
   * Possible values include: 'EncryptionAtRestWithPlatformKey', 'EncryptionAtRestWithCustomerKey',
   * 'EncryptionAtRestWithPlatformAndCustomerKeys'
   */
  type?: EncryptionType;
}

/**
 * An interface representing ShareInfoElement.
 */
export interface ShareInfoElement {
  /**
   * A relative URI containing the ID of the VM that has the disk attached.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly vmUri?: string;
}

/**
 * Properties of the disk for which update is pending.
 */
export interface PropertyUpdatesInProgress {
  /**
   * The target performance tier of the disk if a tier change operation is in progress.
   */
  targetTier?: string;
}

/**
 * Contains the security related information for the resource.
 */
export interface DiskSecurityProfile {
  /**
   * Possible values include: 'TrustedLaunch'
   */
  securityType?: DiskSecurityTypes;
}

/**
 * Disk resource.
 */
export interface Disk extends Resource {
  /**
   * A relative URI containing the ID of the VM that has the disk attached.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly managedBy?: string;
  /**
   * List of relative URIs containing the IDs of the VMs that have the disk attached. maxShares
   * should be set to a value greater than one for disks to allow attaching them to multiple VMs.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly managedByExtended?: string[];
  sku?: DiskSku;
  /**
   * The Logical zone list for Disk.
   */
  zones?: string[];
  /**
   * The extended location where the disk will be created. Extended location cannot be changed.
   */
  extendedLocation?: ExtendedLocation;
  /**
   * The time when the disk was created.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly timeCreated?: Date;
  /**
   * The Operating System type. Possible values include: 'Windows', 'Linux'
   */
  osType?: OperatingSystemTypes;
  /**
   * The hypervisor generation of the Virtual Machine. Applicable to OS disks only. Possible values
   * include: 'V1', 'V2'
   */
  hyperVGeneration?: HyperVGeneration;
  /**
   * Purchase plan information for the the image from which the OS disk was created. E.g. - {name:
   * 2019-Datacenter, publisher: MicrosoftWindowsServer, product: WindowsServer}
   */
  purchasePlan?: PurchasePlan;
  /**
   * Disk source information. CreationData information cannot be changed after the disk has been
   * created.
   */
  creationData: CreationData;
  /**
   * If creationData.createOption is Empty, this field is mandatory and it indicates the size of
   * the disk to create. If this field is present for updates or creation with other options, it
   * indicates a resize. Resizes are only allowed if the disk is not attached to a running VM, and
   * can only increase the disk's size.
   */
  diskSizeGB?: number;
  /**
   * The size of the disk in bytes. This field is read only.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly diskSizeBytes?: number;
  /**
   * Unique Guid identifying the resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly uniqueId?: string;
  /**
   * Encryption settings collection used for Azure Disk Encryption, can contain multiple encryption
   * settings per disk or snapshot.
   */
  encryptionSettingsCollection?: EncryptionSettingsCollection;
  /**
   * The disk provisioning state.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: string;
  /**
   * The number of IOPS allowed for this disk; only settable for UltraSSD disks. One operation can
   * transfer between 4k and 256k bytes.
   */
  diskIOPSReadWrite?: number;
  /**
   * The bandwidth allowed for this disk; only settable for UltraSSD disks. MBps means millions of
   * bytes per second - MB here uses the ISO notation, of powers of 10.
   */
  diskMBpsReadWrite?: number;
  /**
   * The total number of IOPS that will be allowed across all VMs mounting the shared disk as
   * ReadOnly. One operation can transfer between 4k and 256k bytes.
   */
  diskIOPSReadOnly?: number;
  /**
   * The total throughput (MBps) that will be allowed across all VMs mounting the shared disk as
   * ReadOnly. MBps means millions of bytes per second - MB here uses the ISO notation, of powers
   * of 10.
   */
  diskMBpsReadOnly?: number;
  /**
   * The state of the disk. Possible values include: 'Unattached', 'Attached', 'Reserved',
   * 'ActiveSAS', 'ReadyToUpload', 'ActiveUpload'
   */
  diskState?: DiskState;
  /**
   * Encryption property can be used to encrypt data at rest with customer managed keys or platform
   * managed keys.
   */
  encryption?: Encryption;
  /**
   * The maximum number of VMs that can attach to the disk at the same time. Value greater than one
   * indicates a disk that can be mounted on multiple VMs at the same time.
   */
  maxShares?: number;
  /**
   * Details of the list of all VMs that have the disk attached. maxShares should be set to a value
   * greater than one for disks to allow attaching them to multiple VMs.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly shareInfo?: ShareInfoElement[];
  /**
   * Possible values include: 'AllowAll', 'AllowPrivate', 'DenyAll'
   */
  networkAccessPolicy?: NetworkAccessPolicy;
  /**
   * ARM id of the DiskAccess resource for using private endpoints on disks.
   */
  diskAccessId?: string;
  /**
   * Performance tier of the disk (e.g, P4, S10) as described here:
   * https://azure.microsoft.com/en-us/pricing/details/managed-disks/. Does not apply to Ultra
   * disks.
   */
  tier?: string;
  /**
   * Set to true to enable bursting beyond the provisioned performance target of the disk. Bursting
   * is disabled by default. Does not apply to Ultra disks.
   */
  burstingEnabled?: boolean;
  /**
   * Properties of the disk for which update is pending.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly propertyUpdatesInProgress?: PropertyUpdatesInProgress;
  /**
   * Indicates the OS on a disk supports hibernation.
   */
  supportsHibernation?: boolean;
  /**
   * Contains the security related information for the resource.
   */
  securityProfile?: DiskSecurityProfile;
}

/**
 * Disk update resource.
 */
export interface DiskUpdate {
  /**
   * the Operating System type. Possible values include: 'Windows', 'Linux'
   */
  osType?: OperatingSystemTypes;
  /**
   * If creationData.createOption is Empty, this field is mandatory and it indicates the size of
   * the disk to create. If this field is present for updates or creation with other options, it
   * indicates a resize. Resizes are only allowed if the disk is not attached to a running VM, and
   * can only increase the disk's size.
   */
  diskSizeGB?: number;
  /**
   * Encryption settings collection used be Azure Disk Encryption, can contain multiple encryption
   * settings per disk or snapshot.
   */
  encryptionSettingsCollection?: EncryptionSettingsCollection;
  /**
   * The number of IOPS allowed for this disk; only settable for UltraSSD disks. One operation can
   * transfer between 4k and 256k bytes.
   */
  diskIOPSReadWrite?: number;
  /**
   * The bandwidth allowed for this disk; only settable for UltraSSD disks. MBps means millions of
   * bytes per second - MB here uses the ISO notation, of powers of 10.
   */
  diskMBpsReadWrite?: number;
  /**
   * The total number of IOPS that will be allowed across all VMs mounting the shared disk as
   * ReadOnly. One operation can transfer between 4k and 256k bytes.
   */
  diskIOPSReadOnly?: number;
  /**
   * The total throughput (MBps) that will be allowed across all VMs mounting the shared disk as
   * ReadOnly. MBps means millions of bytes per second - MB here uses the ISO notation, of powers
   * of 10.
   */
  diskMBpsReadOnly?: number;
  /**
   * The maximum number of VMs that can attach to the disk at the same time. Value greater than one
   * indicates a disk that can be mounted on multiple VMs at the same time.
   */
  maxShares?: number;
  /**
   * Encryption property can be used to encrypt data at rest with customer managed keys or platform
   * managed keys.
   */
  encryption?: Encryption;
  /**
   * Possible values include: 'AllowAll', 'AllowPrivate', 'DenyAll'
   */
  networkAccessPolicy?: NetworkAccessPolicy;
  /**
   * ARM id of the DiskAccess resource for using private endpoints on disks.
   */
  diskAccessId?: string;
  /**
   * Performance tier of the disk (e.g, P4, S10) as described here:
   * https://azure.microsoft.com/en-us/pricing/details/managed-disks/. Does not apply to Ultra
   * disks.
   */
  tier?: string;
  /**
   * Set to true to enable bursting beyond the provisioned performance target of the disk. Bursting
   * is disabled by default. Does not apply to Ultra disks.
   */
  burstingEnabled?: boolean;
  /**
   * Purchase plan information to be added on the OS disk
   */
  purchasePlan?: PurchasePlan;
  /**
   * Properties of the disk for which update is pending.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly propertyUpdatesInProgress?: PropertyUpdatesInProgress;
  /**
   * Indicates the OS on a disk supports hibernation.
   */
  supportsHibernation?: boolean;
  /**
   * Resource tags
   */
  tags?: { [propertyName: string]: string };
  sku?: DiskSku;
}

/**
 * The snapshots sku name. Can be Standard_LRS, Premium_LRS, or Standard_ZRS. This is an optional
 * parameter for incremental snapshot and the default behavior is the SKU will be set to the same
 * sku as the previous snapshot
 */
export interface SnapshotSku {
  /**
   * The sku name. Possible values include: 'Standard_LRS', 'Premium_LRS', 'Standard_ZRS'
   */
  name?: SnapshotStorageAccountTypes;
  /**
   * The sku tier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly tier?: string;
}

/**
 * Key Vault Key Url to be used for server side encryption of Managed Disks and Snapshots
 */
export interface KeyForDiskEncryptionSet {
  /**
   * Resource id of the KeyVault containing the key or secret. This property is optional and cannot
   * be used if the KeyVault subscription is not the same as the Disk Encryption Set subscription.
   */
  sourceVault?: SourceVault;
  /**
   * Fully versioned Key Url pointing to a key in KeyVault. Version segment of the Url is required
   * regardless of rotationToLatestKeyVersionEnabled value.
   */
  keyUrl: string;
}

/**
 * Data used for requesting a SAS.
 */
export interface GrantAccessData {
  /**
   * Possible values include: 'None', 'Read', 'Write'
   */
  access: AccessLevel;
  /**
   * Time duration in seconds until the SAS access expires.
   */
  durationInSeconds: number;
}

/**
 * A disk access SAS uri.
 */
export interface AccessUri {
  /**
   * A SAS uri for accessing a disk.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly accessSAS?: string;
}

/**
 * Snapshot resource.
 */
export interface Snapshot extends Resource {
  /**
   * Unused. Always Null.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly managedBy?: string;
  sku?: SnapshotSku;
  /**
   * The extended location where the snapshot will be created. Extended location cannot be changed.
   */
  extendedLocation?: ExtendedLocation;
  /**
   * The time when the snapshot was created.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly timeCreated?: Date;
  /**
   * The Operating System type. Possible values include: 'Windows', 'Linux'
   */
  osType?: OperatingSystemTypes;
  /**
   * The hypervisor generation of the Virtual Machine. Applicable to OS disks only. Possible values
   * include: 'V1', 'V2'
   */
  hyperVGeneration?: HyperVGeneration;
  /**
   * Purchase plan information for the image from which the source disk for the snapshot was
   * originally created.
   */
  purchasePlan?: PurchasePlan;
  /**
   * Disk source information. CreationData information cannot be changed after the disk has been
   * created.
   */
  creationData: CreationData;
  /**
   * If creationData.createOption is Empty, this field is mandatory and it indicates the size of
   * the disk to create. If this field is present for updates or creation with other options, it
   * indicates a resize. Resizes are only allowed if the disk is not attached to a running VM, and
   * can only increase the disk's size.
   */
  diskSizeGB?: number;
  /**
   * The size of the disk in bytes. This field is read only.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly diskSizeBytes?: number;
  /**
   * The state of the snapshot. Possible values include: 'Unattached', 'Attached', 'Reserved',
   * 'ActiveSAS', 'ReadyToUpload', 'ActiveUpload'
   */
  diskState?: DiskState;
  /**
   * Unique Guid identifying the resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly uniqueId?: string;
  /**
   * Encryption settings collection used be Azure Disk Encryption, can contain multiple encryption
   * settings per disk or snapshot.
   */
  encryptionSettingsCollection?: EncryptionSettingsCollection;
  /**
   * The disk provisioning state.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: string;
  /**
   * Whether a snapshot is incremental. Incremental snapshots on the same disk occupy less space
   * than full snapshots and can be diffed.
   */
  incremental?: boolean;
  /**
   * Encryption property can be used to encrypt data at rest with customer managed keys or platform
   * managed keys.
   */
  encryption?: Encryption;
  /**
   * Possible values include: 'AllowAll', 'AllowPrivate', 'DenyAll'
   */
  networkAccessPolicy?: NetworkAccessPolicy;
  /**
   * ARM id of the DiskAccess resource for using private endpoints on disks.
   */
  diskAccessId?: string;
  /**
   * Indicates the OS on a snapshot supports hibernation.
   */
  supportsHibernation?: boolean;
}

/**
 * Snapshot update resource.
 */
export interface SnapshotUpdate {
  /**
   * the Operating System type. Possible values include: 'Windows', 'Linux'
   */
  osType?: OperatingSystemTypes;
  /**
   * If creationData.createOption is Empty, this field is mandatory and it indicates the size of
   * the disk to create. If this field is present for updates or creation with other options, it
   * indicates a resize. Resizes are only allowed if the disk is not attached to a running VM, and
   * can only increase the disk's size.
   */
  diskSizeGB?: number;
  /**
   * Encryption settings collection used be Azure Disk Encryption, can contain multiple encryption
   * settings per disk or snapshot.
   */
  encryptionSettingsCollection?: EncryptionSettingsCollection;
  /**
   * Encryption property can be used to encrypt data at rest with customer managed keys or platform
   * managed keys.
   */
  encryption?: Encryption;
  /**
   * Possible values include: 'AllowAll', 'AllowPrivate', 'DenyAll'
   */
  networkAccessPolicy?: NetworkAccessPolicy;
  /**
   * ARM id of the DiskAccess resource for using private endpoints on disks.
   */
  diskAccessId?: string;
  /**
   * Indicates the OS on a snapshot supports hibernation.
   */
  supportsHibernation?: boolean;
  /**
   * Resource tags
   */
  tags?: { [propertyName: string]: string };
  sku?: SnapshotSku;
}

/**
 * The managed identity for the disk encryption set. It should be given permission on the key vault
 * before it can be used to encrypt disks.
 */
export interface EncryptionSetIdentity {
  /**
   * The type of Managed Identity used by the DiskEncryptionSet. Only SystemAssigned is supported
   * for new creations. Disk Encryption Sets can be updated with Identity type None during
   * migration of subscription to a new Azure Active Directory tenant; it will cause the encrypted
   * resources to lose access to the keys. Possible values include: 'SystemAssigned', 'None'
   */
  type?: DiskEncryptionSetIdentityType;
  /**
   * The object id of the Managed Identity Resource. This will be sent to the RP from ARM via the
   * x-ms-identity-principal-id header in the PUT request if the resource has a
   * systemAssigned(implicit) identity
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly principalId?: string;
  /**
   * The tenant id of the Managed Identity Resource. This will be sent to the RP from ARM via the
   * x-ms-client-tenant-id header in the PUT request if the resource has a systemAssigned(implicit)
   * identity
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly tenantId?: string;
}

/**
 * disk encryption set resource.
 */
export interface DiskEncryptionSet extends Resource {
  identity?: EncryptionSetIdentity;
  /**
   * Possible values include: 'EncryptionAtRestWithCustomerKey',
   * 'EncryptionAtRestWithPlatformAndCustomerKeys'
   */
  encryptionType?: DiskEncryptionSetType;
  /**
   * The key vault key which is currently used by this disk encryption set.
   */
  activeKey?: KeyForDiskEncryptionSet;
  /**
   * A readonly collection of key vault keys previously used by this disk encryption set while a
   * key rotation is in progress. It will be empty if there is no ongoing key rotation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly previousKeys?: KeyForDiskEncryptionSet[];
  /**
   * The disk encryption set provisioning state.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: string;
  /**
   * Set this flag to true to enable auto-updating of this disk encryption set to the latest key
   * version.
   */
  rotationToLatestKeyVersionEnabled?: boolean;
  /**
   * The time when the active key of this disk encryption set was updated.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastKeyRotationTimestamp?: Date;
}

/**
 * disk encryption set update resource.
 */
export interface DiskEncryptionSetUpdate {
  /**
   * Possible values include: 'EncryptionAtRestWithCustomerKey',
   * 'EncryptionAtRestWithPlatformAndCustomerKeys'
   */
  encryptionType?: DiskEncryptionSetType;
  activeKey?: KeyForDiskEncryptionSet;
  /**
   * Set this flag to true to enable auto-updating of this disk encryption set to the latest key
   * version.
   */
  rotationToLatestKeyVersionEnabled?: boolean;
  /**
   * Resource tags
   */
  tags?: { [propertyName: string]: string };
  identity?: EncryptionSetIdentity;
}

/**
 * The Private Endpoint resource.
 */
export interface PrivateEndpoint {
  /**
   * The ARM identifier for Private Endpoint
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
}

/**
 * A collection of information about the state of the connection between service consumer and
 * provider.
 */
export interface PrivateLinkServiceConnectionState {
  /**
   * Indicates whether the connection has been Approved/Rejected/Removed by the owner of the
   * service. Possible values include: 'Pending', 'Approved', 'Rejected'
   */
  status?: PrivateEndpointServiceConnectionStatus;
  /**
   * The reason for approval/rejection of the connection.
   */
  description?: string;
  /**
   * A message indicating if changes on the service provider require any updates on the consumer.
   */
  actionsRequired?: string;
}

/**
 * The Private Endpoint Connection resource.
 */
export interface PrivateEndpointConnection extends BaseResource {
  /**
   * The resource of private end point.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly privateEndpoint?: PrivateEndpoint;
  /**
   * A collection of information about the state of the connection between DiskAccess and Virtual
   * Network.
   */
  privateLinkServiceConnectionState: PrivateLinkServiceConnectionState;
  /**
   * The provisioning state of the private endpoint connection resource. Possible values include:
   * 'Succeeded', 'Creating', 'Deleting', 'Failed'
   */
  provisioningState?: PrivateEndpointConnectionProvisioningState;
  /**
   * private endpoint connection Id
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * private endpoint connection name
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * private endpoint connection type
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
}

/**
 * disk access resource.
 */
export interface DiskAccess extends Resource {
  /**
   * A readonly collection of private endpoint connections created on the disk. Currently only one
   * endpoint connection is supported.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly privateEndpointConnections?: PrivateEndpointConnection[];
  /**
   * The disk access resource provisioning state.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: string;
  /**
   * The time when the disk access was created.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly timeCreated?: Date;
}

/**
 * Used for updating a disk access resource.
 */
export interface DiskAccessUpdate {
  /**
   * Resource tags
   */
  tags?: { [propertyName: string]: string };
}

/**
 * A private link resource
 */
export interface PrivateLinkResource {
  /**
   * The private link resource group id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly groupId?: string;
  /**
   * The private link resource required member names.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly requiredMembers?: string[];
  /**
   * The private link resource DNS zone name.
   */
  requiredZoneNames?: string[];
  /**
   * private link resource Id
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * private link resource name
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * private link resource type
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
}

/**
 * Properties of disk restore point
 */
export interface DiskRestorePoint extends ProxyOnlyResource {
  /**
   * The timestamp of restorePoint creation
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly timeCreated?: Date;
  /**
   * arm id of source disk
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly sourceResourceId?: string;
  /**
   * The Operating System type. Possible values include: 'Windows', 'Linux'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly osType?: OperatingSystemTypes;
  /**
   * The hypervisor generation of the Virtual Machine. Applicable to OS disks only. Possible values
   * include: 'V1', 'V2'
   */
  hyperVGeneration?: HyperVGeneration;
  /**
   * Purchase plan information for the the image from which the OS disk was created.
   */
  purchasePlan?: PurchasePlan;
  /**
   * id of the backing snapshot's MIS family
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly familyId?: string;
  /**
   * unique incarnation id of the source disk
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly sourceUniqueId?: string;
  /**
   * Encryption property can be used to encrypt data at rest with customer managed keys or platform
   * managed keys.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly encryption?: Encryption;
  /**
   * Indicates the OS on a disk supports hibernation.
   */
  supportsHibernation?: boolean;
}

/**
 * A list of private link resources
 */
export interface PrivateLinkResourceListResult {
  /**
   * Array of private link resources
   */
  value?: PrivateLinkResource[];
}

/**
 * Describes the gallery unique name.
 */
export interface GalleryIdentifier {
  /**
   * The unique name of the Shared Image Gallery. This name is generated automatically by Azure.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly uniqueName?: string;
}

/**
 * Specifies information about the Shared Image Gallery that you want to create or update.
 */
export interface Gallery extends Resource {
  /**
   * The description of this Shared Image Gallery resource. This property is updatable.
   */
  description?: string;
  identifier?: GalleryIdentifier;
  /**
   * The current state of the gallery. The provisioning state, which only appears in the response.
   * Possible values include: 'Creating', 'Updating', 'Failed', 'Succeeded', 'Deleting',
   * 'Migrating'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: ProvisioningState;
}

/**
 * The Update Resource model definition.
 */
export interface UpdateResourceDefinition extends BaseResource {
  /**
   * Resource Id
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Resource name
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Resource type
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Resource tags
   */
  tags?: { [propertyName: string]: string };
}

/**
 * Specifies information about the Shared Image Gallery that you want to update.
 */
export interface GalleryUpdate extends UpdateResourceDefinition {
  /**
   * The description of this Shared Image Gallery resource. This property is updatable.
   */
  description?: string;
  identifier?: GalleryIdentifier;
  /**
   * The current state of the gallery. The provisioning state, which only appears in the response.
   * Possible values include: 'Creating', 'Updating', 'Failed', 'Succeeded', 'Deleting',
   * 'Migrating'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: ProvisioningState;
}

/**
 * Specifies information about the gallery Application Definition that you want to create or
 * update.
 */
export interface GalleryApplication extends Resource {
  /**
   * The description of this gallery Application Definition resource. This property is updatable.
   */
  description?: string;
  /**
   * The Eula agreement for the gallery Application Definition.
   */
  eula?: string;
  /**
   * The privacy statement uri.
   */
  privacyStatementUri?: string;
  /**
   * The release note uri.
   */
  releaseNoteUri?: string;
  /**
   * The end of life date of the gallery Application Definition. This property can be used for
   * decommissioning purposes. This property is updatable.
   */
  endOfLifeDate?: Date;
  /**
   * This property allows you to specify the supported type of the OS that application is built
   * for. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux**. Possible values
   * include: 'Windows', 'Linux'
   */
  supportedOSType: OperatingSystemTypes;
}

/**
 * Specifies information about the gallery Application Definition that you want to update.
 */
export interface GalleryApplicationUpdate extends UpdateResourceDefinition {
  /**
   * The description of this gallery Application Definition resource. This property is updatable.
   */
  description?: string;
  /**
   * The Eula agreement for the gallery Application Definition.
   */
  eula?: string;
  /**
   * The privacy statement uri.
   */
  privacyStatementUri?: string;
  /**
   * The release note uri.
   */
  releaseNoteUri?: string;
  /**
   * The end of life date of the gallery Application Definition. This property can be used for
   * decommissioning purposes. This property is updatable.
   */
  endOfLifeDate?: Date;
  /**
   * This property allows you to specify the supported type of the OS that application is built
   * for. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux**. Possible values
   * include: 'Windows', 'Linux'
   */
  supportedOSType: OperatingSystemTypes;
}

/**
 * The source image from which the Image Version is going to be created.
 */
export interface UserArtifactSource {
  /**
   * Required. The mediaLink of the artifact, must be a readable storage page blob.
   */
  mediaLink: string;
  /**
   * Optional. The defaultConfigurationLink of the artifact, must be a readable storage page blob.
   */
  defaultConfigurationLink?: string;
}

/**
 * An interface representing UserArtifactManage.
 */
export interface UserArtifactManage {
  /**
   * Required. The path and arguments to install the gallery application. This is limited to 4096
   * characters.
   */
  install: string;
  /**
   * Required. The path and arguments to remove the gallery application. This is limited to 4096
   * characters.
   */
  remove: string;
  /**
   * Optional. The path and arguments to update the gallery application. If not present, then
   * update operation will invoke remove command on the previous version and install command on the
   * current version of the gallery application. This is limited to 4096 characters.
   */
  update?: string;
}

/**
 * Describes the basic gallery artifact publishing profile.
 */
export interface GalleryArtifactPublishingProfileBase {
  /**
   * The target regions where the Image Version is going to be replicated to. This property is
   * updatable.
   */
  targetRegions?: TargetRegion[];
  /**
   * The number of replicas of the Image Version to be created per region. This property would take
   * effect for a region when regionalReplicaCount is not specified. This property is updatable.
   */
  replicaCount?: number;
  /**
   * If set to true, Virtual Machines deployed from the latest version of the Image Definition
   * won't use this Image Version.
   */
  excludeFromLatest?: boolean;
  /**
   * The timestamp for when the gallery Image Version is published.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly publishedDate?: Date;
  /**
   * The end of life date of the gallery Image Version. This property can be used for
   * decommissioning purposes. This property is updatable.
   */
  endOfLifeDate?: Date;
  /**
   * Specifies the storage account type to be used to store the image. This property is not
   * updatable. Possible values include: 'Standard_LRS', 'Standard_ZRS', 'Premium_LRS'
   */
  storageAccountType?: StorageAccountType;
}

/**
 * The publishing profile of a gallery image version.
 */
export interface GalleryApplicationVersionPublishingProfile extends GalleryArtifactPublishingProfileBase {
  source: UserArtifactSource;
  manageActions?: UserArtifactManage;
  /**
   * Optional. Whether or not this application reports health.
   */
  enableHealthCheck?: boolean;
}

/**
 * This is the regional replication status.
 */
export interface RegionalReplicationStatus {
  /**
   * The region to which the gallery Image Version is being replicated to.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly region?: string;
  /**
   * This is the regional replication state. Possible values include: 'Unknown', 'Replicating',
   * 'Completed', 'Failed'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly state?: ReplicationState;
  /**
   * The details of the replication status.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly details?: string;
  /**
   * It indicates progress of the replication job.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly progress?: number;
}

/**
 * This is the replication status of the gallery Image Version.
 */
export interface ReplicationStatus {
  /**
   * This is the aggregated replication status based on all the regional replication status flags.
   * Possible values include: 'Unknown', 'InProgress', 'Completed', 'Failed'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly aggregatedState?: AggregatedReplicationState;
  /**
   * This is a summary of replication status for each region.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly summary?: RegionalReplicationStatus[];
}

/**
 * Specifies information about the gallery Application Version that you want to create or update.
 */
export interface GalleryApplicationVersion extends Resource {
  publishingProfile: GalleryApplicationVersionPublishingProfile;
  /**
   * The current state of the gallery Application Version. The provisioning state, which only
   * appears in the response. Possible values include: 'Creating', 'Updating', 'Failed',
   * 'Succeeded', 'Deleting', 'Migrating'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: ProvisioningState1;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly replicationStatus?: ReplicationStatus;
}

/**
 * Specifies information about the gallery Application Version that you want to update.
 */
export interface GalleryApplicationVersionUpdate extends UpdateResourceDefinition {
  publishingProfile: GalleryApplicationVersionPublishingProfile;
  /**
   * The current state of the gallery Application Version. The provisioning state, which only
   * appears in the response. Possible values include: 'Creating', 'Updating', 'Failed',
   * 'Succeeded', 'Deleting', 'Migrating'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: ProvisioningState1;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly replicationStatus?: ReplicationStatus;
}

/**
 * This is the gallery Image Definition identifier.
 */
export interface GalleryImageIdentifier {
  /**
   * The name of the gallery Image Definition publisher.
   */
  publisher: string;
  /**
   * The name of the gallery Image Definition offer.
   */
  offer: string;
  /**
   * The name of the gallery Image Definition SKU.
   */
  sku: string;
}

/**
 * Describes the resource range.
 */
export interface ResourceRange {
  /**
   * The minimum number of the resource.
   */
  min?: number;
  /**
   * The maximum number of the resource.
   */
  max?: number;
}

/**
 * The properties describe the recommended machine configuration for this Image Definition. These
 * properties are updatable.
 */
export interface RecommendedMachineConfiguration {
  vCPUs?: ResourceRange;
  memory?: ResourceRange;
}

/**
 * Describes the disallowed disk types.
 */
export interface Disallowed {
  /**
   * A list of disk types.
   */
  diskTypes?: string[];
}

/**
 * Describes the gallery Image Definition purchase plan. This is used by marketplace images.
 */
export interface ImagePurchasePlan {
  /**
   * The plan ID.
   */
  name?: string;
  /**
   * The publisher ID.
   */
  publisher?: string;
  /**
   * The product ID.
   */
  product?: string;
}

/**
 * Specifies information about the gallery Image Definition that you want to create or update.
 */
export interface GalleryImage extends Resource {
  /**
   * The description of this gallery Image Definition resource. This property is updatable.
   */
  description?: string;
  /**
   * The Eula agreement for the gallery Image Definition.
   */
  eula?: string;
  /**
   * The privacy statement uri.
   */
  privacyStatementUri?: string;
  /**
   * The release note uri.
   */
  releaseNoteUri?: string;
  /**
   * This property allows you to specify the type of the OS that is included in the disk when
   * creating a VM from a managed image. <br><br> Possible values are: <br><br> **Windows**
   * <br><br> **Linux**. Possible values include: 'Windows', 'Linux'
   */
  osType: OperatingSystemTypes;
  /**
   * This property allows the user to specify whether the virtual machines created under this image
   * are 'Generalized' or 'Specialized'. Possible values include: 'Generalized', 'Specialized'
   */
  osState: OperatingSystemStateTypes;
  /**
   * The hypervisor generation of the Virtual Machine. Applicable to OS disks only. Possible values
   * include: 'V1', 'V2'
   */
  hyperVGeneration?: HyperVGeneration;
  /**
   * The end of life date of the gallery Image Definition. This property can be used for
   * decommissioning purposes. This property is updatable.
   */
  endOfLifeDate?: Date;
  identifier: GalleryImageIdentifier;
  recommended?: RecommendedMachineConfiguration;
  disallowed?: Disallowed;
  purchasePlan?: ImagePurchasePlan;
  /**
   * The current state of the gallery Image Definition. The provisioning state, which only appears
   * in the response. Possible values include: 'Creating', 'Updating', 'Failed', 'Succeeded',
   * 'Deleting', 'Migrating'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: ProvisioningState2;
}

/**
 * Specifies information about the gallery Image Definition that you want to update.
 */
export interface GalleryImageUpdate extends UpdateResourceDefinition {
  /**
   * The description of this gallery Image Definition resource. This property is updatable.
   */
  description?: string;
  /**
   * The Eula agreement for the gallery Image Definition.
   */
  eula?: string;
  /**
   * The privacy statement uri.
   */
  privacyStatementUri?: string;
  /**
   * The release note uri.
   */
  releaseNoteUri?: string;
  /**
   * This property allows you to specify the type of the OS that is included in the disk when
   * creating a VM from a managed image. <br><br> Possible values are: <br><br> **Windows**
   * <br><br> **Linux**. Possible values include: 'Windows', 'Linux'
   */
  osType: OperatingSystemTypes;
  /**
   * This property allows the user to specify whether the virtual machines created under this image
   * are 'Generalized' or 'Specialized'. Possible values include: 'Generalized', 'Specialized'
   */
  osState: OperatingSystemStateTypes;
  /**
   * The hypervisor generation of the Virtual Machine. Applicable to OS disks only. Possible values
   * include: 'V1', 'V2'
   */
  hyperVGeneration?: HyperVGeneration;
  /**
   * The end of life date of the gallery Image Definition. This property can be used for
   * decommissioning purposes. This property is updatable.
   */
  endOfLifeDate?: Date;
  identifier: GalleryImageIdentifier;
  recommended?: RecommendedMachineConfiguration;
  disallowed?: Disallowed;
  purchasePlan?: ImagePurchasePlan;
  /**
   * The current state of the gallery Image Definition. The provisioning state, which only appears
   * in the response. Possible values include: 'Creating', 'Updating', 'Failed', 'Succeeded',
   * 'Deleting', 'Migrating'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: ProvisioningState2;
}

/**
 * The publishing profile of a gallery Image Version.
 */
export interface GalleryImageVersionPublishingProfile extends GalleryArtifactPublishingProfileBase {
}

/**
 * The gallery artifact version source.
 */
export interface GalleryArtifactVersionSource {
  /**
   * The id of the gallery artifact version source. Can specify a disk uri, snapshot uri, or user
   * image.
   */
  id?: string;
}

/**
 * This is the disk image base class.
 */
export interface GalleryDiskImage {
  /**
   * This property indicates the size of the VHD to be created.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly sizeInGB?: number;
  /**
   * The host caching of the disk. Valid values are 'None', 'ReadOnly', and 'ReadWrite'. Possible
   * values include: 'None', 'ReadOnly', 'ReadWrite'
   */
  hostCaching?: HostCaching;
  source?: GalleryArtifactVersionSource;
}

/**
 * This is the OS disk image.
 */
export interface GalleryOSDiskImage extends GalleryDiskImage {
}

/**
 * This is the data disk image.
 */
export interface GalleryDataDiskImage extends GalleryDiskImage {
  /**
   * This property specifies the logical unit number of the data disk. This value is used to
   * identify data disks within the Virtual Machine and therefore must be unique for each data disk
   * attached to the Virtual Machine.
   */
  lun: number;
}

/**
 * This is the storage profile of a Gallery Image Version.
 */
export interface GalleryImageVersionStorageProfile {
  source?: GalleryArtifactVersionSource;
  osDiskImage?: GalleryOSDiskImage;
  /**
   * A list of data disk images.
   */
  dataDiskImages?: GalleryDataDiskImage[];
}

/**
 * Specifies information about the gallery Image Version that you want to create or update.
 */
export interface GalleryImageVersion extends Resource {
  publishingProfile?: GalleryImageVersionPublishingProfile;
  /**
   * The current state of the gallery Image Version. The provisioning state, which only appears in
   * the response. Possible values include: 'Creating', 'Updating', 'Failed', 'Succeeded',
   * 'Deleting', 'Migrating'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: ProvisioningState3;
  storageProfile: GalleryImageVersionStorageProfile;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly replicationStatus?: ReplicationStatus;
}

/**
 * Specifies information about the gallery Image Version that you want to update.
 */
export interface GalleryImageVersionUpdate extends UpdateResourceDefinition {
  publishingProfile?: GalleryImageVersionPublishingProfile;
  /**
   * The current state of the gallery Image Version. The provisioning state, which only appears in
   * the response. Possible values include: 'Creating', 'Updating', 'Failed', 'Succeeded',
   * 'Deleting', 'Migrating'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: ProvisioningState3;
  storageProfile: GalleryImageVersionStorageProfile;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly replicationStatus?: ReplicationStatus;
}

/**
 * This is the disk image encryption base class.
 */
export interface DiskImageEncryption {
  /**
   * A relative URI containing the resource ID of the disk encryption set.
   */
  diskEncryptionSetId?: string;
}

/**
 * Contains encryption settings for an OS disk image.
 */
export interface OSDiskImageEncryption extends DiskImageEncryption {
}

/**
 * Contains encryption settings for a data disk image.
 */
export interface DataDiskImageEncryption extends DiskImageEncryption {
  /**
   * This property specifies the logical unit number of the data disk. This value is used to
   * identify data disks within the Virtual Machine and therefore must be unique for each data disk
   * attached to the Virtual Machine.
   */
  lun: number;
}

/**
 * Optional. Allows users to provide customer managed keys for encrypting the OS and data disks in
 * the gallery artifact.
 */
export interface EncryptionImages {
  osDiskImage?: OSDiskImageEncryption;
  /**
   * A list of encryption specifications for data disk images.
   */
  dataDiskImages?: DataDiskImageEncryption[];
}

/**
 * Describes the target region information.
 */
export interface TargetRegion {
  /**
   * The name of the region.
   */
  name: string;
  /**
   * The number of replicas of the Image Version to be created per region. This property is
   * updatable.
   */
  regionalReplicaCount?: number;
  /**
   * Specifies the storage account type to be used to store the image. This property is not
   * updatable. Possible values include: 'Standard_LRS', 'Standard_ZRS', 'Premium_LRS'
   */
  storageAccountType?: StorageAccountType;
  encryption?: EncryptionImages;
}

/**
 * The managed artifact.
 */
export interface ManagedArtifact {
  /**
   * The managed artifact id.
   */
  id: string;
}

/**
 * The source image from which the Image Version is going to be created.
 */
export interface GalleryArtifactSource {
  managedImage: ManagedArtifact;
}

/**
 * An interface representing InstanceSku.
 */
export interface InstanceSku {
  /**
   * The sku name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The tier of the cloud service role instance.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly tier?: string;
}

/**
 * Describes the network profile for the role instance.
 */
export interface RoleInstanceNetworkProfile {
  /**
   * Specifies the list of resource Ids for the network interfaces associated with the role
   * instance.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly networkInterfaces?: SubResource[];
}

/**
 * Instance view status.
 */
export interface ResourceInstanceViewStatus {
  /**
   * The status code.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly code?: string;
  /**
   * The short localizable label for the status.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly displayStatus?: string;
  /**
   * The detailed status message, including for alerts and error messages.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly message?: string;
  /**
   * The time of the status.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly time?: Date;
  /**
   * The level code. Possible values include: 'Info', 'Warning', 'Error'
   */
  level?: StatusLevelTypes;
}

/**
 * The instance view of the role instance.
 */
export interface RoleInstanceInstanceView {
  /**
   * The Update Domain.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly platformUpdateDomain?: number;
  /**
   * The Fault Domain.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly platformFaultDomain?: number;
  /**
   * Specifies a unique identifier generated internally for the cloud service associated with this
   * role instance. <br /><br /> NOTE: If you are using Azure Diagnostics extension, this property
   * can be used as 'DeploymentId' for querying details.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly privateId?: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly statuses?: ResourceInstanceViewStatus[];
}

/**
 * An interface representing RoleInstanceProperties.
 */
export interface RoleInstanceProperties {
  networkProfile?: RoleInstanceNetworkProfile;
  instanceView?: RoleInstanceInstanceView;
}

/**
 * An interface representing RoleInstance.
 */
export interface RoleInstance {
  /**
   * Resource Id
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Resource Name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Resource Type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Resource Location.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly location?: string;
  /**
   * Resource tags.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly tags?: { [propertyName: string]: string };
  sku?: InstanceSku;
  properties?: RoleInstanceProperties;
}

/**
 * Describes the cloud service role sku.
 */
export interface CloudServiceRoleSku {
  /**
   * The sku name. NOTE: If the new SKU is not supported on the hardware the cloud service is
   * currently on, you need to delete and recreate the cloud service or move back to the old sku.
   */
  name?: string;
  /**
   * Specifies the tier of the cloud service. Possible Values are <br /><br /> **Standard** <br
   * /><br /> **Basic**
   */
  tier?: string;
  /**
   * Specifies the number of role instances in the cloud service.
   */
  capacity?: number;
}

/**
 * An interface representing CloudServiceRoleProperties.
 */
export interface CloudServiceRoleProperties {
  /**
   * Specifies the ID which uniquely identifies a cloud service role.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly uniqueId?: string;
}

/**
 * Describes a role of the cloud service.
 */
export interface CloudServiceRole {
  /**
   * Resource id
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Resource name
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Resource type
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Resource location
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly location?: string;
  sku?: CloudServiceRoleSku;
  properties?: CloudServiceRoleProperties;
}

/**
 * Describes the role properties.
 */
export interface CloudServiceRoleProfileProperties {
  /**
   * Resource name.
   */
  name?: string;
  sku?: CloudServiceRoleSku;
}

/**
 * Describes the role profile for the cloud service.
 */
export interface CloudServiceRoleProfile {
  /**
   * List of roles for the cloud service.
   */
  roles?: CloudServiceRoleProfileProperties[];
}

/**
 * Describes a single certificate reference in a Key Vault, and where the certificate should reside
 * on the role instance.
 */
export interface CloudServiceVaultCertificate {
  /**
   * This is the URL of a certificate that has been uploaded to Key Vault as a secret.
   */
  certificateUrl?: string;
}

/**
 * Describes a set of certificates which are all in the same Key Vault.
 */
export interface CloudServiceVaultSecretGroup {
  /**
   * The relative URL of the Key Vault containing all of the certificates in VaultCertificates.
   */
  sourceVault?: SubResource;
  /**
   * The list of key vault references in SourceVault which contain certificates.
   */
  vaultCertificates?: CloudServiceVaultCertificate[];
}

/**
 * Describes the OS profile for the cloud service.
 */
export interface CloudServiceOsProfile {
  /**
   * Specifies set of certificates that should be installed onto the role instances.
   */
  secrets?: CloudServiceVaultSecretGroup[];
}

/**
 * Describes a cloud service IP Configuration
 */
export interface LoadBalancerFrontendIPConfigurationProperties {
  /**
   * The reference to the public ip address resource.
   */
  publicIPAddress?: SubResource;
  /**
   * The reference to the virtual network subnet resource.
   */
  subnet?: SubResource;
  /**
   * The virtual network private IP address of the IP configuration.
   */
  privateIPAddress?: string;
}

/**
 * An interface representing LoadBalancerFrontendIPConfiguration.
 */
export interface LoadBalancerFrontendIPConfiguration {
  /**
   * The name of the resource that is unique within the set of frontend IP configurations used by
   * the load balancer. This name can be used to access the resource.
   */
  name: string;
  /**
   * Properties of load balancer frontend ip configuration.
   */
  properties: LoadBalancerFrontendIPConfigurationProperties;
}

/**
 * An interface representing LoadBalancerConfigurationProperties.
 */
export interface LoadBalancerConfigurationProperties {
  /**
   * Specifies the frontend IP to be used for the load balancer. Only IPv4 frontend IP address is
   * supported. Each load balancer configuration must have exactly one frontend IP configuration.
   */
  frontendIPConfigurations: LoadBalancerFrontendIPConfiguration[];
}

/**
 * Describes the load balancer configuration.
 */
export interface LoadBalancerConfiguration {
  /**
   * Resource Id
   */
  id?: string;
  /**
   * The name of the Load balancer
   */
  name: string;
  /**
   * Properties of the load balancer configuration.
   */
  properties: LoadBalancerConfigurationProperties;
}

/**
 * Network Profile for the cloud service.
 */
export interface CloudServiceNetworkProfile {
  /**
   * List of Load balancer configurations. Cloud service can have up to two load balancer
   * configurations, corresponding to a Public Load Balancer and an Internal Load Balancer.
   */
  loadBalancerConfigurations?: LoadBalancerConfiguration[];
  /**
   * The id reference of the cloud service containing the target IP with which the subject cloud
   * service can perform a swap. This property cannot be updated once it is set. The swappable
   * cloud service referred by this id must be present otherwise an error will be thrown.
   */
  swappableCloudService?: SubResource;
}

/**
 * An interface representing CloudServiceVaultAndSecretReference.
 */
export interface CloudServiceVaultAndSecretReference {
  sourceVault?: SubResource;
  secretUrl?: string;
}

/**
 * Extension Properties.
 */
export interface CloudServiceExtensionProperties {
  /**
   * The name of the extension handler publisher.
   */
  publisher?: string;
  /**
   * Specifies the type of the extension.
   */
  type?: string;
  /**
   * Specifies the version of the extension. Specifies the version of the extension. If this
   * element is not specified or an asterisk (*) is used as the value, the latest version of the
   * extension is used. If the value is specified with a major version number and an asterisk as
   * the minor version number (X.), the latest minor version of the specified major version is
   * selected. If a major version number and a minor version number are specified (X.Y), the
   * specific extension version is selected. If a version is specified, an auto-upgrade is
   * performed on the role instance.
   */
  typeHandlerVersion?: string;
  /**
   * Explicitly specify whether platform can automatically upgrade typeHandlerVersion to higher
   * minor versions when they become available.
   */
  autoUpgradeMinorVersion?: boolean;
  /**
   * Public settings for the extension. For JSON extensions, this is the JSON settings for the
   * extension. For XML Extension (like RDP), this is the XML setting for the extension.
   */
  settings?: string;
  /**
   * Protected settings for the extension which are encrypted before sent to the role instance.
   */
  protectedSettings?: string;
  protectedSettingsFromKeyVault?: CloudServiceVaultAndSecretReference;
  /**
   * Tag to force apply the provided public and protected settings.
   * Changing the tag value allows for re-running the extension without changing any of the public
   * or protected settings.
   * If forceUpdateTag is not changed, updates to public or protected settings would still be
   * applied by the handler.
   * If neither forceUpdateTag nor any of public or protected settings change, extension would flow
   * to the role instance with the same sequence-number, and
   * it is up to handler implementation whether to re-run it or not
   */
  forceUpdateTag?: string;
  /**
   * The provisioning state, which only appears in the response.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: string;
  /**
   * Optional list of roles to apply this extension. If property is not specified or '*' is
   * specified, extension is applied to all roles in the cloud service.
   */
  rolesAppliedTo?: string[];
}

/**
 * Describes a cloud service Extension.
 */
export interface Extension {
  /**
   * The name of the extension.
   */
  name?: string;
  properties?: CloudServiceExtensionProperties;
}

/**
 * Describes a cloud service extension profile.
 */
export interface CloudServiceExtensionProfile {
  /**
   * List of extensions for the cloud service.
   */
  extensions?: Extension[];
}

/**
 * Cloud service properties
 */
export interface CloudServiceProperties {
  /**
   * Specifies a URL that refers to the location of the service package in the Blob service. The
   * service package URL can be Shared Access Signature (SAS) URI from any storage account.
   * This is a write-only property and is not returned in GET calls.
   */
  packageUrl?: string;
  /**
   * Specifies the XML service configuration (.cscfg) for the cloud service.
   */
  configuration?: string;
  /**
   * Specifies a URL that refers to the location of the service configuration in the Blob service.
   * The service package URL  can be Shared Access Signature (SAS) URI from any storage account.
   * This is a write-only property and is not returned in GET calls.
   */
  configurationUrl?: string;
  /**
   * (Optional) Indicates whether to start the cloud service immediately after it is created. The
   * default value is `true`.
   * If false, the service model is still deployed, but the code is not run immediately. Instead,
   * the service is PoweredOff until you call Start, at which time the service will be started. A
   * deployed service still incurs charges, even if it is poweredoff.
   */
  startCloudService?: boolean;
  /**
   * (Optional) Indicates whether the role sku properties (roleProfile.roles.sku) specified in the
   * model/template should override the role instance count and vm size specified in the .cscfg and
   * .csdef respectively.
   * The default value is `false`.
   */
  allowModelOverride?: boolean;
  /**
   * Possible values include: 'Auto', 'Manual', 'Simultaneous'
   */
  upgradeMode?: CloudServiceUpgradeMode;
  roleProfile?: CloudServiceRoleProfile;
  osProfile?: CloudServiceOsProfile;
  networkProfile?: CloudServiceNetworkProfile;
  extensionProfile?: CloudServiceExtensionProfile;
  /**
   * The provisioning state, which only appears in the response.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: string;
  /**
   * The unique identifier for the cloud service.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly uniqueId?: string;
}

/**
 * Describes the cloud service.
 */
export interface CloudService extends BaseResource {
  /**
   * Resource Id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Resource name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Resource type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Resource location.
   */
  location: string;
  /**
   * Resource tags.
   */
  tags?: { [propertyName: string]: string };
  properties?: CloudServiceProperties;
}

/**
 * An interface representing CloudServiceUpdate.
 */
export interface CloudServiceUpdate {
  /**
   * Resource tags
   */
  tags?: { [propertyName: string]: string };
}

/**
 * An interface representing StatusCodeCount.
 */
export interface StatusCodeCount {
  /**
   * The instance view status code
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly code?: string;
  /**
   * Number of instances having this status code
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly count?: number;
}

/**
 * Instance view statuses.
 */
export interface InstanceViewStatusesSummary {
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly statusesSummary?: StatusCodeCount[];
}

/**
 * InstanceView of CloudService as a whole
 */
export interface CloudServiceInstanceView {
  roleInstance?: InstanceViewStatusesSummary;
  /**
   * The version of the SDK that was used to generate the package for the cloud service.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly sdkVersion?: string;
  /**
   * Specifies a list of unique identifiers generated internally for the cloud service. <br /><br
   * /> NOTE: If you are using Azure Diagnostics extension, this property can be used as
   * 'DeploymentId' for querying details.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly privateIds?: string[];
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly statuses?: ResourceInstanceViewStatus[];
}

/**
 * Specifies a list of role instances from the cloud service.
 */
export interface RoleInstances {
  /**
   * List of cloud service role instance names. Value of '*' will signify all role instances of the
   * cloud service.
   */
  roleInstances: string[];
}

/**
 * Defines an update domain for the cloud service.
 */
export interface UpdateDomain {
  /**
   * Resource Id
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Resource Name
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
}

/**
 * OS version properties.
 */
export interface OSVersionProperties {
  /**
   * The family of this OS version.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly family?: string;
  /**
   * The family label of this OS version.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly familyLabel?: string;
  /**
   * The OS version.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly version?: string;
  /**
   * The OS version label.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly label?: string;
  /**
   * Specifies whether this is the default OS version for its family.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isDefault?: boolean;
  /**
   * Specifies whether this OS version is active.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isActive?: boolean;
}

/**
 * Describes a cloud service OS version.
 */
export interface OSVersion {
  /**
   * Resource Id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Resource name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Resource type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Resource location.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly location?: string;
  properties?: OSVersionProperties;
}

/**
 * Configuration view of an OS version.
 */
export interface OSVersionPropertiesBase {
  /**
   * The OS version.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly version?: string;
  /**
   * The OS version label.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly label?: string;
  /**
   * Specifies whether this is the default OS version for its family.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isDefault?: boolean;
  /**
   * Specifies whether this OS version is active.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isActive?: boolean;
}

/**
 * OS family properties.
 */
export interface OSFamilyProperties {
  /**
   * The OS family name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The OS family label.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly label?: string;
  /**
   * List of OS versions belonging to this family.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly versions?: OSVersionPropertiesBase[];
}

/**
 * Describes a cloud service OS family.
 */
export interface OSFamily {
  /**
   * Resource Id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Resource name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Resource type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Resource location.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly location?: string;
  properties?: OSFamilyProperties;
}

/**
 * Optional Parameters.
 */
export interface AvailabilitySetsListBySubscriptionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The expand expression to apply to the operation. Allowed values are 'instanceView'.
   */
  expand?: string;
}

/**
 * Optional Parameters.
 */
export interface AvailabilitySetsListBySubscriptionNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The expand expression to apply to the operation. Allowed values are 'instanceView'.
   */
  expand?: string;
}

/**
 * Optional Parameters.
 */
export interface ProximityPlacementGroupsGetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * includeColocationStatus=true enables fetching the colocation status of all the resources in
   * the proximity placement group.
   */
  includeColocationStatus?: string;
}

/**
 * Optional Parameters.
 */
export interface DedicatedHostGroupsGetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The expand expression to apply on the operation. The response shows the list of instance view
   * of the dedicated hosts under the dedicated host group. Possible values include: 'instanceView'
   */
  expand?: InstanceViewTypes;
}

/**
 * Optional Parameters.
 */
export interface DedicatedHostsGetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The expand expression to apply on the operation. Possible values include: 'instanceView'
   */
  expand?: InstanceViewTypes;
}

/**
 * Optional Parameters.
 */
export interface VirtualMachineExtensionImagesListVersionsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The filter to apply on the operation.
   */
  filter?: string;
  top?: number;
  orderby?: string;
}

/**
 * Optional Parameters.
 */
export interface VirtualMachineExtensionsGetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The expand expression to apply on the operation.
   */
  expand?: string;
}

/**
 * Optional Parameters.
 */
export interface VirtualMachineExtensionsListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The expand expression to apply on the operation.
   */
  expand?: string;
}

/**
 * Optional Parameters.
 */
export interface VirtualMachineImagesListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The expand expression to apply on the operation.
   */
  expand?: string;
  top?: number;
  orderby?: string;
}

/**
 * Optional Parameters.
 */
export interface VirtualMachineImagesEdgeZoneListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The expand expression to apply on the operation.
   */
  expand?: string;
  /**
   * An integer value specifying the number of images to return that matches supplied values.
   */
  top?: number;
  /**
   * Specifies the order of the results returned. Formatted as an OData query.
   */
  orderby?: string;
}

/**
 * Optional Parameters.
 */
export interface VirtualMachinesDeleteMethodOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Optional parameter to force delete virtual machines.(Feature in Preview)
   */
  forceDeletion?: boolean;
}

/**
 * Optional Parameters.
 */
export interface VirtualMachinesGetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The expand expression to apply on the operation. Possible values include: 'instanceView'
   */
  expand?: InstanceViewTypes;
}

/**
 * Optional Parameters.
 */
export interface VirtualMachinesListAllOptionalParams extends msRest.RequestOptionsBase {
  /**
   * statusOnly=true enables fetching run time status of all Virtual Machines in the subscription.
   */
  statusOnly?: string;
}

/**
 * Optional Parameters.
 */
export interface VirtualMachinesPowerOffOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The parameter to request non-graceful VM shutdown. True value for this flag indicates
   * non-graceful shutdown whereas false indicates otherwise. Default value for this flag is false
   * if not specified. Default value: false.
   */
  skipShutdown?: boolean;
}

/**
 * Optional Parameters.
 */
export interface VirtualMachinesReimageOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Parameters supplied to the Reimage Virtual Machine operation.
   */
  parameters?: VirtualMachineReimageParameters;
}

/**
 * Optional Parameters.
 */
export interface VirtualMachinesRetrieveBootDiagnosticsDataOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Expiration duration in minutes for the SAS URIs with a value between 1 to 1440 minutes.
   * <br><br>NOTE: If not specified, SAS URIs will be generated with a default expiration duration
   * of 120 minutes.
   */
  sasUriExpirationTimeInMinutes?: number;
}

/**
 * Optional Parameters.
 */
export interface VirtualMachinesBeginDeleteMethodOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Optional parameter to force delete virtual machines.(Feature in Preview)
   */
  forceDeletion?: boolean;
}

/**
 * Optional Parameters.
 */
export interface VirtualMachinesBeginPowerOffOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The parameter to request non-graceful VM shutdown. True value for this flag indicates
   * non-graceful shutdown whereas false indicates otherwise. Default value for this flag is false
   * if not specified. Default value: false.
   */
  skipShutdown?: boolean;
}

/**
 * Optional Parameters.
 */
export interface VirtualMachinesBeginReimageOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Parameters supplied to the Reimage Virtual Machine operation.
   */
  parameters?: VirtualMachineReimageParameters;
}

/**
 * Optional Parameters.
 */
export interface VirtualMachinesListAllNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * statusOnly=true enables fetching run time status of all Virtual Machines in the subscription.
   */
  statusOnly?: string;
}

/**
 * Optional Parameters.
 */
export interface VirtualMachineScaleSetsDeleteMethodOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Optional parameter to force delete a VM scale set. (Feature in Preview)
   */
  forceDeletion?: boolean;
}

/**
 * Optional Parameters.
 */
export interface VirtualMachineScaleSetsDeallocateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * A list of virtual machine instance IDs from the VM scale set.
   */
  vmInstanceIDs?: VirtualMachineScaleSetVMInstanceIDs;
}

/**
 * Optional Parameters.
 */
export interface VirtualMachineScaleSetsDeleteInstancesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Optional parameter to force delete virtual machines from the VM scale set. (Feature in
   * Preview)
   */
  forceDeletion?: boolean;
}

/**
 * Optional Parameters.
 */
export interface VirtualMachineScaleSetsPowerOffOptionalParams extends msRest.RequestOptionsBase {
  /**
   * A list of virtual machine instance IDs from the VM scale set.
   */
  vmInstanceIDs?: VirtualMachineScaleSetVMInstanceIDs;
  /**
   * The parameter to request non-graceful VM shutdown. True value for this flag indicates
   * non-graceful shutdown whereas false indicates otherwise. Default value for this flag is false
   * if not specified. Default value: false.
   */
  skipShutdown?: boolean;
}

/**
 * Optional Parameters.
 */
export interface VirtualMachineScaleSetsRestartOptionalParams extends msRest.RequestOptionsBase {
  /**
   * A list of virtual machine instance IDs from the VM scale set.
   */
  vmInstanceIDs?: VirtualMachineScaleSetVMInstanceIDs;
}

/**
 * Optional Parameters.
 */
export interface VirtualMachineScaleSetsStartOptionalParams extends msRest.RequestOptionsBase {
  /**
   * A list of virtual machine instance IDs from the VM scale set.
   */
  vmInstanceIDs?: VirtualMachineScaleSetVMInstanceIDs;
}

/**
 * Optional Parameters.
 */
export interface VirtualMachineScaleSetsRedeployOptionalParams extends msRest.RequestOptionsBase {
  /**
   * A list of virtual machine instance IDs from the VM scale set.
   */
  vmInstanceIDs?: VirtualMachineScaleSetVMInstanceIDs;
}

/**
 * Optional Parameters.
 */
export interface VirtualMachineScaleSetsPerformMaintenanceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * A list of virtual machine instance IDs from the VM scale set.
   */
  vmInstanceIDs?: VirtualMachineScaleSetVMInstanceIDs;
}

/**
 * Optional Parameters.
 */
export interface VirtualMachineScaleSetsReimageOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Parameters for Reimaging VM ScaleSet.
   */
  vmScaleSetReimageInput?: VirtualMachineScaleSetReimageParameters;
}

/**
 * Optional Parameters.
 */
export interface VirtualMachineScaleSetsReimageAllOptionalParams extends msRest.RequestOptionsBase {
  /**
   * A list of virtual machine instance IDs from the VM scale set.
   */
  vmInstanceIDs?: VirtualMachineScaleSetVMInstanceIDs;
}

/**
 * Optional Parameters.
 */
export interface VirtualMachineScaleSetsBeginDeleteMethodOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Optional parameter to force delete a VM scale set. (Feature in Preview)
   */
  forceDeletion?: boolean;
}

/**
 * Optional Parameters.
 */
export interface VirtualMachineScaleSetsBeginDeallocateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * A list of virtual machine instance IDs from the VM scale set.
   */
  vmInstanceIDs?: VirtualMachineScaleSetVMInstanceIDs;
}

/**
 * Optional Parameters.
 */
export interface VirtualMachineScaleSetsBeginDeleteInstancesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Optional parameter to force delete virtual machines from the VM scale set. (Feature in
   * Preview)
   */
  forceDeletion?: boolean;
}

/**
 * Optional Parameters.
 */
export interface VirtualMachineScaleSetsBeginPowerOffOptionalParams extends msRest.RequestOptionsBase {
  /**
   * A list of virtual machine instance IDs from the VM scale set.
   */
  vmInstanceIDs?: VirtualMachineScaleSetVMInstanceIDs;
  /**
   * The parameter to request non-graceful VM shutdown. True value for this flag indicates
   * non-graceful shutdown whereas false indicates otherwise. Default value for this flag is false
   * if not specified. Default value: false.
   */
  skipShutdown?: boolean;
}

/**
 * Optional Parameters.
 */
export interface VirtualMachineScaleSetsBeginRestartOptionalParams extends msRest.RequestOptionsBase {
  /**
   * A list of virtual machine instance IDs from the VM scale set.
   */
  vmInstanceIDs?: VirtualMachineScaleSetVMInstanceIDs;
}

/**
 * Optional Parameters.
 */
export interface VirtualMachineScaleSetsBeginStartOptionalParams extends msRest.RequestOptionsBase {
  /**
   * A list of virtual machine instance IDs from the VM scale set.
   */
  vmInstanceIDs?: VirtualMachineScaleSetVMInstanceIDs;
}

/**
 * Optional Parameters.
 */
export interface VirtualMachineScaleSetsBeginRedeployOptionalParams extends msRest.RequestOptionsBase {
  /**
   * A list of virtual machine instance IDs from the VM scale set.
   */
  vmInstanceIDs?: VirtualMachineScaleSetVMInstanceIDs;
}

/**
 * Optional Parameters.
 */
export interface VirtualMachineScaleSetsBeginPerformMaintenanceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * A list of virtual machine instance IDs from the VM scale set.
   */
  vmInstanceIDs?: VirtualMachineScaleSetVMInstanceIDs;
}

/**
 * Optional Parameters.
 */
export interface VirtualMachineScaleSetsBeginReimageOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Parameters for Reimaging VM ScaleSet.
   */
  vmScaleSetReimageInput?: VirtualMachineScaleSetReimageParameters;
}

/**
 * Optional Parameters.
 */
export interface VirtualMachineScaleSetsBeginReimageAllOptionalParams extends msRest.RequestOptionsBase {
  /**
   * A list of virtual machine instance IDs from the VM scale set.
   */
  vmInstanceIDs?: VirtualMachineScaleSetVMInstanceIDs;
}

/**
 * Optional Parameters.
 */
export interface ImagesGetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The expand expression to apply on the operation.
   */
  expand?: string;
}

/**
 * Optional Parameters.
 */
export interface VirtualMachineScaleSetExtensionsGetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The expand expression to apply on the operation.
   */
  expand?: string;
}

/**
 * Optional Parameters.
 */
export interface VirtualMachineScaleSetVMExtensionsGetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The expand expression to apply on the operation.
   */
  expand?: string;
}

/**
 * Optional Parameters.
 */
export interface VirtualMachineScaleSetVMExtensionsListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The expand expression to apply on the operation.
   */
  expand?: string;
}

/**
 * Optional Parameters.
 */
export interface VirtualMachineScaleSetVMsReimageOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Parameters for the Reimaging Virtual machine in ScaleSet.
   */
  vmScaleSetVMReimageInput?: VirtualMachineScaleSetVMReimageParameters;
}

/**
 * Optional Parameters.
 */
export interface VirtualMachineScaleSetVMsDeleteMethodOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Optional parameter to force delete a virtual machine from a VM scale set. (Feature in Preview)
   */
  forceDeletion?: boolean;
}

/**
 * Optional Parameters.
 */
export interface VirtualMachineScaleSetVMsGetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The expand expression to apply on the operation. Possible values include: 'instanceView'
   */
  expand?: InstanceViewTypes;
}

/**
 * Optional Parameters.
 */
export interface VirtualMachineScaleSetVMsListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The filter to apply to the operation. Allowed values are
   * 'startswith(instanceView/statuses/code, 'PowerState') eq true', 'properties/latestModelApplied
   * eq true', 'properties/latestModelApplied eq false'.
   */
  filter?: string;
  /**
   * The list parameters. Allowed values are 'instanceView', 'instanceView/statuses'.
   */
  select?: string;
  /**
   * The expand expression to apply to the operation. Allowed values are 'instanceView'.
   */
  expand?: string;
}

/**
 * Optional Parameters.
 */
export interface VirtualMachineScaleSetVMsPowerOffOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The parameter to request non-graceful VM shutdown. True value for this flag indicates
   * non-graceful shutdown whereas false indicates otherwise. Default value for this flag is false
   * if not specified. Default value: false.
   */
  skipShutdown?: boolean;
}

/**
 * Optional Parameters.
 */
export interface VirtualMachineScaleSetVMsRetrieveBootDiagnosticsDataOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Expiration duration in minutes for the SAS URIs with a value between 1 to 1440 minutes.
   * <br><br>NOTE: If not specified, SAS URIs will be generated with a default expiration duration
   * of 120 minutes.
   */
  sasUriExpirationTimeInMinutes?: number;
}

/**
 * Optional Parameters.
 */
export interface VirtualMachineScaleSetVMsBeginReimageOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Parameters for the Reimaging Virtual machine in ScaleSet.
   */
  vmScaleSetVMReimageInput?: VirtualMachineScaleSetVMReimageParameters;
}

/**
 * Optional Parameters.
 */
export interface VirtualMachineScaleSetVMsBeginDeleteMethodOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Optional parameter to force delete a virtual machine from a VM scale set. (Feature in Preview)
   */
  forceDeletion?: boolean;
}

/**
 * Optional Parameters.
 */
export interface VirtualMachineScaleSetVMsBeginPowerOffOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The parameter to request non-graceful VM shutdown. True value for this flag indicates
   * non-graceful shutdown whereas false indicates otherwise. Default value for this flag is false
   * if not specified. Default value: false.
   */
  skipShutdown?: boolean;
}

/**
 * Optional Parameters.
 */
export interface VirtualMachineScaleSetVMsListNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The filter to apply to the operation. Allowed values are
   * 'startswith(instanceView/statuses/code, 'PowerState') eq true', 'properties/latestModelApplied
   * eq true', 'properties/latestModelApplied eq false'.
   */
  filter?: string;
  /**
   * The list parameters. Allowed values are 'instanceView', 'instanceView/statuses'.
   */
  select?: string;
  /**
   * The expand expression to apply to the operation. Allowed values are 'instanceView'.
   */
  expand?: string;
}

/**
 * Optional Parameters.
 */
export interface VirtualMachineRunCommandsGetByVirtualMachineOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The expand expression to apply on the operation.
   */
  expand?: string;
}

/**
 * Optional Parameters.
 */
export interface VirtualMachineRunCommandsListByVirtualMachineOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The expand expression to apply on the operation.
   */
  expand?: string;
}

/**
 * Optional Parameters.
 */
export interface VirtualMachineRunCommandsListByVirtualMachineNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The expand expression to apply on the operation.
   */
  expand?: string;
}

/**
 * Optional Parameters.
 */
export interface VirtualMachineScaleSetVMRunCommandsGetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The expand expression to apply on the operation.
   */
  expand?: string;
}

/**
 * Optional Parameters.
 */
export interface VirtualMachineScaleSetVMRunCommandsListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The expand expression to apply on the operation.
   */
  expand?: string;
}

/**
 * Optional Parameters.
 */
export interface VirtualMachineScaleSetVMRunCommandsListNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The expand expression to apply on the operation.
   */
  expand?: string;
}

/**
 * Optional Parameters.
 */
export interface ResourceSkusListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The filter to apply on the operation. Only **location** filter is supported currently.
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface ResourceSkusListNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The filter to apply on the operation. Only **location** filter is supported currently.
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface GalleryImageVersionsGetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The expand expression to apply on the operation. Possible values include: 'ReplicationStatus'
   */
  expand?: ReplicationStatusTypes;
}

/**
 * Optional Parameters.
 */
export interface GalleryApplicationVersionsGetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The expand expression to apply on the operation. Possible values include: 'ReplicationStatus'
   */
  expand?: ReplicationStatusTypes;
}

/**
 * Optional Parameters.
 */
export interface CloudServiceRoleInstancesGetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The expand expression to apply to the operation. Possible values include: 'instanceView'
   */
  expand?: InstanceViewTypes;
}

/**
 * Optional Parameters.
 */
export interface CloudServiceRoleInstancesListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The expand expression to apply to the operation. Possible values include: 'instanceView'
   */
  expand?: InstanceViewTypes;
}

/**
 * Optional Parameters.
 */
export interface CloudServiceRoleInstancesListNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The expand expression to apply to the operation. Possible values include: 'instanceView'
   */
  expand?: InstanceViewTypes;
}

/**
 * Optional Parameters.
 */
export interface CloudServicesCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The cloud service object.
   */
  parameters?: CloudService;
}

/**
 * Optional Parameters.
 */
export interface CloudServicesUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The cloud service object.
   */
  parameters?: CloudServiceUpdate;
}

/**
 * Optional Parameters.
 */
export interface CloudServicesRestartOptionalParams extends msRest.RequestOptionsBase {
  /**
   * List of cloud service role instance names.
   */
  parameters?: RoleInstances;
}

/**
 * Optional Parameters.
 */
export interface CloudServicesReimageOptionalParams extends msRest.RequestOptionsBase {
  /**
   * List of cloud service role instance names.
   */
  parameters?: RoleInstances;
}

/**
 * Optional Parameters.
 */
export interface CloudServicesRebuildOptionalParams extends msRest.RequestOptionsBase {
  /**
   * List of cloud service role instance names.
   */
  parameters?: RoleInstances;
}

/**
 * Optional Parameters.
 */
export interface CloudServicesDeleteInstancesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * List of cloud service role instance names.
   */
  parameters?: RoleInstances;
}

/**
 * Optional Parameters.
 */
export interface CloudServicesBeginCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The cloud service object.
   */
  parameters?: CloudService;
}

/**
 * Optional Parameters.
 */
export interface CloudServicesBeginUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The cloud service object.
   */
  parameters?: CloudServiceUpdate;
}

/**
 * Optional Parameters.
 */
export interface CloudServicesBeginRestartOptionalParams extends msRest.RequestOptionsBase {
  /**
   * List of cloud service role instance names.
   */
  parameters?: RoleInstances;
}

/**
 * Optional Parameters.
 */
export interface CloudServicesBeginReimageOptionalParams extends msRest.RequestOptionsBase {
  /**
   * List of cloud service role instance names.
   */
  parameters?: RoleInstances;
}

/**
 * Optional Parameters.
 */
export interface CloudServicesBeginRebuildOptionalParams extends msRest.RequestOptionsBase {
  /**
   * List of cloud service role instance names.
   */
  parameters?: RoleInstances;
}

/**
 * Optional Parameters.
 */
export interface CloudServicesBeginDeleteInstancesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * List of cloud service role instance names.
   */
  parameters?: RoleInstances;
}

/**
 * An interface representing ComputeManagementClientOptions.
 */
export interface ComputeManagementClientOptions extends AzureServiceClientOptions {
  baseUri?: string;
}

/**
 * @interface
 * The List Compute Operation operation response.
 * @extends Array<ComputeOperationValue>
 */
export interface ComputeOperationListResult extends Array<ComputeOperationValue> {
}

/**
 * @interface
 * The List Availability Set operation response.
 * @extends Array<AvailabilitySet>
 */
export interface AvailabilitySetListResult extends Array<AvailabilitySet> {
  /**
   * The URI to fetch the next page of AvailabilitySets. Call ListNext() with this URI to fetch the
   * next page of AvailabilitySets.
   */
  nextLink?: string;
}

/**
 * @interface
 * The List Virtual Machine operation response.
 * @extends Array<VirtualMachineSize>
 */
export interface VirtualMachineSizeListResult extends Array<VirtualMachineSize> {
}

/**
 * @interface
 * The List Proximity Placement Group operation response.
 * @extends Array<ProximityPlacementGroup>
 */
export interface ProximityPlacementGroupListResult extends Array<ProximityPlacementGroup> {
  /**
   * The URI to fetch the next page of proximity placement groups.
   */
  nextLink?: string;
}

/**
 * @interface
 * The List Dedicated Host Group with resource group response.
 * @extends Array<DedicatedHostGroup>
 */
export interface DedicatedHostGroupListResult extends Array<DedicatedHostGroup> {
  /**
   * The URI to fetch the next page of Dedicated Host Groups. Call ListNext() with this URI to
   * fetch the next page of Dedicated Host Groups.
   */
  nextLink?: string;
}

/**
 * @interface
 * The list dedicated host operation response.
 * @extends Array<DedicatedHost>
 */
export interface DedicatedHostListResult extends Array<DedicatedHost> {
  /**
   * The URI to fetch the next page of dedicated hosts. Call ListNext() with this URI to fetch the
   * next page of dedicated hosts.
   */
  nextLink?: string;
}

/**
 * @interface
 * The list SSH public keys operation response.
 * @extends Array<SshPublicKeyResource>
 */
export interface SshPublicKeysGroupListResult extends Array<SshPublicKeyResource> {
  /**
   * The URI to fetch the next page of SSH public keys. Call ListNext() with this URI to fetch the
   * next page of SSH public keys.
   */
  nextLink?: string;
}

/**
 * @interface
 * The List Usages operation response.
 * @extends Array<Usage>
 */
export interface ListUsagesResult extends Array<Usage> {
  /**
   * The URI to fetch the next page of compute resource usage information. Call ListNext() with
   * this to fetch the next page of compute resource usage information.
   */
  nextLink?: string;
}

/**
 * @interface
 * The List Virtual Machine operation response.
 * @extends Array<VirtualMachine>
 */
export interface VirtualMachineListResult extends Array<VirtualMachine> {
  /**
   * The URI to fetch the next page of VMs. Call ListNext() with this URI to fetch the next page of
   * Virtual Machines.
   */
  nextLink?: string;
}

/**
 * @interface
 * The List Virtual Machine operation response.
 * @extends Array<VirtualMachineScaleSet>
 */
export interface VirtualMachineScaleSetListResult extends Array<VirtualMachineScaleSet> {
  /**
   * The uri to fetch the next page of Virtual Machine Scale Sets. Call ListNext() with this to
   * fetch the next page of VMSS.
   */
  nextLink?: string;
}

/**
 * @interface
 * The List Virtual Machine operation response.
 * @extends Array<VirtualMachineScaleSet>
 */
export interface VirtualMachineScaleSetListWithLinkResult extends Array<VirtualMachineScaleSet> {
  /**
   * The uri to fetch the next page of Virtual Machine Scale Sets. Call ListNext() with this to
   * fetch the next page of Virtual Machine Scale Sets.
   */
  nextLink?: string;
}

/**
 * @interface
 * The Virtual Machine Scale Set List Skus operation response.
 * @extends Array<VirtualMachineScaleSetSku>
 */
export interface VirtualMachineScaleSetListSkusResult extends Array<VirtualMachineScaleSetSku> {
  /**
   * The uri to fetch the next page of Virtual Machine Scale Set Skus. Call ListNext() with this to
   * fetch the next page of VMSS Skus.
   */
  nextLink?: string;
}

/**
 * @interface
 * List of Virtual Machine Scale Set OS Upgrade History operation response.
 * @extends Array<UpgradeOperationHistoricalStatusInfo>
 */
export interface VirtualMachineScaleSetListOSUpgradeHistory extends Array<UpgradeOperationHistoricalStatusInfo> {
  /**
   * The uri to fetch the next page of OS Upgrade History. Call ListNext() with this to fetch the
   * next page of history of upgrades.
   */
  nextLink?: string;
}

/**
 * @interface
 * The List Image operation response.
 * @extends Array<Image>
 */
export interface ImageListResult extends Array<Image> {
  /**
   * The uri to fetch the next page of Images. Call ListNext() with this to fetch the next page of
   * Images.
   */
  nextLink?: string;
}

/**
 * @interface
 * The List VM scale set extension operation response.
 * @extends Array<VirtualMachineScaleSetExtension>
 */
export interface VirtualMachineScaleSetExtensionListResult extends Array<VirtualMachineScaleSetExtension> {
  /**
   * The uri to fetch the next page of VM scale set extensions. Call ListNext() with this to fetch
   * the next page of VM scale set extensions.
   */
  nextLink?: string;
}

/**
 * @interface
 * The List Virtual Machine Scale Set VMs operation response.
 * @extends Array<VirtualMachineScaleSetVM>
 */
export interface VirtualMachineScaleSetVMListResult extends Array<VirtualMachineScaleSetVM> {
  /**
   * The uri to fetch the next page of Virtual Machine Scale Set VMs. Call ListNext() with this to
   * fetch the next page of VMSS VMs
   */
  nextLink?: string;
}

/**
 * @interface
 * The List Virtual Machine operation response.
 * @extends Array<RunCommandDocumentBase>
 */
export interface RunCommandListResult extends Array<RunCommandDocumentBase> {
  /**
   * The uri to fetch the next page of run commands. Call ListNext() with this to fetch the next
   * page of run commands.
   */
  nextLink?: string;
}

/**
 * @interface
 * The List run command operation response
 * @extends Array<VirtualMachineRunCommand>
 */
export interface VirtualMachineRunCommandsListResult extends Array<VirtualMachineRunCommand> {
  /**
   * The uri to fetch the next page of run commands.
   */
  nextLink?: string;
}

/**
 * @interface
 * The List Resource Skus operation response.
 * @extends Array<ResourceSku>
 */
export interface ResourceSkusResult extends Array<ResourceSku> {
  /**
   * The URI to fetch the next page of Resource Skus. Call ListNext() with this URI to fetch the
   * next page of Resource Skus
   */
  nextLink?: string;
}

/**
 * @interface
 * The List Disks operation response.
 * @extends Array<Disk>
 */
export interface DiskList extends Array<Disk> {
  /**
   * The uri to fetch the next page of disks. Call ListNext() with this to fetch the next page of
   * disks.
   */
  nextLink?: string;
}

/**
 * @interface
 * The List Snapshots operation response.
 * @extends Array<Snapshot>
 */
export interface SnapshotList extends Array<Snapshot> {
  /**
   * The uri to fetch the next page of snapshots. Call ListNext() with this to fetch the next page
   * of snapshots.
   */
  nextLink?: string;
}

/**
 * @interface
 * The List disk encryption set operation response.
 * @extends Array<DiskEncryptionSet>
 */
export interface DiskEncryptionSetList extends Array<DiskEncryptionSet> {
  /**
   * The uri to fetch the next page of disk encryption sets. Call ListNext() with this to fetch the
   * next page of disk encryption sets.
   */
  nextLink?: string;
}

/**
 * @interface
 * The List resources which are encrypted with the disk encryption set.
 * @extends Array<string>
 */
export interface ResourceUriList extends Array<string> {
  /**
   * The uri to fetch the next page of encrypted resources. Call ListNext() with this to fetch the
   * next page of encrypted resources.
   */
  nextLink?: string;
}

/**
 * @interface
 * The List disk access operation response.
 * @extends Array<DiskAccess>
 */
export interface DiskAccessList extends Array<DiskAccess> {
  /**
   * The uri to fetch the next page of disk access resources. Call ListNext() with this to fetch
   * the next page of disk access resources.
   */
  nextLink?: string;
}

/**
 * @interface
 * A list of private link resources
 * @extends Array<PrivateEndpointConnection>
 */
export interface PrivateEndpointConnectionListResult extends Array<PrivateEndpointConnection> {
  /**
   * The uri to fetch the next page of snapshots. Call ListNext() with this to fetch the next page
   * of snapshots.
   */
  nextLink?: string;
}

/**
 * @interface
 * The List Disk Restore Points operation response.
 * @extends Array<DiskRestorePoint>
 */
export interface DiskRestorePointList extends Array<DiskRestorePoint> {
  /**
   * The uri to fetch the next page of disk restore points. Call ListNext() with this to fetch the
   * next page of disk restore points.
   */
  nextLink?: string;
}

/**
 * @interface
 * The List Galleries operation response.
 * @extends Array<Gallery>
 */
export interface GalleryList extends Array<Gallery> {
  /**
   * The uri to fetch the next page of galleries. Call ListNext() with this to fetch the next page
   * of galleries.
   */
  nextLink?: string;
}

/**
 * @interface
 * The List Gallery Images operation response.
 * @extends Array<GalleryImage>
 */
export interface GalleryImageList extends Array<GalleryImage> {
  /**
   * The uri to fetch the next page of Image Definitions in the Shared Image Gallery. Call
   * ListNext() with this to fetch the next page of gallery Image Definitions.
   */
  nextLink?: string;
}

/**
 * @interface
 * The List Gallery Image version operation response.
 * @extends Array<GalleryImageVersion>
 */
export interface GalleryImageVersionList extends Array<GalleryImageVersion> {
  /**
   * The uri to fetch the next page of gallery Image Versions. Call ListNext() with this to fetch
   * the next page of gallery Image Versions.
   */
  nextLink?: string;
}

/**
 * @interface
 * The List Gallery Applications operation response.
 * @extends Array<GalleryApplication>
 */
export interface GalleryApplicationList extends Array<GalleryApplication> {
  /**
   * The uri to fetch the next page of Application Definitions in the Application Gallery. Call
   * ListNext() with this to fetch the next page of gallery Application Definitions.
   */
  nextLink?: string;
}

/**
 * @interface
 * The List Gallery Application version operation response.
 * @extends Array<GalleryApplicationVersion>
 */
export interface GalleryApplicationVersionList extends Array<GalleryApplicationVersion> {
  /**
   * The uri to fetch the next page of gallery Application Versions. Call ListNext() with this to
   * fetch the next page of gallery Application Versions.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the RoleInstanceListResult.
 * @extends Array<RoleInstance>
 */
export interface RoleInstanceListResult extends Array<RoleInstance> {
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the CloudServiceRoleListResult.
 * @extends Array<CloudServiceRole>
 */
export interface CloudServiceRoleListResult extends Array<CloudServiceRole> {
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the CloudServiceListResult.
 * @extends Array<CloudService>
 */
export interface CloudServiceListResult extends Array<CloudService> {
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the UpdateDomainListResult.
 * @extends Array<UpdateDomain>
 */
export interface UpdateDomainListResult extends Array<UpdateDomain> {
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the OSVersionListResult.
 * @extends Array<OSVersion>
 */
export interface OSVersionListResult extends Array<OSVersion> {
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the OSFamilyListResult.
 * @extends Array<OSFamily>
 */
export interface OSFamilyListResult extends Array<OSFamily> {
  nextLink?: string;
}

/**
 * Defines values for VmDiskTypes.
 * Possible values include: 'None', 'Unmanaged'
 * @readonly
 * @enum {string}
 */
export type VmDiskTypes = 'None' | 'Unmanaged';

/**
 * Defines values for HyperVGenerationTypes.
 * Possible values include: 'V1', 'V2'
 * @readonly
 * @enum {string}
 */
export type HyperVGenerationTypes = 'V1' | 'V2';

/**
 * Defines values for StatusLevelTypes.
 * Possible values include: 'Info', 'Warning', 'Error'
 * @readonly
 * @enum {string}
 */
export type StatusLevelTypes = 'Info' | 'Warning' | 'Error';

/**
 * Defines values for AvailabilitySetSkuTypes.
 * Possible values include: 'Classic', 'Aligned'
 * @readonly
 * @enum {string}
 */
export type AvailabilitySetSkuTypes = 'Classic' | 'Aligned';

/**
 * Defines values for ProximityPlacementGroupType.
 * Possible values include: 'Standard', 'Ultra'
 * @readonly
 * @enum {string}
 */
export type ProximityPlacementGroupType = 'Standard' | 'Ultra';

/**
 * Defines values for DedicatedHostLicenseTypes.
 * Possible values include: 'None', 'Windows_Server_Hybrid', 'Windows_Server_Perpetual'
 * @readonly
 * @enum {string}
 */
export type DedicatedHostLicenseTypes = 'None' | 'Windows_Server_Hybrid' | 'Windows_Server_Perpetual';

/**
 * Defines values for ExtendedLocationTypes.
 * Possible values include: 'EdgeZone'
 * @readonly
 * @enum {string}
 */
export type ExtendedLocationTypes = 'EdgeZone';

/**
 * Defines values for VMGuestPatchRebootBehavior.
 * Possible values include: 'Unknown', 'NeverReboots', 'AlwaysRequiresReboot', 'CanRequestReboot'
 * @readonly
 * @enum {string}
 */
export type VMGuestPatchRebootBehavior = 'Unknown' | 'NeverReboots' | 'AlwaysRequiresReboot' | 'CanRequestReboot';

/**
 * Defines values for PatchAssessmentState.
 * Possible values include: 'Unknown', 'Available'
 * @readonly
 * @enum {string}
 */
export type PatchAssessmentState = 'Unknown' | 'Available';

/**
 * Defines values for PatchOperationStatus.
 * Possible values include: 'Unknown', 'InProgress', 'Failed', 'Succeeded', 'CompletedWithWarnings'
 * @readonly
 * @enum {string}
 */
export type PatchOperationStatus = 'Unknown' | 'InProgress' | 'Failed' | 'Succeeded' | 'CompletedWithWarnings';

/**
 * Defines values for VMGuestPatchRebootSetting.
 * Possible values include: 'IfRequired', 'Never', 'Always'
 * @readonly
 * @enum {string}
 */
export type VMGuestPatchRebootSetting = 'IfRequired' | 'Never' | 'Always';

/**
 * Defines values for VMGuestPatchClassificationWindows.
 * Possible values include: 'Critical', 'Security', 'UpdateRollUp', 'FeaturePack', 'ServicePack',
 * 'Definition', 'Tools', 'Updates'
 * @readonly
 * @enum {string}
 */
export type VMGuestPatchClassificationWindows = 'Critical' | 'Security' | 'UpdateRollUp' | 'FeaturePack' | 'ServicePack' | 'Definition' | 'Tools' | 'Updates';

/**
 * Defines values for VMGuestPatchClassificationLinux.
 * Possible values include: 'Critical', 'Security', 'Other'
 * @readonly
 * @enum {string}
 */
export type VMGuestPatchClassificationLinux = 'Critical' | 'Security' | 'Other';

/**
 * Defines values for VMGuestPatchRebootStatus.
 * Possible values include: 'Unknown', 'NotNeeded', 'Required', 'Started', 'Failed', 'Completed'
 * @readonly
 * @enum {string}
 */
export type VMGuestPatchRebootStatus = 'Unknown' | 'NotNeeded' | 'Required' | 'Started' | 'Failed' | 'Completed';

/**
 * Defines values for PatchInstallationState.
 * Possible values include: 'Unknown', 'Installed', 'Failed', 'Excluded', 'NotSelected', 'Pending'
 * @readonly
 * @enum {string}
 */
export type PatchInstallationState = 'Unknown' | 'Installed' | 'Failed' | 'Excluded' | 'NotSelected' | 'Pending';

/**
 * Defines values for OperatingSystemTypes.
 * Possible values include: 'Windows', 'Linux'
 * @readonly
 * @enum {string}
 */
export type OperatingSystemTypes = 'Windows' | 'Linux';

/**
 * Defines values for VirtualMachineSizeTypes.
 * Possible values include: 'Basic_A0', 'Basic_A1', 'Basic_A2', 'Basic_A3', 'Basic_A4',
 * 'Standard_A0', 'Standard_A1', 'Standard_A2', 'Standard_A3', 'Standard_A4', 'Standard_A5',
 * 'Standard_A6', 'Standard_A7', 'Standard_A8', 'Standard_A9', 'Standard_A10', 'Standard_A11',
 * 'Standard_A1_v2', 'Standard_A2_v2', 'Standard_A4_v2', 'Standard_A8_v2', 'Standard_A2m_v2',
 * 'Standard_A4m_v2', 'Standard_A8m_v2', 'Standard_B1s', 'Standard_B1ms', 'Standard_B2s',
 * 'Standard_B2ms', 'Standard_B4ms', 'Standard_B8ms', 'Standard_D1', 'Standard_D2', 'Standard_D3',
 * 'Standard_D4', 'Standard_D11', 'Standard_D12', 'Standard_D13', 'Standard_D14', 'Standard_D1_v2',
 * 'Standard_D2_v2', 'Standard_D3_v2', 'Standard_D4_v2', 'Standard_D5_v2', 'Standard_D2_v3',
 * 'Standard_D4_v3', 'Standard_D8_v3', 'Standard_D16_v3', 'Standard_D32_v3', 'Standard_D64_v3',
 * 'Standard_D2s_v3', 'Standard_D4s_v3', 'Standard_D8s_v3', 'Standard_D16s_v3', 'Standard_D32s_v3',
 * 'Standard_D64s_v3', 'Standard_D11_v2', 'Standard_D12_v2', 'Standard_D13_v2', 'Standard_D14_v2',
 * 'Standard_D15_v2', 'Standard_DS1', 'Standard_DS2', 'Standard_DS3', 'Standard_DS4',
 * 'Standard_DS11', 'Standard_DS12', 'Standard_DS13', 'Standard_DS14', 'Standard_DS1_v2',
 * 'Standard_DS2_v2', 'Standard_DS3_v2', 'Standard_DS4_v2', 'Standard_DS5_v2', 'Standard_DS11_v2',
 * 'Standard_DS12_v2', 'Standard_DS13_v2', 'Standard_DS14_v2', 'Standard_DS15_v2',
 * 'Standard_DS13-4_v2', 'Standard_DS13-2_v2', 'Standard_DS14-8_v2', 'Standard_DS14-4_v2',
 * 'Standard_E2_v3', 'Standard_E4_v3', 'Standard_E8_v3', 'Standard_E16_v3', 'Standard_E32_v3',
 * 'Standard_E64_v3', 'Standard_E2s_v3', 'Standard_E4s_v3', 'Standard_E8s_v3', 'Standard_E16s_v3',
 * 'Standard_E32s_v3', 'Standard_E64s_v3', 'Standard_E32-16_v3', 'Standard_E32-8s_v3',
 * 'Standard_E64-32s_v3', 'Standard_E64-16s_v3', 'Standard_F1', 'Standard_F2', 'Standard_F4',
 * 'Standard_F8', 'Standard_F16', 'Standard_F1s', 'Standard_F2s', 'Standard_F4s', 'Standard_F8s',
 * 'Standard_F16s', 'Standard_F2s_v2', 'Standard_F4s_v2', 'Standard_F8s_v2', 'Standard_F16s_v2',
 * 'Standard_F32s_v2', 'Standard_F64s_v2', 'Standard_F72s_v2', 'Standard_G1', 'Standard_G2',
 * 'Standard_G3', 'Standard_G4', 'Standard_G5', 'Standard_GS1', 'Standard_GS2', 'Standard_GS3',
 * 'Standard_GS4', 'Standard_GS5', 'Standard_GS4-8', 'Standard_GS4-4', 'Standard_GS5-16',
 * 'Standard_GS5-8', 'Standard_H8', 'Standard_H16', 'Standard_H8m', 'Standard_H16m',
 * 'Standard_H16r', 'Standard_H16mr', 'Standard_L4s', 'Standard_L8s', 'Standard_L16s',
 * 'Standard_L32s', 'Standard_M64s', 'Standard_M64ms', 'Standard_M128s', 'Standard_M128ms',
 * 'Standard_M64-32ms', 'Standard_M64-16ms', 'Standard_M128-64ms', 'Standard_M128-32ms',
 * 'Standard_NC6', 'Standard_NC12', 'Standard_NC24', 'Standard_NC24r', 'Standard_NC6s_v2',
 * 'Standard_NC12s_v2', 'Standard_NC24s_v2', 'Standard_NC24rs_v2', 'Standard_NC6s_v3',
 * 'Standard_NC12s_v3', 'Standard_NC24s_v3', 'Standard_NC24rs_v3', 'Standard_ND6s',
 * 'Standard_ND12s', 'Standard_ND24s', 'Standard_ND24rs', 'Standard_NV6', 'Standard_NV12',
 * 'Standard_NV24'
 * @readonly
 * @enum {string}
 */
export type VirtualMachineSizeTypes = 'Basic_A0' | 'Basic_A1' | 'Basic_A2' | 'Basic_A3' | 'Basic_A4' | 'Standard_A0' | 'Standard_A1' | 'Standard_A2' | 'Standard_A3' | 'Standard_A4' | 'Standard_A5' | 'Standard_A6' | 'Standard_A7' | 'Standard_A8' | 'Standard_A9' | 'Standard_A10' | 'Standard_A11' | 'Standard_A1_v2' | 'Standard_A2_v2' | 'Standard_A4_v2' | 'Standard_A8_v2' | 'Standard_A2m_v2' | 'Standard_A4m_v2' | 'Standard_A8m_v2' | 'Standard_B1s' | 'Standard_B1ms' | 'Standard_B2s' | 'Standard_B2ms' | 'Standard_B4ms' | 'Standard_B8ms' | 'Standard_D1' | 'Standard_D2' | 'Standard_D3' | 'Standard_D4' | 'Standard_D11' | 'Standard_D12' | 'Standard_D13' | 'Standard_D14' | 'Standard_D1_v2' | 'Standard_D2_v2' | 'Standard_D3_v2' | 'Standard_D4_v2' | 'Standard_D5_v2' | 'Standard_D2_v3' | 'Standard_D4_v3' | 'Standard_D8_v3' | 'Standard_D16_v3' | 'Standard_D32_v3' | 'Standard_D64_v3' | 'Standard_D2s_v3' | 'Standard_D4s_v3' | 'Standard_D8s_v3' | 'Standard_D16s_v3' | 'Standard_D32s_v3' | 'Standard_D64s_v3' | 'Standard_D11_v2' | 'Standard_D12_v2' | 'Standard_D13_v2' | 'Standard_D14_v2' | 'Standard_D15_v2' | 'Standard_DS1' | 'Standard_DS2' | 'Standard_DS3' | 'Standard_DS4' | 'Standard_DS11' | 'Standard_DS12' | 'Standard_DS13' | 'Standard_DS14' | 'Standard_DS1_v2' | 'Standard_DS2_v2' | 'Standard_DS3_v2' | 'Standard_DS4_v2' | 'Standard_DS5_v2' | 'Standard_DS11_v2' | 'Standard_DS12_v2' | 'Standard_DS13_v2' | 'Standard_DS14_v2' | 'Standard_DS15_v2' | 'Standard_DS13-4_v2' | 'Standard_DS13-2_v2' | 'Standard_DS14-8_v2' | 'Standard_DS14-4_v2' | 'Standard_E2_v3' | 'Standard_E4_v3' | 'Standard_E8_v3' | 'Standard_E16_v3' | 'Standard_E32_v3' | 'Standard_E64_v3' | 'Standard_E2s_v3' | 'Standard_E4s_v3' | 'Standard_E8s_v3' | 'Standard_E16s_v3' | 'Standard_E32s_v3' | 'Standard_E64s_v3' | 'Standard_E32-16_v3' | 'Standard_E32-8s_v3' | 'Standard_E64-32s_v3' | 'Standard_E64-16s_v3' | 'Standard_F1' | 'Standard_F2' | 'Standard_F4' | 'Standard_F8' | 'Standard_F16' | 'Standard_F1s' | 'Standard_F2s' | 'Standard_F4s' | 'Standard_F8s' | 'Standard_F16s' | 'Standard_F2s_v2' | 'Standard_F4s_v2' | 'Standard_F8s_v2' | 'Standard_F16s_v2' | 'Standard_F32s_v2' | 'Standard_F64s_v2' | 'Standard_F72s_v2' | 'Standard_G1' | 'Standard_G2' | 'Standard_G3' | 'Standard_G4' | 'Standard_G5' | 'Standard_GS1' | 'Standard_GS2' | 'Standard_GS3' | 'Standard_GS4' | 'Standard_GS5' | 'Standard_GS4-8' | 'Standard_GS4-4' | 'Standard_GS5-16' | 'Standard_GS5-8' | 'Standard_H8' | 'Standard_H16' | 'Standard_H8m' | 'Standard_H16m' | 'Standard_H16r' | 'Standard_H16mr' | 'Standard_L4s' | 'Standard_L8s' | 'Standard_L16s' | 'Standard_L32s' | 'Standard_M64s' | 'Standard_M64ms' | 'Standard_M128s' | 'Standard_M128ms' | 'Standard_M64-32ms' | 'Standard_M64-16ms' | 'Standard_M128-64ms' | 'Standard_M128-32ms' | 'Standard_NC6' | 'Standard_NC12' | 'Standard_NC24' | 'Standard_NC24r' | 'Standard_NC6s_v2' | 'Standard_NC12s_v2' | 'Standard_NC24s_v2' | 'Standard_NC24rs_v2' | 'Standard_NC6s_v3' | 'Standard_NC12s_v3' | 'Standard_NC24s_v3' | 'Standard_NC24rs_v3' | 'Standard_ND6s' | 'Standard_ND12s' | 'Standard_ND24s' | 'Standard_ND24rs' | 'Standard_NV6' | 'Standard_NV12' | 'Standard_NV24';

/**
 * Defines values for CachingTypes.
 * Possible values include: 'None', 'ReadOnly', 'ReadWrite'
 * @readonly
 * @enum {string}
 */
export type CachingTypes = 'None' | 'ReadOnly' | 'ReadWrite';

/**
 * Defines values for DiskCreateOptionTypes.
 * Possible values include: 'FromImage', 'Empty', 'Attach'
 * @readonly
 * @enum {string}
 */
export type DiskCreateOptionTypes = 'FromImage' | 'Empty' | 'Attach';

/**
 * Defines values for DiskDetachOptionTypes.
 * Possible values include: 'ForceDetach'
 * @readonly
 * @enum {string}
 */
export type DiskDetachOptionTypes = 'ForceDetach';

/**
 * Defines values for StorageAccountTypes.
 * Possible values include: 'Standard_LRS', 'Premium_LRS', 'StandardSSD_LRS', 'UltraSSD_LRS',
 * 'Premium_ZRS', 'StandardSSD_ZRS'
 * @readonly
 * @enum {string}
 */
export type StorageAccountTypes = 'Standard_LRS' | 'Premium_LRS' | 'StandardSSD_LRS' | 'UltraSSD_LRS' | 'Premium_ZRS' | 'StandardSSD_ZRS';

/**
 * Defines values for DiffDiskOptions.
 * Possible values include: 'Local'
 * @readonly
 * @enum {string}
 */
export type DiffDiskOptions = 'Local';

/**
 * Defines values for DiffDiskPlacement.
 * Possible values include: 'CacheDisk', 'ResourceDisk'
 * @readonly
 * @enum {string}
 */
export type DiffDiskPlacement = 'CacheDisk' | 'ResourceDisk';

/**
 * Defines values for SecurityTypes.
 * Possible values include: 'TrustedLaunch'
 * @readonly
 * @enum {string}
 */
export type SecurityTypes = 'TrustedLaunch';

/**
 * Defines values for PassNames.
 * Possible values include: 'OobeSystem'
 * @readonly
 * @enum {string}
 */
export type PassNames = 'OobeSystem';

/**
 * Defines values for ComponentNames.
 * Possible values include: 'Microsoft-Windows-Shell-Setup'
 * @readonly
 * @enum {string}
 */
export type ComponentNames = 'Microsoft-Windows-Shell-Setup';

/**
 * Defines values for SettingNames.
 * Possible values include: 'AutoLogon', 'FirstLogonCommands'
 * @readonly
 * @enum {string}
 */
export type SettingNames = 'AutoLogon' | 'FirstLogonCommands';

/**
 * Defines values for ProtocolTypes.
 * Possible values include: 'Http', 'Https'
 * @readonly
 * @enum {string}
 */
export type ProtocolTypes = 'Http' | 'Https';

/**
 * Defines values for WindowsVMGuestPatchMode.
 * Possible values include: 'Manual', 'AutomaticByOS', 'AutomaticByPlatform'
 * @readonly
 * @enum {string}
 */
export type WindowsVMGuestPatchMode = 'Manual' | 'AutomaticByOS' | 'AutomaticByPlatform';

/**
 * Defines values for LinuxVMGuestPatchMode.
 * Possible values include: 'ImageDefault', 'AutomaticByPlatform'
 * @readonly
 * @enum {string}
 */
export type LinuxVMGuestPatchMode = 'ImageDefault' | 'AutomaticByPlatform';

/**
 * Defines values for VirtualMachinePriorityTypes.
 * Possible values include: 'Regular', 'Low', 'Spot'
 * @readonly
 * @enum {string}
 */
export type VirtualMachinePriorityTypes = 'Regular' | 'Low' | 'Spot';

/**
 * Defines values for VirtualMachineEvictionPolicyTypes.
 * Possible values include: 'Deallocate', 'Delete'
 * @readonly
 * @enum {string}
 */
export type VirtualMachineEvictionPolicyTypes = 'Deallocate' | 'Delete';

/**
 * Defines values for ResourceIdentityType.
 * Possible values include: 'SystemAssigned', 'UserAssigned', 'SystemAssigned, UserAssigned',
 * 'None'
 * @readonly
 * @enum {string}
 */
export type ResourceIdentityType = 'SystemAssigned' | 'UserAssigned' | 'SystemAssigned, UserAssigned' | 'None';

/**
 * Defines values for MaintenanceOperationResultCodeTypes.
 * Possible values include: 'None', 'RetryLater', 'MaintenanceAborted', 'MaintenanceCompleted'
 * @readonly
 * @enum {string}
 */
export type MaintenanceOperationResultCodeTypes = 'None' | 'RetryLater' | 'MaintenanceAborted' | 'MaintenanceCompleted';

/**
 * Defines values for HyperVGenerationType.
 * Possible values include: 'V1', 'V2'
 * @readonly
 * @enum {string}
 */
export type HyperVGenerationType = 'V1' | 'V2';

/**
 * Defines values for UpgradeMode.
 * Possible values include: 'Automatic', 'Manual', 'Rolling'
 * @readonly
 * @enum {string}
 */
export type UpgradeMode = 'Automatic' | 'Manual' | 'Rolling';

/**
 * Defines values for VirtualMachineScaleSetScaleInRules.
 * Possible values include: 'Default', 'OldestVM', 'NewestVM'
 * @readonly
 * @enum {string}
 */
export type VirtualMachineScaleSetScaleInRules = 'Default' | 'OldestVM' | 'NewestVM';

/**
 * Defines values for OrchestrationMode.
 * Possible values include: 'Uniform', 'Flexible'
 * @readonly
 * @enum {string}
 */
export type OrchestrationMode = 'Uniform' | 'Flexible';

/**
 * Defines values for OperatingSystemStateTypes.
 * Possible values include: 'Generalized', 'Specialized'
 * @readonly
 * @enum {string}
 */
export type OperatingSystemStateTypes = 'Generalized' | 'Specialized';

/**
 * Defines values for IPVersion.
 * Possible values include: 'IPv4', 'IPv6'
 * @readonly
 * @enum {string}
 */
export type IPVersion = 'IPv4' | 'IPv6';

/**
 * Defines values for OrchestrationServiceNames.
 * Possible values include: 'AutomaticRepairs'
 * @readonly
 * @enum {string}
 */
export type OrchestrationServiceNames = 'AutomaticRepairs' ;

/**
 * Defines values for OrchestrationServiceState.
 * Possible values include: 'NotRunning', 'Running', 'Suspended'
 * @readonly
 * @enum {string}
 */
export type OrchestrationServiceState = 'NotRunning' | 'Running' | 'Suspended';

/**
 * Defines values for VirtualMachineScaleSetSkuScaleType.
 * Possible values include: 'Automatic', 'None'
 * @readonly
 * @enum {string}
 */
export type VirtualMachineScaleSetSkuScaleType = 'Automatic' | 'None';

/**
 * Defines values for UpgradeState.
 * Possible values include: 'RollingForward', 'Cancelled', 'Completed', 'Faulted'
 * @readonly
 * @enum {string}
 */
export type UpgradeState = 'RollingForward' | 'Cancelled' | 'Completed' | 'Faulted';

/**
 * Defines values for UpgradeOperationInvoker.
 * Possible values include: 'Unknown', 'User', 'Platform'
 * @readonly
 * @enum {string}
 */
export type UpgradeOperationInvoker = 'Unknown' | 'User' | 'Platform';

/**
 * Defines values for RollingUpgradeStatusCode.
 * Possible values include: 'RollingForward', 'Cancelled', 'Completed', 'Faulted'
 * @readonly
 * @enum {string}
 */
export type RollingUpgradeStatusCode = 'RollingForward' | 'Cancelled' | 'Completed' | 'Faulted';

/**
 * Defines values for RollingUpgradeActionType.
 * Possible values include: 'Start', 'Cancel'
 * @readonly
 * @enum {string}
 */
export type RollingUpgradeActionType = 'Start' | 'Cancel';

/**
 * Defines values for IntervalInMins.
 * Possible values include: 'ThreeMins', 'FiveMins', 'ThirtyMins', 'SixtyMins'
 * @readonly
 * @enum {string}
 */
export type IntervalInMins = 'ThreeMins' | 'FiveMins' | 'ThirtyMins' | 'SixtyMins';

/**
 * Defines values for OrchestrationServiceStateAction.
 * Possible values include: 'Resume', 'Suspend'
 * @readonly
 * @enum {string}
 */
export type OrchestrationServiceStateAction = 'Resume' | 'Suspend';

/**
 * Defines values for ExecutionState.
 * Possible values include: 'Unknown', 'Pending', 'Running', 'Failed', 'Succeeded', 'TimedOut',
 * 'Canceled'
 * @readonly
 * @enum {string}
 */
export type ExecutionState = 'Unknown' | 'Pending' | 'Running' | 'Failed' | 'Succeeded' | 'TimedOut' | 'Canceled';

/**
 * Defines values for ResourceSkuCapacityScaleType.
 * Possible values include: 'Automatic', 'Manual', 'None'
 * @readonly
 * @enum {string}
 */
export type ResourceSkuCapacityScaleType = 'Automatic' | 'Manual' | 'None';

/**
 * Defines values for ResourceSkuRestrictionsType.
 * Possible values include: 'Location', 'Zone'
 * @readonly
 * @enum {string}
 */
export type ResourceSkuRestrictionsType = 'Location' | 'Zone';

/**
 * Defines values for ResourceSkuRestrictionsReasonCode.
 * Possible values include: 'QuotaId', 'NotAvailableForSubscription'
 * @readonly
 * @enum {string}
 */
export type ResourceSkuRestrictionsReasonCode = 'QuotaId' | 'NotAvailableForSubscription';

/**
 * Defines values for DiskStorageAccountTypes.
 * Possible values include: 'Standard_LRS', 'Premium_LRS', 'StandardSSD_LRS', 'UltraSSD_LRS',
 * 'Premium_ZRS', 'StandardSSD_ZRS'
 * @readonly
 * @enum {string}
 */
export type DiskStorageAccountTypes = 'Standard_LRS' | 'Premium_LRS' | 'StandardSSD_LRS' | 'UltraSSD_LRS' | 'Premium_ZRS' | 'StandardSSD_ZRS';

/**
 * Defines values for HyperVGeneration.
 * Possible values include: 'V1', 'V2'
 * @readonly
 * @enum {string}
 */
export type HyperVGeneration = 'V1' | 'V2';

/**
 * Defines values for DiskCreateOption.
 * Possible values include: 'Empty', 'Attach', 'FromImage', 'Import', 'Copy', 'Restore', 'Upload'
 * @readonly
 * @enum {string}
 */
export type DiskCreateOption = 'Empty' | 'Attach' | 'FromImage' | 'Import' | 'Copy' | 'Restore' | 'Upload';

/**
 * Defines values for DiskState.
 * Possible values include: 'Unattached', 'Attached', 'Reserved', 'ActiveSAS', 'ReadyToUpload',
 * 'ActiveUpload'
 * @readonly
 * @enum {string}
 */
export type DiskState = 'Unattached' | 'Attached' | 'Reserved' | 'ActiveSAS' | 'ReadyToUpload' | 'ActiveUpload';

/**
 * Defines values for EncryptionType.
 * Possible values include: 'EncryptionAtRestWithPlatformKey', 'EncryptionAtRestWithCustomerKey',
 * 'EncryptionAtRestWithPlatformAndCustomerKeys'
 * @readonly
 * @enum {string}
 */
export type EncryptionType = 'EncryptionAtRestWithPlatformKey' | 'EncryptionAtRestWithCustomerKey' | 'EncryptionAtRestWithPlatformAndCustomerKeys';

/**
 * Defines values for NetworkAccessPolicy.
 * Possible values include: 'AllowAll', 'AllowPrivate', 'DenyAll'
 * @readonly
 * @enum {string}
 */
export type NetworkAccessPolicy = 'AllowAll' | 'AllowPrivate' | 'DenyAll';

/**
 * Defines values for DiskSecurityTypes.
 * Possible values include: 'TrustedLaunch'
 * @readonly
 * @enum {string}
 */
export type DiskSecurityTypes = 'TrustedLaunch';

/**
 * Defines values for SnapshotStorageAccountTypes.
 * Possible values include: 'Standard_LRS', 'Premium_LRS', 'Standard_ZRS'
 * @readonly
 * @enum {string}
 */
export type SnapshotStorageAccountTypes = 'Standard_LRS' | 'Premium_LRS' | 'Standard_ZRS';

/**
 * Defines values for DiskEncryptionSetType.
 * Possible values include: 'EncryptionAtRestWithCustomerKey',
 * 'EncryptionAtRestWithPlatformAndCustomerKeys'
 * @readonly
 * @enum {string}
 */
export type DiskEncryptionSetType = 'EncryptionAtRestWithCustomerKey' | 'EncryptionAtRestWithPlatformAndCustomerKeys';

/**
 * Defines values for AccessLevel.
 * Possible values include: 'None', 'Read', 'Write'
 * @readonly
 * @enum {string}
 */
export type AccessLevel = 'None' | 'Read' | 'Write';

/**
 * Defines values for DiskEncryptionSetIdentityType.
 * Possible values include: 'SystemAssigned', 'None'
 * @readonly
 * @enum {string}
 */
export type DiskEncryptionSetIdentityType = 'SystemAssigned' | 'None';

/**
 * Defines values for PrivateEndpointServiceConnectionStatus.
 * Possible values include: 'Pending', 'Approved', 'Rejected'
 * @readonly
 * @enum {string}
 */
export type PrivateEndpointServiceConnectionStatus = 'Pending' | 'Approved' | 'Rejected';

/**
 * Defines values for PrivateEndpointConnectionProvisioningState.
 * Possible values include: 'Succeeded', 'Creating', 'Deleting', 'Failed'
 * @readonly
 * @enum {string}
 */
export type PrivateEndpointConnectionProvisioningState = 'Succeeded' | 'Creating' | 'Deleting' | 'Failed';

/**
 * Defines values for AggregatedReplicationState.
 * Possible values include: 'Unknown', 'InProgress', 'Completed', 'Failed'
 * @readonly
 * @enum {string}
 */
export type AggregatedReplicationState = 'Unknown' | 'InProgress' | 'Completed' | 'Failed';

/**
 * Defines values for ReplicationState.
 * Possible values include: 'Unknown', 'Replicating', 'Completed', 'Failed'
 * @readonly
 * @enum {string}
 */
export type ReplicationState = 'Unknown' | 'Replicating' | 'Completed' | 'Failed';

/**
 * Defines values for StorageAccountType.
 * Possible values include: 'Standard_LRS', 'Standard_ZRS', 'Premium_LRS'
 * @readonly
 * @enum {string}
 */
export type StorageAccountType = 'Standard_LRS' | 'Standard_ZRS' | 'Premium_LRS';

/**
 * Defines values for HostCaching.
 * Possible values include: 'None', 'ReadOnly', 'ReadWrite'
 * @readonly
 * @enum {string}
 */
export type HostCaching = 'None' | 'ReadOnly' | 'ReadWrite';

/**
 * Defines values for CloudServiceUpgradeMode.
 * Possible values include: 'Auto', 'Manual', 'Simultaneous'
 * @readonly
 * @enum {string}
 */
export type CloudServiceUpgradeMode = 'Auto' | 'Manual' | 'Simultaneous';

/**
 * Defines values for InstanceViewTypes.
 * Possible values include: 'instanceView'
 * @readonly
 * @enum {string}
 */
export type InstanceViewTypes = 'instanceView';

/**
 * Defines values for ReplicationStatusTypes.
 * Possible values include: 'ReplicationStatus'
 * @readonly
 * @enum {string}
 */
export type ReplicationStatusTypes = 'ReplicationStatus';

/**
 * Defines values for ProvisioningState.
 * Possible values include: 'Creating', 'Updating', 'Failed', 'Succeeded', 'Deleting', 'Migrating'
 * @readonly
 * @enum {string}
 */
export type ProvisioningState = 'Creating' | 'Updating' | 'Failed' | 'Succeeded' | 'Deleting' | 'Migrating';

/**
 * Defines values for ProvisioningState1.
 * Possible values include: 'Creating', 'Updating', 'Failed', 'Succeeded', 'Deleting', 'Migrating'
 * @readonly
 * @enum {string}
 */
export type ProvisioningState1 = 'Creating' | 'Updating' | 'Failed' | 'Succeeded' | 'Deleting' | 'Migrating';

/**
 * Defines values for ProvisioningState2.
 * Possible values include: 'Creating', 'Updating', 'Failed', 'Succeeded', 'Deleting', 'Migrating'
 * @readonly
 * @enum {string}
 */
export type ProvisioningState2 = 'Creating' | 'Updating' | 'Failed' | 'Succeeded' | 'Deleting' | 'Migrating';

/**
 * Defines values for ProvisioningState3.
 * Possible values include: 'Creating', 'Updating', 'Failed', 'Succeeded', 'Deleting', 'Migrating'
 * @readonly
 * @enum {string}
 */
export type ProvisioningState3 = 'Creating' | 'Updating' | 'Failed' | 'Succeeded' | 'Deleting' | 'Migrating';

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = ComputeOperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ComputeOperationListResult;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type AvailabilitySetsCreateOrUpdateResponse = AvailabilitySet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AvailabilitySet;
    };
};

/**
 * Contains response data for the update operation.
 */
export type AvailabilitySetsUpdateResponse = AvailabilitySet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AvailabilitySet;
    };
};

/**
 * Contains response data for the get operation.
 */
export type AvailabilitySetsGetResponse = AvailabilitySet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AvailabilitySet;
    };
};

/**
 * Contains response data for the listBySubscription operation.
 */
export type AvailabilitySetsListBySubscriptionResponse = AvailabilitySetListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AvailabilitySetListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type AvailabilitySetsListResponse = AvailabilitySetListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AvailabilitySetListResult;
    };
};

/**
 * Contains response data for the listAvailableSizes operation.
 */
export type AvailabilitySetsListAvailableSizesResponse = VirtualMachineSizeListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineSizeListResult;
    };
};

/**
 * Contains response data for the listBySubscriptionNext operation.
 */
export type AvailabilitySetsListBySubscriptionNextResponse = AvailabilitySetListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AvailabilitySetListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type AvailabilitySetsListNextResponse = AvailabilitySetListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AvailabilitySetListResult;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ProximityPlacementGroupsCreateOrUpdateResponse = ProximityPlacementGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProximityPlacementGroup;
    };
};

/**
 * Contains response data for the update operation.
 */
export type ProximityPlacementGroupsUpdateResponse = ProximityPlacementGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProximityPlacementGroup;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ProximityPlacementGroupsGetResponse = ProximityPlacementGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProximityPlacementGroup;
    };
};

/**
 * Contains response data for the listBySubscription operation.
 */
export type ProximityPlacementGroupsListBySubscriptionResponse = ProximityPlacementGroupListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProximityPlacementGroupListResult;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type ProximityPlacementGroupsListByResourceGroupResponse = ProximityPlacementGroupListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProximityPlacementGroupListResult;
    };
};

/**
 * Contains response data for the listBySubscriptionNext operation.
 */
export type ProximityPlacementGroupsListBySubscriptionNextResponse = ProximityPlacementGroupListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProximityPlacementGroupListResult;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type ProximityPlacementGroupsListByResourceGroupNextResponse = ProximityPlacementGroupListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProximityPlacementGroupListResult;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type DedicatedHostGroupsCreateOrUpdateResponse = DedicatedHostGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DedicatedHostGroup;
    };
};

/**
 * Contains response data for the update operation.
 */
export type DedicatedHostGroupsUpdateResponse = DedicatedHostGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DedicatedHostGroup;
    };
};

/**
 * Contains response data for the get operation.
 */
export type DedicatedHostGroupsGetResponse = DedicatedHostGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DedicatedHostGroup;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type DedicatedHostGroupsListByResourceGroupResponse = DedicatedHostGroupListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DedicatedHostGroupListResult;
    };
};

/**
 * Contains response data for the listBySubscription operation.
 */
export type DedicatedHostGroupsListBySubscriptionResponse = DedicatedHostGroupListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DedicatedHostGroupListResult;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type DedicatedHostGroupsListByResourceGroupNextResponse = DedicatedHostGroupListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DedicatedHostGroupListResult;
    };
};

/**
 * Contains response data for the listBySubscriptionNext operation.
 */
export type DedicatedHostGroupsListBySubscriptionNextResponse = DedicatedHostGroupListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DedicatedHostGroupListResult;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type DedicatedHostsCreateOrUpdateResponse = DedicatedHost & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DedicatedHost;
    };
};

/**
 * Contains response data for the update operation.
 */
export type DedicatedHostsUpdateResponse = DedicatedHost & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DedicatedHost;
    };
};

/**
 * Contains response data for the get operation.
 */
export type DedicatedHostsGetResponse = DedicatedHost & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DedicatedHost;
    };
};

/**
 * Contains response data for the listByHostGroup operation.
 */
export type DedicatedHostsListByHostGroupResponse = DedicatedHostListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DedicatedHostListResult;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type DedicatedHostsBeginCreateOrUpdateResponse = DedicatedHost & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DedicatedHost;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type DedicatedHostsBeginUpdateResponse = DedicatedHost & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DedicatedHost;
    };
};

/**
 * Contains response data for the listByHostGroupNext operation.
 */
export type DedicatedHostsListByHostGroupNextResponse = DedicatedHostListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DedicatedHostListResult;
    };
};

/**
 * Contains response data for the listBySubscription operation.
 */
export type SshPublicKeysListBySubscriptionResponse = SshPublicKeysGroupListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SshPublicKeysGroupListResult;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type SshPublicKeysListByResourceGroupResponse = SshPublicKeysGroupListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SshPublicKeysGroupListResult;
    };
};

/**
 * Contains response data for the create operation.
 */
export type SshPublicKeysCreateResponse = SshPublicKeyResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SshPublicKeyResource;
    };
};

/**
 * Contains response data for the update operation.
 */
export type SshPublicKeysUpdateResponse = SshPublicKeyResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SshPublicKeyResource;
    };
};

/**
 * Contains response data for the get operation.
 */
export type SshPublicKeysGetResponse = SshPublicKeyResource & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SshPublicKeyResource;
    };
};

/**
 * Contains response data for the generateKeyPair operation.
 */
export type SshPublicKeysGenerateKeyPairResponse = SshPublicKeyGenerateKeyPairResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SshPublicKeyGenerateKeyPairResult;
    };
};

/**
 * Contains response data for the listBySubscriptionNext operation.
 */
export type SshPublicKeysListBySubscriptionNextResponse = SshPublicKeysGroupListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SshPublicKeysGroupListResult;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type SshPublicKeysListByResourceGroupNextResponse = SshPublicKeysGroupListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SshPublicKeysGroupListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type VirtualMachineExtensionImagesGetResponse = VirtualMachineExtensionImage & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineExtensionImage;
    };
};

/**
 * Contains response data for the listTypes operation.
 */
export type VirtualMachineExtensionImagesListTypesResponse = Array<VirtualMachineExtensionImage> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineExtensionImage[];
    };
};

/**
 * Contains response data for the listVersions operation.
 */
export type VirtualMachineExtensionImagesListVersionsResponse = Array<VirtualMachineExtensionImage> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineExtensionImage[];
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type VirtualMachineExtensionsCreateOrUpdateResponse = VirtualMachineExtension & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineExtension;
    };
};

/**
 * Contains response data for the update operation.
 */
export type VirtualMachineExtensionsUpdateResponse = VirtualMachineExtension & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineExtension;
    };
};

/**
 * Contains response data for the get operation.
 */
export type VirtualMachineExtensionsGetResponse = VirtualMachineExtension & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineExtension;
    };
};

/**
 * Contains response data for the list operation.
 */
export type VirtualMachineExtensionsListResponse = VirtualMachineExtensionsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineExtensionsListResult;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type VirtualMachineExtensionsBeginCreateOrUpdateResponse = VirtualMachineExtension & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineExtension;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type VirtualMachineExtensionsBeginUpdateResponse = VirtualMachineExtension & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineExtension;
    };
};

/**
 * Contains response data for the get operation.
 */
export type VirtualMachineImagesGetResponse = VirtualMachineImage & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineImage;
    };
};

/**
 * Contains response data for the list operation.
 */
export type VirtualMachineImagesListResponse = Array<VirtualMachineImageResource> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineImageResource[];
    };
};

/**
 * Contains response data for the listOffers operation.
 */
export type VirtualMachineImagesListOffersResponse = Array<VirtualMachineImageResource> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineImageResource[];
    };
};

/**
 * Contains response data for the listPublishers operation.
 */
export type VirtualMachineImagesListPublishersResponse = Array<VirtualMachineImageResource> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineImageResource[];
    };
};

/**
 * Contains response data for the listSkus operation.
 */
export type VirtualMachineImagesListSkusResponse = Array<VirtualMachineImageResource> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineImageResource[];
    };
};

/**
 * Contains response data for the get operation.
 */
export type VirtualMachineImagesEdgeZoneGetResponse = VirtualMachineImage & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineImage;
    };
};

/**
 * Contains response data for the list operation.
 */
export type VirtualMachineImagesEdgeZoneListResponse = Array<VirtualMachineImageResource> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineImageResource[];
    };
};

/**
 * Contains response data for the listOffers operation.
 */
export type VirtualMachineImagesEdgeZoneListOffersResponse = Array<VirtualMachineImageResource> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineImageResource[];
    };
};

/**
 * Contains response data for the listPublishers operation.
 */
export type VirtualMachineImagesEdgeZoneListPublishersResponse = Array<VirtualMachineImageResource> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineImageResource[];
    };
};

/**
 * Contains response data for the listSkus operation.
 */
export type VirtualMachineImagesEdgeZoneListSkusResponse = Array<VirtualMachineImageResource> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineImageResource[];
    };
};

/**
 * Contains response data for the list operation.
 */
export type UsageListResponse = ListUsagesResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ListUsagesResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type UsageListNextResponse = ListUsagesResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ListUsagesResult;
    };
};

/**
 * Contains response data for the listByLocation operation.
 */
export type VirtualMachinesListByLocationResponse = VirtualMachineListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineListResult;
    };
};

/**
 * Contains response data for the capture operation.
 */
export type VirtualMachinesCaptureResponse = VirtualMachineCaptureResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineCaptureResult;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type VirtualMachinesCreateOrUpdateResponse = VirtualMachine & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachine;
    };
};

/**
 * Contains response data for the update operation.
 */
export type VirtualMachinesUpdateResponse = VirtualMachine & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachine;
    };
};

/**
 * Contains response data for the get operation.
 */
export type VirtualMachinesGetResponse = VirtualMachine & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachine;
    };
};

/**
 * Contains response data for the instanceView operation.
 */
export type VirtualMachinesInstanceViewResponse = VirtualMachineInstanceView & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineInstanceView;
    };
};

/**
 * Contains response data for the list operation.
 */
export type VirtualMachinesListResponse = VirtualMachineListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineListResult;
    };
};

/**
 * Contains response data for the listAll operation.
 */
export type VirtualMachinesListAllResponse = VirtualMachineListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineListResult;
    };
};

/**
 * Contains response data for the listAvailableSizes operation.
 */
export type VirtualMachinesListAvailableSizesResponse = VirtualMachineSizeListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineSizeListResult;
    };
};

/**
 * Contains response data for the retrieveBootDiagnosticsData operation.
 */
export type VirtualMachinesRetrieveBootDiagnosticsDataResponse = RetrieveBootDiagnosticsDataResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RetrieveBootDiagnosticsDataResult;
    };
};

/**
 * Contains response data for the assessPatches operation.
 */
export type VirtualMachinesAssessPatchesResponse = VirtualMachineAssessPatchesResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineAssessPatchesResult;
    };
};

/**
 * Contains response data for the installPatches operation.
 */
export type VirtualMachinesInstallPatchesResponse = VirtualMachineInstallPatchesResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineInstallPatchesResult;
    };
};

/**
 * Contains response data for the runCommand operation.
 */
export type VirtualMachinesRunCommandResponse = RunCommandResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RunCommandResult;
    };
};

/**
 * Contains response data for the beginCapture operation.
 */
export type VirtualMachinesBeginCaptureResponse = VirtualMachineCaptureResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineCaptureResult;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type VirtualMachinesBeginCreateOrUpdateResponse = VirtualMachine & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachine;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type VirtualMachinesBeginUpdateResponse = VirtualMachine & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachine;
    };
};

/**
 * Contains response data for the beginAssessPatches operation.
 */
export type VirtualMachinesBeginAssessPatchesResponse = VirtualMachineAssessPatchesResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineAssessPatchesResult;
    };
};

/**
 * Contains response data for the beginInstallPatches operation.
 */
export type VirtualMachinesBeginInstallPatchesResponse = VirtualMachineInstallPatchesResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineInstallPatchesResult;
    };
};

/**
 * Contains response data for the beginRunCommand operation.
 */
export type VirtualMachinesBeginRunCommandResponse = RunCommandResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RunCommandResult;
    };
};

/**
 * Contains response data for the listByLocationNext operation.
 */
export type VirtualMachinesListByLocationNextResponse = VirtualMachineListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type VirtualMachinesListNextResponse = VirtualMachineListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineListResult;
    };
};

/**
 * Contains response data for the listAllNext operation.
 */
export type VirtualMachinesListAllNextResponse = VirtualMachineListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineListResult;
    };
};

/**
 * Contains response data for the listByLocation operation.
 */
export type VirtualMachineScaleSetsListByLocationResponse = VirtualMachineScaleSetListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineScaleSetListResult;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type VirtualMachineScaleSetsCreateOrUpdateResponse = VirtualMachineScaleSet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineScaleSet;
    };
};

/**
 * Contains response data for the update operation.
 */
export type VirtualMachineScaleSetsUpdateResponse = VirtualMachineScaleSet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineScaleSet;
    };
};

/**
 * Contains response data for the get operation.
 */
export type VirtualMachineScaleSetsGetResponse = VirtualMachineScaleSet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineScaleSet;
    };
};

/**
 * Contains response data for the getInstanceView operation.
 */
export type VirtualMachineScaleSetsGetInstanceViewResponse = VirtualMachineScaleSetInstanceView & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineScaleSetInstanceView;
    };
};

/**
 * Contains response data for the list operation.
 */
export type VirtualMachineScaleSetsListResponse = VirtualMachineScaleSetListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineScaleSetListResult;
    };
};

/**
 * Contains response data for the listAll operation.
 */
export type VirtualMachineScaleSetsListAllResponse = VirtualMachineScaleSetListWithLinkResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineScaleSetListWithLinkResult;
    };
};

/**
 * Contains response data for the listSkus operation.
 */
export type VirtualMachineScaleSetsListSkusResponse = VirtualMachineScaleSetListSkusResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineScaleSetListSkusResult;
    };
};

/**
 * Contains response data for the getOSUpgradeHistory operation.
 */
export type VirtualMachineScaleSetsGetOSUpgradeHistoryResponse = VirtualMachineScaleSetListOSUpgradeHistory & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineScaleSetListOSUpgradeHistory;
    };
};

/**
 * Contains response data for the forceRecoveryServiceFabricPlatformUpdateDomainWalk operation.
 */
export type VirtualMachineScaleSetsForceRecoveryServiceFabricPlatformUpdateDomainWalkResponse = RecoveryWalkResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecoveryWalkResponse;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type VirtualMachineScaleSetsBeginCreateOrUpdateResponse = VirtualMachineScaleSet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineScaleSet;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type VirtualMachineScaleSetsBeginUpdateResponse = VirtualMachineScaleSet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineScaleSet;
    };
};

/**
 * Contains response data for the listByLocationNext operation.
 */
export type VirtualMachineScaleSetsListByLocationNextResponse = VirtualMachineScaleSetListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineScaleSetListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type VirtualMachineScaleSetsListNextResponse = VirtualMachineScaleSetListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineScaleSetListResult;
    };
};

/**
 * Contains response data for the listAllNext operation.
 */
export type VirtualMachineScaleSetsListAllNextResponse = VirtualMachineScaleSetListWithLinkResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineScaleSetListWithLinkResult;
    };
};

/**
 * Contains response data for the listSkusNext operation.
 */
export type VirtualMachineScaleSetsListSkusNextResponse = VirtualMachineScaleSetListSkusResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineScaleSetListSkusResult;
    };
};

/**
 * Contains response data for the getOSUpgradeHistoryNext operation.
 */
export type VirtualMachineScaleSetsGetOSUpgradeHistoryNextResponse = VirtualMachineScaleSetListOSUpgradeHistory & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineScaleSetListOSUpgradeHistory;
    };
};

/**
 * Contains response data for the list operation.
 */
export type VirtualMachineSizesListResponse = VirtualMachineSizeListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineSizeListResult;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ImagesCreateOrUpdateResponse = Image & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Image;
    };
};

/**
 * Contains response data for the update operation.
 */
export type ImagesUpdateResponse = Image & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Image;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ImagesGetResponse = Image & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Image;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type ImagesListByResourceGroupResponse = ImageListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ImageListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type ImagesListResponse = ImageListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ImageListResult;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type ImagesBeginCreateOrUpdateResponse = Image & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Image;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type ImagesBeginUpdateResponse = Image & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Image;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type ImagesListByResourceGroupNextResponse = ImageListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ImageListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type ImagesListNextResponse = ImageListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ImageListResult;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type VirtualMachineScaleSetExtensionsCreateOrUpdateResponse = VirtualMachineScaleSetExtension & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineScaleSetExtension;
    };
};

/**
 * Contains response data for the update operation.
 */
export type VirtualMachineScaleSetExtensionsUpdateResponse = VirtualMachineScaleSetExtension & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineScaleSetExtension;
    };
};

/**
 * Contains response data for the get operation.
 */
export type VirtualMachineScaleSetExtensionsGetResponse = VirtualMachineScaleSetExtension & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineScaleSetExtension;
    };
};

/**
 * Contains response data for the list operation.
 */
export type VirtualMachineScaleSetExtensionsListResponse = VirtualMachineScaleSetExtensionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineScaleSetExtensionListResult;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type VirtualMachineScaleSetExtensionsBeginCreateOrUpdateResponse = VirtualMachineScaleSetExtension & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineScaleSetExtension;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type VirtualMachineScaleSetExtensionsBeginUpdateResponse = VirtualMachineScaleSetExtension & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineScaleSetExtension;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type VirtualMachineScaleSetExtensionsListNextResponse = VirtualMachineScaleSetExtensionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineScaleSetExtensionListResult;
    };
};

/**
 * Contains response data for the getLatest operation.
 */
export type VirtualMachineScaleSetRollingUpgradesGetLatestResponse = RollingUpgradeStatusInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RollingUpgradeStatusInfo;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type VirtualMachineScaleSetVMExtensionsCreateOrUpdateResponse = VirtualMachineScaleSetVMExtension & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineScaleSetVMExtension;
    };
};

/**
 * Contains response data for the update operation.
 */
export type VirtualMachineScaleSetVMExtensionsUpdateResponse = VirtualMachineScaleSetVMExtension & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineScaleSetVMExtension;
    };
};

/**
 * Contains response data for the get operation.
 */
export type VirtualMachineScaleSetVMExtensionsGetResponse = VirtualMachineScaleSetVMExtension & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineScaleSetVMExtension;
    };
};

/**
 * Contains response data for the list operation.
 */
export type VirtualMachineScaleSetVMExtensionsListResponse = VirtualMachineScaleSetVMExtensionsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineScaleSetVMExtensionsListResult;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type VirtualMachineScaleSetVMExtensionsBeginCreateOrUpdateResponse = VirtualMachineScaleSetVMExtension & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineScaleSetVMExtension;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type VirtualMachineScaleSetVMExtensionsBeginUpdateResponse = VirtualMachineScaleSetVMExtension & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineScaleSetVMExtension;
    };
};

/**
 * Contains response data for the update operation.
 */
export type VirtualMachineScaleSetVMsUpdateResponse = VirtualMachineScaleSetVM & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineScaleSetVM;
    };
};

/**
 * Contains response data for the get operation.
 */
export type VirtualMachineScaleSetVMsGetResponse = VirtualMachineScaleSetVM & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineScaleSetVM;
    };
};

/**
 * Contains response data for the getInstanceView operation.
 */
export type VirtualMachineScaleSetVMsGetInstanceViewResponse = VirtualMachineScaleSetVMInstanceView & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineScaleSetVMInstanceView;
    };
};

/**
 * Contains response data for the list operation.
 */
export type VirtualMachineScaleSetVMsListResponse = VirtualMachineScaleSetVMListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineScaleSetVMListResult;
    };
};

/**
 * Contains response data for the retrieveBootDiagnosticsData operation.
 */
export type VirtualMachineScaleSetVMsRetrieveBootDiagnosticsDataResponse = RetrieveBootDiagnosticsDataResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RetrieveBootDiagnosticsDataResult;
    };
};

/**
 * Contains response data for the runCommand operation.
 */
export type VirtualMachineScaleSetVMsRunCommandResponse = RunCommandResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RunCommandResult;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type VirtualMachineScaleSetVMsBeginUpdateResponse = VirtualMachineScaleSetVM & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineScaleSetVM;
    };
};

/**
 * Contains response data for the beginRunCommand operation.
 */
export type VirtualMachineScaleSetVMsBeginRunCommandResponse = RunCommandResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RunCommandResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type VirtualMachineScaleSetVMsListNextResponse = VirtualMachineScaleSetVMListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineScaleSetVMListResult;
    };
};

/**
 * Contains response data for the exportRequestRateByInterval operation.
 */
export type LogAnalyticsExportRequestRateByIntervalResponse = LogAnalyticsOperationResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LogAnalyticsOperationResult;
    };
};

/**
 * Contains response data for the exportThrottledRequests operation.
 */
export type LogAnalyticsExportThrottledRequestsResponse = LogAnalyticsOperationResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LogAnalyticsOperationResult;
    };
};

/**
 * Contains response data for the beginExportRequestRateByInterval operation.
 */
export type LogAnalyticsBeginExportRequestRateByIntervalResponse = LogAnalyticsOperationResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LogAnalyticsOperationResult;
    };
};

/**
 * Contains response data for the beginExportThrottledRequests operation.
 */
export type LogAnalyticsBeginExportThrottledRequestsResponse = LogAnalyticsOperationResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: LogAnalyticsOperationResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type VirtualMachineRunCommandsListResponse = RunCommandListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RunCommandListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type VirtualMachineRunCommandsGetResponse = RunCommandDocument & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RunCommandDocument;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type VirtualMachineRunCommandsCreateOrUpdateResponse = VirtualMachineRunCommand & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineRunCommand;
    };
};

/**
 * Contains response data for the update operation.
 */
export type VirtualMachineRunCommandsUpdateResponse = VirtualMachineRunCommand & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineRunCommand;
    };
};

/**
 * Contains response data for the getByVirtualMachine operation.
 */
export type VirtualMachineRunCommandsGetByVirtualMachineResponse = VirtualMachineRunCommand & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineRunCommand;
    };
};

/**
 * Contains response data for the listByVirtualMachine operation.
 */
export type VirtualMachineRunCommandsListByVirtualMachineResponse = VirtualMachineRunCommandsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineRunCommandsListResult;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type VirtualMachineRunCommandsBeginCreateOrUpdateResponse = VirtualMachineRunCommand & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineRunCommand;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type VirtualMachineRunCommandsBeginUpdateResponse = VirtualMachineRunCommand & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineRunCommand;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type VirtualMachineRunCommandsListNextResponse = RunCommandListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RunCommandListResult;
    };
};

/**
 * Contains response data for the listByVirtualMachineNext operation.
 */
export type VirtualMachineRunCommandsListByVirtualMachineNextResponse = VirtualMachineRunCommandsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineRunCommandsListResult;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type VirtualMachineScaleSetVMRunCommandsCreateOrUpdateResponse = VirtualMachineRunCommand & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineRunCommand;
    };
};

/**
 * Contains response data for the update operation.
 */
export type VirtualMachineScaleSetVMRunCommandsUpdateResponse = VirtualMachineRunCommand & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineRunCommand;
    };
};

/**
 * Contains response data for the get operation.
 */
export type VirtualMachineScaleSetVMRunCommandsGetResponse = VirtualMachineRunCommand & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineRunCommand;
    };
};

/**
 * Contains response data for the list operation.
 */
export type VirtualMachineScaleSetVMRunCommandsListResponse = VirtualMachineRunCommandsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineRunCommandsListResult;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type VirtualMachineScaleSetVMRunCommandsBeginCreateOrUpdateResponse = VirtualMachineRunCommand & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineRunCommand;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type VirtualMachineScaleSetVMRunCommandsBeginUpdateResponse = VirtualMachineRunCommand & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineRunCommand;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type VirtualMachineScaleSetVMRunCommandsListNextResponse = VirtualMachineRunCommandsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachineRunCommandsListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type ResourceSkusListResponse = ResourceSkusResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceSkusResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type ResourceSkusListNextResponse = ResourceSkusResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceSkusResult;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type DisksCreateOrUpdateResponse = Disk & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Disk;
    };
};

/**
 * Contains response data for the update operation.
 */
export type DisksUpdateResponse = Disk & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Disk;
    };
};

/**
 * Contains response data for the get operation.
 */
export type DisksGetResponse = Disk & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Disk;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type DisksListByResourceGroupResponse = DiskList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiskList;
    };
};

/**
 * Contains response data for the list operation.
 */
export type DisksListResponse = DiskList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiskList;
    };
};

/**
 * Contains response data for the grantAccess operation.
 */
export type DisksGrantAccessResponse = AccessUri & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AccessUri;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type DisksBeginCreateOrUpdateResponse = Disk & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Disk;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type DisksBeginUpdateResponse = Disk & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Disk;
    };
};

/**
 * Contains response data for the beginGrantAccess operation.
 */
export type DisksBeginGrantAccessResponse = AccessUri & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AccessUri;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type DisksListByResourceGroupNextResponse = DiskList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiskList;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type DisksListNextResponse = DiskList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiskList;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type SnapshotsCreateOrUpdateResponse = Snapshot & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Snapshot;
    };
};

/**
 * Contains response data for the update operation.
 */
export type SnapshotsUpdateResponse = Snapshot & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Snapshot;
    };
};

/**
 * Contains response data for the get operation.
 */
export type SnapshotsGetResponse = Snapshot & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Snapshot;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type SnapshotsListByResourceGroupResponse = SnapshotList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SnapshotList;
    };
};

/**
 * Contains response data for the list operation.
 */
export type SnapshotsListResponse = SnapshotList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SnapshotList;
    };
};

/**
 * Contains response data for the grantAccess operation.
 */
export type SnapshotsGrantAccessResponse = AccessUri & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AccessUri;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type SnapshotsBeginCreateOrUpdateResponse = Snapshot & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Snapshot;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type SnapshotsBeginUpdateResponse = Snapshot & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Snapshot;
    };
};

/**
 * Contains response data for the beginGrantAccess operation.
 */
export type SnapshotsBeginGrantAccessResponse = AccessUri & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AccessUri;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type SnapshotsListByResourceGroupNextResponse = SnapshotList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SnapshotList;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type SnapshotsListNextResponse = SnapshotList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SnapshotList;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type DiskEncryptionSetsCreateOrUpdateResponse = DiskEncryptionSet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiskEncryptionSet;
    };
};

/**
 * Contains response data for the update operation.
 */
export type DiskEncryptionSetsUpdateResponse = DiskEncryptionSet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiskEncryptionSet;
    };
};

/**
 * Contains response data for the get operation.
 */
export type DiskEncryptionSetsGetResponse = DiskEncryptionSet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiskEncryptionSet;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type DiskEncryptionSetsListByResourceGroupResponse = DiskEncryptionSetList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiskEncryptionSetList;
    };
};

/**
 * Contains response data for the list operation.
 */
export type DiskEncryptionSetsListResponse = DiskEncryptionSetList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiskEncryptionSetList;
    };
};

/**
 * Contains response data for the listAssociatedResources operation.
 */
export type DiskEncryptionSetsListAssociatedResourcesResponse = ResourceUriList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceUriList;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type DiskEncryptionSetsBeginCreateOrUpdateResponse = DiskEncryptionSet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiskEncryptionSet;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type DiskEncryptionSetsBeginUpdateResponse = DiskEncryptionSet & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiskEncryptionSet;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type DiskEncryptionSetsListByResourceGroupNextResponse = DiskEncryptionSetList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiskEncryptionSetList;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type DiskEncryptionSetsListNextResponse = DiskEncryptionSetList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiskEncryptionSetList;
    };
};

/**
 * Contains response data for the listAssociatedResourcesNext operation.
 */
export type DiskEncryptionSetsListAssociatedResourcesNextResponse = ResourceUriList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceUriList;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type DiskAccessesCreateOrUpdateResponse = DiskAccess & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiskAccess;
    };
};

/**
 * Contains response data for the update operation.
 */
export type DiskAccessesUpdateResponse = DiskAccess & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiskAccess;
    };
};

/**
 * Contains response data for the get operation.
 */
export type DiskAccessesGetResponse = DiskAccess & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiskAccess;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type DiskAccessesListByResourceGroupResponse = DiskAccessList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiskAccessList;
    };
};

/**
 * Contains response data for the list operation.
 */
export type DiskAccessesListResponse = DiskAccessList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiskAccessList;
    };
};

/**
 * Contains response data for the getPrivateLinkResources operation.
 */
export type DiskAccessesGetPrivateLinkResourcesResponse = PrivateLinkResourceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateLinkResourceListResult;
    };
};

/**
 * Contains response data for the updateAPrivateEndpointConnection operation.
 */
export type DiskAccessesUpdateAPrivateEndpointConnectionResponse = PrivateEndpointConnection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateEndpointConnection;
    };
};

/**
 * Contains response data for the getAPrivateEndpointConnection operation.
 */
export type DiskAccessesGetAPrivateEndpointConnectionResponse = PrivateEndpointConnection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateEndpointConnection;
    };
};

/**
 * Contains response data for the listPrivateEndpointConnections operation.
 */
export type DiskAccessesListPrivateEndpointConnectionsResponse = PrivateEndpointConnectionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateEndpointConnectionListResult;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type DiskAccessesBeginCreateOrUpdateResponse = DiskAccess & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiskAccess;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type DiskAccessesBeginUpdateResponse = DiskAccess & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiskAccess;
    };
};

/**
 * Contains response data for the beginUpdateAPrivateEndpointConnection operation.
 */
export type DiskAccessesBeginUpdateAPrivateEndpointConnectionResponse = PrivateEndpointConnection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateEndpointConnection;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type DiskAccessesListByResourceGroupNextResponse = DiskAccessList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiskAccessList;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type DiskAccessesListNextResponse = DiskAccessList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiskAccessList;
    };
};

/**
 * Contains response data for the listPrivateEndpointConnectionsNext operation.
 */
export type DiskAccessesListPrivateEndpointConnectionsNextResponse = PrivateEndpointConnectionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateEndpointConnectionListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type DiskRestorePointGetResponse = DiskRestorePoint & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiskRestorePoint;
    };
};

/**
 * Contains response data for the listByRestorePoint operation.
 */
export type DiskRestorePointListByRestorePointResponse = DiskRestorePointList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiskRestorePointList;
    };
};

/**
 * Contains response data for the listByRestorePointNext operation.
 */
export type DiskRestorePointListByRestorePointNextResponse = DiskRestorePointList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiskRestorePointList;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type GalleriesCreateOrUpdateResponse = Gallery & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Gallery;
    };
};

/**
 * Contains response data for the update operation.
 */
export type GalleriesUpdateResponse = Gallery & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Gallery;
    };
};

/**
 * Contains response data for the get operation.
 */
export type GalleriesGetResponse = Gallery & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Gallery;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type GalleriesListByResourceGroupResponse = GalleryList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GalleryList;
    };
};

/**
 * Contains response data for the list operation.
 */
export type GalleriesListResponse = GalleryList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GalleryList;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type GalleriesBeginCreateOrUpdateResponse = Gallery & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Gallery;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type GalleriesBeginUpdateResponse = Gallery & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Gallery;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type GalleriesListByResourceGroupNextResponse = GalleryList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GalleryList;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type GalleriesListNextResponse = GalleryList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GalleryList;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type GalleryImagesCreateOrUpdateResponse = GalleryImage & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GalleryImage;
    };
};

/**
 * Contains response data for the update operation.
 */
export type GalleryImagesUpdateResponse = GalleryImage & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GalleryImage;
    };
};

/**
 * Contains response data for the get operation.
 */
export type GalleryImagesGetResponse = GalleryImage & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GalleryImage;
    };
};

/**
 * Contains response data for the listByGallery operation.
 */
export type GalleryImagesListByGalleryResponse = GalleryImageList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GalleryImageList;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type GalleryImagesBeginCreateOrUpdateResponse = GalleryImage & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GalleryImage;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type GalleryImagesBeginUpdateResponse = GalleryImage & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GalleryImage;
    };
};

/**
 * Contains response data for the listByGalleryNext operation.
 */
export type GalleryImagesListByGalleryNextResponse = GalleryImageList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GalleryImageList;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type GalleryImageVersionsCreateOrUpdateResponse = GalleryImageVersion & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GalleryImageVersion;
    };
};

/**
 * Contains response data for the update operation.
 */
export type GalleryImageVersionsUpdateResponse = GalleryImageVersion & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GalleryImageVersion;
    };
};

/**
 * Contains response data for the get operation.
 */
export type GalleryImageVersionsGetResponse = GalleryImageVersion & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GalleryImageVersion;
    };
};

/**
 * Contains response data for the listByGalleryImage operation.
 */
export type GalleryImageVersionsListByGalleryImageResponse = GalleryImageVersionList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GalleryImageVersionList;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type GalleryImageVersionsBeginCreateOrUpdateResponse = GalleryImageVersion & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GalleryImageVersion;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type GalleryImageVersionsBeginUpdateResponse = GalleryImageVersion & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GalleryImageVersion;
    };
};

/**
 * Contains response data for the listByGalleryImageNext operation.
 */
export type GalleryImageVersionsListByGalleryImageNextResponse = GalleryImageVersionList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GalleryImageVersionList;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type GalleryApplicationsCreateOrUpdateResponse = GalleryApplication & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GalleryApplication;
    };
};

/**
 * Contains response data for the update operation.
 */
export type GalleryApplicationsUpdateResponse = GalleryApplication & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GalleryApplication;
    };
};

/**
 * Contains response data for the get operation.
 */
export type GalleryApplicationsGetResponse = GalleryApplication & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GalleryApplication;
    };
};

/**
 * Contains response data for the listByGallery operation.
 */
export type GalleryApplicationsListByGalleryResponse = GalleryApplicationList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GalleryApplicationList;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type GalleryApplicationsBeginCreateOrUpdateResponse = GalleryApplication & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GalleryApplication;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type GalleryApplicationsBeginUpdateResponse = GalleryApplication & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GalleryApplication;
    };
};

/**
 * Contains response data for the listByGalleryNext operation.
 */
export type GalleryApplicationsListByGalleryNextResponse = GalleryApplicationList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GalleryApplicationList;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type GalleryApplicationVersionsCreateOrUpdateResponse = GalleryApplicationVersion & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GalleryApplicationVersion;
    };
};

/**
 * Contains response data for the update operation.
 */
export type GalleryApplicationVersionsUpdateResponse = GalleryApplicationVersion & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GalleryApplicationVersion;
    };
};

/**
 * Contains response data for the get operation.
 */
export type GalleryApplicationVersionsGetResponse = GalleryApplicationVersion & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GalleryApplicationVersion;
    };
};

/**
 * Contains response data for the listByGalleryApplication operation.
 */
export type GalleryApplicationVersionsListByGalleryApplicationResponse = GalleryApplicationVersionList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GalleryApplicationVersionList;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type GalleryApplicationVersionsBeginCreateOrUpdateResponse = GalleryApplicationVersion & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GalleryApplicationVersion;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type GalleryApplicationVersionsBeginUpdateResponse = GalleryApplicationVersion & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GalleryApplicationVersion;
    };
};

/**
 * Contains response data for the listByGalleryApplicationNext operation.
 */
export type GalleryApplicationVersionsListByGalleryApplicationNextResponse = GalleryApplicationVersionList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GalleryApplicationVersionList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type CloudServiceRoleInstancesGetResponse = RoleInstance & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoleInstance;
    };
};

/**
 * Contains response data for the getInstanceView operation.
 */
export type CloudServiceRoleInstancesGetInstanceViewResponse = RoleInstanceInstanceView & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoleInstanceInstanceView;
    };
};

/**
 * Contains response data for the list operation.
 */
export type CloudServiceRoleInstancesListResponse = RoleInstanceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoleInstanceListResult;
    };
};

/**
 * Contains response data for the getRemoteDesktopFile operation.
 */
export type CloudServiceRoleInstancesGetRemoteDesktopFileResponse = {
  /**
   * BROWSER ONLY
   *
   * The response body as a browser Blob.
   * Always undefined in node.js.
   */
  blobBody?: Promise<Blob>;

  /**
   * NODEJS ONLY
   *
   * The response body as a node.js Readable stream.
   * Always undefined in the browser.
   */
  readableStreamBody?: NodeJS.ReadableStream;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse;
};

/**
 * Contains response data for the listNext operation.
 */
export type CloudServiceRoleInstancesListNextResponse = RoleInstanceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoleInstanceListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type CloudServiceRolesGetResponse = CloudServiceRole & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CloudServiceRole;
    };
};

/**
 * Contains response data for the list operation.
 */
export type CloudServiceRolesListResponse = CloudServiceRoleListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CloudServiceRoleListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type CloudServiceRolesListNextResponse = CloudServiceRoleListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CloudServiceRoleListResult;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type CloudServicesCreateOrUpdateResponse = CloudService & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CloudService;
    };
};

/**
 * Contains response data for the update operation.
 */
export type CloudServicesUpdateResponse = CloudService & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CloudService;
    };
};

/**
 * Contains response data for the get operation.
 */
export type CloudServicesGetResponse = CloudService & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CloudService;
    };
};

/**
 * Contains response data for the getInstanceView operation.
 */
export type CloudServicesGetInstanceViewResponse = CloudServiceInstanceView & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CloudServiceInstanceView;
    };
};

/**
 * Contains response data for the listAll operation.
 */
export type CloudServicesListAllResponse = CloudServiceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CloudServiceListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type CloudServicesListResponse = CloudServiceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CloudServiceListResult;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type CloudServicesBeginCreateOrUpdateResponse = CloudService & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CloudService;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type CloudServicesBeginUpdateResponse = CloudService & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CloudService;
    };
};

/**
 * Contains response data for the listAllNext operation.
 */
export type CloudServicesListAllNextResponse = CloudServiceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CloudServiceListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type CloudServicesListNextResponse = CloudServiceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CloudServiceListResult;
    };
};

/**
 * Contains response data for the getUpdateDomain operation.
 */
export type CloudServicesUpdateDomainGetUpdateDomainResponse = UpdateDomain & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: UpdateDomain;
    };
};

/**
 * Contains response data for the listUpdateDomains operation.
 */
export type CloudServicesUpdateDomainListUpdateDomainsResponse = UpdateDomainListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: UpdateDomainListResult;
    };
};

/**
 * Contains response data for the listUpdateDomainsNext operation.
 */
export type CloudServicesUpdateDomainListUpdateDomainsNextResponse = UpdateDomainListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: UpdateDomainListResult;
    };
};

/**
 * Contains response data for the getOSVersion operation.
 */
export type CloudServiceOperatingSystemsGetOSVersionResponse = OSVersion & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OSVersion;
    };
};

/**
 * Contains response data for the listOSVersions operation.
 */
export type CloudServiceOperatingSystemsListOSVersionsResponse = OSVersionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OSVersionListResult;
    };
};

/**
 * Contains response data for the getOSFamily operation.
 */
export type CloudServiceOperatingSystemsGetOSFamilyResponse = OSFamily & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OSFamily;
    };
};

/**
 * Contains response data for the listOSFamilies operation.
 */
export type CloudServiceOperatingSystemsListOSFamiliesResponse = OSFamilyListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OSFamilyListResult;
    };
};

/**
 * Contains response data for the listOSVersionsNext operation.
 */
export type CloudServiceOperatingSystemsListOSVersionsNextResponse = OSVersionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OSVersionListResult;
    };
};

/**
 * Contains response data for the listOSFamiliesNext operation.
 */
export type CloudServiceOperatingSystemsListOSFamiliesNextResponse = OSFamilyListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OSFamilyListResult;
    };
};
