/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import type * as coreClient from "@azure/core-client";

export const GalleryList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GalleryList",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Gallery",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
      securityProfile: {
        serializedName: "securityProfile",
        type: {
          name: "Composite",
          className: "ImageVersionSecurityProfile",
        },
      },
    },
  },
};

export const GalleryIdentifier: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GalleryIdentifier",
    modelProperties: {
      uniqueName: {
        serializedName: "uniqueName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SharingProfile: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SharingProfile",
    modelProperties: {
      permissions: {
        serializedName: "permissions",
        type: {
          name: "String",
        },
      },
      groups: {
        serializedName: "groups",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SharingProfileGroup",
            },
          },
        },
      },
      communityGalleryInfo: {
        serializedName: "communityGalleryInfo",
        type: {
          name: "Composite",
          className: "CommunityGalleryInfo",
        },
      },
    },
  },
};

export const SharingProfileGroup: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SharingProfileGroup",
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "String",
        },
      },
      ids: {
        serializedName: "ids",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
    },
  },
};

export const CommunityGalleryInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CommunityGalleryInfo",
    modelProperties: {
      publisherUri: {
        serializedName: "publisherUri",
        type: {
          name: "String",
        },
      },
      publisherContact: {
        serializedName: "publisherContact",
        type: {
          name: "String",
        },
      },
      eula: {
        serializedName: "eula",
        type: {
          name: "String",
        },
      },
      publicNamePrefix: {
        serializedName: "publicNamePrefix",
        type: {
          name: "String",
        },
      },
      communityGalleryEnabled: {
        serializedName: "communityGalleryEnabled",
        readOnly: true,
        type: {
          name: "Boolean",
        },
      },
      publicNames: {
        serializedName: "publicNames",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
    },
  },
};

export const SoftDeletePolicy: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SoftDeletePolicy",
    modelProperties: {
      isSoftDeleteEnabled: {
        serializedName: "isSoftDeleteEnabled",
        type: {
          name: "Boolean",
        },
      },
    },
  },
};

export const SharingStatus: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SharingStatus",
    modelProperties: {
      aggregatedState: {
        serializedName: "aggregatedState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      summary: {
        serializedName: "summary",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "RegionalSharingStatus",
            },
          },
        },
      },
    },
  },
};

export const RegionalSharingStatus: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RegionalSharingStatus",
    modelProperties: {
      region: {
        serializedName: "region",
        type: {
          name: "String",
        },
      },
      state: {
        serializedName: "state",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      details: {
        serializedName: "details",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const GalleryIdentity: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GalleryIdentity",
    modelProperties: {
      principalId: {
        serializedName: "principalId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      tenantId: {
        serializedName: "tenantId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        type: {
          name: "Enum",
          allowedValues: [
            "SystemAssigned",
            "UserAssigned",
            "SystemAssigned, UserAssigned",
            "None",
          ],
        },
      },
      userAssignedIdentities: {
        serializedName: "userAssignedIdentities",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className: "UserAssignedIdentitiesValue",
            },
          },
        },
      },
    },
  },
};

export const UserAssignedIdentitiesValue: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UserAssignedIdentitiesValue",
    modelProperties: {
      principalId: {
        serializedName: "principalId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      clientId: {
        serializedName: "clientId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const Resource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData",
        },
      },
    },
  },
};

export const SystemData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SystemData",
    modelProperties: {
      createdBy: {
        serializedName: "createdBy",
        type: {
          name: "String",
        },
      },
      createdByType: {
        serializedName: "createdByType",
        type: {
          name: "String",
        },
      },
      createdAt: {
        serializedName: "createdAt",
        type: {
          name: "DateTime",
        },
      },
      lastModifiedBy: {
        serializedName: "lastModifiedBy",
        type: {
          name: "String",
        },
      },
      lastModifiedByType: {
        serializedName: "lastModifiedByType",
        type: {
          name: "String",
        },
      },
      lastModifiedAt: {
        serializedName: "lastModifiedAt",
        type: {
          name: "DateTime",
        },
      },
    },
  },
};

export const ImageVersionSecurityProfile: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ImageVersionSecurityProfile",
    modelProperties: {
      uefiSettings: {
        serializedName: "uefiSettings",
        type: {
          name: "Composite",
          className: "GalleryImageVersionUefiSettings",
        },
      },
    },
  },
};

export const GalleryImageVersionUefiSettings: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GalleryImageVersionUefiSettings",
    modelProperties: {
      signatureTemplateNames: {
        serializedName: "signatureTemplateNames",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      additionalSignatures: {
        serializedName: "additionalSignatures",
        type: {
          name: "Composite",
          className: "UefiKeySignatures",
        },
      },
    },
  },
};

export const UefiKeySignatures: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UefiKeySignatures",
    modelProperties: {
      pk: {
        serializedName: "pk",
        type: {
          name: "Composite",
          className: "UefiKey",
        },
      },
      kek: {
        serializedName: "kek",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "UefiKey",
            },
          },
        },
      },
      db: {
        serializedName: "db",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "UefiKey",
            },
          },
        },
      },
      dbx: {
        serializedName: "dbx",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "UefiKey",
            },
          },
        },
      },
    },
  },
};

export const UefiKey: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UefiKey",
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "String",
        },
      },
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
    },
  },
};

export const CloudError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CloudError",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ApiError",
        },
      },
    },
  },
};

export const ApiError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApiError",
    modelProperties: {
      details: {
        serializedName: "details",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ApiErrorBase",
            },
          },
        },
      },
      innererror: {
        serializedName: "innererror",
        type: {
          name: "Composite",
          className: "InnerError",
        },
      },
      code: {
        serializedName: "code",
        type: {
          name: "String",
        },
      },
      target: {
        serializedName: "target",
        type: {
          name: "String",
        },
      },
      message: {
        serializedName: "message",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ApiErrorBase: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApiErrorBase",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String",
        },
      },
      target: {
        serializedName: "target",
        type: {
          name: "String",
        },
      },
      message: {
        serializedName: "message",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const InnerError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "InnerError",
    modelProperties: {
      exceptiontype: {
        serializedName: "exceptiontype",
        type: {
          name: "String",
        },
      },
      errordetail: {
        serializedName: "errordetail",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const CommunityGalleryMetadata: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CommunityGalleryMetadata",
    modelProperties: {
      publisherUri: {
        serializedName: "publisherUri",
        type: {
          name: "String",
        },
      },
      publisherContact: {
        serializedName: "publisherContact",
        required: true,
        type: {
          name: "String",
        },
      },
      eula: {
        serializedName: "eula",
        type: {
          name: "String",
        },
      },
      publicNames: {
        serializedName: "publicNames",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      privacyStatementUri: {
        serializedName: "privacyStatementUri",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const PirCommunityGalleryResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PirCommunityGalleryResource",
    modelProperties: {
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      location: {
        serializedName: "location",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      uniqueId: {
        serializedName: "identifier.uniqueId",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const CommunityGalleryImageList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CommunityGalleryImageList",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CommunityGalleryImage",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const CommunityGalleryImageIdentifier: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CommunityGalleryImageIdentifier",
    modelProperties: {
      publisher: {
        serializedName: "publisher",
        type: {
          name: "String",
        },
      },
      offer: {
        serializedName: "offer",
        type: {
          name: "String",
        },
      },
      sku: {
        serializedName: "sku",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const RecommendedMachineConfiguration: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RecommendedMachineConfiguration",
    modelProperties: {
      vCPUs: {
        serializedName: "vCPUs",
        type: {
          name: "Composite",
          className: "ResourceRange",
        },
      },
      memory: {
        serializedName: "memory",
        type: {
          name: "Composite",
          className: "ResourceRange",
        },
      },
    },
  },
};

export const ResourceRange: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceRange",
    modelProperties: {
      min: {
        serializedName: "min",
        type: {
          name: "Number",
        },
      },
      max: {
        serializedName: "max",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const Disallowed: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Disallowed",
    modelProperties: {
      diskTypes: {
        serializedName: "diskTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
    },
  },
};

export const GalleryImageFeature: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GalleryImageFeature",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String",
        },
      },
      value: {
        serializedName: "value",
        type: {
          name: "String",
        },
      },
      startsAtVersion: {
        serializedName: "startsAtVersion",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ImagePurchasePlan: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ImagePurchasePlan",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String",
        },
      },
      publisher: {
        serializedName: "publisher",
        type: {
          name: "String",
        },
      },
      product: {
        serializedName: "product",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const CommunityGalleryImageVersionList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CommunityGalleryImageVersionList",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CommunityGalleryImageVersion",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SharedGalleryImageVersionStorageProfile: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "SharedGalleryImageVersionStorageProfile",
      modelProperties: {
        osDiskImage: {
          serializedName: "osDiskImage",
          type: {
            name: "Composite",
            className: "SharedGalleryOSDiskImage",
          },
        },
        dataDiskImages: {
          serializedName: "dataDiskImages",
          type: {
            name: "Sequence",
            element: {
              type: {
                name: "Composite",
                className: "SharedGalleryDataDiskImage",
              },
            },
          },
        },
      },
    },
  };

export const SharedGalleryDiskImage: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SharedGalleryDiskImage",
    modelProperties: {
      diskSizeGB: {
        serializedName: "diskSizeGB",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      hostCaching: {
        serializedName: "hostCaching",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SharedGalleryList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SharedGalleryList",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SharedGallery",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const PirResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PirResource",
    modelProperties: {
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      location: {
        serializedName: "location",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SharedGalleryImageList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SharedGalleryImageList",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SharedGalleryImage",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const GalleryImageIdentifier: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GalleryImageIdentifier",
    modelProperties: {
      publisher: {
        serializedName: "publisher",
        required: true,
        type: {
          name: "String",
        },
      },
      offer: {
        serializedName: "offer",
        required: true,
        type: {
          name: "String",
        },
      },
      sku: {
        serializedName: "sku",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SharedGalleryImageVersionList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SharedGalleryImageVersionList",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SharedGalleryImageVersion",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const UpdateResourceDefinition: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UpdateResourceDefinition",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
    },
  },
};

export const GalleryApplicationList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GalleryApplicationList",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "GalleryApplication",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const GalleryApplicationCustomAction: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GalleryApplicationCustomAction",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String",
        },
      },
      script: {
        serializedName: "script",
        required: true,
        type: {
          name: "String",
        },
      },
      description: {
        serializedName: "description",
        type: {
          name: "String",
        },
      },
      parameters: {
        serializedName: "parameters",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "GalleryApplicationCustomActionParameter",
            },
          },
        },
      },
    },
  },
};

export const GalleryApplicationCustomActionParameter: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "GalleryApplicationCustomActionParameter",
      modelProperties: {
        name: {
          serializedName: "name",
          required: true,
          type: {
            name: "String",
          },
        },
        required: {
          serializedName: "required",
          type: {
            name: "Boolean",
          },
        },
        type: {
          serializedName: "type",
          type: {
            name: "Enum",
            allowedValues: ["String", "ConfigurationDataBlob", "LogOutputBlob"],
          },
        },
        defaultValue: {
          serializedName: "defaultValue",
          type: {
            name: "String",
          },
        },
        description: {
          serializedName: "description",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const GalleryApplicationVersionList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GalleryApplicationVersionList",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "GalleryApplicationVersion",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const UserArtifactSource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UserArtifactSource",
    modelProperties: {
      mediaLink: {
        serializedName: "mediaLink",
        required: true,
        type: {
          name: "String",
        },
      },
      defaultConfigurationLink: {
        serializedName: "defaultConfigurationLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const UserArtifactManage: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UserArtifactManage",
    modelProperties: {
      install: {
        serializedName: "install",
        required: true,
        type: {
          name: "String",
        },
      },
      remove: {
        serializedName: "remove",
        required: true,
        type: {
          name: "String",
        },
      },
      update: {
        serializedName: "update",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const UserArtifactSettings: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UserArtifactSettings",
    modelProperties: {
      packageFileName: {
        serializedName: "packageFileName",
        type: {
          name: "String",
        },
      },
      configFileName: {
        serializedName: "configFileName",
        type: {
          name: "String",
        },
      },
      scriptBehaviorAfterReboot: {
        serializedName: "scriptBehaviorAfterReboot",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const GalleryArtifactPublishingProfileBase: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "GalleryArtifactPublishingProfileBase",
      modelProperties: {
        targetRegions: {
          serializedName: "targetRegions",
          type: {
            name: "Sequence",
            element: {
              type: {
                name: "Composite",
                className: "TargetRegion",
              },
            },
          },
        },
        replicaCount: {
          serializedName: "replicaCount",
          type: {
            name: "Number",
          },
        },
        excludeFromLatest: {
          serializedName: "excludeFromLatest",
          type: {
            name: "Boolean",
          },
        },
        publishedDate: {
          serializedName: "publishedDate",
          readOnly: true,
          type: {
            name: "DateTime",
          },
        },
        endOfLifeDate: {
          serializedName: "endOfLifeDate",
          type: {
            name: "DateTime",
          },
        },
        storageAccountType: {
          serializedName: "storageAccountType",
          type: {
            name: "String",
          },
        },
        replicationMode: {
          serializedName: "replicationMode",
          type: {
            name: "String",
          },
        },
        targetExtendedLocations: {
          serializedName: "targetExtendedLocations",
          type: {
            name: "Sequence",
            element: {
              type: {
                name: "Composite",
                className: "GalleryTargetExtendedLocation",
              },
            },
          },
        },
      },
    },
  };

export const TargetRegion: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TargetRegion",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String",
        },
      },
      regionalReplicaCount: {
        serializedName: "regionalReplicaCount",
        type: {
          name: "Number",
        },
      },
      storageAccountType: {
        serializedName: "storageAccountType",
        type: {
          name: "String",
        },
      },
      encryption: {
        serializedName: "encryption",
        type: {
          name: "Composite",
          className: "EncryptionImages",
        },
      },
      excludeFromLatest: {
        serializedName: "excludeFromLatest",
        type: {
          name: "Boolean",
        },
      },
      additionalReplicaSets: {
        serializedName: "additionalReplicaSets",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AdditionalReplicaSet",
            },
          },
        },
      },
    },
  },
};

export const EncryptionImages: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EncryptionImages",
    modelProperties: {
      osDiskImage: {
        serializedName: "osDiskImage",
        type: {
          name: "Composite",
          className: "OSDiskImageEncryption",
        },
      },
      dataDiskImages: {
        serializedName: "dataDiskImages",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DataDiskImageEncryption",
            },
          },
        },
      },
    },
  },
};

export const OSDiskImageSecurityProfile: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OSDiskImageSecurityProfile",
    modelProperties: {
      confidentialVMEncryptionType: {
        serializedName: "confidentialVMEncryptionType",
        type: {
          name: "String",
        },
      },
      secureVMDiskEncryptionSetId: {
        serializedName: "secureVMDiskEncryptionSetId",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const DiskImageEncryption: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DiskImageEncryption",
    modelProperties: {
      diskEncryptionSetId: {
        serializedName: "diskEncryptionSetId",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AdditionalReplicaSet: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AdditionalReplicaSet",
    modelProperties: {
      storageAccountType: {
        serializedName: "storageAccountType",
        type: {
          name: "String",
        },
      },
      regionalReplicaCount: {
        serializedName: "regionalReplicaCount",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const GalleryTargetExtendedLocation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GalleryTargetExtendedLocation",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String",
        },
      },
      extendedLocation: {
        serializedName: "extendedLocation",
        type: {
          name: "Composite",
          className: "GalleryExtendedLocation",
        },
      },
      extendedLocationReplicaCount: {
        serializedName: "extendedLocationReplicaCount",
        type: {
          name: "Number",
        },
      },
      storageAccountType: {
        serializedName: "storageAccountType",
        type: {
          name: "String",
        },
      },
      encryption: {
        serializedName: "encryption",
        type: {
          name: "Composite",
          className: "EncryptionImages",
        },
      },
    },
  },
};

export const GalleryExtendedLocation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GalleryExtendedLocation",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const GalleryArtifactSafetyProfileBase: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GalleryArtifactSafetyProfileBase",
    modelProperties: {
      allowDeletionOfReplicatedLocations: {
        serializedName: "allowDeletionOfReplicatedLocations",
        type: {
          name: "Boolean",
        },
      },
    },
  },
};

export const ReplicationStatus: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReplicationStatus",
    modelProperties: {
      aggregatedState: {
        serializedName: "aggregatedState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      summary: {
        serializedName: "summary",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "RegionalReplicationStatus",
            },
          },
        },
      },
    },
  },
};

export const RegionalReplicationStatus: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RegionalReplicationStatus",
    modelProperties: {
      region: {
        serializedName: "region",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      state: {
        serializedName: "state",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      details: {
        serializedName: "details",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      progress: {
        serializedName: "progress",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const GalleryImageList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GalleryImageList",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "GalleryImage",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const GalleryImageVersionList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GalleryImageVersionList",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "GalleryImageVersion",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const GalleryImageVersionStorageProfile: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GalleryImageVersionStorageProfile",
    modelProperties: {
      source: {
        serializedName: "source",
        type: {
          name: "Composite",
          className: "GalleryArtifactVersionFullSource",
        },
      },
      osDiskImage: {
        serializedName: "osDiskImage",
        type: {
          name: "Composite",
          className: "GalleryOSDiskImage",
        },
      },
      dataDiskImages: {
        serializedName: "dataDiskImages",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "GalleryDataDiskImage",
            },
          },
        },
      },
    },
  },
};

export const GalleryArtifactVersionSource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GalleryArtifactVersionSource",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const GalleryDiskImage: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GalleryDiskImage",
    modelProperties: {
      sizeInGB: {
        serializedName: "sizeInGB",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      hostCaching: {
        serializedName: "hostCaching",
        type: {
          name: "Enum",
          allowedValues: ["None", "ReadOnly", "ReadWrite"],
        },
      },
      source: {
        serializedName: "source",
        type: {
          name: "Composite",
          className: "GalleryDiskImageSource",
        },
      },
    },
  },
};

export const PolicyViolation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PolicyViolation",
    modelProperties: {
      category: {
        serializedName: "category",
        type: {
          name: "String",
        },
      },
      details: {
        serializedName: "details",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ValidationsProfile: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ValidationsProfile",
    modelProperties: {
      validationEtag: {
        serializedName: "validationEtag",
        type: {
          name: "String",
        },
      },
      executedValidations: {
        serializedName: "executedValidations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ExecutedValidation",
            },
          },
        },
      },
      platformAttributes: {
        serializedName: "platformAttributes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PlatformAttribute",
            },
          },
        },
      },
    },
  },
};

export const ExecutedValidation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ExecutedValidation",
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "String",
        },
      },
      status: {
        serializedName: "status",
        type: {
          name: "String",
        },
      },
      version: {
        serializedName: "version",
        type: {
          name: "String",
        },
      },
      executionTime: {
        serializedName: "executionTime",
        type: {
          name: "DateTime",
        },
      },
    },
  },
};

export const PlatformAttribute: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PlatformAttribute",
    modelProperties: {
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const GalleryInVMAccessControlProfileList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GalleryInVMAccessControlProfileList",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "GalleryInVMAccessControlProfile",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const GalleryResourceProfilePropertiesBase: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "GalleryResourceProfilePropertiesBase",
      modelProperties: {
        provisioningState: {
          serializedName: "provisioningState",
          readOnly: true,
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const GalleryInVMAccessControlProfileVersionList: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "GalleryInVMAccessControlProfileVersionList",
      modelProperties: {
        value: {
          serializedName: "value",
          required: true,
          type: {
            name: "Sequence",
            element: {
              type: {
                name: "Composite",
                className: "GalleryInVMAccessControlProfileVersion",
              },
            },
          },
        },
        nextLink: {
          serializedName: "nextLink",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const AccessControlRules: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AccessControlRules",
    modelProperties: {
      privileges: {
        serializedName: "privileges",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AccessControlRulesPrivilege",
            },
          },
        },
      },
      roles: {
        serializedName: "roles",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AccessControlRulesRole",
            },
          },
        },
      },
      identities: {
        serializedName: "identities",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AccessControlRulesIdentity",
            },
          },
        },
      },
      roleAssignments: {
        serializedName: "roleAssignments",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AccessControlRulesRoleAssignment",
            },
          },
        },
      },
    },
  },
};

export const AccessControlRulesPrivilege: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AccessControlRulesPrivilege",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String",
        },
      },
      path: {
        serializedName: "path",
        required: true,
        type: {
          name: "String",
        },
      },
      queryParameters: {
        serializedName: "queryParameters",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
    },
  },
};

export const AccessControlRulesRole: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AccessControlRulesRole",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String",
        },
      },
      privileges: {
        serializedName: "privileges",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
    },
  },
};

export const AccessControlRulesIdentity: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AccessControlRulesIdentity",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String",
        },
      },
      userName: {
        serializedName: "userName",
        type: {
          name: "String",
        },
      },
      groupName: {
        serializedName: "groupName",
        type: {
          name: "String",
        },
      },
      exePath: {
        serializedName: "exePath",
        type: {
          name: "String",
        },
      },
      processName: {
        serializedName: "processName",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AccessControlRulesRoleAssignment: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AccessControlRulesRoleAssignment",
    modelProperties: {
      role: {
        serializedName: "role",
        required: true,
        type: {
          name: "String",
        },
      },
      identities: {
        serializedName: "identities",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
    },
  },
};

export const GalleryResourceProfileVersionPropertiesBase: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "GalleryResourceProfileVersionPropertiesBase",
      modelProperties: {
        targetLocations: {
          serializedName: "targetLocations",
          type: {
            name: "Sequence",
            element: {
              type: {
                name: "Composite",
                className: "TargetRegion",
              },
            },
          },
        },
        excludeFromLatest: {
          serializedName: "excludeFromLatest",
          type: {
            name: "Boolean",
          },
        },
        publishedDate: {
          serializedName: "publishedDate",
          readOnly: true,
          type: {
            name: "DateTime",
          },
        },
        provisioningState: {
          serializedName: "provisioningState",
          readOnly: true,
          type: {
            name: "String",
          },
        },
        replicationStatus: {
          serializedName: "replicationStatus",
          type: {
            name: "Composite",
            className: "ReplicationStatus",
          },
        },
      },
    },
  };

export const SharingUpdate: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SharingUpdate",
    modelProperties: {
      operationType: {
        serializedName: "operationType",
        required: true,
        type: {
          name: "String",
        },
      },
      groups: {
        serializedName: "groups",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SharingProfileGroup",
            },
          },
        },
      },
    },
  },
};

export const GallerySoftDeletedResourceList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GallerySoftDeletedResourceList",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "GallerySoftDeletedResource",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const TrackedResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TrackedResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
      location: {
        serializedName: "location",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const CommunityGallery: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CommunityGallery",
    modelProperties: {
      ...PirCommunityGalleryResource.type.modelProperties,
      disclaimer: {
        serializedName: "properties.disclaimer",
        type: {
          name: "String",
        },
      },
      artifactTags: {
        serializedName: "properties.artifactTags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
      communityMetadata: {
        serializedName: "properties.communityMetadata",
        type: {
          name: "Composite",
          className: "CommunityGalleryMetadata",
        },
      },
    },
  },
};

export const CommunityGalleryImage: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CommunityGalleryImage",
    modelProperties: {
      ...PirCommunityGalleryResource.type.modelProperties,
      osType: {
        serializedName: "properties.osType",
        type: {
          name: "Enum",
          allowedValues: ["Windows", "Linux"],
        },
      },
      osState: {
        serializedName: "properties.osState",
        type: {
          name: "Enum",
          allowedValues: ["Generalized", "Specialized"],
        },
      },
      endOfLifeDate: {
        serializedName: "properties.endOfLifeDate",
        type: {
          name: "DateTime",
        },
      },
      identifier: {
        serializedName: "properties.identifier",
        type: {
          name: "Composite",
          className: "CommunityGalleryImageIdentifier",
        },
      },
      recommended: {
        serializedName: "properties.recommended",
        type: {
          name: "Composite",
          className: "RecommendedMachineConfiguration",
        },
      },
      disallowed: {
        serializedName: "properties.disallowed",
        type: {
          name: "Composite",
          className: "Disallowed",
        },
      },
      hyperVGeneration: {
        serializedName: "properties.hyperVGeneration",
        type: {
          name: "String",
        },
      },
      features: {
        serializedName: "properties.features",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "GalleryImageFeature",
            },
          },
        },
      },
      purchasePlan: {
        serializedName: "properties.purchasePlan",
        type: {
          name: "Composite",
          className: "ImagePurchasePlan",
        },
      },
      architecture: {
        serializedName: "properties.architecture",
        type: {
          name: "String",
        },
      },
      privacyStatementUri: {
        serializedName: "properties.privacyStatementUri",
        type: {
          name: "String",
        },
      },
      eula: {
        serializedName: "properties.eula",
        type: {
          name: "String",
        },
      },
      disclaimer: {
        serializedName: "properties.disclaimer",
        type: {
          name: "String",
        },
      },
      artifactTags: {
        serializedName: "properties.artifactTags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
    },
  },
};

export const CommunityGalleryImageVersion: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CommunityGalleryImageVersion",
    modelProperties: {
      ...PirCommunityGalleryResource.type.modelProperties,
      publishedDate: {
        serializedName: "properties.publishedDate",
        type: {
          name: "DateTime",
        },
      },
      endOfLifeDate: {
        serializedName: "properties.endOfLifeDate",
        type: {
          name: "DateTime",
        },
      },
      excludeFromLatest: {
        serializedName: "properties.excludeFromLatest",
        type: {
          name: "Boolean",
        },
      },
      storageProfile: {
        serializedName: "properties.storageProfile",
        type: {
          name: "Composite",
          className: "SharedGalleryImageVersionStorageProfile",
        },
      },
      disclaimer: {
        serializedName: "properties.disclaimer",
        type: {
          name: "String",
        },
      },
      artifactTags: {
        serializedName: "properties.artifactTags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
    },
  },
};

export const SharedGalleryOSDiskImage: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SharedGalleryOSDiskImage",
    modelProperties: {
      ...SharedGalleryDiskImage.type.modelProperties,
    },
  },
};

export const SharedGalleryDataDiskImage: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SharedGalleryDataDiskImage",
    modelProperties: {
      ...SharedGalleryDiskImage.type.modelProperties,
      lun: {
        serializedName: "lun",
        required: true,
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const PirSharedGalleryResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PirSharedGalleryResource",
    modelProperties: {
      ...PirResource.type.modelProperties,
      uniqueId: {
        serializedName: "identifier.uniqueId",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const GalleryUpdate: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GalleryUpdate",
    modelProperties: {
      ...UpdateResourceDefinition.type.modelProperties,
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "GalleryIdentity",
        },
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String",
        },
      },
      identifier: {
        serializedName: "properties.identifier",
        type: {
          name: "Composite",
          className: "GalleryIdentifier",
        },
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      sharingProfile: {
        serializedName: "properties.sharingProfile",
        type: {
          name: "Composite",
          className: "SharingProfile",
        },
      },
      softDeletePolicy: {
        serializedName: "properties.softDeletePolicy",
        type: {
          name: "Composite",
          className: "SoftDeletePolicy",
        },
      },
      sharingStatus: {
        serializedName: "properties.sharingStatus",
        type: {
          name: "Composite",
          className: "SharingStatus",
        },
      },
    },
  },
};

export const GalleryApplicationUpdate: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GalleryApplicationUpdate",
    modelProperties: {
      ...UpdateResourceDefinition.type.modelProperties,
      description: {
        serializedName: "properties.description",
        type: {
          name: "String",
        },
      },
      eula: {
        serializedName: "properties.eula",
        type: {
          name: "String",
        },
      },
      privacyStatementUri: {
        serializedName: "properties.privacyStatementUri",
        type: {
          name: "String",
        },
      },
      releaseNoteUri: {
        serializedName: "properties.releaseNoteUri",
        type: {
          name: "String",
        },
      },
      endOfLifeDate: {
        serializedName: "properties.endOfLifeDate",
        type: {
          name: "DateTime",
        },
      },
      supportedOSType: {
        serializedName: "properties.supportedOSType",
        type: {
          name: "Enum",
          allowedValues: ["Windows", "Linux"],
        },
      },
      customActions: {
        serializedName: "properties.customActions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "GalleryApplicationCustomAction",
            },
          },
        },
      },
    },
  },
};

export const GalleryApplicationVersionUpdate: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GalleryApplicationVersionUpdate",
    modelProperties: {
      ...UpdateResourceDefinition.type.modelProperties,
      publishingProfile: {
        serializedName: "properties.publishingProfile",
        type: {
          name: "Composite",
          className: "GalleryApplicationVersionPublishingProfile",
        },
      },
      safetyProfile: {
        serializedName: "properties.safetyProfile",
        type: {
          name: "Composite",
          className: "GalleryApplicationVersionSafetyProfile",
        },
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      replicationStatus: {
        serializedName: "properties.replicationStatus",
        type: {
          name: "Composite",
          className: "ReplicationStatus",
        },
      },
    },
  },
};

export const GalleryImageUpdate: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GalleryImageUpdate",
    modelProperties: {
      ...UpdateResourceDefinition.type.modelProperties,
      description: {
        serializedName: "properties.description",
        type: {
          name: "String",
        },
      },
      eula: {
        serializedName: "properties.eula",
        type: {
          name: "String",
        },
      },
      privacyStatementUri: {
        serializedName: "properties.privacyStatementUri",
        type: {
          name: "String",
        },
      },
      releaseNoteUri: {
        serializedName: "properties.releaseNoteUri",
        type: {
          name: "String",
        },
      },
      osType: {
        serializedName: "properties.osType",
        type: {
          name: "Enum",
          allowedValues: ["Windows", "Linux"],
        },
      },
      osState: {
        serializedName: "properties.osState",
        type: {
          name: "Enum",
          allowedValues: ["Generalized", "Specialized"],
        },
      },
      hyperVGeneration: {
        serializedName: "properties.hyperVGeneration",
        type: {
          name: "String",
        },
      },
      endOfLifeDate: {
        serializedName: "properties.endOfLifeDate",
        type: {
          name: "DateTime",
        },
      },
      identifier: {
        serializedName: "properties.identifier",
        type: {
          name: "Composite",
          className: "GalleryImageIdentifier",
        },
      },
      recommended: {
        serializedName: "properties.recommended",
        type: {
          name: "Composite",
          className: "RecommendedMachineConfiguration",
        },
      },
      disallowed: {
        serializedName: "properties.disallowed",
        type: {
          name: "Composite",
          className: "Disallowed",
        },
      },
      purchasePlan: {
        serializedName: "properties.purchasePlan",
        type: {
          name: "Composite",
          className: "ImagePurchasePlan",
        },
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      features: {
        serializedName: "properties.features",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "GalleryImageFeature",
            },
          },
        },
      },
      architecture: {
        serializedName: "properties.architecture",
        type: {
          name: "String",
        },
      },
      allowUpdateImage: {
        serializedName: "properties.allowUpdateImage",
        type: {
          name: "Boolean",
        },
      },
    },
  },
};

export const GalleryImageVersionUpdate: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GalleryImageVersionUpdate",
    modelProperties: {
      ...UpdateResourceDefinition.type.modelProperties,
      publishingProfile: {
        serializedName: "properties.publishingProfile",
        type: {
          name: "Composite",
          className: "GalleryImageVersionPublishingProfile",
        },
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      storageProfile: {
        serializedName: "properties.storageProfile",
        type: {
          name: "Composite",
          className: "GalleryImageVersionStorageProfile",
        },
      },
      safetyProfile: {
        serializedName: "properties.safetyProfile",
        type: {
          name: "Composite",
          className: "GalleryImageVersionSafetyProfile",
        },
      },
      replicationStatus: {
        serializedName: "properties.replicationStatus",
        type: {
          name: "Composite",
          className: "ReplicationStatus",
        },
      },
      securityProfile: {
        serializedName: "properties.securityProfile",
        type: {
          name: "Composite",
          className: "ImageVersionSecurityProfile",
        },
      },
      restore: {
        serializedName: "properties.restore",
        type: {
          name: "Boolean",
        },
      },
      validationsProfile: {
        serializedName: "properties.validationsProfile",
        type: {
          name: "Composite",
          className: "ValidationsProfile",
        },
      },
    },
  },
};

export const GalleryInVMAccessControlProfileUpdate: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "GalleryInVMAccessControlProfileUpdate",
      modelProperties: {
        ...UpdateResourceDefinition.type.modelProperties,
        properties: {
          serializedName: "properties",
          type: {
            name: "Composite",
            className: "GalleryInVMAccessControlProfileProperties",
          },
        },
      },
    },
  };

export const GalleryInVMAccessControlProfileVersionUpdate: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "GalleryInVMAccessControlProfileVersionUpdate",
      modelProperties: {
        ...UpdateResourceDefinition.type.modelProperties,
        targetLocations: {
          serializedName: "properties.targetLocations",
          type: {
            name: "Sequence",
            element: {
              type: {
                name: "Composite",
                className: "TargetRegion",
              },
            },
          },
        },
        excludeFromLatest: {
          serializedName: "properties.excludeFromLatest",
          type: {
            name: "Boolean",
          },
        },
        publishedDate: {
          serializedName: "properties.publishedDate",
          readOnly: true,
          type: {
            name: "DateTime",
          },
        },
        provisioningState: {
          serializedName: "properties.provisioningState",
          readOnly: true,
          type: {
            name: "String",
          },
        },
        replicationStatus: {
          serializedName: "properties.replicationStatus",
          type: {
            name: "Composite",
            className: "ReplicationStatus",
          },
        },
        mode: {
          serializedName: "properties.mode",
          type: {
            name: "String",
          },
        },
        defaultAccess: {
          serializedName: "properties.defaultAccess",
          type: {
            name: "String",
          },
        },
        rules: {
          serializedName: "properties.rules",
          type: {
            name: "Composite",
            className: "AccessControlRules",
          },
        },
      },
    },
  };

export const GalleryApplicationVersionPublishingProfile: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "GalleryApplicationVersionPublishingProfile",
      modelProperties: {
        ...GalleryArtifactPublishingProfileBase.type.modelProperties,
        source: {
          serializedName: "source",
          type: {
            name: "Composite",
            className: "UserArtifactSource",
          },
        },
        manageActions: {
          serializedName: "manageActions",
          type: {
            name: "Composite",
            className: "UserArtifactManage",
          },
        },
        settings: {
          serializedName: "settings",
          type: {
            name: "Composite",
            className: "UserArtifactSettings",
          },
        },
        advancedSettings: {
          serializedName: "advancedSettings",
          type: {
            name: "Dictionary",
            value: { type: { name: "String" } },
          },
        },
        enableHealthCheck: {
          serializedName: "enableHealthCheck",
          type: {
            name: "Boolean",
          },
        },
        customActions: {
          serializedName: "customActions",
          type: {
            name: "Sequence",
            element: {
              type: {
                name: "Composite",
                className: "GalleryApplicationCustomAction",
              },
            },
          },
        },
      },
    },
  };

export const GalleryImageVersionPublishingProfile: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "GalleryImageVersionPublishingProfile",
      modelProperties: {
        ...GalleryArtifactPublishingProfileBase.type.modelProperties,
      },
    },
  };

export const OSDiskImageEncryption: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OSDiskImageEncryption",
    modelProperties: {
      ...DiskImageEncryption.type.modelProperties,
      securityProfile: {
        serializedName: "securityProfile",
        type: {
          name: "Composite",
          className: "OSDiskImageSecurityProfile",
        },
      },
    },
  },
};

export const DataDiskImageEncryption: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DataDiskImageEncryption",
    modelProperties: {
      ...DiskImageEncryption.type.modelProperties,
      lun: {
        serializedName: "lun",
        required: true,
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const GalleryApplicationVersionSafetyProfile: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "GalleryApplicationVersionSafetyProfile",
      modelProperties: {
        ...GalleryArtifactSafetyProfileBase.type.modelProperties,
      },
    },
  };

export const GalleryImageVersionSafetyProfile: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GalleryImageVersionSafetyProfile",
    modelProperties: {
      ...GalleryArtifactSafetyProfileBase.type.modelProperties,
      reportedForPolicyViolation: {
        serializedName: "reportedForPolicyViolation",
        readOnly: true,
        type: {
          name: "Boolean",
        },
      },
      policyViolations: {
        serializedName: "policyViolations",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PolicyViolation",
            },
          },
        },
      },
      blockDeletionBeforeEndOfLife: {
        serializedName: "blockDeletionBeforeEndOfLife",
        type: {
          name: "Boolean",
        },
      },
    },
  },
};

export const GalleryArtifactVersionFullSource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GalleryArtifactVersionFullSource",
    modelProperties: {
      ...GalleryArtifactVersionSource.type.modelProperties,
      communityGalleryImageId: {
        serializedName: "communityGalleryImageId",
        type: {
          name: "String",
        },
      },
      virtualMachineId: {
        serializedName: "virtualMachineId",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const GalleryDiskImageSource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GalleryDiskImageSource",
    modelProperties: {
      ...GalleryArtifactVersionSource.type.modelProperties,
      uri: {
        serializedName: "uri",
        type: {
          name: "String",
        },
      },
      storageAccountId: {
        serializedName: "storageAccountId",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const GalleryOSDiskImage: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GalleryOSDiskImage",
    modelProperties: {
      ...GalleryDiskImage.type.modelProperties,
    },
  },
};

export const GalleryDataDiskImage: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GalleryDataDiskImage",
    modelProperties: {
      ...GalleryDiskImage.type.modelProperties,
      lun: {
        serializedName: "lun",
        required: true,
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const GalleryInVMAccessControlProfileProperties: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "GalleryInVMAccessControlProfileProperties",
      modelProperties: {
        ...GalleryResourceProfilePropertiesBase.type.modelProperties,
        description: {
          serializedName: "description",
          type: {
            name: "String",
          },
        },
        osType: {
          serializedName: "osType",
          required: true,
          type: {
            name: "Enum",
            allowedValues: ["Windows", "Linux"],
          },
        },
        applicableHostEndpoint: {
          serializedName: "applicableHostEndpoint",
          required: true,
          type: {
            name: "Enum",
            allowedValues: ["WireServer", "IMDS"],
          },
        },
      },
    },
  };

export const GalleryInVMAccessControlProfileVersionProperties: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "GalleryInVMAccessControlProfileVersionProperties",
      modelProperties: {
        ...GalleryResourceProfileVersionPropertiesBase.type.modelProperties,
        mode: {
          serializedName: "mode",
          required: true,
          type: {
            name: "String",
          },
        },
        defaultAccess: {
          serializedName: "defaultAccess",
          required: true,
          type: {
            name: "String",
          },
        },
        rules: {
          serializedName: "rules",
          type: {
            name: "Composite",
            className: "AccessControlRules",
          },
        },
      },
    },
  };

export const Gallery: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Gallery",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "GalleryIdentity",
        },
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String",
        },
      },
      identifier: {
        serializedName: "properties.identifier",
        type: {
          name: "Composite",
          className: "GalleryIdentifier",
        },
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      sharingProfile: {
        serializedName: "properties.sharingProfile",
        type: {
          name: "Composite",
          className: "SharingProfile",
        },
      },
      softDeletePolicy: {
        serializedName: "properties.softDeletePolicy",
        type: {
          name: "Composite",
          className: "SoftDeletePolicy",
        },
      },
      sharingStatus: {
        serializedName: "properties.sharingStatus",
        type: {
          name: "Composite",
          className: "SharingStatus",
        },
      },
    },
  },
};

export const GalleryApplication: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GalleryApplication",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      description: {
        serializedName: "properties.description",
        type: {
          name: "String",
        },
      },
      eula: {
        serializedName: "properties.eula",
        type: {
          name: "String",
        },
      },
      privacyStatementUri: {
        serializedName: "properties.privacyStatementUri",
        type: {
          name: "String",
        },
      },
      releaseNoteUri: {
        serializedName: "properties.releaseNoteUri",
        type: {
          name: "String",
        },
      },
      endOfLifeDate: {
        serializedName: "properties.endOfLifeDate",
        type: {
          name: "DateTime",
        },
      },
      supportedOSType: {
        serializedName: "properties.supportedOSType",
        type: {
          name: "Enum",
          allowedValues: ["Windows", "Linux"],
        },
      },
      customActions: {
        serializedName: "properties.customActions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "GalleryApplicationCustomAction",
            },
          },
        },
      },
    },
  },
};

export const GalleryApplicationVersion: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GalleryApplicationVersion",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      publishingProfile: {
        serializedName: "properties.publishingProfile",
        type: {
          name: "Composite",
          className: "GalleryApplicationVersionPublishingProfile",
        },
      },
      safetyProfile: {
        serializedName: "properties.safetyProfile",
        type: {
          name: "Composite",
          className: "GalleryApplicationVersionSafetyProfile",
        },
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      replicationStatus: {
        serializedName: "properties.replicationStatus",
        type: {
          name: "Composite",
          className: "ReplicationStatus",
        },
      },
    },
  },
};

export const GalleryImage: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GalleryImage",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      description: {
        serializedName: "properties.description",
        type: {
          name: "String",
        },
      },
      eula: {
        serializedName: "properties.eula",
        type: {
          name: "String",
        },
      },
      privacyStatementUri: {
        serializedName: "properties.privacyStatementUri",
        type: {
          name: "String",
        },
      },
      releaseNoteUri: {
        serializedName: "properties.releaseNoteUri",
        type: {
          name: "String",
        },
      },
      osType: {
        serializedName: "properties.osType",
        type: {
          name: "Enum",
          allowedValues: ["Windows", "Linux"],
        },
      },
      osState: {
        serializedName: "properties.osState",
        type: {
          name: "Enum",
          allowedValues: ["Generalized", "Specialized"],
        },
      },
      hyperVGeneration: {
        serializedName: "properties.hyperVGeneration",
        type: {
          name: "String",
        },
      },
      endOfLifeDate: {
        serializedName: "properties.endOfLifeDate",
        type: {
          name: "DateTime",
        },
      },
      identifier: {
        serializedName: "properties.identifier",
        type: {
          name: "Composite",
          className: "GalleryImageIdentifier",
        },
      },
      recommended: {
        serializedName: "properties.recommended",
        type: {
          name: "Composite",
          className: "RecommendedMachineConfiguration",
        },
      },
      disallowed: {
        serializedName: "properties.disallowed",
        type: {
          name: "Composite",
          className: "Disallowed",
        },
      },
      purchasePlan: {
        serializedName: "properties.purchasePlan",
        type: {
          name: "Composite",
          className: "ImagePurchasePlan",
        },
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      features: {
        serializedName: "properties.features",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "GalleryImageFeature",
            },
          },
        },
      },
      architecture: {
        serializedName: "properties.architecture",
        type: {
          name: "String",
        },
      },
      allowUpdateImage: {
        serializedName: "properties.allowUpdateImage",
        type: {
          name: "Boolean",
        },
      },
    },
  },
};

export const GalleryImageVersion: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GalleryImageVersion",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      publishingProfile: {
        serializedName: "properties.publishingProfile",
        type: {
          name: "Composite",
          className: "GalleryImageVersionPublishingProfile",
        },
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      storageProfile: {
        serializedName: "properties.storageProfile",
        type: {
          name: "Composite",
          className: "GalleryImageVersionStorageProfile",
        },
      },
      safetyProfile: {
        serializedName: "properties.safetyProfile",
        type: {
          name: "Composite",
          className: "GalleryImageVersionSafetyProfile",
        },
      },
      replicationStatus: {
        serializedName: "properties.replicationStatus",
        type: {
          name: "Composite",
          className: "ReplicationStatus",
        },
      },
      securityProfile: {
        serializedName: "properties.securityProfile",
        type: {
          name: "Composite",
          className: "ImageVersionSecurityProfile",
        },
      },
      restore: {
        serializedName: "properties.restore",
        type: {
          name: "Boolean",
        },
      },
      validationsProfile: {
        serializedName: "properties.validationsProfile",
        type: {
          name: "Composite",
          className: "ValidationsProfile",
        },
      },
    },
  },
};

export const GalleryInVMAccessControlProfile: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GalleryInVMAccessControlProfile",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "GalleryInVMAccessControlProfileProperties",
        },
      },
    },
  },
};

export const GalleryInVMAccessControlProfileVersion: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "GalleryInVMAccessControlProfileVersion",
      modelProperties: {
        ...TrackedResource.type.modelProperties,
        targetLocations: {
          serializedName: "properties.targetLocations",
          type: {
            name: "Sequence",
            element: {
              type: {
                name: "Composite",
                className: "TargetRegion",
              },
            },
          },
        },
        excludeFromLatest: {
          serializedName: "properties.excludeFromLatest",
          type: {
            name: "Boolean",
          },
        },
        publishedDate: {
          serializedName: "properties.publishedDate",
          readOnly: true,
          type: {
            name: "DateTime",
          },
        },
        provisioningState: {
          serializedName: "properties.provisioningState",
          readOnly: true,
          type: {
            name: "String",
          },
        },
        replicationStatus: {
          serializedName: "properties.replicationStatus",
          type: {
            name: "Composite",
            className: "ReplicationStatus",
          },
        },
        mode: {
          serializedName: "properties.mode",
          type: {
            name: "String",
          },
        },
        defaultAccess: {
          serializedName: "properties.defaultAccess",
          type: {
            name: "String",
          },
        },
        rules: {
          serializedName: "properties.rules",
          type: {
            name: "Composite",
            className: "AccessControlRules",
          },
        },
      },
    },
  };

export const GallerySoftDeletedResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GallerySoftDeletedResource",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      resourceArmId: {
        serializedName: "properties.resourceArmId",
        type: {
          name: "String",
        },
      },
      softDeletedArtifactType: {
        serializedName: "properties.softDeletedArtifactType",
        type: {
          name: "String",
        },
      },
      softDeletedTime: {
        serializedName: "properties.softDeletedTime",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SharedGallery: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SharedGallery",
    modelProperties: {
      ...PirSharedGalleryResource.type.modelProperties,
      artifactTags: {
        serializedName: "properties.artifactTags",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
    },
  },
};

export const SharedGalleryImage: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SharedGalleryImage",
    modelProperties: {
      ...PirSharedGalleryResource.type.modelProperties,
      osType: {
        serializedName: "properties.osType",
        type: {
          name: "Enum",
          allowedValues: ["Windows", "Linux"],
        },
      },
      osState: {
        serializedName: "properties.osState",
        type: {
          name: "Enum",
          allowedValues: ["Generalized", "Specialized"],
        },
      },
      endOfLifeDate: {
        serializedName: "properties.endOfLifeDate",
        type: {
          name: "DateTime",
        },
      },
      identifier: {
        serializedName: "properties.identifier",
        type: {
          name: "Composite",
          className: "GalleryImageIdentifier",
        },
      },
      recommended: {
        serializedName: "properties.recommended",
        type: {
          name: "Composite",
          className: "RecommendedMachineConfiguration",
        },
      },
      disallowed: {
        serializedName: "properties.disallowed",
        type: {
          name: "Composite",
          className: "Disallowed",
        },
      },
      hyperVGeneration: {
        serializedName: "properties.hyperVGeneration",
        type: {
          name: "String",
        },
      },
      features: {
        serializedName: "properties.features",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "GalleryImageFeature",
            },
          },
        },
      },
      purchasePlan: {
        serializedName: "properties.purchasePlan",
        type: {
          name: "Composite",
          className: "ImagePurchasePlan",
        },
      },
      architecture: {
        serializedName: "properties.architecture",
        type: {
          name: "String",
        },
      },
      privacyStatementUri: {
        serializedName: "properties.privacyStatementUri",
        type: {
          name: "String",
        },
      },
      eula: {
        serializedName: "properties.eula",
        type: {
          name: "String",
        },
      },
      artifactTags: {
        serializedName: "properties.artifactTags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
    },
  },
};

export const SharedGalleryImageVersion: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SharedGalleryImageVersion",
    modelProperties: {
      ...PirSharedGalleryResource.type.modelProperties,
      publishedDate: {
        serializedName: "properties.publishedDate",
        type: {
          name: "DateTime",
        },
      },
      endOfLifeDate: {
        serializedName: "properties.endOfLifeDate",
        type: {
          name: "DateTime",
        },
      },
      excludeFromLatest: {
        serializedName: "properties.excludeFromLatest",
        type: {
          name: "Boolean",
        },
      },
      storageProfile: {
        serializedName: "properties.storageProfile",
        type: {
          name: "Composite",
          className: "SharedGalleryImageVersionStorageProfile",
        },
      },
      artifactTags: {
        serializedName: "properties.artifactTags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
    },
  },
};

export const GalleriesCreateOrUpdateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GalleriesCreateOrUpdateHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const GalleriesUpdateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GalleriesUpdateHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const GalleriesDeleteHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GalleriesDeleteHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const GalleryApplicationsCreateOrUpdateHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "GalleryApplicationsCreateOrUpdateHeaders",
      modelProperties: {
        location: {
          serializedName: "location",
          type: {
            name: "String",
          },
        },
        retryAfter: {
          serializedName: "retry-after",
          type: {
            name: "Number",
          },
        },
      },
    },
  };

export const GalleryApplicationsUpdateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GalleryApplicationsUpdateHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const GalleryApplicationsDeleteHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GalleryApplicationsDeleteHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const GalleryApplicationVersionsCreateOrUpdateHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "GalleryApplicationVersionsCreateOrUpdateHeaders",
      modelProperties: {
        location: {
          serializedName: "location",
          type: {
            name: "String",
          },
        },
        retryAfter: {
          serializedName: "retry-after",
          type: {
            name: "Number",
          },
        },
      },
    },
  };

export const GalleryApplicationVersionsUpdateHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "GalleryApplicationVersionsUpdateHeaders",
      modelProperties: {
        location: {
          serializedName: "location",
          type: {
            name: "String",
          },
        },
        retryAfter: {
          serializedName: "retry-after",
          type: {
            name: "Number",
          },
        },
      },
    },
  };

export const GalleryApplicationVersionsDeleteHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "GalleryApplicationVersionsDeleteHeaders",
      modelProperties: {
        location: {
          serializedName: "location",
          type: {
            name: "String",
          },
        },
        retryAfter: {
          serializedName: "retry-after",
          type: {
            name: "Number",
          },
        },
      },
    },
  };

export const GalleryImagesCreateOrUpdateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GalleryImagesCreateOrUpdateHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const GalleryImagesUpdateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GalleryImagesUpdateHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const GalleryImagesDeleteHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GalleryImagesDeleteHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const GalleryImageVersionsCreateOrUpdateHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "GalleryImageVersionsCreateOrUpdateHeaders",
      modelProperties: {
        location: {
          serializedName: "location",
          type: {
            name: "String",
          },
        },
        retryAfter: {
          serializedName: "retry-after",
          type: {
            name: "Number",
          },
        },
      },
    },
  };

export const GalleryImageVersionsUpdateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GalleryImageVersionsUpdateHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const GalleryImageVersionsDeleteHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GalleryImageVersionsDeleteHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const GalleryInVMAccessControlProfilesCreateOrUpdateHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "GalleryInVMAccessControlProfilesCreateOrUpdateHeaders",
      modelProperties: {
        location: {
          serializedName: "location",
          type: {
            name: "String",
          },
        },
        retryAfter: {
          serializedName: "retry-after",
          type: {
            name: "Number",
          },
        },
      },
    },
  };

export const GalleryInVMAccessControlProfilesUpdateHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "GalleryInVMAccessControlProfilesUpdateHeaders",
      modelProperties: {
        location: {
          serializedName: "location",
          type: {
            name: "String",
          },
        },
        retryAfter: {
          serializedName: "retry-after",
          type: {
            name: "Number",
          },
        },
      },
    },
  };

export const GalleryInVMAccessControlProfilesDeleteHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "GalleryInVMAccessControlProfilesDeleteHeaders",
      modelProperties: {
        azureAsyncOperation: {
          serializedName: "azure-asyncoperation",
          type: {
            name: "String",
          },
        },
        location: {
          serializedName: "location",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const GalleryInVMAccessControlProfileVersionsCreateOrUpdateHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "GalleryInVMAccessControlProfileVersionsCreateOrUpdateHeaders",
      modelProperties: {
        location: {
          serializedName: "location",
          type: {
            name: "String",
          },
        },
        retryAfter: {
          serializedName: "retry-after",
          type: {
            name: "Number",
          },
        },
      },
    },
  };

export const GalleryInVMAccessControlProfileVersionsUpdateHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "GalleryInVMAccessControlProfileVersionsUpdateHeaders",
      modelProperties: {
        location: {
          serializedName: "location",
          type: {
            name: "String",
          },
        },
        retryAfter: {
          serializedName: "retry-after",
          type: {
            name: "Number",
          },
        },
      },
    },
  };

export const GalleryInVMAccessControlProfileVersionsDeleteHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "GalleryInVMAccessControlProfileVersionsDeleteHeaders",
      modelProperties: {
        azureAsyncOperation: {
          serializedName: "azure-asyncoperation",
          type: {
            name: "String",
          },
        },
        location: {
          serializedName: "location",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const GallerySharingProfileUpdateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GallerySharingProfileUpdateHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
    },
  },
};
