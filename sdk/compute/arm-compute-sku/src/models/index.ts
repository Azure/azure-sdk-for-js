/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import type * as coreClient from "@azure/core-client";

/** The List Resource Skus operation response. */
export interface ResourceSkusResult {
  /** The ResourceSku items on this page */
  value: ResourceSku[];
  /** The link to the next page of items */
  nextLink?: string;
}

/** Describes an available Compute SKU. */
export interface ResourceSku {
  /**
   * The type of resource the SKU applies to.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resourceType?: string;
  /**
   * The name of SKU.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Specifies the tier of virtual machines in a scale set.<br /><br /> Possible Values:<br /><br /> **Standard**<br /><br /> **Basic**
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly tier?: string;
  /**
   * The Size of the SKU.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly size?: string;
  /**
   * The Family of this particular SKU.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly family?: string;
  /**
   * The Kind of resources that are supported in this SKU.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly kind?: string;
  /**
   * Specifies the number of virtual machines in the scale set.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly capacity?: ResourceSkuCapacity;
  /**
   * The set of locations that the SKU is available.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly locations?: string[];
  /**
   * A list of locations and availability zones in those locations where the SKU is available.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly locationInfo?: ResourceSkuLocationInfo[];
  /**
   * The api versions that support this SKU.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly apiVersions?: string[];
  /**
   * Metadata for retrieving price info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly costs?: ResourceSkuCosts[];
  /**
   * A name value pair to describe the capability.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly capabilities?: ResourceSkuCapabilities[];
  /**
   * The restrictions because of which SKU cannot be used. This is empty if there are no restrictions.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly restrictions?: ResourceSkuRestrictions[];
}

/** Describes scaling information of a SKU. */
export interface ResourceSkuCapacity {
  /**
   * The minimum capacity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly minimum?: number;
  /**
   * The maximum capacity that can be set.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly maximum?: number;
  /**
   * The default capacity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly default?: number;
  /**
   * The scale type applicable to the sku.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly scaleType?: ResourceSkuCapacityScaleType;
}

/** Describes an available Compute SKU Location Information. */
export interface ResourceSkuLocationInfo {
  /**
   * Location of the SKU
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly location?: string;
  /**
   * List of availability zones where the SKU is supported.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly zones?: string[];
  /**
   * Details of capabilities available to a SKU in specific zones.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly zoneDetails?: ResourceSkuZoneDetails[];
  /**
   * The names of extended locations.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly extendedLocations?: string[];
  /**
   * The type of the extended location.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: ExtendedLocationType;
}

/** Describes The zonal capabilities of a SKU. */
export interface ResourceSkuZoneDetails {
  /**
   * The set of zones that the SKU is available in with the specified capabilities.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string[];
  /**
   * A list of capabilities that are available for the SKU in the specified list of zones.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly capabilities?: ResourceSkuCapabilities[];
}

/** Describes The SKU capabilities object. */
export interface ResourceSkuCapabilities {
  /**
   * An invariant to describe the feature.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * An invariant if the feature is measured by quantity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: string;
}

/** Describes metadata for retrieving price info. */
export interface ResourceSkuCosts {
  /**
   * Used for querying price from commerce.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly meterID?: string;
  /**
   * The multiplier is needed to extend the base metered cost.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly quantity?: number;
  /**
   * An invariant to show the extended unit.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly extendedUnit?: string;
}

/** Describes scaling information of a SKU. */
export interface ResourceSkuRestrictions {
  /**
   * The type of restrictions.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: ResourceSkuRestrictionsType;
  /**
   * The value of restrictions. If the restriction type is set to location. This would be different locations where the SKU is restricted.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly values?: string[];
  /**
   * The information about the restriction where the SKU cannot be used.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly restrictionInfo?: ResourceSkuRestrictionInfo;
  /**
   * The reason for restriction.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly reasonCode?: ResourceSkuRestrictionsReasonCode;
}

/** Describes an available Compute SKU Restriction Information. */
export interface ResourceSkuRestrictionInfo {
  /**
   * Locations where the SKU is restricted
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly locations?: string[];
  /**
   * List of availability zones where the SKU is restricted.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly zones?: string[];
}

/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */
export interface ErrorResponse {
  /** The error object. */
  error?: ErrorDetail;
}

/** The error detail. */
export interface ErrorDetail {
  /**
   * The error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * The error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * The error target.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly target?: string;
  /**
   * The error details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly details?: ErrorDetail[];
  /**
   * The error additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalInfo?: ErrorAdditionalInfo[];
}

/** The resource management error additional info. */
export interface ErrorAdditionalInfo {
  /**
   * The additional info type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * The additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly info?: any;
}

/** Known values of {@link ExtendedLocationType} that the service accepts. */
export enum KnownExtendedLocationType {
  /** EdgeZone */
  EdgeZone = "EdgeZone",
}

/**
 * Defines values for ExtendedLocationType. \
 * {@link KnownExtendedLocationType} can be used interchangeably with ExtendedLocationType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **EdgeZone**
 */
export type ExtendedLocationType = string;
/** Defines values for ResourceSkuCapacityScaleType. */
export type ResourceSkuCapacityScaleType = "Automatic" | "Manual" | "None";
/** Defines values for ResourceSkuRestrictionsType. */
export type ResourceSkuRestrictionsType = "Location" | "Zone";
/** Defines values for ResourceSkuRestrictionsReasonCode. */
export type ResourceSkuRestrictionsReasonCode =
  | "QuotaId"
  | "NotAvailableForSubscription";

/** Optional parameters. */
export interface ResourceSkusListOptionalParams
  extends coreClient.OperationOptions {
  /** The filter to apply on the operation. Only **location** filter is supported currently. */
  filter?: string;
  /** To Include Extended Locations information or not in the response. */
  includeExtendedLocations?: string;
}

/** Contains response data for the list operation. */
export type ResourceSkusListResponse = ResourceSkusResult;

/** Optional parameters. */
export interface ResourceSkusListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type ResourceSkusListNextResponse = ResourceSkusResult;

/** Optional parameters. */
export interface ComputeManagementClientOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
