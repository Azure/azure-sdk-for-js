/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import type {
  OperationParameter,
  OperationURLParameter,
  OperationQueryParameter,
} from "@azure/core-client";
import {
  DiskAccess as DiskAccessMapper,
  DiskAccessUpdate as DiskAccessUpdateMapper,
  PrivateEndpointConnection as PrivateEndpointConnectionMapper,
  DiskEncryptionSet as DiskEncryptionSetMapper,
  DiskEncryptionSetUpdate as DiskEncryptionSetUpdateMapper,
  Disk as DiskMapper,
  DiskUpdate as DiskUpdateMapper,
  GrantAccessData as GrantAccessDataMapper,
  Snapshot as SnapshotMapper,
  SnapshotUpdate as SnapshotUpdateMapper,
} from "../models/mappers.js";

export const accept: OperationParameter = {
  parameterPath: "accept",
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Accept",
    type: {
      name: "String",
    },
  },
};

export const $host: OperationURLParameter = {
  parameterPath: "$host",
  mapper: {
    serializedName: "$host",
    required: true,
    type: {
      name: "String",
    },
  },
  skipEncoding: true,
};

export const apiVersion: OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    defaultValue: "2025-01-02",
    isConstant: true,
    serializedName: "api-version",
    type: {
      name: "String",
    },
  },
};

export const subscriptionId: OperationURLParameter = {
  parameterPath: "subscriptionId",
  mapper: {
    constraints: {
      MinLength: 1,
    },
    serializedName: "subscriptionId",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const resourceGroupName: OperationURLParameter = {
  parameterPath: "resourceGroupName",
  mapper: {
    constraints: {
      MaxLength: 90,
      MinLength: 1,
    },
    serializedName: "resourceGroupName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const diskAccessName: OperationURLParameter = {
  parameterPath: "diskAccessName",
  mapper: {
    serializedName: "diskAccessName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const contentType: OperationParameter = {
  parameterPath: ["options", "contentType"],
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Content-Type",
    type: {
      name: "String",
    },
  },
};

export const diskAccess: OperationParameter = {
  parameterPath: "diskAccess",
  mapper: DiskAccessMapper,
};

export const diskAccess1: OperationParameter = {
  parameterPath: "diskAccess",
  mapper: DiskAccessUpdateMapper,
};

export const privateEndpointConnectionName: OperationURLParameter = {
  parameterPath: "privateEndpointConnectionName",
  mapper: {
    serializedName: "privateEndpointConnectionName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const privateEndpointConnection: OperationParameter = {
  parameterPath: "privateEndpointConnection",
  mapper: PrivateEndpointConnectionMapper,
};

export const nextLink: OperationURLParameter = {
  parameterPath: "nextLink",
  mapper: {
    serializedName: "nextLink",
    required: true,
    type: {
      name: "String",
    },
  },
  skipEncoding: true,
};

export const diskEncryptionSetName: OperationURLParameter = {
  parameterPath: "diskEncryptionSetName",
  mapper: {
    serializedName: "diskEncryptionSetName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const diskEncryptionSet: OperationParameter = {
  parameterPath: "diskEncryptionSet",
  mapper: DiskEncryptionSetMapper,
};

export const diskEncryptionSet1: OperationParameter = {
  parameterPath: "diskEncryptionSet",
  mapper: DiskEncryptionSetUpdateMapper,
};

export const diskName: OperationURLParameter = {
  parameterPath: "diskName",
  mapper: {
    serializedName: "diskName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const disk: OperationParameter = {
  parameterPath: "disk",
  mapper: DiskMapper,
};

export const disk1: OperationParameter = {
  parameterPath: "disk",
  mapper: DiskUpdateMapper,
};

export const grantAccessData: OperationParameter = {
  parameterPath: "grantAccessData",
  mapper: GrantAccessDataMapper,
};

export const snapshotName: OperationURLParameter = {
  parameterPath: "snapshotName",
  mapper: {
    serializedName: "snapshotName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const snapshot: OperationParameter = {
  parameterPath: "snapshot",
  mapper: SnapshotMapper,
};

export const snapshot1: OperationParameter = {
  parameterPath: "snapshot",
  mapper: SnapshotUpdateMapper,
};

export const restorePointCollectionName: OperationURLParameter = {
  parameterPath: "restorePointCollectionName",
  mapper: {
    serializedName: "restorePointCollectionName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const vmRestorePointName: OperationURLParameter = {
  parameterPath: "vmRestorePointName",
  mapper: {
    serializedName: "vmRestorePointName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const diskRestorePointName: OperationURLParameter = {
  parameterPath: "diskRestorePointName",
  mapper: {
    serializedName: "diskRestorePointName",
    required: true,
    type: {
      name: "String",
    },
  },
};
