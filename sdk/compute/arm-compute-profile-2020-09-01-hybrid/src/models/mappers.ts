/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { CloudErrorMapper, BaseResourceMapper } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export const CloudError = CloudErrorMapper;
export const BaseResource = BaseResourceMapper;

export const ComputeOperationValue: msRest.CompositeMapper = {
  serializedName: "ComputeOperationValue",
  type: {
    name: "Composite",
    className: "ComputeOperationValue",
    modelProperties: {
      origin: {
        readOnly: true,
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      operation: {
        readOnly: true,
        serializedName: "display.operation",
        type: {
          name: "String"
        }
      },
      resource: {
        readOnly: true,
        serializedName: "display.resource",
        type: {
          name: "String"
        }
      },
      description: {
        readOnly: true,
        serializedName: "display.description",
        type: {
          name: "String"
        }
      },
      provider: {
        readOnly: true,
        serializedName: "display.provider",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DisallowedConfiguration: msRest.CompositeMapper = {
  serializedName: "DisallowedConfiguration",
  type: {
    name: "Composite",
    className: "DisallowedConfiguration",
    modelProperties: {
      vmDiskType: {
        serializedName: "vmDiskType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RetrieveBootDiagnosticsDataResult: msRest.CompositeMapper = {
  serializedName: "RetrieveBootDiagnosticsDataResult",
  type: {
    name: "Composite",
    className: "RetrieveBootDiagnosticsDataResult",
    modelProperties: {
      consoleScreenshotBlobUri: {
        readOnly: true,
        serializedName: "consoleScreenshotBlobUri",
        type: {
          name: "String"
        }
      },
      serialConsoleLogBlobUri: {
        readOnly: true,
        serializedName: "serialConsoleLogBlobUri",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const InstanceViewStatus: msRest.CompositeMapper = {
  serializedName: "InstanceViewStatus",
  type: {
    name: "Composite",
    className: "InstanceViewStatus",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      level: {
        serializedName: "level",
        type: {
          name: "Enum",
          allowedValues: [
            "Info",
            "Warning",
            "Error"
          ]
        }
      },
      displayStatus: {
        serializedName: "displayStatus",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      time: {
        serializedName: "time",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const SubResource: msRest.CompositeMapper = {
  serializedName: "SubResource",
  type: {
    name: "Composite",
    className: "SubResource",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Sku: msRest.CompositeMapper = {
  serializedName: "Sku",
  type: {
    name: "Composite",
    className: "Sku",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      tier: {
        serializedName: "tier",
        type: {
          name: "String"
        }
      },
      capacity: {
        serializedName: "capacity",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Resource: msRest.CompositeMapper = {
  serializedName: "Resource",
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      location: {
        required: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const AvailabilitySet: msRest.CompositeMapper = {
  serializedName: "AvailabilitySet",
  type: {
    name: "Composite",
    className: "AvailabilitySet",
    modelProperties: {
      ...Resource.type.modelProperties,
      platformUpdateDomainCount: {
        serializedName: "properties.platformUpdateDomainCount",
        type: {
          name: "Number"
        }
      },
      platformFaultDomainCount: {
        serializedName: "properties.platformFaultDomainCount",
        type: {
          name: "Number"
        }
      },
      virtualMachines: {
        serializedName: "properties.virtualMachines",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SubResource"
            }
          }
        }
      },
      proximityPlacementGroup: {
        serializedName: "properties.proximityPlacementGroup",
        type: {
          name: "Composite",
          className: "SubResource"
        }
      },
      statuses: {
        readOnly: true,
        serializedName: "properties.statuses",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "InstanceViewStatus"
            }
          }
        }
      },
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "Sku"
        }
      }
    }
  }
};

export const UpdateResource: msRest.CompositeMapper = {
  serializedName: "UpdateResource",
  type: {
    name: "Composite",
    className: "UpdateResource",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const AvailabilitySetUpdate: msRest.CompositeMapper = {
  serializedName: "AvailabilitySetUpdate",
  type: {
    name: "Composite",
    className: "AvailabilitySetUpdate",
    modelProperties: {
      ...UpdateResource.type.modelProperties,
      platformUpdateDomainCount: {
        serializedName: "properties.platformUpdateDomainCount",
        type: {
          name: "Number"
        }
      },
      platformFaultDomainCount: {
        serializedName: "properties.platformFaultDomainCount",
        type: {
          name: "Number"
        }
      },
      virtualMachines: {
        serializedName: "properties.virtualMachines",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SubResource"
            }
          }
        }
      },
      proximityPlacementGroup: {
        serializedName: "properties.proximityPlacementGroup",
        type: {
          name: "Composite",
          className: "SubResource"
        }
      },
      statuses: {
        readOnly: true,
        serializedName: "properties.statuses",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "InstanceViewStatus"
            }
          }
        }
      },
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "Sku"
        }
      }
    }
  }
};

export const SubResourceWithColocationStatus: msRest.CompositeMapper = {
  serializedName: "SubResourceWithColocationStatus",
  type: {
    name: "Composite",
    className: "SubResourceWithColocationStatus",
    modelProperties: {
      ...SubResource.type.modelProperties,
      colocationStatus: {
        serializedName: "colocationStatus",
        type: {
          name: "Composite",
          className: "InstanceViewStatus"
        }
      }
    }
  }
};

export const ProximityPlacementGroup: msRest.CompositeMapper = {
  serializedName: "ProximityPlacementGroup",
  type: {
    name: "Composite",
    className: "ProximityPlacementGroup",
    modelProperties: {
      ...Resource.type.modelProperties,
      proximityPlacementGroupType: {
        serializedName: "properties.proximityPlacementGroupType",
        type: {
          name: "String"
        }
      },
      virtualMachines: {
        readOnly: true,
        serializedName: "properties.virtualMachines",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SubResourceWithColocationStatus"
            }
          }
        }
      },
      virtualMachineScaleSets: {
        readOnly: true,
        serializedName: "properties.virtualMachineScaleSets",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SubResourceWithColocationStatus"
            }
          }
        }
      },
      availabilitySets: {
        readOnly: true,
        serializedName: "properties.availabilitySets",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SubResourceWithColocationStatus"
            }
          }
        }
      },
      colocationStatus: {
        serializedName: "properties.colocationStatus",
        type: {
          name: "Composite",
          className: "InstanceViewStatus"
        }
      }
    }
  }
};

export const ProximityPlacementGroupUpdate: msRest.CompositeMapper = {
  serializedName: "ProximityPlacementGroupUpdate",
  type: {
    name: "Composite",
    className: "ProximityPlacementGroupUpdate",
    modelProperties: {
      ...UpdateResource.type.modelProperties
    }
  }
};

export const DedicatedHostInstanceView: msRest.CompositeMapper = {
  serializedName: "DedicatedHostInstanceView",
  type: {
    name: "Composite",
    className: "DedicatedHostInstanceView",
    modelProperties: {
      assetId: {
        readOnly: true,
        serializedName: "assetId",
        type: {
          name: "String"
        }
      },
      availableCapacity: {
        serializedName: "availableCapacity",
        type: {
          name: "Composite",
          className: "DedicatedHostAvailableCapacity"
        }
      },
      statuses: {
        serializedName: "statuses",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "InstanceViewStatus"
            }
          }
        }
      }
    }
  }
};

export const DedicatedHostInstanceViewWithName: msRest.CompositeMapper = {
  serializedName: "DedicatedHostInstanceViewWithName",
  type: {
    name: "Composite",
    className: "DedicatedHostInstanceViewWithName",
    modelProperties: {
      ...DedicatedHostInstanceView.type.modelProperties,
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DedicatedHostGroupInstanceView: msRest.CompositeMapper = {
  serializedName: "DedicatedHostGroupInstanceView",
  type: {
    name: "Composite",
    className: "DedicatedHostGroupInstanceView",
    modelProperties: {
      hosts: {
        serializedName: "hosts",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DedicatedHostInstanceViewWithName"
            }
          }
        }
      }
    }
  }
};

export const SubResourceReadOnly: msRest.CompositeMapper = {
  serializedName: "SubResourceReadOnly",
  type: {
    name: "Composite",
    className: "SubResourceReadOnly",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DedicatedHostGroup: msRest.CompositeMapper = {
  serializedName: "DedicatedHostGroup",
  type: {
    name: "Composite",
    className: "DedicatedHostGroup",
    modelProperties: {
      ...Resource.type.modelProperties,
      platformFaultDomainCount: {
        required: true,
        serializedName: "properties.platformFaultDomainCount",
        constraints: {
          InclusiveMinimum: 1
        },
        type: {
          name: "Number"
        }
      },
      hosts: {
        readOnly: true,
        serializedName: "properties.hosts",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SubResourceReadOnly"
            }
          }
        }
      },
      instanceView: {
        readOnly: true,
        serializedName: "properties.instanceView",
        type: {
          name: "Composite",
          className: "DedicatedHostGroupInstanceView"
        }
      },
      supportAutomaticPlacement: {
        serializedName: "properties.supportAutomaticPlacement",
        type: {
          name: "Boolean"
        }
      },
      zones: {
        serializedName: "zones",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const DedicatedHostGroupUpdate: msRest.CompositeMapper = {
  serializedName: "DedicatedHostGroupUpdate",
  type: {
    name: "Composite",
    className: "DedicatedHostGroupUpdate",
    modelProperties: {
      ...UpdateResource.type.modelProperties,
      platformFaultDomainCount: {
        required: true,
        serializedName: "properties.platformFaultDomainCount",
        constraints: {
          InclusiveMinimum: 1
        },
        type: {
          name: "Number"
        }
      },
      hosts: {
        readOnly: true,
        serializedName: "properties.hosts",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SubResourceReadOnly"
            }
          }
        }
      },
      instanceView: {
        readOnly: true,
        serializedName: "properties.instanceView",
        type: {
          name: "Composite",
          className: "DedicatedHostGroupInstanceView"
        }
      },
      supportAutomaticPlacement: {
        serializedName: "properties.supportAutomaticPlacement",
        type: {
          name: "Boolean"
        }
      },
      zones: {
        serializedName: "zones",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const DedicatedHostAllocatableVM: msRest.CompositeMapper = {
  serializedName: "DedicatedHostAllocatableVM",
  type: {
    name: "Composite",
    className: "DedicatedHostAllocatableVM",
    modelProperties: {
      vmSize: {
        serializedName: "vmSize",
        type: {
          name: "String"
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const DedicatedHostAvailableCapacity: msRest.CompositeMapper = {
  serializedName: "DedicatedHostAvailableCapacity",
  type: {
    name: "Composite",
    className: "DedicatedHostAvailableCapacity",
    modelProperties: {
      allocatableVMs: {
        serializedName: "allocatableVMs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DedicatedHostAllocatableVM"
            }
          }
        }
      }
    }
  }
};

export const DedicatedHost: msRest.CompositeMapper = {
  serializedName: "DedicatedHost",
  type: {
    name: "Composite",
    className: "DedicatedHost",
    modelProperties: {
      ...Resource.type.modelProperties,
      platformFaultDomain: {
        serializedName: "properties.platformFaultDomain",
        constraints: {
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      },
      autoReplaceOnFailure: {
        serializedName: "properties.autoReplaceOnFailure",
        type: {
          name: "Boolean"
        }
      },
      hostId: {
        readOnly: true,
        serializedName: "properties.hostId",
        type: {
          name: "String"
        }
      },
      virtualMachines: {
        readOnly: true,
        serializedName: "properties.virtualMachines",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SubResourceReadOnly"
            }
          }
        }
      },
      licenseType: {
        serializedName: "properties.licenseType",
        type: {
          name: "Enum",
          allowedValues: [
            "None",
            "Windows_Server_Hybrid",
            "Windows_Server_Perpetual"
          ]
        }
      },
      provisioningTime: {
        readOnly: true,
        serializedName: "properties.provisioningTime",
        type: {
          name: "DateTime"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      instanceView: {
        readOnly: true,
        serializedName: "properties.instanceView",
        type: {
          name: "Composite",
          className: "DedicatedHostInstanceView"
        }
      },
      sku: {
        required: true,
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "Sku"
        }
      }
    }
  }
};

export const DedicatedHostUpdate: msRest.CompositeMapper = {
  serializedName: "DedicatedHostUpdate",
  type: {
    name: "Composite",
    className: "DedicatedHostUpdate",
    modelProperties: {
      ...UpdateResource.type.modelProperties,
      platformFaultDomain: {
        serializedName: "properties.platformFaultDomain",
        constraints: {
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      },
      autoReplaceOnFailure: {
        serializedName: "properties.autoReplaceOnFailure",
        type: {
          name: "Boolean"
        }
      },
      hostId: {
        readOnly: true,
        serializedName: "properties.hostId",
        type: {
          name: "String"
        }
      },
      virtualMachines: {
        readOnly: true,
        serializedName: "properties.virtualMachines",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SubResourceReadOnly"
            }
          }
        }
      },
      licenseType: {
        serializedName: "properties.licenseType",
        type: {
          name: "Enum",
          allowedValues: [
            "None",
            "Windows_Server_Hybrid",
            "Windows_Server_Perpetual"
          ]
        }
      },
      provisioningTime: {
        readOnly: true,
        serializedName: "properties.provisioningTime",
        type: {
          name: "DateTime"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      instanceView: {
        readOnly: true,
        serializedName: "properties.instanceView",
        type: {
          name: "Composite",
          className: "DedicatedHostInstanceView"
        }
      }
    }
  }
};

export const SshPublicKeyGenerateKeyPairResult: msRest.CompositeMapper = {
  serializedName: "SshPublicKeyGenerateKeyPairResult",
  type: {
    name: "Composite",
    className: "SshPublicKeyGenerateKeyPairResult",
    modelProperties: {
      privateKey: {
        required: true,
        serializedName: "privateKey",
        type: {
          name: "String"
        }
      },
      publicKey: {
        required: true,
        serializedName: "publicKey",
        type: {
          name: "String"
        }
      },
      id: {
        required: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SshPublicKeyResource: msRest.CompositeMapper = {
  serializedName: "SshPublicKeyResource",
  type: {
    name: "Composite",
    className: "SshPublicKeyResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      publicKey: {
        serializedName: "properties.publicKey",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SshPublicKeyUpdateResource: msRest.CompositeMapper = {
  serializedName: "SshPublicKeyUpdateResource",
  type: {
    name: "Composite",
    className: "SshPublicKeyUpdateResource",
    modelProperties: {
      ...UpdateResource.type.modelProperties,
      publicKey: {
        serializedName: "properties.publicKey",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VirtualMachineSize: msRest.CompositeMapper = {
  serializedName: "VirtualMachineSize",
  type: {
    name: "Composite",
    className: "VirtualMachineSize",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      numberOfCores: {
        serializedName: "numberOfCores",
        type: {
          name: "Number"
        }
      },
      osDiskSizeInMB: {
        serializedName: "osDiskSizeInMB",
        type: {
          name: "Number"
        }
      },
      resourceDiskSizeInMB: {
        serializedName: "resourceDiskSizeInMB",
        type: {
          name: "Number"
        }
      },
      memoryInMB: {
        serializedName: "memoryInMB",
        type: {
          name: "Number"
        }
      },
      maxDataDiskCount: {
        serializedName: "maxDataDiskCount",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const VirtualMachineExtensionImage: msRest.CompositeMapper = {
  serializedName: "VirtualMachineExtensionImage",
  type: {
    name: "Composite",
    className: "VirtualMachineExtensionImage",
    modelProperties: {
      ...Resource.type.modelProperties,
      operatingSystem: {
        required: true,
        serializedName: "properties.operatingSystem",
        type: {
          name: "String"
        }
      },
      computeRole: {
        required: true,
        serializedName: "properties.computeRole",
        type: {
          name: "String"
        }
      },
      handlerSchema: {
        required: true,
        serializedName: "properties.handlerSchema",
        type: {
          name: "String"
        }
      },
      vmScaleSetEnabled: {
        serializedName: "properties.vmScaleSetEnabled",
        type: {
          name: "Boolean"
        }
      },
      supportsMultipleExtensions: {
        serializedName: "properties.supportsMultipleExtensions",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const VirtualMachineImageResource: msRest.CompositeMapper = {
  serializedName: "VirtualMachineImageResource",
  type: {
    name: "Composite",
    className: "VirtualMachineImageResource",
    modelProperties: {
      ...SubResource.type.modelProperties,
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      location: {
        required: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const VirtualMachineExtensionInstanceView: msRest.CompositeMapper = {
  serializedName: "VirtualMachineExtensionInstanceView",
  type: {
    name: "Composite",
    className: "VirtualMachineExtensionInstanceView",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      typeHandlerVersion: {
        serializedName: "typeHandlerVersion",
        type: {
          name: "String"
        }
      },
      substatuses: {
        serializedName: "substatuses",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "InstanceViewStatus"
            }
          }
        }
      },
      statuses: {
        serializedName: "statuses",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "InstanceViewStatus"
            }
          }
        }
      }
    }
  }
};

export const VirtualMachineExtension: msRest.CompositeMapper = {
  serializedName: "VirtualMachineExtension",
  type: {
    name: "Composite",
    className: "VirtualMachineExtension",
    modelProperties: {
      ...Resource.type.modelProperties,
      forceUpdateTag: {
        serializedName: "properties.forceUpdateTag",
        type: {
          name: "String"
        }
      },
      publisher: {
        serializedName: "properties.publisher",
        type: {
          name: "String"
        }
      },
      virtualMachineExtensionType: {
        serializedName: "properties.type",
        type: {
          name: "String"
        }
      },
      typeHandlerVersion: {
        serializedName: "properties.typeHandlerVersion",
        type: {
          name: "String"
        }
      },
      autoUpgradeMinorVersion: {
        serializedName: "properties.autoUpgradeMinorVersion",
        type: {
          name: "Boolean"
        }
      },
      enableAutomaticUpgrade: {
        serializedName: "properties.enableAutomaticUpgrade",
        type: {
          name: "Boolean"
        }
      },
      settings: {
        serializedName: "properties.settings",
        type: {
          name: "Object"
        }
      },
      protectedSettings: {
        serializedName: "properties.protectedSettings",
        type: {
          name: "Object"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      instanceView: {
        serializedName: "properties.instanceView",
        type: {
          name: "Composite",
          className: "VirtualMachineExtensionInstanceView"
        }
      }
    }
  }
};

export const VirtualMachineScaleSetVMExtension: msRest.CompositeMapper = {
  serializedName: "VirtualMachineScaleSetVMExtension",
  type: {
    name: "Composite",
    className: "VirtualMachineScaleSetVMExtension",
    modelProperties: {
      ...SubResourceReadOnly.type.modelProperties,
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      forceUpdateTag: {
        serializedName: "properties.forceUpdateTag",
        type: {
          name: "String"
        }
      },
      publisher: {
        serializedName: "properties.publisher",
        type: {
          name: "String"
        }
      },
      type1: {
        serializedName: "properties.type",
        type: {
          name: "String"
        }
      },
      typeHandlerVersion: {
        serializedName: "properties.typeHandlerVersion",
        type: {
          name: "String"
        }
      },
      autoUpgradeMinorVersion: {
        serializedName: "properties.autoUpgradeMinorVersion",
        type: {
          name: "Boolean"
        }
      },
      enableAutomaticUpgrade: {
        serializedName: "properties.enableAutomaticUpgrade",
        type: {
          name: "Boolean"
        }
      },
      settings: {
        serializedName: "properties.settings",
        type: {
          name: "Object"
        }
      },
      protectedSettings: {
        serializedName: "properties.protectedSettings",
        type: {
          name: "Object"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      instanceView: {
        serializedName: "properties.instanceView",
        type: {
          name: "Composite",
          className: "VirtualMachineExtensionInstanceView"
        }
      }
    }
  }
};

export const VirtualMachineExtensionUpdate: msRest.CompositeMapper = {
  serializedName: "VirtualMachineExtensionUpdate",
  type: {
    name: "Composite",
    className: "VirtualMachineExtensionUpdate",
    modelProperties: {
      ...UpdateResource.type.modelProperties,
      forceUpdateTag: {
        serializedName: "properties.forceUpdateTag",
        type: {
          name: "String"
        }
      },
      publisher: {
        serializedName: "properties.publisher",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "properties.type",
        type: {
          name: "String"
        }
      },
      typeHandlerVersion: {
        serializedName: "properties.typeHandlerVersion",
        type: {
          name: "String"
        }
      },
      autoUpgradeMinorVersion: {
        serializedName: "properties.autoUpgradeMinorVersion",
        type: {
          name: "Boolean"
        }
      },
      enableAutomaticUpgrade: {
        serializedName: "properties.enableAutomaticUpgrade",
        type: {
          name: "Boolean"
        }
      },
      settings: {
        serializedName: "properties.settings",
        type: {
          name: "Object"
        }
      },
      protectedSettings: {
        serializedName: "properties.protectedSettings",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const VirtualMachineScaleSetVMExtensionUpdate: msRest.CompositeMapper = {
  serializedName: "VirtualMachineScaleSetVMExtensionUpdate",
  type: {
    name: "Composite",
    className: "VirtualMachineScaleSetVMExtensionUpdate",
    modelProperties: {
      ...SubResourceReadOnly.type.modelProperties,
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      forceUpdateTag: {
        serializedName: "properties.forceUpdateTag",
        type: {
          name: "String"
        }
      },
      publisher: {
        serializedName: "properties.publisher",
        type: {
          name: "String"
        }
      },
      type1: {
        serializedName: "properties.type",
        type: {
          name: "String"
        }
      },
      typeHandlerVersion: {
        serializedName: "properties.typeHandlerVersion",
        type: {
          name: "String"
        }
      },
      autoUpgradeMinorVersion: {
        serializedName: "properties.autoUpgradeMinorVersion",
        type: {
          name: "Boolean"
        }
      },
      enableAutomaticUpgrade: {
        serializedName: "properties.enableAutomaticUpgrade",
        type: {
          name: "Boolean"
        }
      },
      settings: {
        serializedName: "properties.settings",
        type: {
          name: "Object"
        }
      },
      protectedSettings: {
        serializedName: "properties.protectedSettings",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const VirtualMachineExtensionsListResult: msRest.CompositeMapper = {
  serializedName: "VirtualMachineExtensionsListResult",
  type: {
    name: "Composite",
    className: "VirtualMachineExtensionsListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VirtualMachineExtension"
            }
          }
        }
      }
    }
  }
};

export const VirtualMachineScaleSetVMExtensionsListResult: msRest.CompositeMapper = {
  serializedName: "VirtualMachineScaleSetVMExtensionsListResult",
  type: {
    name: "Composite",
    className: "VirtualMachineScaleSetVMExtensionsListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VirtualMachineScaleSetVMExtension"
            }
          }
        }
      }
    }
  }
};

export const VirtualMachineSoftwarePatchProperties: msRest.CompositeMapper = {
  serializedName: "VirtualMachineSoftwarePatchProperties",
  type: {
    name: "Composite",
    className: "VirtualMachineSoftwarePatchProperties",
    modelProperties: {
      patchId: {
        readOnly: true,
        serializedName: "patchId",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      version: {
        readOnly: true,
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      kbid: {
        readOnly: true,
        serializedName: "kbid",
        type: {
          name: "String"
        }
      },
      classifications: {
        readOnly: true,
        serializedName: "classifications",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      rebootBehavior: {
        readOnly: true,
        serializedName: "rebootBehavior",
        type: {
          name: "String"
        }
      },
      activityId: {
        readOnly: true,
        serializedName: "activityId",
        type: {
          name: "String"
        }
      },
      publishedDate: {
        readOnly: true,
        serializedName: "publishedDate",
        type: {
          name: "DateTime"
        }
      },
      lastModifiedDateTime: {
        readOnly: true,
        serializedName: "lastModifiedDateTime",
        type: {
          name: "DateTime"
        }
      },
      assessmentState: {
        readOnly: true,
        serializedName: "assessmentState",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiErrorBase: msRest.CompositeMapper = {
  serializedName: "ApiErrorBase",
  type: {
    name: "Composite",
    className: "ApiErrorBase",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const InnerError: msRest.CompositeMapper = {
  serializedName: "InnerError",
  type: {
    name: "Composite",
    className: "InnerError",
    modelProperties: {
      exceptiontype: {
        serializedName: "exceptiontype",
        type: {
          name: "String"
        }
      },
      errordetail: {
        serializedName: "errordetail",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiError: msRest.CompositeMapper = {
  serializedName: "ApiError",
  type: {
    name: "Composite",
    className: "ApiError",
    modelProperties: {
      details: {
        serializedName: "details",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ApiErrorBase"
            }
          }
        }
      },
      innererror: {
        serializedName: "innererror",
        type: {
          name: "Composite",
          className: "InnerError"
        }
      },
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VirtualMachineAssessPatchesResult: msRest.CompositeMapper = {
  serializedName: "VirtualMachineAssessPatchesResult",
  type: {
    name: "Composite",
    className: "VirtualMachineAssessPatchesResult",
    modelProperties: {
      status: {
        readOnly: true,
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      assessmentActivityId: {
        readOnly: true,
        serializedName: "assessmentActivityId",
        type: {
          name: "String"
        }
      },
      rebootPending: {
        readOnly: true,
        serializedName: "rebootPending",
        type: {
          name: "Boolean"
        }
      },
      criticalAndSecurityPatchCount: {
        readOnly: true,
        serializedName: "criticalAndSecurityPatchCount",
        type: {
          name: "Number"
        }
      },
      otherPatchCount: {
        readOnly: true,
        serializedName: "otherPatchCount",
        type: {
          name: "Number"
        }
      },
      startDateTime: {
        readOnly: true,
        serializedName: "startDateTime",
        type: {
          name: "DateTime"
        }
      },
      patches: {
        readOnly: true,
        serializedName: "patches",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VirtualMachineSoftwarePatchProperties"
            }
          }
        }
      },
      error: {
        readOnly: true,
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ApiError"
        }
      }
    }
  }
};

export const PurchasePlan: msRest.CompositeMapper = {
  serializedName: "PurchasePlan",
  type: {
    name: "Composite",
    className: "PurchasePlan",
    modelProperties: {
      publisher: {
        required: true,
        serializedName: "publisher",
        type: {
          name: "String"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      product: {
        required: true,
        serializedName: "product",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OSDiskImage: msRest.CompositeMapper = {
  serializedName: "OSDiskImage",
  type: {
    name: "Composite",
    className: "OSDiskImage",
    modelProperties: {
      operatingSystem: {
        required: true,
        serializedName: "operatingSystem",
        type: {
          name: "Enum",
          allowedValues: [
            "Windows",
            "Linux"
          ]
        }
      }
    }
  }
};

export const DataDiskImage: msRest.CompositeMapper = {
  serializedName: "DataDiskImage",
  type: {
    name: "Composite",
    className: "DataDiskImage",
    modelProperties: {
      lun: {
        readOnly: true,
        serializedName: "lun",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const AutomaticOSUpgradeProperties: msRest.CompositeMapper = {
  serializedName: "AutomaticOSUpgradeProperties",
  type: {
    name: "Composite",
    className: "AutomaticOSUpgradeProperties",
    modelProperties: {
      automaticOSUpgradeSupported: {
        required: true,
        serializedName: "automaticOSUpgradeSupported",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const VirtualMachineImage: msRest.CompositeMapper = {
  serializedName: "VirtualMachineImage",
  type: {
    name: "Composite",
    className: "VirtualMachineImage",
    modelProperties: {
      ...VirtualMachineImageResource.type.modelProperties,
      plan: {
        serializedName: "properties.plan",
        type: {
          name: "Composite",
          className: "PurchasePlan"
        }
      },
      osDiskImage: {
        serializedName: "properties.osDiskImage",
        type: {
          name: "Composite",
          className: "OSDiskImage"
        }
      },
      dataDiskImages: {
        serializedName: "properties.dataDiskImages",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DataDiskImage"
            }
          }
        }
      },
      automaticOSUpgradeProperties: {
        serializedName: "properties.automaticOSUpgradeProperties",
        type: {
          name: "Composite",
          className: "AutomaticOSUpgradeProperties"
        }
      },
      hyperVGeneration: {
        serializedName: "properties.hyperVGeneration",
        type: {
          name: "String"
        }
      },
      disallowed: {
        serializedName: "properties.disallowed",
        type: {
          name: "Composite",
          className: "DisallowedConfiguration"
        }
      }
    }
  }
};

export const UsageName: msRest.CompositeMapper = {
  serializedName: "UsageName",
  type: {
    name: "Composite",
    className: "UsageName",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "String"
        }
      },
      localizedValue: {
        serializedName: "localizedValue",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Usage: msRest.CompositeMapper = {
  serializedName: "Usage",
  type: {
    name: "Composite",
    className: "Usage",
    modelProperties: {
      unit: {
        required: true,
        isConstant: true,
        serializedName: "unit",
        defaultValue: 'Count',
        type: {
          name: "String"
        }
      },
      currentValue: {
        required: true,
        serializedName: "currentValue",
        type: {
          name: "Number"
        }
      },
      limit: {
        required: true,
        serializedName: "limit",
        type: {
          name: "Number"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "Composite",
          className: "UsageName"
        }
      }
    }
  }
};

export const VirtualMachineReimageParameters: msRest.CompositeMapper = {
  serializedName: "VirtualMachineReimageParameters",
  type: {
    name: "Composite",
    className: "VirtualMachineReimageParameters",
    modelProperties: {
      tempDisk: {
        serializedName: "tempDisk",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const VirtualMachineCaptureParameters: msRest.CompositeMapper = {
  serializedName: "VirtualMachineCaptureParameters",
  type: {
    name: "Composite",
    className: "VirtualMachineCaptureParameters",
    modelProperties: {
      vhdPrefix: {
        required: true,
        serializedName: "vhdPrefix",
        type: {
          name: "String"
        }
      },
      destinationContainerName: {
        required: true,
        serializedName: "destinationContainerName",
        type: {
          name: "String"
        }
      },
      overwriteVhds: {
        required: true,
        serializedName: "overwriteVhds",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const VirtualMachineCaptureResult: msRest.CompositeMapper = {
  serializedName: "VirtualMachineCaptureResult",
  type: {
    name: "Composite",
    className: "VirtualMachineCaptureResult",
    modelProperties: {
      ...SubResource.type.modelProperties,
      schema: {
        readOnly: true,
        serializedName: "$schema",
        type: {
          name: "String"
        }
      },
      contentVersion: {
        readOnly: true,
        serializedName: "contentVersion",
        type: {
          name: "String"
        }
      },
      parameters: {
        readOnly: true,
        serializedName: "parameters",
        type: {
          name: "Object"
        }
      },
      resources: {
        readOnly: true,
        serializedName: "resources",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Object"
            }
          }
        }
      }
    }
  }
};

export const Plan: msRest.CompositeMapper = {
  serializedName: "Plan",
  type: {
    name: "Composite",
    className: "Plan",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      publisher: {
        serializedName: "publisher",
        type: {
          name: "String"
        }
      },
      product: {
        serializedName: "product",
        type: {
          name: "String"
        }
      },
      promotionCode: {
        serializedName: "promotionCode",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const HardwareProfile: msRest.CompositeMapper = {
  serializedName: "HardwareProfile",
  type: {
    name: "Composite",
    className: "HardwareProfile",
    modelProperties: {
      vmSize: {
        serializedName: "vmSize",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ImageReference: msRest.CompositeMapper = {
  serializedName: "ImageReference",
  type: {
    name: "Composite",
    className: "ImageReference",
    modelProperties: {
      ...SubResource.type.modelProperties,
      publisher: {
        serializedName: "publisher",
        type: {
          name: "String"
        }
      },
      offer: {
        serializedName: "offer",
        type: {
          name: "String"
        }
      },
      sku: {
        serializedName: "sku",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      exactVersion: {
        readOnly: true,
        serializedName: "exactVersion",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const KeyVaultSecretReference: msRest.CompositeMapper = {
  serializedName: "KeyVaultSecretReference",
  type: {
    name: "Composite",
    className: "KeyVaultSecretReference",
    modelProperties: {
      secretUrl: {
        required: true,
        serializedName: "secretUrl",
        type: {
          name: "String"
        }
      },
      sourceVault: {
        required: true,
        serializedName: "sourceVault",
        type: {
          name: "Composite",
          className: "SubResource"
        }
      }
    }
  }
};

export const DiskEncryptionSetParameters: msRest.CompositeMapper = {
  serializedName: "DiskEncryptionSetParameters",
  type: {
    name: "Composite",
    className: "DiskEncryptionSetParameters",
    modelProperties: {
      ...SubResource.type.modelProperties
    }
  }
};

export const KeyVaultKeyReference: msRest.CompositeMapper = {
  serializedName: "KeyVaultKeyReference",
  type: {
    name: "Composite",
    className: "KeyVaultKeyReference",
    modelProperties: {
      keyUrl: {
        required: true,
        serializedName: "keyUrl",
        type: {
          name: "String"
        }
      },
      sourceVault: {
        required: true,
        serializedName: "sourceVault",
        type: {
          name: "Composite",
          className: "SubResource"
        }
      }
    }
  }
};

export const DiskEncryptionSettings: msRest.CompositeMapper = {
  serializedName: "DiskEncryptionSettings",
  type: {
    name: "Composite",
    className: "DiskEncryptionSettings",
    modelProperties: {
      diskEncryptionKey: {
        serializedName: "diskEncryptionKey",
        type: {
          name: "Composite",
          className: "KeyVaultSecretReference"
        }
      },
      keyEncryptionKey: {
        serializedName: "keyEncryptionKey",
        type: {
          name: "Composite",
          className: "KeyVaultKeyReference"
        }
      },
      enabled: {
        serializedName: "enabled",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const VirtualHardDisk: msRest.CompositeMapper = {
  serializedName: "VirtualHardDisk",
  type: {
    name: "Composite",
    className: "VirtualHardDisk",
    modelProperties: {
      uri: {
        serializedName: "uri",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DiffDiskSettings: msRest.CompositeMapper = {
  serializedName: "DiffDiskSettings",
  type: {
    name: "Composite",
    className: "DiffDiskSettings",
    modelProperties: {
      option: {
        serializedName: "option",
        type: {
          name: "String"
        }
      },
      placement: {
        serializedName: "placement",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ManagedDiskParameters: msRest.CompositeMapper = {
  serializedName: "ManagedDiskParameters",
  type: {
    name: "Composite",
    className: "ManagedDiskParameters",
    modelProperties: {
      ...SubResource.type.modelProperties,
      storageAccountType: {
        serializedName: "storageAccountType",
        type: {
          name: "String"
        }
      },
      diskEncryptionSet: {
        serializedName: "diskEncryptionSet",
        type: {
          name: "Composite",
          className: "DiskEncryptionSetParameters"
        }
      }
    }
  }
};

export const OSDisk: msRest.CompositeMapper = {
  serializedName: "OSDisk",
  type: {
    name: "Composite",
    className: "OSDisk",
    modelProperties: {
      osType: {
        serializedName: "osType",
        type: {
          name: "Enum",
          allowedValues: [
            "Windows",
            "Linux"
          ]
        }
      },
      encryptionSettings: {
        serializedName: "encryptionSettings",
        type: {
          name: "Composite",
          className: "DiskEncryptionSettings"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      vhd: {
        serializedName: "vhd",
        type: {
          name: "Composite",
          className: "VirtualHardDisk"
        }
      },
      image: {
        serializedName: "image",
        type: {
          name: "Composite",
          className: "VirtualHardDisk"
        }
      },
      caching: {
        serializedName: "caching",
        type: {
          name: "Enum",
          allowedValues: [
            "None",
            "ReadOnly",
            "ReadWrite"
          ]
        }
      },
      writeAcceleratorEnabled: {
        serializedName: "writeAcceleratorEnabled",
        type: {
          name: "Boolean"
        }
      },
      diffDiskSettings: {
        serializedName: "diffDiskSettings",
        type: {
          name: "Composite",
          className: "DiffDiskSettings"
        }
      },
      createOption: {
        required: true,
        serializedName: "createOption",
        type: {
          name: "String"
        }
      },
      diskSizeGB: {
        serializedName: "diskSizeGB",
        type: {
          name: "Number"
        }
      },
      managedDisk: {
        serializedName: "managedDisk",
        type: {
          name: "Composite",
          className: "ManagedDiskParameters"
        }
      }
    }
  }
};

export const DataDisk: msRest.CompositeMapper = {
  serializedName: "DataDisk",
  type: {
    name: "Composite",
    className: "DataDisk",
    modelProperties: {
      lun: {
        required: true,
        serializedName: "lun",
        type: {
          name: "Number"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      vhd: {
        serializedName: "vhd",
        type: {
          name: "Composite",
          className: "VirtualHardDisk"
        }
      },
      image: {
        serializedName: "image",
        type: {
          name: "Composite",
          className: "VirtualHardDisk"
        }
      },
      caching: {
        serializedName: "caching",
        type: {
          name: "Enum",
          allowedValues: [
            "None",
            "ReadOnly",
            "ReadWrite"
          ]
        }
      },
      writeAcceleratorEnabled: {
        serializedName: "writeAcceleratorEnabled",
        type: {
          name: "Boolean"
        }
      },
      createOption: {
        required: true,
        serializedName: "createOption",
        type: {
          name: "String"
        }
      },
      diskSizeGB: {
        serializedName: "diskSizeGB",
        type: {
          name: "Number"
        }
      },
      managedDisk: {
        serializedName: "managedDisk",
        type: {
          name: "Composite",
          className: "ManagedDiskParameters"
        }
      },
      toBeDetached: {
        serializedName: "toBeDetached",
        type: {
          name: "Boolean"
        }
      },
      diskIOPSReadWrite: {
        readOnly: true,
        serializedName: "diskIOPSReadWrite",
        type: {
          name: "Number"
        }
      },
      diskMBpsReadWrite: {
        readOnly: true,
        serializedName: "diskMBpsReadWrite",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const StorageProfile: msRest.CompositeMapper = {
  serializedName: "StorageProfile",
  type: {
    name: "Composite",
    className: "StorageProfile",
    modelProperties: {
      imageReference: {
        serializedName: "imageReference",
        type: {
          name: "Composite",
          className: "ImageReference"
        }
      },
      osDisk: {
        serializedName: "osDisk",
        type: {
          name: "Composite",
          className: "OSDisk"
        }
      },
      dataDisks: {
        serializedName: "dataDisks",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DataDisk"
            }
          }
        }
      }
    }
  }
};

export const SecurityProfile: msRest.CompositeMapper = {
  serializedName: "SecurityProfile",
  type: {
    name: "Composite",
    className: "SecurityProfile",
    modelProperties: {
      encryptionAtHost: {
        serializedName: "encryptionAtHost",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const AdditionalCapabilities: msRest.CompositeMapper = {
  serializedName: "AdditionalCapabilities",
  type: {
    name: "Composite",
    className: "AdditionalCapabilities",
    modelProperties: {
      ultraSSDEnabled: {
        serializedName: "ultraSSDEnabled",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const AdditionalUnattendContent: msRest.CompositeMapper = {
  serializedName: "AdditionalUnattendContent",
  type: {
    name: "Composite",
    className: "AdditionalUnattendContent",
    modelProperties: {
      passName: {
        serializedName: "passName",
        type: {
          name: "Enum",
          allowedValues: [
            "OobeSystem"
          ]
        }
      },
      componentName: {
        serializedName: "componentName",
        type: {
          name: "Enum",
          allowedValues: [
            "Microsoft-Windows-Shell-Setup"
          ]
        }
      },
      settingName: {
        serializedName: "settingName",
        type: {
          name: "Enum",
          allowedValues: [
            "AutoLogon",
            "FirstLogonCommands"
          ]
        }
      },
      content: {
        serializedName: "content",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WinRMListener: msRest.CompositeMapper = {
  serializedName: "WinRMListener",
  type: {
    name: "Composite",
    className: "WinRMListener",
    modelProperties: {
      protocol: {
        serializedName: "protocol",
        type: {
          name: "Enum",
          allowedValues: [
            "Http",
            "Https"
          ]
        }
      },
      certificateUrl: {
        serializedName: "certificateUrl",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WinRMConfiguration: msRest.CompositeMapper = {
  serializedName: "WinRMConfiguration",
  type: {
    name: "Composite",
    className: "WinRMConfiguration",
    modelProperties: {
      listeners: {
        serializedName: "listeners",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "WinRMListener"
            }
          }
        }
      }
    }
  }
};

export const PatchSettings: msRest.CompositeMapper = {
  serializedName: "PatchSettings",
  type: {
    name: "Composite",
    className: "PatchSettings",
    modelProperties: {
      patchMode: {
        serializedName: "patchMode",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WindowsConfiguration: msRest.CompositeMapper = {
  serializedName: "WindowsConfiguration",
  type: {
    name: "Composite",
    className: "WindowsConfiguration",
    modelProperties: {
      provisionVMAgent: {
        serializedName: "provisionVMAgent",
        type: {
          name: "Boolean"
        }
      },
      enableAutomaticUpdates: {
        serializedName: "enableAutomaticUpdates",
        type: {
          name: "Boolean"
        }
      },
      timeZone: {
        serializedName: "timeZone",
        type: {
          name: "String"
        }
      },
      additionalUnattendContent: {
        serializedName: "additionalUnattendContent",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AdditionalUnattendContent"
            }
          }
        }
      },
      patchSettings: {
        serializedName: "patchSettings",
        type: {
          name: "Composite",
          className: "PatchSettings"
        }
      },
      winRM: {
        serializedName: "winRM",
        type: {
          name: "Composite",
          className: "WinRMConfiguration"
        }
      }
    }
  }
};

export const SshPublicKey: msRest.CompositeMapper = {
  serializedName: "SshPublicKey",
  type: {
    name: "Composite",
    className: "SshPublicKey",
    modelProperties: {
      path: {
        serializedName: "path",
        type: {
          name: "String"
        }
      },
      keyData: {
        serializedName: "keyData",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SshConfiguration: msRest.CompositeMapper = {
  serializedName: "SshConfiguration",
  type: {
    name: "Composite",
    className: "SshConfiguration",
    modelProperties: {
      publicKeys: {
        serializedName: "publicKeys",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SshPublicKey"
            }
          }
        }
      }
    }
  }
};

export const LinuxConfiguration: msRest.CompositeMapper = {
  serializedName: "LinuxConfiguration",
  type: {
    name: "Composite",
    className: "LinuxConfiguration",
    modelProperties: {
      disablePasswordAuthentication: {
        serializedName: "disablePasswordAuthentication",
        type: {
          name: "Boolean"
        }
      },
      ssh: {
        serializedName: "ssh",
        type: {
          name: "Composite",
          className: "SshConfiguration"
        }
      },
      provisionVMAgent: {
        serializedName: "provisionVMAgent",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const VaultCertificate: msRest.CompositeMapper = {
  serializedName: "VaultCertificate",
  type: {
    name: "Composite",
    className: "VaultCertificate",
    modelProperties: {
      certificateUrl: {
        serializedName: "certificateUrl",
        type: {
          name: "String"
        }
      },
      certificateStore: {
        serializedName: "certificateStore",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VaultSecretGroup: msRest.CompositeMapper = {
  serializedName: "VaultSecretGroup",
  type: {
    name: "Composite",
    className: "VaultSecretGroup",
    modelProperties: {
      sourceVault: {
        serializedName: "sourceVault",
        type: {
          name: "Composite",
          className: "SubResource"
        }
      },
      vaultCertificates: {
        serializedName: "vaultCertificates",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VaultCertificate"
            }
          }
        }
      }
    }
  }
};

export const OSProfile: msRest.CompositeMapper = {
  serializedName: "OSProfile",
  type: {
    name: "Composite",
    className: "OSProfile",
    modelProperties: {
      computerName: {
        serializedName: "computerName",
        type: {
          name: "String"
        }
      },
      adminUsername: {
        serializedName: "adminUsername",
        type: {
          name: "String"
        }
      },
      adminPassword: {
        serializedName: "adminPassword",
        type: {
          name: "String"
        }
      },
      customData: {
        serializedName: "customData",
        type: {
          name: "String"
        }
      },
      windowsConfiguration: {
        serializedName: "windowsConfiguration",
        type: {
          name: "Composite",
          className: "WindowsConfiguration"
        }
      },
      linuxConfiguration: {
        serializedName: "linuxConfiguration",
        type: {
          name: "Composite",
          className: "LinuxConfiguration"
        }
      },
      secrets: {
        serializedName: "secrets",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VaultSecretGroup"
            }
          }
        }
      },
      allowExtensionOperations: {
        serializedName: "allowExtensionOperations",
        type: {
          name: "Boolean"
        }
      },
      requireGuestProvisionSignal: {
        serializedName: "requireGuestProvisionSignal",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const AutomaticRepairsPolicy: msRest.CompositeMapper = {
  serializedName: "AutomaticRepairsPolicy",
  type: {
    name: "Composite",
    className: "AutomaticRepairsPolicy",
    modelProperties: {
      enabled: {
        serializedName: "enabled",
        type: {
          name: "Boolean"
        }
      },
      gracePeriod: {
        serializedName: "gracePeriod",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NetworkInterfaceReference: msRest.CompositeMapper = {
  serializedName: "NetworkInterfaceReference",
  type: {
    name: "Composite",
    className: "NetworkInterfaceReference",
    modelProperties: {
      ...SubResource.type.modelProperties,
      primary: {
        serializedName: "properties.primary",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const NetworkProfile: msRest.CompositeMapper = {
  serializedName: "NetworkProfile",
  type: {
    name: "Composite",
    className: "NetworkProfile",
    modelProperties: {
      networkInterfaces: {
        serializedName: "networkInterfaces",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "NetworkInterfaceReference"
            }
          }
        }
      }
    }
  }
};

export const BootDiagnostics: msRest.CompositeMapper = {
  serializedName: "BootDiagnostics",
  type: {
    name: "Composite",
    className: "BootDiagnostics",
    modelProperties: {
      enabled: {
        serializedName: "enabled",
        type: {
          name: "Boolean"
        }
      },
      storageUri: {
        serializedName: "storageUri",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DiagnosticsProfile: msRest.CompositeMapper = {
  serializedName: "DiagnosticsProfile",
  type: {
    name: "Composite",
    className: "DiagnosticsProfile",
    modelProperties: {
      bootDiagnostics: {
        serializedName: "bootDiagnostics",
        type: {
          name: "Composite",
          className: "BootDiagnostics"
        }
      }
    }
  }
};

export const BillingProfile: msRest.CompositeMapper = {
  serializedName: "BillingProfile",
  type: {
    name: "Composite",
    className: "BillingProfile",
    modelProperties: {
      maxPrice: {
        serializedName: "maxPrice",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const VirtualMachineExtensionHandlerInstanceView: msRest.CompositeMapper = {
  serializedName: "VirtualMachineExtensionHandlerInstanceView",
  type: {
    name: "Composite",
    className: "VirtualMachineExtensionHandlerInstanceView",
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      typeHandlerVersion: {
        serializedName: "typeHandlerVersion",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "Composite",
          className: "InstanceViewStatus"
        }
      }
    }
  }
};

export const VirtualMachineAgentInstanceView: msRest.CompositeMapper = {
  serializedName: "VirtualMachineAgentInstanceView",
  type: {
    name: "Composite",
    className: "VirtualMachineAgentInstanceView",
    modelProperties: {
      vmAgentVersion: {
        serializedName: "vmAgentVersion",
        type: {
          name: "String"
        }
      },
      extensionHandlers: {
        serializedName: "extensionHandlers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VirtualMachineExtensionHandlerInstanceView"
            }
          }
        }
      },
      statuses: {
        serializedName: "statuses",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "InstanceViewStatus"
            }
          }
        }
      }
    }
  }
};

export const DiskInstanceView: msRest.CompositeMapper = {
  serializedName: "DiskInstanceView",
  type: {
    name: "Composite",
    className: "DiskInstanceView",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      encryptionSettings: {
        serializedName: "encryptionSettings",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DiskEncryptionSettings"
            }
          }
        }
      },
      statuses: {
        serializedName: "statuses",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "InstanceViewStatus"
            }
          }
        }
      }
    }
  }
};

export const BootDiagnosticsInstanceView: msRest.CompositeMapper = {
  serializedName: "BootDiagnosticsInstanceView",
  type: {
    name: "Composite",
    className: "BootDiagnosticsInstanceView",
    modelProperties: {
      consoleScreenshotBlobUri: {
        readOnly: true,
        serializedName: "consoleScreenshotBlobUri",
        type: {
          name: "String"
        }
      },
      serialConsoleLogBlobUri: {
        readOnly: true,
        serializedName: "serialConsoleLogBlobUri",
        type: {
          name: "String"
        }
      },
      status: {
        readOnly: true,
        serializedName: "status",
        type: {
          name: "Composite",
          className: "InstanceViewStatus"
        }
      }
    }
  }
};

export const VirtualMachineIdentityUserAssignedIdentitiesValue: msRest.CompositeMapper = {
  serializedName: "VirtualMachineIdentity_userAssignedIdentitiesValue",
  type: {
    name: "Composite",
    className: "VirtualMachineIdentityUserAssignedIdentitiesValue",
    modelProperties: {
      principalId: {
        readOnly: true,
        serializedName: "principalId",
        type: {
          name: "String"
        }
      },
      clientId: {
        readOnly: true,
        serializedName: "clientId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VirtualMachineIdentity: msRest.CompositeMapper = {
  serializedName: "VirtualMachineIdentity",
  type: {
    name: "Composite",
    className: "VirtualMachineIdentity",
    modelProperties: {
      principalId: {
        readOnly: true,
        serializedName: "principalId",
        type: {
          name: "String"
        }
      },
      tenantId: {
        readOnly: true,
        serializedName: "tenantId",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "Enum",
          allowedValues: [
            "SystemAssigned",
            "UserAssigned",
            "SystemAssigned, UserAssigned",
            "None"
          ]
        }
      },
      userAssignedIdentities: {
        serializedName: "userAssignedIdentities",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className: "VirtualMachineIdentityUserAssignedIdentitiesValue"
            }
          }
        }
      }
    }
  }
};

export const MaintenanceRedeployStatus: msRest.CompositeMapper = {
  serializedName: "MaintenanceRedeployStatus",
  type: {
    name: "Composite",
    className: "MaintenanceRedeployStatus",
    modelProperties: {
      isCustomerInitiatedMaintenanceAllowed: {
        serializedName: "isCustomerInitiatedMaintenanceAllowed",
        type: {
          name: "Boolean"
        }
      },
      preMaintenanceWindowStartTime: {
        serializedName: "preMaintenanceWindowStartTime",
        type: {
          name: "DateTime"
        }
      },
      preMaintenanceWindowEndTime: {
        serializedName: "preMaintenanceWindowEndTime",
        type: {
          name: "DateTime"
        }
      },
      maintenanceWindowStartTime: {
        serializedName: "maintenanceWindowStartTime",
        type: {
          name: "DateTime"
        }
      },
      maintenanceWindowEndTime: {
        serializedName: "maintenanceWindowEndTime",
        type: {
          name: "DateTime"
        }
      },
      lastOperationResultCode: {
        serializedName: "lastOperationResultCode",
        type: {
          name: "Enum",
          allowedValues: [
            "None",
            "RetryLater",
            "MaintenanceAborted",
            "MaintenanceCompleted"
          ]
        }
      },
      lastOperationMessage: {
        serializedName: "lastOperationMessage",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VirtualMachineHealthStatus: msRest.CompositeMapper = {
  serializedName: "VirtualMachineHealthStatus",
  type: {
    name: "Composite",
    className: "VirtualMachineHealthStatus",
    modelProperties: {
      status: {
        readOnly: true,
        serializedName: "status",
        type: {
          name: "Composite",
          className: "InstanceViewStatus"
        }
      }
    }
  }
};

export const AvailablePatchSummary: msRest.CompositeMapper = {
  serializedName: "AvailablePatchSummary",
  type: {
    name: "Composite",
    className: "AvailablePatchSummary",
    modelProperties: {
      status: {
        readOnly: true,
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      assessmentActivityId: {
        readOnly: true,
        serializedName: "assessmentActivityId",
        type: {
          name: "String"
        }
      },
      rebootPending: {
        readOnly: true,
        serializedName: "rebootPending",
        type: {
          name: "Boolean"
        }
      },
      criticalAndSecurityPatchCount: {
        readOnly: true,
        serializedName: "criticalAndSecurityPatchCount",
        type: {
          name: "Number"
        }
      },
      otherPatchCount: {
        readOnly: true,
        serializedName: "otherPatchCount",
        type: {
          name: "Number"
        }
      },
      startTime: {
        readOnly: true,
        serializedName: "startTime",
        type: {
          name: "DateTime"
        }
      },
      lastModifiedTime: {
        readOnly: true,
        serializedName: "lastModifiedTime",
        type: {
          name: "DateTime"
        }
      },
      error: {
        readOnly: true,
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ApiError"
        }
      }
    }
  }
};

export const LastPatchInstallationSummary: msRest.CompositeMapper = {
  serializedName: "LastPatchInstallationSummary",
  type: {
    name: "Composite",
    className: "LastPatchInstallationSummary",
    modelProperties: {
      status: {
        readOnly: true,
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      installationActivityId: {
        readOnly: true,
        serializedName: "installationActivityId",
        type: {
          name: "String"
        }
      },
      maintenanceWindowExceeded: {
        readOnly: true,
        serializedName: "maintenanceWindowExceeded",
        type: {
          name: "Boolean"
        }
      },
      rebootStatus: {
        readOnly: true,
        serializedName: "rebootStatus",
        type: {
          name: "String"
        }
      },
      notSelectedPatchCount: {
        readOnly: true,
        serializedName: "notSelectedPatchCount",
        type: {
          name: "Number"
        }
      },
      excludedPatchCount: {
        readOnly: true,
        serializedName: "excludedPatchCount",
        type: {
          name: "Number"
        }
      },
      pendingPatchCount: {
        readOnly: true,
        serializedName: "pendingPatchCount",
        type: {
          name: "Number"
        }
      },
      installedPatchCount: {
        readOnly: true,
        serializedName: "installedPatchCount",
        type: {
          name: "Number"
        }
      },
      failedPatchCount: {
        readOnly: true,
        serializedName: "failedPatchCount",
        type: {
          name: "Number"
        }
      },
      startTime: {
        readOnly: true,
        serializedName: "startTime",
        type: {
          name: "DateTime"
        }
      },
      lastModifiedTime: {
        readOnly: true,
        serializedName: "lastModifiedTime",
        type: {
          name: "DateTime"
        }
      },
      startedBy: {
        readOnly: true,
        serializedName: "startedBy",
        type: {
          name: "String"
        }
      },
      error: {
        readOnly: true,
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ApiError"
        }
      }
    }
  }
};

export const VirtualMachinePatchStatus: msRest.CompositeMapper = {
  serializedName: "VirtualMachinePatchStatus",
  type: {
    name: "Composite",
    className: "VirtualMachinePatchStatus",
    modelProperties: {
      availablePatchSummary: {
        serializedName: "availablePatchSummary",
        type: {
          name: "Composite",
          className: "AvailablePatchSummary"
        }
      },
      lastPatchInstallationSummary: {
        serializedName: "lastPatchInstallationSummary",
        type: {
          name: "Composite",
          className: "LastPatchInstallationSummary"
        }
      }
    }
  }
};

export const VirtualMachineInstanceView: msRest.CompositeMapper = {
  serializedName: "VirtualMachineInstanceView",
  type: {
    name: "Composite",
    className: "VirtualMachineInstanceView",
    modelProperties: {
      platformUpdateDomain: {
        serializedName: "platformUpdateDomain",
        type: {
          name: "Number"
        }
      },
      platformFaultDomain: {
        serializedName: "platformFaultDomain",
        type: {
          name: "Number"
        }
      },
      computerName: {
        serializedName: "computerName",
        type: {
          name: "String"
        }
      },
      osName: {
        serializedName: "osName",
        type: {
          name: "String"
        }
      },
      osVersion: {
        serializedName: "osVersion",
        type: {
          name: "String"
        }
      },
      hyperVGeneration: {
        serializedName: "hyperVGeneration",
        type: {
          name: "String"
        }
      },
      rdpThumbPrint: {
        serializedName: "rdpThumbPrint",
        type: {
          name: "String"
        }
      },
      vmAgent: {
        serializedName: "vmAgent",
        type: {
          name: "Composite",
          className: "VirtualMachineAgentInstanceView"
        }
      },
      maintenanceRedeployStatus: {
        serializedName: "maintenanceRedeployStatus",
        type: {
          name: "Composite",
          className: "MaintenanceRedeployStatus"
        }
      },
      disks: {
        serializedName: "disks",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DiskInstanceView"
            }
          }
        }
      },
      extensions: {
        serializedName: "extensions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VirtualMachineExtensionInstanceView"
            }
          }
        }
      },
      vmHealth: {
        readOnly: true,
        serializedName: "vmHealth",
        type: {
          name: "Composite",
          className: "VirtualMachineHealthStatus"
        }
      },
      bootDiagnostics: {
        serializedName: "bootDiagnostics",
        type: {
          name: "Composite",
          className: "BootDiagnosticsInstanceView"
        }
      },
      assignedHost: {
        readOnly: true,
        serializedName: "assignedHost",
        type: {
          name: "String"
        }
      },
      statuses: {
        serializedName: "statuses",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "InstanceViewStatus"
            }
          }
        }
      },
      patchStatus: {
        serializedName: "patchStatus",
        type: {
          name: "Composite",
          className: "VirtualMachinePatchStatus"
        }
      }
    }
  }
};

export const VirtualMachine: msRest.CompositeMapper = {
  serializedName: "VirtualMachine",
  type: {
    name: "Composite",
    className: "VirtualMachine",
    modelProperties: {
      ...Resource.type.modelProperties,
      plan: {
        serializedName: "plan",
        type: {
          name: "Composite",
          className: "Plan"
        }
      },
      hardwareProfile: {
        serializedName: "properties.hardwareProfile",
        type: {
          name: "Composite",
          className: "HardwareProfile"
        }
      },
      storageProfile: {
        serializedName: "properties.storageProfile",
        type: {
          name: "Composite",
          className: "StorageProfile"
        }
      },
      additionalCapabilities: {
        serializedName: "properties.additionalCapabilities",
        type: {
          name: "Composite",
          className: "AdditionalCapabilities"
        }
      },
      osProfile: {
        serializedName: "properties.osProfile",
        type: {
          name: "Composite",
          className: "OSProfile"
        }
      },
      networkProfile: {
        serializedName: "properties.networkProfile",
        type: {
          name: "Composite",
          className: "NetworkProfile"
        }
      },
      securityProfile: {
        serializedName: "properties.securityProfile",
        type: {
          name: "Composite",
          className: "SecurityProfile"
        }
      },
      diagnosticsProfile: {
        serializedName: "properties.diagnosticsProfile",
        type: {
          name: "Composite",
          className: "DiagnosticsProfile"
        }
      },
      availabilitySet: {
        serializedName: "properties.availabilitySet",
        type: {
          name: "Composite",
          className: "SubResource"
        }
      },
      virtualMachineScaleSet: {
        serializedName: "properties.virtualMachineScaleSet",
        type: {
          name: "Composite",
          className: "SubResource"
        }
      },
      proximityPlacementGroup: {
        serializedName: "properties.proximityPlacementGroup",
        type: {
          name: "Composite",
          className: "SubResource"
        }
      },
      priority: {
        serializedName: "properties.priority",
        type: {
          name: "String"
        }
      },
      evictionPolicy: {
        serializedName: "properties.evictionPolicy",
        type: {
          name: "String"
        }
      },
      billingProfile: {
        serializedName: "properties.billingProfile",
        type: {
          name: "Composite",
          className: "BillingProfile"
        }
      },
      host: {
        serializedName: "properties.host",
        type: {
          name: "Composite",
          className: "SubResource"
        }
      },
      hostGroup: {
        serializedName: "properties.hostGroup",
        type: {
          name: "Composite",
          className: "SubResource"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      instanceView: {
        readOnly: true,
        serializedName: "properties.instanceView",
        type: {
          name: "Composite",
          className: "VirtualMachineInstanceView"
        }
      },
      licenseType: {
        serializedName: "properties.licenseType",
        type: {
          name: "String"
        }
      },
      vmId: {
        readOnly: true,
        serializedName: "properties.vmId",
        type: {
          name: "String"
        }
      },
      extensionsTimeBudget: {
        serializedName: "properties.extensionsTimeBudget",
        type: {
          name: "String"
        }
      },
      resources: {
        readOnly: true,
        serializedName: "resources",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VirtualMachineExtension"
            }
          }
        }
      },
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "VirtualMachineIdentity"
        }
      },
      zones: {
        serializedName: "zones",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const VirtualMachineUpdate: msRest.CompositeMapper = {
  serializedName: "VirtualMachineUpdate",
  type: {
    name: "Composite",
    className: "VirtualMachineUpdate",
    modelProperties: {
      ...UpdateResource.type.modelProperties,
      plan: {
        serializedName: "plan",
        type: {
          name: "Composite",
          className: "Plan"
        }
      },
      hardwareProfile: {
        serializedName: "properties.hardwareProfile",
        type: {
          name: "Composite",
          className: "HardwareProfile"
        }
      },
      storageProfile: {
        serializedName: "properties.storageProfile",
        type: {
          name: "Composite",
          className: "StorageProfile"
        }
      },
      additionalCapabilities: {
        serializedName: "properties.additionalCapabilities",
        type: {
          name: "Composite",
          className: "AdditionalCapabilities"
        }
      },
      osProfile: {
        serializedName: "properties.osProfile",
        type: {
          name: "Composite",
          className: "OSProfile"
        }
      },
      networkProfile: {
        serializedName: "properties.networkProfile",
        type: {
          name: "Composite",
          className: "NetworkProfile"
        }
      },
      securityProfile: {
        serializedName: "properties.securityProfile",
        type: {
          name: "Composite",
          className: "SecurityProfile"
        }
      },
      diagnosticsProfile: {
        serializedName: "properties.diagnosticsProfile",
        type: {
          name: "Composite",
          className: "DiagnosticsProfile"
        }
      },
      availabilitySet: {
        serializedName: "properties.availabilitySet",
        type: {
          name: "Composite",
          className: "SubResource"
        }
      },
      virtualMachineScaleSet: {
        serializedName: "properties.virtualMachineScaleSet",
        type: {
          name: "Composite",
          className: "SubResource"
        }
      },
      proximityPlacementGroup: {
        serializedName: "properties.proximityPlacementGroup",
        type: {
          name: "Composite",
          className: "SubResource"
        }
      },
      priority: {
        serializedName: "properties.priority",
        type: {
          name: "String"
        }
      },
      evictionPolicy: {
        serializedName: "properties.evictionPolicy",
        type: {
          name: "String"
        }
      },
      billingProfile: {
        serializedName: "properties.billingProfile",
        type: {
          name: "Composite",
          className: "BillingProfile"
        }
      },
      host: {
        serializedName: "properties.host",
        type: {
          name: "Composite",
          className: "SubResource"
        }
      },
      hostGroup: {
        serializedName: "properties.hostGroup",
        type: {
          name: "Composite",
          className: "SubResource"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      instanceView: {
        readOnly: true,
        serializedName: "properties.instanceView",
        type: {
          name: "Composite",
          className: "VirtualMachineInstanceView"
        }
      },
      licenseType: {
        serializedName: "properties.licenseType",
        type: {
          name: "String"
        }
      },
      vmId: {
        readOnly: true,
        serializedName: "properties.vmId",
        type: {
          name: "String"
        }
      },
      extensionsTimeBudget: {
        serializedName: "properties.extensionsTimeBudget",
        type: {
          name: "String"
        }
      },
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "VirtualMachineIdentity"
        }
      },
      zones: {
        serializedName: "zones",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const AutomaticOSUpgradePolicy: msRest.CompositeMapper = {
  serializedName: "AutomaticOSUpgradePolicy",
  type: {
    name: "Composite",
    className: "AutomaticOSUpgradePolicy",
    modelProperties: {
      enableAutomaticOSUpgrade: {
        serializedName: "enableAutomaticOSUpgrade",
        type: {
          name: "Boolean"
        }
      },
      disableAutomaticRollback: {
        serializedName: "disableAutomaticRollback",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const RollingUpgradePolicy: msRest.CompositeMapper = {
  serializedName: "RollingUpgradePolicy",
  type: {
    name: "Composite",
    className: "RollingUpgradePolicy",
    modelProperties: {
      maxBatchInstancePercent: {
        serializedName: "maxBatchInstancePercent",
        constraints: {
          InclusiveMaximum: 100,
          InclusiveMinimum: 5
        },
        type: {
          name: "Number"
        }
      },
      maxUnhealthyInstancePercent: {
        serializedName: "maxUnhealthyInstancePercent",
        constraints: {
          InclusiveMaximum: 100,
          InclusiveMinimum: 5
        },
        type: {
          name: "Number"
        }
      },
      maxUnhealthyUpgradedInstancePercent: {
        serializedName: "maxUnhealthyUpgradedInstancePercent",
        constraints: {
          InclusiveMaximum: 100,
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      },
      pauseTimeBetweenBatches: {
        serializedName: "pauseTimeBetweenBatches",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UpgradePolicy: msRest.CompositeMapper = {
  serializedName: "UpgradePolicy",
  type: {
    name: "Composite",
    className: "UpgradePolicy",
    modelProperties: {
      mode: {
        serializedName: "mode",
        type: {
          name: "Enum",
          allowedValues: [
            "Automatic",
            "Manual",
            "Rolling"
          ]
        }
      },
      rollingUpgradePolicy: {
        serializedName: "rollingUpgradePolicy",
        type: {
          name: "Composite",
          className: "RollingUpgradePolicy"
        }
      },
      automaticOSUpgradePolicy: {
        serializedName: "automaticOSUpgradePolicy",
        type: {
          name: "Composite",
          className: "AutomaticOSUpgradePolicy"
        }
      }
    }
  }
};

export const ScaleInPolicy: msRest.CompositeMapper = {
  serializedName: "ScaleInPolicy",
  type: {
    name: "Composite",
    className: "ScaleInPolicy",
    modelProperties: {
      rules: {
        serializedName: "rules",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ImageDisk: msRest.CompositeMapper = {
  serializedName: "ImageDisk",
  type: {
    name: "Composite",
    className: "ImageDisk",
    modelProperties: {
      snapshot: {
        serializedName: "snapshot",
        type: {
          name: "Composite",
          className: "SubResource"
        }
      },
      managedDisk: {
        serializedName: "managedDisk",
        type: {
          name: "Composite",
          className: "SubResource"
        }
      },
      blobUri: {
        serializedName: "blobUri",
        type: {
          name: "String"
        }
      },
      caching: {
        serializedName: "caching",
        type: {
          name: "Enum",
          allowedValues: [
            "None",
            "ReadOnly",
            "ReadWrite"
          ]
        }
      },
      diskSizeGB: {
        serializedName: "diskSizeGB",
        type: {
          name: "Number"
        }
      },
      storageAccountType: {
        serializedName: "storageAccountType",
        type: {
          name: "String"
        }
      },
      diskEncryptionSet: {
        serializedName: "diskEncryptionSet",
        type: {
          name: "Composite",
          className: "DiskEncryptionSetParameters"
        }
      }
    }
  }
};

export const ImageOSDisk: msRest.CompositeMapper = {
  serializedName: "ImageOSDisk",
  type: {
    name: "Composite",
    className: "ImageOSDisk",
    modelProperties: {
      ...ImageDisk.type.modelProperties,
      osType: {
        required: true,
        serializedName: "osType",
        type: {
          name: "Enum",
          allowedValues: [
            "Windows",
            "Linux"
          ]
        }
      },
      osState: {
        required: true,
        serializedName: "osState",
        type: {
          name: "Enum",
          allowedValues: [
            "Generalized",
            "Specialized"
          ]
        }
      }
    }
  }
};

export const ImageDataDisk: msRest.CompositeMapper = {
  serializedName: "ImageDataDisk",
  type: {
    name: "Composite",
    className: "ImageDataDisk",
    modelProperties: {
      ...ImageDisk.type.modelProperties,
      lun: {
        required: true,
        serializedName: "lun",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ImageStorageProfile: msRest.CompositeMapper = {
  serializedName: "ImageStorageProfile",
  type: {
    name: "Composite",
    className: "ImageStorageProfile",
    modelProperties: {
      osDisk: {
        serializedName: "osDisk",
        type: {
          name: "Composite",
          className: "ImageOSDisk"
        }
      },
      dataDisks: {
        serializedName: "dataDisks",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ImageDataDisk"
            }
          }
        }
      },
      zoneResilient: {
        serializedName: "zoneResilient",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Image: msRest.CompositeMapper = {
  serializedName: "Image",
  type: {
    name: "Composite",
    className: "Image",
    modelProperties: {
      ...Resource.type.modelProperties,
      sourceVirtualMachine: {
        serializedName: "properties.sourceVirtualMachine",
        type: {
          name: "Composite",
          className: "SubResource"
        }
      },
      storageProfile: {
        serializedName: "properties.storageProfile",
        type: {
          name: "Composite",
          className: "ImageStorageProfile"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      hyperVGeneration: {
        serializedName: "properties.hyperVGeneration",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ImageUpdate: msRest.CompositeMapper = {
  serializedName: "ImageUpdate",
  type: {
    name: "Composite",
    className: "ImageUpdate",
    modelProperties: {
      ...UpdateResource.type.modelProperties,
      sourceVirtualMachine: {
        serializedName: "properties.sourceVirtualMachine",
        type: {
          name: "Composite",
          className: "SubResource"
        }
      },
      storageProfile: {
        serializedName: "properties.storageProfile",
        type: {
          name: "Composite",
          className: "ImageStorageProfile"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      hyperVGeneration: {
        serializedName: "properties.hyperVGeneration",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VirtualMachineScaleSetIdentityUserAssignedIdentitiesValue: msRest.CompositeMapper = {
  serializedName: "VirtualMachineScaleSetIdentity_userAssignedIdentitiesValue",
  type: {
    name: "Composite",
    className: "VirtualMachineScaleSetIdentityUserAssignedIdentitiesValue",
    modelProperties: {
      principalId: {
        readOnly: true,
        serializedName: "principalId",
        type: {
          name: "String"
        }
      },
      clientId: {
        readOnly: true,
        serializedName: "clientId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VirtualMachineScaleSetIdentity: msRest.CompositeMapper = {
  serializedName: "VirtualMachineScaleSetIdentity",
  type: {
    name: "Composite",
    className: "VirtualMachineScaleSetIdentity",
    modelProperties: {
      principalId: {
        readOnly: true,
        serializedName: "principalId",
        type: {
          name: "String"
        }
      },
      tenantId: {
        readOnly: true,
        serializedName: "tenantId",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "Enum",
          allowedValues: [
            "SystemAssigned",
            "UserAssigned",
            "SystemAssigned, UserAssigned",
            "None"
          ]
        }
      },
      userAssignedIdentities: {
        serializedName: "userAssignedIdentities",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className: "VirtualMachineScaleSetIdentityUserAssignedIdentitiesValue"
            }
          }
        }
      }
    }
  }
};

export const VirtualMachineScaleSetOSProfile: msRest.CompositeMapper = {
  serializedName: "VirtualMachineScaleSetOSProfile",
  type: {
    name: "Composite",
    className: "VirtualMachineScaleSetOSProfile",
    modelProperties: {
      computerNamePrefix: {
        serializedName: "computerNamePrefix",
        type: {
          name: "String"
        }
      },
      adminUsername: {
        serializedName: "adminUsername",
        type: {
          name: "String"
        }
      },
      adminPassword: {
        serializedName: "adminPassword",
        type: {
          name: "String"
        }
      },
      customData: {
        serializedName: "customData",
        type: {
          name: "String"
        }
      },
      windowsConfiguration: {
        serializedName: "windowsConfiguration",
        type: {
          name: "Composite",
          className: "WindowsConfiguration"
        }
      },
      linuxConfiguration: {
        serializedName: "linuxConfiguration",
        type: {
          name: "Composite",
          className: "LinuxConfiguration"
        }
      },
      secrets: {
        serializedName: "secrets",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VaultSecretGroup"
            }
          }
        }
      }
    }
  }
};

export const VirtualMachineScaleSetUpdateOSProfile: msRest.CompositeMapper = {
  serializedName: "VirtualMachineScaleSetUpdateOSProfile",
  type: {
    name: "Composite",
    className: "VirtualMachineScaleSetUpdateOSProfile",
    modelProperties: {
      customData: {
        serializedName: "customData",
        type: {
          name: "String"
        }
      },
      windowsConfiguration: {
        serializedName: "windowsConfiguration",
        type: {
          name: "Composite",
          className: "WindowsConfiguration"
        }
      },
      linuxConfiguration: {
        serializedName: "linuxConfiguration",
        type: {
          name: "Composite",
          className: "LinuxConfiguration"
        }
      },
      secrets: {
        serializedName: "secrets",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VaultSecretGroup"
            }
          }
        }
      }
    }
  }
};

export const VirtualMachineScaleSetManagedDiskParameters: msRest.CompositeMapper = {
  serializedName: "VirtualMachineScaleSetManagedDiskParameters",
  type: {
    name: "Composite",
    className: "VirtualMachineScaleSetManagedDiskParameters",
    modelProperties: {
      storageAccountType: {
        serializedName: "storageAccountType",
        type: {
          name: "String"
        }
      },
      diskEncryptionSet: {
        serializedName: "diskEncryptionSet",
        type: {
          name: "Composite",
          className: "DiskEncryptionSetParameters"
        }
      }
    }
  }
};

export const VirtualMachineScaleSetOSDisk: msRest.CompositeMapper = {
  serializedName: "VirtualMachineScaleSetOSDisk",
  type: {
    name: "Composite",
    className: "VirtualMachineScaleSetOSDisk",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      caching: {
        serializedName: "caching",
        type: {
          name: "Enum",
          allowedValues: [
            "None",
            "ReadOnly",
            "ReadWrite"
          ]
        }
      },
      writeAcceleratorEnabled: {
        serializedName: "writeAcceleratorEnabled",
        type: {
          name: "Boolean"
        }
      },
      createOption: {
        required: true,
        serializedName: "createOption",
        type: {
          name: "String"
        }
      },
      diffDiskSettings: {
        serializedName: "diffDiskSettings",
        type: {
          name: "Composite",
          className: "DiffDiskSettings"
        }
      },
      diskSizeGB: {
        serializedName: "diskSizeGB",
        type: {
          name: "Number"
        }
      },
      osType: {
        serializedName: "osType",
        type: {
          name: "Enum",
          allowedValues: [
            "Windows",
            "Linux"
          ]
        }
      },
      image: {
        serializedName: "image",
        type: {
          name: "Composite",
          className: "VirtualHardDisk"
        }
      },
      vhdContainers: {
        serializedName: "vhdContainers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      managedDisk: {
        serializedName: "managedDisk",
        type: {
          name: "Composite",
          className: "VirtualMachineScaleSetManagedDiskParameters"
        }
      }
    }
  }
};

export const VirtualMachineScaleSetUpdateOSDisk: msRest.CompositeMapper = {
  serializedName: "VirtualMachineScaleSetUpdateOSDisk",
  type: {
    name: "Composite",
    className: "VirtualMachineScaleSetUpdateOSDisk",
    modelProperties: {
      caching: {
        serializedName: "caching",
        type: {
          name: "Enum",
          allowedValues: [
            "None",
            "ReadOnly",
            "ReadWrite"
          ]
        }
      },
      writeAcceleratorEnabled: {
        serializedName: "writeAcceleratorEnabled",
        type: {
          name: "Boolean"
        }
      },
      diskSizeGB: {
        serializedName: "diskSizeGB",
        type: {
          name: "Number"
        }
      },
      image: {
        serializedName: "image",
        type: {
          name: "Composite",
          className: "VirtualHardDisk"
        }
      },
      vhdContainers: {
        serializedName: "vhdContainers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      managedDisk: {
        serializedName: "managedDisk",
        type: {
          name: "Composite",
          className: "VirtualMachineScaleSetManagedDiskParameters"
        }
      }
    }
  }
};

export const VirtualMachineScaleSetDataDisk: msRest.CompositeMapper = {
  serializedName: "VirtualMachineScaleSetDataDisk",
  type: {
    name: "Composite",
    className: "VirtualMachineScaleSetDataDisk",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      lun: {
        required: true,
        serializedName: "lun",
        type: {
          name: "Number"
        }
      },
      caching: {
        serializedName: "caching",
        type: {
          name: "Enum",
          allowedValues: [
            "None",
            "ReadOnly",
            "ReadWrite"
          ]
        }
      },
      writeAcceleratorEnabled: {
        serializedName: "writeAcceleratorEnabled",
        type: {
          name: "Boolean"
        }
      },
      createOption: {
        required: true,
        serializedName: "createOption",
        type: {
          name: "String"
        }
      },
      diskSizeGB: {
        serializedName: "diskSizeGB",
        type: {
          name: "Number"
        }
      },
      managedDisk: {
        serializedName: "managedDisk",
        type: {
          name: "Composite",
          className: "VirtualMachineScaleSetManagedDiskParameters"
        }
      },
      diskIOPSReadWrite: {
        serializedName: "diskIOPSReadWrite",
        type: {
          name: "Number"
        }
      },
      diskMBpsReadWrite: {
        serializedName: "diskMBpsReadWrite",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const VirtualMachineScaleSetStorageProfile: msRest.CompositeMapper = {
  serializedName: "VirtualMachineScaleSetStorageProfile",
  type: {
    name: "Composite",
    className: "VirtualMachineScaleSetStorageProfile",
    modelProperties: {
      imageReference: {
        serializedName: "imageReference",
        type: {
          name: "Composite",
          className: "ImageReference"
        }
      },
      osDisk: {
        serializedName: "osDisk",
        type: {
          name: "Composite",
          className: "VirtualMachineScaleSetOSDisk"
        }
      },
      dataDisks: {
        serializedName: "dataDisks",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VirtualMachineScaleSetDataDisk"
            }
          }
        }
      }
    }
  }
};

export const VirtualMachineScaleSetUpdateStorageProfile: msRest.CompositeMapper = {
  serializedName: "VirtualMachineScaleSetUpdateStorageProfile",
  type: {
    name: "Composite",
    className: "VirtualMachineScaleSetUpdateStorageProfile",
    modelProperties: {
      imageReference: {
        serializedName: "imageReference",
        type: {
          name: "Composite",
          className: "ImageReference"
        }
      },
      osDisk: {
        serializedName: "osDisk",
        type: {
          name: "Composite",
          className: "VirtualMachineScaleSetUpdateOSDisk"
        }
      },
      dataDisks: {
        serializedName: "dataDisks",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VirtualMachineScaleSetDataDisk"
            }
          }
        }
      }
    }
  }
};

export const ApiEntityReference: msRest.CompositeMapper = {
  serializedName: "ApiEntityReference",
  type: {
    name: "Composite",
    className: "ApiEntityReference",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings: msRest.CompositeMapper = {
  serializedName: "VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings",
  type: {
    name: "Composite",
    className: "VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings",
    modelProperties: {
      domainNameLabel: {
        required: true,
        serializedName: "domainNameLabel",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VirtualMachineScaleSetIpTag: msRest.CompositeMapper = {
  serializedName: "VirtualMachineScaleSetIpTag",
  type: {
    name: "Composite",
    className: "VirtualMachineScaleSetIpTag",
    modelProperties: {
      ipTagType: {
        serializedName: "ipTagType",
        type: {
          name: "String"
        }
      },
      tag: {
        serializedName: "tag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VirtualMachineScaleSetPublicIPAddressConfiguration: msRest.CompositeMapper = {
  serializedName: "VirtualMachineScaleSetPublicIPAddressConfiguration",
  type: {
    name: "Composite",
    className: "VirtualMachineScaleSetPublicIPAddressConfiguration",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      idleTimeoutInMinutes: {
        serializedName: "properties.idleTimeoutInMinutes",
        type: {
          name: "Number"
        }
      },
      dnsSettings: {
        serializedName: "properties.dnsSettings",
        type: {
          name: "Composite",
          className: "VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings"
        }
      },
      ipTags: {
        serializedName: "properties.ipTags",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VirtualMachineScaleSetIpTag"
            }
          }
        }
      },
      publicIPPrefix: {
        serializedName: "properties.publicIPPrefix",
        type: {
          name: "Composite",
          className: "SubResource"
        }
      },
      publicIPAddressVersion: {
        serializedName: "properties.publicIPAddressVersion",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VirtualMachineScaleSetUpdatePublicIPAddressConfiguration: msRest.CompositeMapper = {
  serializedName: "VirtualMachineScaleSetUpdatePublicIPAddressConfiguration",
  type: {
    name: "Composite",
    className: "VirtualMachineScaleSetUpdatePublicIPAddressConfiguration",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      idleTimeoutInMinutes: {
        serializedName: "properties.idleTimeoutInMinutes",
        type: {
          name: "Number"
        }
      },
      dnsSettings: {
        serializedName: "properties.dnsSettings",
        type: {
          name: "Composite",
          className: "VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings"
        }
      }
    }
  }
};

export const VirtualMachineScaleSetIPConfiguration: msRest.CompositeMapper = {
  serializedName: "VirtualMachineScaleSetIPConfiguration",
  type: {
    name: "Composite",
    className: "VirtualMachineScaleSetIPConfiguration",
    modelProperties: {
      ...SubResource.type.modelProperties,
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      subnet: {
        serializedName: "properties.subnet",
        type: {
          name: "Composite",
          className: "ApiEntityReference"
        }
      },
      primary: {
        serializedName: "properties.primary",
        type: {
          name: "Boolean"
        }
      },
      publicIPAddressConfiguration: {
        serializedName: "properties.publicIPAddressConfiguration",
        type: {
          name: "Composite",
          className: "VirtualMachineScaleSetPublicIPAddressConfiguration"
        }
      },
      privateIPAddressVersion: {
        serializedName: "properties.privateIPAddressVersion",
        type: {
          name: "String"
        }
      },
      applicationGatewayBackendAddressPools: {
        serializedName: "properties.applicationGatewayBackendAddressPools",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SubResource"
            }
          }
        }
      },
      applicationSecurityGroups: {
        serializedName: "properties.applicationSecurityGroups",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SubResource"
            }
          }
        }
      },
      loadBalancerBackendAddressPools: {
        serializedName: "properties.loadBalancerBackendAddressPools",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SubResource"
            }
          }
        }
      },
      loadBalancerInboundNatPools: {
        serializedName: "properties.loadBalancerInboundNatPools",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SubResource"
            }
          }
        }
      }
    }
  }
};

export const VirtualMachineScaleSetUpdateIPConfiguration: msRest.CompositeMapper = {
  serializedName: "VirtualMachineScaleSetUpdateIPConfiguration",
  type: {
    name: "Composite",
    className: "VirtualMachineScaleSetUpdateIPConfiguration",
    modelProperties: {
      ...SubResource.type.modelProperties,
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      subnet: {
        serializedName: "properties.subnet",
        type: {
          name: "Composite",
          className: "ApiEntityReference"
        }
      },
      primary: {
        serializedName: "properties.primary",
        type: {
          name: "Boolean"
        }
      },
      publicIPAddressConfiguration: {
        serializedName: "properties.publicIPAddressConfiguration",
        type: {
          name: "Composite",
          className: "VirtualMachineScaleSetUpdatePublicIPAddressConfiguration"
        }
      },
      privateIPAddressVersion: {
        serializedName: "properties.privateIPAddressVersion",
        type: {
          name: "String"
        }
      },
      applicationGatewayBackendAddressPools: {
        serializedName: "properties.applicationGatewayBackendAddressPools",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SubResource"
            }
          }
        }
      },
      applicationSecurityGroups: {
        serializedName: "properties.applicationSecurityGroups",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SubResource"
            }
          }
        }
      },
      loadBalancerBackendAddressPools: {
        serializedName: "properties.loadBalancerBackendAddressPools",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SubResource"
            }
          }
        }
      },
      loadBalancerInboundNatPools: {
        serializedName: "properties.loadBalancerInboundNatPools",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SubResource"
            }
          }
        }
      }
    }
  }
};

export const VirtualMachineScaleSetNetworkConfigurationDnsSettings: msRest.CompositeMapper = {
  serializedName: "VirtualMachineScaleSetNetworkConfigurationDnsSettings",
  type: {
    name: "Composite",
    className: "VirtualMachineScaleSetNetworkConfigurationDnsSettings",
    modelProperties: {
      dnsServers: {
        serializedName: "dnsServers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const VirtualMachineScaleSetNetworkConfiguration: msRest.CompositeMapper = {
  serializedName: "VirtualMachineScaleSetNetworkConfiguration",
  type: {
    name: "Composite",
    className: "VirtualMachineScaleSetNetworkConfiguration",
    modelProperties: {
      ...SubResource.type.modelProperties,
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      primary: {
        serializedName: "properties.primary",
        type: {
          name: "Boolean"
        }
      },
      enableAcceleratedNetworking: {
        serializedName: "properties.enableAcceleratedNetworking",
        type: {
          name: "Boolean"
        }
      },
      networkSecurityGroup: {
        serializedName: "properties.networkSecurityGroup",
        type: {
          name: "Composite",
          className: "SubResource"
        }
      },
      dnsSettings: {
        serializedName: "properties.dnsSettings",
        type: {
          name: "Composite",
          className: "VirtualMachineScaleSetNetworkConfigurationDnsSettings"
        }
      },
      ipConfigurations: {
        required: true,
        serializedName: "properties.ipConfigurations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VirtualMachineScaleSetIPConfiguration"
            }
          }
        }
      },
      enableIPForwarding: {
        serializedName: "properties.enableIPForwarding",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const VirtualMachineScaleSetUpdateNetworkConfiguration: msRest.CompositeMapper = {
  serializedName: "VirtualMachineScaleSetUpdateNetworkConfiguration",
  type: {
    name: "Composite",
    className: "VirtualMachineScaleSetUpdateNetworkConfiguration",
    modelProperties: {
      ...SubResource.type.modelProperties,
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      primary: {
        serializedName: "properties.primary",
        type: {
          name: "Boolean"
        }
      },
      enableAcceleratedNetworking: {
        serializedName: "properties.enableAcceleratedNetworking",
        type: {
          name: "Boolean"
        }
      },
      networkSecurityGroup: {
        serializedName: "properties.networkSecurityGroup",
        type: {
          name: "Composite",
          className: "SubResource"
        }
      },
      dnsSettings: {
        serializedName: "properties.dnsSettings",
        type: {
          name: "Composite",
          className: "VirtualMachineScaleSetNetworkConfigurationDnsSettings"
        }
      },
      ipConfigurations: {
        serializedName: "properties.ipConfigurations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VirtualMachineScaleSetUpdateIPConfiguration"
            }
          }
        }
      },
      enableIPForwarding: {
        serializedName: "properties.enableIPForwarding",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const VirtualMachineScaleSetNetworkProfile: msRest.CompositeMapper = {
  serializedName: "VirtualMachineScaleSetNetworkProfile",
  type: {
    name: "Composite",
    className: "VirtualMachineScaleSetNetworkProfile",
    modelProperties: {
      healthProbe: {
        serializedName: "healthProbe",
        type: {
          name: "Composite",
          className: "ApiEntityReference"
        }
      },
      networkInterfaceConfigurations: {
        serializedName: "networkInterfaceConfigurations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VirtualMachineScaleSetNetworkConfiguration"
            }
          }
        }
      }
    }
  }
};

export const VirtualMachineScaleSetUpdateNetworkProfile: msRest.CompositeMapper = {
  serializedName: "VirtualMachineScaleSetUpdateNetworkProfile",
  type: {
    name: "Composite",
    className: "VirtualMachineScaleSetUpdateNetworkProfile",
    modelProperties: {
      healthProbe: {
        serializedName: "healthProbe",
        type: {
          name: "Composite",
          className: "ApiEntityReference"
        }
      },
      networkInterfaceConfigurations: {
        serializedName: "networkInterfaceConfigurations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VirtualMachineScaleSetUpdateNetworkConfiguration"
            }
          }
        }
      }
    }
  }
};

export const VirtualMachineScaleSetExtension: msRest.CompositeMapper = {
  serializedName: "VirtualMachineScaleSetExtension",
  type: {
    name: "Composite",
    className: "VirtualMachineScaleSetExtension",
    modelProperties: {
      ...SubResourceReadOnly.type.modelProperties,
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      forceUpdateTag: {
        serializedName: "properties.forceUpdateTag",
        type: {
          name: "String"
        }
      },
      publisher: {
        serializedName: "properties.publisher",
        type: {
          name: "String"
        }
      },
      type1: {
        serializedName: "properties.type",
        type: {
          name: "String"
        }
      },
      typeHandlerVersion: {
        serializedName: "properties.typeHandlerVersion",
        type: {
          name: "String"
        }
      },
      autoUpgradeMinorVersion: {
        serializedName: "properties.autoUpgradeMinorVersion",
        type: {
          name: "Boolean"
        }
      },
      enableAutomaticUpgrade: {
        serializedName: "properties.enableAutomaticUpgrade",
        type: {
          name: "Boolean"
        }
      },
      settings: {
        serializedName: "properties.settings",
        type: {
          name: "Object"
        }
      },
      protectedSettings: {
        serializedName: "properties.protectedSettings",
        type: {
          name: "Object"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      provisionAfterExtensions: {
        serializedName: "properties.provisionAfterExtensions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const VirtualMachineScaleSetExtensionUpdate: msRest.CompositeMapper = {
  serializedName: "VirtualMachineScaleSetExtensionUpdate",
  type: {
    name: "Composite",
    className: "VirtualMachineScaleSetExtensionUpdate",
    modelProperties: {
      ...SubResourceReadOnly.type.modelProperties,
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      forceUpdateTag: {
        serializedName: "properties.forceUpdateTag",
        type: {
          name: "String"
        }
      },
      publisher: {
        serializedName: "properties.publisher",
        type: {
          name: "String"
        }
      },
      type1: {
        serializedName: "properties.type",
        type: {
          name: "String"
        }
      },
      typeHandlerVersion: {
        serializedName: "properties.typeHandlerVersion",
        type: {
          name: "String"
        }
      },
      autoUpgradeMinorVersion: {
        serializedName: "properties.autoUpgradeMinorVersion",
        type: {
          name: "Boolean"
        }
      },
      enableAutomaticUpgrade: {
        serializedName: "properties.enableAutomaticUpgrade",
        type: {
          name: "Boolean"
        }
      },
      settings: {
        serializedName: "properties.settings",
        type: {
          name: "Object"
        }
      },
      protectedSettings: {
        serializedName: "properties.protectedSettings",
        type: {
          name: "Object"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      provisionAfterExtensions: {
        serializedName: "properties.provisionAfterExtensions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const VirtualMachineScaleSetExtensionProfile: msRest.CompositeMapper = {
  serializedName: "VirtualMachineScaleSetExtensionProfile",
  type: {
    name: "Composite",
    className: "VirtualMachineScaleSetExtensionProfile",
    modelProperties: {
      extensions: {
        serializedName: "extensions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VirtualMachineScaleSetExtension"
            }
          }
        }
      },
      extensionsTimeBudget: {
        serializedName: "extensionsTimeBudget",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TerminateNotificationProfile: msRest.CompositeMapper = {
  serializedName: "TerminateNotificationProfile",
  type: {
    name: "Composite",
    className: "TerminateNotificationProfile",
    modelProperties: {
      notBeforeTimeout: {
        serializedName: "notBeforeTimeout",
        type: {
          name: "String"
        }
      },
      enable: {
        serializedName: "enable",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const ScheduledEventsProfile: msRest.CompositeMapper = {
  serializedName: "ScheduledEventsProfile",
  type: {
    name: "Composite",
    className: "ScheduledEventsProfile",
    modelProperties: {
      terminateNotificationProfile: {
        serializedName: "terminateNotificationProfile",
        type: {
          name: "Composite",
          className: "TerminateNotificationProfile"
        }
      }
    }
  }
};

export const VirtualMachineScaleSetVMProfile: msRest.CompositeMapper = {
  serializedName: "VirtualMachineScaleSetVMProfile",
  type: {
    name: "Composite",
    className: "VirtualMachineScaleSetVMProfile",
    modelProperties: {
      osProfile: {
        serializedName: "osProfile",
        type: {
          name: "Composite",
          className: "VirtualMachineScaleSetOSProfile"
        }
      },
      storageProfile: {
        serializedName: "storageProfile",
        type: {
          name: "Composite",
          className: "VirtualMachineScaleSetStorageProfile"
        }
      },
      networkProfile: {
        serializedName: "networkProfile",
        type: {
          name: "Composite",
          className: "VirtualMachineScaleSetNetworkProfile"
        }
      },
      securityProfile: {
        serializedName: "securityProfile",
        type: {
          name: "Composite",
          className: "SecurityProfile"
        }
      },
      diagnosticsProfile: {
        serializedName: "diagnosticsProfile",
        type: {
          name: "Composite",
          className: "DiagnosticsProfile"
        }
      },
      extensionProfile: {
        serializedName: "extensionProfile",
        type: {
          name: "Composite",
          className: "VirtualMachineScaleSetExtensionProfile"
        }
      },
      licenseType: {
        serializedName: "licenseType",
        type: {
          name: "String"
        }
      },
      priority: {
        serializedName: "priority",
        type: {
          name: "String"
        }
      },
      evictionPolicy: {
        serializedName: "evictionPolicy",
        type: {
          name: "String"
        }
      },
      billingProfile: {
        serializedName: "billingProfile",
        type: {
          name: "Composite",
          className: "BillingProfile"
        }
      },
      scheduledEventsProfile: {
        serializedName: "scheduledEventsProfile",
        type: {
          name: "Composite",
          className: "ScheduledEventsProfile"
        }
      }
    }
  }
};

export const VirtualMachineScaleSetUpdateVMProfile: msRest.CompositeMapper = {
  serializedName: "VirtualMachineScaleSetUpdateVMProfile",
  type: {
    name: "Composite",
    className: "VirtualMachineScaleSetUpdateVMProfile",
    modelProperties: {
      osProfile: {
        serializedName: "osProfile",
        type: {
          name: "Composite",
          className: "VirtualMachineScaleSetUpdateOSProfile"
        }
      },
      storageProfile: {
        serializedName: "storageProfile",
        type: {
          name: "Composite",
          className: "VirtualMachineScaleSetUpdateStorageProfile"
        }
      },
      networkProfile: {
        serializedName: "networkProfile",
        type: {
          name: "Composite",
          className: "VirtualMachineScaleSetUpdateNetworkProfile"
        }
      },
      securityProfile: {
        serializedName: "securityProfile",
        type: {
          name: "Composite",
          className: "SecurityProfile"
        }
      },
      diagnosticsProfile: {
        serializedName: "diagnosticsProfile",
        type: {
          name: "Composite",
          className: "DiagnosticsProfile"
        }
      },
      extensionProfile: {
        serializedName: "extensionProfile",
        type: {
          name: "Composite",
          className: "VirtualMachineScaleSetExtensionProfile"
        }
      },
      licenseType: {
        serializedName: "licenseType",
        type: {
          name: "String"
        }
      },
      billingProfile: {
        serializedName: "billingProfile",
        type: {
          name: "Composite",
          className: "BillingProfile"
        }
      },
      scheduledEventsProfile: {
        serializedName: "scheduledEventsProfile",
        type: {
          name: "Composite",
          className: "ScheduledEventsProfile"
        }
      }
    }
  }
};

export const VirtualMachineScaleSet: msRest.CompositeMapper = {
  serializedName: "VirtualMachineScaleSet",
  type: {
    name: "Composite",
    className: "VirtualMachineScaleSet",
    modelProperties: {
      ...Resource.type.modelProperties,
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "Sku"
        }
      },
      plan: {
        serializedName: "plan",
        type: {
          name: "Composite",
          className: "Plan"
        }
      },
      upgradePolicy: {
        serializedName: "properties.upgradePolicy",
        type: {
          name: "Composite",
          className: "UpgradePolicy"
        }
      },
      automaticRepairsPolicy: {
        serializedName: "properties.automaticRepairsPolicy",
        type: {
          name: "Composite",
          className: "AutomaticRepairsPolicy"
        }
      },
      virtualMachineProfile: {
        serializedName: "properties.virtualMachineProfile",
        type: {
          name: "Composite",
          className: "VirtualMachineScaleSetVMProfile"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      overprovision: {
        serializedName: "properties.overprovision",
        type: {
          name: "Boolean"
        }
      },
      doNotRunExtensionsOnOverprovisionedVMs: {
        serializedName: "properties.doNotRunExtensionsOnOverprovisionedVMs",
        type: {
          name: "Boolean"
        }
      },
      uniqueId: {
        readOnly: true,
        serializedName: "properties.uniqueId",
        type: {
          name: "String"
        }
      },
      singlePlacementGroup: {
        serializedName: "properties.singlePlacementGroup",
        type: {
          name: "Boolean"
        }
      },
      zoneBalance: {
        serializedName: "properties.zoneBalance",
        type: {
          name: "Boolean"
        }
      },
      platformFaultDomainCount: {
        serializedName: "properties.platformFaultDomainCount",
        type: {
          name: "Number"
        }
      },
      proximityPlacementGroup: {
        serializedName: "properties.proximityPlacementGroup",
        type: {
          name: "Composite",
          className: "SubResource"
        }
      },
      hostGroup: {
        serializedName: "properties.hostGroup",
        type: {
          name: "Composite",
          className: "SubResource"
        }
      },
      additionalCapabilities: {
        serializedName: "properties.additionalCapabilities",
        type: {
          name: "Composite",
          className: "AdditionalCapabilities"
        }
      },
      scaleInPolicy: {
        serializedName: "properties.scaleInPolicy",
        type: {
          name: "Composite",
          className: "ScaleInPolicy"
        }
      },
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "VirtualMachineScaleSetIdentity"
        }
      },
      zones: {
        serializedName: "zones",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const VirtualMachineScaleSetVMReimageParameters: msRest.CompositeMapper = {
  serializedName: "VirtualMachineScaleSetVMReimageParameters",
  type: {
    name: "Composite",
    className: "VirtualMachineScaleSetVMReimageParameters",
    modelProperties: {
      ...VirtualMachineReimageParameters.type.modelProperties
    }
  }
};

export const VirtualMachineScaleSetReimageParameters: msRest.CompositeMapper = {
  serializedName: "VirtualMachineScaleSetReimageParameters",
  type: {
    name: "Composite",
    className: "VirtualMachineScaleSetReimageParameters",
    modelProperties: {
      ...VirtualMachineScaleSetVMReimageParameters.type.modelProperties,
      instanceIds: {
        serializedName: "instanceIds",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const VirtualMachineScaleSetUpdate: msRest.CompositeMapper = {
  serializedName: "VirtualMachineScaleSetUpdate",
  type: {
    name: "Composite",
    className: "VirtualMachineScaleSetUpdate",
    modelProperties: {
      ...UpdateResource.type.modelProperties,
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "Sku"
        }
      },
      plan: {
        serializedName: "plan",
        type: {
          name: "Composite",
          className: "Plan"
        }
      },
      upgradePolicy: {
        serializedName: "properties.upgradePolicy",
        type: {
          name: "Composite",
          className: "UpgradePolicy"
        }
      },
      automaticRepairsPolicy: {
        serializedName: "properties.automaticRepairsPolicy",
        type: {
          name: "Composite",
          className: "AutomaticRepairsPolicy"
        }
      },
      virtualMachineProfile: {
        serializedName: "properties.virtualMachineProfile",
        type: {
          name: "Composite",
          className: "VirtualMachineScaleSetUpdateVMProfile"
        }
      },
      overprovision: {
        serializedName: "properties.overprovision",
        type: {
          name: "Boolean"
        }
      },
      doNotRunExtensionsOnOverprovisionedVMs: {
        serializedName: "properties.doNotRunExtensionsOnOverprovisionedVMs",
        type: {
          name: "Boolean"
        }
      },
      singlePlacementGroup: {
        serializedName: "properties.singlePlacementGroup",
        type: {
          name: "Boolean"
        }
      },
      additionalCapabilities: {
        serializedName: "properties.additionalCapabilities",
        type: {
          name: "Composite",
          className: "AdditionalCapabilities"
        }
      },
      scaleInPolicy: {
        serializedName: "properties.scaleInPolicy",
        type: {
          name: "Composite",
          className: "ScaleInPolicy"
        }
      },
      proximityPlacementGroup: {
        serializedName: "properties.proximityPlacementGroup",
        type: {
          name: "Composite",
          className: "SubResource"
        }
      },
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "VirtualMachineScaleSetIdentity"
        }
      }
    }
  }
};

export const VirtualMachineScaleSetVMInstanceIDs: msRest.CompositeMapper = {
  serializedName: "VirtualMachineScaleSetVMInstanceIDs",
  type: {
    name: "Composite",
    className: "VirtualMachineScaleSetVMInstanceIDs",
    modelProperties: {
      instanceIds: {
        serializedName: "instanceIds",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const VirtualMachineScaleSetVMInstanceRequiredIDs: msRest.CompositeMapper = {
  serializedName: "VirtualMachineScaleSetVMInstanceRequiredIDs",
  type: {
    name: "Composite",
    className: "VirtualMachineScaleSetVMInstanceRequiredIDs",
    modelProperties: {
      instanceIds: {
        required: true,
        serializedName: "instanceIds",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const VirtualMachineStatusCodeCount: msRest.CompositeMapper = {
  serializedName: "VirtualMachineStatusCodeCount",
  type: {
    name: "Composite",
    className: "VirtualMachineStatusCodeCount",
    modelProperties: {
      code: {
        readOnly: true,
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      count: {
        readOnly: true,
        serializedName: "count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const VirtualMachineScaleSetInstanceViewStatusesSummary: msRest.CompositeMapper = {
  serializedName: "VirtualMachineScaleSetInstanceViewStatusesSummary",
  type: {
    name: "Composite",
    className: "VirtualMachineScaleSetInstanceViewStatusesSummary",
    modelProperties: {
      statusesSummary: {
        readOnly: true,
        serializedName: "statusesSummary",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VirtualMachineStatusCodeCount"
            }
          }
        }
      }
    }
  }
};

export const VirtualMachineScaleSetVMExtensionsSummary: msRest.CompositeMapper = {
  serializedName: "VirtualMachineScaleSetVMExtensionsSummary",
  type: {
    name: "Composite",
    className: "VirtualMachineScaleSetVMExtensionsSummary",
    modelProperties: {
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      statusesSummary: {
        readOnly: true,
        serializedName: "statusesSummary",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VirtualMachineStatusCodeCount"
            }
          }
        }
      }
    }
  }
};

export const OrchestrationServiceSummary: msRest.CompositeMapper = {
  serializedName: "OrchestrationServiceSummary",
  type: {
    name: "Composite",
    className: "OrchestrationServiceSummary",
    modelProperties: {
      serviceName: {
        readOnly: true,
        serializedName: "serviceName",
        type: {
          name: "String"
        }
      },
      serviceState: {
        readOnly: true,
        serializedName: "serviceState",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VirtualMachineScaleSetInstanceView: msRest.CompositeMapper = {
  serializedName: "VirtualMachineScaleSetInstanceView",
  type: {
    name: "Composite",
    className: "VirtualMachineScaleSetInstanceView",
    modelProperties: {
      virtualMachine: {
        readOnly: true,
        serializedName: "virtualMachine",
        type: {
          name: "Composite",
          className: "VirtualMachineScaleSetInstanceViewStatusesSummary"
        }
      },
      extensions: {
        readOnly: true,
        serializedName: "extensions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VirtualMachineScaleSetVMExtensionsSummary"
            }
          }
        }
      },
      statuses: {
        serializedName: "statuses",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "InstanceViewStatus"
            }
          }
        }
      },
      orchestrationServices: {
        readOnly: true,
        serializedName: "orchestrationServices",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "OrchestrationServiceSummary"
            }
          }
        }
      }
    }
  }
};

export const VirtualMachineScaleSetSkuCapacity: msRest.CompositeMapper = {
  serializedName: "VirtualMachineScaleSetSkuCapacity",
  type: {
    name: "Composite",
    className: "VirtualMachineScaleSetSkuCapacity",
    modelProperties: {
      minimum: {
        readOnly: true,
        serializedName: "minimum",
        type: {
          name: "Number"
        }
      },
      maximum: {
        readOnly: true,
        serializedName: "maximum",
        type: {
          name: "Number"
        }
      },
      defaultCapacity: {
        readOnly: true,
        serializedName: "defaultCapacity",
        type: {
          name: "Number"
        }
      },
      scaleType: {
        readOnly: true,
        serializedName: "scaleType",
        type: {
          name: "Enum",
          allowedValues: [
            "Automatic",
            "None"
          ]
        }
      }
    }
  }
};

export const VirtualMachineScaleSetSku: msRest.CompositeMapper = {
  serializedName: "VirtualMachineScaleSetSku",
  type: {
    name: "Composite",
    className: "VirtualMachineScaleSetSku",
    modelProperties: {
      resourceType: {
        readOnly: true,
        serializedName: "resourceType",
        type: {
          name: "String"
        }
      },
      sku: {
        readOnly: true,
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "Sku"
        }
      },
      capacity: {
        readOnly: true,
        serializedName: "capacity",
        type: {
          name: "Composite",
          className: "VirtualMachineScaleSetSkuCapacity"
        }
      }
    }
  }
};

export const RollbackStatusInfo: msRest.CompositeMapper = {
  serializedName: "RollbackStatusInfo",
  type: {
    name: "Composite",
    className: "RollbackStatusInfo",
    modelProperties: {
      successfullyRolledbackInstanceCount: {
        readOnly: true,
        serializedName: "successfullyRolledbackInstanceCount",
        type: {
          name: "Number"
        }
      },
      failedRolledbackInstanceCount: {
        readOnly: true,
        serializedName: "failedRolledbackInstanceCount",
        type: {
          name: "Number"
        }
      },
      rollbackError: {
        readOnly: true,
        serializedName: "rollbackError",
        type: {
          name: "Composite",
          className: "ApiError"
        }
      }
    }
  }
};

export const UpgradeOperationHistoryStatus: msRest.CompositeMapper = {
  serializedName: "UpgradeOperationHistoryStatus",
  type: {
    name: "Composite",
    className: "UpgradeOperationHistoryStatus",
    modelProperties: {
      code: {
        readOnly: true,
        serializedName: "code",
        type: {
          name: "Enum",
          allowedValues: [
            "RollingForward",
            "Cancelled",
            "Completed",
            "Faulted"
          ]
        }
      },
      startTime: {
        readOnly: true,
        serializedName: "startTime",
        type: {
          name: "DateTime"
        }
      },
      endTime: {
        readOnly: true,
        serializedName: "endTime",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const RollingUpgradeProgressInfo: msRest.CompositeMapper = {
  serializedName: "RollingUpgradeProgressInfo",
  type: {
    name: "Composite",
    className: "RollingUpgradeProgressInfo",
    modelProperties: {
      successfulInstanceCount: {
        readOnly: true,
        serializedName: "successfulInstanceCount",
        type: {
          name: "Number"
        }
      },
      failedInstanceCount: {
        readOnly: true,
        serializedName: "failedInstanceCount",
        type: {
          name: "Number"
        }
      },
      inProgressInstanceCount: {
        readOnly: true,
        serializedName: "inProgressInstanceCount",
        type: {
          name: "Number"
        }
      },
      pendingInstanceCount: {
        readOnly: true,
        serializedName: "pendingInstanceCount",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const UpgradeOperationHistoricalStatusInfoProperties: msRest.CompositeMapper = {
  serializedName: "UpgradeOperationHistoricalStatusInfoProperties",
  type: {
    name: "Composite",
    className: "UpgradeOperationHistoricalStatusInfoProperties",
    modelProperties: {
      runningStatus: {
        readOnly: true,
        serializedName: "runningStatus",
        type: {
          name: "Composite",
          className: "UpgradeOperationHistoryStatus"
        }
      },
      progress: {
        readOnly: true,
        serializedName: "progress",
        type: {
          name: "Composite",
          className: "RollingUpgradeProgressInfo"
        }
      },
      error: {
        readOnly: true,
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ApiError"
        }
      },
      startedBy: {
        readOnly: true,
        serializedName: "startedBy",
        type: {
          name: "Enum",
          allowedValues: [
            "Unknown",
            "User",
            "Platform"
          ]
        }
      },
      targetImageReference: {
        readOnly: true,
        serializedName: "targetImageReference",
        type: {
          name: "Composite",
          className: "ImageReference"
        }
      },
      rollbackInfo: {
        readOnly: true,
        serializedName: "rollbackInfo",
        type: {
          name: "Composite",
          className: "RollbackStatusInfo"
        }
      }
    }
  }
};

export const UpgradeOperationHistoricalStatusInfo: msRest.CompositeMapper = {
  serializedName: "UpgradeOperationHistoricalStatusInfo",
  type: {
    name: "Composite",
    className: "UpgradeOperationHistoricalStatusInfo",
    modelProperties: {
      properties: {
        readOnly: true,
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "UpgradeOperationHistoricalStatusInfoProperties"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      location: {
        readOnly: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VirtualMachineScaleSetVMInstanceView: msRest.CompositeMapper = {
  serializedName: "VirtualMachineScaleSetVMInstanceView",
  type: {
    name: "Composite",
    className: "VirtualMachineScaleSetVMInstanceView",
    modelProperties: {
      platformUpdateDomain: {
        serializedName: "platformUpdateDomain",
        type: {
          name: "Number"
        }
      },
      platformFaultDomain: {
        serializedName: "platformFaultDomain",
        type: {
          name: "Number"
        }
      },
      rdpThumbPrint: {
        serializedName: "rdpThumbPrint",
        type: {
          name: "String"
        }
      },
      vmAgent: {
        serializedName: "vmAgent",
        type: {
          name: "Composite",
          className: "VirtualMachineAgentInstanceView"
        }
      },
      maintenanceRedeployStatus: {
        serializedName: "maintenanceRedeployStatus",
        type: {
          name: "Composite",
          className: "MaintenanceRedeployStatus"
        }
      },
      disks: {
        serializedName: "disks",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DiskInstanceView"
            }
          }
        }
      },
      extensions: {
        serializedName: "extensions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VirtualMachineExtensionInstanceView"
            }
          }
        }
      },
      vmHealth: {
        readOnly: true,
        serializedName: "vmHealth",
        type: {
          name: "Composite",
          className: "VirtualMachineHealthStatus"
        }
      },
      bootDiagnostics: {
        serializedName: "bootDiagnostics",
        type: {
          name: "Composite",
          className: "BootDiagnosticsInstanceView"
        }
      },
      statuses: {
        serializedName: "statuses",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "InstanceViewStatus"
            }
          }
        }
      },
      assignedHost: {
        readOnly: true,
        serializedName: "assignedHost",
        type: {
          name: "String"
        }
      },
      placementGroupId: {
        serializedName: "placementGroupId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VirtualMachineScaleSetVMNetworkProfileConfiguration: msRest.CompositeMapper = {
  serializedName: "VirtualMachineScaleSetVMNetworkProfileConfiguration",
  type: {
    name: "Composite",
    className: "VirtualMachineScaleSetVMNetworkProfileConfiguration",
    modelProperties: {
      networkInterfaceConfigurations: {
        serializedName: "networkInterfaceConfigurations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VirtualMachineScaleSetNetworkConfiguration"
            }
          }
        }
      }
    }
  }
};

export const VirtualMachineScaleSetVMProtectionPolicy: msRest.CompositeMapper = {
  serializedName: "VirtualMachineScaleSetVMProtectionPolicy",
  type: {
    name: "Composite",
    className: "VirtualMachineScaleSetVMProtectionPolicy",
    modelProperties: {
      protectFromScaleIn: {
        serializedName: "protectFromScaleIn",
        type: {
          name: "Boolean"
        }
      },
      protectFromScaleSetActions: {
        serializedName: "protectFromScaleSetActions",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const VirtualMachineScaleSetVM: msRest.CompositeMapper = {
  serializedName: "VirtualMachineScaleSetVM",
  type: {
    name: "Composite",
    className: "VirtualMachineScaleSetVM",
    modelProperties: {
      ...Resource.type.modelProperties,
      instanceId: {
        readOnly: true,
        serializedName: "instanceId",
        type: {
          name: "String"
        }
      },
      sku: {
        readOnly: true,
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "Sku"
        }
      },
      latestModelApplied: {
        readOnly: true,
        serializedName: "properties.latestModelApplied",
        type: {
          name: "Boolean"
        }
      },
      vmId: {
        readOnly: true,
        serializedName: "properties.vmId",
        type: {
          name: "String"
        }
      },
      instanceView: {
        readOnly: true,
        serializedName: "properties.instanceView",
        type: {
          name: "Composite",
          className: "VirtualMachineScaleSetVMInstanceView"
        }
      },
      hardwareProfile: {
        serializedName: "properties.hardwareProfile",
        type: {
          name: "Composite",
          className: "HardwareProfile"
        }
      },
      storageProfile: {
        serializedName: "properties.storageProfile",
        type: {
          name: "Composite",
          className: "StorageProfile"
        }
      },
      additionalCapabilities: {
        serializedName: "properties.additionalCapabilities",
        type: {
          name: "Composite",
          className: "AdditionalCapabilities"
        }
      },
      osProfile: {
        serializedName: "properties.osProfile",
        type: {
          name: "Composite",
          className: "OSProfile"
        }
      },
      securityProfile: {
        serializedName: "properties.securityProfile",
        type: {
          name: "Composite",
          className: "SecurityProfile"
        }
      },
      networkProfile: {
        serializedName: "properties.networkProfile",
        type: {
          name: "Composite",
          className: "NetworkProfile"
        }
      },
      networkProfileConfiguration: {
        serializedName: "properties.networkProfileConfiguration",
        type: {
          name: "Composite",
          className: "VirtualMachineScaleSetVMNetworkProfileConfiguration"
        }
      },
      diagnosticsProfile: {
        serializedName: "properties.diagnosticsProfile",
        type: {
          name: "Composite",
          className: "DiagnosticsProfile"
        }
      },
      availabilitySet: {
        serializedName: "properties.availabilitySet",
        type: {
          name: "Composite",
          className: "SubResource"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      licenseType: {
        serializedName: "properties.licenseType",
        type: {
          name: "String"
        }
      },
      modelDefinitionApplied: {
        readOnly: true,
        serializedName: "properties.modelDefinitionApplied",
        type: {
          name: "String"
        }
      },
      protectionPolicy: {
        serializedName: "properties.protectionPolicy",
        type: {
          name: "Composite",
          className: "VirtualMachineScaleSetVMProtectionPolicy"
        }
      },
      plan: {
        serializedName: "plan",
        type: {
          name: "Composite",
          className: "Plan"
        }
      },
      resources: {
        readOnly: true,
        serializedName: "resources",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VirtualMachineExtension"
            }
          }
        }
      },
      zones: {
        readOnly: true,
        serializedName: "zones",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const RollingUpgradeRunningStatus: msRest.CompositeMapper = {
  serializedName: "RollingUpgradeRunningStatus",
  type: {
    name: "Composite",
    className: "RollingUpgradeRunningStatus",
    modelProperties: {
      code: {
        readOnly: true,
        serializedName: "code",
        type: {
          name: "Enum",
          allowedValues: [
            "RollingForward",
            "Cancelled",
            "Completed",
            "Faulted"
          ]
        }
      },
      startTime: {
        readOnly: true,
        serializedName: "startTime",
        type: {
          name: "DateTime"
        }
      },
      lastAction: {
        readOnly: true,
        serializedName: "lastAction",
        type: {
          name: "Enum",
          allowedValues: [
            "Start",
            "Cancel"
          ]
        }
      },
      lastActionTime: {
        readOnly: true,
        serializedName: "lastActionTime",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const RollingUpgradeStatusInfo: msRest.CompositeMapper = {
  serializedName: "RollingUpgradeStatusInfo",
  type: {
    name: "Composite",
    className: "RollingUpgradeStatusInfo",
    modelProperties: {
      ...Resource.type.modelProperties,
      policy: {
        readOnly: true,
        serializedName: "properties.policy",
        type: {
          name: "Composite",
          className: "RollingUpgradePolicy"
        }
      },
      runningStatus: {
        readOnly: true,
        serializedName: "properties.runningStatus",
        type: {
          name: "Composite",
          className: "RollingUpgradeRunningStatus"
        }
      },
      progress: {
        readOnly: true,
        serializedName: "properties.progress",
        type: {
          name: "Composite",
          className: "RollingUpgradeProgressInfo"
        }
      },
      error: {
        readOnly: true,
        serializedName: "properties.error",
        type: {
          name: "Composite",
          className: "ApiError"
        }
      }
    }
  }
};

export const RecoveryWalkResponse: msRest.CompositeMapper = {
  serializedName: "RecoveryWalkResponse",
  type: {
    name: "Composite",
    className: "RecoveryWalkResponse",
    modelProperties: {
      walkPerformed: {
        readOnly: true,
        serializedName: "walkPerformed",
        type: {
          name: "Boolean"
        }
      },
      nextPlatformUpdateDomain: {
        readOnly: true,
        serializedName: "nextPlatformUpdateDomain",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const LogAnalyticsInputBase: msRest.CompositeMapper = {
  serializedName: "LogAnalyticsInputBase",
  type: {
    name: "Composite",
    className: "LogAnalyticsInputBase",
    modelProperties: {
      blobContainerSasUri: {
        required: true,
        serializedName: "blobContainerSasUri",
        type: {
          name: "String"
        }
      },
      fromTime: {
        required: true,
        serializedName: "fromTime",
        type: {
          name: "DateTime"
        }
      },
      toTime: {
        required: true,
        serializedName: "toTime",
        type: {
          name: "DateTime"
        }
      },
      groupByThrottlePolicy: {
        serializedName: "groupByThrottlePolicy",
        type: {
          name: "Boolean"
        }
      },
      groupByOperationName: {
        serializedName: "groupByOperationName",
        type: {
          name: "Boolean"
        }
      },
      groupByResourceName: {
        serializedName: "groupByResourceName",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const RequestRateByIntervalInput: msRest.CompositeMapper = {
  serializedName: "RequestRateByIntervalInput",
  type: {
    name: "Composite",
    className: "RequestRateByIntervalInput",
    modelProperties: {
      ...LogAnalyticsInputBase.type.modelProperties,
      intervalLength: {
        required: true,
        serializedName: "intervalLength",
        type: {
          name: "Enum",
          allowedValues: [
            "ThreeMins",
            "FiveMins",
            "ThirtyMins",
            "SixtyMins"
          ]
        }
      }
    }
  }
};

export const ThrottledRequestsInput: msRest.CompositeMapper = {
  serializedName: "ThrottledRequestsInput",
  type: {
    name: "Composite",
    className: "ThrottledRequestsInput",
    modelProperties: {
      ...LogAnalyticsInputBase.type.modelProperties
    }
  }
};

export const LogAnalyticsOutput: msRest.CompositeMapper = {
  serializedName: "LogAnalyticsOutput",
  type: {
    name: "Composite",
    className: "LogAnalyticsOutput",
    modelProperties: {
      output: {
        readOnly: true,
        serializedName: "output",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LogAnalyticsOperationResult: msRest.CompositeMapper = {
  serializedName: "LogAnalyticsOperationResult",
  type: {
    name: "Composite",
    className: "LogAnalyticsOperationResult",
    modelProperties: {
      properties: {
        readOnly: true,
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "LogAnalyticsOutput"
        }
      }
    }
  }
};

export const VMScaleSetConvertToSinglePlacementGroupInput: msRest.CompositeMapper = {
  serializedName: "VMScaleSetConvertToSinglePlacementGroupInput",
  type: {
    name: "Composite",
    className: "VMScaleSetConvertToSinglePlacementGroupInput",
    modelProperties: {
      activePlacementGroupId: {
        serializedName: "activePlacementGroupId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OrchestrationServiceStateInput: msRest.CompositeMapper = {
  serializedName: "OrchestrationServiceStateInput",
  type: {
    name: "Composite",
    className: "OrchestrationServiceStateInput",
    modelProperties: {
      serviceName: {
        required: true,
        serializedName: "serviceName",
        type: {
          name: "String"
        }
      },
      action: {
        required: true,
        serializedName: "action",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DiskSku: msRest.CompositeMapper = {
  serializedName: "DiskSku",
  type: {
    name: "Composite",
    className: "DiskSku",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      tier: {
        readOnly: true,
        serializedName: "tier",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ImageDiskReference: msRest.CompositeMapper = {
  serializedName: "ImageDiskReference",
  type: {
    name: "Composite",
    className: "ImageDiskReference",
    modelProperties: {
      id: {
        required: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      lun: {
        serializedName: "lun",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const CreationData: msRest.CompositeMapper = {
  serializedName: "CreationData",
  type: {
    name: "Composite",
    className: "CreationData",
    modelProperties: {
      createOption: {
        required: true,
        serializedName: "createOption",
        type: {
          name: "String"
        }
      },
      storageAccountId: {
        serializedName: "storageAccountId",
        type: {
          name: "String"
        }
      },
      imageReference: {
        serializedName: "imageReference",
        type: {
          name: "Composite",
          className: "ImageDiskReference"
        }
      },
      sourceUri: {
        serializedName: "sourceUri",
        type: {
          name: "String"
        }
      },
      sourceResourceId: {
        serializedName: "sourceResourceId",
        type: {
          name: "String"
        }
      },
      sourceUniqueId: {
        readOnly: true,
        serializedName: "sourceUniqueId",
        type: {
          name: "String"
        }
      },
      uploadSizeBytes: {
        serializedName: "uploadSizeBytes",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const SourceVault: msRest.CompositeMapper = {
  serializedName: "SourceVault",
  type: {
    name: "Composite",
    className: "SourceVault",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const KeyVaultAndSecretReference: msRest.CompositeMapper = {
  serializedName: "KeyVaultAndSecretReference",
  type: {
    name: "Composite",
    className: "KeyVaultAndSecretReference",
    modelProperties: {
      sourceVault: {
        required: true,
        serializedName: "sourceVault",
        type: {
          name: "Composite",
          className: "SourceVault"
        }
      },
      secretUrl: {
        required: true,
        serializedName: "secretUrl",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const KeyVaultAndKeyReference: msRest.CompositeMapper = {
  serializedName: "KeyVaultAndKeyReference",
  type: {
    name: "Composite",
    className: "KeyVaultAndKeyReference",
    modelProperties: {
      sourceVault: {
        required: true,
        serializedName: "sourceVault",
        type: {
          name: "Composite",
          className: "SourceVault"
        }
      },
      keyUrl: {
        required: true,
        serializedName: "keyUrl",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EncryptionSettingsElement: msRest.CompositeMapper = {
  serializedName: "EncryptionSettingsElement",
  type: {
    name: "Composite",
    className: "EncryptionSettingsElement",
    modelProperties: {
      diskEncryptionKey: {
        serializedName: "diskEncryptionKey",
        type: {
          name: "Composite",
          className: "KeyVaultAndSecretReference"
        }
      },
      keyEncryptionKey: {
        serializedName: "keyEncryptionKey",
        type: {
          name: "Composite",
          className: "KeyVaultAndKeyReference"
        }
      }
    }
  }
};

export const EncryptionSettingsCollection: msRest.CompositeMapper = {
  serializedName: "EncryptionSettingsCollection",
  type: {
    name: "Composite",
    className: "EncryptionSettingsCollection",
    modelProperties: {
      enabled: {
        required: true,
        serializedName: "enabled",
        type: {
          name: "Boolean"
        }
      },
      encryptionSettings: {
        serializedName: "encryptionSettings",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EncryptionSettingsElement"
            }
          }
        }
      },
      encryptionSettingsVersion: {
        serializedName: "encryptionSettingsVersion",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Encryption: msRest.CompositeMapper = {
  serializedName: "Encryption",
  type: {
    name: "Composite",
    className: "Encryption",
    modelProperties: {
      diskEncryptionSetId: {
        serializedName: "diskEncryptionSetId",
        type: {
          name: "String"
        }
      },
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Disk: msRest.CompositeMapper = {
  serializedName: "Disk",
  type: {
    name: "Composite",
    className: "Disk",
    modelProperties: {
      ...Resource.type.modelProperties,
      managedBy: {
        readOnly: true,
        serializedName: "managedBy",
        type: {
          name: "String"
        }
      },
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "DiskSku"
        }
      },
      zones: {
        serializedName: "zones",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      timeCreated: {
        readOnly: true,
        serializedName: "properties.timeCreated",
        type: {
          name: "DateTime"
        }
      },
      osType: {
        serializedName: "properties.osType",
        type: {
          name: "Enum",
          allowedValues: [
            "Windows",
            "Linux"
          ]
        }
      },
      hyperVGeneration: {
        serializedName: "properties.hyperVGeneration",
        type: {
          name: "String"
        }
      },
      creationData: {
        required: true,
        serializedName: "properties.creationData",
        type: {
          name: "Composite",
          className: "CreationData"
        }
      },
      diskSizeGB: {
        serializedName: "properties.diskSizeGB",
        type: {
          name: "Number"
        }
      },
      diskSizeBytes: {
        readOnly: true,
        serializedName: "properties.diskSizeBytes",
        type: {
          name: "Number"
        }
      },
      uniqueId: {
        readOnly: true,
        serializedName: "properties.uniqueId",
        type: {
          name: "String"
        }
      },
      encryptionSettingsCollection: {
        serializedName: "properties.encryptionSettingsCollection",
        type: {
          name: "Composite",
          className: "EncryptionSettingsCollection"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      diskIOPSReadWrite: {
        serializedName: "properties.diskIOPSReadWrite",
        type: {
          name: "Number"
        }
      },
      diskMBpsReadWrite: {
        serializedName: "properties.diskMBpsReadWrite",
        type: {
          name: "Number"
        }
      },
      diskState: {
        readOnly: true,
        serializedName: "properties.diskState",
        type: {
          name: "String"
        }
      },
      encryption: {
        serializedName: "properties.encryption",
        type: {
          name: "Composite",
          className: "Encryption"
        }
      }
    }
  }
};

export const DiskUpdate: msRest.CompositeMapper = {
  serializedName: "DiskUpdate",
  type: {
    name: "Composite",
    className: "DiskUpdate",
    modelProperties: {
      osType: {
        serializedName: "properties.osType",
        type: {
          name: "Enum",
          allowedValues: [
            "Windows",
            "Linux"
          ]
        }
      },
      diskSizeGB: {
        serializedName: "properties.diskSizeGB",
        type: {
          name: "Number"
        }
      },
      encryptionSettingsCollection: {
        serializedName: "properties.encryptionSettingsCollection",
        type: {
          name: "Composite",
          className: "EncryptionSettingsCollection"
        }
      },
      diskIOPSReadWrite: {
        serializedName: "properties.diskIOPSReadWrite",
        type: {
          name: "Number"
        }
      },
      diskMBpsReadWrite: {
        serializedName: "properties.diskMBpsReadWrite",
        type: {
          name: "Number"
        }
      },
      encryption: {
        serializedName: "properties.encryption",
        type: {
          name: "Composite",
          className: "Encryption"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "DiskSku"
        }
      }
    }
  }
};

export const SnapshotSku: msRest.CompositeMapper = {
  serializedName: "SnapshotSku",
  type: {
    name: "Composite",
    className: "SnapshotSku",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      tier: {
        readOnly: true,
        serializedName: "tier",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GrantAccessData: msRest.CompositeMapper = {
  serializedName: "GrantAccessData",
  type: {
    name: "Composite",
    className: "GrantAccessData",
    modelProperties: {
      access: {
        required: true,
        serializedName: "access",
        type: {
          name: "String"
        }
      },
      durationInSeconds: {
        required: true,
        serializedName: "durationInSeconds",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const AccessUri: msRest.CompositeMapper = {
  serializedName: "AccessUri",
  type: {
    name: "Composite",
    className: "AccessUri",
    modelProperties: {
      accessSAS: {
        readOnly: true,
        serializedName: "accessSAS",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Snapshot: msRest.CompositeMapper = {
  serializedName: "Snapshot",
  type: {
    name: "Composite",
    className: "Snapshot",
    modelProperties: {
      ...Resource.type.modelProperties,
      managedBy: {
        readOnly: true,
        serializedName: "managedBy",
        type: {
          name: "String"
        }
      },
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "SnapshotSku"
        }
      },
      timeCreated: {
        readOnly: true,
        serializedName: "properties.timeCreated",
        type: {
          name: "DateTime"
        }
      },
      osType: {
        serializedName: "properties.osType",
        type: {
          name: "Enum",
          allowedValues: [
            "Windows",
            "Linux"
          ]
        }
      },
      hyperVGeneration: {
        serializedName: "properties.hyperVGeneration",
        type: {
          name: "String"
        }
      },
      creationData: {
        required: true,
        serializedName: "properties.creationData",
        type: {
          name: "Composite",
          className: "CreationData"
        }
      },
      diskSizeGB: {
        serializedName: "properties.diskSizeGB",
        type: {
          name: "Number"
        }
      },
      diskSizeBytes: {
        readOnly: true,
        serializedName: "properties.diskSizeBytes",
        type: {
          name: "Number"
        }
      },
      uniqueId: {
        readOnly: true,
        serializedName: "properties.uniqueId",
        type: {
          name: "String"
        }
      },
      encryptionSettingsCollection: {
        serializedName: "properties.encryptionSettingsCollection",
        type: {
          name: "Composite",
          className: "EncryptionSettingsCollection"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      incremental: {
        serializedName: "properties.incremental",
        type: {
          name: "Boolean"
        }
      },
      encryption: {
        serializedName: "properties.encryption",
        type: {
          name: "Composite",
          className: "Encryption"
        }
      }
    }
  }
};

export const SnapshotUpdate: msRest.CompositeMapper = {
  serializedName: "SnapshotUpdate",
  type: {
    name: "Composite",
    className: "SnapshotUpdate",
    modelProperties: {
      osType: {
        serializedName: "properties.osType",
        type: {
          name: "Enum",
          allowedValues: [
            "Windows",
            "Linux"
          ]
        }
      },
      diskSizeGB: {
        serializedName: "properties.diskSizeGB",
        type: {
          name: "Number"
        }
      },
      encryptionSettingsCollection: {
        serializedName: "properties.encryptionSettingsCollection",
        type: {
          name: "Composite",
          className: "EncryptionSettingsCollection"
        }
      },
      encryption: {
        serializedName: "properties.encryption",
        type: {
          name: "Composite",
          className: "Encryption"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "SnapshotSku"
        }
      }
    }
  }
};

export const EncryptionSetIdentity: msRest.CompositeMapper = {
  serializedName: "EncryptionSetIdentity",
  type: {
    name: "Composite",
    className: "EncryptionSetIdentity",
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      principalId: {
        readOnly: true,
        serializedName: "principalId",
        type: {
          name: "String"
        }
      },
      tenantId: {
        readOnly: true,
        serializedName: "tenantId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DiskEncryptionSet: msRest.CompositeMapper = {
  serializedName: "DiskEncryptionSet",
  type: {
    name: "Composite",
    className: "DiskEncryptionSet",
    modelProperties: {
      ...Resource.type.modelProperties,
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "EncryptionSetIdentity"
        }
      },
      activeKey: {
        serializedName: "properties.activeKey",
        type: {
          name: "Composite",
          className: "KeyVaultAndKeyReference"
        }
      },
      previousKeys: {
        readOnly: true,
        serializedName: "properties.previousKeys",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "KeyVaultAndKeyReference"
            }
          }
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DiskEncryptionSetUpdate: msRest.CompositeMapper = {
  serializedName: "DiskEncryptionSetUpdate",
  type: {
    name: "Composite",
    className: "DiskEncryptionSetUpdate",
    modelProperties: {
      activeKey: {
        serializedName: "properties.activeKey",
        type: {
          name: "Composite",
          className: "KeyVaultAndKeyReference"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ComputeOperationListResult: msRest.CompositeMapper = {
  serializedName: "ComputeOperationListResult",
  type: {
    name: "Composite",
    className: "ComputeOperationListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ComputeOperationValue"
            }
          }
        }
      }
    }
  }
};

export const AvailabilitySetListResult: msRest.CompositeMapper = {
  serializedName: "AvailabilitySetListResult",
  type: {
    name: "Composite",
    className: "AvailabilitySetListResult",
    modelProperties: {
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AvailabilitySet"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VirtualMachineSizeListResult: msRest.CompositeMapper = {
  serializedName: "VirtualMachineSizeListResult",
  type: {
    name: "Composite",
    className: "VirtualMachineSizeListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VirtualMachineSize"
            }
          }
        }
      }
    }
  }
};

export const ProximityPlacementGroupListResult: msRest.CompositeMapper = {
  serializedName: "ProximityPlacementGroupListResult",
  type: {
    name: "Composite",
    className: "ProximityPlacementGroupListResult",
    modelProperties: {
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ProximityPlacementGroup"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DedicatedHostGroupListResult: msRest.CompositeMapper = {
  serializedName: "DedicatedHostGroupListResult",
  type: {
    name: "Composite",
    className: "DedicatedHostGroupListResult",
    modelProperties: {
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DedicatedHostGroup"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DedicatedHostListResult: msRest.CompositeMapper = {
  serializedName: "DedicatedHostListResult",
  type: {
    name: "Composite",
    className: "DedicatedHostListResult",
    modelProperties: {
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DedicatedHost"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SshPublicKeysGroupListResult: msRest.CompositeMapper = {
  serializedName: "SshPublicKeysGroupListResult",
  type: {
    name: "Composite",
    className: "SshPublicKeysGroupListResult",
    modelProperties: {
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SshPublicKeyResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ListUsagesResult: msRest.CompositeMapper = {
  serializedName: "ListUsagesResult",
  type: {
    name: "Composite",
    className: "ListUsagesResult",
    modelProperties: {
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Usage"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VirtualMachineListResult: msRest.CompositeMapper = {
  serializedName: "VirtualMachineListResult",
  type: {
    name: "Composite",
    className: "VirtualMachineListResult",
    modelProperties: {
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VirtualMachine"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ImageListResult: msRest.CompositeMapper = {
  serializedName: "ImageListResult",
  type: {
    name: "Composite",
    className: "ImageListResult",
    modelProperties: {
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Image"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VirtualMachineScaleSetListResult: msRest.CompositeMapper = {
  serializedName: "VirtualMachineScaleSetListResult",
  type: {
    name: "Composite",
    className: "VirtualMachineScaleSetListResult",
    modelProperties: {
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VirtualMachineScaleSet"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VirtualMachineScaleSetListWithLinkResult: msRest.CompositeMapper = {
  serializedName: "VirtualMachineScaleSetListWithLinkResult",
  type: {
    name: "Composite",
    className: "VirtualMachineScaleSetListWithLinkResult",
    modelProperties: {
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VirtualMachineScaleSet"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VirtualMachineScaleSetListSkusResult: msRest.CompositeMapper = {
  serializedName: "VirtualMachineScaleSetListSkusResult",
  type: {
    name: "Composite",
    className: "VirtualMachineScaleSetListSkusResult",
    modelProperties: {
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VirtualMachineScaleSetSku"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VirtualMachineScaleSetListOSUpgradeHistory: msRest.CompositeMapper = {
  serializedName: "VirtualMachineScaleSetListOSUpgradeHistory",
  type: {
    name: "Composite",
    className: "VirtualMachineScaleSetListOSUpgradeHistory",
    modelProperties: {
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "UpgradeOperationHistoricalStatusInfo"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VirtualMachineScaleSetExtensionListResult: msRest.CompositeMapper = {
  serializedName: "VirtualMachineScaleSetExtensionListResult",
  type: {
    name: "Composite",
    className: "VirtualMachineScaleSetExtensionListResult",
    modelProperties: {
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VirtualMachineScaleSetExtension"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VirtualMachineScaleSetVMListResult: msRest.CompositeMapper = {
  serializedName: "VirtualMachineScaleSetVMListResult",
  type: {
    name: "Composite",
    className: "VirtualMachineScaleSetVMListResult",
    modelProperties: {
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VirtualMachineScaleSetVM"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DiskList: msRest.CompositeMapper = {
  serializedName: "DiskList",
  type: {
    name: "Composite",
    className: "DiskList",
    modelProperties: {
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Disk"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SnapshotList: msRest.CompositeMapper = {
  serializedName: "SnapshotList",
  type: {
    name: "Composite",
    className: "SnapshotList",
    modelProperties: {
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Snapshot"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DiskEncryptionSetList: msRest.CompositeMapper = {
  serializedName: "DiskEncryptionSetList",
  type: {
    name: "Composite",
    className: "DiskEncryptionSetList",
    modelProperties: {
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DiskEncryptionSet"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};
