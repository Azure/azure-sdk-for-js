/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import type {
  OperationParameter,
  OperationURLParameter,
  OperationQueryParameter,
} from "@azure/core-client";
import {
  AvailabilitySet as AvailabilitySetMapper,
  AvailabilitySetUpdate as AvailabilitySetUpdateMapper,
  ConvertToVirtualMachineScaleSetInput as ConvertToVirtualMachineScaleSetInputMapper,
  MigrateToVirtualMachineScaleSetInput as MigrateToVirtualMachineScaleSetInputMapper,
  CapacityReservationGroup as CapacityReservationGroupMapper,
  CapacityReservationGroupUpdate as CapacityReservationGroupUpdateMapper,
  DedicatedHostGroup as DedicatedHostGroupMapper,
  DedicatedHostGroupUpdate as DedicatedHostGroupUpdateMapper,
  Image as ImageMapper,
  ImageUpdate as ImageUpdateMapper,
  RequestRateByIntervalInput as RequestRateByIntervalInputMapper,
  ThrottledRequestsInput as ThrottledRequestsInputMapper,
  VirtualMachineRunCommand as VirtualMachineRunCommandMapper,
  VirtualMachineRunCommandUpdate as VirtualMachineRunCommandUpdateMapper,
  VirtualMachineScaleSet as VirtualMachineScaleSetMapper,
  VirtualMachineScaleSetUpdate as VirtualMachineScaleSetUpdateMapper,
  VirtualMachineScaleSetVMInstanceIDs as VirtualMachineScaleSetVMInstanceIDsMapper,
  VMScaleSetConvertToSinglePlacementGroupInput as VMScaleSetConvertToSinglePlacementGroupInputMapper,
  VirtualMachineScaleSetVMInstanceRequiredIDs as VirtualMachineScaleSetVMInstanceRequiredIDsMapper,
  VirtualMachineScaleSetReimageParameters as VirtualMachineScaleSetReimageParametersMapper,
  VMScaleSetScaleOutInput as VMScaleSetScaleOutInputMapper,
  OrchestrationServiceStateInput as OrchestrationServiceStateInputMapper,
  VirtualMachine as VirtualMachineMapper,
  VirtualMachineUpdate as VirtualMachineUpdateMapper,
  AttachDetachDataDisksRequest as AttachDetachDataDisksRequestMapper,
  VirtualMachineCaptureParameters as VirtualMachineCaptureParametersMapper,
  VirtualMachineInstallPatchesParameters as VirtualMachineInstallPatchesParametersMapper,
  MigrateVMToVirtualMachineScaleSetInput as MigrateVMToVirtualMachineScaleSetInputMapper,
  VirtualMachineReimageParameters as VirtualMachineReimageParametersMapper,
  RunCommandInput as RunCommandInputMapper,
  ProximityPlacementGroup as ProximityPlacementGroupMapper,
  ProximityPlacementGroupUpdate as ProximityPlacementGroupUpdateMapper,
  RestorePointCollection as RestorePointCollectionMapper,
  RestorePointCollectionUpdate as RestorePointCollectionUpdateMapper,
  SshPublicKeyResource as SshPublicKeyResourceMapper,
  SshPublicKeyUpdateResource as SshPublicKeyUpdateResourceMapper,
  SshGenerateKeyPairInputParameters as SshGenerateKeyPairInputParametersMapper,
  CapacityReservation as CapacityReservationMapper,
  CapacityReservationUpdate as CapacityReservationUpdateMapper,
  DedicatedHost as DedicatedHostMapper,
  DedicatedHostUpdate as DedicatedHostUpdateMapper,
  RestorePoint as RestorePointMapper,
  VirtualMachineScaleSetExtension as VirtualMachineScaleSetExtensionMapper,
  VirtualMachineScaleSetExtensionUpdate as VirtualMachineScaleSetExtensionUpdateMapper,
  VirtualMachineScaleSetVM as VirtualMachineScaleSetVMMapper,
  VirtualMachineScaleSetVMReimageParameters as VirtualMachineScaleSetVMReimageParametersMapper,
  VirtualMachineScaleSetVMExtension as VirtualMachineScaleSetVMExtensionMapper,
  VirtualMachineScaleSetVMExtensionUpdate as VirtualMachineScaleSetVMExtensionUpdateMapper,
  VirtualMachineExtension as VirtualMachineExtensionMapper,
  VirtualMachineExtensionUpdate as VirtualMachineExtensionUpdateMapper,
} from "../models/mappers.js";

export const accept: OperationParameter = {
  parameterPath: "accept",
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Accept",
    type: {
      name: "String",
    },
  },
};

export const $host: OperationURLParameter = {
  parameterPath: "$host",
  mapper: {
    serializedName: "$host",
    required: true,
    type: {
      name: "String",
    },
  },
  skipEncoding: true,
};

export const apiVersion: OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    defaultValue: "2025-04-01",
    isConstant: true,
    serializedName: "api-version",
    type: {
      name: "String",
    },
  },
};

export const nextLink: OperationURLParameter = {
  parameterPath: "nextLink",
  mapper: {
    serializedName: "nextLink",
    required: true,
    type: {
      name: "String",
    },
  },
  skipEncoding: true,
};

export const subscriptionId: OperationURLParameter = {
  parameterPath: "subscriptionId",
  mapper: {
    constraints: {
      MinLength: 1,
    },
    serializedName: "subscriptionId",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const expand: OperationQueryParameter = {
  parameterPath: ["options", "expand"],
  mapper: {
    serializedName: "$expand",
    type: {
      name: "String",
    },
  },
};

export const resourceGroupName: OperationURLParameter = {
  parameterPath: "resourceGroupName",
  mapper: {
    constraints: {
      MaxLength: 90,
      MinLength: 1,
    },
    serializedName: "resourceGroupName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const availabilitySetName: OperationURLParameter = {
  parameterPath: "availabilitySetName",
  mapper: {
    serializedName: "availabilitySetName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const contentType: OperationParameter = {
  parameterPath: ["options", "contentType"],
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Content-Type",
    type: {
      name: "String",
    },
  },
};

export const parameters: OperationParameter = {
  parameterPath: "parameters",
  mapper: AvailabilitySetMapper,
};

export const parameters1: OperationParameter = {
  parameterPath: "parameters",
  mapper: AvailabilitySetUpdateMapper,
};

export const parameters2: OperationParameter = {
  parameterPath: ["options", "parameters"],
  mapper: ConvertToVirtualMachineScaleSetInputMapper,
};

export const parameters3: OperationParameter = {
  parameterPath: "parameters",
  mapper: MigrateToVirtualMachineScaleSetInputMapper,
};

export const expand1: OperationQueryParameter = {
  parameterPath: ["options", "expand"],
  mapper: {
    serializedName: "$expand",
    type: {
      name: "String",
    },
  },
};

export const resourceIdsOnly: OperationQueryParameter = {
  parameterPath: ["options", "resourceIdsOnly"],
  mapper: {
    serializedName: "resourceIdsOnly",
    type: {
      name: "String",
    },
  },
};

export const capacityReservationGroupName: OperationURLParameter = {
  parameterPath: "capacityReservationGroupName",
  mapper: {
    serializedName: "capacityReservationGroupName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const expand2: OperationQueryParameter = {
  parameterPath: ["options", "expand"],
  mapper: {
    serializedName: "$expand",
    type: {
      name: "String",
    },
  },
};

export const parameters4: OperationParameter = {
  parameterPath: "parameters",
  mapper: CapacityReservationGroupMapper,
};

export const parameters5: OperationParameter = {
  parameterPath: "parameters",
  mapper: CapacityReservationGroupUpdateMapper,
};

export const hostGroupName: OperationURLParameter = {
  parameterPath: "hostGroupName",
  mapper: {
    serializedName: "hostGroupName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const expand3: OperationQueryParameter = {
  parameterPath: ["options", "expand"],
  mapper: {
    serializedName: "$expand",
    type: {
      name: "Enum",
      allowedValues: ["instanceView", "userData", "resiliencyView"],
    },
  },
};

export const parameters6: OperationParameter = {
  parameterPath: "parameters",
  mapper: DedicatedHostGroupMapper,
};

export const parameters7: OperationParameter = {
  parameterPath: "parameters",
  mapper: DedicatedHostGroupUpdateMapper,
};

export const imageName: OperationURLParameter = {
  parameterPath: "imageName",
  mapper: {
    serializedName: "imageName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const parameters8: OperationParameter = {
  parameterPath: "parameters",
  mapper: ImageMapper,
};

export const parameters9: OperationParameter = {
  parameterPath: "parameters",
  mapper: ImageUpdateMapper,
};

export const location: OperationURLParameter = {
  parameterPath: "location",
  mapper: {
    constraints: {
      MinLength: 1,
    },
    serializedName: "location",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const edgeZone: OperationURLParameter = {
  parameterPath: "edgeZone",
  mapper: {
    serializedName: "edgeZone",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const publisherName: OperationURLParameter = {
  parameterPath: "publisherName",
  mapper: {
    serializedName: "publisherName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const offer: OperationURLParameter = {
  parameterPath: "offer",
  mapper: {
    serializedName: "offer",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const skus: OperationURLParameter = {
  parameterPath: "skus",
  mapper: {
    serializedName: "skus",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const top: OperationQueryParameter = {
  parameterPath: ["options", "top"],
  mapper: {
    serializedName: "$top",
    type: {
      name: "Number",
    },
  },
};

export const orderby: OperationQueryParameter = {
  parameterPath: ["options", "orderby"],
  mapper: {
    serializedName: "$orderby",
    type: {
      name: "String",
    },
  },
};

export const version: OperationURLParameter = {
  parameterPath: "version",
  mapper: {
    serializedName: "version",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const expand4: OperationQueryParameter = {
  parameterPath: "expand",
  mapper: {
    serializedName: "$expand",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const parameters10: OperationParameter = {
  parameterPath: "parameters",
  mapper: RequestRateByIntervalInputMapper,
};

export const parameters11: OperationParameter = {
  parameterPath: "parameters",
  mapper: ThrottledRequestsInputMapper,
};

export const typeParam: OperationURLParameter = {
  parameterPath: "typeParam",
  mapper: {
    serializedName: "type",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const filter: OperationQueryParameter = {
  parameterPath: ["options", "filter"],
  mapper: {
    serializedName: "$filter",
    type: {
      name: "String",
    },
  },
};

export const accept1: OperationParameter = {
  parameterPath: "accept",
  mapper: {
    defaultValue: "application/json, text/json",
    isConstant: true,
    serializedName: "Accept",
    type: {
      name: "String",
    },
  },
};

export const commandId: OperationURLParameter = {
  parameterPath: "commandId",
  mapper: {
    serializedName: "commandId",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const vmName: OperationURLParameter = {
  parameterPath: "vmName",
  mapper: {
    serializedName: "vmName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const runCommandName: OperationURLParameter = {
  parameterPath: "runCommandName",
  mapper: {
    serializedName: "runCommandName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const runCommand: OperationParameter = {
  parameterPath: "runCommand",
  mapper: VirtualMachineRunCommandMapper,
};

export const runCommand1: OperationParameter = {
  parameterPath: "runCommand",
  mapper: VirtualMachineRunCommandUpdateMapper,
};

export const vmScaleSetName: OperationURLParameter = {
  parameterPath: "vmScaleSetName",
  mapper: {
    serializedName: "vmScaleSetName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const expand5: OperationQueryParameter = {
  parameterPath: ["options", "expand"],
  mapper: {
    serializedName: "$expand",
    type: {
      name: "String",
    },
  },
};

export const parameters12: OperationParameter = {
  parameterPath: "parameters",
  mapper: VirtualMachineScaleSetMapper,
};

export const ifMatch: OperationParameter = {
  parameterPath: ["options", "ifMatch"],
  mapper: {
    serializedName: "If-Match",
    type: {
      name: "String",
    },
  },
};

export const ifNoneMatch: OperationParameter = {
  parameterPath: ["options", "ifNoneMatch"],
  mapper: {
    serializedName: "If-None-Match",
    type: {
      name: "String",
    },
  },
};

export const parameters13: OperationParameter = {
  parameterPath: "parameters",
  mapper: VirtualMachineScaleSetUpdateMapper,
};

export const forceDeletion: OperationQueryParameter = {
  parameterPath: ["options", "forceDeletion"],
  mapper: {
    serializedName: "forceDeletion",
    type: {
      name: "Boolean",
    },
  },
};

export const vmInstanceIDs: OperationParameter = {
  parameterPath: ["options", "vmInstanceIDs"],
  mapper: VirtualMachineScaleSetVMInstanceIDsMapper,
};

export const parameters14: OperationParameter = {
  parameterPath: "parameters",
  mapper: VMScaleSetConvertToSinglePlacementGroupInputMapper,
};

export const hibernate: OperationQueryParameter = {
  parameterPath: ["options", "hibernate"],
  mapper: {
    serializedName: "hibernate",
    type: {
      name: "Boolean",
    },
  },
};

export const vmInstanceIDs1: OperationParameter = {
  parameterPath: "vmInstanceIDs",
  mapper: VirtualMachineScaleSetVMInstanceRequiredIDsMapper,
};

export const platformUpdateDomain: OperationQueryParameter = {
  parameterPath: "platformUpdateDomain",
  mapper: {
    serializedName: "platformUpdateDomain",
    required: true,
    type: {
      name: "Number",
    },
  },
};

export const zone: OperationQueryParameter = {
  parameterPath: ["options", "zone"],
  mapper: {
    serializedName: "zone",
    type: {
      name: "String",
    },
  },
};

export const placementGroupId: OperationQueryParameter = {
  parameterPath: ["options", "placementGroupId"],
  mapper: {
    serializedName: "placementGroupId",
    type: {
      name: "String",
    },
  },
};

export const skipShutdown: OperationQueryParameter = {
  parameterPath: ["options", "skipShutdown"],
  mapper: {
    serializedName: "skipShutdown",
    type: {
      name: "Boolean",
    },
  },
};

export const vmScaleSetReimageInput: OperationParameter = {
  parameterPath: ["options", "vmScaleSetReimageInput"],
  mapper: VirtualMachineScaleSetReimageParametersMapper,
};

export const parameters15: OperationParameter = {
  parameterPath: "parameters",
  mapper: VMScaleSetScaleOutInputMapper,
};

export const parameters16: OperationParameter = {
  parameterPath: "parameters",
  mapper: OrchestrationServiceStateInputMapper,
};

export const statusOnly: OperationQueryParameter = {
  parameterPath: ["options", "statusOnly"],
  mapper: {
    serializedName: "statusOnly",
    type: {
      name: "String",
    },
  },
};

export const expand6: OperationQueryParameter = {
  parameterPath: ["options", "expand"],
  mapper: {
    serializedName: "$expand",
    type: {
      name: "String",
    },
  },
};

export const expand7: OperationQueryParameter = {
  parameterPath: ["options", "expand"],
  mapper: {
    serializedName: "$expand",
    type: {
      name: "String",
    },
  },
};

export const parameters17: OperationParameter = {
  parameterPath: "parameters",
  mapper: VirtualMachineMapper,
};

export const parameters18: OperationParameter = {
  parameterPath: "parameters",
  mapper: VirtualMachineUpdateMapper,
};

export const parameters19: OperationParameter = {
  parameterPath: "parameters",
  mapper: AttachDetachDataDisksRequestMapper,
};

export const parameters20: OperationParameter = {
  parameterPath: "parameters",
  mapper: VirtualMachineCaptureParametersMapper,
};

export const installPatchesInput: OperationParameter = {
  parameterPath: "installPatchesInput",
  mapper: VirtualMachineInstallPatchesParametersMapper,
};

export const parameters21: OperationParameter = {
  parameterPath: ["options", "parameters"],
  mapper: MigrateVMToVirtualMachineScaleSetInputMapper,
};

export const parameters22: OperationParameter = {
  parameterPath: ["options", "parameters"],
  mapper: VirtualMachineReimageParametersMapper,
};

export const sasUriExpirationTimeInMinutes: OperationQueryParameter = {
  parameterPath: ["options", "sasUriExpirationTimeInMinutes"],
  mapper: {
    serializedName: "sasUriExpirationTimeInMinutes",
    type: {
      name: "Number",
    },
  },
};

export const parameters23: OperationParameter = {
  parameterPath: "parameters",
  mapper: RunCommandInputMapper,
};

export const proximityPlacementGroupName: OperationURLParameter = {
  parameterPath: "proximityPlacementGroupName",
  mapper: {
    serializedName: "proximityPlacementGroupName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const includeColocationStatus: OperationQueryParameter = {
  parameterPath: ["options", "includeColocationStatus"],
  mapper: {
    serializedName: "includeColocationStatus",
    type: {
      name: "String",
    },
  },
};

export const parameters24: OperationParameter = {
  parameterPath: "parameters",
  mapper: ProximityPlacementGroupMapper,
};

export const parameters25: OperationParameter = {
  parameterPath: "parameters",
  mapper: ProximityPlacementGroupUpdateMapper,
};

export const restorePointCollectionName: OperationURLParameter = {
  parameterPath: "restorePointCollectionName",
  mapper: {
    serializedName: "restorePointCollectionName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const expand8: OperationQueryParameter = {
  parameterPath: ["options", "expand"],
  mapper: {
    serializedName: "$expand",
    type: {
      name: "String",
    },
  },
};

export const parameters26: OperationParameter = {
  parameterPath: "parameters",
  mapper: RestorePointCollectionMapper,
};

export const parameters27: OperationParameter = {
  parameterPath: "parameters",
  mapper: RestorePointCollectionUpdateMapper,
};

export const sshPublicKeyName: OperationURLParameter = {
  parameterPath: "sshPublicKeyName",
  mapper: {
    serializedName: "sshPublicKeyName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const parameters28: OperationParameter = {
  parameterPath: "parameters",
  mapper: SshPublicKeyResourceMapper,
};

export const parameters29: OperationParameter = {
  parameterPath: "parameters",
  mapper: SshPublicKeyUpdateResourceMapper,
};

export const parameters30: OperationParameter = {
  parameterPath: ["options", "parameters"],
  mapper: SshGenerateKeyPairInputParametersMapper,
};

export const capacityReservationName: OperationURLParameter = {
  parameterPath: "capacityReservationName",
  mapper: {
    serializedName: "capacityReservationName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const expand9: OperationQueryParameter = {
  parameterPath: ["options", "expand"],
  mapper: {
    serializedName: "$expand",
    type: {
      name: "String",
    },
  },
};

export const parameters31: OperationParameter = {
  parameterPath: "parameters",
  mapper: CapacityReservationMapper,
};

export const parameters32: OperationParameter = {
  parameterPath: "parameters",
  mapper: CapacityReservationUpdateMapper,
};

export const hostName: OperationURLParameter = {
  parameterPath: "hostName",
  mapper: {
    serializedName: "hostName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const parameters33: OperationParameter = {
  parameterPath: "parameters",
  mapper: DedicatedHostMapper,
};

export const parameters34: OperationParameter = {
  parameterPath: "parameters",
  mapper: DedicatedHostUpdateMapper,
};

export const restorePointName: OperationURLParameter = {
  parameterPath: "restorePointName",
  mapper: {
    serializedName: "restorePointName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const expand10: OperationQueryParameter = {
  parameterPath: ["options", "expand"],
  mapper: {
    serializedName: "$expand",
    type: {
      name: "String",
    },
  },
};

export const parameters35: OperationParameter = {
  parameterPath: "parameters",
  mapper: RestorePointMapper,
};

export const vmssExtensionName: OperationURLParameter = {
  parameterPath: "vmssExtensionName",
  mapper: {
    serializedName: "vmssExtensionName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const extensionParameters: OperationParameter = {
  parameterPath: "extensionParameters",
  mapper: VirtualMachineScaleSetExtensionMapper,
};

export const extensionParameters1: OperationParameter = {
  parameterPath: "extensionParameters",
  mapper: VirtualMachineScaleSetExtensionUpdateMapper,
};

export const virtualMachineScaleSetName: OperationURLParameter = {
  parameterPath: "virtualMachineScaleSetName",
  mapper: {
    serializedName: "virtualMachineScaleSetName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const select: OperationQueryParameter = {
  parameterPath: ["options", "select"],
  mapper: {
    serializedName: "$select",
    type: {
      name: "String",
    },
  },
};

export const instanceId: OperationURLParameter = {
  parameterPath: "instanceId",
  mapper: {
    serializedName: "instanceId",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const parameters36: OperationParameter = {
  parameterPath: "parameters",
  mapper: VirtualMachineScaleSetVMMapper,
};

export const vmScaleSetVMReimageInput: OperationParameter = {
  parameterPath: ["options", "vmScaleSetVMReimageInput"],
  mapper: VirtualMachineScaleSetVMReimageParametersMapper,
};

export const vmExtensionName: OperationURLParameter = {
  parameterPath: "vmExtensionName",
  mapper: {
    serializedName: "vmExtensionName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const extensionParameters2: OperationParameter = {
  parameterPath: "extensionParameters",
  mapper: VirtualMachineScaleSetVMExtensionMapper,
};

export const extensionParameters3: OperationParameter = {
  parameterPath: "extensionParameters",
  mapper: VirtualMachineScaleSetVMExtensionUpdateMapper,
};

export const extensionParameters4: OperationParameter = {
  parameterPath: "extensionParameters",
  mapper: VirtualMachineExtensionMapper,
};

export const extensionParameters5: OperationParameter = {
  parameterPath: "extensionParameters",
  mapper: VirtualMachineExtensionUpdateMapper,
};
