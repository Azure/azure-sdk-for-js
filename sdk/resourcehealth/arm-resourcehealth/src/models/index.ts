/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

/** The List availabilityStatus operation response. */
export interface AvailabilityStatusListResult {
  /** The list of availabilityStatuses. */
  value: AvailabilityStatus[];
  /** The URI to fetch the next page of availabilityStatuses. Call ListNext() with this URI to fetch the next page of availabilityStatuses. */
  nextLink?: string;
}

/** availabilityStatus of a resource. */
export interface AvailabilityStatus {
  /** Azure Resource Manager Identity for the availabilityStatuses resource. */
  id?: string;
  /** current. */
  name?: string;
  /** Microsoft.ResourceHealth/AvailabilityStatuses. */
  type?: string;
  /** Azure Resource Manager geo location of the resource. */
  location?: string;
  /** Properties of availability state. */
  properties?: AvailabilityStatusProperties;
}

/** Properties of availability state. */
export interface AvailabilityStatusProperties {
  /** Availability status of the resource. When it is null, this availabilityStatus object represents an availability impacting event */
  availabilityState?: AvailabilityStateValues;
  /** Summary description of the availability status. */
  summary?: string;
  /** Details of the availability status. */
  detailedStatus?: string;
  /** When the resource's availabilityState is Unavailable, it describes where the health impacting event was originated. Examples are planned, unplanned, user initiated or an outage etc. */
  reasonType?: string;
  /** When the resource's availabilityState is Unavailable, it provides the Timestamp for when the health impacting event was received. */
  rootCauseAttributionTime?: Date;
  /** In case of an availability impacting event, it describes when the health impacting event was originated. Examples are Lifecycle, Downtime, Fault Analysis etc. */
  healthEventType?: string;
  /** In case of an availability impacting event, it describes where the health impacting event was originated. Examples are PlatformInitiated, UserInitiated etc. */
  healthEventCause?: string;
  /** In case of an availability impacting event, it describes the category of a PlatformInitiated health impacting event. Examples are Planned, Unplanned etc. */
  healthEventCategory?: string;
  /** It is a unique Id that identifies the event */
  healthEventId?: string;
  /** When the resource's availabilityState is Unavailable and the reasonType is not User Initiated, it provides the date and time for when the issue is expected to be resolved. */
  resolutionETA?: Date;
  /** Timestamp for when last change in health status occurred. */
  occuredTime?: Date;
  /** Chronicity of the availability transition. */
  reasonChronicity?: ReasonChronicityTypes;
  /** Timestamp for when the health was last checked. */
  reportedTime?: Date;
  /** An annotation describing a change in the availabilityState to Available from Unavailable with a reasonType of type Unplanned */
  recentlyResolvedState?: AvailabilityStatusPropertiesRecentlyResolvedState;
  /** Lists actions the user can take based on the current availabilityState of the resource. */
  recommendedActions?: RecommendedAction[];
  /** Lists the service impacting events that may be affecting the health of the resource. */
  serviceImpactingEvents?: ServiceImpactingEvent[];
}

/** An annotation describing a change in the availabilityState to Available from Unavailable with a reasonType of type Unplanned */
export interface AvailabilityStatusPropertiesRecentlyResolvedState {
  /** Timestamp for when the availabilityState changed to Unavailable */
  unavailableOccurredTime?: Date;
  /** Timestamp when the availabilityState changes to Available. */
  resolvedTime?: Date;
  /** Brief description of cause of the resource becoming unavailable. */
  unavailabilitySummary?: string;
}

/** Lists actions the user can take based on the current availabilityState of the resource. */
export interface RecommendedAction {
  /** Recommended action. */
  action?: string;
  /** Link to the action */
  actionUrl?: string;
  /** Substring of action, it describes which text should host the action url. */
  actionUrlText?: string;
}

/** Lists the service impacting events that may be affecting the health of the resource. */
export interface ServiceImpactingEvent {
  /** Timestamp for when the event started. */
  eventStartTime?: Date;
  /** Timestamp for when event was submitted/detected. */
  eventStatusLastModifiedTime?: Date;
  /** Correlation id for the event */
  correlationId?: string;
  /** Status of the service impacting event. */
  status?: ServiceImpactingEventStatus;
  /** Properties of the service impacting event. */
  incidentProperties?: ServiceImpactingEventIncidentProperties;
}

/** Status of the service impacting event. */
export interface ServiceImpactingEventStatus {
  /** Current status of the event */
  value?: string;
}

/** Properties of the service impacting event. */
export interface ServiceImpactingEventIncidentProperties {
  /** Title of the incident. */
  title?: string;
  /** Service impacted by the event. */
  service?: string;
  /** Region impacted by the event. */
  region?: string;
  /** Type of Event. */
  incidentType?: string;
}

/** Error details. */
export interface ErrorResponse {
  /**
   * The error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * The error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * The error details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly details?: string;
}

/** Lists the operations response. */
export interface OperationListResult {
  /** List of operations available in the resourcehealth resource provider. */
  value: Operation[];
}

/** Operation available in the resourcehealth resource provider. */
export interface Operation {
  /** Name of the operation. */
  name?: string;
  /** Properties of the operation. */
  display?: OperationDisplay;
}

/** Properties of the operation. */
export interface OperationDisplay {
  /** Provider name. */
  provider?: string;
  /** Resource name. */
  resource?: string;
  /** Operation name. */
  operation?: string;
  /** Description of the operation. */
  description?: string;
}

/** Banner type of emerging issue. */
export interface StatusBanner {
  /** The banner title. */
  title?: string;
  /** The details of banner. */
  message?: string;
  /** The cloud type of this banner. */
  cloud?: string;
  /** The last time modified on this banner. */
  lastModifiedTime?: Date;
}

/** Active event type of emerging issue. */
export interface StatusActiveEvent {
  /** The active event title. */
  title?: string;
  /** The details of active event. */
  description?: string;
  /** The tracking id of this active event. */
  trackingId?: string;
  /** The impact start time on this active event. */
  startTime?: Date;
  /** The cloud type of this active event. */
  cloud?: string;
  /** The severity level of this active event. */
  severity?: SeverityValues;
  /** The stage of this active event. */
  stage?: StageValues;
  /** The boolean value of this active event if published or not. */
  published?: boolean;
  /** The last time modified on this banner. */
  lastModifiedTime?: Date;
  /** The list of emerging issues impacts. */
  impacts?: EmergingIssueImpact[];
}

/** Object of the emerging issue impact on services and regions. */
export interface EmergingIssueImpact {
  /** The impacted service id. */
  id?: string;
  /** The impacted service name. */
  name?: string;
  /** The list of impacted regions for corresponding emerging issues. */
  regions?: ImpactedRegion[];
}

/** Object of impacted region. */
export interface ImpactedRegion {
  /** The impacted region id. */
  id?: string;
  /** The impacted region name. */
  name?: string;
}

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export interface Resource {
  /**
   * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
}

/** The list of emerging issues. */
export interface EmergingIssueListResult {
  /** The list of emerging issues. */
  value?: EmergingIssuesGetResult[];
  /** The link used to get the next page of emerging issues. */
  nextLink?: string;
}

/** The Get EmergingIssues operation response. */
export interface EmergingIssuesGetResult extends Resource {
  /** Timestamp for when last time refreshed for ongoing emerging issue. */
  refreshTimestamp?: Date;
  /** The list of emerging issues of banner type. */
  statusBanners?: StatusBanner[];
  /** The list of emerging issues of active event type. */
  statusActiveEvents?: StatusActiveEvent[];
}

/** Known values of {@link SeverityValues} that the service accepts. */
export enum KnownSeverityValues {
  /** Information */
  Information = "Information",
  /** Warning */
  Warning = "Warning",
  /** Error */
  Error = "Error"
}

/**
 * Defines values for SeverityValues. \
 * {@link KnownSeverityValues} can be used interchangeably with SeverityValues,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Information** \
 * **Warning** \
 * **Error**
 */
export type SeverityValues = string;

/** Known values of {@link StageValues} that the service accepts. */
export enum KnownStageValues {
  /** Active */
  Active = "Active",
  /** Resolve */
  Resolve = "Resolve",
  /** Archived */
  Archived = "Archived"
}

/**
 * Defines values for StageValues. \
 * {@link KnownStageValues} can be used interchangeably with StageValues,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Active** \
 * **Resolve** \
 * **Archived**
 */
export type StageValues = string;
/** Defines values for AvailabilityStateValues. */
export type AvailabilityStateValues = "Available" | "Unavailable" | "Unknown";
/** Defines values for ReasonChronicityTypes. */
export type ReasonChronicityTypes = "Transient" | "Persistent";

/** Optional parameters. */
export interface AvailabilityStatusesListBySubscriptionIdOptionalParams
  extends coreClient.OperationOptions {
  /** The filter to apply on the operation. For more information please see https://docs.microsoft.com/en-us/rest/api/apimanagement/apis?redirectedfrom=MSDN */
  filter?: string;
  /** Setting $expand=recommendedactions in url query expands the recommendedactions in the response. */
  expand?: string;
}

/** Contains response data for the listBySubscriptionId operation. */
export type AvailabilityStatusesListBySubscriptionIdResponse = AvailabilityStatusListResult;

/** Optional parameters. */
export interface AvailabilityStatusesListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {
  /** The filter to apply on the operation. For more information please see https://docs.microsoft.com/en-us/rest/api/apimanagement/apis?redirectedfrom=MSDN */
  filter?: string;
  /** Setting $expand=recommendedactions in url query expands the recommendedactions in the response. */
  expand?: string;
}

/** Contains response data for the listByResourceGroup operation. */
export type AvailabilityStatusesListByResourceGroupResponse = AvailabilityStatusListResult;

/** Optional parameters. */
export interface AvailabilityStatusesGetByResourceOptionalParams
  extends coreClient.OperationOptions {
  /** The filter to apply on the operation. For more information please see https://docs.microsoft.com/en-us/rest/api/apimanagement/apis?redirectedfrom=MSDN */
  filter?: string;
  /** Setting $expand=recommendedactions in url query expands the recommendedactions in the response. */
  expand?: string;
}

/** Contains response data for the getByResource operation. */
export type AvailabilityStatusesGetByResourceResponse = AvailabilityStatus;

/** Optional parameters. */
export interface AvailabilityStatusesListOptionalParams
  extends coreClient.OperationOptions {
  /** The filter to apply on the operation. For more information please see https://docs.microsoft.com/en-us/rest/api/apimanagement/apis?redirectedfrom=MSDN */
  filter?: string;
  /** Setting $expand=recommendedactions in url query expands the recommendedactions in the response. */
  expand?: string;
}

/** Contains response data for the list operation. */
export type AvailabilityStatusesListResponse = AvailabilityStatusListResult;

/** Optional parameters. */
export interface AvailabilityStatusesListBySubscriptionIdNextOptionalParams
  extends coreClient.OperationOptions {
  /** The filter to apply on the operation. For more information please see https://docs.microsoft.com/en-us/rest/api/apimanagement/apis?redirectedfrom=MSDN */
  filter?: string;
  /** Setting $expand=recommendedactions in url query expands the recommendedactions in the response. */
  expand?: string;
}

/** Contains response data for the listBySubscriptionIdNext operation. */
export type AvailabilityStatusesListBySubscriptionIdNextResponse = AvailabilityStatusListResult;

/** Optional parameters. */
export interface AvailabilityStatusesListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {
  /** The filter to apply on the operation. For more information please see https://docs.microsoft.com/en-us/rest/api/apimanagement/apis?redirectedfrom=MSDN */
  filter?: string;
  /** Setting $expand=recommendedactions in url query expands the recommendedactions in the response. */
  expand?: string;
}

/** Contains response data for the listByResourceGroupNext operation. */
export type AvailabilityStatusesListByResourceGroupNextResponse = AvailabilityStatusListResult;

/** Optional parameters. */
export interface AvailabilityStatusesListNextOptionalParams
  extends coreClient.OperationOptions {
  /** The filter to apply on the operation. For more information please see https://docs.microsoft.com/en-us/rest/api/apimanagement/apis?redirectedfrom=MSDN */
  filter?: string;
  /** Setting $expand=recommendedactions in url query expands the recommendedactions in the response. */
  expand?: string;
}

/** Contains response data for the listNext operation. */
export type AvailabilityStatusesListNextResponse = AvailabilityStatusListResult;

/** Optional parameters. */
export interface ChildAvailabilityStatusesGetByResourceOptionalParams
  extends coreClient.OperationOptions {
  /** The filter to apply on the operation. For more information please see https://docs.microsoft.com/en-us/rest/api/apimanagement/apis?redirectedfrom=MSDN */
  filter?: string;
  /** Setting $expand=recommendedactions in url query expands the recommendedactions in the response. */
  expand?: string;
}

/** Contains response data for the getByResource operation. */
export type ChildAvailabilityStatusesGetByResourceResponse = AvailabilityStatus;

/** Optional parameters. */
export interface ChildAvailabilityStatusesListOptionalParams
  extends coreClient.OperationOptions {
  /** The filter to apply on the operation. For more information please see https://docs.microsoft.com/en-us/rest/api/apimanagement/apis?redirectedfrom=MSDN */
  filter?: string;
  /** Setting $expand=recommendedactions in url query expands the recommendedactions in the response. */
  expand?: string;
}

/** Contains response data for the list operation. */
export type ChildAvailabilityStatusesListResponse = AvailabilityStatusListResult;

/** Optional parameters. */
export interface ChildAvailabilityStatusesListNextOptionalParams
  extends coreClient.OperationOptions {
  /** The filter to apply on the operation. For more information please see https://docs.microsoft.com/en-us/rest/api/apimanagement/apis?redirectedfrom=MSDN */
  filter?: string;
  /** Setting $expand=recommendedactions in url query expands the recommendedactions in the response. */
  expand?: string;
}

/** Contains response data for the listNext operation. */
export type ChildAvailabilityStatusesListNextResponse = AvailabilityStatusListResult;

/** Optional parameters. */
export interface ChildResourcesListOptionalParams
  extends coreClient.OperationOptions {
  /** The filter to apply on the operation. For more information please see https://docs.microsoft.com/en-us/rest/api/apimanagement/apis?redirectedfrom=MSDN */
  filter?: string;
  /** Setting $expand=recommendedactions in url query expands the recommendedactions in the response. */
  expand?: string;
}

/** Contains response data for the list operation. */
export type ChildResourcesListResponse = AvailabilityStatusListResult;

/** Optional parameters. */
export interface ChildResourcesListNextOptionalParams
  extends coreClient.OperationOptions {
  /** The filter to apply on the operation. For more information please see https://docs.microsoft.com/en-us/rest/api/apimanagement/apis?redirectedfrom=MSDN */
  filter?: string;
  /** Setting $expand=recommendedactions in url query expands the recommendedactions in the response. */
  expand?: string;
}

/** Contains response data for the listNext operation. */
export type ChildResourcesListNextResponse = AvailabilityStatusListResult;

/** Optional parameters. */
export interface OperationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type OperationsListResponse = OperationListResult;

/** Optional parameters. */
export interface EmergingIssuesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type EmergingIssuesGetResponse = EmergingIssuesGetResult;

/** Optional parameters. */
export interface EmergingIssuesListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type EmergingIssuesListResponse = EmergingIssueListResult;

/** Optional parameters. */
export interface EmergingIssuesListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type EmergingIssuesListNextResponse = EmergingIssueListResult;

/** Optional parameters. */
export interface MicrosoftResourceHealthOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
