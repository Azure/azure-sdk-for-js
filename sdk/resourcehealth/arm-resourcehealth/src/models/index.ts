/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };

/**
 * An annotation describing a change in the availabilityState to Available from Unavailable with a
 * reasonType of type Unplanned
 */
export interface AvailabilityStatusPropertiesRecentlyResolvedState {
  /**
   * Timestamp for when the availabilityState changed to Unavailable
   */
  unavailableOccurredTime?: Date;
  /**
   * Timestamp when the availabilityState changes to Available.
   */
  resolvedTime?: Date;
  /**
   * Brief description of cause of the resource becoming unavailable.
   */
  unavailabilitySummary?: string;
}

/**
 * Lists actions the user can take based on the current availabilityState of the resource.
 */
export interface RecommendedAction {
  /**
   * Recommended action.
   */
  action?: string;
  /**
   * Link to the action
   */
  actionUrl?: string;
  /**
   * Substring of action, it describes which text should host the action url.
   */
  actionUrlText?: string;
}

/**
 * Status of the service impacting event.
 */
export interface ServiceImpactingEventStatus {
  /**
   * Current status of the event
   */
  value?: string;
}

/**
 * Properties of the service impacting event.
 */
export interface ServiceImpactingEventIncidentProperties {
  /**
   * Title of the incident.
   */
  title?: string;
  /**
   * Service impacted by the event.
   */
  service?: string;
  /**
   * Region impacted by the event.
   */
  region?: string;
  /**
   * Type of Event.
   */
  incidentType?: string;
}

/**
 * Lists the service impacting events that may be affecting the health of the resource.
 */
export interface ServiceImpactingEvent {
  /**
   * Timestamp for when the event started.
   */
  eventStartTime?: Date;
  /**
   * Timestamp for when event was submitted/detected.
   */
  eventStatusLastModifiedTime?: Date;
  /**
   * Correlation id for the event
   */
  correlationId?: string;
  /**
   * Status of the service impacting event.
   */
  status?: ServiceImpactingEventStatus;
  /**
   * Properties of the service impacting event.
   */
  incidentProperties?: ServiceImpactingEventIncidentProperties;
}

/**
 * Properties of availability state.
 */
export interface AvailabilityStatusProperties {
  /**
   * Availability status of the resource. When it is null, this availabilityStatus object
   * represents an availability impacting event. Possible values include: 'Available',
   * 'Unavailable', 'Unknown'
   */
  availabilityState?: AvailabilityStateValues;
  /**
   * Summary description of the availability status.
   */
  summary?: string;
  /**
   * Details of the availability status.
   */
  detailedStatus?: string;
  /**
   * When the resource's availabilityState is Unavailable, it describes where the health impacting
   * event was originated. Examples are planned, unplanned, user initiated or an outage etc.
   */
  reasonType?: string;
  /**
   * When the resource's availabilityState is Unavailable, it provides the Timestamp for when the
   * health impacting event was received.
   */
  rootCauseAttributionTime?: Date;
  /**
   * In case of an availability impacting event, it describes when the health impacting event was
   * originated. Examples are Lifecycle, Downtime, Fault Analysis etc.
   */
  healthEventType?: string;
  /**
   * In case of an availability impacting event, it describes where the health impacting event was
   * originated. Examples are PlatformInitiated, UserInitiated etc.
   */
  healthEventCause?: string;
  /**
   * In case of an availability impacting event, it describes the category of a PlatformInitiated
   * health impacting event. Examples are Planned, Unplanned etc.
   */
  healthEventCategory?: string;
  /**
   * It is a unique Id that identifies the event
   */
  healthEventId?: string;
  /**
   * When the resource's availabilityState is Unavailable and the reasonType is not User Initiated,
   * it provides the date and time for when the issue is expected to be resolved.
   */
  resolutionETA?: Date;
  /**
   * Timestamp for when last change in health status occurred.
   */
  occuredTime?: Date;
  /**
   * Chronicity of the availability transition. Possible values include: 'Transient', 'Persistent'
   */
  reasonChronicity?: ReasonChronicityTypes;
  /**
   * Timestamp for when the health was last checked.
   */
  reportedTime?: Date;
  /**
   * An annotation describing a change in the availabilityState to Available from Unavailable with
   * a reasonType of type Unplanned
   */
  recentlyResolvedState?: AvailabilityStatusPropertiesRecentlyResolvedState;
  /**
   * Lists actions the user can take based on the current availabilityState of the resource.
   */
  recommendedActions?: RecommendedAction[];
  /**
   * Lists the service impacting events that may be affecting the health of the resource.
   */
  serviceImpactingEvents?: ServiceImpactingEvent[];
}

/**
 * availabilityStatus of a resource.
 */
export interface AvailabilityStatus {
  /**
   * Azure Resource Manager Identity for the availabilityStatuses resource.
   */
  id?: string;
  /**
   * current.
   */
  name?: string;
  /**
   * Microsoft.ResourceHealth/AvailabilityStatuses.
   */
  type?: string;
  /**
   * Azure Resource Manager geo location of the resource.
   */
  location?: string;
  /**
   * Properties of availability state.
   */
  properties?: AvailabilityStatusProperties;
}

/**
 * Properties of the operation.
 */
export interface OperationDisplay {
  /**
   * Provider name.
   */
  provider?: string;
  /**
   * Resource name.
   */
  resource?: string;
  /**
   * Operation name.
   */
  operation?: string;
  /**
   * Description of the operation.
   */
  description?: string;
}

/**
 * Operation available in the resourcehealth resource provider.
 */
export interface Operation {
  /**
   * Name of the operation.
   */
  name?: string;
  /**
   * Properties of the operation.
   */
  display?: OperationDisplay;
}

/**
 * Lists the operations response.
 */
export interface OperationListResult {
  /**
   * List of operations available in the resourcehealth resource provider.
   */
  value: Operation[];
}

/**
 * Banner type of emerging issue.
 */
export interface StatusBanner {
  /**
   * The banner title.
   */
  title?: string;
  /**
   * The details of banner.
   */
  message?: string;
  /**
   * The cloud type of this banner.
   */
  cloud?: string;
  /**
   * The last time modified on this banner.
   */
  lastModifiedTime?: Date;
}

/**
 * Object of impacted region.
 */
export interface ImpactedRegion {
  /**
   * The impacted region id.
   */
  id?: string;
  /**
   * The impacted region name.
   */
  name?: string;
}

/**
 * Object of the emerging issue impact on services and regions.
 */
export interface EmergingIssueImpact {
  /**
   * The impacted service id.
   */
  id?: string;
  /**
   * The impacted service name.
   */
  name?: string;
  /**
   * The list of impacted regions for corresponding emerging issues.
   */
  regions?: ImpactedRegion[];
}

/**
 * Active event type of emerging issue.
 */
export interface StatusActiveEvent {
  /**
   * The active event title.
   */
  title?: string;
  /**
   * The details of active event.
   */
  description?: string;
  /**
   * The tracking id of this active event.
   */
  trackingId?: string;
  /**
   * The impact start time on this active event.
   */
  startTime?: Date;
  /**
   * The cloud type of this active event.
   */
  cloud?: string;
  /**
   * The severity level of this active event. Possible values include: 'Information', 'Warning',
   * 'Error'
   */
  severity?: SeverityValues;
  /**
   * The stage of this active event. Possible values include: 'Active', 'Resolve', 'Archived'
   */
  stage?: StageValues;
  /**
   * The boolean value of this active event if published or not.
   */
  published?: boolean;
  /**
   * The last time modified on this banner.
   */
  lastModifiedTime?: Date;
  /**
   * The list of emerging issues impacts.
   */
  impacts?: EmergingIssueImpact[];
}

/**
 * Common fields that are returned in the response for all Azure Resource Manager resources
 * @summary Resource
 */
export interface Resource extends BaseResource {
  /**
   * Fully qualified resource ID for the resource. Ex -
   * /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The name of the resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
   * "Microsoft.Storage/storageAccounts"
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
}

/**
 * The Get EmergingIssues operation response.
 */
export interface EmergingIssuesGetResult extends Resource {
  /**
   * Timestamp for when last time refreshed for ongoing emerging issue.
   */
  refreshTimestamp?: Date;
  /**
   * The list of emerging issues of banner type.
   */
  statusBanners?: StatusBanner[];
  /**
   * The list of emerging issues of active event type.
   */
  statusActiveEvents?: StatusActiveEvent[];
}

/**
 * Error details.
 */
export interface ErrorResponse {
  /**
   * The error code.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly code?: string;
  /**
   * The error message.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly message?: string;
  /**
   * The error details.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly details?: string;
}

/**
 * The resource model definition for a Azure Resource Manager proxy resource. It will not have tags
 * and a location
 * @summary Proxy Resource
 */
export interface ProxyResource extends Resource {
}

/**
 * The resource model definition for an Azure Resource Manager tracked top level resource which has
 * 'tags' and a 'location'
 * @summary Tracked Resource
 */
export interface TrackedResource extends Resource {
  /**
   * Resource tags.
   */
  tags?: { [propertyName: string]: string };
  /**
   * The geo-location where the resource lives
   */
  location: string;
}

/**
 * The resource model definition for an Azure Resource Manager resource with an etag.
 * @summary Entity Resource
 */
export interface AzureEntityResource extends Resource {
  /**
   * Resource Etag.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly etag?: string;
}

/**
 * Optional Parameters.
 */
export interface AvailabilityStatusesListBySubscriptionIdOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The filter to apply on the operation. For more information please see
   * https://docs.microsoft.com/en-us/rest/api/apimanagement/apis?redirectedfrom=MSDN
   */
  filter?: string;
  /**
   * Setting $expand=recommendedactions in url query expands the recommendedactions in the
   * response.
   */
  expand?: string;
}

/**
 * Optional Parameters.
 */
export interface AvailabilityStatusesListByResourceGroupOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The filter to apply on the operation. For more information please see
   * https://docs.microsoft.com/en-us/rest/api/apimanagement/apis?redirectedfrom=MSDN
   */
  filter?: string;
  /**
   * Setting $expand=recommendedactions in url query expands the recommendedactions in the
   * response.
   */
  expand?: string;
}

/**
 * Optional Parameters.
 */
export interface AvailabilityStatusesGetByResourceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The filter to apply on the operation. For more information please see
   * https://docs.microsoft.com/en-us/rest/api/apimanagement/apis?redirectedfrom=MSDN
   */
  filter?: string;
  /**
   * Setting $expand=recommendedactions in url query expands the recommendedactions in the
   * response.
   */
  expand?: string;
}

/**
 * Optional Parameters.
 */
export interface AvailabilityStatusesListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The filter to apply on the operation. For more information please see
   * https://docs.microsoft.com/en-us/rest/api/apimanagement/apis?redirectedfrom=MSDN
   */
  filter?: string;
  /**
   * Setting $expand=recommendedactions in url query expands the recommendedactions in the
   * response.
   */
  expand?: string;
}

/**
 * Optional Parameters.
 */
export interface AvailabilityStatusesListBySubscriptionIdNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The filter to apply on the operation. For more information please see
   * https://docs.microsoft.com/en-us/rest/api/apimanagement/apis?redirectedfrom=MSDN
   */
  filter?: string;
  /**
   * Setting $expand=recommendedactions in url query expands the recommendedactions in the
   * response.
   */
  expand?: string;
}

/**
 * Optional Parameters.
 */
export interface AvailabilityStatusesListByResourceGroupNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The filter to apply on the operation. For more information please see
   * https://docs.microsoft.com/en-us/rest/api/apimanagement/apis?redirectedfrom=MSDN
   */
  filter?: string;
  /**
   * Setting $expand=recommendedactions in url query expands the recommendedactions in the
   * response.
   */
  expand?: string;
}

/**
 * Optional Parameters.
 */
export interface AvailabilityStatusesListNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The filter to apply on the operation. For more information please see
   * https://docs.microsoft.com/en-us/rest/api/apimanagement/apis?redirectedfrom=MSDN
   */
  filter?: string;
  /**
   * Setting $expand=recommendedactions in url query expands the recommendedactions in the
   * response.
   */
  expand?: string;
}

/**
 * Optional Parameters.
 */
export interface ChildAvailabilityStatusesGetByResourceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The filter to apply on the operation. For more information please see
   * https://docs.microsoft.com/en-us/rest/api/apimanagement/apis?redirectedfrom=MSDN
   */
  filter?: string;
  /**
   * Setting $expand=recommendedactions in url query expands the recommendedactions in the
   * response.
   */
  expand?: string;
}

/**
 * Optional Parameters.
 */
export interface ChildAvailabilityStatusesListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The filter to apply on the operation. For more information please see
   * https://docs.microsoft.com/en-us/rest/api/apimanagement/apis?redirectedfrom=MSDN
   */
  filter?: string;
  /**
   * Setting $expand=recommendedactions in url query expands the recommendedactions in the
   * response.
   */
  expand?: string;
}

/**
 * Optional Parameters.
 */
export interface ChildAvailabilityStatusesListNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The filter to apply on the operation. For more information please see
   * https://docs.microsoft.com/en-us/rest/api/apimanagement/apis?redirectedfrom=MSDN
   */
  filter?: string;
  /**
   * Setting $expand=recommendedactions in url query expands the recommendedactions in the
   * response.
   */
  expand?: string;
}

/**
 * Optional Parameters.
 */
export interface ChildResourcesListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The filter to apply on the operation. For more information please see
   * https://docs.microsoft.com/en-us/rest/api/apimanagement/apis?redirectedfrom=MSDN
   */
  filter?: string;
  /**
   * Setting $expand=recommendedactions in url query expands the recommendedactions in the
   * response.
   */
  expand?: string;
}

/**
 * Optional Parameters.
 */
export interface ChildResourcesListNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The filter to apply on the operation. For more information please see
   * https://docs.microsoft.com/en-us/rest/api/apimanagement/apis?redirectedfrom=MSDN
   */
  filter?: string;
  /**
   * Setting $expand=recommendedactions in url query expands the recommendedactions in the
   * response.
   */
  expand?: string;
}

/**
 * An interface representing MicrosoftResourceHealthOptions.
 */
export interface MicrosoftResourceHealthOptions extends AzureServiceClientOptions {
  baseUri?: string;
}

/**
 * @interface
 * The List availabilityStatus operation response.
 * @extends Array<AvailabilityStatus>
 */
export interface AvailabilityStatusListResult extends Array<AvailabilityStatus> {
  /**
   * The URI to fetch the next page of availabilityStatuses. Call ListNext() with this URI to fetch
   * the next page of availabilityStatuses.
   */
  nextLink?: string;
}

/**
 * @interface
 * The list of emerging issues.
 * @extends Array<EmergingIssuesGetResult>
 */
export interface EmergingIssueListResult extends Array<EmergingIssuesGetResult> {
  /**
   * The link used to get the next page of emerging issues.
   */
  nextLink?: string;
}

/**
 * Defines values for AvailabilityStateValues.
 * Possible values include: 'Available', 'Unavailable', 'Unknown'
 * @readonly
 * @enum {string}
 */
export type AvailabilityStateValues = 'Available' | 'Unavailable' | 'Unknown';

/**
 * Defines values for ReasonChronicityTypes.
 * Possible values include: 'Transient', 'Persistent'
 * @readonly
 * @enum {string}
 */
export type ReasonChronicityTypes = 'Transient' | 'Persistent';

/**
 * Defines values for SeverityValues.
 * Possible values include: 'Information', 'Warning', 'Error'
 * @readonly
 * @enum {string}
 */
export type SeverityValues = 'Information' | 'Warning' | 'Error';

/**
 * Defines values for StageValues.
 * Possible values include: 'Active', 'Resolve', 'Archived'
 * @readonly
 * @enum {string}
 */
export type StageValues = 'Active' | 'Resolve' | 'Archived';

/**
 * Contains response data for the listBySubscriptionId operation.
 */
export type AvailabilityStatusesListBySubscriptionIdResponse = AvailabilityStatusListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AvailabilityStatusListResult;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type AvailabilityStatusesListByResourceGroupResponse = AvailabilityStatusListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AvailabilityStatusListResult;
    };
};

/**
 * Contains response data for the getByResource operation.
 */
export type AvailabilityStatusesGetByResourceResponse = AvailabilityStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AvailabilityStatus;
    };
};

/**
 * Contains response data for the list operation.
 */
export type AvailabilityStatusesListResponse = AvailabilityStatusListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AvailabilityStatusListResult;
    };
};

/**
 * Contains response data for the listBySubscriptionIdNext operation.
 */
export type AvailabilityStatusesListBySubscriptionIdNextResponse = AvailabilityStatusListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AvailabilityStatusListResult;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type AvailabilityStatusesListByResourceGroupNextResponse = AvailabilityStatusListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AvailabilityStatusListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type AvailabilityStatusesListNextResponse = AvailabilityStatusListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AvailabilityStatusListResult;
    };
};

/**
 * Contains response data for the getByResource operation.
 */
export type ChildAvailabilityStatusesGetByResourceResponse = AvailabilityStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AvailabilityStatus;
    };
};

/**
 * Contains response data for the list operation.
 */
export type ChildAvailabilityStatusesListResponse = AvailabilityStatusListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AvailabilityStatusListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type ChildAvailabilityStatusesListNextResponse = AvailabilityStatusListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AvailabilityStatusListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type ChildResourcesListResponse = AvailabilityStatusListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AvailabilityStatusListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type ChildResourcesListNextResponse = AvailabilityStatusListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AvailabilityStatusListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type EmergingIssuesGetResponse = EmergingIssuesGetResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EmergingIssuesGetResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type EmergingIssuesListResponse = EmergingIssueListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EmergingIssueListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type EmergingIssuesListNextResponse = EmergingIssueListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EmergingIssueListResult;
    };
};
