/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  AnalysisServicesServer,
  ServersListByResourceGroupOptionalParams,
  ServersListOptionalParams,
  ServersGetDetailsOptionalParams,
  ServersGetDetailsResponse,
  ServersCreateOptionalParams,
  ServersCreateResponse,
  ServersDeleteOptionalParams,
  AnalysisServicesServerUpdateParameters,
  ServersUpdateOptionalParams,
  ServersUpdateResponse,
  ServersSuspendOptionalParams,
  ServersResumeOptionalParams,
  ServersListSkusForNewOptionalParams,
  ServersListSkusForNewResponse,
  ServersListSkusForExistingOptionalParams,
  ServersListSkusForExistingResponse,
  ServersListGatewayStatusOptionalParams,
  ServersListGatewayStatusResponse,
  ServersDissociateGatewayOptionalParams,
  CheckServerNameAvailabilityParameters,
  ServersCheckNameAvailabilityOptionalParams,
  ServersCheckNameAvailabilityResponse,
  ServersListOperationResultsOptionalParams,
  ServersListOperationStatusesOptionalParams,
  ServersListOperationStatusesResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Servers. */
export interface Servers {
  /**
   * Gets all the Analysis Services servers for the given resource group.
   * @param resourceGroupName The name of the Azure Resource group of which a given Analysis Services
   *                          server is part. This name must be at least 1 character in length, and no more than 90.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: ServersListByResourceGroupOptionalParams
  ): PagedAsyncIterableIterator<AnalysisServicesServer>;
  /**
   * Lists all the Analysis Services servers for the given subscription.
   * @param options The options parameters.
   */
  list(
    options?: ServersListOptionalParams
  ): PagedAsyncIterableIterator<AnalysisServicesServer>;
  /**
   * Gets details about the specified Analysis Services server.
   * @param resourceGroupName The name of the Azure Resource group of which a given Analysis Services
   *                          server is part. This name must be at least 1 character in length, and no more than 90.
   * @param serverName The name of the Analysis Services server. It must be a minimum of 3 characters,
   *                   and a maximum of 63.
   * @param options The options parameters.
   */
  getDetails(
    resourceGroupName: string,
    serverName: string,
    options?: ServersGetDetailsOptionalParams
  ): Promise<ServersGetDetailsResponse>;
  /**
   * Provisions the specified Analysis Services server based on the configuration specified in the
   * request.
   * @param resourceGroupName The name of the Azure Resource group of which a given Analysis Services
   *                          server is part. This name must be at least 1 character in length, and no more than 90.
   * @param serverName The name of the Analysis Services server. It must be a minimum of 3 characters,
   *                   and a maximum of 63.
   * @param serverParameters Contains the information used to provision the Analysis Services server.
   * @param options The options parameters.
   */
  beginCreate(
    resourceGroupName: string,
    serverName: string,
    serverParameters: AnalysisServicesServer,
    options?: ServersCreateOptionalParams
  ): Promise<
    PollerLike<PollOperationState<ServersCreateResponse>, ServersCreateResponse>
  >;
  /**
   * Provisions the specified Analysis Services server based on the configuration specified in the
   * request.
   * @param resourceGroupName The name of the Azure Resource group of which a given Analysis Services
   *                          server is part. This name must be at least 1 character in length, and no more than 90.
   * @param serverName The name of the Analysis Services server. It must be a minimum of 3 characters,
   *                   and a maximum of 63.
   * @param serverParameters Contains the information used to provision the Analysis Services server.
   * @param options The options parameters.
   */
  beginCreateAndWait(
    resourceGroupName: string,
    serverName: string,
    serverParameters: AnalysisServicesServer,
    options?: ServersCreateOptionalParams
  ): Promise<ServersCreateResponse>;
  /**
   * Deletes the specified Analysis Services server.
   * @param resourceGroupName The name of the Azure Resource group of which a given Analysis Services
   *                          server is part. This name must be at least 1 character in length, and no more than 90.
   * @param serverName The name of the Analysis Services server. It must be at least 3 characters in
   *                   length, and no more than 63.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    serverName: string,
    options?: ServersDeleteOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Deletes the specified Analysis Services server.
   * @param resourceGroupName The name of the Azure Resource group of which a given Analysis Services
   *                          server is part. This name must be at least 1 character in length, and no more than 90.
   * @param serverName The name of the Analysis Services server. It must be at least 3 characters in
   *                   length, and no more than 63.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    serverName: string,
    options?: ServersDeleteOptionalParams
  ): Promise<void>;
  /**
   * Updates the current state of the specified Analysis Services server.
   * @param resourceGroupName The name of the Azure Resource group of which a given Analysis Services
   *                          server is part. This name must be at least 1 character in length, and no more than 90.
   * @param serverName The name of the Analysis Services server. It must be at least 3 characters in
   *                   length, and no more than 63.
   * @param serverUpdateParameters Request object that contains the updated information for the server.
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    serverName: string,
    serverUpdateParameters: AnalysisServicesServerUpdateParameters,
    options?: ServersUpdateOptionalParams
  ): Promise<
    PollerLike<PollOperationState<ServersUpdateResponse>, ServersUpdateResponse>
  >;
  /**
   * Updates the current state of the specified Analysis Services server.
   * @param resourceGroupName The name of the Azure Resource group of which a given Analysis Services
   *                          server is part. This name must be at least 1 character in length, and no more than 90.
   * @param serverName The name of the Analysis Services server. It must be at least 3 characters in
   *                   length, and no more than 63.
   * @param serverUpdateParameters Request object that contains the updated information for the server.
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    serverName: string,
    serverUpdateParameters: AnalysisServicesServerUpdateParameters,
    options?: ServersUpdateOptionalParams
  ): Promise<ServersUpdateResponse>;
  /**
   * Suspends operation of the specified Analysis Services server instance.
   * @param resourceGroupName The name of the Azure Resource group of which a given Analysis Services
   *                          server is part. This name must be at least 1 character in length, and no more than 90.
   * @param serverName The name of the Analysis Services server. It must be at least 3 characters in
   *                   length, and no more than 63.
   * @param options The options parameters.
   */
  beginSuspend(
    resourceGroupName: string,
    serverName: string,
    options?: ServersSuspendOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Suspends operation of the specified Analysis Services server instance.
   * @param resourceGroupName The name of the Azure Resource group of which a given Analysis Services
   *                          server is part. This name must be at least 1 character in length, and no more than 90.
   * @param serverName The name of the Analysis Services server. It must be at least 3 characters in
   *                   length, and no more than 63.
   * @param options The options parameters.
   */
  beginSuspendAndWait(
    resourceGroupName: string,
    serverName: string,
    options?: ServersSuspendOptionalParams
  ): Promise<void>;
  /**
   * Resumes operation of the specified Analysis Services server instance.
   * @param resourceGroupName The name of the Azure Resource group of which a given Analysis Services
   *                          server is part. This name must be at least 1 character in length, and no more than 90.
   * @param serverName The name of the Analysis Services server. It must be at least 3 characters in
   *                   length, and no more than 63.
   * @param options The options parameters.
   */
  beginResume(
    resourceGroupName: string,
    serverName: string,
    options?: ServersResumeOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Resumes operation of the specified Analysis Services server instance.
   * @param resourceGroupName The name of the Azure Resource group of which a given Analysis Services
   *                          server is part. This name must be at least 1 character in length, and no more than 90.
   * @param serverName The name of the Analysis Services server. It must be at least 3 characters in
   *                   length, and no more than 63.
   * @param options The options parameters.
   */
  beginResumeAndWait(
    resourceGroupName: string,
    serverName: string,
    options?: ServersResumeOptionalParams
  ): Promise<void>;
  /**
   * Lists eligible SKUs for Analysis Services resource provider.
   * @param options The options parameters.
   */
  listSkusForNew(
    options?: ServersListSkusForNewOptionalParams
  ): Promise<ServersListSkusForNewResponse>;
  /**
   * Lists eligible SKUs for an Analysis Services resource.
   * @param resourceGroupName The name of the Azure Resource group of which a given Analysis Services
   *                          server is part. This name must be at least 1 character in length, and no more than 90.
   * @param serverName The name of the Analysis Services server. It must be at least 3 characters in
   *                   length, and no more than 63.
   * @param options The options parameters.
   */
  listSkusForExisting(
    resourceGroupName: string,
    serverName: string,
    options?: ServersListSkusForExistingOptionalParams
  ): Promise<ServersListSkusForExistingResponse>;
  /**
   * Return the gateway status of the specified Analysis Services server instance.
   * @param resourceGroupName The name of the Azure Resource group of which a given Analysis Services
   *                          server is part. This name must be at least 1 character in length, and no more than 90.
   * @param serverName The name of the Analysis Services server.
   * @param options The options parameters.
   */
  listGatewayStatus(
    resourceGroupName: string,
    serverName: string,
    options?: ServersListGatewayStatusOptionalParams
  ): Promise<ServersListGatewayStatusResponse>;
  /**
   * Dissociates a Unified Gateway associated with the server.
   * @param resourceGroupName The name of the Azure Resource group of which a given Analysis Services
   *                          server is part. This name must be at least 1 character in length, and no more than 90.
   * @param serverName The name of the Analysis Services server. It must be at least 3 characters in
   *                   length, and no more than 63.
   * @param options The options parameters.
   */
  dissociateGateway(
    resourceGroupName: string,
    serverName: string,
    options?: ServersDissociateGatewayOptionalParams
  ): Promise<void>;
  /**
   * Check the name availability in the target location.
   * @param location The region name which the operation will lookup into.
   * @param serverParameters Contains the information used to provision the Analysis Services server.
   * @param options The options parameters.
   */
  checkNameAvailability(
    location: string,
    serverParameters: CheckServerNameAvailabilityParameters,
    options?: ServersCheckNameAvailabilityOptionalParams
  ): Promise<ServersCheckNameAvailabilityResponse>;
  /**
   * List the result of the specified operation.
   * @param location The region name which the operation will lookup into.
   * @param operationId The target operation Id.
   * @param options The options parameters.
   */
  listOperationResults(
    location: string,
    operationId: string,
    options?: ServersListOperationResultsOptionalParams
  ): Promise<void>;
  /**
   * List the status of operation.
   * @param location The region name which the operation will lookup into.
   * @param operationId The target operation Id.
   * @param options The options parameters.
   */
  listOperationStatuses(
    location: string,
    operationId: string,
    options?: ServersListOperationStatusesOptionalParams
  ): Promise<ServersListOperationStatusesResponse>;
}
