/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  NginxDeploymentApiKeyResponse,
  ApiKeysListOptionalParams,
  ApiKeysCreateOrUpdateOptionalParams,
  ApiKeysCreateOrUpdateResponse,
  ApiKeysDeleteOptionalParams,
  ApiKeysGetOptionalParams,
  ApiKeysGetResponse,
} from "../models/index.js";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a ApiKeys. */
export interface ApiKeys {
  /**
   * List all API Keys of the given Nginx deployment
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param deploymentName The name of targeted NGINX deployment
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    deploymentName: string,
    options?: ApiKeysListOptionalParams,
  ): PagedAsyncIterableIterator<NginxDeploymentApiKeyResponse>;
  /**
   * Create or update an API Key for the Nginx deployment in order to access the dataplane API endpoint
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param deploymentName The name of targeted NGINX deployment
   * @param apiKeyName The resource name of the API key
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    deploymentName: string,
    apiKeyName: string,
    options?: ApiKeysCreateOrUpdateOptionalParams,
  ): Promise<ApiKeysCreateOrUpdateResponse>;
  /**
   * Delete API key for Nginx deployment
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param deploymentName The name of targeted NGINX deployment
   * @param apiKeyName The resource name of the API key
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    deploymentName: string,
    apiKeyName: string,
    options?: ApiKeysDeleteOptionalParams,
  ): Promise<void>;
  /**
   * Get the specified API Key of the given Nginx deployment
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param deploymentName The name of targeted NGINX deployment
   * @param apiKeyName The resource name of the API key
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    deploymentName: string,
    apiKeyName: string,
    options?: ApiKeysGetOptionalParams,
  ): Promise<ApiKeysGetResponse>;
}
