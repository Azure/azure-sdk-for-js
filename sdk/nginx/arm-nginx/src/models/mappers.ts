/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export const NginxDeploymentApiKeyRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NginxDeploymentApiKeyRequest",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "NginxDeploymentApiKeyRequestProperties",
        },
      },
    },
  },
};

export const NginxDeploymentApiKeyRequestProperties: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "NginxDeploymentApiKeyRequestProperties",
      modelProperties: {
        secretText: {
          serializedName: "secretText",
          type: {
            name: "String",
          },
        },
        endDateTime: {
          serializedName: "endDateTime",
          type: {
            name: "DateTime",
          },
        },
      },
    },
  };

export const NginxDeploymentApiKeyResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NginxDeploymentApiKeyResponse",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "NginxDeploymentApiKeyResponseProperties",
        },
      },
    },
  },
};

export const NginxDeploymentApiKeyResponseProperties: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "NginxDeploymentApiKeyResponseProperties",
      modelProperties: {
        hint: {
          serializedName: "hint",
          readOnly: true,
          type: {
            name: "String",
          },
        },
        endDateTime: {
          serializedName: "endDateTime",
          type: {
            name: "DateTime",
          },
        },
      },
    },
  };

export const ErrorResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorDetail",
        },
      },
    },
  },
};

export const ErrorDetail: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorDetail",
    modelProperties: {
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      target: {
        serializedName: "target",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      details: {
        serializedName: "details",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorDetail",
            },
          },
        },
      },
      additionalInfo: {
        serializedName: "additionalInfo",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorAdditionalInfo",
            },
          },
        },
      },
    },
  },
};

export const ErrorAdditionalInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorAdditionalInfo",
    modelProperties: {
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      info: {
        serializedName: "info",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } },
        },
      },
    },
  },
};

export const NginxDeploymentApiKeyListResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NginxDeploymentApiKeyListResponse",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "NginxDeploymentApiKeyResponse",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const NginxCertificate: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NginxCertificate",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "NginxCertificateProperties",
        },
      },
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData",
        },
      },
    },
  },
};

export const NginxCertificateProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NginxCertificateProperties",
    modelProperties: {
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      keyVirtualPath: {
        serializedName: "keyVirtualPath",
        type: {
          name: "String",
        },
      },
      certificateVirtualPath: {
        serializedName: "certificateVirtualPath",
        type: {
          name: "String",
        },
      },
      keyVaultSecretId: {
        serializedName: "keyVaultSecretId",
        type: {
          name: "String",
        },
      },
      sha1Thumbprint: {
        serializedName: "sha1Thumbprint",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      keyVaultSecretVersion: {
        serializedName: "keyVaultSecretVersion",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      keyVaultSecretCreated: {
        serializedName: "keyVaultSecretCreated",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      certificateError: {
        serializedName: "certificateError",
        type: {
          name: "Composite",
          className: "NginxCertificateErrorResponseBody",
        },
      },
    },
  },
};

export const NginxCertificateErrorResponseBody: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NginxCertificateErrorResponseBody",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String",
        },
      },
      message: {
        serializedName: "message",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SystemData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SystemData",
    modelProperties: {
      createdBy: {
        serializedName: "createdBy",
        type: {
          name: "String",
        },
      },
      createdByType: {
        serializedName: "createdByType",
        type: {
          name: "String",
        },
      },
      createdAt: {
        serializedName: "createdAt",
        type: {
          name: "DateTime",
        },
      },
      lastModifiedBy: {
        serializedName: "lastModifiedBy",
        type: {
          name: "String",
        },
      },
      lastModifiedByType: {
        serializedName: "lastModifiedByType",
        type: {
          name: "String",
        },
      },
      lastModifiedAt: {
        serializedName: "lastModifiedAt",
        type: {
          name: "DateTime",
        },
      },
    },
  },
};

export const NginxCertificateListResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NginxCertificateListResponse",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "NginxCertificate",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const NginxConfigurationListResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NginxConfigurationListResponse",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "NginxConfigurationResponse",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const NginxConfigurationResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NginxConfigurationResponse",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "NginxConfigurationResponseProperties",
        },
      },
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData",
        },
      },
    },
  },
};

export const NginxConfigurationResponseProperties: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "NginxConfigurationResponseProperties",
      modelProperties: {
        provisioningState: {
          serializedName: "provisioningState",
          readOnly: true,
          type: {
            name: "String",
          },
        },
        files: {
          serializedName: "files",
          type: {
            name: "Sequence",
            element: {
              type: {
                name: "Composite",
                className: "NginxConfigurationFile",
              },
            },
          },
        },
        protectedFiles: {
          serializedName: "protectedFiles",
          type: {
            name: "Sequence",
            element: {
              type: {
                name: "Composite",
                className: "NginxConfigurationProtectedFileResponse",
              },
            },
          },
        },
        package: {
          serializedName: "package",
          type: {
            name: "Composite",
            className: "NginxConfigurationPackage",
          },
        },
        rootFile: {
          serializedName: "rootFile",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const NginxConfigurationFile: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NginxConfigurationFile",
    modelProperties: {
      content: {
        serializedName: "content",
        type: {
          name: "String",
        },
      },
      virtualPath: {
        serializedName: "virtualPath",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const NginxConfigurationProtectedFileResponse: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "NginxConfigurationProtectedFileResponse",
      modelProperties: {
        virtualPath: {
          serializedName: "virtualPath",
          type: {
            name: "String",
          },
        },
        contentHash: {
          serializedName: "contentHash",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const NginxConfigurationPackage: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NginxConfigurationPackage",
    modelProperties: {
      data: {
        serializedName: "data",
        type: {
          name: "String",
        },
      },
      protectedFiles: {
        serializedName: "protectedFiles",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
    },
  },
};

export const NginxConfigurationRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NginxConfigurationRequest",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "NginxConfigurationRequestProperties",
        },
      },
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData",
        },
      },
    },
  },
};

export const NginxConfigurationRequestProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NginxConfigurationRequestProperties",
    modelProperties: {
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      files: {
        serializedName: "files",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "NginxConfigurationFile",
            },
          },
        },
      },
      protectedFiles: {
        serializedName: "protectedFiles",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "NginxConfigurationProtectedFileRequest",
            },
          },
        },
      },
      package: {
        serializedName: "package",
        type: {
          name: "Composite",
          className: "NginxConfigurationPackage",
        },
      },
      rootFile: {
        serializedName: "rootFile",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const NginxConfigurationProtectedFileRequest: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "NginxConfigurationProtectedFileRequest",
      modelProperties: {
        content: {
          serializedName: "content",
          type: {
            name: "String",
          },
        },
        virtualPath: {
          serializedName: "virtualPath",
          type: {
            name: "String",
          },
        },
        contentHash: {
          serializedName: "contentHash",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const AnalysisCreate: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AnalysisCreate",
    modelProperties: {
      config: {
        serializedName: "config",
        type: {
          name: "Composite",
          className: "AnalysisCreateConfig",
        },
      },
    },
  },
};

export const AnalysisCreateConfig: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AnalysisCreateConfig",
    modelProperties: {
      rootFile: {
        serializedName: "rootFile",
        type: {
          name: "String",
        },
      },
      files: {
        serializedName: "files",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "NginxConfigurationFile",
            },
          },
        },
      },
      protectedFiles: {
        serializedName: "protectedFiles",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "NginxConfigurationProtectedFileRequest",
            },
          },
        },
      },
      package: {
        serializedName: "package",
        type: {
          name: "Composite",
          className: "NginxConfigurationPackage",
        },
      },
    },
  },
};

export const AnalysisResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AnalysisResult",
    modelProperties: {
      status: {
        serializedName: "status",
        required: true,
        type: {
          name: "String",
        },
      },
      data: {
        serializedName: "data",
        type: {
          name: "Composite",
          className: "AnalysisResultData",
        },
      },
    },
  },
};

export const AnalysisResultData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AnalysisResultData",
    modelProperties: {
      errors: {
        serializedName: "errors",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AnalysisDiagnostic",
            },
          },
        },
      },
      diagnostics: {
        serializedName: "diagnostics",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DiagnosticItem",
            },
          },
        },
      },
    },
  },
};

export const AnalysisDiagnostic: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AnalysisDiagnostic",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String",
        },
      },
      directive: {
        serializedName: "directive",
        required: true,
        type: {
          name: "String",
        },
      },
      description: {
        serializedName: "description",
        required: true,
        type: {
          name: "String",
        },
      },
      file: {
        serializedName: "file",
        required: true,
        type: {
          name: "String",
        },
      },
      line: {
        serializedName: "line",
        required: true,
        type: {
          name: "Number",
        },
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String",
        },
      },
      rule: {
        serializedName: "rule",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const DiagnosticItem: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DiagnosticItem",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String",
        },
      },
      directive: {
        serializedName: "directive",
        required: true,
        type: {
          name: "String",
        },
      },
      description: {
        serializedName: "description",
        required: true,
        type: {
          name: "String",
        },
      },
      file: {
        serializedName: "file",
        required: true,
        type: {
          name: "String",
        },
      },
      line: {
        serializedName: "line",
        required: true,
        type: {
          name: "Number",
        },
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String",
        },
      },
      rule: {
        serializedName: "rule",
        required: true,
        type: {
          name: "String",
        },
      },
      level: {
        serializedName: "level",
        required: true,
        type: {
          name: "String",
        },
      },
      category: {
        serializedName: "category",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const NginxDeployment: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NginxDeployment",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "IdentityProperties",
        },
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "NginxDeploymentProperties",
        },
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "ResourceSku",
        },
      },
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData",
        },
      },
    },
  },
};

export const IdentityProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IdentityProperties",
    modelProperties: {
      principalId: {
        serializedName: "principalId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      tenantId: {
        serializedName: "tenantId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        type: {
          name: "String",
        },
      },
      userAssignedIdentities: {
        serializedName: "userAssignedIdentities",
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Composite", className: "UserIdentityProperties" },
          },
        },
      },
    },
  },
};

export const UserIdentityProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UserIdentityProperties",
    modelProperties: {
      principalId: {
        serializedName: "principalId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      clientId: {
        serializedName: "clientId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const NginxDeploymentProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NginxDeploymentProperties",
    modelProperties: {
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      nginxVersion: {
        serializedName: "nginxVersion",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      networkProfile: {
        serializedName: "networkProfile",
        type: {
          name: "Composite",
          className: "NginxNetworkProfile",
        },
      },
      ipAddress: {
        serializedName: "ipAddress",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      enableDiagnosticsSupport: {
        serializedName: "enableDiagnosticsSupport",
        type: {
          name: "Boolean",
        },
      },
      logging: {
        serializedName: "logging",
        type: {
          name: "Composite",
          className: "NginxLogging",
        },
      },
      scalingProperties: {
        serializedName: "scalingProperties",
        type: {
          name: "Composite",
          className: "NginxDeploymentScalingProperties",
        },
      },
      autoUpgradeProfile: {
        serializedName: "autoUpgradeProfile",
        type: {
          name: "Composite",
          className: "AutoUpgradeProfile",
        },
      },
      userProfile: {
        serializedName: "userProfile",
        type: {
          name: "Composite",
          className: "NginxDeploymentUserProfile",
        },
      },
      nginxAppProtect: {
        serializedName: "nginxAppProtect",
        type: {
          name: "Composite",
          className: "NginxDeploymentPropertiesNginxAppProtect",
        },
      },
      dataplaneApiEndpoint: {
        serializedName: "dataplaneApiEndpoint",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const NginxNetworkProfile: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NginxNetworkProfile",
    modelProperties: {
      frontEndIPConfiguration: {
        serializedName: "frontEndIPConfiguration",
        type: {
          name: "Composite",
          className: "NginxFrontendIPConfiguration",
        },
      },
      networkInterfaceConfiguration: {
        serializedName: "networkInterfaceConfiguration",
        type: {
          name: "Composite",
          className: "NginxNetworkInterfaceConfiguration",
        },
      },
    },
  },
};

export const NginxFrontendIPConfiguration: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NginxFrontendIPConfiguration",
    modelProperties: {
      publicIPAddresses: {
        serializedName: "publicIPAddresses",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "NginxPublicIPAddress",
            },
          },
        },
      },
      privateIPAddresses: {
        serializedName: "privateIPAddresses",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "NginxPrivateIPAddress",
            },
          },
        },
      },
    },
  },
};

export const NginxPublicIPAddress: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NginxPublicIPAddress",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const NginxPrivateIPAddress: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NginxPrivateIPAddress",
    modelProperties: {
      privateIPAddress: {
        serializedName: "privateIPAddress",
        type: {
          name: "String",
        },
      },
      privateIPAllocationMethod: {
        serializedName: "privateIPAllocationMethod",
        type: {
          name: "String",
        },
      },
      subnetId: {
        serializedName: "subnetId",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const NginxNetworkInterfaceConfiguration: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NginxNetworkInterfaceConfiguration",
    modelProperties: {
      subnetId: {
        serializedName: "subnetId",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const NginxLogging: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NginxLogging",
    modelProperties: {
      storageAccount: {
        serializedName: "storageAccount",
        type: {
          name: "Composite",
          className: "NginxStorageAccount",
        },
      },
    },
  },
};

export const NginxStorageAccount: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NginxStorageAccount",
    modelProperties: {
      accountName: {
        serializedName: "accountName",
        type: {
          name: "String",
        },
      },
      containerName: {
        serializedName: "containerName",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const NginxDeploymentScalingProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NginxDeploymentScalingProperties",
    modelProperties: {
      capacity: {
        serializedName: "capacity",
        type: {
          name: "Number",
        },
      },
      profiles: {
        serializedName: "autoScaleSettings.profiles",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ScaleProfile",
            },
          },
        },
      },
    },
  },
};

export const ScaleProfile: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ScaleProfile",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String",
        },
      },
      capacity: {
        serializedName: "capacity",
        type: {
          name: "Composite",
          className: "ScaleProfileCapacity",
        },
      },
    },
  },
};

export const ScaleProfileCapacity: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ScaleProfileCapacity",
    modelProperties: {
      min: {
        constraints: {
          InclusiveMinimum: 0,
        },
        serializedName: "min",
        required: true,
        type: {
          name: "Number",
        },
      },
      max: {
        constraints: {
          InclusiveMinimum: 0,
        },
        serializedName: "max",
        required: true,
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const AutoUpgradeProfile: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AutoUpgradeProfile",
    modelProperties: {
      upgradeChannel: {
        serializedName: "upgradeChannel",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const NginxDeploymentUserProfile: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NginxDeploymentUserProfile",
    modelProperties: {
      preferredEmail: {
        constraints: {
          Pattern: new RegExp(
            "^$|^[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\.)+[A-Za-z]{2,}$",
          ),
        },
        serializedName: "preferredEmail",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const NginxDeploymentPropertiesNginxAppProtect: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "NginxDeploymentPropertiesNginxAppProtect",
      modelProperties: {
        webApplicationFirewallSettings: {
          serializedName: "webApplicationFirewallSettings",
          type: {
            name: "Composite",
            className: "WebApplicationFirewallSettings",
          },
        },
        webApplicationFirewallStatus: {
          serializedName: "webApplicationFirewallStatus",
          type: {
            name: "Composite",
            className: "WebApplicationFirewallStatus",
          },
        },
      },
    },
  };

export const WebApplicationFirewallSettings: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebApplicationFirewallSettings",
    modelProperties: {
      activationState: {
        serializedName: "activationState",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const WebApplicationFirewallStatus: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebApplicationFirewallStatus",
    modelProperties: {
      attackSignaturesPackage: {
        serializedName: "attackSignaturesPackage",
        type: {
          name: "Composite",
          className: "WebApplicationFirewallPackage",
        },
      },
      botSignaturesPackage: {
        serializedName: "botSignaturesPackage",
        type: {
          name: "Composite",
          className: "WebApplicationFirewallPackage",
        },
      },
      threatCampaignsPackage: {
        serializedName: "threatCampaignsPackage",
        type: {
          name: "Composite",
          className: "WebApplicationFirewallPackage",
        },
      },
      componentVersions: {
        serializedName: "componentVersions",
        type: {
          name: "Composite",
          className: "WebApplicationFirewallComponentVersions",
        },
      },
    },
  },
};

export const WebApplicationFirewallPackage: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WebApplicationFirewallPackage",
    modelProperties: {
      version: {
        serializedName: "version",
        required: true,
        type: {
          name: "String",
        },
      },
      revisionDatetime: {
        serializedName: "revisionDatetime",
        required: true,
        type: {
          name: "DateTime",
        },
      },
    },
  },
};

export const WebApplicationFirewallComponentVersions: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "WebApplicationFirewallComponentVersions",
      modelProperties: {
        wafEngineVersion: {
          serializedName: "wafEngineVersion",
          required: true,
          type: {
            name: "String",
          },
        },
        wafNginxVersion: {
          serializedName: "wafNginxVersion",
          required: true,
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const ResourceSku: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceSku",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const NginxDeploymentUpdateParameters: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NginxDeploymentUpdateParameters",
    modelProperties: {
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "IdentityProperties",
        },
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "ResourceSku",
        },
      },
      location: {
        serializedName: "location",
        type: {
          name: "String",
        },
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "NginxDeploymentUpdateProperties",
        },
      },
    },
  },
};

export const NginxDeploymentUpdateProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NginxDeploymentUpdateProperties",
    modelProperties: {
      enableDiagnosticsSupport: {
        serializedName: "enableDiagnosticsSupport",
        type: {
          name: "Boolean",
        },
      },
      logging: {
        serializedName: "logging",
        type: {
          name: "Composite",
          className: "NginxLogging",
        },
      },
      scalingProperties: {
        serializedName: "scalingProperties",
        type: {
          name: "Composite",
          className: "NginxDeploymentScalingProperties",
        },
      },
      userProfile: {
        serializedName: "userProfile",
        type: {
          name: "Composite",
          className: "NginxDeploymentUserProfile",
        },
      },
      networkProfile: {
        serializedName: "networkProfile",
        type: {
          name: "Composite",
          className: "NginxNetworkProfile",
        },
      },
      autoUpgradeProfile: {
        serializedName: "autoUpgradeProfile",
        type: {
          name: "Composite",
          className: "AutoUpgradeProfile",
        },
      },
      nginxAppProtect: {
        serializedName: "nginxAppProtect",
        type: {
          name: "Composite",
          className: "NginxDeploymentUpdatePropertiesNginxAppProtect",
        },
      },
    },
  },
};

export const NginxDeploymentUpdatePropertiesNginxAppProtect: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "NginxDeploymentUpdatePropertiesNginxAppProtect",
      modelProperties: {
        webApplicationFirewallSettings: {
          serializedName: "webApplicationFirewallSettings",
          type: {
            name: "Composite",
            className: "WebApplicationFirewallSettings",
          },
        },
      },
    },
  };

export const NginxDeploymentListResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NginxDeploymentListResponse",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "NginxDeployment",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const OperationListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "OperationResult",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const OperationResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationResult",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String",
        },
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay",
        },
      },
      isDataAction: {
        serializedName: "isDataAction",
        type: {
          name: "Boolean",
        },
      },
    },
  },
};

export const OperationDisplay: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        serializedName: "provider",
        type: {
          name: "String",
        },
      },
      resource: {
        serializedName: "resource",
        type: {
          name: "String",
        },
      },
      operation: {
        serializedName: "operation",
        type: {
          name: "String",
        },
      },
      description: {
        serializedName: "description",
        type: {
          name: "String",
        },
      },
    },
  },
};
