/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/operationsResultsMappers";
import * as Parameters from "../models/parameters";
import { KustoManagementClientContext } from "../kustoManagementClientContext";

/** Class representing a OperationsResults. */
export class OperationsResults {
  private readonly client: KustoManagementClientContext;

  /**
   * Create a OperationsResults.
   * @param {KustoManagementClientContext} client Reference to the service client.
   */
  constructor(client: KustoManagementClientContext) {
    this.client = client;
  }

  /**
   * Returns operation results.
   * @param location Azure location (region) name.
   * @param operationId The Guid of the operation ID
   * @param [options] The optional parameters
   * @returns Promise<Models.OperationsResultsGetResponse>
   */
  get(
    location: string,
    operationId: string,
    options?: msRest.RequestOptionsBase
  ): Promise<Models.OperationsResultsGetResponse>;
  /**
   * @param location Azure location (region) name.
   * @param operationId The Guid of the operation ID
   * @param callback The callback
   */
  get(
    location: string,
    operationId: string,
    callback: msRest.ServiceCallback<Models.OperationResult>
  ): void;
  /**
   * @param location Azure location (region) name.
   * @param operationId The Guid of the operation ID
   * @param options The optional parameters
   * @param callback The callback
   */
  get(
    location: string,
    operationId: string,
    options: msRest.RequestOptionsBase,
    callback: msRest.ServiceCallback<Models.OperationResult>
  ): void;
  get(
    location: string,
    operationId: string,
    options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.OperationResult>,
    callback?: msRest.ServiceCallback<Models.OperationResult>
  ): Promise<Models.OperationsResultsGetResponse> {
    return this.client.sendOperationRequest(
      {
        location,
        operationId,
        options
      },
      getOperationSpec,
      callback
    ) as Promise<Models.OperationsResultsGetResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path:
    "subscriptions/{subscriptionId}/providers/Microsoft.Kusto/locations/{location}/operationresults/{operationId}",
  urlParameters: [Parameters.subscriptionId, Parameters.location, Parameters.operationId],
  queryParameters: [Parameters.apiVersion],
  headerParameters: [Parameters.acceptLanguage],
  responses: {
    200: {
      bodyMapper: Mappers.OperationResult
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};
