/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  Script,
  ScriptsListByDatabaseOptionalParams,
  ScriptsGetOptionalParams,
  ScriptsGetResponse,
  ScriptsCreateOrUpdateOptionalParams,
  ScriptsCreateOrUpdateResponse,
  ScriptsUpdateOptionalParams,
  ScriptsUpdateResponse,
  ScriptsDeleteOptionalParams,
  ScriptCheckNameRequest,
  ScriptsCheckNameAvailabilityOptionalParams,
  ScriptsCheckNameAvailabilityResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Scripts. */
export interface Scripts {
  /**
   * Returns the list of database scripts for given database.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param clusterName The name of the Kusto cluster.
   * @param databaseName The name of the database in the Kusto cluster.
   * @param options The options parameters.
   */
  listByDatabase(
    resourceGroupName: string,
    clusterName: string,
    databaseName: string,
    options?: ScriptsListByDatabaseOptionalParams
  ): PagedAsyncIterableIterator<Script>;
  /**
   * Gets a Kusto cluster database script.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param clusterName The name of the Kusto cluster.
   * @param databaseName The name of the database in the Kusto cluster.
   * @param scriptName The name of the Kusto database script.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    clusterName: string,
    databaseName: string,
    scriptName: string,
    options?: ScriptsGetOptionalParams
  ): Promise<ScriptsGetResponse>;
  /**
   * Creates a Kusto database script.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param clusterName The name of the Kusto cluster.
   * @param databaseName The name of the database in the Kusto cluster.
   * @param scriptName The name of the Kusto database script.
   * @param parameters The Kusto Script parameters contains the KQL to run.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    clusterName: string,
    databaseName: string,
    scriptName: string,
    parameters: Script,
    options?: ScriptsCreateOrUpdateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<ScriptsCreateOrUpdateResponse>,
      ScriptsCreateOrUpdateResponse
    >
  >;
  /**
   * Creates a Kusto database script.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param clusterName The name of the Kusto cluster.
   * @param databaseName The name of the database in the Kusto cluster.
   * @param scriptName The name of the Kusto database script.
   * @param parameters The Kusto Script parameters contains the KQL to run.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    clusterName: string,
    databaseName: string,
    scriptName: string,
    parameters: Script,
    options?: ScriptsCreateOrUpdateOptionalParams
  ): Promise<ScriptsCreateOrUpdateResponse>;
  /**
   * Updates a database script.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param clusterName The name of the Kusto cluster.
   * @param databaseName The name of the database in the Kusto cluster.
   * @param scriptName The name of the Kusto database script.
   * @param parameters The Kusto Script parameters contains to the KQL to run.
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    clusterName: string,
    databaseName: string,
    scriptName: string,
    parameters: Script,
    options?: ScriptsUpdateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<ScriptsUpdateResponse>,
      ScriptsUpdateResponse
    >
  >;
  /**
   * Updates a database script.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param clusterName The name of the Kusto cluster.
   * @param databaseName The name of the database in the Kusto cluster.
   * @param scriptName The name of the Kusto database script.
   * @param parameters The Kusto Script parameters contains to the KQL to run.
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    clusterName: string,
    databaseName: string,
    scriptName: string,
    parameters: Script,
    options?: ScriptsUpdateOptionalParams
  ): Promise<ScriptsUpdateResponse>;
  /**
   * Deletes a Kusto database script.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param clusterName The name of the Kusto cluster.
   * @param databaseName The name of the database in the Kusto cluster.
   * @param scriptName The name of the Kusto database script.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    clusterName: string,
    databaseName: string,
    scriptName: string,
    options?: ScriptsDeleteOptionalParams
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Deletes a Kusto database script.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param clusterName The name of the Kusto cluster.
   * @param databaseName The name of the database in the Kusto cluster.
   * @param scriptName The name of the Kusto database script.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    clusterName: string,
    databaseName: string,
    scriptName: string,
    options?: ScriptsDeleteOptionalParams
  ): Promise<void>;
  /**
   * Checks that the script name is valid and is not already in use.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param clusterName The name of the Kusto cluster.
   * @param databaseName The name of the database in the Kusto cluster.
   * @param scriptName The name of the script.
   * @param options The options parameters.
   */
  checkNameAvailability(
    resourceGroupName: string,
    clusterName: string,
    databaseName: string,
    scriptName: ScriptCheckNameRequest,
    options?: ScriptsCheckNameAvailabilityOptionalParams
  ): Promise<ScriptsCheckNameAvailabilityResponse>;
}
