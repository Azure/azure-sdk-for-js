/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  FollowerDatabaseDefinition,
  ClustersListFollowerDatabasesOptionalParams,
  Cluster,
  ClustersListByResourceGroupOptionalParams,
  ClustersListOptionalParams,
  SkuDescription,
  ClustersListSkusOptionalParams,
  AzureResourceSku,
  ClustersListSkusByResourceOptionalParams,
  OutboundNetworkDependenciesEndpoint,
  ClustersListOutboundNetworkDependenciesEndpointsOptionalParams,
  LanguageExtension,
  ClustersListLanguageExtensionsOptionalParams,
  ClustersGetOptionalParams,
  ClustersGetResponse,
  ClustersCreateOrUpdateOptionalParams,
  ClustersCreateOrUpdateResponse,
  ClusterUpdate,
  ClustersUpdateOptionalParams,
  ClustersUpdateResponse,
  ClustersDeleteOptionalParams,
  ClustersStopOptionalParams,
  ClustersStartOptionalParams,
  ClusterMigrateRequest,
  ClustersMigrateOptionalParams,
  ClustersDetachFollowerDatabasesOptionalParams,
  ClustersDiagnoseVirtualNetworkOptionalParams,
  ClustersDiagnoseVirtualNetworkResponse,
  ClusterCheckNameRequest,
  ClustersCheckNameAvailabilityOptionalParams,
  ClustersCheckNameAvailabilityResponse,
  LanguageExtensionsList,
  ClustersAddLanguageExtensionsOptionalParams,
  ClustersRemoveLanguageExtensionsOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Clusters. */
export interface Clusters {
  /**
   * Returns a list of databases that are owned by this cluster and were followed by another cluster.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param clusterName The name of the Kusto cluster.
   * @param options The options parameters.
   */
  listFollowerDatabases(
    resourceGroupName: string,
    clusterName: string,
    options?: ClustersListFollowerDatabasesOptionalParams
  ): PagedAsyncIterableIterator<FollowerDatabaseDefinition>;
  /**
   * Lists all Kusto clusters within a resource group.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: ClustersListByResourceGroupOptionalParams
  ): PagedAsyncIterableIterator<Cluster>;
  /**
   * Lists all Kusto clusters within a subscription.
   * @param options The options parameters.
   */
  list(
    options?: ClustersListOptionalParams
  ): PagedAsyncIterableIterator<Cluster>;
  /**
   * Lists eligible SKUs for Kusto resource provider.
   * @param options The options parameters.
   */
  listSkus(
    options?: ClustersListSkusOptionalParams
  ): PagedAsyncIterableIterator<SkuDescription>;
  /**
   * Returns the SKUs available for the provided resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param clusterName The name of the Kusto cluster.
   * @param options The options parameters.
   */
  listSkusByResource(
    resourceGroupName: string,
    clusterName: string,
    options?: ClustersListSkusByResourceOptionalParams
  ): PagedAsyncIterableIterator<AzureResourceSku>;
  /**
   * Gets the network endpoints of all outbound dependencies of a Kusto cluster
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param clusterName The name of the Kusto cluster.
   * @param options The options parameters.
   */
  listOutboundNetworkDependenciesEndpoints(
    resourceGroupName: string,
    clusterName: string,
    options?: ClustersListOutboundNetworkDependenciesEndpointsOptionalParams
  ): PagedAsyncIterableIterator<OutboundNetworkDependenciesEndpoint>;
  /**
   * Returns a list of language extensions that can run within KQL queries.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param clusterName The name of the Kusto cluster.
   * @param options The options parameters.
   */
  listLanguageExtensions(
    resourceGroupName: string,
    clusterName: string,
    options?: ClustersListLanguageExtensionsOptionalParams
  ): PagedAsyncIterableIterator<LanguageExtension>;
  /**
   * Gets a Kusto cluster.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param clusterName The name of the Kusto cluster.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    clusterName: string,
    options?: ClustersGetOptionalParams
  ): Promise<ClustersGetResponse>;
  /**
   * Create or update a Kusto cluster.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param clusterName The name of the Kusto cluster.
   * @param parameters The Kusto cluster parameters supplied to the CreateOrUpdate operation.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    clusterName: string,
    parameters: Cluster,
    options?: ClustersCreateOrUpdateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<ClustersCreateOrUpdateResponse>,
      ClustersCreateOrUpdateResponse
    >
  >;
  /**
   * Create or update a Kusto cluster.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param clusterName The name of the Kusto cluster.
   * @param parameters The Kusto cluster parameters supplied to the CreateOrUpdate operation.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    clusterName: string,
    parameters: Cluster,
    options?: ClustersCreateOrUpdateOptionalParams
  ): Promise<ClustersCreateOrUpdateResponse>;
  /**
   * Update a Kusto cluster.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param clusterName The name of the Kusto cluster.
   * @param parameters The Kusto cluster parameters supplied to the Update operation.
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    clusterName: string,
    parameters: ClusterUpdate,
    options?: ClustersUpdateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<ClustersUpdateResponse>,
      ClustersUpdateResponse
    >
  >;
  /**
   * Update a Kusto cluster.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param clusterName The name of the Kusto cluster.
   * @param parameters The Kusto cluster parameters supplied to the Update operation.
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    clusterName: string,
    parameters: ClusterUpdate,
    options?: ClustersUpdateOptionalParams
  ): Promise<ClustersUpdateResponse>;
  /**
   * Deletes a Kusto cluster.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param clusterName The name of the Kusto cluster.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    clusterName: string,
    options?: ClustersDeleteOptionalParams
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Deletes a Kusto cluster.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param clusterName The name of the Kusto cluster.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    clusterName: string,
    options?: ClustersDeleteOptionalParams
  ): Promise<void>;
  /**
   * Stops a Kusto cluster.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param clusterName The name of the Kusto cluster.
   * @param options The options parameters.
   */
  beginStop(
    resourceGroupName: string,
    clusterName: string,
    options?: ClustersStopOptionalParams
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Stops a Kusto cluster.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param clusterName The name of the Kusto cluster.
   * @param options The options parameters.
   */
  beginStopAndWait(
    resourceGroupName: string,
    clusterName: string,
    options?: ClustersStopOptionalParams
  ): Promise<void>;
  /**
   * Starts a Kusto cluster.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param clusterName The name of the Kusto cluster.
   * @param options The options parameters.
   */
  beginStart(
    resourceGroupName: string,
    clusterName: string,
    options?: ClustersStartOptionalParams
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Starts a Kusto cluster.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param clusterName The name of the Kusto cluster.
   * @param options The options parameters.
   */
  beginStartAndWait(
    resourceGroupName: string,
    clusterName: string,
    options?: ClustersStartOptionalParams
  ): Promise<void>;
  /**
   * Migrate data from a Kusto cluster to another cluster.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param clusterName The name of the Kusto cluster.
   * @param clusterMigrateRequest The cluster migrate request parameters.
   * @param options The options parameters.
   */
  beginMigrate(
    resourceGroupName: string,
    clusterName: string,
    clusterMigrateRequest: ClusterMigrateRequest,
    options?: ClustersMigrateOptionalParams
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Migrate data from a Kusto cluster to another cluster.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param clusterName The name of the Kusto cluster.
   * @param clusterMigrateRequest The cluster migrate request parameters.
   * @param options The options parameters.
   */
  beginMigrateAndWait(
    resourceGroupName: string,
    clusterName: string,
    clusterMigrateRequest: ClusterMigrateRequest,
    options?: ClustersMigrateOptionalParams
  ): Promise<void>;
  /**
   * Detaches all followers of a database owned by this cluster.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param clusterName The name of the Kusto cluster.
   * @param followerDatabaseToRemove The follower databases properties to remove.
   * @param options The options parameters.
   */
  beginDetachFollowerDatabases(
    resourceGroupName: string,
    clusterName: string,
    followerDatabaseToRemove: FollowerDatabaseDefinition,
    options?: ClustersDetachFollowerDatabasesOptionalParams
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Detaches all followers of a database owned by this cluster.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param clusterName The name of the Kusto cluster.
   * @param followerDatabaseToRemove The follower databases properties to remove.
   * @param options The options parameters.
   */
  beginDetachFollowerDatabasesAndWait(
    resourceGroupName: string,
    clusterName: string,
    followerDatabaseToRemove: FollowerDatabaseDefinition,
    options?: ClustersDetachFollowerDatabasesOptionalParams
  ): Promise<void>;
  /**
   * Diagnoses network connectivity status for external resources on which the service is dependent on.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param clusterName The name of the Kusto cluster.
   * @param options The options parameters.
   */
  beginDiagnoseVirtualNetwork(
    resourceGroupName: string,
    clusterName: string,
    options?: ClustersDiagnoseVirtualNetworkOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<ClustersDiagnoseVirtualNetworkResponse>,
      ClustersDiagnoseVirtualNetworkResponse
    >
  >;
  /**
   * Diagnoses network connectivity status for external resources on which the service is dependent on.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param clusterName The name of the Kusto cluster.
   * @param options The options parameters.
   */
  beginDiagnoseVirtualNetworkAndWait(
    resourceGroupName: string,
    clusterName: string,
    options?: ClustersDiagnoseVirtualNetworkOptionalParams
  ): Promise<ClustersDiagnoseVirtualNetworkResponse>;
  /**
   * Checks that the cluster name is valid and is not already in use.
   * @param location The name of Azure region.
   * @param clusterName The name of the cluster.
   * @param options The options parameters.
   */
  checkNameAvailability(
    location: string,
    clusterName: ClusterCheckNameRequest,
    options?: ClustersCheckNameAvailabilityOptionalParams
  ): Promise<ClustersCheckNameAvailabilityResponse>;
  /**
   * Add a list of language extensions that can run within KQL queries.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param clusterName The name of the Kusto cluster.
   * @param languageExtensionsToAdd The language extensions to add.
   * @param options The options parameters.
   */
  beginAddLanguageExtensions(
    resourceGroupName: string,
    clusterName: string,
    languageExtensionsToAdd: LanguageExtensionsList,
    options?: ClustersAddLanguageExtensionsOptionalParams
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Add a list of language extensions that can run within KQL queries.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param clusterName The name of the Kusto cluster.
   * @param languageExtensionsToAdd The language extensions to add.
   * @param options The options parameters.
   */
  beginAddLanguageExtensionsAndWait(
    resourceGroupName: string,
    clusterName: string,
    languageExtensionsToAdd: LanguageExtensionsList,
    options?: ClustersAddLanguageExtensionsOptionalParams
  ): Promise<void>;
  /**
   * Remove a list of language extensions that can run within KQL queries.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param clusterName The name of the Kusto cluster.
   * @param languageExtensionsToRemove The language extensions to remove.
   * @param options The options parameters.
   */
  beginRemoveLanguageExtensions(
    resourceGroupName: string,
    clusterName: string,
    languageExtensionsToRemove: LanguageExtensionsList,
    options?: ClustersRemoveLanguageExtensionsOptionalParams
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Remove a list of language extensions that can run within KQL queries.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param clusterName The name of the Kusto cluster.
   * @param languageExtensionsToRemove The language extensions to remove.
   * @param options The options parameters.
   */
  beginRemoveLanguageExtensionsAndWait(
    resourceGroupName: string,
    clusterName: string,
    languageExtensionsToRemove: LanguageExtensionsList,
    options?: ClustersRemoveLanguageExtensionsOptionalParams
  ): Promise<void>;
}
