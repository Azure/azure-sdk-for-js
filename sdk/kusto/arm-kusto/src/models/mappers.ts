/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { CloudErrorMapper, BaseResourceMapper } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export const CloudError = CloudErrorMapper;
export const BaseResource = BaseResourceMapper;

export const TrustedExternalTenant: msRest.CompositeMapper = {
  serializedName: "TrustedExternalTenant",
  type: {
    name: "Composite",
    className: "TrustedExternalTenant",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OptimizedAutoscale: msRest.CompositeMapper = {
  serializedName: "OptimizedAutoscale",
  type: {
    name: "Composite",
    className: "OptimizedAutoscale",
    modelProperties: {
      version: {
        required: true,
        serializedName: "version",
        type: {
          name: "Number"
        }
      },
      isEnabled: {
        required: true,
        serializedName: "isEnabled",
        type: {
          name: "Boolean"
        }
      },
      minimum: {
        required: true,
        serializedName: "minimum",
        type: {
          name: "Number"
        }
      },
      maximum: {
        required: true,
        serializedName: "maximum",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const VirtualNetworkConfiguration: msRest.CompositeMapper = {
  serializedName: "VirtualNetworkConfiguration",
  type: {
    name: "Composite",
    className: "VirtualNetworkConfiguration",
    modelProperties: {
      subnetId: {
        required: true,
        serializedName: "subnetId",
        type: {
          name: "String"
        }
      },
      enginePublicIpId: {
        required: true,
        serializedName: "enginePublicIpId",
        type: {
          name: "String"
        }
      },
      dataManagementPublicIpId: {
        required: true,
        serializedName: "dataManagementPublicIpId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const KeyVaultProperties: msRest.CompositeMapper = {
  serializedName: "KeyVaultProperties",
  type: {
    name: "Composite",
    className: "KeyVaultProperties",
    modelProperties: {
      keyName: {
        required: true,
        serializedName: "keyName",
        type: {
          name: "String"
        }
      },
      keyVersion: {
        required: true,
        serializedName: "keyVersion",
        type: {
          name: "String"
        }
      },
      keyVaultUri: {
        required: true,
        serializedName: "keyVaultUri",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LanguageExtension: msRest.CompositeMapper = {
  serializedName: "LanguageExtension",
  type: {
    name: "Composite",
    className: "LanguageExtension",
    modelProperties: {
      languageExtensionName: {
        serializedName: "languageExtensionName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureSku: msRest.CompositeMapper = {
  serializedName: "AzureSku",
  type: {
    name: "Composite",
    className: "AzureSku",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      capacity: {
        serializedName: "capacity",
        type: {
          name: "Number"
        }
      },
      tier: {
        required: true,
        serializedName: "tier",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureCapacity: msRest.CompositeMapper = {
  serializedName: "AzureCapacity",
  type: {
    name: "Composite",
    className: "AzureCapacity",
    modelProperties: {
      scaleType: {
        required: true,
        serializedName: "scaleType",
        type: {
          name: "String"
        }
      },
      minimum: {
        required: true,
        serializedName: "minimum",
        type: {
          name: "Number"
        }
      },
      maximum: {
        required: true,
        serializedName: "maximum",
        type: {
          name: "Number"
        }
      },
      default: {
        required: true,
        serializedName: "default",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const AzureResourceSku: msRest.CompositeMapper = {
  serializedName: "AzureResourceSku",
  type: {
    name: "Composite",
    className: "AzureResourceSku",
    modelProperties: {
      resourceType: {
        serializedName: "resourceType",
        type: {
          name: "String"
        }
      },
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "AzureSku"
        }
      },
      capacity: {
        serializedName: "capacity",
        type: {
          name: "Composite",
          className: "AzureCapacity"
        }
      }
    }
  }
};

export const SkuLocationInfoItem: msRest.CompositeMapper = {
  serializedName: "SkuLocationInfoItem",
  type: {
    name: "Composite",
    className: "SkuLocationInfoItem",
    modelProperties: {
      location: {
        required: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      zones: {
        serializedName: "zones",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const SkuDescription: msRest.CompositeMapper = {
  serializedName: "SkuDescription",
  type: {
    name: "Composite",
    className: "SkuDescription",
    modelProperties: {
      resourceType: {
        readOnly: true,
        serializedName: "resourceType",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      tier: {
        readOnly: true,
        serializedName: "tier",
        type: {
          name: "String"
        }
      },
      locations: {
        readOnly: true,
        serializedName: "locations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      locationInfo: {
        readOnly: true,
        serializedName: "locationInfo",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SkuLocationInfoItem"
            }
          }
        }
      },
      restrictions: {
        readOnly: true,
        serializedName: "restrictions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Object"
            }
          }
        }
      }
    }
  }
};

export const DatabaseStatistics: msRest.CompositeMapper = {
  serializedName: "DatabaseStatistics",
  type: {
    name: "Composite",
    className: "DatabaseStatistics",
    modelProperties: {
      size: {
        serializedName: "size",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const IdentityUserAssignedIdentitiesValue: msRest.CompositeMapper = {
  serializedName: "Identity_userAssignedIdentitiesValue",
  type: {
    name: "Composite",
    className: "IdentityUserAssignedIdentitiesValue",
    modelProperties: {
      principalId: {
        readOnly: true,
        serializedName: "principalId",
        type: {
          name: "String"
        }
      },
      clientId: {
        readOnly: true,
        serializedName: "clientId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Identity: msRest.CompositeMapper = {
  serializedName: "Identity",
  type: {
    name: "Composite",
    className: "Identity",
    modelProperties: {
      principalId: {
        readOnly: true,
        serializedName: "principalId",
        type: {
          name: "String"
        }
      },
      tenantId: {
        readOnly: true,
        serializedName: "tenantId",
        type: {
          name: "String"
        }
      },
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "Enum",
          allowedValues: [
            "None",
            "SystemAssigned"
          ]
        }
      },
      userAssignedIdentities: {
        serializedName: "userAssignedIdentities",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className: "IdentityUserAssignedIdentitiesValue"
            }
          }
        }
      }
    }
  }
};

export const Resource: msRest.CompositeMapper = {
  serializedName: "Resource",
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TrackedResource: msRest.CompositeMapper = {
  serializedName: "TrackedResource",
  type: {
    name: "Composite",
    className: "TrackedResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      location: {
        required: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Cluster: msRest.CompositeMapper = {
  serializedName: "Cluster",
  type: {
    name: "Composite",
    className: "Cluster",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      sku: {
        required: true,
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "AzureSku"
        }
      },
      zones: {
        serializedName: "zones",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "Identity"
        }
      },
      state: {
        readOnly: true,
        serializedName: "properties.state",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      uri: {
        readOnly: true,
        serializedName: "properties.uri",
        type: {
          name: "String"
        }
      },
      dataIngestionUri: {
        readOnly: true,
        serializedName: "properties.dataIngestionUri",
        type: {
          name: "String"
        }
      },
      stateReason: {
        readOnly: true,
        serializedName: "properties.stateReason",
        type: {
          name: "String"
        }
      },
      trustedExternalTenants: {
        serializedName: "properties.trustedExternalTenants",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TrustedExternalTenant"
            }
          }
        }
      },
      optimizedAutoscale: {
        serializedName: "properties.optimizedAutoscale",
        type: {
          name: "Composite",
          className: "OptimizedAutoscale"
        }
      },
      enableDiskEncryption: {
        serializedName: "properties.enableDiskEncryption",
        type: {
          name: "Boolean"
        }
      },
      enableStreamingIngest: {
        serializedName: "properties.enableStreamingIngest",
        defaultValue: false,
        type: {
          name: "Boolean"
        }
      },
      virtualNetworkConfiguration: {
        serializedName: "properties.virtualNetworkConfiguration",
        type: {
          name: "Composite",
          className: "VirtualNetworkConfiguration"
        }
      },
      keyVaultProperties: {
        serializedName: "properties.keyVaultProperties",
        type: {
          name: "Composite",
          className: "KeyVaultProperties"
        }
      },
      enablePurge: {
        serializedName: "properties.enablePurge",
        defaultValue: false,
        type: {
          name: "Boolean"
        }
      },
      languageExtensions: {
        serializedName: "properties.languageExtensions",
        type: {
          name: "Composite",
          className: "LanguageExtensionsList"
        }
      }
    }
  }
};

export const ClusterUpdate: msRest.CompositeMapper = {
  serializedName: "ClusterUpdate",
  type: {
    name: "Composite",
    className: "ClusterUpdate",
    modelProperties: {
      ...Resource.type.modelProperties,
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "AzureSku"
        }
      },
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "Identity"
        }
      },
      state: {
        readOnly: true,
        serializedName: "properties.state",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      uri: {
        readOnly: true,
        serializedName: "properties.uri",
        type: {
          name: "String"
        }
      },
      dataIngestionUri: {
        readOnly: true,
        serializedName: "properties.dataIngestionUri",
        type: {
          name: "String"
        }
      },
      stateReason: {
        readOnly: true,
        serializedName: "properties.stateReason",
        type: {
          name: "String"
        }
      },
      trustedExternalTenants: {
        serializedName: "properties.trustedExternalTenants",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TrustedExternalTenant"
            }
          }
        }
      },
      optimizedAutoscale: {
        serializedName: "properties.optimizedAutoscale",
        type: {
          name: "Composite",
          className: "OptimizedAutoscale"
        }
      },
      enableDiskEncryption: {
        serializedName: "properties.enableDiskEncryption",
        type: {
          name: "Boolean"
        }
      },
      enableStreamingIngest: {
        serializedName: "properties.enableStreamingIngest",
        defaultValue: false,
        type: {
          name: "Boolean"
        }
      },
      virtualNetworkConfiguration: {
        serializedName: "properties.virtualNetworkConfiguration",
        type: {
          name: "Composite",
          className: "VirtualNetworkConfiguration"
        }
      },
      keyVaultProperties: {
        serializedName: "properties.keyVaultProperties",
        type: {
          name: "Composite",
          className: "KeyVaultProperties"
        }
      },
      enablePurge: {
        serializedName: "properties.enablePurge",
        defaultValue: false,
        type: {
          name: "Boolean"
        }
      },
      languageExtensions: {
        serializedName: "properties.languageExtensions",
        type: {
          name: "Composite",
          className: "LanguageExtensionsList"
        }
      }
    }
  }
};

export const ProxyResource: msRest.CompositeMapper = {
  serializedName: "ProxyResource",
  type: {
    name: "Composite",
    className: "ProxyResource",
    modelProperties: {
      ...Resource.type.modelProperties
    }
  }
};

export const AttachedDatabaseConfiguration: msRest.CompositeMapper = {
  serializedName: "AttachedDatabaseConfiguration",
  type: {
    name: "Composite",
    className: "AttachedDatabaseConfiguration",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      databaseName: {
        required: true,
        serializedName: "properties.databaseName",
        type: {
          name: "String"
        }
      },
      clusterResourceId: {
        required: true,
        serializedName: "properties.clusterResourceId",
        type: {
          name: "String"
        }
      },
      attachedDatabaseNames: {
        readOnly: true,
        serializedName: "properties.attachedDatabaseNames",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      defaultPrincipalsModificationKind: {
        required: true,
        serializedName: "properties.defaultPrincipalsModificationKind",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Database: msRest.CompositeMapper = {
  serializedName: "Database",
  type: {
    name: "Composite",
    polymorphicDiscriminator: {
      serializedName: "kind",
      clientName: "kind"
    },
    uberParent: "BaseResource",
    className: "Database",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      kind: {
        required: true,
        serializedName: "kind",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ReadWriteDatabase: msRest.CompositeMapper = {
  serializedName: "ReadWrite",
  type: {
    name: "Composite",
    className: "ReadWriteDatabase",
    modelProperties: {
      ...Database.type.modelProperties,
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      softDeletePeriod: {
        serializedName: "properties.softDeletePeriod",
        type: {
          name: "TimeSpan"
        }
      },
      hotCachePeriod: {
        serializedName: "properties.hotCachePeriod",
        type: {
          name: "TimeSpan"
        }
      },
      statistics: {
        serializedName: "properties.statistics",
        type: {
          name: "Composite",
          className: "DatabaseStatistics"
        }
      },
      isFollowed: {
        readOnly: true,
        serializedName: "properties.isFollowed",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ReadOnlyFollowingDatabase: msRest.CompositeMapper = {
  serializedName: "ReadOnlyFollowing",
  type: {
    name: "Composite",
    className: "ReadOnlyFollowingDatabase",
    modelProperties: {
      ...Database.type.modelProperties,
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      softDeletePeriod: {
        readOnly: true,
        serializedName: "properties.softDeletePeriod",
        type: {
          name: "TimeSpan"
        }
      },
      hotCachePeriod: {
        serializedName: "properties.hotCachePeriod",
        type: {
          name: "TimeSpan"
        }
      },
      statistics: {
        serializedName: "properties.statistics",
        type: {
          name: "Composite",
          className: "DatabaseStatistics"
        }
      },
      leaderClusterResourceId: {
        readOnly: true,
        serializedName: "properties.leaderClusterResourceId",
        type: {
          name: "String"
        }
      },
      attachedDatabaseConfigurationName: {
        readOnly: true,
        serializedName: "properties.attachedDatabaseConfigurationName",
        type: {
          name: "String"
        }
      },
      principalsModificationKind: {
        readOnly: true,
        serializedName: "properties.principalsModificationKind",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DatabasePrincipal: msRest.CompositeMapper = {
  serializedName: "DatabasePrincipal",
  type: {
    name: "Composite",
    className: "DatabasePrincipal",
    modelProperties: {
      role: {
        required: true,
        serializedName: "role",
        type: {
          name: "String"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      fqn: {
        serializedName: "fqn",
        type: {
          name: "String"
        }
      },
      email: {
        serializedName: "email",
        type: {
          name: "String"
        }
      },
      appId: {
        serializedName: "appId",
        type: {
          name: "String"
        }
      },
      tenantName: {
        readOnly: true,
        serializedName: "tenantName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DatabasePrincipalAssignment: msRest.CompositeMapper = {
  serializedName: "DatabasePrincipalAssignment",
  type: {
    name: "Composite",
    className: "DatabasePrincipalAssignment",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      principalId: {
        required: true,
        serializedName: "properties.principalId",
        type: {
          name: "String"
        }
      },
      role: {
        required: true,
        serializedName: "properties.role",
        type: {
          name: "String"
        }
      },
      tenantId: {
        serializedName: "properties.tenantId",
        type: {
          name: "String"
        }
      },
      principalType: {
        required: true,
        serializedName: "properties.principalType",
        type: {
          name: "String"
        }
      },
      tenantName: {
        readOnly: true,
        serializedName: "properties.tenantName",
        type: {
          name: "String"
        }
      },
      principalName: {
        readOnly: true,
        serializedName: "properties.principalName",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ClusterPrincipalAssignment: msRest.CompositeMapper = {
  serializedName: "ClusterPrincipalAssignment",
  type: {
    name: "Composite",
    className: "ClusterPrincipalAssignment",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      principalId: {
        required: true,
        serializedName: "properties.principalId",
        type: {
          name: "String"
        }
      },
      role: {
        required: true,
        serializedName: "properties.role",
        type: {
          name: "String"
        }
      },
      tenantId: {
        serializedName: "properties.tenantId",
        type: {
          name: "String"
        }
      },
      principalType: {
        required: true,
        serializedName: "properties.principalType",
        type: {
          name: "String"
        }
      },
      tenantName: {
        readOnly: true,
        serializedName: "properties.tenantName",
        type: {
          name: "String"
        }
      },
      principalName: {
        readOnly: true,
        serializedName: "properties.principalName",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FollowerDatabaseDefinition: msRest.CompositeMapper = {
  serializedName: "FollowerDatabaseDefinition",
  type: {
    name: "Composite",
    className: "FollowerDatabaseDefinition",
    modelProperties: {
      clusterResourceId: {
        required: true,
        serializedName: "clusterResourceId",
        type: {
          name: "String"
        }
      },
      attachedDatabaseConfigurationName: {
        required: true,
        serializedName: "attachedDatabaseConfigurationName",
        type: {
          name: "String"
        }
      },
      databaseName: {
        readOnly: true,
        serializedName: "databaseName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DataConnection: msRest.CompositeMapper = {
  serializedName: "DataConnection",
  type: {
    name: "Composite",
    polymorphicDiscriminator: {
      serializedName: "kind",
      clientName: "kind"
    },
    uberParent: "BaseResource",
    className: "DataConnection",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      kind: {
        required: true,
        serializedName: "kind",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DataConnectionValidationResult: msRest.CompositeMapper = {
  serializedName: "DataConnectionValidationResult",
  type: {
    name: "Composite",
    className: "DataConnectionValidationResult",
    modelProperties: {
      errorMessage: {
        serializedName: "errorMessage",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DatabasePrincipalListRequest: msRest.CompositeMapper = {
  serializedName: "DatabasePrincipalListRequest",
  type: {
    name: "Composite",
    className: "DatabasePrincipalListRequest",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DatabasePrincipal"
            }
          }
        }
      }
    }
  }
};

export const DiagnoseVirtualNetworkResult: msRest.CompositeMapper = {
  serializedName: "DiagnoseVirtualNetworkResult",
  type: {
    name: "Composite",
    className: "DiagnoseVirtualNetworkResult",
    modelProperties: {
      findings: {
        serializedName: "findings",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const DataConnectionValidation: msRest.CompositeMapper = {
  serializedName: "DataConnectionValidation",
  type: {
    name: "Composite",
    className: "DataConnectionValidation",
    modelProperties: {
      dataConnectionName: {
        serializedName: "dataConnectionName",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "DataConnection"
        }
      }
    }
  }
};

export const EventHubDataConnection: msRest.CompositeMapper = {
  serializedName: "EventHub",
  type: {
    name: "Composite",
    className: "EventHubDataConnection",
    modelProperties: {
      ...DataConnection.type.modelProperties,
      eventHubResourceId: {
        required: true,
        serializedName: "properties.eventHubResourceId",
        type: {
          name: "String"
        }
      },
      consumerGroup: {
        required: true,
        serializedName: "properties.consumerGroup",
        type: {
          name: "String"
        }
      },
      tableName: {
        serializedName: "properties.tableName",
        type: {
          name: "String"
        }
      },
      mappingRuleName: {
        serializedName: "properties.mappingRuleName",
        type: {
          name: "String"
        }
      },
      dataFormat: {
        serializedName: "properties.dataFormat",
        type: {
          name: "String"
        }
      },
      eventSystemProperties: {
        serializedName: "properties.eventSystemProperties",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      compression: {
        serializedName: "properties.compression",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IotHubDataConnection: msRest.CompositeMapper = {
  serializedName: "IotHub",
  type: {
    name: "Composite",
    className: "IotHubDataConnection",
    modelProperties: {
      ...DataConnection.type.modelProperties,
      iotHubResourceId: {
        required: true,
        serializedName: "properties.iotHubResourceId",
        type: {
          name: "String"
        }
      },
      consumerGroup: {
        required: true,
        serializedName: "properties.consumerGroup",
        type: {
          name: "String"
        }
      },
      tableName: {
        serializedName: "properties.tableName",
        type: {
          name: "String"
        }
      },
      mappingRuleName: {
        serializedName: "properties.mappingRuleName",
        type: {
          name: "String"
        }
      },
      dataFormat: {
        serializedName: "properties.dataFormat",
        type: {
          name: "String"
        }
      },
      eventSystemProperties: {
        serializedName: "properties.eventSystemProperties",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      sharedAccessPolicyName: {
        required: true,
        serializedName: "properties.sharedAccessPolicyName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EventGridDataConnection: msRest.CompositeMapper = {
  serializedName: "EventGrid",
  type: {
    name: "Composite",
    className: "EventGridDataConnection",
    modelProperties: {
      ...DataConnection.type.modelProperties,
      storageAccountResourceId: {
        required: true,
        serializedName: "properties.storageAccountResourceId",
        type: {
          name: "String"
        }
      },
      eventHubResourceId: {
        required: true,
        serializedName: "properties.eventHubResourceId",
        type: {
          name: "String"
        }
      },
      consumerGroup: {
        required: true,
        serializedName: "properties.consumerGroup",
        type: {
          name: "String"
        }
      },
      tableName: {
        required: true,
        serializedName: "properties.tableName",
        type: {
          name: "String"
        }
      },
      mappingRuleName: {
        serializedName: "properties.mappingRuleName",
        type: {
          name: "String"
        }
      },
      dataFormat: {
        required: true,
        serializedName: "properties.dataFormat",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DataConnectionValidationListResult: msRest.CompositeMapper = {
  serializedName: "DataConnectionValidationListResult",
  type: {
    name: "Composite",
    className: "DataConnectionValidationListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DataConnectionValidationResult"
            }
          }
        }
      }
    }
  }
};

export const ClusterCheckNameRequest: msRest.CompositeMapper = {
  serializedName: "ClusterCheckNameRequest",
  type: {
    name: "Composite",
    className: "ClusterCheckNameRequest",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        required: true,
        isConstant: true,
        serializedName: "type",
        defaultValue: 'Microsoft.Kusto/clusters',
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CheckNameRequest: msRest.CompositeMapper = {
  serializedName: "CheckNameRequest",
  type: {
    name: "Composite",
    className: "CheckNameRequest",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "Enum",
          allowedValues: [
            "Microsoft.Kusto/clusters/databases",
            "Microsoft.Kusto/clusters/attachedDatabaseConfigurations"
          ]
        }
      }
    }
  }
};

export const ClusterPrincipalAssignmentCheckNameRequest: msRest.CompositeMapper = {
  serializedName: "ClusterPrincipalAssignmentCheckNameRequest",
  type: {
    name: "Composite",
    className: "ClusterPrincipalAssignmentCheckNameRequest",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        required: true,
        isConstant: true,
        serializedName: "type",
        defaultValue: 'Microsoft.Kusto/clusters/principalAssignments',
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DataConnectionCheckNameRequest: msRest.CompositeMapper = {
  serializedName: "DataConnectionCheckNameRequest",
  type: {
    name: "Composite",
    className: "DataConnectionCheckNameRequest",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        required: true,
        isConstant: true,
        serializedName: "type",
        defaultValue: 'Microsoft.Kusto/clusters/databases/dataConnections',
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DatabasePrincipalAssignmentCheckNameRequest: msRest.CompositeMapper = {
  serializedName: "DatabasePrincipalAssignmentCheckNameRequest",
  type: {
    name: "Composite",
    className: "DatabasePrincipalAssignmentCheckNameRequest",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        required: true,
        isConstant: true,
        serializedName: "type",
        defaultValue: 'Microsoft.Kusto/clusters/databases/principalAssignments',
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CheckNameResult: msRest.CompositeMapper = {
  serializedName: "CheckNameResult",
  type: {
    name: "Composite",
    className: "CheckNameResult",
    modelProperties: {
      nameAvailable: {
        serializedName: "nameAvailable",
        type: {
          name: "Boolean"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      reason: {
        serializedName: "reason",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationDisplay: msRest.CompositeMapper = {
  serializedName: "Operation_display",
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        serializedName: "provider",
        type: {
          name: "String"
        }
      },
      operation: {
        serializedName: "operation",
        type: {
          name: "String"
        }
      },
      resource: {
        serializedName: "resource",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Operation: msRest.CompositeMapper = {
  serializedName: "Operation",
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const AzureEntityResource: msRest.CompositeMapper = {
  serializedName: "AzureEntityResource",
  type: {
    name: "Composite",
    className: "AzureEntityResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      etag: {
        readOnly: true,
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FollowerDatabaseListResult: msRest.CompositeMapper = {
  serializedName: "FollowerDatabaseListResult",
  type: {
    name: "Composite",
    className: "FollowerDatabaseListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "FollowerDatabaseDefinition"
            }
          }
        }
      }
    }
  }
};

export const ClusterListResult: msRest.CompositeMapper = {
  serializedName: "ClusterListResult",
  type: {
    name: "Composite",
    className: "ClusterListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Cluster"
            }
          }
        }
      }
    }
  }
};

export const SkuDescriptionList: msRest.CompositeMapper = {
  serializedName: "SkuDescriptionList",
  type: {
    name: "Composite",
    className: "SkuDescriptionList",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SkuDescription"
            }
          }
        }
      }
    }
  }
};

export const ListResourceSkusResult: msRest.CompositeMapper = {
  serializedName: "ListResourceSkusResult",
  type: {
    name: "Composite",
    className: "ListResourceSkusResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AzureResourceSku"
            }
          }
        }
      }
    }
  }
};

export const LanguageExtensionsList: msRest.CompositeMapper = {
  serializedName: "LanguageExtensionsList",
  type: {
    name: "Composite",
    className: "LanguageExtensionsList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "LanguageExtension"
            }
          }
        }
      }
    }
  }
};

export const ClusterPrincipalAssignmentListResult: msRest.CompositeMapper = {
  serializedName: "ClusterPrincipalAssignmentListResult",
  type: {
    name: "Composite",
    className: "ClusterPrincipalAssignmentListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ClusterPrincipalAssignment"
            }
          }
        }
      }
    }
  }
};

export const DatabaseListResult: msRest.CompositeMapper = {
  serializedName: "DatabaseListResult",
  type: {
    name: "Composite",
    className: "DatabaseListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Database"
            }
          }
        }
      }
    }
  }
};

export const DatabasePrincipalListResult: msRest.CompositeMapper = {
  serializedName: "DatabasePrincipalListResult",
  type: {
    name: "Composite",
    className: "DatabasePrincipalListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DatabasePrincipal"
            }
          }
        }
      }
    }
  }
};

export const DatabasePrincipalAssignmentListResult: msRest.CompositeMapper = {
  serializedName: "DatabasePrincipalAssignmentListResult",
  type: {
    name: "Composite",
    className: "DatabasePrincipalAssignmentListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DatabasePrincipalAssignment"
            }
          }
        }
      }
    }
  }
};

export const AttachedDatabaseConfigurationListResult: msRest.CompositeMapper = {
  serializedName: "AttachedDatabaseConfigurationListResult",
  type: {
    name: "Composite",
    className: "AttachedDatabaseConfigurationListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AttachedDatabaseConfiguration"
            }
          }
        }
      }
    }
  }
};

export const DataConnectionListResult: msRest.CompositeMapper = {
  serializedName: "DataConnectionListResult",
  type: {
    name: "Composite",
    className: "DataConnectionListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DataConnection"
            }
          }
        }
      }
    }
  }
};

export const OperationListResult: msRest.CompositeMapper = {
  serializedName: "OperationListResult",
  type: {
    name: "Composite",
    className: "OperationListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const discriminators = {
  'BaseResource.Database' : Database,
  'BaseResource.ReadWrite' : ReadWriteDatabase,
  'BaseResource.ReadOnlyFollowing' : ReadOnlyFollowingDatabase,
  'BaseResource.DataConnection' : DataConnection,
  'BaseResource.EventHub' : EventHubDataConnection,
  'BaseResource.IotHub' : IotHubDataConnection,
  'BaseResource.EventGrid' : EventGridDataConnection

};
