/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export type DatabaseUnion =
  | Database
  | ReadWriteDatabase
  | ReadOnlyFollowingDatabase;
export type DataConnectionUnion =
  | DataConnection
  | EventHubDataConnection
  | IotHubDataConnection
  | EventGridDataConnection
  | CosmosDbDataConnection;

/** Azure SKU definition. */
export interface AzureSku {
  /** SKU name. */
  name: AzureSkuName;
  /** The number of instances of the cluster. */
  capacity?: number;
  /** SKU tier. */
  tier: AzureSkuTier;
}

/** Metadata pertaining to creation and last modification of the resource. */
export interface SystemData {
  /** The identity that created the resource. */
  createdBy?: string;
  /** The type of identity that created the resource. */
  createdByType?: CreatedByType;
  /** The timestamp of resource creation (UTC). */
  createdAt?: Date;
  /** The identity that last modified the resource. */
  lastModifiedBy?: string;
  /** The type of identity that last modified the resource. */
  lastModifiedByType?: CreatedByType;
  /** The timestamp of resource last modification (UTC) */
  lastModifiedAt?: Date;
}

/** Identity for the resource. */
export interface Identity {
  /**
   * The principal ID of resource identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly principalId?: string;
  /**
   * The tenant ID of resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly tenantId?: string;
  /** The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove all identities. */
  type: IdentityType;
  /** The list of user identities associated with the Kusto cluster. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'. */
  userAssignedIdentities?: {
    [propertyName: string]: ComponentsSgqdofSchemasIdentityPropertiesUserassignedidentitiesAdditionalproperties;
  };
}

export interface ComponentsSgqdofSchemasIdentityPropertiesUserassignedidentitiesAdditionalproperties {
  /**
   * The principal id of user assigned identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly principalId?: string;
  /**
   * The client id of user assigned identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly clientId?: string;
}

/** Represents a tenant ID that is trusted by the cluster. */
export interface TrustedExternalTenant {
  /** GUID representing an external tenant. */
  value?: string;
}

/** A class that contains the optimized auto scale definition. */
export interface OptimizedAutoscale {
  /** The version of the template defined, for instance 1. */
  version: number;
  /** A boolean value that indicate if the optimized autoscale feature is enabled or not. */
  isEnabled: boolean;
  /** Minimum allowed instances count. */
  minimum: number;
  /** Maximum allowed instances count. */
  maximum: number;
}

/** A class that contains virtual network definition. */
export interface VirtualNetworkConfiguration {
  /** The subnet resource id. */
  subnetId: string;
  /** Engine service's public IP address resource id. */
  enginePublicIpId: string;
  /** Data management's service public IP address resource id. */
  dataManagementPublicIpId: string;
}

/** Properties of the key vault. */
export interface KeyVaultProperties {
  /** The name of the key vault key. */
  keyName?: string;
  /** The version of the key vault key. */
  keyVersion?: string;
  /** The Uri of the key vault. */
  keyVaultUri?: string;
  /** The user assigned identity (ARM resource id) that has access to the key. */
  userIdentity?: string;
}

/** The list of language extension objects. */
export interface LanguageExtensionsList {
  /** The list of language extensions. */
  value?: LanguageExtension[];
}

/** The language extension object. */
export interface LanguageExtension {
  /** The language extension name. */
  languageExtensionName?: LanguageExtensionName;
  /** The language extension image name. */
  languageExtensionImageName?: LanguageExtensionImageName;
}

/** Represents an accepted audience trusted by the cluster. */
export interface AcceptedAudiences {
  /** GUID or valid URL representing an accepted audience. */
  value?: string;
}

/** Private endpoint which the connection belongs to. */
export interface PrivateEndpointProperty {
  /**
   * Resource id of the private endpoint.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
}

/** Connection State of the Private Endpoint Connection. */
export interface PrivateLinkServiceConnectionStateProperty {
  /** The private link service connection status. */
  status?: string;
  /** The private link service connection description. */
  description?: string;
  /**
   * Any action that is required beyond basic workflow (approve/ reject/ disconnect)
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly actionsRequired?: string;
}

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export interface Resource {
  /**
   * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
}

/** An error response from Kusto. */
export interface CloudError {
  /** An error response from Kusto. */
  error?: CloudErrorBody;
}

/** An error response from Kusto. */
export interface CloudErrorBody {
  /** An identifier for the error. Codes are invariant and are intended to be consumed programmatically. */
  code?: string;
  /** A message describing the error, intended to be suitable for displaying in a user interface. */
  message?: string;
  /** The target of the particular error. For example, the name of the property in error. */
  target?: string;
  /** A list of additional details about the error. */
  details?: CloudErrorBody[];
}

/** A principal assignment check name availability request. */
export interface ClusterPrincipalAssignmentCheckNameRequest {
  /** Principal Assignment resource name. */
  name: string;
  /** The type of resource, Microsoft.Kusto/clusters/principalAssignments. */
  type: "Microsoft.Kusto/clusters/principalAssignments";
}

/** The result returned from a check name availability request. */
export interface CheckNameResult {
  /** Specifies a Boolean value that indicates if the name is available. */
  nameAvailable?: boolean;
  /** The name that was checked. */
  name?: string;
  /** Message indicating an unavailable name due to a conflict, or a description of the naming rules that are violated. */
  message?: string;
  /** Message providing the reason why the given name is invalid. */
  reason?: Reason;
}

/** The list Kusto cluster principal assignments operation response. */
export interface ClusterPrincipalAssignmentListResult {
  /** The list of Kusto cluster principal assignments. */
  value?: ClusterPrincipalAssignment[];
}

/** The list Kusto database principals operation response. */
export interface FollowerDatabaseListResult {
  /** The list of follower database result. */
  value?: FollowerDatabaseDefinition[];
}

/** A class representing follower database request. */
export interface FollowerDatabaseDefinition {
  /** Resource id of the cluster that follows a database owned by this cluster. */
  clusterResourceId: string;
  /** Resource name of the attached database configuration in the follower cluster. */
  attachedDatabaseConfigurationName: string;
  /**
   * The database name owned by this cluster that was followed. * in case following all databases.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly databaseName?: string;
  /**
   * Table level sharing specifications
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly tableLevelSharingProperties?: TableLevelSharingProperties;
  /**
   * The origin of the following setup.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly databaseShareOrigin?: DatabaseShareOrigin;
}

/** Tables that will be included and excluded in the follower database */
export interface TableLevelSharingProperties {
  /** List of tables to include in the follower database */
  tablesToInclude?: string[];
  /** List of tables to exclude from the follower database */
  tablesToExclude?: string[];
  /** List of external tables to include in the follower database */
  externalTablesToInclude?: string[];
  /** List of external tables to exclude from the follower database */
  externalTablesToExclude?: string[];
  /** List of materialized views to include in the follower database */
  materializedViewsToInclude?: string[];
  /** List of materialized views to exclude from the follower database */
  materializedViewsToExclude?: string[];
  /** List of functions to include in the follower database */
  functionsToInclude?: string[];
  /** List of functions to exclude from the follower database */
  functionsToExclude?: string[];
}

export interface DiagnoseVirtualNetworkResult {
  /** The list of network connectivity diagnostic finding */
  findings?: string[];
}

/** The list Kusto clusters operation response. */
export interface ClusterListResult {
  /** The list of Kusto clusters. */
  value?: Cluster[];
}

/** The list of the EngagementFabric SKU descriptions */
export interface SkuDescriptionList {
  /**
   * SKU descriptions
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: SkuDescription[];
}

/** The Kusto SKU description of given resource type */
export interface SkuDescription {
  /**
   * The resource type
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resourceType?: string;
  /**
   * The name of the SKU
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The tier of the SKU
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly tier?: string;
  /**
   * The set of locations that the SKU is available
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly locations?: string[];
  /**
   * Locations and zones
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly locationInfo?: SkuLocationInfoItem[];
  /**
   * The restrictions because of which SKU cannot be used
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly restrictions?: Record<string, unknown>[];
}

/** The locations and zones info for SKU. */
export interface SkuLocationInfoItem {
  /** The available location of the SKU. */
  location: string;
  /** The available zone of the SKU. */
  zones?: string[];
  /** Gets details of capabilities available to a SKU in specific zones. */
  zoneDetails?: ResourceSkuZoneDetails[];
}

/** Describes The zonal capabilities of a SKU. */
export interface ResourceSkuZoneDetails {
  /**
   * The set of zones that the SKU is available in with the specified capabilities.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string[];
  /**
   * A list of capabilities that are available for the SKU in the specified list of zones.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly capabilities?: ResourceSkuCapabilities[];
}

/** Describes The SKU capabilities object. */
export interface ResourceSkuCapabilities {
  /**
   * An invariant to describe the feature.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * An invariant if the feature is measured by quantity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: string;
}

/** The result returned from a cluster check name availability request. */
export interface ClusterCheckNameRequest {
  /** Cluster name. */
  name: string;
  /** The type of resource, Microsoft.Kusto/clusters. */
  type: "Microsoft.Kusto/clusters";
}

/** The result returned from a database check name availability request. */
export interface CheckNameRequest {
  /** Resource name. */
  name: string;
  /** The type of resource, for instance Microsoft.Kusto/clusters/databases. */
  type: Type;
}

/** The result returned from a AttachedDatabaseConfigurations check name availability request. */
export interface AttachedDatabaseConfigurationsCheckNameRequest {
  /** Attached database resource name. */
  name: string;
  /** The type of resource, for instance Microsoft.Kusto/clusters/attachedDatabaseConfigurations. */
  type: "Microsoft.Kusto/clusters/attachedDatabaseConfigurations";
}

/** The result returned from a managedPrivateEndpoints check name availability request. */
export interface ManagedPrivateEndpointsCheckNameRequest {
  /** Managed private endpoint resource name. */
  name: string;
  /** The type of resource, for instance Microsoft.Kusto/clusters/managedPrivateEndpoints. */
  type: "Microsoft.Kusto/clusters/managedPrivateEndpoints";
}

/** List of available SKUs for a Kusto Cluster. */
export interface ListResourceSkusResult {
  /** The collection of available SKUs for an existing resource. */
  value?: AzureResourceSku[];
}

/** Azure resource SKU definition. */
export interface AzureResourceSku {
  /** Resource Namespace and Type. */
  resourceType?: string;
  /** The SKU details. */
  sku?: AzureSku;
  /** The number of instances of the cluster. */
  capacity?: AzureCapacity;
}

/** Azure capacity definition. */
export interface AzureCapacity {
  /** Scale type. */
  scaleType: AzureScaleType;
  /** Minimum allowed capacity. */
  minimum: number;
  /** Maximum allowed capacity. */
  maximum: number;
  /** The default capacity that would be used. */
  default: number;
}

/** The list Kusto databases operation response. */
export interface DatabaseListResult {
  /** The list of Kusto databases. */
  value?: DatabaseUnion[];
}

/** A principal assignment check name availability request. */
export interface DatabasePrincipalAssignmentCheckNameRequest {
  /** Principal Assignment resource name. */
  name: string;
  /** The type of resource, Microsoft.Kusto/clusters/databases/principalAssignments. */
  type: "Microsoft.Kusto/clusters/databases/principalAssignments";
}

/** The list Kusto database principal assignments operation response. */
export interface DatabasePrincipalAssignmentListResult {
  /** The list of Kusto database principal assignments. */
  value?: DatabasePrincipalAssignment[];
}

/** The list Kusto database principals operation response. */
export interface DatabasePrincipalListResult {
  /** The list of Kusto database principals. */
  value?: DatabasePrincipal[];
}

/** A class representing database principal entity. */
export interface DatabasePrincipal {
  /** Database principal role. */
  role: DatabasePrincipalRole;
  /** Database principal name. */
  name: string;
  /** Database principal type. */
  type: DatabasePrincipalType;
  /** Database principal fully qualified name. */
  fqn?: string;
  /** Database principal email if exists. */
  email?: string;
  /** Application id - relevant only for application principal type. */
  appId?: string;
  /**
   * The tenant name of the principal
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly tenantName?: string;
}

/** The list Kusto database principals operation request. */
export interface DatabasePrincipalListRequest {
  /** The list of Kusto database principals. */
  value?: DatabasePrincipal[];
}

/** The list Kusto database script operation response. */
export interface ScriptListResult {
  /** The list of Kusto scripts. */
  value?: Script[];
}

/** The list managed private endpoints operation response. */
export interface ManagedPrivateEndpointListResult {
  /** The list of managed private endpoints. */
  value?: ManagedPrivateEndpoint[];
}

/** A list of private endpoint connections */
export interface PrivateEndpointConnectionListResult {
  /** Array of private endpoint connections */
  value?: PrivateEndpointConnection[];
}

/** A list of private link resources */
export interface PrivateLinkResourceListResult {
  /** Array of private link resources */
  value?: PrivateLinkResource[];
}

/** Collection of Outbound Environment Endpoints */
export interface OutboundNetworkDependenciesEndpointListResult {
  /** Collection of resources. */
  value: OutboundNetworkDependenciesEndpoint[];
  /**
   * Link to next page of resources.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** A domain name that a service is reached at, including details of the current connection status. */
export interface EndpointDependency {
  /** The domain name of the dependency. */
  domainName?: string;
  /** The ports used when connecting to DomainName. */
  endpointDetails?: EndpointDetail[];
}

/** Current TCP connectivity information from the Kusto cluster to a single endpoint. */
export interface EndpointDetail {
  /** The port an endpoint is connected to. */
  port?: number;
}

/** The list attached database configurations operation response. */
export interface AttachedDatabaseConfigurationListResult {
  /** The list of attached database configurations. */
  value?: AttachedDatabaseConfiguration[];
}

/** The list Kusto data connections operation response. */
export interface DataConnectionListResult {
  /** The list of Kusto data connections. */
  value?: DataConnectionUnion[];
}

/** Class representing an data connection validation. */
export interface DataConnectionValidation {
  /** The name of the data connection. */
  dataConnectionName?: string;
  /** The data connection properties to validate. */
  properties?: DataConnectionUnion;
}

/** The list Kusto data connection validation result. */
export interface DataConnectionValidationListResult {
  /** The list of Kusto data connection validation errors. */
  value?: DataConnectionValidationResult[];
}

/** The result returned from a data connection validation request. */
export interface DataConnectionValidationResult {
  /** A message which indicates a problem in data connection validation. */
  errorMessage?: string;
}

/** A data connection check name availability request. */
export interface DataConnectionCheckNameRequest {
  /** Data Connection name. */
  name: string;
  /** The type of resource, Microsoft.Kusto/clusters/databases/dataConnections. */
  type: "Microsoft.Kusto/clusters/databases/dataConnections";
}

/** A script name availability request. */
export interface ScriptCheckNameRequest {
  /** Script name. */
  name: string;
  /** The type of resource, Microsoft.Kusto/clusters/databases/scripts. */
  type: "Microsoft.Kusto/clusters/databases/scripts";
}

/** Result of the request to list REST API operations. It contains a list of operations and a URL nextLink to get the next set of results. */
export interface OperationListResult {
  /** The list of operations supported by the resource provider. */
  value?: Operation[];
  /** The URL to get the next set of operation list results if there are any. */
  nextLink?: string;
}

/** A REST API operation */
export interface Operation {
  /** This is of the format {provider}/{resource}/{operation}. */
  name?: string;
  /** The object that describes the operation. */
  display?: OperationDisplay;
  /** The intended executor of the operation. */
  origin?: string;
  /** Properties of the operation. */
  properties?: Record<string, unknown>;
}

/** The object that describes the operation. */
export interface OperationDisplay {
  /** Friendly name of the resource provider. */
  provider?: string;
  /** For example: read, write, delete. */
  operation?: string;
  /** The resource type on which the operation is performed. */
  resource?: string;
  /** The friendly name of the operation. */
  description?: string;
}

/** Operation Result Entity. */
export interface OperationResult {
  /**
   * ID of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * Name of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * status of the Operation result.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: Status;
  /** The operation start time */
  startTime?: Date;
  /** The operation end time */
  endTime?: Date;
  /** Percentage completed. */
  percentComplete?: number;
  /** The code of the error. */
  code?: string;
  /** The error message. */
  message?: string;
  /** The kind of the operation. */
  operationKind?: string;
  /**
   * The provisioned state of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /** The state of the operation. */
  operationState?: string;
}

/** A class that contains database statistics information. */
export interface DatabaseStatistics {
  /** The database size - the total size of compressed data and index in bytes. */
  size?: number;
}

/** The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location */
export interface ProxyResource extends Resource {}

/** The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location' */
export interface TrackedResource extends Resource {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** The geo-location where the resource lives */
  location: string;
}

/** Class representing an update to a Kusto cluster. */
export interface ClusterUpdate extends Resource {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** Resource location. */
  location?: string;
  /** The SKU of the cluster. */
  sku?: AzureSku;
  /** The identity of the cluster, if configured. */
  identity?: Identity;
  /**
   * The state of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly state?: State;
  /**
   * The provisioned state of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * The cluster URI.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly uri?: string;
  /**
   * The cluster data ingestion URI.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly dataIngestionUri?: string;
  /**
   * The reason for the cluster's current state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly stateReason?: string;
  /** The cluster's external tenants. */
  trustedExternalTenants?: TrustedExternalTenant[];
  /** Optimized auto scale definition. */
  optimizedAutoscale?: OptimizedAutoscale;
  /** A boolean value that indicates if the cluster's disks are encrypted. */
  enableDiskEncryption?: boolean;
  /** A boolean value that indicates if the streaming ingest is enabled. */
  enableStreamingIngest?: boolean;
  /** Virtual network definition. */
  virtualNetworkConfiguration?: VirtualNetworkConfiguration;
  /** KeyVault properties for the cluster encryption. */
  keyVaultProperties?: KeyVaultProperties;
  /** A boolean value that indicates if the purge operations are enabled. */
  enablePurge?: boolean;
  /** List of the cluster's language extensions. */
  languageExtensions?: LanguageExtensionsList;
  /** A boolean value that indicates if double encryption is enabled. */
  enableDoubleEncryption?: boolean;
  /** Public network access to the cluster is enabled by default. When disabled, only private endpoint connection to the cluster is allowed */
  publicNetworkAccess?: PublicNetworkAccess;
  /** The list of ips in the format of CIDR allowed to connect to the cluster. */
  allowedIpRangeList?: string[];
  /** The engine type */
  engineType?: EngineType;
  /** The cluster's accepted audiences. */
  acceptedAudiences?: AcceptedAudiences[];
  /** A boolean value that indicates if the cluster could be automatically stopped (due to lack of data or no activity for many days). */
  enableAutoStop?: boolean;
  /** Whether or not to restrict outbound network access.  Value is optional but if passed in, must be 'Enabled' or 'Disabled' */
  restrictOutboundNetworkAccess?: ClusterNetworkAccessFlag;
  /** List of allowed FQDNs(Fully Qualified Domain Name) for egress from Cluster. */
  allowedFqdnList?: string[];
  /** Indicates what public IP type to create - IPv4 (default), or DualStack (both IPv4 and IPv6) */
  publicIPType?: PublicIPType;
  /** Virtual Cluster graduation properties */
  virtualClusterGraduationProperties?: string;
  /**
   * A list of private endpoint connections.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly privateEndpointConnections?: PrivateEndpointConnection[];
}

/** A private link resource */
export interface PrivateLinkResource extends Resource {
  /**
   * Metadata pertaining to creation and last modification of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
  /**
   * The private link resource group id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly groupId?: string;
  /**
   * The private link resource required member names.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly requiredMembers?: string[];
  /**
   * The private link resource required zone names.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly requiredZoneNames?: string[];
}

/** A private endpoint connection */
export interface PrivateEndpointConnection extends ProxyResource {
  /**
   * Metadata pertaining to creation and last modification of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
  /**
   * Private endpoint which the connection belongs to.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly privateEndpoint?: PrivateEndpointProperty;
  /** Connection State of the Private Endpoint Connection. */
  privateLinkServiceConnectionState?: PrivateLinkServiceConnectionStateProperty;
  /**
   * Group id of the private endpoint.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly groupId?: string;
  /**
   * Provisioning state of the private endpoint.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: string;
}

/** Class representing a cluster principal assignment. */
export interface ClusterPrincipalAssignment extends ProxyResource {
  /** The principal ID assigned to the cluster principal. It can be a user email, application ID, or security group name. */
  principalId?: string;
  /** Cluster principal role. */
  role?: ClusterPrincipalRole;
  /** The tenant id of the principal */
  tenantId?: string;
  /** Principal type. */
  principalType?: PrincipalType;
  /**
   * The tenant name of the principal
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly tenantName?: string;
  /**
   * The principal name
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly principalName?: string;
  /**
   * The provisioned state of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * The service principal object id in AAD (Azure active directory)
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly aadObjectId?: string;
}

/** Class representing a Kusto database. */
export interface Database extends ProxyResource {
  /** Resource location. */
  location?: string;
  /** Kind of the database */
  kind: Kind;
}

/** Class representing a database principal assignment. */
export interface DatabasePrincipalAssignment extends ProxyResource {
  /** The principal ID assigned to the database principal. It can be a user email, application ID, or security group name. */
  principalId?: string;
  /** Database principal role. */
  role?: DatabasePrincipalRole;
  /** The tenant id of the principal */
  tenantId?: string;
  /** Principal type. */
  principalType?: PrincipalType;
  /**
   * The tenant name of the principal
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly tenantName?: string;
  /**
   * The principal name
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly principalName?: string;
  /**
   * The provisioned state of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * The service principal object id in AAD (Azure active directory)
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly aadObjectId?: string;
}

/** Class representing a database script. */
export interface Script extends ProxyResource {
  /**
   * Metadata pertaining to creation and last modification of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
  /** The url to the KQL script blob file. Must not be used together with scriptContent property */
  scriptUrl?: string;
  /** The SaS token that provide read access to the file which contain the script. Must be provided when using scriptUrl property. */
  scriptUrlSasToken?: string;
  /** The script content. This property should be used when the script is provide inline and not through file in a SA. Must not be used together with scriptUrl and scriptUrlSasToken properties. */
  scriptContent?: string;
  /** A unique string. If changed the script will be applied again. */
  forceUpdateTag?: string;
  /** Flag that indicates whether to continue if one of the command fails. */
  continueOnErrors?: boolean;
  /**
   * The provisioned state of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
}

/** Class representing a managed private endpoint. */
export interface ManagedPrivateEndpoint extends ProxyResource {
  /**
   * Metadata pertaining to creation and last modification of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
  /** The ARM resource ID of the resource for which the managed private endpoint is created. */
  privateLinkResourceId?: string;
  /** The region of the resource to which the managed private endpoint is created. */
  privateLinkResourceRegion?: string;
  /** The groupId in which the managed private endpoint is created. */
  groupId?: string;
  /** The user request message. */
  requestMessage?: string;
  /**
   * The provisioned state of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
}

/** Endpoints accessed for a common purpose that the Kusto Service Environment requires outbound network access to. */
export interface OutboundNetworkDependenciesEndpoint extends ProxyResource {
  /**
   * A unique read-only string that changes whenever the resource is updated.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly etag?: string;
  /** The type of service accessed by the Kusto Service Environment, e.g., Azure Storage, Azure SQL Database, and Azure Active Directory. */
  category?: string;
  /** The endpoints that the Kusto Service Environment reaches the service at. */
  endpoints?: EndpointDependency[];
  /**
   * The provisioned state of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
}

/** Class representing an attached database configuration. */
export interface AttachedDatabaseConfiguration extends ProxyResource {
  /** Resource location. */
  location?: string;
  /**
   * The provisioned state of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /** The name of the database which you would like to attach, use * if you want to follow all current and future databases. */
  databaseName?: string;
  /** The resource id of the cluster where the databases you would like to attach reside. */
  clusterResourceId?: string;
  /**
   * The list of databases from the clusterResourceId which are currently attached to the cluster.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly attachedDatabaseNames?: string[];
  /** The default principals modification kind */
  defaultPrincipalsModificationKind?: DefaultPrincipalsModificationKind;
  /** Table level sharing specifications */
  tableLevelSharingProperties?: TableLevelSharingProperties;
  /** Overrides the original database name. Relevant only when attaching to a specific database. */
  databaseNameOverride?: string;
  /** Adds a prefix to the attached databases name. When following an entire cluster, that prefix would be added to all of the databases original names from leader cluster. */
  databaseNamePrefix?: string;
}

/** Class representing an data connection. */
export interface DataConnection extends ProxyResource {
  /** Resource location. */
  location?: string;
  /** Kind of the endpoint for the data connection */
  kind: DataConnectionKind;
}

/** Class representing a Kusto cluster. */
export interface Cluster extends TrackedResource {
  /** The SKU of the cluster. */
  sku: AzureSku;
  /**
   * Metadata pertaining to creation and last modification of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
  /** The availability zones of the cluster. */
  zones?: string[];
  /** The identity of the cluster, if configured. */
  identity?: Identity;
  /**
   * A unique read-only string that changes whenever the resource is updated.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly etag?: string;
  /**
   * The state of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly state?: State;
  /**
   * The provisioned state of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * The cluster URI.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly uri?: string;
  /**
   * The cluster data ingestion URI.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly dataIngestionUri?: string;
  /**
   * The reason for the cluster's current state.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly stateReason?: string;
  /** The cluster's external tenants. */
  trustedExternalTenants?: TrustedExternalTenant[];
  /** Optimized auto scale definition. */
  optimizedAutoscale?: OptimizedAutoscale;
  /** A boolean value that indicates if the cluster's disks are encrypted. */
  enableDiskEncryption?: boolean;
  /** A boolean value that indicates if the streaming ingest is enabled. */
  enableStreamingIngest?: boolean;
  /** Virtual network definition. */
  virtualNetworkConfiguration?: VirtualNetworkConfiguration;
  /** KeyVault properties for the cluster encryption. */
  keyVaultProperties?: KeyVaultProperties;
  /** A boolean value that indicates if the purge operations are enabled. */
  enablePurge?: boolean;
  /** List of the cluster's language extensions. */
  languageExtensions?: LanguageExtensionsList;
  /** A boolean value that indicates if double encryption is enabled. */
  enableDoubleEncryption?: boolean;
  /** Public network access to the cluster is enabled by default. When disabled, only private endpoint connection to the cluster is allowed */
  publicNetworkAccess?: PublicNetworkAccess;
  /** The list of ips in the format of CIDR allowed to connect to the cluster. */
  allowedIpRangeList?: string[];
  /** The engine type */
  engineType?: EngineType;
  /** The cluster's accepted audiences. */
  acceptedAudiences?: AcceptedAudiences[];
  /** A boolean value that indicates if the cluster could be automatically stopped (due to lack of data or no activity for many days). */
  enableAutoStop?: boolean;
  /** Whether or not to restrict outbound network access.  Value is optional but if passed in, must be 'Enabled' or 'Disabled' */
  restrictOutboundNetworkAccess?: ClusterNetworkAccessFlag;
  /** List of allowed FQDNs(Fully Qualified Domain Name) for egress from Cluster. */
  allowedFqdnList?: string[];
  /** Indicates what public IP type to create - IPv4 (default), or DualStack (both IPv4 and IPv6) */
  publicIPType?: PublicIPType;
  /** Virtual Cluster graduation properties */
  virtualClusterGraduationProperties?: string;
  /**
   * A list of private endpoint connections.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly privateEndpointConnections?: PrivateEndpointConnection[];
}

/** Class representing a read write database. */
export interface ReadWriteDatabase extends Database {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  kind: "ReadWrite";
  /**
   * The provisioned state of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /** The time the data should be kept before it stops being accessible to queries in TimeSpan. */
  softDeletePeriod?: string;
  /** The time the data should be kept in cache for fast queries in TimeSpan. */
  hotCachePeriod?: string;
  /**
   * The statistics of the database.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly statistics?: DatabaseStatistics;
  /**
   * Indicates whether the database is followed.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isFollowed?: boolean;
}

/** Class representing a read only following database. */
export interface ReadOnlyFollowingDatabase extends Database {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  kind: "ReadOnlyFollowing";
  /**
   * The provisioned state of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * The time the data should be kept before it stops being accessible to queries in TimeSpan.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly softDeletePeriod?: string;
  /** The time the data should be kept in cache for fast queries in TimeSpan. */
  hotCachePeriod?: string;
  /**
   * The statistics of the database.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly statistics?: DatabaseStatistics;
  /**
   * The name of the leader cluster
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly leaderClusterResourceId?: string;
  /**
   * The name of the attached database configuration cluster
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly attachedDatabaseConfigurationName?: string;
  /**
   * The principals modification kind of the database
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly principalsModificationKind?: PrincipalsModificationKind;
  /**
   * Table level sharing specifications
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly tableLevelSharingProperties?: TableLevelSharingProperties;
  /**
   * The original database name, before databaseNameOverride or databaseNamePrefix where applied.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly originalDatabaseName?: string;
  /**
   * The origin of the following setup.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly databaseShareOrigin?: DatabaseShareOrigin;
}

/** Class representing an event hub data connection. */
export interface EventHubDataConnection extends DataConnection {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  kind: "EventHub";
  /** The resource ID of the event hub to be used to create a data connection. */
  eventHubResourceId?: string;
  /** The event hub consumer group. */
  consumerGroup?: string;
  /** The table where the data should be ingested. Optionally the table information can be added to each message. */
  tableName?: string;
  /** The mapping rule to be used to ingest the data. Optionally the mapping information can be added to each message. */
  mappingRuleName?: string;
  /** The data format of the message. Optionally the data format can be added to each message. */
  dataFormat?: EventHubDataFormat;
  /** System properties of the event hub */
  eventSystemProperties?: string[];
  /** The event hub messages compression type */
  compression?: Compression;
  /**
   * The provisioned state of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /** The resource ID of a managed identity (system or user assigned) to be used to authenticate with event hub. */
  managedIdentityResourceId?: string;
  /**
   * The object ID of the managedIdentityResourceId
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly managedIdentityObjectId?: string;
  /** Indication for database routing information from the data connection, by default only database routing information is allowed */
  databaseRouting?: DatabaseRouting;
  /** When defined, the data connection retrieves existing Event hub events created since the Retrieval start date. It can only retrieve events retained by the Event hub, based on its retention period. */
  retrievalStartDate?: Date;
}

/** Class representing an iot hub data connection. */
export interface IotHubDataConnection extends DataConnection {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  kind: "IotHub";
  /** The resource ID of the Iot hub to be used to create a data connection. */
  iotHubResourceId?: string;
  /** The iot hub consumer group. */
  consumerGroup?: string;
  /** The table where the data should be ingested. Optionally the table information can be added to each message. */
  tableName?: string;
  /** The mapping rule to be used to ingest the data. Optionally the mapping information can be added to each message. */
  mappingRuleName?: string;
  /** The data format of the message. Optionally the data format can be added to each message. */
  dataFormat?: IotHubDataFormat;
  /** System properties of the iot hub */
  eventSystemProperties?: string[];
  /** The name of the share access policy */
  sharedAccessPolicyName?: string;
  /** Indication for database routing information from the data connection, by default only database routing information is allowed */
  databaseRouting?: DatabaseRouting;
  /** When defined, the data connection retrieves existing Event hub events created since the Retrieval start date. It can only retrieve events retained by the Event hub, based on its retention period. */
  retrievalStartDate?: Date;
  /**
   * The provisioned state of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
}

/** Class representing an Event Grid data connection. */
export interface EventGridDataConnection extends DataConnection {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  kind: "EventGrid";
  /** The resource ID of the storage account where the data resides. */
  storageAccountResourceId?: string;
  /** The resource ID of the event grid that is subscribed to the storage account events. */
  eventGridResourceId?: string;
  /** The resource ID where the event grid is configured to send events. */
  eventHubResourceId?: string;
  /** The event hub consumer group. */
  consumerGroup?: string;
  /** The table where the data should be ingested. Optionally the table information can be added to each message. */
  tableName?: string;
  /** The mapping rule to be used to ingest the data. Optionally the mapping information can be added to each message. */
  mappingRuleName?: string;
  /** The data format of the message. Optionally the data format can be added to each message. */
  dataFormat?: EventGridDataFormat;
  /** A Boolean value that, if set to true, indicates that ingestion should ignore the first record of every file */
  ignoreFirstRecord?: boolean;
  /** The name of blob storage event type to process. */
  blobStorageEventType?: BlobStorageEventType;
  /** The resource ID of a managed identity (system or user assigned) to be used to authenticate with event hub and storage account. */
  managedIdentityResourceId?: string;
  /**
   * The object ID of managedIdentityResourceId
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly managedIdentityObjectId?: string;
  /** Indication for database routing information from the data connection, by default only database routing information is allowed */
  databaseRouting?: DatabaseRouting;
  /**
   * The provisioned state of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
}

/** Class representing a CosmosDb data connection. */
export interface CosmosDbDataConnection extends DataConnection {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  kind: "CosmosDb";
  /** The case-sensitive name of the existing target table in your cluster. Retrieved data is ingested into this table. */
  tableName?: string;
  /** The name of an existing mapping rule to use when ingesting the retrieved data. */
  mappingRuleName?: string;
  /** The resource ID of a managed system or user-assigned identity. The identity is used to authenticate with Cosmos DB. */
  managedIdentityResourceId?: string;
  /**
   * The object ID of the managed identity resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly managedIdentityObjectId?: string;
  /** The resource ID of the Cosmos DB account used to create the data connection. */
  cosmosDbAccountResourceId?: string;
  /** The name of an existing database in the Cosmos DB account. */
  cosmosDbDatabase?: string;
  /** The name of an existing container in the Cosmos DB database. */
  cosmosDbContainer?: string;
  /** Optional. If defined, the data connection retrieves Cosmos DB documents created or updated after the specified retrieval start date. */
  retrievalStartDate?: Date;
  /**
   * The provisioned state of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
}

/** Defines headers for Clusters_update operation. */
export interface ClustersUpdateHeaders {
  /** URL to query for status of the operation. */
  azureAsyncOperation?: string;
}

/** Defines headers for Databases_update operation. */
export interface DatabasesUpdateHeaders {
  /** URL to query for status of the operation. */
  azureAsyncOperation?: string;
}

/** Defines headers for ManagedPrivateEndpoints_update operation. */
export interface ManagedPrivateEndpointsUpdateHeaders {
  /** URL to query for status of the operation. */
  azureAsyncOperation?: string;
}

/** Defines headers for Scripts_update operation. */
export interface ScriptsUpdateHeaders {
  /** URL to query for status of the operation. */
  azureAsyncOperation?: string;
}

/** Defines headers for DataConnections_update operation. */
export interface DataConnectionsUpdateHeaders {
  /** URL to query for status of the operation. */
  azureAsyncOperation?: string;
}

/** Known values of {@link AzureSkuName} that the service accepts. */
export enum KnownAzureSkuName {
  /** DevNoSLAStandardD11V2 */
  DevNoSLAStandardD11V2 = "Dev(No SLA)_Standard_D11_v2",
  /** DevNoSLAStandardE2AV4 */
  DevNoSLAStandardE2AV4 = "Dev(No SLA)_Standard_E2a_v4",
  /** StandardD11V2 */
  StandardD11V2 = "Standard_D11_v2",
  /** StandardD12V2 */
  StandardD12V2 = "Standard_D12_v2",
  /** StandardD13V2 */
  StandardD13V2 = "Standard_D13_v2",
  /** StandardD14V2 */
  StandardD14V2 = "Standard_D14_v2",
  /** StandardD32DV4 */
  StandardD32DV4 = "Standard_D32d_v4",
  /** StandardD16DV5 */
  StandardD16DV5 = "Standard_D16d_v5",
  /** StandardD32DV5 */
  StandardD32DV5 = "Standard_D32d_v5",
  /** StandardDS13V21TBPS */
  StandardDS13V21TBPS = "Standard_DS13_v2+1TB_PS",
  /** StandardDS13V22TBPS */
  StandardDS13V22TBPS = "Standard_DS13_v2+2TB_PS",
  /** StandardDS14V23TBPS */
  StandardDS14V23TBPS = "Standard_DS14_v2+3TB_PS",
  /** StandardDS14V24TBPS */
  StandardDS14V24TBPS = "Standard_DS14_v2+4TB_PS",
  /** StandardL4S */
  StandardL4S = "Standard_L4s",
  /** StandardL8S */
  StandardL8S = "Standard_L8s",
  /** StandardL16S */
  StandardL16S = "Standard_L16s",
  /** StandardL8SV2 */
  StandardL8SV2 = "Standard_L8s_v2",
  /** StandardL16SV2 */
  StandardL16SV2 = "Standard_L16s_v2",
  /** StandardL8SV3 */
  StandardL8SV3 = "Standard_L8s_v3",
  /** StandardL16SV3 */
  StandardL16SV3 = "Standard_L16s_v3",
  /** StandardL32SV3 */
  StandardL32SV3 = "Standard_L32s_v3",
  /** StandardL8AsV3 */
  StandardL8AsV3 = "Standard_L8as_v3",
  /** StandardL16AsV3 */
  StandardL16AsV3 = "Standard_L16as_v3",
  /** StandardL32AsV3 */
  StandardL32AsV3 = "Standard_L32as_v3",
  /** StandardE64IV3 */
  StandardE64IV3 = "Standard_E64i_v3",
  /** StandardE80IdsV4 */
  StandardE80IdsV4 = "Standard_E80ids_v4",
  /** StandardE2AV4 */
  StandardE2AV4 = "Standard_E2a_v4",
  /** StandardE4AV4 */
  StandardE4AV4 = "Standard_E4a_v4",
  /** StandardE8AV4 */
  StandardE8AV4 = "Standard_E8a_v4",
  /** StandardE16AV4 */
  StandardE16AV4 = "Standard_E16a_v4",
  /** StandardE8AsV41TBPS */
  StandardE8AsV41TBPS = "Standard_E8as_v4+1TB_PS",
  /** StandardE8AsV42TBPS */
  StandardE8AsV42TBPS = "Standard_E8as_v4+2TB_PS",
  /** StandardE16AsV43TBPS */
  StandardE16AsV43TBPS = "Standard_E16as_v4+3TB_PS",
  /** StandardE16AsV44TBPS */
  StandardE16AsV44TBPS = "Standard_E16as_v4+4TB_PS",
  /** StandardE8AsV51TBPS */
  StandardE8AsV51TBPS = "Standard_E8as_v5+1TB_PS",
  /** StandardE8AsV52TBPS */
  StandardE8AsV52TBPS = "Standard_E8as_v5+2TB_PS",
  /** StandardE16AsV53TBPS */
  StandardE16AsV53TBPS = "Standard_E16as_v5+3TB_PS",
  /** StandardE16AsV54TBPS */
  StandardE16AsV54TBPS = "Standard_E16as_v5+4TB_PS",
  /** StandardE2AdsV5 */
  StandardE2AdsV5 = "Standard_E2ads_v5",
  /** StandardE4AdsV5 */
  StandardE4AdsV5 = "Standard_E4ads_v5",
  /** StandardE8AdsV5 */
  StandardE8AdsV5 = "Standard_E8ads_v5",
  /** StandardE16AdsV5 */
  StandardE16AdsV5 = "Standard_E16ads_v5",
  /** StandardEC8AsV51TBPS */
  StandardEC8AsV51TBPS = "Standard_EC8as_v5+1TB_PS",
  /** StandardEC8AsV52TBPS */
  StandardEC8AsV52TBPS = "Standard_EC8as_v5+2TB_PS",
  /** StandardEC16AsV53TBPS */
  StandardEC16AsV53TBPS = "Standard_EC16as_v5+3TB_PS",
  /** StandardEC16AsV54TBPS */
  StandardEC16AsV54TBPS = "Standard_EC16as_v5+4TB_PS",
  /** StandardEC8AdsV5 */
  StandardEC8AdsV5 = "Standard_EC8ads_v5",
  /** StandardEC16AdsV5 */
  StandardEC16AdsV5 = "Standard_EC16ads_v5",
  /** StandardE8SV41TBPS */
  StandardE8SV41TBPS = "Standard_E8s_v4+1TB_PS",
  /** StandardE8SV42TBPS */
  StandardE8SV42TBPS = "Standard_E8s_v4+2TB_PS",
  /** StandardE16SV43TBPS */
  StandardE16SV43TBPS = "Standard_E16s_v4+3TB_PS",
  /** StandardE16SV44TBPS */
  StandardE16SV44TBPS = "Standard_E16s_v4+4TB_PS",
  /** StandardE8SV51TBPS */
  StandardE8SV51TBPS = "Standard_E8s_v5+1TB_PS",
  /** StandardE8SV52TBPS */
  StandardE8SV52TBPS = "Standard_E8s_v5+2TB_PS",
  /** StandardE16SV53TBPS */
  StandardE16SV53TBPS = "Standard_E16s_v5+3TB_PS",
  /** StandardE16SV54TBPS */
  StandardE16SV54TBPS = "Standard_E16s_v5+4TB_PS",
  /** StandardE2DV4 */
  StandardE2DV4 = "Standard_E2d_v4",
  /** StandardE4DV4 */
  StandardE4DV4 = "Standard_E4d_v4",
  /** StandardE8DV4 */
  StandardE8DV4 = "Standard_E8d_v4",
  /** StandardE16DV4 */
  StandardE16DV4 = "Standard_E16d_v4",
  /** StandardE2DV5 */
  StandardE2DV5 = "Standard_E2d_v5",
  /** StandardE4DV5 */
  StandardE4DV5 = "Standard_E4d_v5",
  /** StandardE8DV5 */
  StandardE8DV5 = "Standard_E8d_v5",
  /** StandardE16DV5 */
  StandardE16DV5 = "Standard_E16d_v5"
}

/**
 * Defines values for AzureSkuName. \
 * {@link KnownAzureSkuName} can be used interchangeably with AzureSkuName,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Dev(No SLA)_Standard_D11_v2** \
 * **Dev(No SLA)_Standard_E2a_v4** \
 * **Standard_D11_v2** \
 * **Standard_D12_v2** \
 * **Standard_D13_v2** \
 * **Standard_D14_v2** \
 * **Standard_D32d_v4** \
 * **Standard_D16d_v5** \
 * **Standard_D32d_v5** \
 * **Standard_DS13_v2+1TB_PS** \
 * **Standard_DS13_v2+2TB_PS** \
 * **Standard_DS14_v2+3TB_PS** \
 * **Standard_DS14_v2+4TB_PS** \
 * **Standard_L4s** \
 * **Standard_L8s** \
 * **Standard_L16s** \
 * **Standard_L8s_v2** \
 * **Standard_L16s_v2** \
 * **Standard_L8s_v3** \
 * **Standard_L16s_v3** \
 * **Standard_L32s_v3** \
 * **Standard_L8as_v3** \
 * **Standard_L16as_v3** \
 * **Standard_L32as_v3** \
 * **Standard_E64i_v3** \
 * **Standard_E80ids_v4** \
 * **Standard_E2a_v4** \
 * **Standard_E4a_v4** \
 * **Standard_E8a_v4** \
 * **Standard_E16a_v4** \
 * **Standard_E8as_v4+1TB_PS** \
 * **Standard_E8as_v4+2TB_PS** \
 * **Standard_E16as_v4+3TB_PS** \
 * **Standard_E16as_v4+4TB_PS** \
 * **Standard_E8as_v5+1TB_PS** \
 * **Standard_E8as_v5+2TB_PS** \
 * **Standard_E16as_v5+3TB_PS** \
 * **Standard_E16as_v5+4TB_PS** \
 * **Standard_E2ads_v5** \
 * **Standard_E4ads_v5** \
 * **Standard_E8ads_v5** \
 * **Standard_E16ads_v5** \
 * **Standard_EC8as_v5+1TB_PS** \
 * **Standard_EC8as_v5+2TB_PS** \
 * **Standard_EC16as_v5+3TB_PS** \
 * **Standard_EC16as_v5+4TB_PS** \
 * **Standard_EC8ads_v5** \
 * **Standard_EC16ads_v5** \
 * **Standard_E8s_v4+1TB_PS** \
 * **Standard_E8s_v4+2TB_PS** \
 * **Standard_E16s_v4+3TB_PS** \
 * **Standard_E16s_v4+4TB_PS** \
 * **Standard_E8s_v5+1TB_PS** \
 * **Standard_E8s_v5+2TB_PS** \
 * **Standard_E16s_v5+3TB_PS** \
 * **Standard_E16s_v5+4TB_PS** \
 * **Standard_E2d_v4** \
 * **Standard_E4d_v4** \
 * **Standard_E8d_v4** \
 * **Standard_E16d_v4** \
 * **Standard_E2d_v5** \
 * **Standard_E4d_v5** \
 * **Standard_E8d_v5** \
 * **Standard_E16d_v5**
 */
export type AzureSkuName = string;

/** Known values of {@link AzureSkuTier} that the service accepts. */
export enum KnownAzureSkuTier {
  /** Basic */
  Basic = "Basic",
  /** Standard */
  Standard = "Standard"
}

/**
 * Defines values for AzureSkuTier. \
 * {@link KnownAzureSkuTier} can be used interchangeably with AzureSkuTier,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Basic** \
 * **Standard**
 */
export type AzureSkuTier = string;

/** Known values of {@link CreatedByType} that the service accepts. */
export enum KnownCreatedByType {
  /** User */
  User = "User",
  /** Application */
  Application = "Application",
  /** ManagedIdentity */
  ManagedIdentity = "ManagedIdentity",
  /** Key */
  Key = "Key"
}

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export type CreatedByType = string;

/** Known values of {@link IdentityType} that the service accepts. */
export enum KnownIdentityType {
  /** None */
  None = "None",
  /** SystemAssigned */
  SystemAssigned = "SystemAssigned",
  /** UserAssigned */
  UserAssigned = "UserAssigned",
  /** SystemAssignedUserAssigned */
  SystemAssignedUserAssigned = "SystemAssigned, UserAssigned"
}

/**
 * Defines values for IdentityType. \
 * {@link KnownIdentityType} can be used interchangeably with IdentityType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **SystemAssigned** \
 * **UserAssigned** \
 * **SystemAssigned, UserAssigned**
 */
export type IdentityType = string;

/** Known values of {@link State} that the service accepts. */
export enum KnownState {
  /** Creating */
  Creating = "Creating",
  /** Unavailable */
  Unavailable = "Unavailable",
  /** Running */
  Running = "Running",
  /** Deleting */
  Deleting = "Deleting",
  /** Deleted */
  Deleted = "Deleted",
  /** Stopping */
  Stopping = "Stopping",
  /** Stopped */
  Stopped = "Stopped",
  /** Starting */
  Starting = "Starting",
  /** Updating */
  Updating = "Updating"
}

/**
 * Defines values for State. \
 * {@link KnownState} can be used interchangeably with State,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Creating** \
 * **Unavailable** \
 * **Running** \
 * **Deleting** \
 * **Deleted** \
 * **Stopping** \
 * **Stopped** \
 * **Starting** \
 * **Updating**
 */
export type State = string;

/** Known values of {@link ProvisioningState} that the service accepts. */
export enum KnownProvisioningState {
  /** Running */
  Running = "Running",
  /** Creating */
  Creating = "Creating",
  /** Deleting */
  Deleting = "Deleting",
  /** Succeeded */
  Succeeded = "Succeeded",
  /** Failed */
  Failed = "Failed",
  /** Moving */
  Moving = "Moving",
  /** Canceled */
  Canceled = "Canceled"
}

/**
 * Defines values for ProvisioningState. \
 * {@link KnownProvisioningState} can be used interchangeably with ProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Running** \
 * **Creating** \
 * **Deleting** \
 * **Succeeded** \
 * **Failed** \
 * **Moving** \
 * **Canceled**
 */
export type ProvisioningState = string;

/** Known values of {@link LanguageExtensionName} that the service accepts. */
export enum KnownLanguageExtensionName {
  /** Python */
  Python = "PYTHON",
  /** R */
  R = "R"
}

/**
 * Defines values for LanguageExtensionName. \
 * {@link KnownLanguageExtensionName} can be used interchangeably with LanguageExtensionName,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **PYTHON** \
 * **R**
 */
export type LanguageExtensionName = string;

/** Known values of {@link LanguageExtensionImageName} that the service accepts. */
export enum KnownLanguageExtensionImageName {
  /** R */
  R = "R",
  /** Python365 */
  Python365 = "Python3_6_5",
  /** Python3912 */
  Python3912 = "Python3_9_12",
  /** Python3912IncludeDeepLearning */
  Python3912IncludeDeepLearning = "Python3_9_12IncludeDeepLearning",
  /** Python3108 */
  Python3108 = "Python3_10_8"
}

/**
 * Defines values for LanguageExtensionImageName. \
 * {@link KnownLanguageExtensionImageName} can be used interchangeably with LanguageExtensionImageName,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **R** \
 * **Python3_6_5** \
 * **Python3_9_12** \
 * **Python3_9_12IncludeDeepLearning** \
 * **Python3_10_8**
 */
export type LanguageExtensionImageName = string;

/** Known values of {@link PublicNetworkAccess} that the service accepts. */
export enum KnownPublicNetworkAccess {
  /** Enabled */
  Enabled = "Enabled",
  /** Disabled */
  Disabled = "Disabled"
}

/**
 * Defines values for PublicNetworkAccess. \
 * {@link KnownPublicNetworkAccess} can be used interchangeably with PublicNetworkAccess,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Enabled** \
 * **Disabled**
 */
export type PublicNetworkAccess = string;

/** Known values of {@link EngineType} that the service accepts. */
export enum KnownEngineType {
  /** V2 */
  V2 = "V2",
  /** V3 */
  V3 = "V3"
}

/**
 * Defines values for EngineType. \
 * {@link KnownEngineType} can be used interchangeably with EngineType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **V2** \
 * **V3**
 */
export type EngineType = string;

/** Known values of {@link ClusterNetworkAccessFlag} that the service accepts. */
export enum KnownClusterNetworkAccessFlag {
  /** Enabled */
  Enabled = "Enabled",
  /** Disabled */
  Disabled = "Disabled"
}

/**
 * Defines values for ClusterNetworkAccessFlag. \
 * {@link KnownClusterNetworkAccessFlag} can be used interchangeably with ClusterNetworkAccessFlag,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Enabled** \
 * **Disabled**
 */
export type ClusterNetworkAccessFlag = string;

/** Known values of {@link PublicIPType} that the service accepts. */
export enum KnownPublicIPType {
  /** IPv4 */
  IPv4 = "IPv4",
  /** DualStack */
  DualStack = "DualStack"
}

/**
 * Defines values for PublicIPType. \
 * {@link KnownPublicIPType} can be used interchangeably with PublicIPType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **IPv4** \
 * **DualStack**
 */
export type PublicIPType = string;

/** Known values of {@link Reason} that the service accepts. */
export enum KnownReason {
  /** Invalid */
  Invalid = "Invalid",
  /** AlreadyExists */
  AlreadyExists = "AlreadyExists"
}

/**
 * Defines values for Reason. \
 * {@link KnownReason} can be used interchangeably with Reason,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **AlreadyExists**
 */
export type Reason = string;

/** Known values of {@link ClusterPrincipalRole} that the service accepts. */
export enum KnownClusterPrincipalRole {
  /** AllDatabasesAdmin */
  AllDatabasesAdmin = "AllDatabasesAdmin",
  /** AllDatabasesViewer */
  AllDatabasesViewer = "AllDatabasesViewer"
}

/**
 * Defines values for ClusterPrincipalRole. \
 * {@link KnownClusterPrincipalRole} can be used interchangeably with ClusterPrincipalRole,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **AllDatabasesAdmin** \
 * **AllDatabasesViewer**
 */
export type ClusterPrincipalRole = string;

/** Known values of {@link PrincipalType} that the service accepts. */
export enum KnownPrincipalType {
  /** App */
  App = "App",
  /** Group */
  Group = "Group",
  /** User */
  User = "User"
}

/**
 * Defines values for PrincipalType. \
 * {@link KnownPrincipalType} can be used interchangeably with PrincipalType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **App** \
 * **Group** \
 * **User**
 */
export type PrincipalType = string;

/** Known values of {@link DatabaseShareOrigin} that the service accepts. */
export enum KnownDatabaseShareOrigin {
  /** Direct */
  Direct = "Direct",
  /** DataShare */
  DataShare = "DataShare",
  /** Other */
  Other = "Other"
}

/**
 * Defines values for DatabaseShareOrigin. \
 * {@link KnownDatabaseShareOrigin} can be used interchangeably with DatabaseShareOrigin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Direct** \
 * **DataShare** \
 * **Other**
 */
export type DatabaseShareOrigin = string;

/** Known values of {@link AzureScaleType} that the service accepts. */
export enum KnownAzureScaleType {
  /** Automatic */
  Automatic = "automatic",
  /** Manual */
  Manual = "manual",
  /** None */
  None = "none"
}

/**
 * Defines values for AzureScaleType. \
 * {@link KnownAzureScaleType} can be used interchangeably with AzureScaleType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **automatic** \
 * **manual** \
 * **none**
 */
export type AzureScaleType = string;

/** Known values of {@link Kind} that the service accepts. */
export enum KnownKind {
  /** ReadWrite */
  ReadWrite = "ReadWrite",
  /** ReadOnlyFollowing */
  ReadOnlyFollowing = "ReadOnlyFollowing"
}

/**
 * Defines values for Kind. \
 * {@link KnownKind} can be used interchangeably with Kind,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **ReadWrite** \
 * **ReadOnlyFollowing**
 */
export type Kind = string;

/** Known values of {@link CallerRole} that the service accepts. */
export enum KnownCallerRole {
  /** Admin */
  Admin = "Admin",
  /** None */
  None = "None"
}

/**
 * Defines values for CallerRole. \
 * {@link KnownCallerRole} can be used interchangeably with CallerRole,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Admin** \
 * **None**
 */
export type CallerRole = string;

/** Known values of {@link DatabasePrincipalRole} that the service accepts. */
export enum KnownDatabasePrincipalRole {
  /** Admin */
  Admin = "Admin",
  /** Ingestor */
  Ingestor = "Ingestor",
  /** Monitor */
  Monitor = "Monitor",
  /** User */
  User = "User",
  /** UnrestrictedViewer */
  UnrestrictedViewer = "UnrestrictedViewer",
  /** Viewer */
  Viewer = "Viewer"
}

/**
 * Defines values for DatabasePrincipalRole. \
 * {@link KnownDatabasePrincipalRole} can be used interchangeably with DatabasePrincipalRole,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Admin** \
 * **Ingestor** \
 * **Monitor** \
 * **User** \
 * **UnrestrictedViewer** \
 * **Viewer**
 */
export type DatabasePrincipalRole = string;

/** Known values of {@link DatabasePrincipalType} that the service accepts. */
export enum KnownDatabasePrincipalType {
  /** App */
  App = "App",
  /** Group */
  Group = "Group",
  /** User */
  User = "User"
}

/**
 * Defines values for DatabasePrincipalType. \
 * {@link KnownDatabasePrincipalType} can be used interchangeably with DatabasePrincipalType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **App** \
 * **Group** \
 * **User**
 */
export type DatabasePrincipalType = string;

/** Known values of {@link DefaultPrincipalsModificationKind} that the service accepts. */
export enum KnownDefaultPrincipalsModificationKind {
  /** Union */
  Union = "Union",
  /** Replace */
  Replace = "Replace",
  /** None */
  None = "None"
}

/**
 * Defines values for DefaultPrincipalsModificationKind. \
 * {@link KnownDefaultPrincipalsModificationKind} can be used interchangeably with DefaultPrincipalsModificationKind,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Union** \
 * **Replace** \
 * **None**
 */
export type DefaultPrincipalsModificationKind = string;

/** Known values of {@link DataConnectionKind} that the service accepts. */
export enum KnownDataConnectionKind {
  /** EventHub */
  EventHub = "EventHub",
  /** EventGrid */
  EventGrid = "EventGrid",
  /** IotHub */
  IotHub = "IotHub",
  /** CosmosDb */
  CosmosDb = "CosmosDb"
}

/**
 * Defines values for DataConnectionKind. \
 * {@link KnownDataConnectionKind} can be used interchangeably with DataConnectionKind,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **EventHub** \
 * **EventGrid** \
 * **IotHub** \
 * **CosmosDb**
 */
export type DataConnectionKind = string;

/** Known values of {@link Status} that the service accepts. */
export enum KnownStatus {
  /** Succeeded */
  Succeeded = "Succeeded",
  /** Canceled */
  Canceled = "Canceled",
  /** Failed */
  Failed = "Failed",
  /** Running */
  Running = "Running"
}

/**
 * Defines values for Status. \
 * {@link KnownStatus} can be used interchangeably with Status,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Succeeded** \
 * **Canceled** \
 * **Failed** \
 * **Running**
 */
export type Status = string;

/** Known values of {@link PrincipalsModificationKind} that the service accepts. */
export enum KnownPrincipalsModificationKind {
  /** Union */
  Union = "Union",
  /** Replace */
  Replace = "Replace",
  /** None */
  None = "None"
}

/**
 * Defines values for PrincipalsModificationKind. \
 * {@link KnownPrincipalsModificationKind} can be used interchangeably with PrincipalsModificationKind,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Union** \
 * **Replace** \
 * **None**
 */
export type PrincipalsModificationKind = string;

/** Known values of {@link EventHubDataFormat} that the service accepts. */
export enum KnownEventHubDataFormat {
  /** Multijson */
  Multijson = "MULTIJSON",
  /** Json */
  Json = "JSON",
  /** CSV */
  CSV = "CSV",
  /** TSV */
  TSV = "TSV",
  /** Scsv */
  Scsv = "SCSV",
  /** Sohsv */
  Sohsv = "SOHSV",
  /** PSV */
  PSV = "PSV",
  /** TXT */
  TXT = "TXT",
  /** RAW */
  RAW = "RAW",
  /** Singlejson */
  Singlejson = "SINGLEJSON",
  /** Avro */
  Avro = "AVRO",
  /** Tsve */
  Tsve = "TSVE",
  /** Parquet */
  Parquet = "PARQUET",
  /** ORC */
  ORC = "ORC",
  /** Apacheavro */
  Apacheavro = "APACHEAVRO",
  /** W3Clogfile */
  W3Clogfile = "W3CLOGFILE"
}

/**
 * Defines values for EventHubDataFormat. \
 * {@link KnownEventHubDataFormat} can be used interchangeably with EventHubDataFormat,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **MULTIJSON** \
 * **JSON** \
 * **CSV** \
 * **TSV** \
 * **SCSV** \
 * **SOHSV** \
 * **PSV** \
 * **TXT** \
 * **RAW** \
 * **SINGLEJSON** \
 * **AVRO** \
 * **TSVE** \
 * **PARQUET** \
 * **ORC** \
 * **APACHEAVRO** \
 * **W3CLOGFILE**
 */
export type EventHubDataFormat = string;

/** Known values of {@link Compression} that the service accepts. */
export enum KnownCompression {
  /** None */
  None = "None",
  /** GZip */
  GZip = "GZip"
}

/**
 * Defines values for Compression. \
 * {@link KnownCompression} can be used interchangeably with Compression,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **None** \
 * **GZip**
 */
export type Compression = string;

/** Known values of {@link DatabaseRouting} that the service accepts. */
export enum KnownDatabaseRouting {
  /** Single */
  Single = "Single",
  /** Multi */
  Multi = "Multi"
}

/**
 * Defines values for DatabaseRouting. \
 * {@link KnownDatabaseRouting} can be used interchangeably with DatabaseRouting,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Single** \
 * **Multi**
 */
export type DatabaseRouting = string;

/** Known values of {@link IotHubDataFormat} that the service accepts. */
export enum KnownIotHubDataFormat {
  /** Multijson */
  Multijson = "MULTIJSON",
  /** Json */
  Json = "JSON",
  /** CSV */
  CSV = "CSV",
  /** TSV */
  TSV = "TSV",
  /** Scsv */
  Scsv = "SCSV",
  /** Sohsv */
  Sohsv = "SOHSV",
  /** PSV */
  PSV = "PSV",
  /** TXT */
  TXT = "TXT",
  /** RAW */
  RAW = "RAW",
  /** Singlejson */
  Singlejson = "SINGLEJSON",
  /** Avro */
  Avro = "AVRO",
  /** Tsve */
  Tsve = "TSVE",
  /** Parquet */
  Parquet = "PARQUET",
  /** ORC */
  ORC = "ORC",
  /** Apacheavro */
  Apacheavro = "APACHEAVRO",
  /** W3Clogfile */
  W3Clogfile = "W3CLOGFILE"
}

/**
 * Defines values for IotHubDataFormat. \
 * {@link KnownIotHubDataFormat} can be used interchangeably with IotHubDataFormat,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **MULTIJSON** \
 * **JSON** \
 * **CSV** \
 * **TSV** \
 * **SCSV** \
 * **SOHSV** \
 * **PSV** \
 * **TXT** \
 * **RAW** \
 * **SINGLEJSON** \
 * **AVRO** \
 * **TSVE** \
 * **PARQUET** \
 * **ORC** \
 * **APACHEAVRO** \
 * **W3CLOGFILE**
 */
export type IotHubDataFormat = string;

/** Known values of {@link EventGridDataFormat} that the service accepts. */
export enum KnownEventGridDataFormat {
  /** Multijson */
  Multijson = "MULTIJSON",
  /** Json */
  Json = "JSON",
  /** CSV */
  CSV = "CSV",
  /** TSV */
  TSV = "TSV",
  /** Scsv */
  Scsv = "SCSV",
  /** Sohsv */
  Sohsv = "SOHSV",
  /** PSV */
  PSV = "PSV",
  /** TXT */
  TXT = "TXT",
  /** RAW */
  RAW = "RAW",
  /** Singlejson */
  Singlejson = "SINGLEJSON",
  /** Avro */
  Avro = "AVRO",
  /** Tsve */
  Tsve = "TSVE",
  /** Parquet */
  Parquet = "PARQUET",
  /** ORC */
  ORC = "ORC",
  /** Apacheavro */
  Apacheavro = "APACHEAVRO",
  /** W3Clogfile */
  W3Clogfile = "W3CLOGFILE"
}

/**
 * Defines values for EventGridDataFormat. \
 * {@link KnownEventGridDataFormat} can be used interchangeably with EventGridDataFormat,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **MULTIJSON** \
 * **JSON** \
 * **CSV** \
 * **TSV** \
 * **SCSV** \
 * **SOHSV** \
 * **PSV** \
 * **TXT** \
 * **RAW** \
 * **SINGLEJSON** \
 * **AVRO** \
 * **TSVE** \
 * **PARQUET** \
 * **ORC** \
 * **APACHEAVRO** \
 * **W3CLOGFILE**
 */
export type EventGridDataFormat = string;

/** Known values of {@link BlobStorageEventType} that the service accepts. */
export enum KnownBlobStorageEventType {
  /** MicrosoftStorageBlobCreated */
  MicrosoftStorageBlobCreated = "Microsoft.Storage.BlobCreated",
  /** MicrosoftStorageBlobRenamed */
  MicrosoftStorageBlobRenamed = "Microsoft.Storage.BlobRenamed"
}

/**
 * Defines values for BlobStorageEventType. \
 * {@link KnownBlobStorageEventType} can be used interchangeably with BlobStorageEventType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Microsoft.Storage.BlobCreated** \
 * **Microsoft.Storage.BlobRenamed**
 */
export type BlobStorageEventType = string;
/** Defines values for Type. */
export type Type =
  | "Microsoft.Kusto/clusters/databases"
  | "Microsoft.Kusto/clusters/attachedDatabaseConfigurations";

/** Optional parameters. */
export interface ClustersGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ClustersGetResponse = Cluster;

/** Optional parameters. */
export interface ClustersCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** The ETag of the cluster. Omit this value to always overwrite the current cluster. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes. */
  ifMatch?: string;
  /** Set to '*' to allow a new cluster to be created, but to prevent updating an existing cluster. Other values will result in a 412 Pre-condition Failed response. */
  ifNoneMatch?: string;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type ClustersCreateOrUpdateResponse = Cluster;

/** Optional parameters. */
export interface ClustersUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** The ETag of the cluster. Omit this value to always overwrite the current cluster. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes. */
  ifMatch?: string;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type ClustersUpdateResponse = Cluster;

/** Optional parameters. */
export interface ClustersDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface ClustersStopOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface ClustersStartOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface ClustersListFollowerDatabasesOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listFollowerDatabases operation. */
export type ClustersListFollowerDatabasesResponse = FollowerDatabaseListResult;

/** Optional parameters. */
export interface ClustersDetachFollowerDatabasesOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface ClustersDiagnoseVirtualNetworkOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the diagnoseVirtualNetwork operation. */
export type ClustersDiagnoseVirtualNetworkResponse = DiagnoseVirtualNetworkResult;

/** Optional parameters. */
export interface ClustersListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type ClustersListByResourceGroupResponse = ClusterListResult;

/** Optional parameters. */
export interface ClustersListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type ClustersListResponse = ClusterListResult;

/** Optional parameters. */
export interface ClustersListSkusOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listSkus operation. */
export type ClustersListSkusResponse = SkuDescriptionList;

/** Optional parameters. */
export interface ClustersCheckNameAvailabilityOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the checkNameAvailability operation. */
export type ClustersCheckNameAvailabilityResponse = CheckNameResult;

/** Optional parameters. */
export interface ClustersListSkusByResourceOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listSkusByResource operation. */
export type ClustersListSkusByResourceResponse = ListResourceSkusResult;

/** Optional parameters. */
export interface ClustersListOutboundNetworkDependenciesEndpointsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listOutboundNetworkDependenciesEndpoints operation. */
export type ClustersListOutboundNetworkDependenciesEndpointsResponse = OutboundNetworkDependenciesEndpointListResult;

/** Optional parameters. */
export interface ClustersListLanguageExtensionsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listLanguageExtensions operation. */
export type ClustersListLanguageExtensionsResponse = LanguageExtensionsList;

/** Optional parameters. */
export interface ClustersAddLanguageExtensionsOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface ClustersRemoveLanguageExtensionsOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface ClustersListOutboundNetworkDependenciesEndpointsNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listOutboundNetworkDependenciesEndpointsNext operation. */
export type ClustersListOutboundNetworkDependenciesEndpointsNextResponse = OutboundNetworkDependenciesEndpointListResult;

/** Optional parameters. */
export interface ClusterPrincipalAssignmentsCheckNameAvailabilityOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the checkNameAvailability operation. */
export type ClusterPrincipalAssignmentsCheckNameAvailabilityResponse = CheckNameResult;

/** Optional parameters. */
export interface ClusterPrincipalAssignmentsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ClusterPrincipalAssignmentsGetResponse = ClusterPrincipalAssignment;

/** Optional parameters. */
export interface ClusterPrincipalAssignmentsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type ClusterPrincipalAssignmentsCreateOrUpdateResponse = ClusterPrincipalAssignment;

/** Optional parameters. */
export interface ClusterPrincipalAssignmentsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface ClusterPrincipalAssignmentsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type ClusterPrincipalAssignmentsListResponse = ClusterPrincipalAssignmentListResult;

/** Optional parameters. */
export interface SkusListOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type SkusListResponse = SkuDescriptionList;

/** Optional parameters. */
export interface DatabasesCheckNameAvailabilityOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the checkNameAvailability operation. */
export type DatabasesCheckNameAvailabilityResponse = CheckNameResult;

/** Optional parameters. */
export interface DatabasesListByClusterOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByCluster operation. */
export type DatabasesListByClusterResponse = DatabaseListResult;

/** Optional parameters. */
export interface DatabasesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type DatabasesGetResponse = DatabaseUnion;

/** Optional parameters. */
export interface DatabasesCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** By default, any user who run operation on a database become an Admin on it. This property allows the caller to exclude the caller from Admins list. */
  callerRole?: CallerRole;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type DatabasesCreateOrUpdateResponse = DatabaseUnion;

/** Optional parameters. */
export interface DatabasesUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** By default, any user who run operation on a database become an Admin on it. This property allows the caller to exclude the caller from Admins list. */
  callerRole?: CallerRole;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type DatabasesUpdateResponse = DatabaseUnion;

/** Optional parameters. */
export interface DatabasesDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface DatabasesListPrincipalsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listPrincipals operation. */
export type DatabasesListPrincipalsResponse = DatabasePrincipalListResult;

/** Optional parameters. */
export interface DatabasesAddPrincipalsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the addPrincipals operation. */
export type DatabasesAddPrincipalsResponse = DatabasePrincipalListResult;

/** Optional parameters. */
export interface DatabasesRemovePrincipalsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the removePrincipals operation. */
export type DatabasesRemovePrincipalsResponse = DatabasePrincipalListResult;

/** Optional parameters. */
export interface AttachedDatabaseConfigurationsCheckNameAvailabilityOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the checkNameAvailability operation. */
export type AttachedDatabaseConfigurationsCheckNameAvailabilityResponse = CheckNameResult;

/** Optional parameters. */
export interface AttachedDatabaseConfigurationsListByClusterOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByCluster operation. */
export type AttachedDatabaseConfigurationsListByClusterResponse = AttachedDatabaseConfigurationListResult;

/** Optional parameters. */
export interface AttachedDatabaseConfigurationsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type AttachedDatabaseConfigurationsGetResponse = AttachedDatabaseConfiguration;

/** Optional parameters. */
export interface AttachedDatabaseConfigurationsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type AttachedDatabaseConfigurationsCreateOrUpdateResponse = AttachedDatabaseConfiguration;

/** Optional parameters. */
export interface AttachedDatabaseConfigurationsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface ManagedPrivateEndpointsCheckNameAvailabilityOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the checkNameAvailability operation. */
export type ManagedPrivateEndpointsCheckNameAvailabilityResponse = CheckNameResult;

/** Optional parameters. */
export interface ManagedPrivateEndpointsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type ManagedPrivateEndpointsListResponse = ManagedPrivateEndpointListResult;

/** Optional parameters. */
export interface ManagedPrivateEndpointsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ManagedPrivateEndpointsGetResponse = ManagedPrivateEndpoint;

/** Optional parameters. */
export interface ManagedPrivateEndpointsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type ManagedPrivateEndpointsCreateOrUpdateResponse = ManagedPrivateEndpoint;

/** Optional parameters. */
export interface ManagedPrivateEndpointsUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type ManagedPrivateEndpointsUpdateResponse = ManagedPrivateEndpoint;

/** Optional parameters. */
export interface ManagedPrivateEndpointsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface DatabasePrincipalAssignmentsCheckNameAvailabilityOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the checkNameAvailability operation. */
export type DatabasePrincipalAssignmentsCheckNameAvailabilityResponse = CheckNameResult;

/** Optional parameters. */
export interface DatabasePrincipalAssignmentsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type DatabasePrincipalAssignmentsGetResponse = DatabasePrincipalAssignment;

/** Optional parameters. */
export interface DatabasePrincipalAssignmentsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type DatabasePrincipalAssignmentsCreateOrUpdateResponse = DatabasePrincipalAssignment;

/** Optional parameters. */
export interface DatabasePrincipalAssignmentsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface DatabasePrincipalAssignmentsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type DatabasePrincipalAssignmentsListResponse = DatabasePrincipalAssignmentListResult;

/** Optional parameters. */
export interface ScriptsListByDatabaseOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByDatabase operation. */
export type ScriptsListByDatabaseResponse = ScriptListResult;

/** Optional parameters. */
export interface ScriptsGetOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type ScriptsGetResponse = Script;

/** Optional parameters. */
export interface ScriptsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type ScriptsCreateOrUpdateResponse = Script;

/** Optional parameters. */
export interface ScriptsUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type ScriptsUpdateResponse = Script;

/** Optional parameters. */
export interface ScriptsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface ScriptsCheckNameAvailabilityOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the checkNameAvailability operation. */
export type ScriptsCheckNameAvailabilityResponse = CheckNameResult;

/** Optional parameters. */
export interface PrivateEndpointConnectionsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type PrivateEndpointConnectionsListResponse = PrivateEndpointConnectionListResult;

/** Optional parameters. */
export interface PrivateEndpointConnectionsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type PrivateEndpointConnectionsGetResponse = PrivateEndpointConnection;

/** Optional parameters. */
export interface PrivateEndpointConnectionsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type PrivateEndpointConnectionsCreateOrUpdateResponse = PrivateEndpointConnection;

/** Optional parameters. */
export interface PrivateEndpointConnectionsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface PrivateLinkResourcesListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type PrivateLinkResourcesListResponse = PrivateLinkResourceListResult;

/** Optional parameters. */
export interface PrivateLinkResourcesGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type PrivateLinkResourcesGetResponse = PrivateLinkResource;

/** Optional parameters. */
export interface DataConnectionsListByDatabaseOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByDatabase operation. */
export type DataConnectionsListByDatabaseResponse = DataConnectionListResult;

/** Optional parameters. */
export interface DataConnectionsDataConnectionValidationOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the dataConnectionValidation operation. */
export type DataConnectionsDataConnectionValidationResponse = DataConnectionValidationListResult;

/** Optional parameters. */
export interface DataConnectionsCheckNameAvailabilityOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the checkNameAvailability operation. */
export type DataConnectionsCheckNameAvailabilityResponse = CheckNameResult;

/** Optional parameters. */
export interface DataConnectionsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type DataConnectionsGetResponse = DataConnectionUnion;

/** Optional parameters. */
export interface DataConnectionsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type DataConnectionsCreateOrUpdateResponse = DataConnectionUnion;

/** Optional parameters. */
export interface DataConnectionsUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type DataConnectionsUpdateResponse = DataConnectionUnion;

/** Optional parameters. */
export interface DataConnectionsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface OperationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type OperationsListResponse = OperationListResult;

/** Optional parameters. */
export interface OperationsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type OperationsListNextResponse = OperationListResult;

/** Optional parameters. */
export interface OperationsResultsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type OperationsResultsGetResponse = OperationResult;

/** Optional parameters. */
export interface OperationsResultsLocationGetOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface KustoManagementClientOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
