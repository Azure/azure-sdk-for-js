/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  env,
  record,
  RecorderEnvironmentSetup,
  Recorder
} from "@azure-tools/test-recorder";
import { Cluster, KustoManagementClient } from "../src";
import { ClientSecretCredential } from "@azure/identity";
import * as assert from "assert";

const recorderEnvSetup: RecorderEnvironmentSetup = {
  replaceableVariables: {
    AZURE_CLIENT_ID: "azure_client_id",
    AZURE_CLIENT_SECRET: "azure_client_secret",
    AZURE_TENANT_ID: "88888888-8888-8888-8888-888888888888",
    SUBSCRIPTION_ID: "azure_subscription_id"
  },
  customizationsOnRecordings: [
    (recording: any): any =>
      recording.replace(
        /"access_token":"[^"]*"/g,
        `"access_token":"access_token"`
      )
  ],
  queryParametersToSkip: []
};

describe("KustoManagementClient test", () => {
  let recorder: Recorder;
  let subscriptionId: string;
  let client: KustoManagementClient;

  beforeEach(async function () {
    recorder = record(this, recorderEnvSetup);
    subscriptionId = env.SUBSCRIPTION_ID;
    // This is an example of how the environment variables are used
    const credential = new ClientSecretCredential(
      env.AZURE_TENANT_ID,
      env.AZURE_CLIENT_ID,
      env.AZURE_CLIENT_SECRET
    );
    client = new KustoManagementClient(credential, subscriptionId);
  });

  afterEach(async function () {
    await recorder.stop();
  });

  it("#beginCreateOrUpdateAndWait - create clusters", async function () {
    const clusterName = "MyClusterNameXarqRnd";
    const BODY: Cluster = {
      "location": "eastus",
      "sku": {
        "name": "Standard_L8s_v2",
        "tier": "Standard"
      },
      "identity": {
        "type": "SystemAssigned"
      },
    };
    const res = await client.clusters.beginCreateOrUpdateAndWait("marytest", clusterName, BODY);
    assert.equal(res.location, "East US");
  });
});
