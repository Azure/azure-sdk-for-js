/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  env,
  record,
  RecorderEnvironmentSetup,
  Recorder
} from "@azure-tools/test-recorder";
import * as assert from "assert";
import { Cluster, KustoManagementClient } from "../src";
import { DefaultAzureCredential } from "@azure/identity";

const recorderEnvSetup: RecorderEnvironmentSetup = {
  replaceableVariables: {
    AZURE_CLIENT_ID: "5910ab76-9a08-40f9-88d4-48d5f01393a8",
    AZURE_CLIENT_SECRET: "n2~7Q~LcqY3OOf3r6j~f6MqQDq2Yu3csQBiwx",
    AZURE_TENANT_ID: "72f988bf-86f1-41af-91ab-2d7cd011db47",
    SUBSCRIPTION_ID: "92f95d8f-3c67-4124-91c7-8cf07cdbf241"
  },
  customizationsOnRecordings: [
    (recording: any): any =>
      recording.replace(
        /"access_token":"[^"]*"/g,
        `"access_token":"access_token"`
      )
  ],
  queryParametersToSkip: []
};

describe("My test", () => {
  let recorder: Recorder;
  let subscriptionId: string;
  let credential: DefaultAzureCredential;

  before(async function () {
    subscriptionId = process.env.AZURE_SUBSCRIPTION_ID || '';
    credential = new DefaultAzureCredential();
  });
  beforeEach(async function () {
    recorder = record(this, recorderEnvSetup);
  });

  afterEach(async function () {
    await recorder.stop();
  });

  it("init kusto client and test #beginCreateOrUpdateAndWait", async function () {
    const kustoClient = new KustoManagementClient(credential, subscriptionId);
    const clusterName = "MyClusterNameXarqRnd";
    const BODY: Cluster = {
      "location": "eastus",
      "sku": {
        "name": "Standard_L8s_v2",
        "tier": "Standard"
      },
      "identity": {
        "type": "SystemAssigned"
      },
    };
    console.log("debugging", kustoClient, kustoClient.clusters);
    const get_result = await kustoClient.clusters.beginCreateOrUpdateAndWait("marytest", clusterName, BODY);
    console.log("create kusto resource", get_result);
  });
});
