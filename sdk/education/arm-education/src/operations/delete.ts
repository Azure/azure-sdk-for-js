/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { Delete } from "../operationsInterfaces";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { EducationManagementClient } from "../educationManagementClient";
import {
  DeleteLabOptionalParams,
  DeleteStudentOptionalParams
} from "../models";

/** Class containing Delete operations. */
export class DeleteImpl implements Delete {
  private readonly client: EducationManagementClient;

  /**
   * Initialize a new instance of the class Delete class.
   * @param client Reference to the service client
   */
  constructor(client: EducationManagementClient) {
    this.client = client;
  }

  /**
   * Delete a specific lab associated with the provided billing account name, billing profile name, and
   * invoice section name. Note all students must be removed from the lab in order to delete the lab.
   * @param billingAccountName Billing account name.
   * @param billingProfileName Billing profile name.
   * @param invoiceSectionName Invoice section name.
   * @param options The options parameters.
   */
  lab(
    billingAccountName: string,
    billingProfileName: string,
    invoiceSectionName: string,
    options?: DeleteLabOptionalParams
  ): Promise<void> {
    return this.client.sendOperationRequest(
      { billingAccountName, billingProfileName, invoiceSectionName, options },
      labOperationSpec
    );
  }

  /**
   * Delete the specified student based on the student alias.
   * @param billingAccountName Billing account name.
   * @param billingProfileName Billing profile name.
   * @param invoiceSectionName Invoice section name.
   * @param studentAlias Student alias.
   * @param options The options parameters.
   */
  student(
    billingAccountName: string,
    billingProfileName: string,
    invoiceSectionName: string,
    studentAlias: string,
    options?: DeleteStudentOptionalParams
  ): Promise<void> {
    return this.client.sendOperationRequest(
      {
        billingAccountName,
        billingProfileName,
        invoiceSectionName,
        studentAlias,
        options
      },
      studentOperationSpec
    );
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const labOperationSpec: coreClient.OperationSpec = {
  path:
    "/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/invoiceSections/{invoiceSectionName}/providers/Microsoft.Education/labs/default",
  httpMethod: "DELETE",
  responses: {
    200: {},
    204: {},
    default: {
      bodyMapper: Mappers.ErrorResponseBody
    }
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.billingAccountName,
    Parameters.billingProfileName,
    Parameters.invoiceSectionName
  ],
  headerParameters: [Parameters.accept],
  serializer
};
const studentOperationSpec: coreClient.OperationSpec = {
  path:
    "/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/invoiceSections/{invoiceSectionName}/providers/Microsoft.Education/labs/default/students/{studentAlias}",
  httpMethod: "DELETE",
  responses: {
    200: {},
    204: {},
    default: {
      bodyMapper: Mappers.ErrorResponseBody
    }
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.billingAccountName,
    Parameters.billingProfileName,
    Parameters.invoiceSectionName,
    Parameters.studentAlias
  ],
  headerParameters: [Parameters.accept],
  serializer
};
