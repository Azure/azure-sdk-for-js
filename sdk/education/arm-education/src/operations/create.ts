/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { Create } from "../operationsInterfaces";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { EducationManagementClient } from "../educationManagementClient";
import {
  LabDetails,
  CreateLabOptionalParams,
  CreateLabResponse,
  StudentDetails,
  CreateStudentOptionalParams,
  CreateStudentResponse
} from "../models";

/** Class containing Create operations. */
export class CreateImpl implements Create {
  private readonly client: EducationManagementClient;

  /**
   * Initialize a new instance of the class Create class.
   * @param client Reference to the service client
   */
  constructor(client: EducationManagementClient) {
    this.client = client;
  }

  /**
   * Create a new lab or update a previously created lab.
   * @param billingAccountName Billing account name.
   * @param billingProfileName Billing profile name.
   * @param invoiceSectionName Invoice section name.
   * @param parameters Request parameters that are provided to create lab resource.
   * @param options The options parameters.
   */
  lab(
    billingAccountName: string,
    billingProfileName: string,
    invoiceSectionName: string,
    parameters: LabDetails,
    options?: CreateLabOptionalParams
  ): Promise<CreateLabResponse> {
    return this.client.sendOperationRequest(
      {
        billingAccountName,
        billingProfileName,
        invoiceSectionName,
        parameters,
        options
      },
      labOperationSpec
    );
  }

  /**
   * Create and add a new student to the specified lab or update the details of an existing student in a
   * lab. Note the student must have a valid tenant to accept the lab after they have been added to lab.
   * @param billingAccountName Billing account name.
   * @param billingProfileName Billing profile name.
   * @param invoiceSectionName Invoice section name.
   * @param studentAlias Student alias.
   * @param parameters Request parameters that are provided to update student properties.
   * @param options The options parameters.
   */
  student(
    billingAccountName: string,
    billingProfileName: string,
    invoiceSectionName: string,
    studentAlias: string,
    parameters: StudentDetails,
    options?: CreateStudentOptionalParams
  ): Promise<CreateStudentResponse> {
    return this.client.sendOperationRequest(
      {
        billingAccountName,
        billingProfileName,
        invoiceSectionName,
        studentAlias,
        parameters,
        options
      },
      studentOperationSpec
    );
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const labOperationSpec: coreClient.OperationSpec = {
  path:
    "/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/invoiceSections/{invoiceSectionName}/providers/Microsoft.Education/labs/default",
  httpMethod: "PUT",
  responses: {
    200: {
      bodyMapper: Mappers.LabDetails
    },
    201: {
      bodyMapper: Mappers.LabDetails
    },
    default: {
      bodyMapper: Mappers.ErrorResponseBody
    }
  },
  requestBody: Parameters.parameters,
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.billingAccountName,
    Parameters.billingProfileName,
    Parameters.invoiceSectionName
  ],
  headerParameters: [Parameters.accept, Parameters.contentType],
  mediaType: "json",
  serializer
};
const studentOperationSpec: coreClient.OperationSpec = {
  path:
    "/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/invoiceSections/{invoiceSectionName}/providers/Microsoft.Education/labs/default/students/{studentAlias}",
  httpMethod: "PUT",
  responses: {
    200: {
      bodyMapper: Mappers.StudentDetails
    },
    201: {
      bodyMapper: Mappers.StudentDetails
    },
    default: {
      bodyMapper: Mappers.ErrorResponseBody
    }
  },
  requestBody: Parameters.parameters1,
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.billingAccountName,
    Parameters.billingProfileName,
    Parameters.invoiceSectionName,
    Parameters.studentAlias
  ],
  headerParameters: [Parameters.accept, Parameters.contentType],
  mediaType: "json",
  serializer
};
