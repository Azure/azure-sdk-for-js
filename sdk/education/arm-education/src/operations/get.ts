/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { Get } from "../operationsInterfaces";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { EducationManagementClient } from "../educationManagementClient";
import {
  GetGrantOptionalParams,
  GetGrantResponse,
  GetLabOptionalParams,
  GetLabResponse,
  GetStudentOptionalParams,
  GetStudentResponse,
  GetStudentLabOptionalParams,
  GetStudentLabResponse
} from "../models";

/** Class containing Get operations. */
export class GetImpl implements Get {
  private readonly client: EducationManagementClient;

  /**
   * Initialize a new instance of the class Get class.
   * @param client Reference to the service client
   */
  constructor(client: EducationManagementClient) {
    this.client = client;
  }

  /**
   * Get details for a specific grant linked to the provided billing account and billing profile.
   * @param billingAccountName Billing account name.
   * @param billingProfileName Billing profile name.
   * @param options The options parameters.
   */
  grant(
    billingAccountName: string,
    billingProfileName: string,
    options?: GetGrantOptionalParams
  ): Promise<GetGrantResponse> {
    return this.client.sendOperationRequest(
      { billingAccountName, billingProfileName, options },
      grantOperationSpec
    );
  }

  /**
   * Get the details for a specific lab associated with the provided billing account name, billing
   * profile name, and invoice section name.
   * @param billingAccountName Billing account name.
   * @param billingProfileName Billing profile name.
   * @param invoiceSectionName Invoice section name.
   * @param options The options parameters.
   */
  lab(
    billingAccountName: string,
    billingProfileName: string,
    invoiceSectionName: string,
    options?: GetLabOptionalParams
  ): Promise<GetLabResponse> {
    return this.client.sendOperationRequest(
      { billingAccountName, billingProfileName, invoiceSectionName, options },
      labOperationSpec
    );
  }

  /**
   * Get the details for a specific student in the specified lab by student alias
   * @param billingAccountName Billing account name.
   * @param billingProfileName Billing profile name.
   * @param invoiceSectionName Invoice section name.
   * @param studentAlias Student alias.
   * @param options The options parameters.
   */
  student(
    billingAccountName: string,
    billingProfileName: string,
    invoiceSectionName: string,
    studentAlias: string,
    options?: GetStudentOptionalParams
  ): Promise<GetStudentResponse> {
    return this.client.sendOperationRequest(
      {
        billingAccountName,
        billingProfileName,
        invoiceSectionName,
        studentAlias,
        options
      },
      studentOperationSpec
    );
  }

  /**
   * Get the details for a specified lab associated with the student lab.
   * @param studentLabName Student lab name.
   * @param options The options parameters.
   */
  studentLab(
    studentLabName: string,
    options?: GetStudentLabOptionalParams
  ): Promise<GetStudentLabResponse> {
    return this.client.sendOperationRequest(
      { studentLabName, options },
      studentLabOperationSpec
    );
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const grantOperationSpec: coreClient.OperationSpec = {
  path:
    "/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/providers/Microsoft.Education/grants/default",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.GrantDetails
    },
    default: {
      bodyMapper: Mappers.ErrorResponseBody
    }
  },
  queryParameters: [Parameters.apiVersion, Parameters.includeAllocatedBudget],
  urlParameters: [
    Parameters.$host,
    Parameters.billingAccountName,
    Parameters.billingProfileName
  ],
  headerParameters: [Parameters.accept],
  serializer
};
const labOperationSpec: coreClient.OperationSpec = {
  path:
    "/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/invoiceSections/{invoiceSectionName}/providers/Microsoft.Education/labs/default",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.LabDetails
    },
    default: {
      bodyMapper: Mappers.ErrorResponseBody
    }
  },
  queryParameters: [Parameters.apiVersion, Parameters.includeBudget],
  urlParameters: [
    Parameters.$host,
    Parameters.billingAccountName,
    Parameters.billingProfileName,
    Parameters.invoiceSectionName
  ],
  headerParameters: [Parameters.accept],
  serializer
};
const studentOperationSpec: coreClient.OperationSpec = {
  path:
    "/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/invoiceSections/{invoiceSectionName}/providers/Microsoft.Education/labs/default/students/{studentAlias}",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.StudentDetails
    },
    default: {
      bodyMapper: Mappers.ErrorResponseBody
    }
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.billingAccountName,
    Parameters.billingProfileName,
    Parameters.invoiceSectionName,
    Parameters.studentAlias
  ],
  headerParameters: [Parameters.accept],
  serializer
};
const studentLabOperationSpec: coreClient.OperationSpec = {
  path: "/providers/Microsoft.Education/studentLabs/{studentLabName}",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.StudentLabDetails
    },
    default: {
      bodyMapper: Mappers.ErrorResponseBody
    }
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [Parameters.$host, Parameters.studentLabName],
  headerParameters: [Parameters.accept],
  serializer
};
