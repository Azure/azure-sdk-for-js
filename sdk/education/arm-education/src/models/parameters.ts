/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  OperationParameter,
  OperationURLParameter,
  OperationQueryParameter
} from "@azure/core-client";
import {
  LabDetails as LabDetailsMapper,
  InviteCodeGenerateRequest as InviteCodeGenerateRequestMapper,
  RedeemRequest as RedeemRequestMapper,
  StudentDetails as StudentDetailsMapper
} from "../models/mappers";

export const accept: OperationParameter = {
  parameterPath: "accept",
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Accept",
    type: {
      name: "String"
    }
  }
};

export const $host: OperationURLParameter = {
  parameterPath: "$host",
  mapper: {
    serializedName: "$host",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const apiVersion: OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    defaultValue: "2021-12-01-preview",
    isConstant: true,
    serializedName: "api-version",
    type: {
      name: "String"
    }
  }
};

export const includeAllocatedBudget: OperationQueryParameter = {
  parameterPath: ["options", "includeAllocatedBudget"],
  mapper: {
    serializedName: "includeAllocatedBudget",
    type: {
      name: "Boolean"
    }
  }
};

export const billingAccountName: OperationURLParameter = {
  parameterPath: "billingAccountName",
  mapper: {
    serializedName: "billingAccountName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const billingProfileName: OperationURLParameter = {
  parameterPath: "billingProfileName",
  mapper: {
    serializedName: "billingProfileName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const nextLink: OperationURLParameter = {
  parameterPath: "nextLink",
  mapper: {
    serializedName: "nextLink",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const includeBudget: OperationQueryParameter = {
  parameterPath: ["options", "includeBudget"],
  mapper: {
    serializedName: "includeBudget",
    type: {
      name: "Boolean"
    }
  }
};

export const includeDeleted: OperationQueryParameter = {
  parameterPath: ["options", "includeDeleted"],
  mapper: {
    serializedName: "includeDeleted",
    type: {
      name: "Boolean"
    }
  }
};

export const invoiceSectionName: OperationURLParameter = {
  parameterPath: "invoiceSectionName",
  mapper: {
    serializedName: "invoiceSectionName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const contentType: OperationParameter = {
  parameterPath: ["options", "contentType"],
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Content-Type",
    type: {
      name: "String"
    }
  }
};

export const parameters: OperationParameter = {
  parameterPath: "parameters",
  mapper: LabDetailsMapper
};

export const parameters1: OperationParameter = {
  parameterPath: "parameters",
  mapper: InviteCodeGenerateRequestMapper
};

export const onlyUpdateStudentCountParameter: OperationQueryParameter = {
  parameterPath: ["options", "onlyUpdateStudentCountParameter"],
  mapper: {
    serializedName: "onlyUpdateStudentCountParameter",
    type: {
      name: "Boolean"
    }
  }
};

export const includeDenied: OperationQueryParameter = {
  parameterPath: ["options", "includeDenied"],
  mapper: {
    serializedName: "includeDenied",
    type: {
      name: "Boolean"
    }
  }
};

export const joinRequestName: OperationURLParameter = {
  parameterPath: "joinRequestName",
  mapper: {
    serializedName: "joinRequestName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const parameters2: OperationParameter = {
  parameterPath: "parameters",
  mapper: RedeemRequestMapper
};

export const studentAlias: OperationURLParameter = {
  parameterPath: "studentAlias",
  mapper: {
    serializedName: "studentAlias",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const parameters3: OperationParameter = {
  parameterPath: "parameters",
  mapper: StudentDetailsMapper
};

export const studentLabName: OperationURLParameter = {
  parameterPath: "studentLabName",
  mapper: {
    serializedName: "studentLabName",
    required: true,
    type: {
      name: "String"
    }
  }
};
