/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  NetworkToNetworkInterconnect,
  NetworkToNetworkInterconnectsListOptionalParams,
  NetworkToNetworkInterconnectsCreateOptionalParams,
  NetworkToNetworkInterconnectsCreateResponse,
  NetworkToNetworkInterconnectsGetOptionalParams,
  NetworkToNetworkInterconnectsGetResponse,
  NetworkToNetworkInterconnectsDeleteOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a NetworkToNetworkInterconnects. */
export interface NetworkToNetworkInterconnects {
  /**
   * Implements Network To Network Interconnects list by Network Fabric GET method.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param networkFabricName Name of the NetworkFabric.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    networkFabricName: string,
    options?: NetworkToNetworkInterconnectsListOptionalParams
  ): PagedAsyncIterableIterator<NetworkToNetworkInterconnect>;
  /**
   * Configuration used to setup CE-PE connectivity PUT Method.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param networkFabricName Name of the NetworkFabric.
   * @param networkToNetworkInterconnectName Name of the NetworkToNetworkInterconnectName
   * @param body Request payload.
   * @param options The options parameters.
   */
  beginCreate(
    resourceGroupName: string,
    networkFabricName: string,
    networkToNetworkInterconnectName: string,
    body: NetworkToNetworkInterconnect,
    options?: NetworkToNetworkInterconnectsCreateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<NetworkToNetworkInterconnectsCreateResponse>,
      NetworkToNetworkInterconnectsCreateResponse
    >
  >;
  /**
   * Configuration used to setup CE-PE connectivity PUT Method.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param networkFabricName Name of the NetworkFabric.
   * @param networkToNetworkInterconnectName Name of the NetworkToNetworkInterconnectName
   * @param body Request payload.
   * @param options The options parameters.
   */
  beginCreateAndWait(
    resourceGroupName: string,
    networkFabricName: string,
    networkToNetworkInterconnectName: string,
    body: NetworkToNetworkInterconnect,
    options?: NetworkToNetworkInterconnectsCreateOptionalParams
  ): Promise<NetworkToNetworkInterconnectsCreateResponse>;
  /**
   * Implements NetworkToNetworkInterconnects GET method.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param networkFabricName Name of the NetworkFabric.
   * @param networkToNetworkInterconnectName Name of the NetworkToNetworkInterconnect
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    networkFabricName: string,
    networkToNetworkInterconnectName: string,
    options?: NetworkToNetworkInterconnectsGetOptionalParams
  ): Promise<NetworkToNetworkInterconnectsGetResponse>;
  /**
   * Implements NetworkToNetworkInterconnects DELETE method.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param networkFabricName Name of the NetworkFabric.
   * @param networkToNetworkInterconnectName Name of the NetworkToNetworkInterconnectName
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    networkFabricName: string,
    networkToNetworkInterconnectName: string,
    options?: NetworkToNetworkInterconnectsDeleteOptionalParams
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Implements NetworkToNetworkInterconnects DELETE method.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param networkFabricName Name of the NetworkFabric.
   * @param networkToNetworkInterconnectName Name of the NetworkToNetworkInterconnectName
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    networkFabricName: string,
    networkToNetworkInterconnectName: string,
    options?: NetworkToNetworkInterconnectsDeleteOptionalParams
  ): Promise<void>;
}
