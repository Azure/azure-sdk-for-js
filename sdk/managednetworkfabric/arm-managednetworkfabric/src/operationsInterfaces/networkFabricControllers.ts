/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  NetworkFabricController,
  NetworkFabricControllersListByResourceGroupOptionalParams,
  NetworkFabricControllersListBySubscriptionOptionalParams,
  NetworkFabricControllersCreateOptionalParams,
  NetworkFabricControllersCreateResponse,
  NetworkFabricControllersGetOptionalParams,
  NetworkFabricControllersGetResponse,
  NetworkFabricControllerPatch,
  NetworkFabricControllersUpdateOptionalParams,
  NetworkFabricControllersUpdateResponse,
  NetworkFabricControllersDeleteOptionalParams,
  NetworkFabricControllersDeleteResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a NetworkFabricControllers. */
export interface NetworkFabricControllers {
  /**
   * Lists all the NetworkFabricControllers thats available in the resource group.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: NetworkFabricControllersListByResourceGroupOptionalParams
  ): PagedAsyncIterableIterator<NetworkFabricController>;
  /**
   * Lists all the NetworkFabricControllers by subscription.
   * @param options The options parameters.
   */
  listBySubscription(
    options?: NetworkFabricControllersListBySubscriptionOptionalParams
  ): PagedAsyncIterableIterator<NetworkFabricController>;
  /**
   * Creates a Network Fabric Controller.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param networkFabricControllerName Name of the Network Fabric Controller.
   * @param body Request payload.
   * @param options The options parameters.
   */
  beginCreate(
    resourceGroupName: string,
    networkFabricControllerName: string,
    body: NetworkFabricController,
    options?: NetworkFabricControllersCreateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<NetworkFabricControllersCreateResponse>,
      NetworkFabricControllersCreateResponse
    >
  >;
  /**
   * Creates a Network Fabric Controller.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param networkFabricControllerName Name of the Network Fabric Controller.
   * @param body Request payload.
   * @param options The options parameters.
   */
  beginCreateAndWait(
    resourceGroupName: string,
    networkFabricControllerName: string,
    body: NetworkFabricController,
    options?: NetworkFabricControllersCreateOptionalParams
  ): Promise<NetworkFabricControllersCreateResponse>;
  /**
   * Shows the provisioning status of Network Fabric Controller.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param networkFabricControllerName Name of the Network Fabric Controller.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    networkFabricControllerName: string,
    options?: NetworkFabricControllersGetOptionalParams
  ): Promise<NetworkFabricControllersGetResponse>;
  /**
   * Updates are currently not supported for the Network Fabric Controller resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param networkFabricControllerName Name of the Network Fabric Controller.
   * @param body Network Fabric Controller properties to update.
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    networkFabricControllerName: string,
    body: NetworkFabricControllerPatch,
    options?: NetworkFabricControllersUpdateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<NetworkFabricControllersUpdateResponse>,
      NetworkFabricControllersUpdateResponse
    >
  >;
  /**
   * Updates are currently not supported for the Network Fabric Controller resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param networkFabricControllerName Name of the Network Fabric Controller.
   * @param body Network Fabric Controller properties to update.
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    networkFabricControllerName: string,
    body: NetworkFabricControllerPatch,
    options?: NetworkFabricControllersUpdateOptionalParams
  ): Promise<NetworkFabricControllersUpdateResponse>;
  /**
   * Deletes the Network Fabric Controller resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param networkFabricControllerName Name of the Network Fabric Controller.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    networkFabricControllerName: string,
    options?: NetworkFabricControllersDeleteOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<NetworkFabricControllersDeleteResponse>,
      NetworkFabricControllersDeleteResponse
    >
  >;
  /**
   * Deletes the Network Fabric Controller resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param networkFabricControllerName Name of the Network Fabric Controller.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    networkFabricControllerName: string,
    options?: NetworkFabricControllersDeleteOptionalParams
  ): Promise<NetworkFabricControllersDeleteResponse>;
}
