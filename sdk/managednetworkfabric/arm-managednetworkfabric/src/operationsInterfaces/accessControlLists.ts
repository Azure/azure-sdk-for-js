/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  AccessControlList,
  AccessControlListsListByResourceGroupOptionalParams,
  AccessControlListsListBySubscriptionOptionalParams,
  AccessControlListsCreateOptionalParams,
  AccessControlListsCreateResponse,
  AccessControlListsGetOptionalParams,
  AccessControlListsGetResponse,
  AccessControlListPatch,
  AccessControlListsUpdateOptionalParams,
  AccessControlListsUpdateResponse,
  AccessControlListsDeleteOptionalParams,
  AccessControlListsDeleteResponse,
  UpdateAdministrativeState,
  AccessControlListsUpdateAdministrativeStateOptionalParams,
  AccessControlListsUpdateAdministrativeStateResponse,
  AccessControlListsResyncOptionalParams,
  AccessControlListsResyncResponse,
  AccessControlListsValidateConfigurationOptionalParams,
  AccessControlListsValidateConfigurationResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a AccessControlLists. */
export interface AccessControlLists {
  /**
   * Implements AccessControlLists list by resource group GET method.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: AccessControlListsListByResourceGroupOptionalParams
  ): PagedAsyncIterableIterator<AccessControlList>;
  /**
   * Implements AccessControlLists list by subscription GET method.
   * @param options The options parameters.
   */
  listBySubscription(
    options?: AccessControlListsListBySubscriptionOptionalParams
  ): PagedAsyncIterableIterator<AccessControlList>;
  /**
   * Implements Access Control List PUT method.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accessControlListName Name of the Access Control List.
   * @param body Request payload.
   * @param options The options parameters.
   */
  beginCreate(
    resourceGroupName: string,
    accessControlListName: string,
    body: AccessControlList,
    options?: AccessControlListsCreateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<AccessControlListsCreateResponse>,
      AccessControlListsCreateResponse
    >
  >;
  /**
   * Implements Access Control List PUT method.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accessControlListName Name of the Access Control List.
   * @param body Request payload.
   * @param options The options parameters.
   */
  beginCreateAndWait(
    resourceGroupName: string,
    accessControlListName: string,
    body: AccessControlList,
    options?: AccessControlListsCreateOptionalParams
  ): Promise<AccessControlListsCreateResponse>;
  /**
   * Implements Access Control List GET method.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accessControlListName Name of the Access Control List.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    accessControlListName: string,
    options?: AccessControlListsGetOptionalParams
  ): Promise<AccessControlListsGetResponse>;
  /**
   * API to update certain properties of the Access Control List resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accessControlListName Name of the Access Control List.
   * @param body Access Control List properties to update.
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    accessControlListName: string,
    body: AccessControlListPatch,
    options?: AccessControlListsUpdateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<AccessControlListsUpdateResponse>,
      AccessControlListsUpdateResponse
    >
  >;
  /**
   * API to update certain properties of the Access Control List resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accessControlListName Name of the Access Control List.
   * @param body Access Control List properties to update.
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    accessControlListName: string,
    body: AccessControlListPatch,
    options?: AccessControlListsUpdateOptionalParams
  ): Promise<AccessControlListsUpdateResponse>;
  /**
   * Implements Access Control List DELETE method.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accessControlListName Name of the Access Control List.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    accessControlListName: string,
    options?: AccessControlListsDeleteOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<AccessControlListsDeleteResponse>,
      AccessControlListsDeleteResponse
    >
  >;
  /**
   * Implements Access Control List DELETE method.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accessControlListName Name of the Access Control List.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    accessControlListName: string,
    options?: AccessControlListsDeleteOptionalParams
  ): Promise<AccessControlListsDeleteResponse>;
  /**
   * Implements the operation to the underlying resources.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accessControlListName Name of the Access Control List.
   * @param body Request payload.
   * @param options The options parameters.
   */
  beginUpdateAdministrativeState(
    resourceGroupName: string,
    accessControlListName: string,
    body: UpdateAdministrativeState,
    options?: AccessControlListsUpdateAdministrativeStateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<AccessControlListsUpdateAdministrativeStateResponse>,
      AccessControlListsUpdateAdministrativeStateResponse
    >
  >;
  /**
   * Implements the operation to the underlying resources.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accessControlListName Name of the Access Control List.
   * @param body Request payload.
   * @param options The options parameters.
   */
  beginUpdateAdministrativeStateAndWait(
    resourceGroupName: string,
    accessControlListName: string,
    body: UpdateAdministrativeState,
    options?: AccessControlListsUpdateAdministrativeStateOptionalParams
  ): Promise<AccessControlListsUpdateAdministrativeStateResponse>;
  /**
   * Implements the operation to the underlying resources.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accessControlListName Name of the Access Control List.
   * @param options The options parameters.
   */
  beginResync(
    resourceGroupName: string,
    accessControlListName: string,
    options?: AccessControlListsResyncOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<AccessControlListsResyncResponse>,
      AccessControlListsResyncResponse
    >
  >;
  /**
   * Implements the operation to the underlying resources.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accessControlListName Name of the Access Control List.
   * @param options The options parameters.
   */
  beginResyncAndWait(
    resourceGroupName: string,
    accessControlListName: string,
    options?: AccessControlListsResyncOptionalParams
  ): Promise<AccessControlListsResyncResponse>;
  /**
   * Implements the operation to the underlying resources.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accessControlListName Name of the Access Control List.
   * @param options The options parameters.
   */
  beginValidateConfiguration(
    resourceGroupName: string,
    accessControlListName: string,
    options?: AccessControlListsValidateConfigurationOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<AccessControlListsValidateConfigurationResponse>,
      AccessControlListsValidateConfigurationResponse
    >
  >;
  /**
   * Implements the operation to the underlying resources.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accessControlListName Name of the Access Control List.
   * @param options The options parameters.
   */
  beginValidateConfigurationAndWait(
    resourceGroupName: string,
    accessControlListName: string,
    options?: AccessControlListsValidateConfigurationOptionalParams
  ): Promise<AccessControlListsValidateConfigurationResponse>;
}
