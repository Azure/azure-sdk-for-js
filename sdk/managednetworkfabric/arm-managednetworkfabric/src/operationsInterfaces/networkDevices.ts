/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  NetworkDevice,
  NetworkDevicesListByResourceGroupOptionalParams,
  NetworkDevicesListBySubscriptionOptionalParams,
  NetworkDevicesCreateOptionalParams,
  NetworkDevicesCreateResponse,
  NetworkDevicesGetOptionalParams,
  NetworkDevicesGetResponse,
  NetworkDevicePatchParameters,
  NetworkDevicesUpdateOptionalParams,
  NetworkDevicesUpdateResponse,
  NetworkDevicesDeleteOptionalParams,
  NetworkDevicesRebootOptionalParams,
  NetworkDevicesRebootResponse,
  NetworkDevicesRestoreConfigOptionalParams,
  NetworkDevicesRestoreConfigResponse,
  UpdateVersionProperties,
  NetworkDevicesUpdateVersionOptionalParams,
  NetworkDevicesUpdateVersionResponse,
  NetworkDevicesGenerateSupportPackageOptionalParams,
  NetworkDevicesGenerateSupportPackageResponse,
  UpdatePowerCycleProperties,
  NetworkDevicesUpdatePowerCycleOptionalParams,
  NetworkDevicesUpdatePowerCycleResponse,
  NetworkDevicesGetStatusOptionalParams,
  NetworkDevicesGetStatusResponse,
  NetworkDevicesGetStaticInterfaceMapsOptionalParams,
  NetworkDevicesGetStaticInterfaceMapsResponse,
  NetworkDevicesGetDynamicInterfaceMapsOptionalParams,
  NetworkDevicesGetDynamicInterfaceMapsResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a NetworkDevices. */
export interface NetworkDevices {
  /**
   * List all the Network Device resources in a given resource group.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: NetworkDevicesListByResourceGroupOptionalParams
  ): PagedAsyncIterableIterator<NetworkDevice>;
  /**
   * List all the Network Device resources in a given subscription.
   * @param options The options parameters.
   */
  listBySubscription(
    options?: NetworkDevicesListBySubscriptionOptionalParams
  ): PagedAsyncIterableIterator<NetworkDevice>;
  /**
   * Create a Network Device resource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param networkDeviceName Name of the Network Device
   * @param body Request payload.
   * @param options The options parameters.
   */
  beginCreate(
    resourceGroupName: string,
    networkDeviceName: string,
    body: NetworkDevice,
    options?: NetworkDevicesCreateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<NetworkDevicesCreateResponse>,
      NetworkDevicesCreateResponse
    >
  >;
  /**
   * Create a Network Device resource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param networkDeviceName Name of the Network Device
   * @param body Request payload.
   * @param options The options parameters.
   */
  beginCreateAndWait(
    resourceGroupName: string,
    networkDeviceName: string,
    body: NetworkDevice,
    options?: NetworkDevicesCreateOptionalParams
  ): Promise<NetworkDevicesCreateResponse>;
  /**
   * Get the Network Device resource details.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param networkDeviceName Name of the Network Device
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    networkDeviceName: string,
    options?: NetworkDevicesGetOptionalParams
  ): Promise<NetworkDevicesGetResponse>;
  /**
   * Update certain properties of the Network Device resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param networkDeviceName Name of the Network Device
   * @param body Network Device properties to update.
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    networkDeviceName: string,
    body: NetworkDevicePatchParameters,
    options?: NetworkDevicesUpdateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<NetworkDevicesUpdateResponse>,
      NetworkDevicesUpdateResponse
    >
  >;
  /**
   * Update certain properties of the Network Device resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param networkDeviceName Name of the Network Device
   * @param body Network Device properties to update.
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    networkDeviceName: string,
    body: NetworkDevicePatchParameters,
    options?: NetworkDevicesUpdateOptionalParams
  ): Promise<NetworkDevicesUpdateResponse>;
  /**
   * Delete the Network Device resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param networkDeviceName Name of the Network Device
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    networkDeviceName: string,
    options?: NetworkDevicesDeleteOptionalParams
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Delete the Network Device resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param networkDeviceName Name of the Network Device
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    networkDeviceName: string,
    options?: NetworkDevicesDeleteOptionalParams
  ): Promise<void>;
  /**
   * Reboot the Network Device.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param networkDeviceName Name of the NetworkDevice.
   * @param options The options parameters.
   */
  beginReboot(
    resourceGroupName: string,
    networkDeviceName: string,
    options?: NetworkDevicesRebootOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<NetworkDevicesRebootResponse>,
      NetworkDevicesRebootResponse
    >
  >;
  /**
   * Reboot the Network Device.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param networkDeviceName Name of the NetworkDevice.
   * @param options The options parameters.
   */
  beginRebootAndWait(
    resourceGroupName: string,
    networkDeviceName: string,
    options?: NetworkDevicesRebootOptionalParams
  ): Promise<NetworkDevicesRebootResponse>;
  /**
   * Restore the configuration of the Network Device resource to last known good configuration.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param networkDeviceName Name of the NetworkDevice.
   * @param options The options parameters.
   */
  beginRestoreConfig(
    resourceGroupName: string,
    networkDeviceName: string,
    options?: NetworkDevicesRestoreConfigOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<NetworkDevicesRestoreConfigResponse>,
      NetworkDevicesRestoreConfigResponse
    >
  >;
  /**
   * Restore the configuration of the Network Device resource to last known good configuration.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param networkDeviceName Name of the NetworkDevice.
   * @param options The options parameters.
   */
  beginRestoreConfigAndWait(
    resourceGroupName: string,
    networkDeviceName: string,
    options?: NetworkDevicesRestoreConfigOptionalParams
  ): Promise<NetworkDevicesRestoreConfigResponse>;
  /**
   * Update the SKU version of the Network Device resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param networkDeviceName Name of the NetworkDevice.
   * @param body Request payload.
   * @param options The options parameters.
   */
  beginUpdateVersion(
    resourceGroupName: string,
    networkDeviceName: string,
    body: UpdateVersionProperties,
    options?: NetworkDevicesUpdateVersionOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<NetworkDevicesUpdateVersionResponse>,
      NetworkDevicesUpdateVersionResponse
    >
  >;
  /**
   * Update the SKU version of the Network Device resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param networkDeviceName Name of the NetworkDevice.
   * @param body Request payload.
   * @param options The options parameters.
   */
  beginUpdateVersionAndWait(
    resourceGroupName: string,
    networkDeviceName: string,
    body: UpdateVersionProperties,
    options?: NetworkDevicesUpdateVersionOptionalParams
  ): Promise<NetworkDevicesUpdateVersionResponse>;
  /**
   * Generate Support Package for the given Network Device.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param networkDeviceName Name of the NetworkDevice.
   * @param options The options parameters.
   */
  beginGenerateSupportPackage(
    resourceGroupName: string,
    networkDeviceName: string,
    options?: NetworkDevicesGenerateSupportPackageOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<NetworkDevicesGenerateSupportPackageResponse>,
      NetworkDevicesGenerateSupportPackageResponse
    >
  >;
  /**
   * Generate Support Package for the given Network Device.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param networkDeviceName Name of the NetworkDevice.
   * @param options The options parameters.
   */
  beginGenerateSupportPackageAndWait(
    resourceGroupName: string,
    networkDeviceName: string,
    options?: NetworkDevicesGenerateSupportPackageOptionalParams
  ): Promise<NetworkDevicesGenerateSupportPackageResponse>;
  /**
   * Update PDU power cycle of the Network Device.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param networkDeviceName Name of the NetworkDevice.
   * @param body Request payload.
   * @param options The options parameters.
   */
  beginUpdatePowerCycle(
    resourceGroupName: string,
    networkDeviceName: string,
    body: UpdatePowerCycleProperties,
    options?: NetworkDevicesUpdatePowerCycleOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<NetworkDevicesUpdatePowerCycleResponse>,
      NetworkDevicesUpdatePowerCycleResponse
    >
  >;
  /**
   * Update PDU power cycle of the Network Device.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param networkDeviceName Name of the NetworkDevice.
   * @param body Request payload.
   * @param options The options parameters.
   */
  beginUpdatePowerCycleAndWait(
    resourceGroupName: string,
    networkDeviceName: string,
    body: UpdatePowerCycleProperties,
    options?: NetworkDevicesUpdatePowerCycleOptionalParams
  ): Promise<NetworkDevicesUpdatePowerCycleResponse>;
  /**
   * Get the running status of the Network Device.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param networkDeviceName Name of the NetworkDevice.
   * @param options The options parameters.
   */
  beginGetStatus(
    resourceGroupName: string,
    networkDeviceName: string,
    options?: NetworkDevicesGetStatusOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<NetworkDevicesGetStatusResponse>,
      NetworkDevicesGetStatusResponse
    >
  >;
  /**
   * Get the running status of the Network Device.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param networkDeviceName Name of the NetworkDevice.
   * @param options The options parameters.
   */
  beginGetStatusAndWait(
    resourceGroupName: string,
    networkDeviceName: string,
    options?: NetworkDevicesGetStatusOptionalParams
  ): Promise<NetworkDevicesGetStatusResponse>;
  /**
   * Get the static interface maps for the given Network Device.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param networkDeviceName Name of the NetworkDevice.
   * @param options The options parameters.
   */
  beginGetStaticInterfaceMaps(
    resourceGroupName: string,
    networkDeviceName: string,
    options?: NetworkDevicesGetStaticInterfaceMapsOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<NetworkDevicesGetStaticInterfaceMapsResponse>,
      NetworkDevicesGetStaticInterfaceMapsResponse
    >
  >;
  /**
   * Get the static interface maps for the given Network Device.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param networkDeviceName Name of the NetworkDevice.
   * @param options The options parameters.
   */
  beginGetStaticInterfaceMapsAndWait(
    resourceGroupName: string,
    networkDeviceName: string,
    options?: NetworkDevicesGetStaticInterfaceMapsOptionalParams
  ): Promise<NetworkDevicesGetStaticInterfaceMapsResponse>;
  /**
   * Get the dynamic interface maps for the given Network Device.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param networkDeviceName Name of the NetworkDevice.
   * @param options The options parameters.
   */
  beginGetDynamicInterfaceMaps(
    resourceGroupName: string,
    networkDeviceName: string,
    options?: NetworkDevicesGetDynamicInterfaceMapsOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<NetworkDevicesGetDynamicInterfaceMapsResponse>,
      NetworkDevicesGetDynamicInterfaceMapsResponse
    >
  >;
  /**
   * Get the dynamic interface maps for the given Network Device.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param networkDeviceName Name of the NetworkDevice.
   * @param options The options parameters.
   */
  beginGetDynamicInterfaceMapsAndWait(
    resourceGroupName: string,
    networkDeviceName: string,
    options?: NetworkDevicesGetDynamicInterfaceMapsOptionalParams
  ): Promise<NetworkDevicesGetDynamicInterfaceMapsResponse>;
}
