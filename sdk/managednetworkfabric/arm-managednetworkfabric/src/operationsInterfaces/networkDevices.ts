/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  NetworkDevice,
  NetworkDevicesListByResourceGroupOptionalParams,
  NetworkDevicesListBySubscriptionOptionalParams,
  NetworkDevicesCreateOptionalParams,
  NetworkDevicesCreateResponse,
  NetworkDevicesGetOptionalParams,
  NetworkDevicesGetResponse,
  NetworkDevicePatchParameters,
  NetworkDevicesUpdateOptionalParams,
  NetworkDevicesUpdateResponse,
  NetworkDevicesDeleteOptionalParams,
  RebootProperties,
  NetworkDevicesRebootOptionalParams,
  NetworkDevicesRebootResponse,
  NetworkDevicesRefreshConfigurationOptionalParams,
  NetworkDevicesRefreshConfigurationResponse,
  UpdateDeviceAdministrativeState,
  NetworkDevicesUpdateAdministrativeStateOptionalParams,
  NetworkDevicesUpdateAdministrativeStateResponse,
  UpdateVersion,
  NetworkDevicesUpgradeOptionalParams,
  NetworkDevicesUpgradeResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a NetworkDevices. */
export interface NetworkDevices {
  /**
   * List all the Network Device resources in a given resource group.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: NetworkDevicesListByResourceGroupOptionalParams
  ): PagedAsyncIterableIterator<NetworkDevice>;
  /**
   * List all the Network Device resources in a given subscription.
   * @param options The options parameters.
   */
  listBySubscription(
    options?: NetworkDevicesListBySubscriptionOptionalParams
  ): PagedAsyncIterableIterator<NetworkDevice>;
  /**
   * Create a Network Device resource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param networkDeviceName Name of the Network Device.
   * @param body Request payload.
   * @param options The options parameters.
   */
  beginCreate(
    resourceGroupName: string,
    networkDeviceName: string,
    body: NetworkDevice,
    options?: NetworkDevicesCreateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<NetworkDevicesCreateResponse>,
      NetworkDevicesCreateResponse
    >
  >;
  /**
   * Create a Network Device resource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param networkDeviceName Name of the Network Device.
   * @param body Request payload.
   * @param options The options parameters.
   */
  beginCreateAndWait(
    resourceGroupName: string,
    networkDeviceName: string,
    body: NetworkDevice,
    options?: NetworkDevicesCreateOptionalParams
  ): Promise<NetworkDevicesCreateResponse>;
  /**
   * Gets the Network Device resource details.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param networkDeviceName Name of the Network Device.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    networkDeviceName: string,
    options?: NetworkDevicesGetOptionalParams
  ): Promise<NetworkDevicesGetResponse>;
  /**
   * Update certain properties of the Network Device resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param networkDeviceName Name of the Network Device.
   * @param body Network Device properties to update.
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    networkDeviceName: string,
    body: NetworkDevicePatchParameters,
    options?: NetworkDevicesUpdateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<NetworkDevicesUpdateResponse>,
      NetworkDevicesUpdateResponse
    >
  >;
  /**
   * Update certain properties of the Network Device resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param networkDeviceName Name of the Network Device.
   * @param body Network Device properties to update.
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    networkDeviceName: string,
    body: NetworkDevicePatchParameters,
    options?: NetworkDevicesUpdateOptionalParams
  ): Promise<NetworkDevicesUpdateResponse>;
  /**
   * Delete the Network Device resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param networkDeviceName Name of the Network Device.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    networkDeviceName: string,
    options?: NetworkDevicesDeleteOptionalParams
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Delete the Network Device resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param networkDeviceName Name of the Network Device.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    networkDeviceName: string,
    options?: NetworkDevicesDeleteOptionalParams
  ): Promise<void>;
  /**
   * Reboot the Network Device.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param networkDeviceName Name of the Network Device.
   * @param body Request payload.
   * @param options The options parameters.
   */
  beginReboot(
    resourceGroupName: string,
    networkDeviceName: string,
    body: RebootProperties,
    options?: NetworkDevicesRebootOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<NetworkDevicesRebootResponse>,
      NetworkDevicesRebootResponse
    >
  >;
  /**
   * Reboot the Network Device.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param networkDeviceName Name of the Network Device.
   * @param body Request payload.
   * @param options The options parameters.
   */
  beginRebootAndWait(
    resourceGroupName: string,
    networkDeviceName: string,
    body: RebootProperties,
    options?: NetworkDevicesRebootOptionalParams
  ): Promise<NetworkDevicesRebootResponse>;
  /**
   * Refreshes the configuration the Network Device.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param networkDeviceName Name of the Network Device.
   * @param options The options parameters.
   */
  beginRefreshConfiguration(
    resourceGroupName: string,
    networkDeviceName: string,
    options?: NetworkDevicesRefreshConfigurationOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<NetworkDevicesRefreshConfigurationResponse>,
      NetworkDevicesRefreshConfigurationResponse
    >
  >;
  /**
   * Refreshes the configuration the Network Device.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param networkDeviceName Name of the Network Device.
   * @param options The options parameters.
   */
  beginRefreshConfigurationAndWait(
    resourceGroupName: string,
    networkDeviceName: string,
    options?: NetworkDevicesRefreshConfigurationOptionalParams
  ): Promise<NetworkDevicesRefreshConfigurationResponse>;
  /**
   * Updates the Administrative state of the Network Device.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param networkDeviceName Name of the Network Device.
   * @param body Request payload.
   * @param options The options parameters.
   */
  beginUpdateAdministrativeState(
    resourceGroupName: string,
    networkDeviceName: string,
    body: UpdateDeviceAdministrativeState,
    options?: NetworkDevicesUpdateAdministrativeStateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<NetworkDevicesUpdateAdministrativeStateResponse>,
      NetworkDevicesUpdateAdministrativeStateResponse
    >
  >;
  /**
   * Updates the Administrative state of the Network Device.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param networkDeviceName Name of the Network Device.
   * @param body Request payload.
   * @param options The options parameters.
   */
  beginUpdateAdministrativeStateAndWait(
    resourceGroupName: string,
    networkDeviceName: string,
    body: UpdateDeviceAdministrativeState,
    options?: NetworkDevicesUpdateAdministrativeStateOptionalParams
  ): Promise<NetworkDevicesUpdateAdministrativeStateResponse>;
  /**
   * Upgrades the version of the Network Device.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param networkDeviceName Name of the Network Device.
   * @param body Request payload.
   * @param options The options parameters.
   */
  beginUpgrade(
    resourceGroupName: string,
    networkDeviceName: string,
    body: UpdateVersion,
    options?: NetworkDevicesUpgradeOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<NetworkDevicesUpgradeResponse>,
      NetworkDevicesUpgradeResponse
    >
  >;
  /**
   * Upgrades the version of the Network Device.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param networkDeviceName Name of the Network Device.
   * @param body Request payload.
   * @param options The options parameters.
   */
  beginUpgradeAndWait(
    resourceGroupName: string,
    networkDeviceName: string,
    body: UpdateVersion,
    options?: NetworkDevicesUpgradeOptionalParams
  ): Promise<NetworkDevicesUpgradeResponse>;
}
