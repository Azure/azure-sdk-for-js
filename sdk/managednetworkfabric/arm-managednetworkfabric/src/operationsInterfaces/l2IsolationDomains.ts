/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  L2IsolationDomain,
  L2IsolationDomainsListByResourceGroupOptionalParams,
  L2IsolationDomainsListBySubscriptionOptionalParams,
  L2IsolationDomainsCreateOptionalParams,
  L2IsolationDomainsCreateResponse,
  L2IsolationDomainsGetOptionalParams,
  L2IsolationDomainsGetResponse,
  L2IsolationDomainPatch,
  L2IsolationDomainsUpdateOptionalParams,
  L2IsolationDomainsUpdateResponse,
  L2IsolationDomainsDeleteOptionalParams,
  UpdateAdministrativeState,
  L2IsolationDomainsUpdateAdministrativeStateOptionalParams,
  L2IsolationDomainsUpdateAdministrativeStateResponse,
  L2IsolationDomainsValidateConfigurationOptionalParams,
  L2IsolationDomainsValidateConfigurationResponse,
  L2IsolationDomainsCommitConfigurationOptionalParams,
  L2IsolationDomainsCommitConfigurationResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a L2IsolationDomains. */
export interface L2IsolationDomains {
  /**
   * Displays L2IsolationDomains list by resource group GET method.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: L2IsolationDomainsListByResourceGroupOptionalParams
  ): PagedAsyncIterableIterator<L2IsolationDomain>;
  /**
   * Displays L2IsolationDomains list by subscription GET method.
   * @param options The options parameters.
   */
  listBySubscription(
    options?: L2IsolationDomainsListBySubscriptionOptionalParams
  ): PagedAsyncIterableIterator<L2IsolationDomain>;
  /**
   * Creates layer 2 network connectivity between compute nodes within a rack and across racks.The
   * configuration is applied on the devices only after the isolation domain is enabled.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param l2IsolationDomainName Name of the L2 Isolation Domain.
   * @param body Request payload.
   * @param options The options parameters.
   */
  beginCreate(
    resourceGroupName: string,
    l2IsolationDomainName: string,
    body: L2IsolationDomain,
    options?: L2IsolationDomainsCreateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<L2IsolationDomainsCreateResponse>,
      L2IsolationDomainsCreateResponse
    >
  >;
  /**
   * Creates layer 2 network connectivity between compute nodes within a rack and across racks.The
   * configuration is applied on the devices only after the isolation domain is enabled.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param l2IsolationDomainName Name of the L2 Isolation Domain.
   * @param body Request payload.
   * @param options The options parameters.
   */
  beginCreateAndWait(
    resourceGroupName: string,
    l2IsolationDomainName: string,
    body: L2IsolationDomain,
    options?: L2IsolationDomainsCreateOptionalParams
  ): Promise<L2IsolationDomainsCreateResponse>;
  /**
   * Implements L2 Isolation Domain GET method.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param l2IsolationDomainName Name of the L2 Isolation Domain.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    l2IsolationDomainName: string,
    options?: L2IsolationDomainsGetOptionalParams
  ): Promise<L2IsolationDomainsGetResponse>;
  /**
   * API to update certain properties of the L2 Isolation Domain resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param l2IsolationDomainName Name of the L2 Isolation Domain.
   * @param body API to update certain properties of the L2 Isolation Domain resource..
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    l2IsolationDomainName: string,
    body: L2IsolationDomainPatch,
    options?: L2IsolationDomainsUpdateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<L2IsolationDomainsUpdateResponse>,
      L2IsolationDomainsUpdateResponse
    >
  >;
  /**
   * API to update certain properties of the L2 Isolation Domain resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param l2IsolationDomainName Name of the L2 Isolation Domain.
   * @param body API to update certain properties of the L2 Isolation Domain resource..
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    l2IsolationDomainName: string,
    body: L2IsolationDomainPatch,
    options?: L2IsolationDomainsUpdateOptionalParams
  ): Promise<L2IsolationDomainsUpdateResponse>;
  /**
   * Deletes layer 2 connectivity between compute nodes by managed by named L2 Isolation name.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param l2IsolationDomainName Name of the L2 Isolation Domain.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    l2IsolationDomainName: string,
    options?: L2IsolationDomainsDeleteOptionalParams
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Deletes layer 2 connectivity between compute nodes by managed by named L2 Isolation name.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param l2IsolationDomainName Name of the L2 Isolation Domain.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    l2IsolationDomainName: string,
    options?: L2IsolationDomainsDeleteOptionalParams
  ): Promise<void>;
  /**
   * Enables isolation domain across the fabric or on specified racks.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param l2IsolationDomainName Name of the L2 Isolation Domain.
   * @param body Request payload.
   * @param options The options parameters.
   */
  beginUpdateAdministrativeState(
    resourceGroupName: string,
    l2IsolationDomainName: string,
    body: UpdateAdministrativeState,
    options?: L2IsolationDomainsUpdateAdministrativeStateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<L2IsolationDomainsUpdateAdministrativeStateResponse>,
      L2IsolationDomainsUpdateAdministrativeStateResponse
    >
  >;
  /**
   * Enables isolation domain across the fabric or on specified racks.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param l2IsolationDomainName Name of the L2 Isolation Domain.
   * @param body Request payload.
   * @param options The options parameters.
   */
  beginUpdateAdministrativeStateAndWait(
    resourceGroupName: string,
    l2IsolationDomainName: string,
    body: UpdateAdministrativeState,
    options?: L2IsolationDomainsUpdateAdministrativeStateOptionalParams
  ): Promise<L2IsolationDomainsUpdateAdministrativeStateResponse>;
  /**
   * Validates the configuration of the resources.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param l2IsolationDomainName Name of the L2 Isolation Domain.
   * @param options The options parameters.
   */
  beginValidateConfiguration(
    resourceGroupName: string,
    l2IsolationDomainName: string,
    options?: L2IsolationDomainsValidateConfigurationOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<L2IsolationDomainsValidateConfigurationResponse>,
      L2IsolationDomainsValidateConfigurationResponse
    >
  >;
  /**
   * Validates the configuration of the resources.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param l2IsolationDomainName Name of the L2 Isolation Domain.
   * @param options The options parameters.
   */
  beginValidateConfigurationAndWait(
    resourceGroupName: string,
    l2IsolationDomainName: string,
    options?: L2IsolationDomainsValidateConfigurationOptionalParams
  ): Promise<L2IsolationDomainsValidateConfigurationResponse>;
  /**
   * Commits the configuration of the given resources.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param l2IsolationDomainName Name of the L2 Isolation Domain.
   * @param options The options parameters.
   */
  beginCommitConfiguration(
    resourceGroupName: string,
    l2IsolationDomainName: string,
    options?: L2IsolationDomainsCommitConfigurationOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<L2IsolationDomainsCommitConfigurationResponse>,
      L2IsolationDomainsCommitConfigurationResponse
    >
  >;
  /**
   * Commits the configuration of the given resources.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param l2IsolationDomainName Name of the L2 Isolation Domain.
   * @param options The options parameters.
   */
  beginCommitConfigurationAndWait(
    resourceGroupName: string,
    l2IsolationDomainName: string,
    options?: L2IsolationDomainsCommitConfigurationOptionalParams
  ): Promise<L2IsolationDomainsCommitConfigurationResponse>;
}
