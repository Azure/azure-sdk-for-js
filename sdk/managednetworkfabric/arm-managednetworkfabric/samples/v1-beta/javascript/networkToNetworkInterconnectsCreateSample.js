/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
const { AzureNetworkFabricManagementServiceAPI } = require("@azure/arm-managednetworkfabric");
const { DefaultAzureCredential } = require("@azure/identity");
require("dotenv").config();

/**
 * This sample demonstrates how to Configuration used to setup CE-PE connectivity PUT Method.
 *
 * @summary Configuration used to setup CE-PE connectivity PUT Method.
 * x-ms-original-file: specification/managednetworkfabric/resource-manager/Microsoft.ManagedNetworkFabric/preview/2023-02-01-preview/examples/NetworkToNetworkInterconnects_Create_MaximumSet_Gen.json
 */
async function networkToNetworkInterconnectsCreateMaximumSetGen() {
  const subscriptionId = process.env["MANAGEDNETWORKFABRIC_SUBSCRIPTION_ID"] || "subscriptionId";
  const resourceGroupName =
    process.env["MANAGEDNETWORKFABRIC_RESOURCE_GROUP"] || "resourceGroupName";
  const networkFabricName = "FabricName";
  const networkToNetworkInterconnectName = "DefaultNNI";
  const body = {
    isManagementType: "True",
    layer2Configuration: { mtu: 1500, portCount: 10 },
    layer3Configuration: {
      exportRoutePolicyId:
        "/subscriptions/subscriptionId/resourceGroups/resourceGroupName/providers/Microsoft.ManagedNetworkFabric/routePolicies/routePolicyName2",
      importRoutePolicyId:
        "/subscriptions/subscriptionId/resourceGroups/resourceGroupName/providers/Microsoft.ManagedNetworkFabric/routePolicies/routePolicyName1",
      peerASN: 50272,
      primaryIpv4Prefix: "172.31.0.0/31",
      primaryIpv6Prefix: "3FFE:FFFF:0:CD30::a0/126",
      secondaryIpv4Prefix: "172.31.0.20/31",
      secondaryIpv6Prefix: "3FFE:FFFF:0:CD30::a4/126",
      vlanId: 2064,
    },
    nniType: "CE",
    useOptionB: "False",
  };
  const credential = new DefaultAzureCredential();
  const client = new AzureNetworkFabricManagementServiceAPI(credential, subscriptionId);
  const result = await client.networkToNetworkInterconnects.beginCreateAndWait(
    resourceGroupName,
    networkFabricName,
    networkToNetworkInterconnectName,
    body
  );
  console.log(result);
}

async function main() {
  networkToNetworkInterconnectsCreateMaximumSetGen();
}

main().catch(console.error);
