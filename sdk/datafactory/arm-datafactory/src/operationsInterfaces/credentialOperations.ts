/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  ManagedIdentityCredentialResource,
  CredentialOperationsListByFactoryOptionalParams,
  CredentialOperationsCreateOrUpdateOptionalParams,
  CredentialOperationsCreateOrUpdateResponse,
  CredentialOperationsGetOptionalParams,
  CredentialOperationsGetResponse,
  CredentialOperationsDeleteOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a CredentialOperations. */
export interface CredentialOperations {
  /**
   * List credentials.
   * @param resourceGroupName The resource group name.
   * @param factoryName The factory name.
   * @param options The options parameters.
   */
  listByFactory(
    resourceGroupName: string,
    factoryName: string,
    options?: CredentialOperationsListByFactoryOptionalParams
  ): PagedAsyncIterableIterator<ManagedIdentityCredentialResource>;
  /**
   * Creates or updates a credential.
   * @param resourceGroupName The resource group name.
   * @param factoryName The factory name.
   * @param credentialName Credential name
   * @param credential Credential resource definition.
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    factoryName: string,
    credentialName: string,
    credential: ManagedIdentityCredentialResource,
    options?: CredentialOperationsCreateOrUpdateOptionalParams
  ): Promise<CredentialOperationsCreateOrUpdateResponse>;
  /**
   * Gets a credential.
   * @param resourceGroupName The resource group name.
   * @param factoryName The factory name.
   * @param credentialName Credential name
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    factoryName: string,
    credentialName: string,
    options?: CredentialOperationsGetOptionalParams
  ): Promise<CredentialOperationsGetResponse>;
  /**
   * Deletes a credential.
   * @param resourceGroupName The resource group name.
   * @param factoryName The factory name.
   * @param credentialName Credential name
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    factoryName: string,
    credentialName: string,
    options?: CredentialOperationsDeleteOptionalParams
  ): Promise<void>;
}
