/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/integrationRuntimeNodesMappers";
import * as Parameters from "../models/parameters";
import { DataFactoryManagementClientContext } from "../dataFactoryManagementClientContext";

/** Class representing a IntegrationRuntimeNodes. */
export class IntegrationRuntimeNodes {
  private readonly client: DataFactoryManagementClientContext;

  /**
   * Create a IntegrationRuntimeNodes.
   * @param {DataFactoryManagementClientContext} client Reference to the service client.
   */
  constructor(client: DataFactoryManagementClientContext) {
    this.client = client;
  }

  /**
   * Gets a self-hosted integration runtime node.
   * @param resourceGroupName The resource group name.
   * @param factoryName The factory name.
   * @param integrationRuntimeName The integration runtime name.
   * @param nodeName The integration runtime node name.
   * @param [options] The optional parameters
   * @returns Promise<Models.IntegrationRuntimeNodesGetResponse>
   */
  get(resourceGroupName: string, factoryName: string, integrationRuntimeName: string, nodeName: string, options?: msRest.RequestOptionsBase): Promise<Models.IntegrationRuntimeNodesGetResponse>;
  /**
   * @param resourceGroupName The resource group name.
   * @param factoryName The factory name.
   * @param integrationRuntimeName The integration runtime name.
   * @param nodeName The integration runtime node name.
   * @param callback The callback
   */
  get(resourceGroupName: string, factoryName: string, integrationRuntimeName: string, nodeName: string, callback: msRest.ServiceCallback<Models.SelfHostedIntegrationRuntimeNode>): void;
  /**
   * @param resourceGroupName The resource group name.
   * @param factoryName The factory name.
   * @param integrationRuntimeName The integration runtime name.
   * @param nodeName The integration runtime node name.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(resourceGroupName: string, factoryName: string, integrationRuntimeName: string, nodeName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SelfHostedIntegrationRuntimeNode>): void;
  get(resourceGroupName: string, factoryName: string, integrationRuntimeName: string, nodeName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.SelfHostedIntegrationRuntimeNode>, callback?: msRest.ServiceCallback<Models.SelfHostedIntegrationRuntimeNode>): Promise<Models.IntegrationRuntimeNodesGetResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        factoryName,
        integrationRuntimeName,
        nodeName,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.IntegrationRuntimeNodesGetResponse>;
  }

  /**
   * Deletes a self-hosted integration runtime node.
   * @param resourceGroupName The resource group name.
   * @param factoryName The factory name.
   * @param integrationRuntimeName The integration runtime name.
   * @param nodeName The integration runtime node name.
   * @param [options] The optional parameters
   * @returns Promise<msRest.RestResponse>
   */
  deleteMethod(resourceGroupName: string, factoryName: string, integrationRuntimeName: string, nodeName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
  /**
   * @param resourceGroupName The resource group name.
   * @param factoryName The factory name.
   * @param integrationRuntimeName The integration runtime name.
   * @param nodeName The integration runtime node name.
   * @param callback The callback
   */
  deleteMethod(resourceGroupName: string, factoryName: string, integrationRuntimeName: string, nodeName: string, callback: msRest.ServiceCallback<void>): void;
  /**
   * @param resourceGroupName The resource group name.
   * @param factoryName The factory name.
   * @param integrationRuntimeName The integration runtime name.
   * @param nodeName The integration runtime node name.
   * @param options The optional parameters
   * @param callback The callback
   */
  deleteMethod(resourceGroupName: string, factoryName: string, integrationRuntimeName: string, nodeName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
  deleteMethod(resourceGroupName: string, factoryName: string, integrationRuntimeName: string, nodeName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        factoryName,
        integrationRuntimeName,
        nodeName,
        options
      },
      deleteMethodOperationSpec,
      callback);
  }

  /**
   * Updates a self-hosted integration runtime node.
   * @param resourceGroupName The resource group name.
   * @param factoryName The factory name.
   * @param integrationRuntimeName The integration runtime name.
   * @param nodeName The integration runtime node name.
   * @param updateIntegrationRuntimeNodeRequest The parameters for updating an integration runtime
   * node.
   * @param [options] The optional parameters
   * @returns Promise<Models.IntegrationRuntimeNodesUpdateResponse>
   */
  update(resourceGroupName: string, factoryName: string, integrationRuntimeName: string, nodeName: string, updateIntegrationRuntimeNodeRequest: Models.UpdateIntegrationRuntimeNodeRequest, options?: msRest.RequestOptionsBase): Promise<Models.IntegrationRuntimeNodesUpdateResponse>;
  /**
   * @param resourceGroupName The resource group name.
   * @param factoryName The factory name.
   * @param integrationRuntimeName The integration runtime name.
   * @param nodeName The integration runtime node name.
   * @param updateIntegrationRuntimeNodeRequest The parameters for updating an integration runtime
   * node.
   * @param callback The callback
   */
  update(resourceGroupName: string, factoryName: string, integrationRuntimeName: string, nodeName: string, updateIntegrationRuntimeNodeRequest: Models.UpdateIntegrationRuntimeNodeRequest, callback: msRest.ServiceCallback<Models.SelfHostedIntegrationRuntimeNode>): void;
  /**
   * @param resourceGroupName The resource group name.
   * @param factoryName The factory name.
   * @param integrationRuntimeName The integration runtime name.
   * @param nodeName The integration runtime node name.
   * @param updateIntegrationRuntimeNodeRequest The parameters for updating an integration runtime
   * node.
   * @param options The optional parameters
   * @param callback The callback
   */
  update(resourceGroupName: string, factoryName: string, integrationRuntimeName: string, nodeName: string, updateIntegrationRuntimeNodeRequest: Models.UpdateIntegrationRuntimeNodeRequest, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SelfHostedIntegrationRuntimeNode>): void;
  update(resourceGroupName: string, factoryName: string, integrationRuntimeName: string, nodeName: string, updateIntegrationRuntimeNodeRequest: Models.UpdateIntegrationRuntimeNodeRequest, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.SelfHostedIntegrationRuntimeNode>, callback?: msRest.ServiceCallback<Models.SelfHostedIntegrationRuntimeNode>): Promise<Models.IntegrationRuntimeNodesUpdateResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        factoryName,
        integrationRuntimeName,
        nodeName,
        updateIntegrationRuntimeNodeRequest,
        options
      },
      updateOperationSpec,
      callback) as Promise<Models.IntegrationRuntimeNodesUpdateResponse>;
  }

  /**
   * Get the IP address of self-hosted integration runtime node.
   * @param resourceGroupName The resource group name.
   * @param factoryName The factory name.
   * @param integrationRuntimeName The integration runtime name.
   * @param nodeName The integration runtime node name.
   * @param [options] The optional parameters
   * @returns Promise<Models.IntegrationRuntimeNodesGetIpAddressResponse>
   */
  getIpAddress(resourceGroupName: string, factoryName: string, integrationRuntimeName: string, nodeName: string, options?: msRest.RequestOptionsBase): Promise<Models.IntegrationRuntimeNodesGetIpAddressResponse>;
  /**
   * @param resourceGroupName The resource group name.
   * @param factoryName The factory name.
   * @param integrationRuntimeName The integration runtime name.
   * @param nodeName The integration runtime node name.
   * @param callback The callback
   */
  getIpAddress(resourceGroupName: string, factoryName: string, integrationRuntimeName: string, nodeName: string, callback: msRest.ServiceCallback<Models.IntegrationRuntimeNodeIpAddress>): void;
  /**
   * @param resourceGroupName The resource group name.
   * @param factoryName The factory name.
   * @param integrationRuntimeName The integration runtime name.
   * @param nodeName The integration runtime node name.
   * @param options The optional parameters
   * @param callback The callback
   */
  getIpAddress(resourceGroupName: string, factoryName: string, integrationRuntimeName: string, nodeName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.IntegrationRuntimeNodeIpAddress>): void;
  getIpAddress(resourceGroupName: string, factoryName: string, integrationRuntimeName: string, nodeName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.IntegrationRuntimeNodeIpAddress>, callback?: msRest.ServiceCallback<Models.IntegrationRuntimeNodeIpAddress>): Promise<Models.IntegrationRuntimeNodesGetIpAddressResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        factoryName,
        integrationRuntimeName,
        nodeName,
        options
      },
      getIpAddressOperationSpec,
      callback) as Promise<Models.IntegrationRuntimeNodesGetIpAddressResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/nodes/{nodeName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.factoryName,
    Parameters.integrationRuntimeName,
    Parameters.nodeName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.SelfHostedIntegrationRuntimeNode
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const deleteMethodOperationSpec: msRest.OperationSpec = {
  httpMethod: "DELETE",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/nodes/{nodeName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.factoryName,
    Parameters.integrationRuntimeName,
    Parameters.nodeName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {},
    204: {},
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const updateOperationSpec: msRest.OperationSpec = {
  httpMethod: "PATCH",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/nodes/{nodeName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.factoryName,
    Parameters.integrationRuntimeName,
    Parameters.nodeName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "updateIntegrationRuntimeNodeRequest",
    mapper: {
      ...Mappers.UpdateIntegrationRuntimeNodeRequest,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.SelfHostedIntegrationRuntimeNode
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const getIpAddressOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/nodes/{nodeName}/ipAddress",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.factoryName,
    Parameters.integrationRuntimeName,
    Parameters.nodeName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.IntegrationRuntimeNodeIpAddress
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};
