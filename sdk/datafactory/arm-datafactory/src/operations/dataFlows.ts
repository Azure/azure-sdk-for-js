/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/dataFlowsMappers";
import * as Parameters from "../models/parameters";
import { DataFactoryManagementClientContext } from "../dataFactoryManagementClientContext";

/** Class representing a DataFlows. */
export class DataFlows {
  private readonly client: DataFactoryManagementClientContext;

  /**
   * Create a DataFlows.
   * @param {DataFactoryManagementClientContext} client Reference to the service client.
   */
  constructor(client: DataFactoryManagementClientContext) {
    this.client = client;
  }

  /**
   * Creates or updates a data flow.
   * @param resourceGroupName The resource group name.
   * @param factoryName The factory name.
   * @param dataFlowName The data flow name.
   * @param dataFlow Data flow resource definition.
   * @param [options] The optional parameters
   * @returns Promise<Models.DataFlowsCreateOrUpdateResponse>
   */
  createOrUpdate(resourceGroupName: string, factoryName: string, dataFlowName: string, dataFlow: Models.DataFlowResource, options?: Models.DataFlowsCreateOrUpdateOptionalParams): Promise<Models.DataFlowsCreateOrUpdateResponse>;
  /**
   * @param resourceGroupName The resource group name.
   * @param factoryName The factory name.
   * @param dataFlowName The data flow name.
   * @param dataFlow Data flow resource definition.
   * @param callback The callback
   */
  createOrUpdate(resourceGroupName: string, factoryName: string, dataFlowName: string, dataFlow: Models.DataFlowResource, callback: msRest.ServiceCallback<Models.DataFlowResource>): void;
  /**
   * @param resourceGroupName The resource group name.
   * @param factoryName The factory name.
   * @param dataFlowName The data flow name.
   * @param dataFlow Data flow resource definition.
   * @param options The optional parameters
   * @param callback The callback
   */
  createOrUpdate(resourceGroupName: string, factoryName: string, dataFlowName: string, dataFlow: Models.DataFlowResource, options: Models.DataFlowsCreateOrUpdateOptionalParams, callback: msRest.ServiceCallback<Models.DataFlowResource>): void;
  createOrUpdate(resourceGroupName: string, factoryName: string, dataFlowName: string, dataFlow: Models.DataFlowResource, options?: Models.DataFlowsCreateOrUpdateOptionalParams | msRest.ServiceCallback<Models.DataFlowResource>, callback?: msRest.ServiceCallback<Models.DataFlowResource>): Promise<Models.DataFlowsCreateOrUpdateResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        factoryName,
        dataFlowName,
        dataFlow,
        options
      },
      createOrUpdateOperationSpec,
      callback) as Promise<Models.DataFlowsCreateOrUpdateResponse>;
  }

  /**
   * Gets a data flow.
   * @param resourceGroupName The resource group name.
   * @param factoryName The factory name.
   * @param dataFlowName The data flow name.
   * @param [options] The optional parameters
   * @returns Promise<Models.DataFlowsGetResponse>
   */
  get(resourceGroupName: string, factoryName: string, dataFlowName: string, options?: Models.DataFlowsGetOptionalParams): Promise<Models.DataFlowsGetResponse>;
  /**
   * @param resourceGroupName The resource group name.
   * @param factoryName The factory name.
   * @param dataFlowName The data flow name.
   * @param callback The callback
   */
  get(resourceGroupName: string, factoryName: string, dataFlowName: string, callback: msRest.ServiceCallback<Models.DataFlowResource>): void;
  /**
   * @param resourceGroupName The resource group name.
   * @param factoryName The factory name.
   * @param dataFlowName The data flow name.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(resourceGroupName: string, factoryName: string, dataFlowName: string, options: Models.DataFlowsGetOptionalParams, callback: msRest.ServiceCallback<Models.DataFlowResource>): void;
  get(resourceGroupName: string, factoryName: string, dataFlowName: string, options?: Models.DataFlowsGetOptionalParams | msRest.ServiceCallback<Models.DataFlowResource>, callback?: msRest.ServiceCallback<Models.DataFlowResource>): Promise<Models.DataFlowsGetResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        factoryName,
        dataFlowName,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.DataFlowsGetResponse>;
  }

  /**
   * Deletes a data flow.
   * @param resourceGroupName The resource group name.
   * @param factoryName The factory name.
   * @param dataFlowName The data flow name.
   * @param [options] The optional parameters
   * @returns Promise<msRest.RestResponse>
   */
  deleteMethod(resourceGroupName: string, factoryName: string, dataFlowName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
  /**
   * @param resourceGroupName The resource group name.
   * @param factoryName The factory name.
   * @param dataFlowName The data flow name.
   * @param callback The callback
   */
  deleteMethod(resourceGroupName: string, factoryName: string, dataFlowName: string, callback: msRest.ServiceCallback<void>): void;
  /**
   * @param resourceGroupName The resource group name.
   * @param factoryName The factory name.
   * @param dataFlowName The data flow name.
   * @param options The optional parameters
   * @param callback The callback
   */
  deleteMethod(resourceGroupName: string, factoryName: string, dataFlowName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
  deleteMethod(resourceGroupName: string, factoryName: string, dataFlowName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        factoryName,
        dataFlowName,
        options
      },
      deleteMethodOperationSpec,
      callback);
  }

  /**
   * Lists data flows.
   * @param resourceGroupName The resource group name.
   * @param factoryName The factory name.
   * @param [options] The optional parameters
   * @returns Promise<Models.DataFlowsListByFactoryResponse>
   */
  listByFactory(resourceGroupName: string, factoryName: string, options?: msRest.RequestOptionsBase): Promise<Models.DataFlowsListByFactoryResponse>;
  /**
   * @param resourceGroupName The resource group name.
   * @param factoryName The factory name.
   * @param callback The callback
   */
  listByFactory(resourceGroupName: string, factoryName: string, callback: msRest.ServiceCallback<Models.DataFlowListResponse>): void;
  /**
   * @param resourceGroupName The resource group name.
   * @param factoryName The factory name.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByFactory(resourceGroupName: string, factoryName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DataFlowListResponse>): void;
  listByFactory(resourceGroupName: string, factoryName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.DataFlowListResponse>, callback?: msRest.ServiceCallback<Models.DataFlowListResponse>): Promise<Models.DataFlowsListByFactoryResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        factoryName,
        options
      },
      listByFactoryOperationSpec,
      callback) as Promise<Models.DataFlowsListByFactoryResponse>;
  }

  /**
   * Lists data flows.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.DataFlowsListByFactoryNextResponse>
   */
  listByFactoryNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.DataFlowsListByFactoryNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listByFactoryNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.DataFlowListResponse>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByFactoryNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DataFlowListResponse>): void;
  listByFactoryNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.DataFlowListResponse>, callback?: msRest.ServiceCallback<Models.DataFlowListResponse>): Promise<Models.DataFlowsListByFactoryNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listByFactoryNextOperationSpec,
      callback) as Promise<Models.DataFlowsListByFactoryNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const createOrUpdateOperationSpec: msRest.OperationSpec = {
  httpMethod: "PUT",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/dataflows/{dataFlowName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.factoryName,
    Parameters.dataFlowName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.ifMatch,
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "dataFlow",
    mapper: {
      ...Mappers.DataFlowResource,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.DataFlowResource
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/dataflows/{dataFlowName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.factoryName,
    Parameters.dataFlowName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.ifNoneMatch,
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.DataFlowResource
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const deleteMethodOperationSpec: msRest.OperationSpec = {
  httpMethod: "DELETE",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/dataflows/{dataFlowName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.factoryName,
    Parameters.dataFlowName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {},
    204: {},
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listByFactoryOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/dataflows",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.factoryName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.DataFlowListResponse
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listByFactoryNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.DataFlowListResponse
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};
