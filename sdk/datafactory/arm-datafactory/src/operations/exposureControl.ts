/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/exposureControlMappers";
import * as Parameters from "../models/parameters";
import { DataFactoryManagementClientContext } from "../dataFactoryManagementClientContext";

/** Class representing a ExposureControl. */
export class ExposureControl {
  private readonly client: DataFactoryManagementClientContext;

  /**
   * Create a ExposureControl.
   * @param {DataFactoryManagementClientContext} client Reference to the service client.
   */
  constructor(client: DataFactoryManagementClientContext) {
    this.client = client;
  }

  /**
   * Get exposure control feature for specific location.
   * @param locationId The location identifier.
   * @param exposureControlRequest The exposure control request.
   * @param [options] The optional parameters
   * @returns Promise<Models.ExposureControlGetFeatureValueResponse>
   */
  getFeatureValue(locationId: string, exposureControlRequest: Models.ExposureControlRequest, options?: msRest.RequestOptionsBase): Promise<Models.ExposureControlGetFeatureValueResponse>;
  /**
   * @param locationId The location identifier.
   * @param exposureControlRequest The exposure control request.
   * @param callback The callback
   */
  getFeatureValue(locationId: string, exposureControlRequest: Models.ExposureControlRequest, callback: msRest.ServiceCallback<Models.ExposureControlResponse>): void;
  /**
   * @param locationId The location identifier.
   * @param exposureControlRequest The exposure control request.
   * @param options The optional parameters
   * @param callback The callback
   */
  getFeatureValue(locationId: string, exposureControlRequest: Models.ExposureControlRequest, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ExposureControlResponse>): void;
  getFeatureValue(locationId: string, exposureControlRequest: Models.ExposureControlRequest, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ExposureControlResponse>, callback?: msRest.ServiceCallback<Models.ExposureControlResponse>): Promise<Models.ExposureControlGetFeatureValueResponse> {
    return this.client.sendOperationRequest(
      {
        locationId,
        exposureControlRequest,
        options
      },
      getFeatureValueOperationSpec,
      callback) as Promise<Models.ExposureControlGetFeatureValueResponse>;
  }

  /**
   * Get exposure control feature for specific factory.
   * @param resourceGroupName The resource group name.
   * @param factoryName The factory name.
   * @param exposureControlRequest The exposure control request.
   * @param [options] The optional parameters
   * @returns Promise<Models.ExposureControlGetFeatureValueByFactoryResponse>
   */
  getFeatureValueByFactory(resourceGroupName: string, factoryName: string, exposureControlRequest: Models.ExposureControlRequest, options?: msRest.RequestOptionsBase): Promise<Models.ExposureControlGetFeatureValueByFactoryResponse>;
  /**
   * @param resourceGroupName The resource group name.
   * @param factoryName The factory name.
   * @param exposureControlRequest The exposure control request.
   * @param callback The callback
   */
  getFeatureValueByFactory(resourceGroupName: string, factoryName: string, exposureControlRequest: Models.ExposureControlRequest, callback: msRest.ServiceCallback<Models.ExposureControlResponse>): void;
  /**
   * @param resourceGroupName The resource group name.
   * @param factoryName The factory name.
   * @param exposureControlRequest The exposure control request.
   * @param options The optional parameters
   * @param callback The callback
   */
  getFeatureValueByFactory(resourceGroupName: string, factoryName: string, exposureControlRequest: Models.ExposureControlRequest, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ExposureControlResponse>): void;
  getFeatureValueByFactory(resourceGroupName: string, factoryName: string, exposureControlRequest: Models.ExposureControlRequest, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ExposureControlResponse>, callback?: msRest.ServiceCallback<Models.ExposureControlResponse>): Promise<Models.ExposureControlGetFeatureValueByFactoryResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        factoryName,
        exposureControlRequest,
        options
      },
      getFeatureValueByFactoryOperationSpec,
      callback) as Promise<Models.ExposureControlGetFeatureValueByFactoryResponse>;
  }

  /**
   * Get list of exposure control features for specific factory.
   * @param resourceGroupName The resource group name.
   * @param factoryName The factory name.
   * @param exposureControlBatchRequest The exposure control request for list of features.
   * @param [options] The optional parameters
   * @returns Promise<Models.ExposureControlQueryFeatureValuesByFactoryResponse>
   */
  queryFeatureValuesByFactory(resourceGroupName: string, factoryName: string, exposureControlBatchRequest: Models.ExposureControlBatchRequest, options?: msRest.RequestOptionsBase): Promise<Models.ExposureControlQueryFeatureValuesByFactoryResponse>;
  /**
   * @param resourceGroupName The resource group name.
   * @param factoryName The factory name.
   * @param exposureControlBatchRequest The exposure control request for list of features.
   * @param callback The callback
   */
  queryFeatureValuesByFactory(resourceGroupName: string, factoryName: string, exposureControlBatchRequest: Models.ExposureControlBatchRequest, callback: msRest.ServiceCallback<Models.ExposureControlBatchResponse>): void;
  /**
   * @param resourceGroupName The resource group name.
   * @param factoryName The factory name.
   * @param exposureControlBatchRequest The exposure control request for list of features.
   * @param options The optional parameters
   * @param callback The callback
   */
  queryFeatureValuesByFactory(resourceGroupName: string, factoryName: string, exposureControlBatchRequest: Models.ExposureControlBatchRequest, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ExposureControlBatchResponse>): void;
  queryFeatureValuesByFactory(resourceGroupName: string, factoryName: string, exposureControlBatchRequest: Models.ExposureControlBatchRequest, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ExposureControlBatchResponse>, callback?: msRest.ServiceCallback<Models.ExposureControlBatchResponse>): Promise<Models.ExposureControlQueryFeatureValuesByFactoryResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        factoryName,
        exposureControlBatchRequest,
        options
      },
      queryFeatureValuesByFactoryOperationSpec,
      callback) as Promise<Models.ExposureControlQueryFeatureValuesByFactoryResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const getFeatureValueOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "subscriptions/{subscriptionId}/providers/Microsoft.DataFactory/locations/{locationId}/getFeatureValue",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.locationId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "exposureControlRequest",
    mapper: {
      ...Mappers.ExposureControlRequest,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.ExposureControlResponse
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const getFeatureValueByFactoryOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/getFeatureValue",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.factoryName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "exposureControlRequest",
    mapper: {
      ...Mappers.ExposureControlRequest,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.ExposureControlResponse
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const queryFeatureValuesByFactoryOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/queryFeaturesValue",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.factoryName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "exposureControlBatchRequest",
    mapper: {
      ...Mappers.ExposureControlBatchRequest,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.ExposureControlBatchResponse
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};
