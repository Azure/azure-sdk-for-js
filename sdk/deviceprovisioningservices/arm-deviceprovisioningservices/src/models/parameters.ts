/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";

export const acceptLanguage: msRest.OperationParameter = {
  parameterPath: "acceptLanguage",
  mapper: {
    serializedName: "accept-language",
    defaultValue: 'en-US',
    type: {
      name: "String"
    }
  }
};
export const apiVersion: msRest.OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    required: true,
    serializedName: "api-version",
    type: {
      name: "String"
    }
  }
};
export const asyncinfo: msRest.OperationQueryParameter = {
  parameterPath: "asyncinfo",
  mapper: {
    required: true,
    serializedName: "asyncinfo",
    defaultValue: 'true',
    type: {
      name: "String"
    }
  }
};
export const certificatecreated: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "certificatecreated"
  ],
  mapper: {
    serializedName: "certificate.created",
    type: {
      name: "DateTime"
    }
  }
};
export const certificatehasPrivateKey: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "certificatehasPrivateKey"
  ],
  mapper: {
    serializedName: "certificate.hasPrivateKey",
    type: {
      name: "Boolean"
    }
  }
};
export const certificateisVerified: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "certificateisVerified"
  ],
  mapper: {
    serializedName: "certificate.isVerified",
    type: {
      name: "Boolean"
    }
  }
};
export const certificatelastUpdated: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "certificatelastUpdated"
  ],
  mapper: {
    serializedName: "certificate.lastUpdated",
    type: {
      name: "DateTime"
    }
  }
};
export const certificatename: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "certificatename"
  ],
  mapper: {
    serializedName: "certificate.name",
    type: {
      name: "String"
    }
  }
};
export const certificateName0: msRest.OperationURLParameter = {
  parameterPath: "certificateName",
  mapper: {
    required: true,
    serializedName: "certificateName",
    type: {
      name: "String"
    }
  }
};
export const certificateName1: msRest.OperationURLParameter = {
  parameterPath: "certificateName",
  mapper: {
    required: true,
    serializedName: "certificateName",
    constraints: {
      MaxLength: 256
    },
    type: {
      name: "String"
    }
  }
};
export const certificatenonce: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "certificatenonce"
  ],
  mapper: {
    serializedName: "certificate.nonce",
    type: {
      name: "String"
    }
  }
};
export const certificatepurpose: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "certificatepurpose"
  ],
  mapper: {
    serializedName: "certificate.purpose",
    type: {
      name: "String"
    }
  }
};
export const certificaterawBytes: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "certificaterawBytes"
  ],
  mapper: {
    serializedName: "certificate.rawBytes",
    type: {
      name: "ByteArray"
    }
  }
};
export const ifMatch0: msRest.OperationParameter = {
  parameterPath: [
    "options",
    "ifMatch"
  ],
  mapper: {
    serializedName: "If-Match",
    type: {
      name: "String"
    }
  }
};
export const ifMatch1: msRest.OperationParameter = {
  parameterPath: "ifMatch",
  mapper: {
    required: true,
    serializedName: "If-Match",
    type: {
      name: "String"
    }
  }
};
export const keyName: msRest.OperationURLParameter = {
  parameterPath: "keyName",
  mapper: {
    required: true,
    serializedName: "keyName",
    type: {
      name: "String"
    }
  }
};
export const nextPageLink: msRest.OperationURLParameter = {
  parameterPath: "nextPageLink",
  mapper: {
    required: true,
    serializedName: "nextLink",
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};
export const operationId: msRest.OperationURLParameter = {
  parameterPath: "operationId",
  mapper: {
    required: true,
    serializedName: "operationId",
    type: {
      name: "String"
    }
  }
};
export const provisioningServiceName: msRest.OperationURLParameter = {
  parameterPath: "provisioningServiceName",
  mapper: {
    required: true,
    serializedName: "provisioningServiceName",
    type: {
      name: "String"
    }
  }
};
export const resourceGroupName: msRest.OperationURLParameter = {
  parameterPath: "resourceGroupName",
  mapper: {
    required: true,
    serializedName: "resourceGroupName",
    type: {
      name: "String"
    }
  }
};
export const subscriptionId: msRest.OperationURLParameter = {
  parameterPath: "subscriptionId",
  mapper: {
    required: true,
    serializedName: "subscriptionId",
    type: {
      name: "String"
    }
  }
};
