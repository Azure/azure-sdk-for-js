/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import {
  ServerCollector,
  ServerCollectorsCreateOptionalParams,
  AzureMigrateV2
} from "@azure/arm-migrate";
import { DefaultAzureCredential } from "@azure/identity";
import * as dotenv from "dotenv";

dotenv.config();

/**
 * This sample demonstrates how to Create or Update Server collector
 *
 * @summary Create or Update Server collector
 * x-ms-original-file: specification/migrate/resource-manager/Microsoft.Migrate/stable/2019-10-01/examples/ServerCollectors_Create.json
 */
async function serverCollectorsCreate() {
  const subscriptionId =
    process.env["MIGRATE_SUBSCRIPTION_ID"] ||
    "4bd2aa0f-2bd2-4d67-91a8-5a4533d58600";
  const resourceGroupName =
    process.env["MIGRATE_RESOURCE_GROUP"] || "pajindtest";
  const projectName = "app11141project";
  const serverCollectorName = "app23df4collector";
  const collectorBody: ServerCollector = {
    eTag: '"00000606-0000-0d00-0000-605999bf0000"',
    properties: {
      agentProperties: {
        spnDetails: {
          applicationId: "ad9f701a-cc08-4421-b51f-b5762d58e9ba",
          audience:
            "https://72f988bf-86f1-41af-91ab-2d7cd011db47/app23df4authandaccessaadapp",
          authority:
            "https://login.windows.net/72f988bf-86f1-41af-91ab-2d7cd011db47",
          objectId: "b4975e42-9248-4a36-b99f-37eca377ea00",
          tenantId: "72f988bf-86f1-41af-91ab-2d7cd011db47"
        }
      },
      discoverySiteId:
        "/subscriptions/4bd2aa0f-2bd2-4d67-91a8-5a4533d58600/resourceGroups/pajindTest/providers/Microsoft.OffAzure/ServerSites/app21141site"
    }
  };
  const options: ServerCollectorsCreateOptionalParams = { collectorBody };
  const credential = new DefaultAzureCredential();
  const client = new AzureMigrateV2(credential, subscriptionId);
  const result = await client.serverCollectors.create(
    resourceGroupName,
    projectName,
    serverCollectorName,
    options
  );
  console.log(result);
}

async function main() {
  serverCollectorsCreate();
}

main().catch(console.error);
