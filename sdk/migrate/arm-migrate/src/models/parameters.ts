/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";

export const acceptLanguage: msRest.OperationParameter = {
  parameterPath: "acceptLanguage",
  mapper: {
    serializedName: "accept-language",
    defaultValue: 'en-US',
    type: {
      name: "String"
    }
  }
};
export const apiVersion: msRest.OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    required: true,
    isConstant: true,
    serializedName: "api-version",
    defaultValue: '2019-10-01',
    type: {
      name: "String"
    }
  }
};
export const assessedMachineName: msRest.OperationURLParameter = {
  parameterPath: "assessedMachineName",
  mapper: {
    required: true,
    serializedName: "assessedMachineName",
    type: {
      name: "String"
    }
  }
};
export const assessmentName: msRest.OperationURLParameter = {
  parameterPath: "assessmentName",
  mapper: {
    required: true,
    serializedName: "assessmentName",
    type: {
      name: "String"
    }
  }
};
export const assessmentOptionsName: msRest.OperationURLParameter = {
  parameterPath: "assessmentOptionsName",
  mapper: {
    required: true,
    serializedName: "assessmentOptionsName",
    type: {
      name: "String"
    }
  }
};
export const groupName: msRest.OperationURLParameter = {
  parameterPath: "groupName",
  mapper: {
    required: true,
    serializedName: "groupName",
    type: {
      name: "String"
    }
  }
};
export const hyperVCollectorName: msRest.OperationURLParameter = {
  parameterPath: "hyperVCollectorName",
  mapper: {
    required: true,
    serializedName: "hyperVCollectorName",
    type: {
      name: "String"
    }
  }
};
export const importCollectorName: msRest.OperationURLParameter = {
  parameterPath: "importCollectorName",
  mapper: {
    required: true,
    serializedName: "importCollectorName",
    type: {
      name: "String"
    }
  }
};
export const machineName: msRest.OperationURLParameter = {
  parameterPath: "machineName",
  mapper: {
    required: true,
    serializedName: "machineName",
    type: {
      name: "String"
    }
  }
};
export const nextPageLink: msRest.OperationURLParameter = {
  parameterPath: "nextPageLink",
  mapper: {
    required: true,
    serializedName: "nextLink",
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};
export const privateEndpointConnectionName: msRest.OperationURLParameter = {
  parameterPath: "privateEndpointConnectionName",
  mapper: {
    required: true,
    serializedName: "privateEndpointConnectionName",
    type: {
      name: "String"
    }
  }
};
export const privateLinkResourceName: msRest.OperationURLParameter = {
  parameterPath: "privateLinkResourceName",
  mapper: {
    required: true,
    serializedName: "privateLinkResourceName",
    type: {
      name: "String"
    }
  }
};
export const projectName: msRest.OperationURLParameter = {
  parameterPath: "projectName",
  mapper: {
    required: true,
    serializedName: "projectName",
    type: {
      name: "String"
    }
  }
};
export const resourceGroupName: msRest.OperationURLParameter = {
  parameterPath: "resourceGroupName",
  mapper: {
    required: true,
    serializedName: "resourceGroupName",
    type: {
      name: "String"
    }
  }
};
export const serverCollectorName: msRest.OperationURLParameter = {
  parameterPath: "serverCollectorName",
  mapper: {
    required: true,
    serializedName: "serverCollectorName",
    type: {
      name: "String"
    }
  }
};
export const subscriptionId: msRest.OperationURLParameter = {
  parameterPath: "subscriptionId",
  mapper: {
    required: true,
    serializedName: "subscriptionId",
    type: {
      name: "String"
    }
  }
};
export const vmWareCollectorName: msRest.OperationURLParameter = {
  parameterPath: "vmWareCollectorName",
  mapper: {
    required: true,
    serializedName: "vmWareCollectorName",
    type: {
      name: "String"
    }
  }
};
