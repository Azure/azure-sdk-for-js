/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export const ProjectResultList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProjectResultList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Project"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Project: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Project",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      eTag: {
        serializedName: "eTag",
        type: {
          name: "String"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "ProjectProperties"
        }
      }
    }
  }
};

export const ProjectProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProjectProperties",
    modelProperties: {
      createdTimestamp: {
        serializedName: "createdTimestamp",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      updatedTimestamp: {
        serializedName: "updatedTimestamp",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      serviceEndpoint: {
        serializedName: "serviceEndpoint",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      assessmentSolutionId: {
        serializedName: "assessmentSolutionId",
        type: {
          name: "String"
        }
      },
      projectStatus: {
        serializedName: "projectStatus",
        type: {
          name: "String"
        }
      },
      customerWorkspaceId: {
        serializedName: "customerWorkspaceId",
        type: {
          name: "String"
        }
      },
      customerWorkspaceLocation: {
        serializedName: "customerWorkspaceLocation",
        type: {
          name: "String"
        }
      },
      numberOfGroups: {
        serializedName: "numberOfGroups",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      numberOfMachines: {
        serializedName: "numberOfMachines",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      numberOfAssessments: {
        serializedName: "numberOfAssessments",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      lastAssessmentTimestamp: {
        serializedName: "lastAssessmentTimestamp",
        readOnly: true,
        nullable: true,
        type: {
          name: "DateTime"
        }
      },
      publicNetworkAccess: {
        serializedName: "publicNetworkAccess",
        type: {
          name: "String"
        }
      },
      privateEndpointConnections: {
        serializedName: "privateEndpointConnections",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PrivateEndpointConnection"
            }
          }
        }
      },
      customerStorageAccountArmId: {
        serializedName: "customerStorageAccountArmId",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PrivateEndpointConnection: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PrivateEndpointConnection",
    modelProperties: {
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      eTag: {
        serializedName: "eTag",
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "PrivateEndpointConnectionProperties"
        }
      }
    }
  }
};

export const PrivateEndpointConnectionProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PrivateEndpointConnectionProperties",
    modelProperties: {
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      privateEndpoint: {
        serializedName: "privateEndpoint",
        type: {
          name: "Composite",
          className: "ResourceId"
        }
      },
      privateLinkServiceConnectionState: {
        serializedName: "privateLinkServiceConnectionState",
        type: {
          name: "Composite",
          className: "PrivateLinkServiceConnectionState"
        }
      }
    }
  }
};

export const ResourceId: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceId",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PrivateLinkServiceConnectionState: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PrivateLinkServiceConnectionState",
    modelProperties: {
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      actionsRequired: {
        serializedName: "actionsRequired",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CloudError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CloudError",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "CloudErrorBody"
        }
      }
    }
  }
};

export const CloudErrorBody: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CloudErrorBody",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        type: {
          name: "String"
        }
      },
      details: {
        serializedName: "details",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CloudErrorBody"
            }
          }
        }
      }
    }
  }
};

export const AssessmentOptions: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessmentOptions",
    modelProperties: {
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "AssessmentOptionsProperties"
        }
      }
    }
  }
};

export const AssessmentOptionsProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessmentOptionsProperties",
    modelProperties: {
      vmFamilies: {
        serializedName: "vmFamilies",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VmFamily"
            }
          }
        }
      },
      reservedInstanceVmFamilies: {
        serializedName: "reservedInstanceVmFamilies",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      reservedInstanceSupportedLocations: {
        serializedName: "reservedInstanceSupportedLocations",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      reservedInstanceSupportedCurrencies: {
        serializedName: "reservedInstanceSupportedCurrencies",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      reservedInstanceSupportedOffers: {
        serializedName: "reservedInstanceSupportedOffers",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const VmFamily: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VmFamily",
    modelProperties: {
      familyName: {
        serializedName: "familyName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      targetLocations: {
        serializedName: "targetLocations",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      category: {
        serializedName: "category",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const AssessmentOptionsResultList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessmentOptionsResultList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AssessmentOptions"
            }
          }
        }
      }
    }
  }
};

export const MachineResultList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MachineResultList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Machine"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Machine: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Machine",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      eTag: {
        serializedName: "eTag",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "MachineProperties"
        }
      }
    }
  }
};

export const MachineProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MachineProperties",
    modelProperties: {
      bootType: {
        serializedName: "bootType",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      datacenterManagementServerArmId: {
        serializedName: "datacenterManagementServerArmId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      discoveryMachineArmId: {
        serializedName: "discoveryMachineArmId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      datacenterManagementServerName: {
        serializedName: "datacenterManagementServerName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      megabytesOfMemory: {
        serializedName: "megabytesOfMemory",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      numberOfCores: {
        serializedName: "numberOfCores",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      operatingSystemType: {
        serializedName: "operatingSystemType",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      operatingSystemName: {
        serializedName: "operatingSystemName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      operatingSystemVersion: {
        serializedName: "operatingSystemVersion",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      groups: {
        serializedName: "groups",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      createdTimestamp: {
        serializedName: "createdTimestamp",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      updatedTimestamp: {
        serializedName: "updatedTimestamp",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      disks: {
        serializedName: "disks",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "Composite", className: "Disk" } }
        }
      },
      networkAdapters: {
        serializedName: "networkAdapters",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "Composite", className: "NetworkAdapter" } }
        }
      }
    }
  }
};

export const Disk: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Disk",
    modelProperties: {
      gigabytesAllocated: {
        serializedName: "gigabytesAllocated",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      displayName: {
        serializedName: "displayName",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NetworkAdapter: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NetworkAdapter",
    modelProperties: {
      macAddress: {
        serializedName: "macAddress",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      ipAddresses: {
        serializedName: "ipAddresses",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      displayName: {
        serializedName: "displayName",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GroupResultList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GroupResultList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Group"
            }
          }
        }
      }
    }
  }
};

export const Group: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Group",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      eTag: {
        serializedName: "eTag",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "GroupProperties"
        }
      }
    }
  }
};

export const GroupProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GroupProperties",
    modelProperties: {
      groupStatus: {
        serializedName: "groupStatus",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      machineCount: {
        serializedName: "machineCount",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      assessments: {
        serializedName: "assessments",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      areAssessmentsRunning: {
        serializedName: "areAssessmentsRunning",
        readOnly: true,
        type: {
          name: "Boolean"
        }
      },
      createdTimestamp: {
        serializedName: "createdTimestamp",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      updatedTimestamp: {
        serializedName: "updatedTimestamp",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      groupType: {
        serializedName: "groupType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UpdateGroupBody: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UpdateGroupBody",
    modelProperties: {
      eTag: {
        serializedName: "eTag",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "GroupBodyProperties"
        }
      }
    }
  }
};

export const GroupBodyProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GroupBodyProperties",
    modelProperties: {
      operationType: {
        serializedName: "operationType",
        type: {
          name: "String"
        }
      },
      machines: {
        serializedName: "machines",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const AssessmentResultList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessmentResultList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Assessment"
            }
          }
        }
      }
    }
  }
};

export const Assessment: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Assessment",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      eTag: {
        serializedName: "eTag",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "AssessmentProperties"
        }
      }
    }
  }
};

export const AssessmentProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessmentProperties",
    modelProperties: {
      azureLocation: {
        serializedName: "azureLocation",
        required: true,
        type: {
          name: "String"
        }
      },
      azureOfferCode: {
        serializedName: "azureOfferCode",
        required: true,
        type: {
          name: "String"
        }
      },
      eaSubscriptionId: {
        serializedName: "eaSubscriptionId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      azurePricingTier: {
        serializedName: "azurePricingTier",
        required: true,
        type: {
          name: "String"
        }
      },
      azureStorageRedundancy: {
        serializedName: "azureStorageRedundancy",
        required: true,
        type: {
          name: "String"
        }
      },
      scalingFactor: {
        serializedName: "scalingFactor",
        required: true,
        type: {
          name: "Number"
        }
      },
      percentile: {
        serializedName: "percentile",
        required: true,
        type: {
          name: "String"
        }
      },
      timeRange: {
        serializedName: "timeRange",
        required: true,
        type: {
          name: "String"
        }
      },
      perfDataStartTime: {
        serializedName: "perfDataStartTime",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      perfDataEndTime: {
        serializedName: "perfDataEndTime",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      stage: {
        serializedName: "stage",
        required: true,
        type: {
          name: "String"
        }
      },
      currency: {
        serializedName: "currency",
        required: true,
        type: {
          name: "String"
        }
      },
      azureHybridUseBenefit: {
        serializedName: "azureHybridUseBenefit",
        required: true,
        type: {
          name: "String"
        }
      },
      discountPercentage: {
        serializedName: "discountPercentage",
        required: true,
        type: {
          name: "Number"
        }
      },
      confidenceRatingInPercentage: {
        serializedName: "confidenceRatingInPercentage",
        readOnly: true,
        nullable: true,
        type: {
          name: "Number"
        }
      },
      sizingCriterion: {
        serializedName: "sizingCriterion",
        required: true,
        type: {
          name: "String"
        }
      },
      reservedInstance: {
        serializedName: "reservedInstance",
        required: true,
        type: {
          name: "String"
        }
      },
      azureVmFamilies: {
        serializedName: "azureVmFamilies",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      azureDiskType: {
        serializedName: "azureDiskType",
        required: true,
        type: {
          name: "String"
        }
      },
      vmUptime: {
        serializedName: "vmUptime",
        type: {
          name: "Composite",
          className: "VmUptime"
        }
      },
      pricesTimestamp: {
        serializedName: "pricesTimestamp",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      createdTimestamp: {
        serializedName: "createdTimestamp",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      updatedTimestamp: {
        serializedName: "updatedTimestamp",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      monthlyComputeCost: {
        serializedName: "monthlyComputeCost",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      monthlyBandwidthCost: {
        serializedName: "monthlyBandwidthCost",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      monthlyStorageCost: {
        serializedName: "monthlyStorageCost",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      monthlyPremiumStorageCost: {
        serializedName: "monthlyPremiumStorageCost",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      monthlyStandardSSDStorageCost: {
        serializedName: "monthlyStandardSSDStorageCost",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      status: {
        serializedName: "status",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      numberOfMachines: {
        serializedName: "numberOfMachines",
        readOnly: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const VmUptime: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VmUptime",
    modelProperties: {
      daysPerMonth: {
        serializedName: "daysPerMonth",
        type: {
          name: "Number"
        }
      },
      hoursPerDay: {
        serializedName: "hoursPerDay",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const DownloadUrl: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DownloadUrl",
    modelProperties: {
      assessmentReportUrl: {
        serializedName: "assessmentReportUrl",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      expirationTime: {
        serializedName: "expirationTime",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const AssessedMachineResultList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessedMachineResultList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AssessedMachine"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AssessedMachine: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessedMachine",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      eTag: {
        serializedName: "eTag",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "AssessedMachineProperties"
        }
      }
    }
  }
};

export const AssessedMachineProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessedMachineProperties",
    modelProperties: {
      bootType: {
        serializedName: "bootType",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      datacenterMachineArmId: {
        serializedName: "datacenterMachineArmId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      datacenterManagementServerArmId: {
        serializedName: "datacenterManagementServerArmId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      datacenterManagementServerName: {
        serializedName: "datacenterManagementServerName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      megabytesOfMemory: {
        serializedName: "megabytesOfMemory",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      numberOfCores: {
        serializedName: "numberOfCores",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      operatingSystemType: {
        serializedName: "operatingSystemType",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      operatingSystemName: {
        serializedName: "operatingSystemName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      operatingSystemVersion: {
        serializedName: "operatingSystemVersion",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      monthlyBandwidthCost: {
        serializedName: "monthlyBandwidthCost",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      monthlyStorageCost: {
        serializedName: "monthlyStorageCost",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      monthlyPremiumStorageCost: {
        serializedName: "monthlyPremiumStorageCost",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      monthlyStandardSSDStorageCost: {
        serializedName: "monthlyStandardSSDStorageCost",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      confidenceRatingInPercentage: {
        serializedName: "confidenceRatingInPercentage",
        readOnly: true,
        nullable: true,
        type: {
          name: "Number"
        }
      },
      disks: {
        serializedName: "disks",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "Composite", className: "AssessedDisk" } }
        }
      },
      networkAdapters: {
        serializedName: "networkAdapters",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Composite", className: "AssessedNetworkAdapter" }
          }
        }
      },
      recommendedSize: {
        serializedName: "recommendedSize",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      numberOfCoresForRecommendedSize: {
        serializedName: "numberOfCoresForRecommendedSize",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      megabytesOfMemoryForRecommendedSize: {
        serializedName: "megabytesOfMemoryForRecommendedSize",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      monthlyComputeCostForRecommendedSize: {
        serializedName: "monthlyComputeCostForRecommendedSize",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      percentageCoresUtilization: {
        serializedName: "percentageCoresUtilization",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      percentageMemoryUtilization: {
        serializedName: "percentageMemoryUtilization",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      suitability: {
        serializedName: "suitability",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      suitabilityExplanation: {
        serializedName: "suitabilityExplanation",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      suitabilityDetail: {
        serializedName: "suitabilityDetail",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      createdTimestamp: {
        serializedName: "createdTimestamp",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      },
      updatedTimestamp: {
        serializedName: "updatedTimestamp",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const AssessedDisk: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessedDisk",
    modelProperties: {
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      gigabytesProvisioned: {
        serializedName: "gigabytesProvisioned",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      megabytesPerSecondOfRead: {
        serializedName: "megabytesPerSecondOfRead",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      megabytesPerSecondOfWrite: {
        serializedName: "megabytesPerSecondOfWrite",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      numberOfReadOperationsPerSecond: {
        serializedName: "numberOfReadOperationsPerSecond",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      numberOfWriteOperationsPerSecond: {
        serializedName: "numberOfWriteOperationsPerSecond",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      monthlyStorageCost: {
        serializedName: "monthlyStorageCost",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      recommendedDiskType: {
        serializedName: "recommendedDiskType",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      recommendedDiskSize: {
        serializedName: "recommendedDiskSize",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      gigabytesForRecommendedDiskSize: {
        serializedName: "gigabytesForRecommendedDiskSize",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      suitability: {
        serializedName: "suitability",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      suitabilityExplanation: {
        serializedName: "suitabilityExplanation",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      suitabilityDetail: {
        serializedName: "suitabilityDetail",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AssessedNetworkAdapter: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessedNetworkAdapter",
    modelProperties: {
      macAddress: {
        serializedName: "macAddress",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      ipAddresses: {
        serializedName: "ipAddresses",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      displayName: {
        serializedName: "displayName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      monthlyBandwidthCosts: {
        serializedName: "monthlyBandwidthCosts",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      megabytesPerSecondReceived: {
        serializedName: "megabytesPerSecondReceived",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      megabytesPerSecondTransmitted: {
        serializedName: "megabytesPerSecondTransmitted",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      netGigabytesTransmittedPerMonth: {
        serializedName: "netGigabytesTransmittedPerMonth",
        type: {
          name: "Number"
        }
      },
      suitability: {
        serializedName: "suitability",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      suitabilityExplanation: {
        serializedName: "suitabilityExplanation",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      suitabilityDetail: {
        serializedName: "suitabilityDetail",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const HyperVCollectorList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "HyperVCollectorList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "HyperVCollector"
            }
          }
        }
      }
    }
  }
};

export const HyperVCollector: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "HyperVCollector",
    modelProperties: {
      eTag: {
        serializedName: "eTag",
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "CollectorProperties"
        }
      }
    }
  }
};

export const CollectorProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CollectorProperties",
    modelProperties: {
      discoverySiteId: {
        serializedName: "discoverySiteId",
        type: {
          name: "String"
        }
      },
      createdTimestamp: {
        serializedName: "createdTimestamp",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      updatedTimestamp: {
        serializedName: "updatedTimestamp",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      agentProperties: {
        serializedName: "agentProperties",
        type: {
          name: "Composite",
          className: "CollectorAgentProperties"
        }
      }
    }
  }
};

export const CollectorAgentProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CollectorAgentProperties",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      lastHeartbeatUtc: {
        serializedName: "lastHeartbeatUtc",
        readOnly: true,
        nullable: true,
        type: {
          name: "DateTime"
        }
      },
      spnDetails: {
        serializedName: "spnDetails",
        type: {
          name: "Composite",
          className: "CollectorBodyAgentSpnProperties"
        }
      }
    }
  }
};

export const CollectorBodyAgentSpnProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CollectorBodyAgentSpnProperties",
    modelProperties: {
      authority: {
        serializedName: "authority",
        type: {
          name: "String"
        }
      },
      applicationId: {
        serializedName: "applicationId",
        type: {
          name: "String"
        }
      },
      audience: {
        serializedName: "audience",
        type: {
          name: "String"
        }
      },
      objectId: {
        serializedName: "objectId",
        type: {
          name: "String"
        }
      },
      tenantId: {
        serializedName: "tenantId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServerCollectorList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ServerCollectorList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ServerCollector"
            }
          }
        }
      }
    }
  }
};

export const ServerCollector: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ServerCollector",
    modelProperties: {
      eTag: {
        serializedName: "eTag",
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "CollectorProperties"
        }
      }
    }
  }
};

export const VMwareCollectorList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VMwareCollectorList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VMwareCollector"
            }
          }
        }
      }
    }
  }
};

export const VMwareCollector: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VMwareCollector",
    modelProperties: {
      eTag: {
        serializedName: "eTag",
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "CollectorProperties"
        }
      }
    }
  }
};

export const ImportCollectorList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ImportCollectorList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ImportCollector"
            }
          }
        }
      }
    }
  }
};

export const ImportCollector: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ImportCollector",
    modelProperties: {
      eTag: {
        serializedName: "eTag",
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "ImportCollectorProperties"
        }
      }
    }
  }
};

export const ImportCollectorProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ImportCollectorProperties",
    modelProperties: {
      discoverySiteId: {
        serializedName: "discoverySiteId",
        type: {
          name: "String"
        }
      },
      createdTimestamp: {
        serializedName: "createdTimestamp",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      updatedTimestamp: {
        serializedName: "updatedTimestamp",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PrivateEndpointConnectionCollection: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PrivateEndpointConnectionCollection",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PrivateEndpointConnection"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PrivateLinkResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PrivateLinkResource",
    modelProperties: {
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "PrivateLinkResourceProperties"
        }
      }
    }
  }
};

export const PrivateLinkResourceProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PrivateLinkResourceProperties",
    modelProperties: {
      requiredMembers: {
        serializedName: "requiredMembers",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      requiredZoneNames: {
        serializedName: "requiredZoneNames",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      groupId: {
        serializedName: "groupId",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PrivateLinkResourceCollection: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PrivateLinkResourceCollection",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PrivateLinkResource"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationResultList: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationResultList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation"
            }
          }
        }
      }
    }
  }
};

export const Operation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay"
        }
      },
      origin: {
        serializedName: "origin",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationDisplay: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        serializedName: "provider",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      resource: {
        serializedName: "resource",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      operation: {
        serializedName: "operation",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProjectsListBySubscriptionHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProjectsListBySubscriptionHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProjectsListHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProjectsListHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProjectsGetHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProjectsGetHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProjectsCreateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProjectsCreateHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProjectsUpdateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProjectsUpdateHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProjectsDeleteHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProjectsDeleteHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProjectsAssessmentOptionsHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProjectsAssessmentOptionsHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProjectsAssessmentOptionsListHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProjectsAssessmentOptionsListHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProjectsListBySubscriptionNextHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProjectsListBySubscriptionNextHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProjectsListNextHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProjectsListNextHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MachinesListByProjectHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MachinesListByProjectHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MachinesGetHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MachinesGetHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MachinesListByProjectNextHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MachinesListByProjectNextHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GroupsListByProjectHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GroupsListByProjectHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GroupsGetHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GroupsGetHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GroupsCreateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GroupsCreateHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GroupsDeleteHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GroupsDeleteHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GroupsUpdateMachinesHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GroupsUpdateMachinesHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AssessmentsListByGroupHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessmentsListByGroupHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AssessmentsListByProjectHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessmentsListByProjectHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AssessmentsGetHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessmentsGetHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AssessmentsCreateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessmentsCreateHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AssessmentsDeleteHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessmentsDeleteHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AssessmentsGetReportDownloadUrlHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessmentsGetReportDownloadUrlHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AssessedMachinesListByAssessmentHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessedMachinesListByAssessmentHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AssessedMachinesGetHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessedMachinesGetHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AssessedMachinesListByAssessmentNextHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessedMachinesListByAssessmentNextHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const HyperVCollectorsListByProjectHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "HyperVCollectorsListByProjectHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const HyperVCollectorsGetHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "HyperVCollectorsGetHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const HyperVCollectorsCreateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "HyperVCollectorsCreateHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const HyperVCollectorsDeleteHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "HyperVCollectorsDeleteHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServerCollectorsListByProjectHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ServerCollectorsListByProjectHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServerCollectorsGetHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ServerCollectorsGetHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServerCollectorsCreateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ServerCollectorsCreateHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServerCollectorsDeleteHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ServerCollectorsDeleteHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VMwareCollectorsListByProjectHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VMwareCollectorsListByProjectHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VMwareCollectorsGetHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VMwareCollectorsGetHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VMwareCollectorsCreateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VMwareCollectorsCreateHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VMwareCollectorsDeleteHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VMwareCollectorsDeleteHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ImportCollectorsListByProjectHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ImportCollectorsListByProjectHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ImportCollectorsGetHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ImportCollectorsGetHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ImportCollectorsCreateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ImportCollectorsCreateHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ImportCollectorsDeleteHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ImportCollectorsDeleteHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PrivateEndpointConnectionListByProjectHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PrivateEndpointConnectionListByProjectHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PrivateEndpointConnectionGetHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PrivateEndpointConnectionGetHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PrivateEndpointConnectionUpdateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PrivateEndpointConnectionUpdateHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PrivateEndpointConnectionDeleteHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PrivateEndpointConnectionDeleteHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PrivateLinkResourceGetHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PrivateLinkResourceGetHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PrivateLinkResourceListByProjectHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PrivateLinkResourceListByProjectHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};
