/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { CloudErrorMapper, BaseResourceMapper } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export const CloudError = CloudErrorMapper;
export const BaseResource = BaseResourceMapper;

export const HealthErrorDetails: msRest.CompositeMapper = {
  serializedName: "HealthErrorDetails",
  type: {
    name: "Composite",
    className: "HealthErrorDetails",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "Number"
        }
      },
      code: {
        readOnly: true,
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        readOnly: true,
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      possibleCauses: {
        readOnly: true,
        serializedName: "possibleCauses",
        type: {
          name: "String"
        }
      },
      recommendedAction: {
        readOnly: true,
        serializedName: "recommendedAction",
        type: {
          name: "String"
        }
      },
      severity: {
        readOnly: true,
        serializedName: "severity",
        type: {
          name: "String"
        }
      },
      summaryMessage: {
        readOnly: true,
        serializedName: "summaryMessage",
        type: {
          name: "String"
        }
      },
      messageParameters: {
        readOnly: true,
        serializedName: "messageParameters",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const HyperVClusterProperties: msRest.CompositeMapper = {
  serializedName: "HyperVClusterProperties",
  type: {
    name: "Composite",
    className: "HyperVClusterProperties",
    modelProperties: {
      createdTimestamp: {
        readOnly: true,
        serializedName: "createdTimestamp",
        type: {
          name: "String"
        }
      },
      updatedTimestamp: {
        readOnly: true,
        serializedName: "updatedTimestamp",
        type: {
          name: "String"
        }
      },
      fqdn: {
        serializedName: "fqdn",
        type: {
          name: "String"
        }
      },
      functionalLevel: {
        readOnly: true,
        serializedName: "functionalLevel",
        type: {
          name: "Number"
        }
      },
      status: {
        readOnly: true,
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      runAsAccountId: {
        serializedName: "runAsAccountId",
        type: {
          name: "String"
        }
      },
      hostFqdnList: {
        serializedName: "hostFqdnList",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      errors: {
        readOnly: true,
        serializedName: "errors",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "HealthErrorDetails"
            }
          }
        }
      }
    }
  }
};

export const HyperVCluster: msRest.CompositeMapper = {
  serializedName: "HyperVCluster",
  type: {
    name: "Composite",
    className: "HyperVCluster",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "HyperVClusterProperties"
        }
      }
    }
  }
};

export const HyperVClusterCollection: msRest.CompositeMapper = {
  serializedName: "HyperVClusterCollection",
  type: {
    name: "Composite",
    className: "HyperVClusterCollection",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "HyperVCluster"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const HyperVHostProperties: msRest.CompositeMapper = {
  serializedName: "HyperVHostProperties",
  type: {
    name: "Composite",
    className: "HyperVHostProperties",
    modelProperties: {
      createdTimestamp: {
        readOnly: true,
        serializedName: "createdTimestamp",
        type: {
          name: "String"
        }
      },
      updatedTimestamp: {
        readOnly: true,
        serializedName: "updatedTimestamp",
        type: {
          name: "String"
        }
      },
      fqdn: {
        serializedName: "fqdn",
        type: {
          name: "String"
        }
      },
      runAsAccountId: {
        serializedName: "runAsAccountId",
        type: {
          name: "String"
        }
      },
      version: {
        readOnly: true,
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      errors: {
        readOnly: true,
        serializedName: "errors",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "HealthErrorDetails"
            }
          }
        }
      }
    }
  }
};

export const HyperVHost: msRest.CompositeMapper = {
  serializedName: "HyperVHost",
  type: {
    name: "Composite",
    className: "HyperVHost",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "HyperVHostProperties"
        }
      }
    }
  }
};

export const HyperVHostCollection: msRest.CompositeMapper = {
  serializedName: "HyperVHostCollection",
  type: {
    name: "Composite",
    className: "HyperVHostCollection",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "HyperVHost"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorDetails: msRest.CompositeMapper = {
  serializedName: "ErrorDetails",
  type: {
    name: "Composite",
    className: "ErrorDetails",
    modelProperties: {
      code: {
        readOnly: true,
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        readOnly: true,
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      possibleCauses: {
        readOnly: true,
        serializedName: "possibleCauses",
        type: {
          name: "String"
        }
      },
      recommendedAction: {
        readOnly: true,
        serializedName: "recommendedAction",
        type: {
          name: "String"
        }
      },
      severity: {
        readOnly: true,
        serializedName: "severity",
        type: {
          name: "String"
        }
      },
      isAgentReportedError: {
        readOnly: true,
        serializedName: "isAgentReportedError",
        type: {
          name: "Boolean"
        }
      },
      agentErrorCode: {
        readOnly: true,
        serializedName: "agentErrorCode",
        type: {
          name: "String"
        }
      },
      agentErrorMessage: {
        readOnly: true,
        serializedName: "agentErrorMessage",
        type: {
          name: "String"
        }
      },
      agentErrorPossibleCauses: {
        readOnly: true,
        serializedName: "agentErrorPossibleCauses",
        type: {
          name: "String"
        }
      },
      agentErrorRecommendedAction: {
        readOnly: true,
        serializedName: "agentErrorRecommendedAction",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const JobProperties: msRest.CompositeMapper = {
  serializedName: "JobProperties",
  type: {
    name: "Composite",
    className: "JobProperties",
    modelProperties: {
      displayName: {
        readOnly: true,
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      clientRequestId: {
        readOnly: true,
        serializedName: "clientRequestId",
        type: {
          name: "String"
        }
      },
      activityId: {
        readOnly: true,
        serializedName: "activityId",
        type: {
          name: "String"
        }
      },
      errors: {
        readOnly: true,
        serializedName: "errors",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorDetails"
            }
          }
        }
      }
    }
  }
};

export const HyperVJob: msRest.CompositeMapper = {
  serializedName: "HyperVJob",
  type: {
    name: "Composite",
    className: "HyperVJob",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      properties: {
        readOnly: true,
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "JobProperties"
        }
      },
      status: {
        readOnly: true,
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      startTime: {
        readOnly: true,
        serializedName: "startTime",
        type: {
          name: "String"
        }
      },
      endTime: {
        readOnly: true,
        serializedName: "endTime",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const HyperVJobCollection: msRest.CompositeMapper = {
  serializedName: "HyperVJobCollection",
  type: {
    name: "Composite",
    className: "HyperVJobCollection",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "HyperVJob"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const HyperVDisk: msRest.CompositeMapper = {
  serializedName: "HyperVDisk",
  type: {
    name: "Composite",
    className: "HyperVDisk",
    modelProperties: {
      instanceId: {
        readOnly: true,
        serializedName: "instanceId",
        type: {
          name: "String"
        }
      },
      vhdId: {
        readOnly: true,
        serializedName: "vhdId",
        type: {
          name: "String"
        }
      },
      maxSizeInBytes: {
        readOnly: true,
        serializedName: "maxSizeInBytes",
        type: {
          name: "Number"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      diskType: {
        readOnly: true,
        serializedName: "diskType",
        type: {
          name: "String"
        }
      },
      lun: {
        readOnly: true,
        serializedName: "lun",
        type: {
          name: "Number"
        }
      },
      path: {
        readOnly: true,
        serializedName: "path",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const HyperVNetworkAdapter: msRest.CompositeMapper = {
  serializedName: "HyperVNetworkAdapter",
  type: {
    name: "Composite",
    className: "HyperVNetworkAdapter",
    modelProperties: {
      networkId: {
        readOnly: true,
        serializedName: "networkId",
        type: {
          name: "String"
        }
      },
      subnetName: {
        readOnly: true,
        serializedName: "subnetName",
        type: {
          name: "String"
        }
      },
      staticIpAdress: {
        readOnly: true,
        serializedName: "staticIpAdress",
        type: {
          name: "String"
        }
      },
      nicType: {
        readOnly: true,
        serializedName: "nicType",
        type: {
          name: "String"
        }
      },
      nicId: {
        readOnly: true,
        serializedName: "nicId",
        type: {
          name: "String"
        }
      },
      macAddress: {
        readOnly: true,
        serializedName: "macAddress",
        type: {
          name: "String"
        }
      },
      ipAddressList: {
        readOnly: true,
        serializedName: "ipAddressList",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      networkName: {
        readOnly: true,
        serializedName: "networkName",
        type: {
          name: "String"
        }
      },
      ipAddressType: {
        readOnly: true,
        serializedName: "ipAddressType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperatingSystem: msRest.CompositeMapper = {
  serializedName: "OperatingSystem",
  type: {
    name: "Composite",
    className: "OperatingSystem",
    modelProperties: {
      osType: {
        readOnly: true,
        serializedName: "osType",
        type: {
          name: "String"
        }
      },
      osName: {
        readOnly: true,
        serializedName: "osName",
        type: {
          name: "String"
        }
      },
      osVersion: {
        readOnly: true,
        serializedName: "osVersion",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const HyperVMachineProperties: msRest.CompositeMapper = {
  serializedName: "HyperVMachineProperties",
  type: {
    name: "Composite",
    className: "HyperVMachineProperties",
    modelProperties: {
      hostFqdn: {
        readOnly: true,
        serializedName: "hostFqdn",
        type: {
          name: "String"
        }
      },
      hostId: {
        readOnly: true,
        serializedName: "hostId",
        type: {
          name: "String"
        }
      },
      clusterFqdn: {
        readOnly: true,
        serializedName: "clusterFqdn",
        type: {
          name: "String"
        }
      },
      clusterId: {
        readOnly: true,
        serializedName: "clusterId",
        type: {
          name: "String"
        }
      },
      managementServerType: {
        readOnly: true,
        serializedName: "managementServerType",
        type: {
          name: "String"
        }
      },
      generation: {
        readOnly: true,
        serializedName: "generation",
        type: {
          name: "Number"
        }
      },
      version: {
        readOnly: true,
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      highAvailability: {
        readOnly: true,
        serializedName: "highAvailability",
        type: {
          name: "String"
        }
      },
      maxMemoryMB: {
        readOnly: true,
        serializedName: "maxMemoryMB",
        type: {
          name: "Number"
        }
      },
      firmware: {
        readOnly: true,
        serializedName: "firmware",
        type: {
          name: "String"
        }
      },
      isDynamicMemoryEnabled: {
        readOnly: true,
        serializedName: "isDynamicMemoryEnabled",
        type: {
          name: "Boolean"
        }
      },
      disks: {
        readOnly: true,
        serializedName: "disks",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "HyperVDisk"
            }
          }
        }
      },
      networkAdapters: {
        readOnly: true,
        serializedName: "networkAdapters",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "HyperVNetworkAdapter"
            }
          }
        }
      },
      displayName: {
        readOnly: true,
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      numberOfProcessorCore: {
        readOnly: true,
        serializedName: "numberOfProcessorCore",
        type: {
          name: "Number"
        }
      },
      allocatedMemoryInMB: {
        readOnly: true,
        serializedName: "allocatedMemoryInMB",
        type: {
          name: "Number"
        }
      },
      vmConfigurationFileLocation: {
        readOnly: true,
        serializedName: "vmConfigurationFileLocation",
        type: {
          name: "String"
        }
      },
      operatingSystemDetails: {
        readOnly: true,
        serializedName: "operatingSystemDetails",
        type: {
          name: "Composite",
          className: "OperatingSystem"
        }
      },
      createdTimestamp: {
        readOnly: true,
        serializedName: "createdTimestamp",
        type: {
          name: "String"
        }
      },
      updatedTimestamp: {
        readOnly: true,
        serializedName: "updatedTimestamp",
        type: {
          name: "String"
        }
      },
      instanceUuid: {
        readOnly: true,
        serializedName: "instanceUuid",
        type: {
          name: "String"
        }
      },
      powerStatus: {
        readOnly: true,
        serializedName: "powerStatus",
        type: {
          name: "String"
        }
      },
      biosSerialNumber: {
        readOnly: true,
        serializedName: "biosSerialNumber",
        type: {
          name: "String"
        }
      },
      vmFqdn: {
        readOnly: true,
        serializedName: "vmFqdn",
        type: {
          name: "String"
        }
      },
      isDeleted: {
        readOnly: true,
        serializedName: "isDeleted",
        type: {
          name: "Boolean"
        }
      },
      errors: {
        readOnly: true,
        serializedName: "errors",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "HealthErrorDetails"
            }
          }
        }
      }
    }
  }
};

export const HyperVMachine: msRest.CompositeMapper = {
  serializedName: "HyperVMachine",
  type: {
    name: "Composite",
    className: "HyperVMachine",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      properties: {
        readOnly: true,
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "HyperVMachineProperties"
        }
      }
    }
  }
};

export const HyperVMachineCollection: msRest.CompositeMapper = {
  serializedName: "HyperVMachineCollection",
  type: {
    name: "Composite",
    className: "HyperVMachineCollection",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "HyperVMachine"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationStatusError: msRest.CompositeMapper = {
  serializedName: "OperationStatusError",
  type: {
    name: "Composite",
    className: "OperationStatusError",
    modelProperties: {
      code: {
        readOnly: true,
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        readOnly: true,
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationStatus: msRest.CompositeMapper = {
  serializedName: "OperationStatus",
  type: {
    name: "Composite",
    className: "OperationStatus",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      status: {
        readOnly: true,
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      startTime: {
        readOnly: true,
        serializedName: "startTime",
        type: {
          name: "String"
        }
      },
      endTime: {
        readOnly: true,
        serializedName: "endTime",
        type: {
          name: "String"
        }
      },
      error: {
        readOnly: true,
        serializedName: "error",
        type: {
          name: "Composite",
          className: "OperationStatusError"
        }
      },
      properties: {
        readOnly: true,
        serializedName: "properties",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const RunAsAccountProperties: msRest.CompositeMapper = {
  serializedName: "RunAsAccountProperties",
  type: {
    name: "Composite",
    className: "RunAsAccountProperties",
    modelProperties: {
      displayName: {
        readOnly: true,
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      createdTimestamp: {
        readOnly: true,
        serializedName: "createdTimestamp",
        type: {
          name: "String"
        }
      },
      updatedTimestamp: {
        readOnly: true,
        serializedName: "updatedTimestamp",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const HyperVRunAsAccount: msRest.CompositeMapper = {
  serializedName: "HyperVRunAsAccount",
  type: {
    name: "Composite",
    className: "HyperVRunAsAccount",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      properties: {
        readOnly: true,
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "RunAsAccountProperties"
        }
      }
    }
  }
};

export const HyperVRunAsAccountCollection: msRest.CompositeMapper = {
  serializedName: "HyperVRunAsAccountCollection",
  type: {
    name: "Composite",
    className: "HyperVRunAsAccountCollection",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "HyperVRunAsAccount"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SiteSpnProperties: msRest.CompositeMapper = {
  serializedName: "SiteSpnProperties",
  type: {
    name: "Composite",
    className: "SiteSpnProperties",
    modelProperties: {
      tenantId: {
        serializedName: "tenantId",
        type: {
          name: "String"
        }
      },
      applicationId: {
        serializedName: "applicationId",
        type: {
          name: "String"
        }
      },
      objectId: {
        serializedName: "objectId",
        type: {
          name: "String"
        }
      },
      audience: {
        serializedName: "audience",
        type: {
          name: "String"
        }
      },
      aadAuthority: {
        serializedName: "aadAuthority",
        type: {
          name: "String"
        }
      },
      rawCertData: {
        serializedName: "rawCertData",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SiteAgentProperties: msRest.CompositeMapper = {
  serializedName: "SiteAgentProperties",
  type: {
    name: "Composite",
    className: "SiteAgentProperties",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      version: {
        readOnly: true,
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      lastHeartBeatUtc: {
        readOnly: true,
        serializedName: "lastHeartBeatUtc",
        type: {
          name: "DateTime"
        }
      },
      keyVaultUri: {
        serializedName: "keyVaultUri",
        type: {
          name: "String"
        }
      },
      keyVaultId: {
        serializedName: "keyVaultId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SiteProperties: msRest.CompositeMapper = {
  serializedName: "SiteProperties",
  type: {
    name: "Composite",
    className: "SiteProperties",
    modelProperties: {
      servicePrincipalIdentityDetails: {
        serializedName: "servicePrincipalIdentityDetails",
        type: {
          name: "Composite",
          className: "SiteSpnProperties"
        }
      },
      agentDetails: {
        serializedName: "agentDetails",
        type: {
          name: "Composite",
          className: "SiteAgentProperties"
        }
      },
      serviceEndpoint: {
        readOnly: true,
        serializedName: "serviceEndpoint",
        type: {
          name: "String"
        }
      },
      discoverySolutionId: {
        serializedName: "discoverySolutionId",
        type: {
          name: "String"
        }
      },
      applianceName: {
        serializedName: "applianceName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const HyperVSite: msRest.CompositeMapper = {
  serializedName: "HyperVSite",
  type: {
    name: "Composite",
    className: "HyperVSite",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      eTag: {
        serializedName: "eTag",
        type: {
          name: "String"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "SiteProperties"
        }
      }
    }
  }
};

export const HyperVSiteUsage: msRest.CompositeMapper = {
  serializedName: "HyperVSiteUsage",
  type: {
    name: "Composite",
    className: "HyperVSiteUsage",
    modelProperties: {
      machineCount: {
        serializedName: "machineCount",
        type: {
          name: "Number"
        }
      },
      runAsAccountCount: {
        serializedName: "runAsAccountCount",
        type: {
          name: "Number"
        }
      },
      hostCount: {
        serializedName: "hostCount",
        type: {
          name: "Number"
        }
      },
      clusterCount: {
        serializedName: "clusterCount",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const SiteHealthSummary: msRest.CompositeMapper = {
  serializedName: "SiteHealthSummary",
  type: {
    name: "Composite",
    className: "SiteHealthSummary",
    modelProperties: {
      applianceName: {
        readOnly: true,
        serializedName: "applianceName",
        type: {
          name: "String"
        }
      },
      errorMessage: {
        readOnly: true,
        serializedName: "errorMessage",
        type: {
          name: "String"
        }
      },
      summaryMessage: {
        readOnly: true,
        serializedName: "summaryMessage",
        type: {
          name: "String"
        }
      },
      errorId: {
        readOnly: true,
        serializedName: "errorId",
        type: {
          name: "Number"
        }
      },
      errorCode: {
        readOnly: true,
        serializedName: "errorCode",
        type: {
          name: "String"
        }
      },
      affectedObjectsCount: {
        serializedName: "affectedObjectsCount",
        type: {
          name: "Number"
        }
      },
      hitCount: {
        serializedName: "hitCount",
        type: {
          name: "Number"
        }
      },
      severity: {
        readOnly: true,
        serializedName: "severity",
        type: {
          name: "String"
        }
      },
      remediationGuidance: {
        readOnly: true,
        serializedName: "remediationGuidance",
        type: {
          name: "String"
        }
      },
      affectedResourceType: {
        readOnly: true,
        serializedName: "affectedResourceType",
        type: {
          name: "String"
        }
      },
      affectedResources: {
        serializedName: "affectedResources",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const SiteHealthSummaryCollection: msRest.CompositeMapper = {
  serializedName: "SiteHealthSummaryCollection",
  type: {
    name: "Composite",
    className: "SiteHealthSummaryCollection",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SiteHealthSummary"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VMwareJob: msRest.CompositeMapper = {
  serializedName: "VMwareJob",
  type: {
    name: "Composite",
    className: "VMwareJob",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      properties: {
        readOnly: true,
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "JobProperties"
        }
      },
      status: {
        readOnly: true,
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      startTime: {
        readOnly: true,
        serializedName: "startTime",
        type: {
          name: "String"
        }
      },
      endTime: {
        readOnly: true,
        serializedName: "endTime",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VMwareJobCollection: msRest.CompositeMapper = {
  serializedName: "VMwareJobCollection",
  type: {
    name: "Composite",
    className: "VMwareJobCollection",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VMwareJob"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VMwareDisk: msRest.CompositeMapper = {
  serializedName: "VMwareDisk",
  type: {
    name: "Composite",
    className: "VMwareDisk",
    modelProperties: {
      uuid: {
        readOnly: true,
        serializedName: "uuid",
        type: {
          name: "String"
        }
      },
      label: {
        readOnly: true,
        serializedName: "label",
        type: {
          name: "String"
        }
      },
      diskProvisioningPolicy: {
        readOnly: true,
        serializedName: "diskProvisioningPolicy",
        type: {
          name: "String"
        }
      },
      diskScrubbingPolicy: {
        readOnly: true,
        serializedName: "diskScrubbingPolicy",
        type: {
          name: "String"
        }
      },
      maxSizeInBytes: {
        readOnly: true,
        serializedName: "maxSizeInBytes",
        type: {
          name: "Number"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      diskType: {
        readOnly: true,
        serializedName: "diskType",
        type: {
          name: "String"
        }
      },
      lun: {
        readOnly: true,
        serializedName: "lun",
        type: {
          name: "Number"
        }
      },
      path: {
        readOnly: true,
        serializedName: "path",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VMwareNetworkAdapter: msRest.CompositeMapper = {
  serializedName: "VMwareNetworkAdapter",
  type: {
    name: "Composite",
    className: "VMwareNetworkAdapter",
    modelProperties: {
      label: {
        readOnly: true,
        serializedName: "label",
        type: {
          name: "String"
        }
      },
      nicId: {
        readOnly: true,
        serializedName: "nicId",
        type: {
          name: "String"
        }
      },
      macAddress: {
        readOnly: true,
        serializedName: "macAddress",
        type: {
          name: "String"
        }
      },
      ipAddressList: {
        readOnly: true,
        serializedName: "ipAddressList",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      networkName: {
        readOnly: true,
        serializedName: "networkName",
        type: {
          name: "String"
        }
      },
      ipAddressType: {
        readOnly: true,
        serializedName: "ipAddressType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VMwareMachineProperties: msRest.CompositeMapper = {
  serializedName: "VMwareMachineProperties",
  type: {
    name: "Composite",
    className: "VMwareMachineProperties",
    modelProperties: {
      dataCenterScope: {
        readOnly: true,
        serializedName: "dataCenterScope",
        type: {
          name: "String"
        }
      },
      firmware: {
        readOnly: true,
        serializedName: "firmware",
        type: {
          name: "String"
        }
      },
      description: {
        readOnly: true,
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      vCenterFQDN: {
        readOnly: true,
        serializedName: "vCenterFQDN",
        type: {
          name: "String"
        }
      },
      vCenterId: {
        readOnly: true,
        serializedName: "vCenterId",
        type: {
          name: "String"
        }
      },
      vMwareToolsStatus: {
        readOnly: true,
        serializedName: "vMwareToolsStatus",
        type: {
          name: "String"
        }
      },
      changeTrackingSupported: {
        readOnly: true,
        serializedName: "changeTrackingSupported",
        type: {
          name: "Boolean"
        }
      },
      changeTrackingEnabled: {
        readOnly: true,
        serializedName: "changeTrackingEnabled",
        type: {
          name: "Boolean"
        }
      },
      maxSnapshots: {
        readOnly: true,
        serializedName: "maxSnapshots",
        type: {
          name: "Number"
        }
      },
      disks: {
        readOnly: true,
        serializedName: "disks",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VMwareDisk"
            }
          }
        }
      },
      hostInMaintenanceMode: {
        readOnly: true,
        serializedName: "hostInMaintenanceMode",
        type: {
          name: "Boolean"
        }
      },
      hostName: {
        readOnly: true,
        serializedName: "hostName",
        type: {
          name: "String"
        }
      },
      hostPowerState: {
        readOnly: true,
        serializedName: "hostPowerState",
        type: {
          name: "String"
        }
      },
      hostVersion: {
        readOnly: true,
        serializedName: "hostVersion",
        type: {
          name: "String"
        }
      },
      networkAdapters: {
        readOnly: true,
        serializedName: "networkAdapters",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VMwareNetworkAdapter"
            }
          }
        }
      },
      displayName: {
        readOnly: true,
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      numberOfProcessorCore: {
        readOnly: true,
        serializedName: "numberOfProcessorCore",
        type: {
          name: "Number"
        }
      },
      allocatedMemoryInMB: {
        readOnly: true,
        serializedName: "allocatedMemoryInMB",
        type: {
          name: "Number"
        }
      },
      vmConfigurationFileLocation: {
        readOnly: true,
        serializedName: "vmConfigurationFileLocation",
        type: {
          name: "String"
        }
      },
      operatingSystemDetails: {
        readOnly: true,
        serializedName: "operatingSystemDetails",
        type: {
          name: "Composite",
          className: "OperatingSystem"
        }
      },
      createdTimestamp: {
        readOnly: true,
        serializedName: "createdTimestamp",
        type: {
          name: "String"
        }
      },
      updatedTimestamp: {
        readOnly: true,
        serializedName: "updatedTimestamp",
        type: {
          name: "String"
        }
      },
      instanceUuid: {
        readOnly: true,
        serializedName: "instanceUuid",
        type: {
          name: "String"
        }
      },
      powerStatus: {
        readOnly: true,
        serializedName: "powerStatus",
        type: {
          name: "String"
        }
      },
      biosSerialNumber: {
        readOnly: true,
        serializedName: "biosSerialNumber",
        type: {
          name: "String"
        }
      },
      vmFqdn: {
        readOnly: true,
        serializedName: "vmFqdn",
        type: {
          name: "String"
        }
      },
      isDeleted: {
        readOnly: true,
        serializedName: "isDeleted",
        type: {
          name: "Boolean"
        }
      },
      errors: {
        readOnly: true,
        serializedName: "errors",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "HealthErrorDetails"
            }
          }
        }
      }
    }
  }
};

export const VMwareMachine: msRest.CompositeMapper = {
  serializedName: "VMwareMachine",
  type: {
    name: "Composite",
    className: "VMwareMachine",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      properties: {
        readOnly: true,
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "VMwareMachineProperties"
        }
      }
    }
  }
};

export const VMwareMachineCollection: msRest.CompositeMapper = {
  serializedName: "VMwareMachineCollection",
  type: {
    name: "Composite",
    className: "VMwareMachineCollection",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VMwareMachine"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VMwareRunAsAccount: msRest.CompositeMapper = {
  serializedName: "VMwareRunAsAccount",
  type: {
    name: "Composite",
    className: "VMwareRunAsAccount",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      properties: {
        readOnly: true,
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "RunAsAccountProperties"
        }
      }
    }
  }
};

export const VMwareRunAsAccountCollection: msRest.CompositeMapper = {
  serializedName: "VMwareRunAsAccountCollection",
  type: {
    name: "Composite",
    className: "VMwareRunAsAccountCollection",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VMwareRunAsAccount"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VMwareSite: msRest.CompositeMapper = {
  serializedName: "VMwareSite",
  type: {
    name: "Composite",
    className: "VMwareSite",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      eTag: {
        serializedName: "eTag",
        type: {
          name: "String"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "SiteProperties"
        }
      }
    }
  }
};

export const VMwareSiteUsage: msRest.CompositeMapper = {
  serializedName: "VMwareSiteUsage",
  type: {
    name: "Composite",
    className: "VMwareSiteUsage",
    modelProperties: {
      machineCount: {
        serializedName: "machineCount",
        type: {
          name: "Number"
        }
      },
      runAsAccountCount: {
        serializedName: "runAsAccountCount",
        type: {
          name: "Number"
        }
      },
      vCenterCount: {
        serializedName: "vCenterCount",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const VCenterProperties: msRest.CompositeMapper = {
  serializedName: "VCenterProperties",
  type: {
    name: "Composite",
    className: "VCenterProperties",
    modelProperties: {
      createdTimestamp: {
        readOnly: true,
        serializedName: "createdTimestamp",
        type: {
          name: "String"
        }
      },
      updatedTimestamp: {
        readOnly: true,
        serializedName: "updatedTimestamp",
        type: {
          name: "String"
        }
      },
      fqdn: {
        serializedName: "fqdn",
        type: {
          name: "String"
        }
      },
      port: {
        serializedName: "port",
        type: {
          name: "String"
        }
      },
      runAsAccountId: {
        serializedName: "runAsAccountId",
        type: {
          name: "String"
        }
      },
      version: {
        readOnly: true,
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      perfStatisticsLevel: {
        readOnly: true,
        serializedName: "perfStatisticsLevel",
        type: {
          name: "String"
        }
      },
      instanceUuid: {
        readOnly: true,
        serializedName: "instanceUuid",
        type: {
          name: "String"
        }
      },
      errors: {
        readOnly: true,
        serializedName: "errors",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "HealthErrorDetails"
            }
          }
        }
      }
    }
  }
};

export const VCenter: msRest.CompositeMapper = {
  serializedName: "VCenter",
  type: {
    name: "Composite",
    className: "VCenter",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "VCenterProperties"
        }
      }
    }
  }
};

export const VCenterCollection: msRest.CompositeMapper = {
  serializedName: "VCenterCollection",
  type: {
    name: "Composite",
    className: "VCenterCollection",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VCenter"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ImportJob: msRest.CompositeMapper = {
  serializedName: "ImportJob",
  type: {
    name: "Composite",
    className: "ImportJob",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      properties: {
        readOnly: true,
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "JobProperties"
        }
      },
      status: {
        readOnly: true,
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      startTime: {
        readOnly: true,
        serializedName: "startTime",
        type: {
          name: "String"
        }
      },
      endTime: {
        readOnly: true,
        serializedName: "endTime",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ImportJobCollection: msRest.CompositeMapper = {
  serializedName: "ImportJobCollection",
  type: {
    name: "Composite",
    className: "ImportJobCollection",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ImportJob"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ImportDisk: msRest.CompositeMapper = {
  serializedName: "ImportDisk",
  type: {
    name: "Composite",
    className: "ImportDisk",
    modelProperties: {
      megabytesPerSecondOfRead: {
        readOnly: true,
        serializedName: "megabytesPerSecondOfRead",
        type: {
          name: "Number"
        }
      },
      megabytesPerSecondOfWrite: {
        readOnly: true,
        serializedName: "megabytesPerSecondOfWrite",
        type: {
          name: "Number"
        }
      },
      numberOfReadOperationsPerSecond: {
        readOnly: true,
        serializedName: "numberOfReadOperationsPerSecond",
        type: {
          name: "Number"
        }
      },
      numberOfWriteOperationsPerSecond: {
        readOnly: true,
        serializedName: "numberOfWriteOperationsPerSecond",
        type: {
          name: "Number"
        }
      },
      maxSizeInBytes: {
        readOnly: true,
        serializedName: "maxSizeInBytes",
        type: {
          name: "Number"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      diskType: {
        readOnly: true,
        serializedName: "diskType",
        type: {
          name: "String"
        }
      },
      lun: {
        readOnly: true,
        serializedName: "lun",
        type: {
          name: "Number"
        }
      },
      path: {
        readOnly: true,
        serializedName: "path",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ImportMachineProperties: msRest.CompositeMapper = {
  serializedName: "ImportMachineProperties",
  type: {
    name: "Composite",
    className: "ImportMachineProperties",
    modelProperties: {
      firmware: {
        readOnly: true,
        serializedName: "firmware",
        type: {
          name: "String"
        }
      },
      vCenterFQDN: {
        readOnly: true,
        serializedName: "vCenterFQDN",
        type: {
          name: "String"
        }
      },
      disks: {
        readOnly: true,
        serializedName: "disks",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ImportDisk"
            }
          }
        }
      },
      displayName: {
        readOnly: true,
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      numberOfProcessorCore: {
        readOnly: true,
        serializedName: "numberOfProcessorCore",
        type: {
          name: "Number"
        }
      },
      allocatedMemoryInMB: {
        readOnly: true,
        serializedName: "allocatedMemoryInMB",
        type: {
          name: "Number"
        }
      },
      vmConfigurationFileLocation: {
        readOnly: true,
        serializedName: "vmConfigurationFileLocation",
        type: {
          name: "String"
        }
      },
      operatingSystemDetails: {
        readOnly: true,
        serializedName: "operatingSystemDetails",
        type: {
          name: "Composite",
          className: "OperatingSystem"
        }
      },
      createdTimestamp: {
        readOnly: true,
        serializedName: "createdTimestamp",
        type: {
          name: "String"
        }
      },
      updatedTimestamp: {
        readOnly: true,
        serializedName: "updatedTimestamp",
        type: {
          name: "String"
        }
      },
      instanceUuid: {
        readOnly: true,
        serializedName: "instanceUuid",
        type: {
          name: "String"
        }
      },
      powerStatus: {
        readOnly: true,
        serializedName: "powerStatus",
        type: {
          name: "String"
        }
      },
      biosSerialNumber: {
        readOnly: true,
        serializedName: "biosSerialNumber",
        type: {
          name: "String"
        }
      },
      vmFqdn: {
        readOnly: true,
        serializedName: "vmFqdn",
        type: {
          name: "String"
        }
      },
      isDeleted: {
        readOnly: true,
        serializedName: "isDeleted",
        type: {
          name: "Boolean"
        }
      },
      errors: {
        readOnly: true,
        serializedName: "errors",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "HealthErrorDetails"
            }
          }
        }
      }
    }
  }
};

export const ImportMachine: msRest.CompositeMapper = {
  serializedName: "ImportMachine",
  type: {
    name: "Composite",
    className: "ImportMachine",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      properties: {
        readOnly: true,
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "ImportMachineProperties"
        }
      }
    }
  }
};

export const ImportMachineCollection: msRest.CompositeMapper = {
  serializedName: "ImportMachineCollection",
  type: {
    name: "Composite",
    className: "ImportMachineCollection",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ImportMachine"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ImportSiteProperties: msRest.CompositeMapper = {
  serializedName: "ImportSiteProperties",
  type: {
    name: "Composite",
    className: "ImportSiteProperties",
    modelProperties: {
      serviceEndpoint: {
        readOnly: true,
        serializedName: "serviceEndpoint",
        type: {
          name: "String"
        }
      },
      discoverySolutionId: {
        serializedName: "discoverySolutionId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ImportSite: msRest.CompositeMapper = {
  serializedName: "ImportSite",
  type: {
    name: "Composite",
    className: "ImportSite",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      eTag: {
        serializedName: "eTag",
        type: {
          name: "String"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "ImportSiteProperties"
        }
      }
    }
  }
};

export const SasUriResponse: msRest.CompositeMapper = {
  serializedName: "SasUriResponse",
  type: {
    name: "Composite",
    className: "SasUriResponse",
    modelProperties: {
      jobId: {
        serializedName: "jobId",
        type: {
          name: "String"
        }
      },
      uri: {
        serializedName: "uri",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServerJob: msRest.CompositeMapper = {
  serializedName: "ServerJob",
  type: {
    name: "Composite",
    className: "ServerJob",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      properties: {
        readOnly: true,
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "JobProperties"
        }
      },
      status: {
        readOnly: true,
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      startTime: {
        readOnly: true,
        serializedName: "startTime",
        type: {
          name: "String"
        }
      },
      endTime: {
        readOnly: true,
        serializedName: "endTime",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServerJobCollection: msRest.CompositeMapper = {
  serializedName: "ServerJobCollection",
  type: {
    name: "Composite",
    className: "ServerJobCollection",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ServerJob"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServerRunAsAccount: msRest.CompositeMapper = {
  serializedName: "ServerRunAsAccount",
  type: {
    name: "Composite",
    className: "ServerRunAsAccount",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      properties: {
        readOnly: true,
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "RunAsAccountProperties"
        }
      }
    }
  }
};

export const ServerRunAsAccountCollection: msRest.CompositeMapper = {
  serializedName: "ServerRunAsAccountCollection",
  type: {
    name: "Composite",
    className: "ServerRunAsAccountCollection",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ServerRunAsAccount"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServerProperties: msRest.CompositeMapper = {
  serializedName: "ServerProperties",
  type: {
    name: "Composite",
    className: "ServerProperties",
    modelProperties: {
      createdTimestamp: {
        readOnly: true,
        serializedName: "createdTimestamp",
        type: {
          name: "String"
        }
      },
      updatedTimestamp: {
        readOnly: true,
        serializedName: "updatedTimestamp",
        type: {
          name: "String"
        }
      },
      fqdn: {
        serializedName: "fqdn",
        type: {
          name: "String"
        }
      },
      runAsAccountId: {
        serializedName: "runAsAccountId",
        type: {
          name: "String"
        }
      },
      ip: {
        serializedName: "ip",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      numberOfProcessorCore: {
        serializedName: "numberOfProcessorCore",
        type: {
          name: "Number"
        }
      },
      allocatedMemoryInMB: {
        serializedName: "allocatedMemoryInMB",
        type: {
          name: "Number"
        }
      },
      osType: {
        serializedName: "osType",
        type: {
          name: "String"
        }
      },
      osName: {
        serializedName: "osName",
        type: {
          name: "String"
        }
      },
      osVersion: {
        serializedName: "osVersion",
        type: {
          name: "String"
        }
      },
      powerStatus: {
        serializedName: "powerStatus",
        type: {
          name: "String"
        }
      },
      biosSerialNumber: {
        serializedName: "biosSerialNumber",
        type: {
          name: "String"
        }
      },
      diskSize: {
        serializedName: "diskSize",
        type: {
          name: "Number"
        }
      },
      diskName: {
        serializedName: "diskName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Server: msRest.CompositeMapper = {
  serializedName: "Server",
  type: {
    name: "Composite",
    className: "Server",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "ServerProperties"
        }
      }
    }
  }
};

export const ServerCollection: msRest.CompositeMapper = {
  serializedName: "ServerCollection",
  type: {
    name: "Composite",
    className: "ServerCollection",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Server"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServerSite: msRest.CompositeMapper = {
  serializedName: "ServerSite",
  type: {
    name: "Composite",
    className: "ServerSite",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      eTag: {
        serializedName: "eTag",
        type: {
          name: "String"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "SiteProperties"
        }
      }
    }
  }
};

export const ServerSiteUsage: msRest.CompositeMapper = {
  serializedName: "ServerSiteUsage",
  type: {
    name: "Composite",
    className: "ServerSiteUsage",
    modelProperties: {
      runAsAccountCount: {
        serializedName: "runAsAccountCount",
        type: {
          name: "Number"
        }
      },
      serverCount: {
        serializedName: "serverCount",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const HyperVClusterPutClusterHeaders: msRest.CompositeMapper = {
  serializedName: "hypervcluster-putcluster-headers",
  type: {
    name: "Composite",
    className: "HyperVClusterPutClusterHeaders",
    modelProperties: {
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const HyperVHostPutHostHeaders: msRest.CompositeMapper = {
  serializedName: "hypervhost-puthost-headers",
  type: {
    name: "Composite",
    className: "HyperVHostPutHostHeaders",
    modelProperties: {
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const HyperVMachinesStopMachineHeaders: msRest.CompositeMapper = {
  serializedName: "hypervmachines-stopmachine-headers",
  type: {
    name: "Composite",
    className: "HyperVMachinesStopMachineHeaders",
    modelProperties: {
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const HyperVSitesRefreshSiteHeaders: msRest.CompositeMapper = {
  serializedName: "hypervsites-refreshsite-headers",
  type: {
    name: "Composite",
    className: "HyperVSitesRefreshSiteHeaders",
    modelProperties: {
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MachinesStopMachineHeaders: msRest.CompositeMapper = {
  serializedName: "machines-stopmachine-headers",
  type: {
    name: "Composite",
    className: "MachinesStopMachineHeaders",
    modelProperties: {
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MachinesStartMachineHeaders: msRest.CompositeMapper = {
  serializedName: "machines-startmachine-headers",
  type: {
    name: "Composite",
    className: "MachinesStartMachineHeaders",
    modelProperties: {
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SitesRefreshSiteHeaders: msRest.CompositeMapper = {
  serializedName: "sites-refreshsite-headers",
  type: {
    name: "Composite",
    className: "SitesRefreshSiteHeaders",
    modelProperties: {
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VCenterPutVCenterHeaders: msRest.CompositeMapper = {
  serializedName: "vcenter-putvcenter-headers",
  type: {
    name: "Composite",
    className: "VCenterPutVCenterHeaders",
    modelProperties: {
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServersPutMachineHeaders: msRest.CompositeMapper = {
  serializedName: "servers-putmachine-headers",
  type: {
    name: "Composite",
    className: "ServersPutMachineHeaders",
    modelProperties: {
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServerSitesRefreshSiteHeaders: msRest.CompositeMapper = {
  serializedName: "serversites-refreshsite-headers",
  type: {
    name: "Composite",
    className: "ServerSitesRefreshSiteHeaders",
    modelProperties: {
      azureAsyncOperation: {
        serializedName: "azure-asyncoperation",
        type: {
          name: "String"
        }
      }
    }
  }
};
