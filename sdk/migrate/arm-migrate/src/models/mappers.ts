/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { CloudErrorMapper, BaseResourceMapper } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export const CloudError = CloudErrorMapper;
export const BaseResource = BaseResourceMapper;

export const ProjectProperties: msRest.CompositeMapper = {
  serializedName: "ProjectProperties",
  type: {
    name: "Composite",
    className: "ProjectProperties",
    modelProperties: {
      createdTimestamp: {
        readOnly: true,
        serializedName: "createdTimestamp",
        type: {
          name: "DateTime"
        }
      },
      updatedTimestamp: {
        readOnly: true,
        serializedName: "updatedTimestamp",
        type: {
          name: "DateTime"
        }
      },
      serviceEndpoint: {
        readOnly: true,
        serializedName: "serviceEndpoint",
        type: {
          name: "String"
        }
      },
      assessmentSolutionId: {
        serializedName: "assessmentSolutionId",
        type: {
          name: "String"
        }
      },
      projectStatus: {
        serializedName: "projectStatus",
        type: {
          name: "String"
        }
      },
      customerWorkspaceId: {
        serializedName: "customerWorkspaceId",
        type: {
          name: "String"
        }
      },
      customerWorkspaceLocation: {
        serializedName: "customerWorkspaceLocation",
        type: {
          name: "String"
        }
      },
      numberOfGroups: {
        readOnly: true,
        serializedName: "numberOfGroups",
        type: {
          name: "Number"
        }
      },
      numberOfMachines: {
        readOnly: true,
        serializedName: "numberOfMachines",
        type: {
          name: "Number"
        }
      },
      numberOfAssessments: {
        readOnly: true,
        serializedName: "numberOfAssessments",
        type: {
          name: "Number"
        }
      },
      lastAssessmentTimestamp: {
        nullable: true,
        readOnly: true,
        serializedName: "lastAssessmentTimestamp",
        type: {
          name: "DateTime"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "provisioningState",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Project: msRest.CompositeMapper = {
  serializedName: "Project",
  type: {
    name: "Composite",
    className: "Project",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      eTag: {
        serializedName: "eTag",
        type: {
          name: "String"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Object"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "ProjectProperties"
        }
      }
    }
  }
};

export const GroupProperties: msRest.CompositeMapper = {
  serializedName: "GroupProperties",
  type: {
    name: "Composite",
    className: "GroupProperties",
    modelProperties: {
      groupStatus: {
        readOnly: true,
        serializedName: "groupStatus",
        type: {
          name: "String"
        }
      },
      machineCount: {
        readOnly: true,
        serializedName: "machineCount",
        type: {
          name: "Number"
        }
      },
      assessments: {
        readOnly: true,
        serializedName: "assessments",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      areAssessmentsRunning: {
        readOnly: true,
        serializedName: "areAssessmentsRunning",
        type: {
          name: "Boolean"
        }
      },
      createdTimestamp: {
        readOnly: true,
        serializedName: "createdTimestamp",
        type: {
          name: "DateTime"
        }
      },
      updatedTimestamp: {
        readOnly: true,
        serializedName: "updatedTimestamp",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const Group: msRest.CompositeMapper = {
  serializedName: "Group",
  type: {
    name: "Composite",
    className: "Group",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      eTag: {
        serializedName: "eTag",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      properties: {
        required: true,
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "GroupProperties"
        }
      }
    }
  }
};

export const GroupBodyProperties: msRest.CompositeMapper = {
  serializedName: "GroupBodyProperties",
  type: {
    name: "Composite",
    className: "GroupBodyProperties",
    modelProperties: {
      operationType: {
        serializedName: "operationType",
        type: {
          name: "String"
        }
      },
      machines: {
        serializedName: "machines",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const UpdateGroupBody: msRest.CompositeMapper = {
  serializedName: "UpdateGroupBody",
  type: {
    name: "Composite",
    className: "UpdateGroupBody",
    modelProperties: {
      eTag: {
        serializedName: "eTag",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "GroupBodyProperties"
        }
      }
    }
  }
};

export const VmUptime: msRest.CompositeMapper = {
  serializedName: "VmUptime",
  type: {
    name: "Composite",
    className: "VmUptime",
    modelProperties: {
      daysPerMonth: {
        serializedName: "daysPerMonth",
        type: {
          name: "Number"
        }
      },
      hoursPerDay: {
        serializedName: "hoursPerDay",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const AssessmentProperties: msRest.CompositeMapper = {
  serializedName: "AssessmentProperties",
  type: {
    name: "Composite",
    className: "AssessmentProperties",
    modelProperties: {
      azureLocation: {
        required: true,
        serializedName: "azureLocation",
        type: {
          name: "String"
        }
      },
      azureOfferCode: {
        required: true,
        serializedName: "azureOfferCode",
        type: {
          name: "String"
        }
      },
      eaSubscriptionId: {
        readOnly: true,
        serializedName: "eaSubscriptionId",
        type: {
          name: "String"
        }
      },
      azurePricingTier: {
        required: true,
        serializedName: "azurePricingTier",
        type: {
          name: "String"
        }
      },
      azureStorageRedundancy: {
        required: true,
        serializedName: "azureStorageRedundancy",
        type: {
          name: "String"
        }
      },
      scalingFactor: {
        required: true,
        serializedName: "scalingFactor",
        type: {
          name: "Number"
        }
      },
      percentile: {
        required: true,
        serializedName: "percentile",
        type: {
          name: "String"
        }
      },
      timeRange: {
        required: true,
        serializedName: "timeRange",
        type: {
          name: "String"
        }
      },
      perfDataStartTime: {
        readOnly: true,
        serializedName: "perfDataStartTime",
        type: {
          name: "DateTime"
        }
      },
      perfDataEndTime: {
        readOnly: true,
        serializedName: "perfDataEndTime",
        type: {
          name: "DateTime"
        }
      },
      stage: {
        required: true,
        serializedName: "stage",
        type: {
          name: "String"
        }
      },
      currency: {
        required: true,
        serializedName: "currency",
        type: {
          name: "String"
        }
      },
      azureHybridUseBenefit: {
        required: true,
        serializedName: "azureHybridUseBenefit",
        type: {
          name: "String"
        }
      },
      discountPercentage: {
        required: true,
        serializedName: "discountPercentage",
        type: {
          name: "Number"
        }
      },
      confidenceRatingInPercentage: {
        nullable: true,
        readOnly: true,
        serializedName: "confidenceRatingInPercentage",
        type: {
          name: "Number"
        }
      },
      sizingCriterion: {
        required: true,
        serializedName: "sizingCriterion",
        type: {
          name: "String"
        }
      },
      reservedInstance: {
        required: true,
        serializedName: "reservedInstance",
        type: {
          name: "String"
        }
      },
      azureVmFamilies: {
        required: true,
        serializedName: "azureVmFamilies",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      azureDiskType: {
        required: true,
        serializedName: "azureDiskType",
        type: {
          name: "String"
        }
      },
      vmUptime: {
        required: true,
        serializedName: "vmUptime",
        type: {
          name: "Composite",
          className: "VmUptime"
        }
      },
      pricesTimestamp: {
        readOnly: true,
        serializedName: "pricesTimestamp",
        type: {
          name: "DateTime"
        }
      },
      createdTimestamp: {
        readOnly: true,
        serializedName: "createdTimestamp",
        type: {
          name: "DateTime"
        }
      },
      updatedTimestamp: {
        readOnly: true,
        serializedName: "updatedTimestamp",
        type: {
          name: "DateTime"
        }
      },
      monthlyComputeCost: {
        readOnly: true,
        serializedName: "monthlyComputeCost",
        type: {
          name: "Number"
        }
      },
      monthlyBandwidthCost: {
        readOnly: true,
        serializedName: "monthlyBandwidthCost",
        type: {
          name: "Number"
        }
      },
      monthlyStorageCost: {
        readOnly: true,
        serializedName: "monthlyStorageCost",
        type: {
          name: "Number"
        }
      },
      monthlyPremiumStorageCost: {
        readOnly: true,
        serializedName: "monthlyPremiumStorageCost",
        type: {
          name: "Number"
        }
      },
      monthlyStandardSSDStorageCost: {
        readOnly: true,
        serializedName: "monthlyStandardSSDStorageCost",
        type: {
          name: "Number"
        }
      },
      status: {
        readOnly: true,
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      numberOfMachines: {
        readOnly: true,
        serializedName: "numberOfMachines",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Assessment: msRest.CompositeMapper = {
  serializedName: "Assessment",
  type: {
    name: "Composite",
    className: "Assessment",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      eTag: {
        serializedName: "eTag",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      properties: {
        required: true,
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "AssessmentProperties"
        }
      }
    }
  }
};

export const Disk: msRest.CompositeMapper = {
  serializedName: "Disk",
  type: {
    name: "Composite",
    className: "Disk",
    modelProperties: {
      gigabytesAllocated: {
        readOnly: true,
        serializedName: "gigabytesAllocated",
        type: {
          name: "Number"
        }
      },
      displayName: {
        readOnly: true,
        serializedName: "displayName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NetworkAdapter: msRest.CompositeMapper = {
  serializedName: "NetworkAdapter",
  type: {
    name: "Composite",
    className: "NetworkAdapter",
    modelProperties: {
      macAddress: {
        readOnly: true,
        serializedName: "macAddress",
        type: {
          name: "String"
        }
      },
      ipAddresses: {
        readOnly: true,
        serializedName: "ipAddresses",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      displayName: {
        readOnly: true,
        serializedName: "displayName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MachineProperties: msRest.CompositeMapper = {
  serializedName: "MachineProperties",
  type: {
    name: "Composite",
    className: "MachineProperties",
    modelProperties: {
      bootType: {
        readOnly: true,
        serializedName: "bootType",
        type: {
          name: "String"
        }
      },
      datacenterManagementServerArmId: {
        readOnly: true,
        serializedName: "datacenterManagementServerArmId",
        type: {
          name: "String"
        }
      },
      discoveryMachineArmId: {
        readOnly: true,
        serializedName: "discoveryMachineArmId",
        type: {
          name: "String"
        }
      },
      datacenterManagementServerName: {
        readOnly: true,
        serializedName: "datacenterManagementServerName",
        type: {
          name: "String"
        }
      },
      displayName: {
        readOnly: true,
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      megabytesOfMemory: {
        readOnly: true,
        serializedName: "megabytesOfMemory",
        type: {
          name: "Number"
        }
      },
      numberOfCores: {
        readOnly: true,
        serializedName: "numberOfCores",
        type: {
          name: "Number"
        }
      },
      operatingSystemType: {
        readOnly: true,
        serializedName: "operatingSystemType",
        type: {
          name: "String"
        }
      },
      operatingSystemName: {
        readOnly: true,
        serializedName: "operatingSystemName",
        type: {
          name: "String"
        }
      },
      operatingSystemVersion: {
        readOnly: true,
        serializedName: "operatingSystemVersion",
        type: {
          name: "String"
        }
      },
      description: {
        readOnly: true,
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      groups: {
        readOnly: true,
        serializedName: "groups",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      createdTimestamp: {
        readOnly: true,
        serializedName: "createdTimestamp",
        type: {
          name: "DateTime"
        }
      },
      updatedTimestamp: {
        readOnly: true,
        serializedName: "updatedTimestamp",
        type: {
          name: "DateTime"
        }
      },
      disks: {
        readOnly: true,
        serializedName: "disks",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className: "Disk"
            }
          }
        }
      },
      networkAdapters: {
        readOnly: true,
        serializedName: "networkAdapters",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className: "NetworkAdapter"
            }
          }
        }
      }
    }
  }
};

export const Machine: msRest.CompositeMapper = {
  serializedName: "Machine",
  type: {
    name: "Composite",
    className: "Machine",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      eTag: {
        serializedName: "eTag",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "MachineProperties"
        }
      }
    }
  }
};

export const AssessedDisk: msRest.CompositeMapper = {
  serializedName: "AssessedDisk",
  type: {
    name: "Composite",
    className: "AssessedDisk",
    modelProperties: {
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      displayName: {
        readOnly: true,
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      gigabytesProvisioned: {
        readOnly: true,
        serializedName: "gigabytesProvisioned",
        type: {
          name: "Number"
        }
      },
      megabytesPerSecondOfRead: {
        readOnly: true,
        serializedName: "megabytesPerSecondOfRead",
        type: {
          name: "Number"
        }
      },
      megabytesPerSecondOfWrite: {
        readOnly: true,
        serializedName: "megabytesPerSecondOfWrite",
        type: {
          name: "Number"
        }
      },
      numberOfReadOperationsPerSecond: {
        readOnly: true,
        serializedName: "numberOfReadOperationsPerSecond",
        type: {
          name: "Number"
        }
      },
      numberOfWriteOperationsPerSecond: {
        readOnly: true,
        serializedName: "numberOfWriteOperationsPerSecond",
        type: {
          name: "Number"
        }
      },
      monthlyStorageCost: {
        readOnly: true,
        serializedName: "monthlyStorageCost",
        type: {
          name: "Number"
        }
      },
      recommendedDiskType: {
        readOnly: true,
        serializedName: "recommendedDiskType",
        type: {
          name: "String"
        }
      },
      recommendedDiskSize: {
        readOnly: true,
        serializedName: "recommendedDiskSize",
        type: {
          name: "String"
        }
      },
      gigabytesForRecommendedDiskSize: {
        readOnly: true,
        serializedName: "gigabytesForRecommendedDiskSize",
        type: {
          name: "Number"
        }
      },
      suitability: {
        readOnly: true,
        serializedName: "suitability",
        type: {
          name: "String"
        }
      },
      suitabilityExplanation: {
        readOnly: true,
        serializedName: "suitabilityExplanation",
        type: {
          name: "String"
        }
      },
      suitabilityDetail: {
        readOnly: true,
        serializedName: "suitabilityDetail",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AssessedNetworkAdapter: msRest.CompositeMapper = {
  serializedName: "AssessedNetworkAdapter",
  type: {
    name: "Composite",
    className: "AssessedNetworkAdapter",
    modelProperties: {
      macAddress: {
        readOnly: true,
        serializedName: "macAddress",
        type: {
          name: "String"
        }
      },
      ipAddresses: {
        readOnly: true,
        serializedName: "ipAddresses",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      displayName: {
        readOnly: true,
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      monthlyBandwidthCosts: {
        readOnly: true,
        serializedName: "monthlyBandwidthCosts",
        type: {
          name: "Number"
        }
      },
      megabytesPerSecondReceived: {
        readOnly: true,
        serializedName: "megabytesPerSecondReceived",
        type: {
          name: "Number"
        }
      },
      megabytesPerSecondTransmitted: {
        readOnly: true,
        serializedName: "megabytesPerSecondTransmitted",
        type: {
          name: "Number"
        }
      },
      netGigabytesTransmittedPerMonth: {
        serializedName: "netGigabytesTransmittedPerMonth",
        type: {
          name: "Number"
        }
      },
      suitability: {
        readOnly: true,
        serializedName: "suitability",
        type: {
          name: "String"
        }
      },
      suitabilityExplanation: {
        readOnly: true,
        serializedName: "suitabilityExplanation",
        type: {
          name: "String"
        }
      },
      suitabilityDetail: {
        readOnly: true,
        serializedName: "suitabilityDetail",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AssessedMachineProperties: msRest.CompositeMapper = {
  serializedName: "AssessedMachineProperties",
  type: {
    name: "Composite",
    className: "AssessedMachineProperties",
    modelProperties: {
      bootType: {
        readOnly: true,
        serializedName: "bootType",
        type: {
          name: "String"
        }
      },
      datacenterMachineArmId: {
        readOnly: true,
        serializedName: "datacenterMachineArmId",
        type: {
          name: "String"
        }
      },
      datacenterManagementServerArmId: {
        readOnly: true,
        serializedName: "datacenterManagementServerArmId",
        type: {
          name: "String"
        }
      },
      datacenterManagementServerName: {
        readOnly: true,
        serializedName: "datacenterManagementServerName",
        type: {
          name: "String"
        }
      },
      description: {
        readOnly: true,
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      displayName: {
        readOnly: true,
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      megabytesOfMemory: {
        readOnly: true,
        serializedName: "megabytesOfMemory",
        type: {
          name: "Number"
        }
      },
      numberOfCores: {
        readOnly: true,
        serializedName: "numberOfCores",
        type: {
          name: "Number"
        }
      },
      operatingSystemType: {
        readOnly: true,
        serializedName: "operatingSystemType",
        type: {
          name: "String"
        }
      },
      operatingSystemName: {
        readOnly: true,
        serializedName: "operatingSystemName",
        type: {
          name: "String"
        }
      },
      operatingSystemVersion: {
        readOnly: true,
        serializedName: "operatingSystemVersion",
        type: {
          name: "String"
        }
      },
      monthlyBandwidthCost: {
        readOnly: true,
        serializedName: "monthlyBandwidthCost",
        type: {
          name: "Number"
        }
      },
      monthlyStorageCost: {
        readOnly: true,
        serializedName: "monthlyStorageCost",
        type: {
          name: "Number"
        }
      },
      monthlyPremiumStorageCost: {
        readOnly: true,
        serializedName: "monthlyPremiumStorageCost",
        type: {
          name: "Number"
        }
      },
      monthlyStandardSSDStorageCost: {
        readOnly: true,
        serializedName: "monthlyStandardSSDStorageCost",
        type: {
          name: "Number"
        }
      },
      confidenceRatingInPercentage: {
        nullable: true,
        readOnly: true,
        serializedName: "confidenceRatingInPercentage",
        type: {
          name: "Number"
        }
      },
      disks: {
        readOnly: true,
        serializedName: "disks",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className: "AssessedDisk"
            }
          }
        }
      },
      networkAdapters: {
        readOnly: true,
        serializedName: "networkAdapters",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className: "AssessedNetworkAdapter"
            }
          }
        }
      },
      recommendedSize: {
        readOnly: true,
        serializedName: "recommendedSize",
        type: {
          name: "String"
        }
      },
      numberOfCoresForRecommendedSize: {
        readOnly: true,
        serializedName: "numberOfCoresForRecommendedSize",
        type: {
          name: "Number"
        }
      },
      megabytesOfMemoryForRecommendedSize: {
        readOnly: true,
        serializedName: "megabytesOfMemoryForRecommendedSize",
        type: {
          name: "Number"
        }
      },
      monthlyComputeCostForRecommendedSize: {
        readOnly: true,
        serializedName: "monthlyComputeCostForRecommendedSize",
        type: {
          name: "Number"
        }
      },
      percentageCoresUtilization: {
        readOnly: true,
        serializedName: "percentageCoresUtilization",
        type: {
          name: "Number"
        }
      },
      percentageMemoryUtilization: {
        readOnly: true,
        serializedName: "percentageMemoryUtilization",
        type: {
          name: "Number"
        }
      },
      suitability: {
        readOnly: true,
        serializedName: "suitability",
        type: {
          name: "String"
        }
      },
      suitabilityExplanation: {
        readOnly: true,
        serializedName: "suitabilityExplanation",
        type: {
          name: "String"
        }
      },
      suitabilityDetail: {
        readOnly: true,
        serializedName: "suitabilityDetail",
        type: {
          name: "String"
        }
      },
      createdTimestamp: {
        readOnly: true,
        serializedName: "createdTimestamp",
        type: {
          name: "DateTime"
        }
      },
      updatedTimestamp: {
        readOnly: true,
        serializedName: "updatedTimestamp",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const AssessedMachine: msRest.CompositeMapper = {
  serializedName: "AssessedMachine",
  type: {
    name: "Composite",
    className: "AssessedMachine",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      eTag: {
        serializedName: "eTag",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "AssessedMachineProperties"
        }
      }
    }
  }
};

export const OperationDisplay: msRest.CompositeMapper = {
  serializedName: "OperationDisplay",
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        readOnly: true,
        serializedName: "provider",
        type: {
          name: "String"
        }
      },
      resource: {
        readOnly: true,
        serializedName: "resource",
        type: {
          name: "String"
        }
      },
      operation: {
        readOnly: true,
        serializedName: "operation",
        type: {
          name: "String"
        }
      },
      description: {
        readOnly: true,
        serializedName: "description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Operation: msRest.CompositeMapper = {
  serializedName: "Operation",
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay"
        }
      },
      origin: {
        readOnly: true,
        serializedName: "origin",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DownloadUrl: msRest.CompositeMapper = {
  serializedName: "DownloadUrl",
  type: {
    name: "Composite",
    className: "DownloadUrl",
    modelProperties: {
      assessmentReportUrl: {
        readOnly: true,
        serializedName: "assessmentReportUrl",
        type: {
          name: "String"
        }
      },
      expirationTime: {
        readOnly: true,
        serializedName: "expirationTime",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const CollectorBodyAgentSpnProperties: msRest.CompositeMapper = {
  serializedName: "CollectorBodyAgentSpnProperties",
  type: {
    name: "Composite",
    className: "CollectorBodyAgentSpnProperties",
    modelProperties: {
      authority: {
        serializedName: "authority",
        type: {
          name: "String"
        }
      },
      applicationId: {
        serializedName: "applicationId",
        type: {
          name: "String"
        }
      },
      audience: {
        serializedName: "audience",
        type: {
          name: "String"
        }
      },
      objectId: {
        serializedName: "objectId",
        type: {
          name: "String"
        }
      },
      tenantId: {
        serializedName: "tenantId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CollectorAgentProperties: msRest.CompositeMapper = {
  serializedName: "CollectorAgentProperties",
  type: {
    name: "Composite",
    className: "CollectorAgentProperties",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      version: {
        readOnly: true,
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      lastHeartbeatUtc: {
        nullable: true,
        readOnly: true,
        serializedName: "lastHeartbeatUtc",
        type: {
          name: "DateTime"
        }
      },
      spnDetails: {
        serializedName: "spnDetails",
        type: {
          name: "Composite",
          className: "CollectorBodyAgentSpnProperties"
        }
      }
    }
  }
};

export const CollectorProperties: msRest.CompositeMapper = {
  serializedName: "CollectorProperties",
  type: {
    name: "Composite",
    className: "CollectorProperties",
    modelProperties: {
      discoverySiteId: {
        serializedName: "discoverySiteId",
        type: {
          name: "String"
        }
      },
      createdTimestamp: {
        readOnly: true,
        serializedName: "createdTimestamp",
        type: {
          name: "String"
        }
      },
      updatedTimestamp: {
        readOnly: true,
        serializedName: "updatedTimestamp",
        type: {
          name: "String"
        }
      },
      agentProperties: {
        serializedName: "agentProperties",
        type: {
          name: "Composite",
          className: "CollectorAgentProperties"
        }
      }
    }
  }
};

export const HyperVCollector: msRest.CompositeMapper = {
  serializedName: "HyperVCollector",
  type: {
    name: "Composite",
    className: "HyperVCollector",
    modelProperties: {
      eTag: {
        serializedName: "eTag",
        type: {
          name: "String"
        }
      },
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "CollectorProperties"
        }
      }
    }
  }
};

export const VMwareCollector: msRest.CompositeMapper = {
  serializedName: "VMwareCollector",
  type: {
    name: "Composite",
    className: "VMwareCollector",
    modelProperties: {
      eTag: {
        serializedName: "eTag",
        type: {
          name: "String"
        }
      },
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "CollectorProperties"
        }
      }
    }
  }
};

export const VmFamily: msRest.CompositeMapper = {
  serializedName: "VmFamily",
  type: {
    name: "Composite",
    className: "VmFamily",
    modelProperties: {
      familyName: {
        readOnly: true,
        serializedName: "familyName",
        type: {
          name: "String"
        }
      },
      targetLocations: {
        readOnly: true,
        serializedName: "targetLocations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      category: {
        readOnly: true,
        serializedName: "category",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const AssessmentOptionsProperties: msRest.CompositeMapper = {
  serializedName: "AssessmentOptionsProperties",
  type: {
    name: "Composite",
    className: "AssessmentOptionsProperties",
    modelProperties: {
      vmFamilies: {
        readOnly: true,
        serializedName: "vmFamilies",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VmFamily"
            }
          }
        }
      },
      reservedInstanceVmFamilies: {
        readOnly: true,
        serializedName: "reservedInstanceVmFamilies",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      reservedInstanceSupportedLocations: {
        readOnly: true,
        serializedName: "reservedInstanceSupportedLocations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      reservedInstanceSupportedCurrencies: {
        readOnly: true,
        serializedName: "reservedInstanceSupportedCurrencies",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      reservedInstanceSupportedOffers: {
        readOnly: true,
        serializedName: "reservedInstanceSupportedOffers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const AssessmentOptions: msRest.CompositeMapper = {
  serializedName: "AssessmentOptions",
  type: {
    name: "Composite",
    className: "AssessmentOptions",
    modelProperties: {
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      properties: {
        required: true,
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "AssessmentOptionsProperties"
        }
      }
    }
  }
};

export const ProjectsListBySubscriptionHeaders: msRest.CompositeMapper = {
  serializedName: "projects-listbysubscription-headers",
  type: {
    name: "Composite",
    className: "ProjectsListBySubscriptionHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProjectsListHeaders: msRest.CompositeMapper = {
  serializedName: "projects-list-headers",
  type: {
    name: "Composite",
    className: "ProjectsListHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProjectsGetHeaders: msRest.CompositeMapper = {
  serializedName: "projects-get-headers",
  type: {
    name: "Composite",
    className: "ProjectsGetHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProjectsCreateHeaders: msRest.CompositeMapper = {
  serializedName: "projects-create-headers",
  type: {
    name: "Composite",
    className: "ProjectsCreateHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProjectsUpdateHeaders: msRest.CompositeMapper = {
  serializedName: "projects-update-headers",
  type: {
    name: "Composite",
    className: "ProjectsUpdateHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProjectsDeleteHeaders: msRest.CompositeMapper = {
  serializedName: "projects-delete-headers",
  type: {
    name: "Composite",
    className: "ProjectsDeleteHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProjectsAssessmentOptionsHeaders: msRest.CompositeMapper = {
  serializedName: "projects-assessmentoptions-headers",
  type: {
    name: "Composite",
    className: "ProjectsAssessmentOptionsHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProjectsAssessmentOptionsListHeaders: msRest.CompositeMapper = {
  serializedName: "projects-assessmentoptionslist-headers",
  type: {
    name: "Composite",
    className: "ProjectsAssessmentOptionsListHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MachinesListByProjectHeaders: msRest.CompositeMapper = {
  serializedName: "machines-listbyproject-headers",
  type: {
    name: "Composite",
    className: "MachinesListByProjectHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MachinesGetHeaders: msRest.CompositeMapper = {
  serializedName: "machines-get-headers",
  type: {
    name: "Composite",
    className: "MachinesGetHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GroupsListByProjectHeaders: msRest.CompositeMapper = {
  serializedName: "groups-listbyproject-headers",
  type: {
    name: "Composite",
    className: "GroupsListByProjectHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GroupsGetHeaders: msRest.CompositeMapper = {
  serializedName: "groups-get-headers",
  type: {
    name: "Composite",
    className: "GroupsGetHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GroupsCreateHeaders: msRest.CompositeMapper = {
  serializedName: "groups-create-headers",
  type: {
    name: "Composite",
    className: "GroupsCreateHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GroupsDeleteHeaders: msRest.CompositeMapper = {
  serializedName: "groups-delete-headers",
  type: {
    name: "Composite",
    className: "GroupsDeleteHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GroupsUpdateMachinesHeaders: msRest.CompositeMapper = {
  serializedName: "groups-updatemachines-headers",
  type: {
    name: "Composite",
    className: "GroupsUpdateMachinesHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AssessmentsListByGroupHeaders: msRest.CompositeMapper = {
  serializedName: "assessments-listbygroup-headers",
  type: {
    name: "Composite",
    className: "AssessmentsListByGroupHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AssessmentsListByProjectHeaders: msRest.CompositeMapper = {
  serializedName: "assessments-listbyproject-headers",
  type: {
    name: "Composite",
    className: "AssessmentsListByProjectHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AssessmentsGetHeaders: msRest.CompositeMapper = {
  serializedName: "assessments-get-headers",
  type: {
    name: "Composite",
    className: "AssessmentsGetHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AssessmentsCreateHeaders: msRest.CompositeMapper = {
  serializedName: "assessments-create-headers",
  type: {
    name: "Composite",
    className: "AssessmentsCreateHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AssessmentsDeleteHeaders: msRest.CompositeMapper = {
  serializedName: "assessments-delete-headers",
  type: {
    name: "Composite",
    className: "AssessmentsDeleteHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AssessmentsGetReportDownloadUrlHeaders: msRest.CompositeMapper = {
  serializedName: "assessments-getreportdownloadurl-headers",
  type: {
    name: "Composite",
    className: "AssessmentsGetReportDownloadUrlHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AssessedMachinesListByAssessmentHeaders: msRest.CompositeMapper = {
  serializedName: "assessedmachines-listbyassessment-headers",
  type: {
    name: "Composite",
    className: "AssessedMachinesListByAssessmentHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AssessedMachinesGetHeaders: msRest.CompositeMapper = {
  serializedName: "assessedmachines-get-headers",
  type: {
    name: "Composite",
    className: "AssessedMachinesGetHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const HyperVCollectorsListByProjectHeaders: msRest.CompositeMapper = {
  serializedName: "hypervcollectors-listbyproject-headers",
  type: {
    name: "Composite",
    className: "HyperVCollectorsListByProjectHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const HyperVCollectorsGetHeaders: msRest.CompositeMapper = {
  serializedName: "hypervcollectors-get-headers",
  type: {
    name: "Composite",
    className: "HyperVCollectorsGetHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const HyperVCollectorsCreateHeaders: msRest.CompositeMapper = {
  serializedName: "hypervcollectors-create-headers",
  type: {
    name: "Composite",
    className: "HyperVCollectorsCreateHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const HyperVCollectorsDeleteHeaders: msRest.CompositeMapper = {
  serializedName: "hypervcollectors-delete-headers",
  type: {
    name: "Composite",
    className: "HyperVCollectorsDeleteHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VMwareCollectorsListByProjectHeaders: msRest.CompositeMapper = {
  serializedName: "vmwarecollectors-listbyproject-headers",
  type: {
    name: "Composite",
    className: "VMwareCollectorsListByProjectHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VMwareCollectorsGetHeaders: msRest.CompositeMapper = {
  serializedName: "vmwarecollectors-get-headers",
  type: {
    name: "Composite",
    className: "VMwareCollectorsGetHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VMwareCollectorsCreateHeaders: msRest.CompositeMapper = {
  serializedName: "vmwarecollectors-create-headers",
  type: {
    name: "Composite",
    className: "VMwareCollectorsCreateHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const VMwareCollectorsDeleteHeaders: msRest.CompositeMapper = {
  serializedName: "vmwarecollectors-delete-headers",
  type: {
    name: "Composite",
    className: "VMwareCollectorsDeleteHeaders",
    modelProperties: {
      xMsRequestId: {
        serializedName: "x-ms-request-id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProjectResultList: msRest.CompositeMapper = {
  serializedName: "ProjectResultList",
  type: {
    name: "Composite",
    className: "ProjectResultList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Project"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AssessmentOptionsResultList: msRest.CompositeMapper = {
  serializedName: "AssessmentOptionsResultList",
  type: {
    name: "Composite",
    className: "AssessmentOptionsResultList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AssessmentOptions"
            }
          }
        }
      }
    }
  }
};

export const MachineResultList: msRest.CompositeMapper = {
  serializedName: "MachineResultList",
  type: {
    name: "Composite",
    className: "MachineResultList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Machine"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GroupResultList: msRest.CompositeMapper = {
  serializedName: "GroupResultList",
  type: {
    name: "Composite",
    className: "GroupResultList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Group"
            }
          }
        }
      }
    }
  }
};

export const AssessmentResultList: msRest.CompositeMapper = {
  serializedName: "AssessmentResultList",
  type: {
    name: "Composite",
    className: "AssessmentResultList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Assessment"
            }
          }
        }
      }
    }
  }
};

export const AssessedMachineResultList: msRest.CompositeMapper = {
  serializedName: "AssessedMachineResultList",
  type: {
    name: "Composite",
    className: "AssessedMachineResultList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AssessedMachine"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const HyperVCollectorList: msRest.CompositeMapper = {
  serializedName: "HyperVCollectorList",
  type: {
    name: "Composite",
    className: "HyperVCollectorList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "HyperVCollector"
            }
          }
        }
      }
    }
  }
};

export const VMwareCollectorList: msRest.CompositeMapper = {
  serializedName: "VMwareCollectorList",
  type: {
    name: "Composite",
    className: "VMwareCollectorList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VMwareCollector"
            }
          }
        }
      }
    }
  }
};

export const OperationResultList: msRest.CompositeMapper = {
  serializedName: "OperationResultList",
  type: {
    name: "Composite",
    className: "OperationResultList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation"
            }
          }
        }
      }
    }
  }
};
