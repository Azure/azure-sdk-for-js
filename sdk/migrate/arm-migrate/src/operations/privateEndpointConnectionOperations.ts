/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/privateEndpointConnectionOperationsMappers";
import * as Parameters from "../models/parameters";
import { AzureMigrateV2Context } from "../azureMigrateV2Context";

/** Class representing a PrivateEndpointConnectionOperations. */
export class PrivateEndpointConnectionOperations {
  private readonly client: AzureMigrateV2Context;

  /**
   * Create a PrivateEndpointConnectionOperations.
   * @param {AzureMigrateV2Context} client Reference to the service client.
   */
  constructor(client: AzureMigrateV2Context) {
    this.client = client;
  }

  /**
   * Get all private endpoint connections in the project. Returns a json array of objects of type
   * 'privateEndpointConnections' as specified in the Models section.
   * @summary Get all private endpoint connections
   * @param resourceGroupName Name of the Azure Resource Group that project is part of.
   * @param projectName Name of the Azure Migrate project.
   * @param [options] The optional parameters
   * @returns Promise<Models.PrivateEndpointConnectionListByProjectResponse>
   */
  listByProject(resourceGroupName: string, projectName: string, options?: msRest.RequestOptionsBase): Promise<Models.PrivateEndpointConnectionListByProjectResponse>;
  /**
   * @param resourceGroupName Name of the Azure Resource Group that project is part of.
   * @param projectName Name of the Azure Migrate project.
   * @param callback The callback
   */
  listByProject(resourceGroupName: string, projectName: string, callback: msRest.ServiceCallback<Models.PrivateEndpointConnectionCollection>): void;
  /**
   * @param resourceGroupName Name of the Azure Resource Group that project is part of.
   * @param projectName Name of the Azure Migrate project.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByProject(resourceGroupName: string, projectName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.PrivateEndpointConnectionCollection>): void;
  listByProject(resourceGroupName: string, projectName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.PrivateEndpointConnectionCollection>, callback?: msRest.ServiceCallback<Models.PrivateEndpointConnectionCollection>): Promise<Models.PrivateEndpointConnectionListByProjectResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        projectName,
        options
      },
      listByProjectOperationSpec,
      callback) as Promise<Models.PrivateEndpointConnectionListByProjectResponse>;
  }

  /**
   * Get information related to a specific private endpoint connection in the project. Returns a json
   * object of type 'privateEndpointConnections' as specified in the models section.
   * @summary Get a private endpoint connection in the project.
   * @param resourceGroupName Name of the Azure Resource Group that project is part of.
   * @param projectName Name of the Azure Migrate project.
   * @param privateEndpointConnectionName Unique name of a private endpoint connection within a
   * project.
   * @param [options] The optional parameters
   * @returns Promise<Models.PrivateEndpointConnectionGetResponse>
   */
  get(resourceGroupName: string, projectName: string, privateEndpointConnectionName: string, options?: msRest.RequestOptionsBase): Promise<Models.PrivateEndpointConnectionGetResponse>;
  /**
   * @param resourceGroupName Name of the Azure Resource Group that project is part of.
   * @param projectName Name of the Azure Migrate project.
   * @param privateEndpointConnectionName Unique name of a private endpoint connection within a
   * project.
   * @param callback The callback
   */
  get(resourceGroupName: string, projectName: string, privateEndpointConnectionName: string, callback: msRest.ServiceCallback<Models.PrivateEndpointConnection>): void;
  /**
   * @param resourceGroupName Name of the Azure Resource Group that project is part of.
   * @param projectName Name of the Azure Migrate project.
   * @param privateEndpointConnectionName Unique name of a private endpoint connection within a
   * project.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(resourceGroupName: string, projectName: string, privateEndpointConnectionName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.PrivateEndpointConnection>): void;
  get(resourceGroupName: string, projectName: string, privateEndpointConnectionName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.PrivateEndpointConnection>, callback?: msRest.ServiceCallback<Models.PrivateEndpointConnection>): Promise<Models.PrivateEndpointConnectionGetResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        projectName,
        privateEndpointConnectionName,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.PrivateEndpointConnectionGetResponse>;
  }

  /**
   * Update a specific private endpoint connection in the project.
   * @summary Update a private endpoint connection in the project.
   * @param resourceGroupName Name of the Azure Resource Group that project is part of.
   * @param projectName Name of the Azure Migrate project.
   * @param privateEndpointConnectionName Unique name of a private endpoint connection within a
   * project.
   * @param [options] The optional parameters
   * @returns Promise<Models.PrivateEndpointConnectionUpdateResponse>
   */
  update(resourceGroupName: string, projectName: string, privateEndpointConnectionName: string, options?: Models.PrivateEndpointConnectionUpdateOptionalParams): Promise<Models.PrivateEndpointConnectionUpdateResponse>;
  /**
   * @param resourceGroupName Name of the Azure Resource Group that project is part of.
   * @param projectName Name of the Azure Migrate project.
   * @param privateEndpointConnectionName Unique name of a private endpoint connection within a
   * project.
   * @param callback The callback
   */
  update(resourceGroupName: string, projectName: string, privateEndpointConnectionName: string, callback: msRest.ServiceCallback<Models.PrivateEndpointConnection>): void;
  /**
   * @param resourceGroupName Name of the Azure Resource Group that project is part of.
   * @param projectName Name of the Azure Migrate project.
   * @param privateEndpointConnectionName Unique name of a private endpoint connection within a
   * project.
   * @param options The optional parameters
   * @param callback The callback
   */
  update(resourceGroupName: string, projectName: string, privateEndpointConnectionName: string, options: Models.PrivateEndpointConnectionUpdateOptionalParams, callback: msRest.ServiceCallback<Models.PrivateEndpointConnection>): void;
  update(resourceGroupName: string, projectName: string, privateEndpointConnectionName: string, options?: Models.PrivateEndpointConnectionUpdateOptionalParams | msRest.ServiceCallback<Models.PrivateEndpointConnection>, callback?: msRest.ServiceCallback<Models.PrivateEndpointConnection>): Promise<Models.PrivateEndpointConnectionUpdateResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        projectName,
        privateEndpointConnectionName,
        options
      },
      updateOperationSpec,
      callback) as Promise<Models.PrivateEndpointConnectionUpdateResponse>;
  }

  /**
   * Delete the private endpoint connection from the project. T.
   * @summary Delete the private endpoint connection
   * @param resourceGroupName Name of the Azure Resource Group that project is part of.
   * @param projectName Name of the Azure Migrate project.
   * @param privateEndpointConnectionName Unique name of a private endpoint connection within a
   * project.
   * @param [options] The optional parameters
   * @returns Promise<Models.PrivateEndpointConnectionDeleteResponse>
   */
  deleteMethod(resourceGroupName: string, projectName: string, privateEndpointConnectionName: string, options?: msRest.RequestOptionsBase): Promise<Models.PrivateEndpointConnectionDeleteResponse>;
  /**
   * @param resourceGroupName Name of the Azure Resource Group that project is part of.
   * @param projectName Name of the Azure Migrate project.
   * @param privateEndpointConnectionName Unique name of a private endpoint connection within a
   * project.
   * @param callback The callback
   */
  deleteMethod(resourceGroupName: string, projectName: string, privateEndpointConnectionName: string, callback: msRest.ServiceCallback<void>): void;
  /**
   * @param resourceGroupName Name of the Azure Resource Group that project is part of.
   * @param projectName Name of the Azure Migrate project.
   * @param privateEndpointConnectionName Unique name of a private endpoint connection within a
   * project.
   * @param options The optional parameters
   * @param callback The callback
   */
  deleteMethod(resourceGroupName: string, projectName: string, privateEndpointConnectionName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
  deleteMethod(resourceGroupName: string, projectName: string, privateEndpointConnectionName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<Models.PrivateEndpointConnectionDeleteResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        projectName,
        privateEndpointConnectionName,
        options
      },
      deleteMethodOperationSpec,
      callback) as Promise<Models.PrivateEndpointConnectionDeleteResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listByProjectOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/assessmentprojects/{projectName}/privateEndpointConnections",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.projectName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.PrivateEndpointConnectionCollection,
      headersMapper: Mappers.PrivateEndpointConnectionListByProjectHeaders
    },
    default: {
      bodyMapper: Mappers.CloudError,
      headersMapper: Mappers.PrivateEndpointConnectionListByProjectHeaders
    }
  },
  serializer
};

const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/assessmentprojects/{projectName}/privateEndpointConnections/{privateEndpointConnectionName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.projectName,
    Parameters.privateEndpointConnectionName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.PrivateEndpointConnection,
      headersMapper: Mappers.PrivateEndpointConnectionGetHeaders
    },
    default: {
      bodyMapper: Mappers.CloudError,
      headersMapper: Mappers.PrivateEndpointConnectionGetHeaders
    }
  },
  serializer
};

const updateOperationSpec: msRest.OperationSpec = {
  httpMethod: "PUT",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/assessmentprojects/{projectName}/privateEndpointConnections/{privateEndpointConnectionName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.projectName,
    Parameters.privateEndpointConnectionName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: [
      "options",
      "privateEndpointConnectionBody"
    ],
    mapper: Mappers.PrivateEndpointConnection
  },
  responses: {
    200: {
      bodyMapper: Mappers.PrivateEndpointConnection,
      headersMapper: Mappers.PrivateEndpointConnectionUpdateHeaders
    },
    202: {
      bodyMapper: Mappers.PrivateEndpointConnection,
      headersMapper: Mappers.PrivateEndpointConnectionUpdateHeaders
    },
    default: {
      bodyMapper: Mappers.CloudError,
      headersMapper: Mappers.PrivateEndpointConnectionUpdateHeaders
    }
  },
  serializer
};

const deleteMethodOperationSpec: msRest.OperationSpec = {
  httpMethod: "DELETE",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/assessmentprojects/{projectName}/privateEndpointConnections/{privateEndpointConnectionName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.projectName,
    Parameters.privateEndpointConnectionName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      headersMapper: Mappers.PrivateEndpointConnectionDeleteHeaders
    },
    204: {
      headersMapper: Mappers.PrivateEndpointConnectionDeleteHeaders
    },
    default: {
      bodyMapper: Mappers.CloudError,
      headersMapper: Mappers.PrivateEndpointConnectionDeleteHeaders
    }
  },
  serializer
};
