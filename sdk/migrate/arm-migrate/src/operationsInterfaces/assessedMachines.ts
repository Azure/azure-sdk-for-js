/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  AssessedMachine,
  AssessedMachinesListByAssessmentOptionalParams,
  AssessedMachinesGetOptionalParams,
  AssessedMachinesGetResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a AssessedMachines. */
export interface AssessedMachines {
  /**
   * Get list of machines that assessed as part of the specified assessment. Returns a json array of
   * objects of type 'assessedMachine' as specified in the Models section.
   *
   * Whenever an assessment is created or updated, it goes under computation. During this phase, the
   * 'status' field of Assessment object reports 'Computing'.
   * During the period when the assessment is under computation, the list of assessed machines is empty
   * and no assessed machines are returned by this call.
   *
   * @param resourceGroupName Name of the Azure Resource Group that project is part of.
   * @param projectName Name of the Azure Migrate project.
   * @param groupName Unique name of a group within a project.
   * @param assessmentName Unique name of an assessment within a project.
   * @param options The options parameters.
   */
  listByAssessment(
    resourceGroupName: string,
    projectName: string,
    groupName: string,
    assessmentName: string,
    options?: AssessedMachinesListByAssessmentOptionalParams
  ): PagedAsyncIterableIterator<AssessedMachine>;
  /**
   * Get an assessed machine with its size & cost estimate that was evaluated in the specified
   * assessment.
   * @param resourceGroupName Name of the Azure Resource Group that project is part of.
   * @param projectName Name of the Azure Migrate project.
   * @param groupName Unique name of a group within a project.
   * @param assessmentName Unique name of an assessment within a project.
   * @param assessedMachineName Unique name of an assessed machine evaluated as part of an assessment.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    projectName: string,
    groupName: string,
    assessmentName: string,
    assessedMachineName: string,
    options?: AssessedMachinesGetOptionalParams
  ): Promise<AssessedMachinesGetResponse>;
}
