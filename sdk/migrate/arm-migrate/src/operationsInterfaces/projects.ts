/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  Project,
  ProjectsListBySubscriptionOptionalParams,
  ProjectsListOptionalParams,
  AssessmentOptions,
  ProjectsAssessmentOptionsListOptionalParams,
  ProjectsGetOptionalParams,
  ProjectsGetResponse,
  ProjectsCreateOptionalParams,
  ProjectsCreateResponse,
  ProjectsUpdateOptionalParams,
  ProjectsUpdateResponse,
  ProjectsDeleteOptionalParams,
  ProjectsDeleteResponse,
  ProjectsAssessmentOptionsOptionalParams,
  ProjectsAssessmentOptionsResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Projects. */
export interface Projects {
  /**
   * Get all the projects in the subscription.
   * @param options The options parameters.
   */
  listBySubscription(
    options?: ProjectsListBySubscriptionOptionalParams
  ): PagedAsyncIterableIterator<Project>;
  /**
   * Get all the projects in the resource group.
   * @param resourceGroupName Name of the Azure Resource Group that project is part of.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    options?: ProjectsListOptionalParams
  ): PagedAsyncIterableIterator<Project>;
  /**
   * Gets list of all available options for the properties of an assessment on a project.
   * @param resourceGroupName Name of the Azure Resource Group that project is part of.
   * @param projectName Name of the Azure Migrate project.
   * @param options The options parameters.
   */
  listAssessmentOptionsList(
    resourceGroupName: string,
    projectName: string,
    options?: ProjectsAssessmentOptionsListOptionalParams
  ): PagedAsyncIterableIterator<AssessmentOptions>;
  /**
   * Get the project with the specified name.
   * @param resourceGroupName Name of the Azure Resource Group that project is part of.
   * @param projectName Name of the Azure Migrate project.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    projectName: string,
    options?: ProjectsGetOptionalParams
  ): Promise<ProjectsGetResponse>;
  /**
   * Create a project with specified name. If a project already exists, update it.
   * @param resourceGroupName Name of the Azure Resource Group that project is part of.
   * @param projectName Name of the Azure Migrate project.
   * @param options The options parameters.
   */
  create(
    resourceGroupName: string,
    projectName: string,
    options?: ProjectsCreateOptionalParams
  ): Promise<ProjectsCreateResponse>;
  /**
   * Update a project with specified name. Supports partial updates, for example only tags can be
   * provided.
   * @param resourceGroupName Name of the Azure Resource Group that project is part of.
   * @param projectName Name of the Azure Migrate project.
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    projectName: string,
    options?: ProjectsUpdateOptionalParams
  ): Promise<ProjectsUpdateResponse>;
  /**
   * Delete the project. Deleting non-existent project is a no-operation.
   * @param resourceGroupName Name of the Azure Resource Group that project is part of.
   * @param projectName Name of the Azure Migrate project.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    projectName: string,
    options?: ProjectsDeleteOptionalParams
  ): Promise<ProjectsDeleteResponse>;
  /**
   * Get all available options for the properties of an assessment on a project.
   * @param resourceGroupName Name of the Azure Resource Group that project is part of.
   * @param projectName Name of the Azure Migrate project.
   * @param assessmentOptionsName Name of the assessment options. The only name accepted in default.
   * @param options The options parameters.
   */
  assessmentOptions(
    resourceGroupName: string,
    projectName: string,
    assessmentOptionsName: string,
    options?: ProjectsAssessmentOptionsOptionalParams
  ): Promise<ProjectsAssessmentOptionsResponse>;
}
