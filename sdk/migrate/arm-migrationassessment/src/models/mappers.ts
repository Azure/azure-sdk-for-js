/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export const OperationListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const Operation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      isDataAction: {
        serializedName: "isDataAction",
        readOnly: true,
        type: {
          name: "Boolean",
        },
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay",
        },
      },
      origin: {
        serializedName: "origin",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      actionType: {
        serializedName: "actionType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const OperationDisplay: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        serializedName: "provider",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      resource: {
        serializedName: "resource",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      operation: {
        serializedName: "operation",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      description: {
        serializedName: "description",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ErrorResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorDetail",
        },
      },
    },
  },
};

export const ErrorDetail: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorDetail",
    modelProperties: {
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      target: {
        serializedName: "target",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      details: {
        serializedName: "details",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorDetail",
            },
          },
        },
      },
      additionalInfo: {
        serializedName: "additionalInfo",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorAdditionalInfo",
            },
          },
        },
      },
    },
  },
};

export const ErrorAdditionalInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorAdditionalInfo",
    modelProperties: {
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      info: {
        serializedName: "info",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } },
        },
      },
    },
  },
};

export const AssessmentProjectListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessmentProjectListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AssessmentProject",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const PrivateEndpoint: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PrivateEndpoint",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const PrivateLinkServiceConnectionState: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PrivateLinkServiceConnectionState",
    modelProperties: {
      status: {
        serializedName: "status",
        type: {
          name: "String",
        },
      },
      description: {
        serializedName: "description",
        type: {
          name: "String",
        },
      },
      actionsRequired: {
        serializedName: "actionsRequired",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const Resource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData",
        },
      },
    },
  },
};

export const SystemData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SystemData",
    modelProperties: {
      createdBy: {
        serializedName: "createdBy",
        type: {
          name: "String",
        },
      },
      createdByType: {
        serializedName: "createdByType",
        type: {
          name: "String",
        },
      },
      createdAt: {
        serializedName: "createdAt",
        type: {
          name: "DateTime",
        },
      },
      lastModifiedBy: {
        serializedName: "lastModifiedBy",
        type: {
          name: "String",
        },
      },
      lastModifiedByType: {
        serializedName: "lastModifiedByType",
        type: {
          name: "String",
        },
      },
      lastModifiedAt: {
        serializedName: "lastModifiedAt",
        type: {
          name: "DateTime",
        },
      },
    },
  },
};

export const AzureResourceProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureResourceProperties",
    modelProperties: {
      provisioningState: {
        serializedName: "provisioningState",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AssessmentProjectUpdate: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessmentProjectUpdate",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
      assessmentSolutionId: {
        serializedName: "properties.assessmentSolutionId",
        type: {
          name: "String",
        },
      },
      projectStatus: {
        serializedName: "properties.projectStatus",
        type: {
          name: "String",
        },
      },
      customerWorkspaceId: {
        serializedName: "properties.customerWorkspaceId",
        type: {
          name: "String",
        },
      },
      customerWorkspaceLocation: {
        serializedName: "properties.customerWorkspaceLocation",
        type: {
          name: "String",
        },
      },
      publicNetworkAccess: {
        serializedName: "properties.publicNetworkAccess",
        type: {
          name: "String",
        },
      },
      customerStorageAccountArmId: {
        serializedName: "properties.customerStorageAccountArmId",
        type: {
          name: "String",
        },
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AssessmentOptionsListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessmentOptionsListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AssessmentOptions",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const VmFamilyOptions: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VmFamilyOptions",
    modelProperties: {
      familyName: {
        serializedName: "familyName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      targetLocations: {
        serializedName: "targetLocations",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      category: {
        serializedName: "category",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
    },
  },
};

export const UltraDiskAssessmentOptions: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UltraDiskAssessmentOptions",
    modelProperties: {
      familyName: {
        serializedName: "familyName",
        type: {
          name: "String",
        },
      },
      targetLocations: {
        serializedName: "targetLocations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
    },
  },
};

export const AvsAssessmentOptionsListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AvsAssessmentOptionsListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AvsAssessmentOptions",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AvsSkuOptions: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AvsSkuOptions",
    modelProperties: {
      nodeType: {
        serializedName: "nodeType",
        type: {
          name: "String",
        },
      },
      targetLocations: {
        serializedName: "targetLocations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
    },
  },
};

export const GroupListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GroupListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Group",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AssessmentListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessmentListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Assessment",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const CostComponent: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CostComponent",
    modelProperties: {
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      value: {
        serializedName: "value",
        type: {
          name: "Number",
        },
      },
      description: {
        serializedName: "description",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const VmUptime: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VmUptime",
    modelProperties: {
      daysPerMonth: {
        serializedName: "daysPerMonth",
        type: {
          name: "Number",
        },
      },
      hoursPerDay: {
        serializedName: "hoursPerDay",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const AssessedMachineListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessedMachineListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AssessedMachine",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ErrorModel: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorModel",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      runAsAccountId: {
        serializedName: "runAsAccountId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      applianceName: {
        serializedName: "applianceName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      summaryMessage: {
        serializedName: "summaryMessage",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      agentScenario: {
        serializedName: "agentScenario",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      possibleCauses: {
        serializedName: "possibleCauses",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      recommendedAction: {
        serializedName: "recommendedAction",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      severity: {
        serializedName: "severity",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      messageParameters: {
        serializedName: "messageParameters",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
      updatedTimeStamp: {
        serializedName: "updatedTimeStamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      impactedAssessmentType: {
        serializedName: "impactedAssessmentType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AssessedDisk: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessedDisk",
    modelProperties: {
      suitability: {
        serializedName: "suitability",
        type: {
          name: "String",
        },
      },
      suitabilityExplanation: {
        serializedName: "suitabilityExplanation",
        type: {
          name: "String",
        },
      },
      suitabilityDetail: {
        serializedName: "suitabilityDetail",
        type: {
          name: "String",
        },
      },
      recommendedDiskSize: {
        serializedName: "recommendedDiskSize",
        type: {
          name: "String",
        },
      },
      recommendedDiskType: {
        serializedName: "recommendedDiskType",
        type: {
          name: "String",
        },
      },
      gigabytesForRecommendedDiskSize: {
        serializedName: "gigabytesForRecommendedDiskSize",
        type: {
          name: "Number",
        },
      },
      recommendDiskThroughputInMbps: {
        serializedName: "recommendDiskThroughputInMbps",
        type: {
          name: "Number",
        },
      },
      recommendedDiskIops: {
        serializedName: "recommendedDiskIops",
        type: {
          name: "Number",
        },
      },
      monthlyStorageCost: {
        serializedName: "monthlyStorageCost",
        type: {
          name: "Number",
        },
      },
      name: {
        serializedName: "name",
        type: {
          name: "String",
        },
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String",
        },
      },
      gigabytesProvisioned: {
        serializedName: "gigabytesProvisioned",
        type: {
          name: "Number",
        },
      },
      megabytesPerSecondOfRead: {
        serializedName: "megabytesPerSecondOfRead",
        type: {
          name: "Number",
        },
      },
      megabytesPerSecondOfWrite: {
        serializedName: "megabytesPerSecondOfWrite",
        type: {
          name: "Number",
        },
      },
      numberOfReadOperationsPerSecond: {
        serializedName: "numberOfReadOperationsPerSecond",
        type: {
          name: "Number",
        },
      },
      numberOfWriteOperationsPerSecond: {
        serializedName: "numberOfWriteOperationsPerSecond",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const ProcessorInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProcessorInfo",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String",
        },
      },
      numberOfSockets: {
        serializedName: "numberOfSockets",
        type: {
          name: "Number",
        },
      },
      numberOfCoresPerSocket: {
        serializedName: "numberOfCoresPerSocket",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const ProductSupportStatus: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProductSupportStatus",
    modelProperties: {
      currentVersion: {
        serializedName: "currentVersion",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      servicePackStatus: {
        serializedName: "servicePackStatus",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      esuStatus: {
        serializedName: "esuStatus",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      supportStatus: {
        serializedName: "supportStatus",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      eta: {
        serializedName: "eta",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      currentEsuYear: {
        serializedName: "currentEsuYear",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      mainstreamEndDate: {
        serializedName: "mainstreamEndDate",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      extendedSupportEndDate: {
        serializedName: "extendedSupportEndDate",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      extendedSecurityUpdateYear1EndDate: {
        serializedName: "extendedSecurityUpdateYear1EndDate",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      extendedSecurityUpdateYear2EndDate: {
        serializedName: "extendedSecurityUpdateYear2EndDate",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      extendedSecurityUpdateYear3EndDate: {
        serializedName: "extendedSecurityUpdateYear3EndDate",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
    },
  },
};

export const AssessedNetworkAdapter: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessedNetworkAdapter",
    modelProperties: {
      suitability: {
        serializedName: "suitability",
        type: {
          name: "String",
        },
      },
      suitabilityDetail: {
        serializedName: "suitabilityDetail",
        type: {
          name: "String",
        },
      },
      suitabilityExplanation: {
        serializedName: "suitabilityExplanation",
        type: {
          name: "String",
        },
      },
      monthlyBandwidthCosts: {
        serializedName: "monthlyBandwidthCosts",
        type: {
          name: "Number",
        },
      },
      netGigabytesTransmittedPerMonth: {
        serializedName: "netGigabytesTransmittedPerMonth",
        type: {
          name: "Number",
        },
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String",
        },
      },
      macAddress: {
        serializedName: "macAddress",
        type: {
          name: "String",
        },
      },
      ipAddresses: {
        serializedName: "ipAddresses",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      megabytesPerSecondReceived: {
        serializedName: "megabytesPerSecondReceived",
        type: {
          name: "Number",
        },
      },
      megabytesPerSecondTransmitted: {
        serializedName: "megabytesPerSecondTransmitted",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const DownloadUrl: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DownloadUrl",
    modelProperties: {
      assessmentReportUrl: {
        serializedName: "assessmentReportUrl",
        required: true,
        readOnly: true,
        type: {
          name: "String",
        },
      },
      expirationTime: {
        serializedName: "expirationTime",
        required: true,
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
    },
  },
};

export const AvsAssessmentListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AvsAssessmentListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AvsAssessment",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AvsAssessedMachineListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AvsAssessedMachineListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AvsAssessedMachine",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AvsAssessedDisk: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AvsAssessedDisk",
    modelProperties: {
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      displayName: {
        serializedName: "displayName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      gigabytesProvisioned: {
        serializedName: "gigabytesProvisioned",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      megabytesPerSecondOfRead: {
        serializedName: "megabytesPerSecondOfRead",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      megabytesPerSecondOfWrite: {
        serializedName: "megabytesPerSecondOfWrite",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      numberOfReadOperationsPerSecond: {
        serializedName: "numberOfReadOperationsPerSecond",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      numberOfWriteOperationsPerSecond: {
        serializedName: "numberOfWriteOperationsPerSecond",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const AvsAssessedNetworkAdapter: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AvsAssessedNetworkAdapter",
    modelProperties: {
      macAddress: {
        serializedName: "macAddress",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      ipAddresses: {
        serializedName: "ipAddresses",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      displayName: {
        serializedName: "displayName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      megabytesPerSecondReceived: {
        serializedName: "megabytesPerSecondReceived",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      megabytesPerSecondTransmitted: {
        serializedName: "megabytesPerSecondTransmitted",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const SqlAssessmentV2ListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SqlAssessmentV2ListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SqlAssessmentV2",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const EntityUptime: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "EntityUptime",
    modelProperties: {
      daysPerMonth: {
        serializedName: "daysPerMonth",
        type: {
          name: "Number",
        },
      },
      hoursPerDay: {
        serializedName: "hoursPerDay",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const SqlMiSettings: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SqlMiSettings",
    modelProperties: {
      azureSqlServiceTier: {
        serializedName: "azureSqlServiceTier",
        type: {
          name: "String",
        },
      },
      azureSqlInstanceType: {
        serializedName: "azureSqlInstanceType",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SqlDbSettings: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SqlDbSettings",
    modelProperties: {
      azureSqlServiceTier: {
        serializedName: "azureSqlServiceTier",
        type: {
          name: "String",
        },
      },
      azureSqlDataBaseType: {
        serializedName: "azureSqlDataBaseType",
        type: {
          name: "String",
        },
      },
      azureSqlComputeTier: {
        serializedName: "azureSqlComputeTier",
        type: {
          name: "String",
        },
      },
      azureSqlPurchaseModel: {
        serializedName: "azureSqlPurchaseModel",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SqlVmSettings: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SqlVmSettings",
    modelProperties: {
      instanceSeries: {
        serializedName: "instanceSeries",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
    },
  },
};

export const AssessedSqlDatabaseV2ListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessedSqlDatabaseV2ListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AssessedSqlDatabaseV2",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SqlAssessmentV2PaasSuitabilityData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SqlAssessmentV2PaasSuitabilityData",
    modelProperties: {
      azureSqlSku: {
        serializedName: "azureSqlSku",
        type: {
          name: "Composite",
          className: "AzureSqlPaasSkuDTO",
        },
      },
      replicaAzureSqlSku: {
        serializedName: "replicaAzureSqlSku",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AzureSqlPaasSkuDTO",
            },
          },
        },
      },
      sharedResources: {
        serializedName: "sharedResources",
        type: {
          name: "Composite",
          className: "SharedResourcesDTO",
        },
      },
      monthlyComputeCost: {
        serializedName: "monthlyComputeCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      monthlyStorageCost: {
        serializedName: "monthlyStorageCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      costComponents: {
        serializedName: "costComponents",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CostComponent",
            },
          },
        },
      },
      securitySuitability: {
        serializedName: "securitySuitability",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      shouldProvisionReplicas: {
        serializedName: "shouldProvisionReplicas",
        readOnly: true,
        type: {
          name: "Boolean",
        },
      },
      skuReplicationMode: {
        serializedName: "skuReplicationMode",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      migrationGuidelines: {
        serializedName: "migrationGuidelines",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SqlMigrationGuideline",
            },
          },
        },
      },
      recommendationReasonings: {
        serializedName: "recommendationReasonings",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SqlRecommendationReasoning",
            },
          },
        },
      },
      migrationTargetPlatform: {
        serializedName: "migrationTargetPlatform",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      suitability: {
        serializedName: "suitability",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      migrationIssues: {
        serializedName: "migrationIssues",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SqlAssessmentMigrationIssue",
            },
          },
        },
      },
    },
  },
};

export const AzureSqlPaasSkuDTO: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureSqlPaasSkuDTO",
    modelProperties: {
      azureSqlServiceTier: {
        serializedName: "azureSqlServiceTier",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      azureSqlComputeTier: {
        serializedName: "azureSqlComputeTier",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      azureSqlHardwareGeneration: {
        serializedName: "azureSqlHardwareGeneration",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      storageMaxSizeInMB: {
        serializedName: "storageMaxSizeInMB",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      predictedDataSizeInMB: {
        serializedName: "predictedDataSizeInMB",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      predictedLogSizeInMB: {
        serializedName: "predictedLogSizeInMB",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      cores: {
        serializedName: "cores",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      azureSqlTargetType: {
        serializedName: "azureSqlTargetType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SharedResourcesDTO: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SharedResourcesDTO",
    modelProperties: {
      sharedDataDisks: {
        serializedName: "sharedDataDisks",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AzureManagedDiskSkuDTO",
            },
          },
        },
      },
      sharedLogDisks: {
        serializedName: "sharedLogDisks",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AzureManagedDiskSkuDTO",
            },
          },
        },
      },
      sharedTempDbDisks: {
        serializedName: "sharedTempDbDisks",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AzureManagedDiskSkuDTO",
            },
          },
        },
      },
      numberOfMounts: {
        serializedName: "numberOfMounts",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      quorumWitness: {
        serializedName: "quorumWitness",
        type: {
          name: "Composite",
          className: "AzureQuorumWitnessDTO",
        },
      },
    },
  },
};

export const AzureManagedDiskSkuDTO: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureManagedDiskSkuDTO",
    modelProperties: {
      diskType: {
        serializedName: "diskType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      diskSize: {
        serializedName: "diskSize",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      diskRedundancy: {
        serializedName: "diskRedundancy",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      storageCost: {
        serializedName: "storageCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      recommendedSizeInGib: {
        serializedName: "recommendedSizeInGib",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      recommendedThroughputInMbps: {
        serializedName: "recommendedThroughputInMbps",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      recommendedIops: {
        serializedName: "recommendedIops",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const AzureQuorumWitnessDTO: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureQuorumWitnessDTO",
    modelProperties: {
      quorumWitnessType: {
        serializedName: "quorumWitnessType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SqlMigrationGuideline: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SqlMigrationGuideline",
    modelProperties: {
      guidelineId: {
        serializedName: "guidelineId",
        type: {
          name: "String",
        },
      },
      migrationGuidelineCategory: {
        serializedName: "migrationGuidelineCategory",
        type: {
          name: "String",
        },
      },
      migrationGuidelineContext: {
        serializedName: "migrationGuidelineContext",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MigrationGuidelineContext",
            },
          },
        },
      },
    },
  },
};

export const MigrationGuidelineContext: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MigrationGuidelineContext",
    modelProperties: {
      contextKey: {
        serializedName: "contextKey",
        type: {
          name: "String",
        },
      },
      contextValue: {
        serializedName: "contextValue",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SqlRecommendationReasoning: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SqlRecommendationReasoning",
    modelProperties: {
      reasoningId: {
        serializedName: "reasoningId",
        type: {
          name: "String",
        },
      },
      reasoningString: {
        serializedName: "reasoningString",
        type: {
          name: "String",
        },
      },
      reasoningCategory: {
        serializedName: "reasoningCategory",
        type: {
          name: "String",
        },
      },
      contextParameters: {
        serializedName: "contextParameters",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SqlRecommendationReasoningContext",
            },
          },
        },
      },
    },
  },
};

export const SqlRecommendationReasoningContext: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SqlRecommendationReasoningContext",
    modelProperties: {
      contextKey: {
        serializedName: "contextKey",
        type: {
          name: "String",
        },
      },
      contextValue: {
        serializedName: "contextValue",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SqlAssessmentMigrationIssue: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SqlAssessmentMigrationIssue",
    modelProperties: {
      issueId: {
        serializedName: "issueId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      issueCategory: {
        serializedName: "issueCategory",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      impactedObjects: {
        serializedName: "impactedObjects",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ImpactedAssessmentObject",
            },
          },
        },
      },
    },
  },
};

export const ImpactedAssessmentObject: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ImpactedAssessmentObject",
    modelProperties: {
      objectName: {
        serializedName: "objectName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      objectType: {
        serializedName: "objectType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SqlAvailabilityGroupDataOverview: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SqlAvailabilityGroupDataOverview",
    modelProperties: {
      availabilityGroupId: {
        serializedName: "availabilityGroupId",
        type: {
          name: "String",
        },
      },
      availabilityGroupName: {
        serializedName: "availabilityGroupName",
        type: {
          name: "String",
        },
      },
      sqlAvailabilityGroupSdsArmId: {
        serializedName: "sqlAvailabilityGroupSdsArmId",
        type: {
          name: "String",
        },
      },
      sqlAvailabilityGroupEntityId: {
        serializedName: "sqlAvailabilityGroupEntityId",
        type: {
          name: "String",
        },
      },
      sqlAvailabilityReplicaId: {
        serializedName: "sqlAvailabilityReplicaId",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AssessedSqlInstanceV2ListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessedSqlInstanceV2ListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AssessedSqlInstanceV2",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SqlAssessmentV2IaasSuitabilityData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SqlAssessmentV2IaasSuitabilityData",
    modelProperties: {
      azureSqlSku: {
        serializedName: "azureSqlSku",
        type: {
          name: "Composite",
          className: "AzureSqlIaasSkuDTO",
        },
      },
      replicaAzureSqlSku: {
        serializedName: "replicaAzureSqlSku",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AzureSqlIaasSkuDTO",
            },
          },
        },
      },
      sharedResources: {
        serializedName: "sharedResources",
        type: {
          name: "Composite",
          className: "SharedResourcesDTO",
        },
      },
      monthlyComputeCost: {
        serializedName: "monthlyComputeCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      monthlyStorageCost: {
        serializedName: "monthlyStorageCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      costComponents: {
        serializedName: "costComponents",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CostComponent",
            },
          },
        },
      },
      securitySuitability: {
        serializedName: "securitySuitability",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      shouldProvisionReplicas: {
        serializedName: "shouldProvisionReplicas",
        readOnly: true,
        type: {
          name: "Boolean",
        },
      },
      skuReplicationMode: {
        serializedName: "skuReplicationMode",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      migrationGuidelines: {
        serializedName: "migrationGuidelines",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SqlMigrationGuideline",
            },
          },
        },
      },
      recommendationReasonings: {
        serializedName: "recommendationReasonings",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SqlRecommendationReasoning",
            },
          },
        },
      },
      migrationTargetPlatform: {
        serializedName: "migrationTargetPlatform",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      suitability: {
        serializedName: "suitability",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      migrationIssues: {
        serializedName: "migrationIssues",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SqlAssessmentMigrationIssue",
            },
          },
        },
      },
    },
  },
};

export const AzureSqlIaasSkuDTO: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureSqlIaasSkuDTO",
    modelProperties: {
      virtualMachineSize: {
        serializedName: "virtualMachineSize",
        type: {
          name: "Composite",
          className: "AzureVirtualMachineSkuDTO",
        },
      },
      dataDiskSizes: {
        serializedName: "dataDiskSizes",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AzureManagedDiskSkuDTO",
            },
          },
        },
      },
      logDiskSizes: {
        serializedName: "logDiskSizes",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AzureManagedDiskSkuDTO",
            },
          },
        },
      },
      azureSqlTargetType: {
        serializedName: "azureSqlTargetType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AzureVirtualMachineSkuDTO: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AzureVirtualMachineSkuDTO",
    modelProperties: {
      azureVmFamily: {
        serializedName: "azureVmFamily",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      cores: {
        serializedName: "cores",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      azureSkuName: {
        serializedName: "azureSkuName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      availableCores: {
        serializedName: "availableCores",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      maxNetworkInterfaces: {
        serializedName: "maxNetworkInterfaces",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const AssessedSqlInstanceStorageDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessedSqlInstanceStorageDetails",
    modelProperties: {
      storageType: {
        serializedName: "storageType",
        type: {
          name: "String",
        },
      },
      diskSizeInMB: {
        serializedName: "diskSizeInMB",
        type: {
          name: "Number",
        },
      },
      megabytesPerSecondOfRead: {
        serializedName: "megabytesPerSecondOfRead",
        type: {
          name: "Number",
        },
      },
      megabytesPerSecondOfWrite: {
        serializedName: "megabytesPerSecondOfWrite",
        type: {
          name: "Number",
        },
      },
      numberOfReadOperationsPerSecond: {
        serializedName: "numberOfReadOperationsPerSecond",
        type: {
          name: "Number",
        },
      },
      numberOfWriteOperationsPerSecond: {
        serializedName: "numberOfWriteOperationsPerSecond",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const SqlFCIMetadata: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SqlFCIMetadata",
    modelProperties: {
      state: {
        serializedName: "state",
        type: {
          name: "String",
        },
      },
      isMultiSubnet: {
        serializedName: "isMultiSubnet",
        type: {
          name: "Boolean",
        },
      },
      fciSharedDiskCount: {
        serializedName: "fciSharedDiskCount",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const SqlAvailabilityReplicaSummary: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SqlAvailabilityReplicaSummary",
    modelProperties: {
      numberOfSynchronousReadReplicas: {
        serializedName: "numberOfSynchronousReadReplicas",
        type: {
          name: "Number",
        },
      },
      numberOfSynchronousNonReadReplicas: {
        serializedName: "numberOfSynchronousNonReadReplicas",
        type: {
          name: "Number",
        },
      },
      numberOfAsynchronousReadReplicas: {
        serializedName: "numberOfAsynchronousReadReplicas",
        type: {
          name: "Number",
        },
      },
      numberOfAsynchronousNonReadReplicas: {
        serializedName: "numberOfAsynchronousNonReadReplicas",
        type: {
          name: "Number",
        },
      },
      numberOfPrimaryReplicas: {
        serializedName: "numberOfPrimaryReplicas",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const AssessedSqlInstanceDiskDetails: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessedSqlInstanceDiskDetails",
    modelProperties: {
      diskId: {
        serializedName: "diskId",
        type: {
          name: "String",
        },
      },
      diskSizeInMB: {
        serializedName: "diskSizeInMB",
        type: {
          name: "Number",
        },
      },
      megabytesPerSecondOfRead: {
        serializedName: "megabytesPerSecondOfRead",
        type: {
          name: "Number",
        },
      },
      megabytesPerSecondOfWrite: {
        serializedName: "megabytesPerSecondOfWrite",
        type: {
          name: "Number",
        },
      },
      numberOfReadOperationsPerSecond: {
        serializedName: "numberOfReadOperationsPerSecond",
        type: {
          name: "Number",
        },
      },
      numberOfWriteOperationsPerSecond: {
        serializedName: "numberOfWriteOperationsPerSecond",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const AssessedSqlInstanceDatabaseSummary: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessedSqlInstanceDatabaseSummary",
    modelProperties: {
      numberOfUserDatabases: {
        serializedName: "numberOfUserDatabases",
        type: {
          name: "Number",
        },
      },
      totalDatabaseSizeInMB: {
        serializedName: "totalDatabaseSizeInMB",
        type: {
          name: "Number",
        },
      },
      largestDatabaseSizeInMB: {
        serializedName: "largestDatabaseSizeInMB",
        type: {
          name: "Number",
        },
      },
      totalDiscoveredUserDatabases: {
        serializedName: "totalDiscoveredUserDatabases",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const AssessedSqlMachineListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessedSqlMachineListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AssessedSqlMachine",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AssessedSqlInstanceSummary: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessedSqlInstanceSummary",
    modelProperties: {
      instanceId: {
        serializedName: "instanceId",
        type: {
          name: "String",
        },
      },
      instanceName: {
        serializedName: "instanceName",
        type: {
          name: "String",
        },
      },
      sqlInstanceSdsArmId: {
        serializedName: "sqlInstanceSdsArmId",
        type: {
          name: "String",
        },
      },
      sqlInstanceEntityId: {
        serializedName: "sqlInstanceEntityId",
        type: {
          name: "String",
        },
      },
      sqlEdition: {
        serializedName: "sqlEdition",
        type: {
          name: "String",
        },
      },
      sqlVersion: {
        serializedName: "sqlVersion",
        type: {
          name: "String",
        },
      },
      isClustered: {
        serializedName: "isClustered",
        type: {
          name: "Boolean",
        },
      },
      isHighAvailabilityEnabled: {
        serializedName: "isHighAvailabilityEnabled",
        type: {
          name: "Boolean",
        },
      },
      sqlFciState: {
        serializedName: "sqlFciState",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AssessedDiskData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessedDiskData",
    modelProperties: {
      suitability: {
        serializedName: "suitability",
        type: {
          name: "String",
        },
      },
      suitabilityExplanation: {
        serializedName: "suitabilityExplanation",
        type: {
          name: "String",
        },
      },
      suitabilityDetail: {
        serializedName: "suitabilityDetail",
        type: {
          name: "String",
        },
      },
      recommendedDiskSize: {
        serializedName: "recommendedDiskSize",
        type: {
          name: "String",
        },
      },
      recommendedDiskType: {
        serializedName: "recommendedDiskType",
        type: {
          name: "String",
        },
      },
      recommendedDiskSizeGigabytes: {
        serializedName: "recommendedDiskSizeGigabytes",
        type: {
          name: "Number",
        },
      },
      recommendDiskThroughputInMbps: {
        serializedName: "recommendDiskThroughputInMbps",
        type: {
          name: "Number",
        },
      },
      recommendedDiskIops: {
        serializedName: "recommendedDiskIops",
        type: {
          name: "Number",
        },
      },
      monthlyStorageCost: {
        serializedName: "monthlyStorageCost",
        type: {
          name: "Number",
        },
      },
      name: {
        serializedName: "name",
        type: {
          name: "String",
        },
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String",
        },
      },
      gigabytesProvisioned: {
        serializedName: "gigabytesProvisioned",
        type: {
          name: "Number",
        },
      },
      megabytesPerSecondOfRead: {
        serializedName: "megabytesPerSecondOfRead",
        type: {
          name: "Number",
        },
      },
      megabytesPerSecondOfWrite: {
        serializedName: "megabytesPerSecondOfWrite",
        type: {
          name: "Number",
        },
      },
      numberOfReadOperationsPerSecond: {
        serializedName: "numberOfReadOperationsPerSecond",
        type: {
          name: "Number",
        },
      },
      numberOfWriteOperationsPerSecond: {
        serializedName: "numberOfWriteOperationsPerSecond",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const SqlAssessedNetworkAdapter: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SqlAssessedNetworkAdapter",
    modelProperties: {
      suitability: {
        serializedName: "suitability",
        type: {
          name: "String",
        },
      },
      suitabilityDetail: {
        serializedName: "suitabilityDetail",
        type: {
          name: "String",
        },
      },
      suitabilityExplanation: {
        serializedName: "suitabilityExplanation",
        type: {
          name: "String",
        },
      },
      monthlyBandwidthCosts: {
        serializedName: "monthlyBandwidthCosts",
        type: {
          name: "Number",
        },
      },
      netGigabytesTransmittedPerMonth: {
        serializedName: "netGigabytesTransmittedPerMonth",
        type: {
          name: "Number",
        },
      },
      name: {
        serializedName: "name",
        type: {
          name: "String",
        },
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String",
        },
      },
      macAddress: {
        serializedName: "macAddress",
        type: {
          name: "String",
        },
      },
      ipAddresses: {
        serializedName: "ipAddresses",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      megabytesPerSecondReceived: {
        serializedName: "megabytesPerSecondReceived",
        type: {
          name: "Number",
        },
      },
      megabytesPerSecondTransmitted: {
        serializedName: "megabytesPerSecondTransmitted",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const AssessedSqlRecommendedEntityListResult: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "AssessedSqlRecommendedEntityListResult",
      modelProperties: {
        value: {
          serializedName: "value",
          required: true,
          type: {
            name: "Sequence",
            element: {
              type: {
                name: "Composite",
                className: "AssessedSqlRecommendedEntity",
              },
            },
          },
        },
        nextLink: {
          serializedName: "nextLink",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const SqlAssessmentV2SummaryListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SqlAssessmentV2SummaryListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SqlAssessmentV2Summary",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SqlAssessmentV2SummaryData: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SqlAssessmentV2SummaryData",
    modelProperties: {
      suitabilitySummary: {
        serializedName: "suitabilitySummary",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } },
        },
      },
      monthlyComputeCost: {
        serializedName: "monthlyComputeCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      monthlyStorageCost: {
        serializedName: "monthlyStorageCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      monthlyLicenseCost: {
        serializedName: "monthlyLicenseCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      confidenceScore: {
        serializedName: "confidenceScore",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      monthlySecurityCost: {
        serializedName: "monthlySecurityCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const UpdateGroupBody: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UpdateGroupBody",
    modelProperties: {
      eTag: {
        serializedName: "eTag",
        type: {
          name: "String",
        },
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "GroupBodyProperties",
        },
      },
    },
  },
};

export const GroupBodyProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GroupBodyProperties",
    modelProperties: {
      operationType: {
        serializedName: "operationType",
        type: {
          name: "String",
        },
      },
      machines: {
        serializedName: "machines",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
    },
  },
};

export const HypervCollectorListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "HypervCollectorListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "HypervCollector",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const CollectorAgentPropertiesBase: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CollectorAgentPropertiesBase",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String",
        },
      },
      version: {
        serializedName: "version",
        type: {
          name: "String",
        },
      },
      lastHeartbeatUtc: {
        serializedName: "lastHeartbeatUtc",
        type: {
          name: "DateTime",
        },
      },
      spnDetails: {
        serializedName: "spnDetails",
        type: {
          name: "Composite",
          className: "CollectorAgentSpnPropertiesBase",
        },
      },
    },
  },
};

export const CollectorAgentSpnPropertiesBase: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CollectorAgentSpnPropertiesBase",
    modelProperties: {
      authority: {
        serializedName: "authority",
        type: {
          name: "String",
        },
      },
      applicationId: {
        serializedName: "applicationId",
        type: {
          name: "String",
        },
      },
      audience: {
        serializedName: "audience",
        type: {
          name: "String",
        },
      },
      objectId: {
        serializedName: "objectId",
        type: {
          name: "String",
        },
      },
      tenantId: {
        serializedName: "tenantId",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ImportCollectorListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ImportCollectorListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ImportCollector",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const MachineListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MachineListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Machine",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const WorkloadSummary: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WorkloadSummary",
    modelProperties: {
      oracleInstances: {
        serializedName: "oracleInstances",
        type: {
          name: "Number",
        },
      },
      springApps: {
        serializedName: "springApps",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const Disk: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Disk",
    modelProperties: {
      gigabytesAllocated: {
        serializedName: "gigabytesAllocated",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      displayName: {
        serializedName: "displayName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const NetworkAdapter: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "NetworkAdapter",
    modelProperties: {
      macAddress: {
        serializedName: "macAddress",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      ipAddresses: {
        serializedName: "ipAddresses",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      displayName: {
        serializedName: "displayName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const PrivateEndpointConnectionListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PrivateEndpointConnectionListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PrivateEndpointConnection",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const PrivateLinkResourceListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PrivateLinkResourceListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PrivateLinkResource",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AssessmentProjectSummaryListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessmentProjectSummaryListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AssessmentProjectSummary",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ErrorSummary: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorSummary",
    modelProperties: {
      assessmentType: {
        serializedName: "assessmentType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      count: {
        serializedName: "count",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const ServerCollectorListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ServerCollectorListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ServerCollector",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SqlAssessmentOptionsListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SqlAssessmentOptionsListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SqlAssessmentOptions",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SqlPaaSTargetOptions: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SqlPaaSTargetOptions",
    modelProperties: {
      computeTier: {
        serializedName: "computeTier",
        type: {
          name: "String",
        },
      },
      hardwareGeneration: {
        serializedName: "hardwareGeneration",
        type: {
          name: "String",
        },
      },
      targetType: {
        serializedName: "targetType",
        type: {
          name: "String",
        },
      },
      serviceTier: {
        serializedName: "serviceTier",
        type: {
          name: "String",
        },
      },
      targetLocations: {
        serializedName: "targetLocations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
    },
  },
};

export const SqlCollectorListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SqlCollectorListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SqlCollector",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const VmwareCollectorListResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VmwareCollectorListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VmwareCollector",
            },
          },
        },
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ResourceId: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceId",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ProxyResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProxyResource",
    modelProperties: {
      ...Resource.type.modelProperties,
    },
  },
};

export const TrackedResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TrackedResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } },
        },
      },
      location: {
        serializedName: "location",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const ProjectProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProjectProperties",
    modelProperties: {
      ...AzureResourceProperties.type.modelProperties,
      createdTimestamp: {
        serializedName: "createdTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      updatedTimestamp: {
        serializedName: "updatedTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      serviceEndpoint: {
        serializedName: "serviceEndpoint",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      assessmentSolutionId: {
        serializedName: "assessmentSolutionId",
        type: {
          name: "String",
        },
      },
      projectStatus: {
        serializedName: "projectStatus",
        type: {
          name: "String",
        },
      },
      customerWorkspaceId: {
        serializedName: "customerWorkspaceId",
        type: {
          name: "String",
        },
      },
      customerWorkspaceLocation: {
        serializedName: "customerWorkspaceLocation",
        type: {
          name: "String",
        },
      },
      publicNetworkAccess: {
        serializedName: "publicNetworkAccess",
        type: {
          name: "String",
        },
      },
      privateEndpointConnections: {
        serializedName: "privateEndpointConnections",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PrivateEndpointConnection",
            },
          },
        },
      },
      customerStorageAccountArmId: {
        serializedName: "customerStorageAccountArmId",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const GroupProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GroupProperties",
    modelProperties: {
      ...AzureResourceProperties.type.modelProperties,
      groupStatus: {
        serializedName: "groupStatus",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      machineCount: {
        serializedName: "machineCount",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      assessments: {
        serializedName: "assessments",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      supportedAssessmentTypes: {
        serializedName: "supportedAssessmentTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      areAssessmentsRunning: {
        serializedName: "areAssessmentsRunning",
        readOnly: true,
        type: {
          name: "Boolean",
        },
      },
      createdTimestamp: {
        serializedName: "createdTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      updatedTimestamp: {
        serializedName: "updatedTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      groupType: {
        serializedName: "groupType",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const MachineAssessmentProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MachineAssessmentProperties",
    modelProperties: {
      ...AzureResourceProperties.type.modelProperties,
      assessmentErrorSummary: {
        serializedName: "assessmentErrorSummary",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } },
        },
      },
      monthlyUltraStorageCost: {
        serializedName: "monthlyUltraStorageCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      costComponents: {
        serializedName: "costComponents",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CostComponent",
            },
          },
        },
      },
      eaSubscriptionId: {
        serializedName: "eaSubscriptionId",
        type: {
          name: "String",
        },
      },
      azurePricingTier: {
        serializedName: "azurePricingTier",
        type: {
          name: "String",
        },
      },
      azureStorageRedundancy: {
        serializedName: "azureStorageRedundancy",
        type: {
          name: "String",
        },
      },
      reservedInstance: {
        serializedName: "reservedInstance",
        type: {
          name: "String",
        },
      },
      azureHybridUseBenefit: {
        serializedName: "azureHybridUseBenefit",
        type: {
          name: "String",
        },
      },
      azureDiskTypes: {
        serializedName: "azureDiskTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      azureVmFamilies: {
        serializedName: "azureVmFamilies",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      distributionBySupportStatus: {
        serializedName: "distributionBySupportStatus",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } },
        },
      },
      distributionByServicePackInsight: {
        serializedName: "distributionByServicePackInsight",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } },
        },
      },
      distributionByOsName: {
        serializedName: "distributionByOsName",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } },
        },
      },
      monthlyComputeCost: {
        serializedName: "monthlyComputeCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      monthlyBandwidthCost: {
        serializedName: "monthlyBandwidthCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      monthlyStorageCost: {
        serializedName: "monthlyStorageCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      monthlyPremiumStorageCost: {
        serializedName: "monthlyPremiumStorageCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      monthlyStandardSsdStorageCost: {
        serializedName: "monthlyStandardSsdStorageCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      suitabilitySummary: {
        serializedName: "suitabilitySummary",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } },
        },
      },
      numberOfMachines: {
        serializedName: "numberOfMachines",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      vmUptime: {
        serializedName: "vmUptime",
        type: {
          name: "Composite",
          className: "VmUptime",
        },
      },
      groupType: {
        serializedName: "groupType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      assessmentType: {
        serializedName: "assessmentType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      azureLocation: {
        serializedName: "azureLocation",
        type: {
          name: "String",
        },
      },
      azureOfferCode: {
        serializedName: "azureOfferCode",
        type: {
          name: "String",
        },
      },
      currency: {
        serializedName: "currency",
        type: {
          name: "String",
        },
      },
      scalingFactor: {
        serializedName: "scalingFactor",
        type: {
          name: "Number",
        },
      },
      percentile: {
        serializedName: "percentile",
        type: {
          name: "String",
        },
      },
      timeRange: {
        serializedName: "timeRange",
        type: {
          name: "String",
        },
      },
      perfDataStartTime: {
        serializedName: "perfDataStartTime",
        type: {
          name: "DateTime",
        },
      },
      perfDataEndTime: {
        serializedName: "perfDataEndTime",
        type: {
          name: "DateTime",
        },
      },
      stage: {
        serializedName: "stage",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      discountPercentage: {
        serializedName: "discountPercentage",
        type: {
          name: "Number",
        },
      },
      sizingCriterion: {
        serializedName: "sizingCriterion",
        type: {
          name: "String",
        },
      },
      confidenceRatingInPercentage: {
        serializedName: "confidenceRatingInPercentage",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      pricesTimestamp: {
        serializedName: "pricesTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      createdTimestamp: {
        serializedName: "createdTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      updatedTimestamp: {
        serializedName: "updatedTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      status: {
        serializedName: "status",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      schemaVersion: {
        serializedName: "schemaVersion",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AvsAssessmentProperties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AvsAssessmentProperties",
    modelProperties: {
      ...AzureResourceProperties.type.modelProperties,
      assessmentErrorSummary: {
        serializedName: "assessmentErrorSummary",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } },
        },
      },
      failuresToTolerateAndRaidLevel: {
        serializedName: "failuresToTolerateAndRaidLevel",
        type: {
          name: "String",
        },
      },
      vcpuOversubscription: {
        serializedName: "vcpuOversubscription",
        type: {
          name: "Number",
        },
      },
      nodeType: {
        serializedName: "nodeType",
        type: {
          name: "String",
        },
      },
      reservedInstance: {
        serializedName: "reservedInstance",
        type: {
          name: "String",
        },
      },
      totalMonthlyCost: {
        serializedName: "totalMonthlyCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      suitability: {
        serializedName: "suitability",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      suitabilityExplanation: {
        serializedName: "suitabilityExplanation",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      numberOfNodes: {
        serializedName: "numberOfNodes",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      cpuUtilization: {
        serializedName: "cpuUtilization",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      ramUtilization: {
        serializedName: "ramUtilization",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      storageUtilization: {
        serializedName: "storageUtilization",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      totalCpuCores: {
        serializedName: "totalCpuCores",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      totalRamInGB: {
        serializedName: "totalRamInGB",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      totalStorageInGB: {
        serializedName: "totalStorageInGB",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      numberOfMachines: {
        serializedName: "numberOfMachines",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      suitabilitySummary: {
        serializedName: "suitabilitySummary",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } },
        },
      },
      memOvercommit: {
        serializedName: "memOvercommit",
        type: {
          name: "Number",
        },
      },
      dedupeCompression: {
        serializedName: "dedupeCompression",
        type: {
          name: "Number",
        },
      },
      limitingFactor: {
        serializedName: "limitingFactor",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      isStretchClusterEnabled: {
        serializedName: "isStretchClusterEnabled",
        type: {
          name: "Boolean",
        },
      },
      groupType: {
        serializedName: "groupType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      assessmentType: {
        serializedName: "assessmentType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      azureLocation: {
        serializedName: "azureLocation",
        type: {
          name: "String",
        },
      },
      azureOfferCode: {
        serializedName: "azureOfferCode",
        type: {
          name: "String",
        },
      },
      currency: {
        serializedName: "currency",
        type: {
          name: "String",
        },
      },
      scalingFactor: {
        serializedName: "scalingFactor",
        type: {
          name: "Number",
        },
      },
      percentile: {
        serializedName: "percentile",
        type: {
          name: "String",
        },
      },
      timeRange: {
        serializedName: "timeRange",
        type: {
          name: "String",
        },
      },
      perfDataStartTime: {
        serializedName: "perfDataStartTime",
        type: {
          name: "DateTime",
        },
      },
      perfDataEndTime: {
        serializedName: "perfDataEndTime",
        type: {
          name: "DateTime",
        },
      },
      stage: {
        serializedName: "stage",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      discountPercentage: {
        serializedName: "discountPercentage",
        type: {
          name: "Number",
        },
      },
      sizingCriterion: {
        serializedName: "sizingCriterion",
        type: {
          name: "String",
        },
      },
      confidenceRatingInPercentage: {
        serializedName: "confidenceRatingInPercentage",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      pricesTimestamp: {
        serializedName: "pricesTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      createdTimestamp: {
        serializedName: "createdTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      updatedTimestamp: {
        serializedName: "updatedTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      status: {
        serializedName: "status",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      schemaVersion: {
        serializedName: "schemaVersion",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SqlAssessmentV2Properties: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SqlAssessmentV2Properties",
    modelProperties: {
      ...AzureResourceProperties.type.modelProperties,
      osLicense: {
        serializedName: "osLicense",
        type: {
          name: "String",
        },
      },
      environmentType: {
        serializedName: "environmentType",
        type: {
          name: "String",
        },
      },
      entityUptime: {
        serializedName: "entityUptime",
        type: {
          name: "Composite",
          className: "EntityUptime",
        },
      },
      optimizationLogic: {
        serializedName: "optimizationLogic",
        type: {
          name: "String",
        },
      },
      reservedInstanceForVm: {
        serializedName: "reservedInstanceForVm",
        type: {
          name: "String",
        },
      },
      azureOfferCodeForVm: {
        serializedName: "azureOfferCodeForVm",
        type: {
          name: "String",
        },
      },
      eaSubscriptionId: {
        serializedName: "eaSubscriptionId",
        type: {
          name: "String",
        },
      },
      azureSqlManagedInstanceSettings: {
        serializedName: "azureSqlManagedInstanceSettings",
        type: {
          name: "Composite",
          className: "SqlMiSettings",
        },
      },
      azureSqlDatabaseSettings: {
        serializedName: "azureSqlDatabaseSettings",
        type: {
          name: "Composite",
          className: "SqlDbSettings",
        },
      },
      azureSqlVmSettings: {
        serializedName: "azureSqlVmSettings",
        type: {
          name: "Composite",
          className: "SqlVmSettings",
        },
      },
      multiSubnetIntent: {
        serializedName: "multiSubnetIntent",
        type: {
          name: "String",
        },
      },
      asyncCommitModeIntent: {
        serializedName: "asyncCommitModeIntent",
        type: {
          name: "String",
        },
      },
      isInternetAccessAvailable: {
        serializedName: "isInternetAccessAvailable",
        type: {
          name: "Boolean",
        },
      },
      disasterRecoveryLocation: {
        serializedName: "disasterRecoveryLocation",
        type: {
          name: "String",
        },
      },
      enableHadrAssessment: {
        serializedName: "enableHadrAssessment",
        type: {
          name: "Boolean",
        },
      },
      azureSecurityOfferingType: {
        serializedName: "azureSecurityOfferingType",
        type: {
          name: "String",
        },
      },
      reservedInstance: {
        serializedName: "reservedInstance",
        type: {
          name: "String",
        },
      },
      sqlServerLicense: {
        serializedName: "sqlServerLicense",
        type: {
          name: "String",
        },
      },
      groupType: {
        serializedName: "groupType",
        type: {
          name: "String",
        },
      },
      assessmentType: {
        serializedName: "assessmentType",
        type: {
          name: "String",
        },
      },
      azureLocation: {
        serializedName: "azureLocation",
        type: {
          name: "String",
        },
      },
      azureOfferCode: {
        serializedName: "azureOfferCode",
        type: {
          name: "String",
        },
      },
      currency: {
        serializedName: "currency",
        type: {
          name: "String",
        },
      },
      scalingFactor: {
        serializedName: "scalingFactor",
        type: {
          name: "Number",
        },
      },
      percentile: {
        serializedName: "percentile",
        type: {
          name: "String",
        },
      },
      timeRange: {
        serializedName: "timeRange",
        type: {
          name: "String",
        },
      },
      perfDataStartTime: {
        serializedName: "perfDataStartTime",
        type: {
          name: "DateTime",
        },
      },
      perfDataEndTime: {
        serializedName: "perfDataEndTime",
        type: {
          name: "DateTime",
        },
      },
      stage: {
        serializedName: "stage",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      discountPercentage: {
        serializedName: "discountPercentage",
        type: {
          name: "Number",
        },
      },
      sizingCriterion: {
        serializedName: "sizingCriterion",
        type: {
          name: "String",
        },
      },
      confidenceRatingInPercentage: {
        serializedName: "confidenceRatingInPercentage",
        type: {
          name: "Number",
        },
      },
      pricesTimestamp: {
        serializedName: "pricesTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      createdTimestamp: {
        serializedName: "createdTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      updatedTimestamp: {
        serializedName: "updatedTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      status: {
        serializedName: "status",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      schemaVersion: {
        serializedName: "schemaVersion",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const CollectorPropertiesBaseWithAgent: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CollectorPropertiesBaseWithAgent",
    modelProperties: {
      ...AzureResourceProperties.type.modelProperties,
      agentProperties: {
        serializedName: "agentProperties",
        type: {
          name: "Composite",
          className: "CollectorAgentPropertiesBase",
        },
      },
      discoverySiteId: {
        serializedName: "discoverySiteId",
        type: {
          name: "String",
        },
      },
      createdTimestamp: {
        serializedName: "createdTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      updatedTimestamp: {
        serializedName: "updatedTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
    },
  },
};

export const CollectorPropertiesBase: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CollectorPropertiesBase",
    modelProperties: {
      ...AzureResourceProperties.type.modelProperties,
      discoverySiteId: {
        serializedName: "discoverySiteId",
        type: {
          name: "String",
        },
      },
      createdTimestamp: {
        serializedName: "createdTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      updatedTimestamp: {
        serializedName: "updatedTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
    },
  },
};

export const PrivateEndpointConnection: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PrivateEndpointConnection",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      groupIds: {
        serializedName: "properties.groupIds",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      privateEndpoint: {
        serializedName: "properties.privateEndpoint",
        type: {
          name: "Composite",
          className: "PrivateEndpoint",
        },
      },
      privateLinkServiceConnectionState: {
        serializedName: "properties.privateLinkServiceConnectionState",
        type: {
          name: "Composite",
          className: "PrivateLinkServiceConnectionState",
        },
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AssessmentOptions: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessmentOptions",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      vmFamilies: {
        serializedName: "properties.vmFamilies",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VmFamilyOptions",
            },
          },
        },
      },
      reservedInstanceVmFamilies: {
        serializedName: "properties.reservedInstanceVmFamilies",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      reservedInstanceSupportedLocations: {
        serializedName: "properties.reservedInstanceSupportedLocations",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      reservedInstanceSupportedCurrencies: {
        serializedName: "properties.reservedInstanceSupportedCurrencies",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      reservedInstanceSupportedOffers: {
        serializedName: "properties.reservedInstanceSupportedOffers",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      ultraDiskVmFamilies: {
        serializedName: "properties.ultraDiskVmFamilies",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "UltraDiskAssessmentOptions",
            },
          },
        },
      },
      premiumDiskVmFamilies: {
        serializedName: "properties.premiumDiskVmFamilies",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      savingsPlanVmFamilies: {
        serializedName: "properties.savingsPlanVmFamilies",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      savingsPlanSupportedLocations: {
        serializedName: "properties.savingsPlanSupportedLocations",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
    },
  },
};

export const AvsAssessmentOptions: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AvsAssessmentOptions",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      avsNodes: {
        serializedName: "properties.avsNodes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AvsSkuOptions",
            },
          },
        },
      },
      failuresToTolerateAndRaidLevelValues: {
        serializedName: "properties.failuresToTolerateAndRaidLevelValues",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      reservedInstanceAvsNodes: {
        serializedName: "properties.reservedInstanceAvsNodes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      reservedInstanceSupportedLocations: {
        serializedName: "properties.reservedInstanceSupportedLocations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      reservedInstanceSupportedCurrencies: {
        serializedName: "properties.reservedInstanceSupportedCurrencies",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      reservedInstanceSupportedOffers: {
        serializedName: "properties.reservedInstanceSupportedOffers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
    },
  },
};

export const Group: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Group",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String",
        },
      },
      groupStatus: {
        serializedName: "properties.groupStatus",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      machineCount: {
        serializedName: "properties.machineCount",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      assessments: {
        serializedName: "properties.assessments",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      supportedAssessmentTypes: {
        serializedName: "properties.supportedAssessmentTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      areAssessmentsRunning: {
        serializedName: "properties.areAssessmentsRunning",
        readOnly: true,
        type: {
          name: "Boolean",
        },
      },
      createdTimestamp: {
        serializedName: "properties.createdTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      updatedTimestamp: {
        serializedName: "properties.updatedTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      groupType: {
        serializedName: "properties.groupType",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const Assessment: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Assessment",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String",
        },
      },
      assessmentErrorSummary: {
        serializedName: "properties.assessmentErrorSummary",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } },
        },
      },
      monthlyUltraStorageCost: {
        serializedName: "properties.monthlyUltraStorageCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      costComponents: {
        serializedName: "properties.costComponents",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CostComponent",
            },
          },
        },
      },
      eaSubscriptionId: {
        serializedName: "properties.eaSubscriptionId",
        type: {
          name: "String",
        },
      },
      azurePricingTier: {
        serializedName: "properties.azurePricingTier",
        type: {
          name: "String",
        },
      },
      azureStorageRedundancy: {
        serializedName: "properties.azureStorageRedundancy",
        type: {
          name: "String",
        },
      },
      reservedInstance: {
        serializedName: "properties.reservedInstance",
        type: {
          name: "String",
        },
      },
      azureHybridUseBenefit: {
        serializedName: "properties.azureHybridUseBenefit",
        type: {
          name: "String",
        },
      },
      azureDiskTypes: {
        serializedName: "properties.azureDiskTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      azureVmFamilies: {
        serializedName: "properties.azureVmFamilies",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      distributionBySupportStatus: {
        serializedName: "properties.distributionBySupportStatus",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } },
        },
      },
      distributionByServicePackInsight: {
        serializedName: "properties.distributionByServicePackInsight",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } },
        },
      },
      distributionByOsName: {
        serializedName: "properties.distributionByOsName",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } },
        },
      },
      monthlyComputeCost: {
        serializedName: "properties.monthlyComputeCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      monthlyBandwidthCost: {
        serializedName: "properties.monthlyBandwidthCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      monthlyStorageCost: {
        serializedName: "properties.monthlyStorageCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      monthlyPremiumStorageCost: {
        serializedName: "properties.monthlyPremiumStorageCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      monthlyStandardSsdStorageCost: {
        serializedName: "properties.monthlyStandardSsdStorageCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      suitabilitySummary: {
        serializedName: "properties.suitabilitySummary",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } },
        },
      },
      numberOfMachines: {
        serializedName: "properties.numberOfMachines",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      vmUptime: {
        serializedName: "properties.vmUptime",
        type: {
          name: "Composite",
          className: "VmUptime",
        },
      },
      groupType: {
        serializedName: "properties.groupType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      assessmentType: {
        serializedName: "properties.assessmentType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      azureLocation: {
        serializedName: "properties.azureLocation",
        type: {
          name: "String",
        },
      },
      azureOfferCode: {
        serializedName: "properties.azureOfferCode",
        type: {
          name: "String",
        },
      },
      currency: {
        serializedName: "properties.currency",
        type: {
          name: "String",
        },
      },
      scalingFactor: {
        serializedName: "properties.scalingFactor",
        type: {
          name: "Number",
        },
      },
      percentile: {
        serializedName: "properties.percentile",
        type: {
          name: "String",
        },
      },
      timeRange: {
        serializedName: "properties.timeRange",
        type: {
          name: "String",
        },
      },
      perfDataStartTime: {
        serializedName: "properties.perfDataStartTime",
        type: {
          name: "DateTime",
        },
      },
      perfDataEndTime: {
        serializedName: "properties.perfDataEndTime",
        type: {
          name: "DateTime",
        },
      },
      stage: {
        serializedName: "properties.stage",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      discountPercentage: {
        serializedName: "properties.discountPercentage",
        type: {
          name: "Number",
        },
      },
      sizingCriterion: {
        serializedName: "properties.sizingCriterion",
        type: {
          name: "String",
        },
      },
      confidenceRatingInPercentage: {
        serializedName: "properties.confidenceRatingInPercentage",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      pricesTimestamp: {
        serializedName: "properties.pricesTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      createdTimestamp: {
        serializedName: "properties.createdTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      updatedTimestamp: {
        serializedName: "properties.updatedTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      status: {
        serializedName: "properties.status",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      schemaVersion: {
        serializedName: "properties.schemaVersion",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AssessedMachine: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessedMachine",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      errors: {
        serializedName: "properties.errors",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorModel",
            },
          },
        },
      },
      disks: {
        serializedName: "properties.disks",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "Composite", className: "AssessedDisk" } },
        },
      },
      monthlyUltraStorageCost: {
        serializedName: "properties.monthlyUltraStorageCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      hostProcessor: {
        serializedName: "properties.hostProcessor",
        type: {
          name: "Composite",
          className: "ProcessorInfo",
        },
      },
      costComponents: {
        serializedName: "properties.costComponents",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CostComponent",
            },
          },
        },
      },
      productSupportStatus: {
        serializedName: "properties.productSupportStatus",
        type: {
          name: "Composite",
          className: "ProductSupportStatus",
        },
      },
      monthlyBandwidthCost: {
        serializedName: "properties.monthlyBandwidthCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      monthlyStorageCost: {
        serializedName: "properties.monthlyStorageCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      monthlyPremiumStorageCost: {
        serializedName: "properties.monthlyPremiumStorageCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      monthlyStandardSsdStorageCost: {
        serializedName: "properties.monthlyStandardSsdStorageCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      networkAdapters: {
        serializedName: "properties.networkAdapters",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Composite", className: "AssessedNetworkAdapter" },
          },
        },
      },
      recommendedSize: {
        serializedName: "properties.recommendedSize",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      numberOfCoresForRecommendedSize: {
        serializedName: "properties.numberOfCoresForRecommendedSize",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      megabytesOfMemoryForRecommendedSize: {
        serializedName: "properties.megabytesOfMemoryForRecommendedSize",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      monthlyComputeCostForRecommendedSize: {
        serializedName: "properties.monthlyComputeCostForRecommendedSize",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      suitabilityExplanation: {
        serializedName: "properties.suitabilityExplanation",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      suitabilityDetail: {
        serializedName: "properties.suitabilityDetail",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      typePropertiesType: {
        serializedName: "properties.type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      bootType: {
        serializedName: "properties.bootType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      operatingSystemType: {
        serializedName: "properties.operatingSystemType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      operatingSystemName: {
        serializedName: "properties.operatingSystemName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      operatingSystemVersion: {
        serializedName: "properties.operatingSystemVersion",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      operatingSystemArchitecture: {
        serializedName: "properties.operatingSystemArchitecture",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      createdTimestamp: {
        serializedName: "properties.createdTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      updatedTimestamp: {
        serializedName: "properties.updatedTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      displayName: {
        serializedName: "properties.displayName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      description: {
        serializedName: "properties.description",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      datacenterMachineArmId: {
        serializedName: "properties.datacenterMachineArmId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      datacenterManagementServerArmId: {
        serializedName: "properties.datacenterManagementServerArmId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      datacenterManagementServerName: {
        serializedName: "properties.datacenterManagementServerName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      megabytesOfMemory: {
        serializedName: "properties.megabytesOfMemory",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      numberOfCores: {
        serializedName: "properties.numberOfCores",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      confidenceRatingInPercentage: {
        serializedName: "properties.confidenceRatingInPercentage",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      percentageCoresUtilization: {
        serializedName: "properties.percentageCoresUtilization",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      percentageMemoryUtilization: {
        serializedName: "properties.percentageMemoryUtilization",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      suitability: {
        serializedName: "properties.suitability",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AvsAssessment: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AvsAssessment",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String",
        },
      },
      assessmentErrorSummary: {
        serializedName: "properties.assessmentErrorSummary",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } },
        },
      },
      failuresToTolerateAndRaidLevel: {
        serializedName: "properties.failuresToTolerateAndRaidLevel",
        type: {
          name: "String",
        },
      },
      vcpuOversubscription: {
        serializedName: "properties.vcpuOversubscription",
        type: {
          name: "Number",
        },
      },
      nodeType: {
        serializedName: "properties.nodeType",
        type: {
          name: "String",
        },
      },
      reservedInstance: {
        serializedName: "properties.reservedInstance",
        type: {
          name: "String",
        },
      },
      totalMonthlyCost: {
        serializedName: "properties.totalMonthlyCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      suitability: {
        serializedName: "properties.suitability",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      suitabilityExplanation: {
        serializedName: "properties.suitabilityExplanation",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      numberOfNodes: {
        serializedName: "properties.numberOfNodes",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      cpuUtilization: {
        serializedName: "properties.cpuUtilization",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      ramUtilization: {
        serializedName: "properties.ramUtilization",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      storageUtilization: {
        serializedName: "properties.storageUtilization",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      totalCpuCores: {
        serializedName: "properties.totalCpuCores",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      totalRamInGB: {
        serializedName: "properties.totalRamInGB",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      totalStorageInGB: {
        serializedName: "properties.totalStorageInGB",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      numberOfMachines: {
        serializedName: "properties.numberOfMachines",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      suitabilitySummary: {
        serializedName: "properties.suitabilitySummary",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } },
        },
      },
      memOvercommit: {
        serializedName: "properties.memOvercommit",
        type: {
          name: "Number",
        },
      },
      dedupeCompression: {
        serializedName: "properties.dedupeCompression",
        type: {
          name: "Number",
        },
      },
      limitingFactor: {
        serializedName: "properties.limitingFactor",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      isStretchClusterEnabled: {
        serializedName: "properties.isStretchClusterEnabled",
        type: {
          name: "Boolean",
        },
      },
      groupType: {
        serializedName: "properties.groupType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      assessmentType: {
        serializedName: "properties.assessmentType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      azureLocation: {
        serializedName: "properties.azureLocation",
        type: {
          name: "String",
        },
      },
      azureOfferCode: {
        serializedName: "properties.azureOfferCode",
        type: {
          name: "String",
        },
      },
      currency: {
        serializedName: "properties.currency",
        type: {
          name: "String",
        },
      },
      scalingFactor: {
        serializedName: "properties.scalingFactor",
        type: {
          name: "Number",
        },
      },
      percentile: {
        serializedName: "properties.percentile",
        type: {
          name: "String",
        },
      },
      timeRange: {
        serializedName: "properties.timeRange",
        type: {
          name: "String",
        },
      },
      perfDataStartTime: {
        serializedName: "properties.perfDataStartTime",
        type: {
          name: "DateTime",
        },
      },
      perfDataEndTime: {
        serializedName: "properties.perfDataEndTime",
        type: {
          name: "DateTime",
        },
      },
      stage: {
        serializedName: "properties.stage",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      discountPercentage: {
        serializedName: "properties.discountPercentage",
        type: {
          name: "Number",
        },
      },
      sizingCriterion: {
        serializedName: "properties.sizingCriterion",
        type: {
          name: "String",
        },
      },
      confidenceRatingInPercentage: {
        serializedName: "properties.confidenceRatingInPercentage",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      pricesTimestamp: {
        serializedName: "properties.pricesTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      createdTimestamp: {
        serializedName: "properties.createdTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      updatedTimestamp: {
        serializedName: "properties.updatedTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      status: {
        serializedName: "properties.status",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      schemaVersion: {
        serializedName: "properties.schemaVersion",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AvsAssessedMachine: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AvsAssessedMachine",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      errors: {
        serializedName: "properties.errors",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorModel",
            },
          },
        },
      },
      disks: {
        serializedName: "properties.disks",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "Composite", className: "AvsAssessedDisk" } },
        },
      },
      networkAdapters: {
        serializedName: "properties.networkAdapters",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Composite", className: "AvsAssessedNetworkAdapter" },
          },
        },
      },
      storageInUseGB: {
        serializedName: "properties.storageInUseGB",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      suitabilityExplanation: {
        serializedName: "properties.suitabilityExplanation",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      suitabilityDetail: {
        serializedName: "properties.suitabilityDetail",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      typePropertiesType: {
        serializedName: "properties.type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      bootType: {
        serializedName: "properties.bootType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      operatingSystemType: {
        serializedName: "properties.operatingSystemType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      operatingSystemName: {
        serializedName: "properties.operatingSystemName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      operatingSystemVersion: {
        serializedName: "properties.operatingSystemVersion",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      operatingSystemArchitecture: {
        serializedName: "properties.operatingSystemArchitecture",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      createdTimestamp: {
        serializedName: "properties.createdTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      updatedTimestamp: {
        serializedName: "properties.updatedTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      displayName: {
        serializedName: "properties.displayName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      description: {
        serializedName: "properties.description",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      datacenterMachineArmId: {
        serializedName: "properties.datacenterMachineArmId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      datacenterManagementServerArmId: {
        serializedName: "properties.datacenterManagementServerArmId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      datacenterManagementServerName: {
        serializedName: "properties.datacenterManagementServerName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      megabytesOfMemory: {
        serializedName: "properties.megabytesOfMemory",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      numberOfCores: {
        serializedName: "properties.numberOfCores",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      confidenceRatingInPercentage: {
        serializedName: "properties.confidenceRatingInPercentage",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      percentageCoresUtilization: {
        serializedName: "properties.percentageCoresUtilization",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      percentageMemoryUtilization: {
        serializedName: "properties.percentageMemoryUtilization",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      suitability: {
        serializedName: "properties.suitability",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SqlAssessmentV2: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SqlAssessmentV2",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String",
        },
      },
      osLicense: {
        serializedName: "properties.osLicense",
        type: {
          name: "String",
        },
      },
      environmentType: {
        serializedName: "properties.environmentType",
        type: {
          name: "String",
        },
      },
      entityUptime: {
        serializedName: "properties.entityUptime",
        type: {
          name: "Composite",
          className: "EntityUptime",
        },
      },
      optimizationLogic: {
        serializedName: "properties.optimizationLogic",
        type: {
          name: "String",
        },
      },
      reservedInstanceForVm: {
        serializedName: "properties.reservedInstanceForVm",
        type: {
          name: "String",
        },
      },
      azureOfferCodeForVm: {
        serializedName: "properties.azureOfferCodeForVm",
        type: {
          name: "String",
        },
      },
      eaSubscriptionId: {
        serializedName: "properties.eaSubscriptionId",
        type: {
          name: "String",
        },
      },
      azureSqlManagedInstanceSettings: {
        serializedName: "properties.azureSqlManagedInstanceSettings",
        type: {
          name: "Composite",
          className: "SqlMiSettings",
        },
      },
      azureSqlDatabaseSettings: {
        serializedName: "properties.azureSqlDatabaseSettings",
        type: {
          name: "Composite",
          className: "SqlDbSettings",
        },
      },
      azureSqlVmSettings: {
        serializedName: "properties.azureSqlVmSettings",
        type: {
          name: "Composite",
          className: "SqlVmSettings",
        },
      },
      multiSubnetIntent: {
        serializedName: "properties.multiSubnetIntent",
        type: {
          name: "String",
        },
      },
      asyncCommitModeIntent: {
        serializedName: "properties.asyncCommitModeIntent",
        type: {
          name: "String",
        },
      },
      isInternetAccessAvailable: {
        serializedName: "properties.isInternetAccessAvailable",
        type: {
          name: "Boolean",
        },
      },
      disasterRecoveryLocation: {
        serializedName: "properties.disasterRecoveryLocation",
        type: {
          name: "String",
        },
      },
      enableHadrAssessment: {
        serializedName: "properties.enableHadrAssessment",
        type: {
          name: "Boolean",
        },
      },
      azureSecurityOfferingType: {
        serializedName: "properties.azureSecurityOfferingType",
        type: {
          name: "String",
        },
      },
      reservedInstance: {
        serializedName: "properties.reservedInstance",
        type: {
          name: "String",
        },
      },
      sqlServerLicense: {
        serializedName: "properties.sqlServerLicense",
        type: {
          name: "String",
        },
      },
      groupType: {
        serializedName: "properties.groupType",
        type: {
          name: "String",
        },
      },
      assessmentType: {
        serializedName: "properties.assessmentType",
        type: {
          name: "String",
        },
      },
      azureLocation: {
        serializedName: "properties.azureLocation",
        type: {
          name: "String",
        },
      },
      azureOfferCode: {
        serializedName: "properties.azureOfferCode",
        type: {
          name: "String",
        },
      },
      currency: {
        serializedName: "properties.currency",
        type: {
          name: "String",
        },
      },
      scalingFactor: {
        serializedName: "properties.scalingFactor",
        type: {
          name: "Number",
        },
      },
      percentile: {
        serializedName: "properties.percentile",
        type: {
          name: "String",
        },
      },
      timeRange: {
        serializedName: "properties.timeRange",
        type: {
          name: "String",
        },
      },
      perfDataStartTime: {
        serializedName: "properties.perfDataStartTime",
        type: {
          name: "DateTime",
        },
      },
      perfDataEndTime: {
        serializedName: "properties.perfDataEndTime",
        type: {
          name: "DateTime",
        },
      },
      stage: {
        serializedName: "properties.stage",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      discountPercentage: {
        serializedName: "properties.discountPercentage",
        type: {
          name: "Number",
        },
      },
      sizingCriterion: {
        serializedName: "properties.sizingCriterion",
        type: {
          name: "String",
        },
      },
      confidenceRatingInPercentage: {
        serializedName: "properties.confidenceRatingInPercentage",
        type: {
          name: "Number",
        },
      },
      pricesTimestamp: {
        serializedName: "properties.pricesTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      createdTimestamp: {
        serializedName: "properties.createdTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      updatedTimestamp: {
        serializedName: "properties.updatedTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      status: {
        serializedName: "properties.status",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      schemaVersion: {
        serializedName: "properties.schemaVersion",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AssessedSqlDatabaseV2: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessedSqlDatabaseV2",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      recommendedAzureSqlTargetType: {
        serializedName: "properties.recommendedAzureSqlTargetType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      recommendedSuitability: {
        serializedName: "properties.recommendedSuitability",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      bufferCacheSizeInMB: {
        serializedName: "properties.bufferCacheSizeInMB",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      productSupportStatus: {
        serializedName: "properties.productSupportStatus",
        type: {
          name: "Composite",
          className: "ProductSupportStatus",
        },
      },
      azureSqlMISuitabilityDetails: {
        serializedName: "properties.azureSqlMISuitabilityDetails",
        type: {
          name: "Composite",
          className: "SqlAssessmentV2PaasSuitabilityData",
        },
      },
      azureSqlDBSuitabilityDetails: {
        serializedName: "properties.azureSqlDBSuitabilityDetails",
        type: {
          name: "Composite",
          className: "SqlAssessmentV2PaasSuitabilityData",
        },
      },
      isDatabaseHighlyAvailable: {
        serializedName: "properties.isDatabaseHighlyAvailable",
        readOnly: true,
        type: {
          name: "Boolean",
        },
      },
      linkedAvailabilityGroupOverview: {
        serializedName: "properties.linkedAvailabilityGroupOverview",
        type: {
          name: "Composite",
          className: "SqlAvailabilityGroupDataOverview",
        },
      },
      machineArmId: {
        serializedName: "properties.machineArmId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      assessedSqlInstanceArmId: {
        serializedName: "properties.assessedSqlInstanceArmId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      machineName: {
        serializedName: "properties.machineName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      instanceName: {
        serializedName: "properties.instanceName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      databaseName: {
        serializedName: "properties.databaseName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      databaseSizeInMB: {
        serializedName: "properties.databaseSizeInMB",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      compatibilityLevel: {
        serializedName: "properties.compatibilityLevel",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      sqlDatabaseSdsArmId: {
        serializedName: "properties.sqlDatabaseSdsArmId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      percentageCoresUtilization: {
        serializedName: "properties.percentageCoresUtilization",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      megabytesPerSecondOfRead: {
        serializedName: "properties.megabytesPerSecondOfRead",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      megabytesPerSecondOfWrite: {
        serializedName: "properties.megabytesPerSecondOfWrite",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      numberOfReadOperationsPerSecond: {
        serializedName: "properties.numberOfReadOperationsPerSecond",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      numberOfWriteOperationsPerSecond: {
        serializedName: "properties.numberOfWriteOperationsPerSecond",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      confidenceRatingInPercentage: {
        serializedName: "properties.confidenceRatingInPercentage",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      sizingCriterion: {
        serializedName: "properties.sizingCriterion",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      createdTimestamp: {
        serializedName: "properties.createdTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      updatedTimestamp: {
        serializedName: "properties.updatedTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
    },
  },
};

export const AssessedSqlInstanceV2: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessedSqlInstanceV2",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      memoryInUseInMB: {
        serializedName: "properties.memoryInUseInMB",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      hasScanOccurred: {
        serializedName: "properties.hasScanOccurred",
        readOnly: true,
        type: {
          name: "Boolean",
        },
      },
      recommendedAzureSqlTargetType: {
        serializedName: "properties.recommendedAzureSqlTargetType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      recommendedSuitability: {
        serializedName: "properties.recommendedSuitability",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      azureSqlMISuitabilityDetails: {
        serializedName: "properties.azureSqlMISuitabilityDetails",
        type: {
          name: "Composite",
          className: "SqlAssessmentV2PaasSuitabilityData",
        },
      },
      azureSqlDBSuitabilityDetails: {
        serializedName: "properties.azureSqlDBSuitabilityDetails",
        type: {
          name: "Composite",
          className: "SqlAssessmentV2PaasSuitabilityData",
        },
      },
      azureSqlVMSuitabilityDetails: {
        serializedName: "properties.azureSqlVMSuitabilityDetails",
        type: {
          name: "Composite",
          className: "SqlAssessmentV2IaasSuitabilityData",
        },
      },
      storageTypeBasedDetails: {
        serializedName: "properties.storageTypeBasedDetails",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AssessedSqlInstanceStorageDetails",
            },
          },
        },
      },
      productSupportStatus: {
        serializedName: "properties.productSupportStatus",
        type: {
          name: "Composite",
          className: "ProductSupportStatus",
        },
      },
      fciMetadata: {
        serializedName: "properties.fciMetadata",
        type: {
          name: "Composite",
          className: "SqlFCIMetadata",
        },
      },
      availabilityReplicaSummary: {
        serializedName: "properties.availabilityReplicaSummary",
        type: {
          name: "Composite",
          className: "SqlAvailabilityReplicaSummary",
        },
      },
      isClustered: {
        serializedName: "properties.isClustered",
        readOnly: true,
        type: {
          name: "Boolean",
        },
      },
      isHighAvailabilityEnabled: {
        serializedName: "properties.isHighAvailabilityEnabled",
        readOnly: true,
        type: {
          name: "Boolean",
        },
      },
      recommendedTargetReasonings: {
        serializedName: "properties.recommendedTargetReasonings",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SqlRecommendationReasoning",
            },
          },
        },
      },
      machineArmId: {
        serializedName: "properties.machineArmId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      machineName: {
        serializedName: "properties.machineName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      instanceName: {
        serializedName: "properties.instanceName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      sqlInstanceSdsArmId: {
        serializedName: "properties.sqlInstanceSdsArmId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      sqlEdition: {
        serializedName: "properties.sqlEdition",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      sqlVersion: {
        serializedName: "properties.sqlVersion",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      numberOfCoresAllocated: {
        serializedName: "properties.numberOfCoresAllocated",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      percentageCoresUtilization: {
        serializedName: "properties.percentageCoresUtilization",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      logicalDisks: {
        serializedName: "properties.logicalDisks",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AssessedSqlInstanceDiskDetails",
            },
          },
        },
      },
      databaseSummary: {
        serializedName: "properties.databaseSummary",
        type: {
          name: "Composite",
          className: "AssessedSqlInstanceDatabaseSummary",
        },
      },
      confidenceRatingInPercentage: {
        serializedName: "properties.confidenceRatingInPercentage",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      sizingCriterion: {
        serializedName: "properties.sizingCriterion",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      createdTimestamp: {
        serializedName: "properties.createdTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      updatedTimestamp: {
        serializedName: "properties.updatedTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
    },
  },
};

export const AssessedSqlMachine: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessedSqlMachine",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      biosGuid: {
        serializedName: "properties.biosGuid",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      fqdn: {
        serializedName: "properties.fqdn",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      sqlInstances: {
        serializedName: "properties.sqlInstances",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AssessedSqlInstanceSummary",
            },
          },
        },
      },
      suitabilityDetail: {
        serializedName: "properties.suitabilityDetail",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      suitabilityExplanation: {
        serializedName: "properties.suitabilityExplanation",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      recommendedVmSize: {
        serializedName: "properties.recommendedVmSize",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      recommendedVmFamily: {
        serializedName: "properties.recommendedVmFamily",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      productSupportStatus: {
        serializedName: "properties.productSupportStatus",
        type: {
          name: "Composite",
          className: "ProductSupportStatus",
        },
      },
      recommendedVmSizeNumberOfCores: {
        serializedName: "properties.recommendedVmSizeNumberOfCores",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      recommendedVmSizeMegabytesOfMemory: {
        serializedName: "properties.recommendedVmSizeMegabytesOfMemory",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      monthlyComputeCost: {
        serializedName: "properties.monthlyComputeCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      disks: {
        serializedName: "properties.disks",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "Composite", className: "AssessedDiskData" } },
        },
      },
      networkAdapters: {
        serializedName: "properties.networkAdapters",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: {
            type: { name: "Composite", className: "SqlAssessedNetworkAdapter" },
          },
        },
      },
      monthlyBandwidthCost: {
        serializedName: "properties.monthlyBandwidthCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      monthlyStorageCost: {
        serializedName: "properties.monthlyStorageCost",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      costComponents: {
        serializedName: "properties.costComponents",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CostComponent",
            },
          },
        },
      },
      securitySuitability: {
        serializedName: "properties.securitySuitability",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      migrationGuidelines: {
        serializedName: "properties.migrationGuidelines",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SqlMigrationGuideline",
            },
          },
        },
      },
      bootType: {
        serializedName: "properties.bootType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      operatingSystemType: {
        serializedName: "properties.operatingSystemType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      operatingSystemName: {
        serializedName: "properties.operatingSystemName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      operatingSystemVersion: {
        serializedName: "properties.operatingSystemVersion",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      operatingSystemArchitecture: {
        serializedName: "properties.operatingSystemArchitecture",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      createdTimestamp: {
        serializedName: "properties.createdTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      updatedTimestamp: {
        serializedName: "properties.updatedTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      displayName: {
        serializedName: "properties.displayName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      typePropertiesType: {
        serializedName: "properties.type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      description: {
        serializedName: "properties.description",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      datacenterMachineArmId: {
        serializedName: "properties.datacenterMachineArmId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      datacenterManagementServerArmId: {
        serializedName: "properties.datacenterManagementServerArmId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      datacenterManagementServerName: {
        serializedName: "properties.datacenterManagementServerName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      megabytesOfMemory: {
        serializedName: "properties.megabytesOfMemory",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      numberOfCores: {
        serializedName: "properties.numberOfCores",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      confidenceRatingInPercentage: {
        serializedName: "properties.confidenceRatingInPercentage",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      percentageCoresUtilization: {
        serializedName: "properties.percentageCoresUtilization",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      percentageMemoryUtilization: {
        serializedName: "properties.percentageMemoryUtilization",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      suitability: {
        serializedName: "properties.suitability",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      sizingCriterion: {
        serializedName: "properties.sizingCriterion",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AssessedSqlRecommendedEntity: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessedSqlRecommendedEntity",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      machineName: {
        serializedName: "properties.machineName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      instanceName: {
        serializedName: "properties.instanceName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      productSupportStatus: {
        serializedName: "properties.productSupportStatus",
        type: {
          name: "Composite",
          className: "ProductSupportStatus",
        },
      },
      dbCount: {
        serializedName: "properties.dbCount",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      discoveredDBCount: {
        serializedName: "properties.discoveredDBCount",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      hasScanOccurred: {
        serializedName: "properties.hasScanOccurred",
        readOnly: true,
        type: {
          name: "Boolean",
        },
      },
      recommendedAzureSqlTargetType: {
        serializedName: "properties.recommendedAzureSqlTargetType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      recommendedSuitability: {
        serializedName: "properties.recommendedSuitability",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      azureSqlMISuitabilityDetails: {
        serializedName: "properties.azureSqlMISuitabilityDetails",
        type: {
          name: "Composite",
          className: "SqlAssessmentV2PaasSuitabilityData",
        },
      },
      azureSqlDBSuitabilityDetails: {
        serializedName: "properties.azureSqlDBSuitabilityDetails",
        type: {
          name: "Composite",
          className: "SqlAssessmentV2PaasSuitabilityData",
        },
      },
      azureSqlVMSuitabilityDetails: {
        serializedName: "properties.azureSqlVMSuitabilityDetails",
        type: {
          name: "Composite",
          className: "SqlAssessmentV2IaasSuitabilityData",
        },
      },
      assessedSqlEntityArmId: {
        serializedName: "properties.assessedSqlEntityArmId",
        type: {
          name: "String",
        },
      },
      isClustered: {
        serializedName: "properties.isClustered",
        readOnly: true,
        type: {
          name: "Boolean",
        },
      },
      isHighAvailabilityEnabled: {
        serializedName: "properties.isHighAvailabilityEnabled",
        readOnly: true,
        type: {
          name: "Boolean",
        },
      },
      sqlEdition: {
        serializedName: "properties.sqlEdition",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      sqlVersion: {
        serializedName: "properties.sqlVersion",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      sizingCriterion: {
        serializedName: "properties.sizingCriterion",
        readOnly: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const SqlAssessmentV2Summary: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SqlAssessmentV2Summary",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      assessmentSummary: {
        serializedName: "properties.assessmentSummary",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className: "SqlAssessmentV2SummaryData",
            },
          },
        },
      },
      distributionBySupportStatus: {
        serializedName: "properties.distributionBySupportStatus",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } },
        },
      },
      distributionByServicePackInsight: {
        serializedName: "properties.distributionByServicePackInsight",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } },
        },
      },
      distributionBySqlVersion: {
        serializedName: "properties.distributionBySqlVersion",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } },
        },
      },
      distributionBySqlEdition: {
        serializedName: "properties.distributionBySqlEdition",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } },
        },
      },
      instanceDistributionBySizingCriterion: {
        serializedName: "properties.instanceDistributionBySizingCriterion",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } },
        },
      },
      databaseDistributionBySizingCriterion: {
        serializedName: "properties.databaseDistributionBySizingCriterion",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "Number" } },
        },
      },
      numberOfMachines: {
        serializedName: "properties.numberOfMachines",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      numberOfSqlInstances: {
        serializedName: "properties.numberOfSqlInstances",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      numberOfSuccessfullyDiscoveredSqlInstances: {
        serializedName: "properties.numberOfSuccessfullyDiscoveredSqlInstances",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      numberOfSqlDatabases: {
        serializedName: "properties.numberOfSqlDatabases",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      numberOfFciInstances: {
        serializedName: "properties.numberOfFciInstances",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      numberOfSqlAvailabilityGroups: {
        serializedName: "properties.numberOfSqlAvailabilityGroups",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const HypervCollector: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "HypervCollector",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String",
        },
      },
      agentProperties: {
        serializedName: "properties.agentProperties",
        type: {
          name: "Composite",
          className: "CollectorAgentPropertiesBase",
        },
      },
      discoverySiteId: {
        serializedName: "properties.discoverySiteId",
        type: {
          name: "String",
        },
      },
      createdTimestamp: {
        serializedName: "properties.createdTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      updatedTimestamp: {
        serializedName: "properties.updatedTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
    },
  },
};

export const ImportCollector: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ImportCollector",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String",
        },
      },
      discoverySiteId: {
        serializedName: "properties.discoverySiteId",
        type: {
          name: "String",
        },
      },
      createdTimestamp: {
        serializedName: "properties.createdTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      updatedTimestamp: {
        serializedName: "properties.updatedTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
    },
  },
};

export const Machine: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Machine",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      workloadSummary: {
        serializedName: "properties.workloadSummary",
        type: {
          name: "Composite",
          className: "WorkloadSummary",
        },
      },
      errors: {
        serializedName: "properties.errors",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorModel",
            },
          },
        },
      },
      hostProcessor: {
        serializedName: "properties.hostProcessor",
        type: {
          name: "Composite",
          className: "ProcessorInfo",
        },
      },
      productSupportStatus: {
        serializedName: "properties.productSupportStatus",
        type: {
          name: "Composite",
          className: "ProductSupportStatus",
        },
      },
      discoveryMachineArmId: {
        serializedName: "properties.discoveryMachineArmId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      datacenterManagementServerArmId: {
        serializedName: "properties.datacenterManagementServerArmId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      datacenterManagementServerName: {
        serializedName: "properties.datacenterManagementServerName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      bootType: {
        serializedName: "properties.bootType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      displayName: {
        serializedName: "properties.displayName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      megabytesOfMemory: {
        serializedName: "properties.megabytesOfMemory",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      numberOfCores: {
        serializedName: "properties.numberOfCores",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      operatingSystemType: {
        serializedName: "properties.operatingSystemType",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      operatingSystemName: {
        serializedName: "properties.operatingSystemName",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      operatingSystemVersion: {
        serializedName: "properties.operatingSystemVersion",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      description: {
        serializedName: "properties.description",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      createdTimestamp: {
        serializedName: "properties.createdTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      disks: {
        serializedName: "properties.disks",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "Composite", className: "Disk" } },
        },
      },
      groups: {
        serializedName: "properties.groups",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      networkAdapters: {
        serializedName: "properties.networkAdapters",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "Composite", className: "NetworkAdapter" } },
        },
      },
      sqlInstances: {
        serializedName: "properties.sqlInstances",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      webApplications: {
        serializedName: "properties.webApplications",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      updatedTimestamp: {
        serializedName: "properties.updatedTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
    },
  },
};

export const PrivateLinkResource: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PrivateLinkResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      groupId: {
        serializedName: "properties.groupId",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      requiredMembers: {
        serializedName: "properties.requiredMembers",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      requiredZoneNames: {
        serializedName: "properties.requiredZoneNames",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
    },
  },
};

export const AssessmentProjectSummary: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessmentProjectSummary",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      errorSummaryAffectedEntities: {
        serializedName: "properties.errorSummaryAffectedEntities",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorSummary",
            },
          },
        },
      },
      numberOfPrivateEndpointConnections: {
        serializedName: "properties.numberOfPrivateEndpointConnections",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      numberOfGroups: {
        serializedName: "properties.numberOfGroups",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      numberOfMachines: {
        serializedName: "properties.numberOfMachines",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      numberOfImportMachines: {
        serializedName: "properties.numberOfImportMachines",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      numberOfAssessments: {
        serializedName: "properties.numberOfAssessments",
        readOnly: true,
        type: {
          name: "Number",
        },
      },
      lastAssessmentTimestamp: {
        serializedName: "properties.lastAssessmentTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
    },
  },
};

export const ServerCollector: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ServerCollector",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String",
        },
      },
      agentProperties: {
        serializedName: "properties.agentProperties",
        type: {
          name: "Composite",
          className: "CollectorAgentPropertiesBase",
        },
      },
      discoverySiteId: {
        serializedName: "properties.discoverySiteId",
        type: {
          name: "String",
        },
      },
      createdTimestamp: {
        serializedName: "properties.createdTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      updatedTimestamp: {
        serializedName: "properties.updatedTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
    },
  },
};

export const SqlAssessmentOptions: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SqlAssessmentOptions",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      vmFamilies: {
        serializedName: "properties.vmFamilies",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VmFamilyOptions",
            },
          },
        },
      },
      reservedInstanceVmFamilies: {
        serializedName: "properties.reservedInstanceVmFamilies",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      premiumDiskVmFamilies: {
        serializedName: "properties.premiumDiskVmFamilies",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      savingsPlanVmFamilies: {
        serializedName: "properties.savingsPlanVmFamilies",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      savingsPlanSupportedLocations: {
        serializedName: "properties.savingsPlanSupportedLocations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      savingsPlanSupportedLocationsForPaas: {
        serializedName: "properties.savingsPlanSupportedLocationsForPaas",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      reservedInstanceSupportedLocationsForIaas: {
        serializedName: "properties.reservedInstanceSupportedLocationsForIaas",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      savingsPlanSupportedOffers: {
        serializedName: "properties.savingsPlanSupportedOffers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      sqlSkus: {
        serializedName: "properties.sqlSkus",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SqlPaaSTargetOptions",
            },
          },
        },
      },
      reservedInstanceSqlTargets: {
        serializedName: "properties.reservedInstanceSqlTargets",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      reservedInstanceSupportedLocations: {
        serializedName: "properties.reservedInstanceSupportedLocations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      reservedInstanceSupportedCurrencies: {
        serializedName: "properties.reservedInstanceSupportedCurrencies",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      reservedInstanceSupportedOffers: {
        serializedName: "properties.reservedInstanceSupportedOffers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
      supportedOffers: {
        serializedName: "properties.supportedOffers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String",
            },
          },
        },
      },
    },
  },
};

export const SqlCollector: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SqlCollector",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String",
        },
      },
      agentProperties: {
        serializedName: "properties.agentProperties",
        type: {
          name: "Composite",
          className: "CollectorAgentPropertiesBase",
        },
      },
      discoverySiteId: {
        serializedName: "properties.discoverySiteId",
        type: {
          name: "String",
        },
      },
      createdTimestamp: {
        serializedName: "properties.createdTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      updatedTimestamp: {
        serializedName: "properties.updatedTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
    },
  },
};

export const VmwareCollector: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "VmwareCollector",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String",
        },
      },
      agentProperties: {
        serializedName: "properties.agentProperties",
        type: {
          name: "Composite",
          className: "CollectorAgentPropertiesBase",
        },
      },
      discoverySiteId: {
        serializedName: "properties.discoverySiteId",
        type: {
          name: "String",
        },
      },
      createdTimestamp: {
        serializedName: "properties.createdTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      updatedTimestamp: {
        serializedName: "properties.updatedTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
    },
  },
};

export const AssessmentProject: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessmentProject",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String",
        },
      },
      createdTimestamp: {
        serializedName: "properties.createdTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      updatedTimestamp: {
        serializedName: "properties.updatedTimestamp",
        readOnly: true,
        type: {
          name: "DateTime",
        },
      },
      serviceEndpoint: {
        serializedName: "properties.serviceEndpoint",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      assessmentSolutionId: {
        serializedName: "properties.assessmentSolutionId",
        type: {
          name: "String",
        },
      },
      projectStatus: {
        serializedName: "properties.projectStatus",
        type: {
          name: "String",
        },
      },
      customerWorkspaceId: {
        serializedName: "properties.customerWorkspaceId",
        type: {
          name: "String",
        },
      },
      customerWorkspaceLocation: {
        serializedName: "properties.customerWorkspaceLocation",
        type: {
          name: "String",
        },
      },
      publicNetworkAccess: {
        serializedName: "properties.publicNetworkAccess",
        type: {
          name: "String",
        },
      },
      privateEndpointConnections: {
        serializedName: "properties.privateEndpointConnections",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PrivateEndpointConnection",
            },
          },
        },
      },
      customerStorageAccountArmId: {
        serializedName: "properties.customerStorageAccountArmId",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AssessmentProjectsOperationsCreateHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "AssessmentProjectsOperationsCreateHeaders",
      modelProperties: {
        retryAfter: {
          serializedName: "retry-after",
          type: {
            name: "Number",
          },
        },
      },
    },
  };

export const AssessmentProjectsOperationsUpdateHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "AssessmentProjectsOperationsUpdateHeaders",
      modelProperties: {
        retryAfter: {
          serializedName: "retry-after",
          type: {
            name: "Number",
          },
        },
        location: {
          serializedName: "location",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const GroupsOperationsCreateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GroupsOperationsCreateHeaders",
    modelProperties: {
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const GroupsOperationsUpdateMachinesHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "GroupsOperationsUpdateMachinesHeaders",
      modelProperties: {
        retryAfter: {
          serializedName: "retry-after",
          type: {
            name: "Number",
          },
        },
        location: {
          serializedName: "location",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const AssessmentsOperationsCreateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssessmentsOperationsCreateHeaders",
    modelProperties: {
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const AssessmentsOperationsDownloadUrlHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "AssessmentsOperationsDownloadUrlHeaders",
      modelProperties: {
        retryAfter: {
          serializedName: "retry-after",
          type: {
            name: "Number",
          },
        },
        location: {
          serializedName: "location",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const AvsAssessmentsOperationsCreateHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "AvsAssessmentsOperationsCreateHeaders",
      modelProperties: {
        retryAfter: {
          serializedName: "retry-after",
          type: {
            name: "Number",
          },
        },
      },
    },
  };

export const AvsAssessmentsOperationsDownloadUrlHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "AvsAssessmentsOperationsDownloadUrlHeaders",
      modelProperties: {
        retryAfter: {
          serializedName: "retry-after",
          type: {
            name: "Number",
          },
        },
        location: {
          serializedName: "location",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const SqlAssessmentV2OperationsCreateHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "SqlAssessmentV2OperationsCreateHeaders",
      modelProperties: {
        retryAfter: {
          serializedName: "retry-after",
          type: {
            name: "Number",
          },
        },
      },
    },
  };

export const SqlAssessmentV2OperationsDownloadUrlHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "SqlAssessmentV2OperationsDownloadUrlHeaders",
      modelProperties: {
        retryAfter: {
          serializedName: "retry-after",
          type: {
            name: "Number",
          },
        },
        location: {
          serializedName: "location",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const HypervCollectorsOperationsCreateHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "HypervCollectorsOperationsCreateHeaders",
      modelProperties: {
        retryAfter: {
          serializedName: "retry-after",
          type: {
            name: "Number",
          },
        },
      },
    },
  };

export const ImportCollectorsOperationsCreateHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "ImportCollectorsOperationsCreateHeaders",
      modelProperties: {
        retryAfter: {
          serializedName: "retry-after",
          type: {
            name: "Number",
          },
        },
      },
    },
  };

export const PrivateEndpointConnectionOperationsUpdateHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "PrivateEndpointConnectionOperationsUpdateHeaders",
      modelProperties: {
        retryAfter: {
          serializedName: "retry-after",
          type: {
            name: "Number",
          },
        },
      },
    },
  };

export const ServerCollectorsOperationsCreateHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "ServerCollectorsOperationsCreateHeaders",
      modelProperties: {
        retryAfter: {
          serializedName: "retry-after",
          type: {
            name: "Number",
          },
        },
      },
    },
  };

export const SqlCollectorOperationsCreateHeaders: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SqlCollectorOperationsCreateHeaders",
    modelProperties: {
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const VmwareCollectorsOperationsCreateHeaders: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "VmwareCollectorsOperationsCreateHeaders",
      modelProperties: {
        retryAfter: {
          serializedName: "retry-after",
          type: {
            name: "Number",
          },
        },
      },
    },
  };
