/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  OperationParameter,
  OperationURLParameter,
  OperationQueryParameter,
} from "@azure/core-client";
import {
  AssessmentProject as AssessmentProjectMapper,
  AssessmentProjectUpdate as AssessmentProjectUpdateMapper,
  Group as GroupMapper,
  UpdateGroupBody as UpdateGroupBodyMapper,
  Assessment as AssessmentMapper,
  AvsAssessment as AvsAssessmentMapper,
  SqlAssessmentV2 as SqlAssessmentV2Mapper,
  HypervCollector as HypervCollectorMapper,
  ImportCollector as ImportCollectorMapper,
  PrivateEndpointConnection as PrivateEndpointConnectionMapper,
  ServerCollector as ServerCollectorMapper,
  SqlCollector as SqlCollectorMapper,
  VmwareCollector as VmwareCollectorMapper,
} from "../models/mappers.js";

export const accept: OperationParameter = {
  parameterPath: "accept",
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Accept",
    type: {
      name: "String",
    },
  },
};

export const $host: OperationURLParameter = {
  parameterPath: "$host",
  mapper: {
    serializedName: "$host",
    required: true,
    type: {
      name: "String",
    },
  },
  skipEncoding: true,
};

export const apiVersion: OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    defaultValue: "2023-03-15",
    isConstant: true,
    serializedName: "api-version",
    type: {
      name: "String",
    },
  },
};

export const nextLink: OperationURLParameter = {
  parameterPath: "nextLink",
  mapper: {
    serializedName: "nextLink",
    required: true,
    type: {
      name: "String",
    },
  },
  skipEncoding: true,
};

export const subscriptionId: OperationURLParameter = {
  parameterPath: "subscriptionId",
  mapper: {
    constraints: {
      MinLength: 1,
    },
    serializedName: "subscriptionId",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const resourceGroupName: OperationURLParameter = {
  parameterPath: "resourceGroupName",
  mapper: {
    constraints: {
      MaxLength: 90,
      MinLength: 1,
    },
    serializedName: "resourceGroupName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const projectName: OperationURLParameter = {
  parameterPath: "projectName",
  mapper: {
    constraints: {
      Pattern: new RegExp("^[^<>&:\\?/#]{1,260}$"),
    },
    serializedName: "projectName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const contentType: OperationParameter = {
  parameterPath: ["options", "contentType"],
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Content-Type",
    type: {
      name: "String",
    },
  },
};

export const resource: OperationParameter = {
  parameterPath: "resource",
  mapper: AssessmentProjectMapper,
};

export const properties: OperationParameter = {
  parameterPath: "properties",
  mapper: AssessmentProjectUpdateMapper,
};

export const assessmentOptionsName: OperationURLParameter = {
  parameterPath: "assessmentOptionsName",
  mapper: {
    constraints: {
      Pattern: new RegExp("^[^<>&:\\?/#]{1,260}$"),
    },
    serializedName: "assessmentOptionsName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const avsAssessmentOptionsName: OperationURLParameter = {
  parameterPath: "avsAssessmentOptionsName",
  mapper: {
    constraints: {
      Pattern: new RegExp("^[^<>&:\\?/#]{1,260}$"),
    },
    serializedName: "avsAssessmentOptionsName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const groupName: OperationURLParameter = {
  parameterPath: "groupName",
  mapper: {
    constraints: {
      Pattern: new RegExp("^[^<>&:\\?/#]{1,260}$"),
    },
    serializedName: "groupName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const resource1: OperationParameter = {
  parameterPath: "resource",
  mapper: GroupMapper,
};

export const body: OperationParameter = {
  parameterPath: "body",
  mapper: UpdateGroupBodyMapper,
};

export const assessmentName: OperationURLParameter = {
  parameterPath: "assessmentName",
  mapper: {
    constraints: {
      Pattern: new RegExp("^[^<>&:\\?/#]{1,260}$"),
    },
    serializedName: "assessmentName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const resource2: OperationParameter = {
  parameterPath: "resource",
  mapper: AssessmentMapper,
};

export const body1: OperationParameter = {
  parameterPath: "body",
  mapper: {
    serializedName: "body",
    required: true,
    type: {
      name: "Dictionary",
      value: { type: { name: "any" } },
    },
  },
};

export const filter: OperationQueryParameter = {
  parameterPath: ["options", "filter"],
  mapper: {
    serializedName: "$filter",
    type: {
      name: "String",
    },
  },
};

export const pageSize: OperationQueryParameter = {
  parameterPath: ["options", "pageSize"],
  mapper: {
    serializedName: "pageSize",
    type: {
      name: "Number",
    },
  },
};

export const continuationToken: OperationQueryParameter = {
  parameterPath: ["options", "continuationToken"],
  mapper: {
    serializedName: "continuationToken",
    type: {
      name: "String",
    },
  },
};

export const totalRecordCount: OperationQueryParameter = {
  parameterPath: ["options", "totalRecordCount"],
  mapper: {
    serializedName: "totalRecordCount",
    type: {
      name: "Number",
    },
  },
};

export const assessedMachineName: OperationURLParameter = {
  parameterPath: "assessedMachineName",
  mapper: {
    constraints: {
      Pattern: new RegExp("^[^<>&:\\?/#]{1,260}$"),
    },
    serializedName: "assessedMachineName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const resource3: OperationParameter = {
  parameterPath: "resource",
  mapper: AvsAssessmentMapper,
};

export const avsAssessedMachineName: OperationURLParameter = {
  parameterPath: "avsAssessedMachineName",
  mapper: {
    constraints: {
      Pattern: new RegExp("^[^<>&:\\?/#]{1,260}$"),
    },
    serializedName: "avsAssessedMachineName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const resource4: OperationParameter = {
  parameterPath: "resource",
  mapper: SqlAssessmentV2Mapper,
};

export const assessedSqlDatabaseName: OperationURLParameter = {
  parameterPath: "assessedSqlDatabaseName",
  mapper: {
    constraints: {
      Pattern: new RegExp("^[^<>&:\\?/#]{1,260}$"),
    },
    serializedName: "assessedSqlDatabaseName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const assessedSqlInstanceName: OperationURLParameter = {
  parameterPath: "assessedSqlInstanceName",
  mapper: {
    constraints: {
      Pattern: new RegExp("^[^<>&:\\?/#]{1,260}$"),
    },
    serializedName: "assessedSqlInstanceName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const assessedSqlMachineName: OperationURLParameter = {
  parameterPath: "assessedSqlMachineName",
  mapper: {
    constraints: {
      Pattern: new RegExp("^[^<>&:\\?/#]{1,260}$"),
    },
    serializedName: "assessedSqlMachineName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const recommendedAssessedEntityName: OperationURLParameter = {
  parameterPath: "recommendedAssessedEntityName",
  mapper: {
    constraints: {
      Pattern: new RegExp("^[^<>&:\\?/#]{1,260}$"),
    },
    serializedName: "recommendedAssessedEntityName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const summaryName: OperationURLParameter = {
  parameterPath: "summaryName",
  mapper: {
    constraints: {
      Pattern: new RegExp("^[^<>&:\\?/#]{1,260}$"),
    },
    serializedName: "summaryName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const hypervCollectorName: OperationURLParameter = {
  parameterPath: "hypervCollectorName",
  mapper: {
    constraints: {
      Pattern: new RegExp("^[^<>&:\\?/#]{1,260}$"),
    },
    serializedName: "hypervCollectorName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const resource5: OperationParameter = {
  parameterPath: "resource",
  mapper: HypervCollectorMapper,
};

export const importCollectorName: OperationURLParameter = {
  parameterPath: "importCollectorName",
  mapper: {
    constraints: {
      Pattern: new RegExp("^[^<>&:\\?/#]{1,260}$"),
    },
    serializedName: "importCollectorName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const resource6: OperationParameter = {
  parameterPath: "resource",
  mapper: ImportCollectorMapper,
};

export const machineName: OperationURLParameter = {
  parameterPath: "machineName",
  mapper: {
    constraints: {
      Pattern: new RegExp("^[^<>&:\\?/#]{1,260}$"),
    },
    serializedName: "machineName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const privateEndpointConnectionName: OperationURLParameter = {
  parameterPath: "privateEndpointConnectionName",
  mapper: {
    constraints: {
      Pattern: new RegExp("^[^<>&:\\?/#]{1,260}$"),
    },
    serializedName: "privateEndpointConnectionName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const resource7: OperationParameter = {
  parameterPath: "resource",
  mapper: PrivateEndpointConnectionMapper,
};

export const privateLinkResourceName: OperationURLParameter = {
  parameterPath: "privateLinkResourceName",
  mapper: {
    constraints: {
      Pattern: new RegExp("^[^<>&:\\?/#]{1,260}$"),
    },
    serializedName: "privateLinkResourceName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const projectSummaryName: OperationURLParameter = {
  parameterPath: "projectSummaryName",
  mapper: {
    constraints: {
      Pattern: new RegExp("^[^<>&:\\?/#]{1,260}$"),
    },
    serializedName: "projectSummaryName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const serverCollectorName: OperationURLParameter = {
  parameterPath: "serverCollectorName",
  mapper: {
    constraints: {
      Pattern: new RegExp("^[^<>&:\\?/#]{1,260}$"),
    },
    serializedName: "serverCollectorName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const resource8: OperationParameter = {
  parameterPath: "resource",
  mapper: ServerCollectorMapper,
};

export const collectorName: OperationURLParameter = {
  parameterPath: "collectorName",
  mapper: {
    constraints: {
      Pattern: new RegExp("^[^<>&:\\?/#]{1,260}$"),
    },
    serializedName: "collectorName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const resource9: OperationParameter = {
  parameterPath: "resource",
  mapper: SqlCollectorMapper,
};

export const vmWareCollectorName: OperationURLParameter = {
  parameterPath: "vmWareCollectorName",
  mapper: {
    constraints: {
      Pattern: new RegExp("^[^<>&:\\?/#]{1,260}$"),
    },
    serializedName: "vmWareCollectorName",
    required: true,
    type: {
      name: "String",
    },
  },
};

export const resource10: OperationParameter = {
  parameterPath: "resource",
  mapper: VmwareCollectorMapper,
};
