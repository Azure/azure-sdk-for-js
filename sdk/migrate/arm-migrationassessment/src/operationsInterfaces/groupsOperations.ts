/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  Group,
  GroupsOperationsListByAssessmentProjectOptionalParams,
  GroupsOperationsGetOptionalParams,
  GroupsOperationsGetResponse,
  GroupsOperationsCreateOptionalParams,
  GroupsOperationsCreateResponse,
  GroupsOperationsDeleteOptionalParams,
  UpdateGroupBody,
  GroupsOperationsUpdateMachinesOptionalParams,
  GroupsOperationsUpdateMachinesResponse,
} from "../models/index.js";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a GroupsOperations. */
export interface GroupsOperations {
  /**
   * List Group resources by AssessmentProject
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param projectName Assessment Project Name
   * @param options The options parameters.
   */
  listByAssessmentProject(
    resourceGroupName: string,
    projectName: string,
    options?: GroupsOperationsListByAssessmentProjectOptionalParams,
  ): PagedAsyncIterableIterator<Group>;
  /**
   * Get a Group
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param projectName Assessment Project Name
   * @param groupName Group ARM name
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    projectName: string,
    groupName: string,
    options?: GroupsOperationsGetOptionalParams,
  ): Promise<GroupsOperationsGetResponse>;
  /**
   * Create a Group
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param projectName Assessment Project Name
   * @param groupName Group ARM name
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreate(
    resourceGroupName: string,
    projectName: string,
    groupName: string,
    resource: Group,
    options?: GroupsOperationsCreateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<GroupsOperationsCreateResponse>,
      GroupsOperationsCreateResponse
    >
  >;
  /**
   * Create a Group
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param projectName Assessment Project Name
   * @param groupName Group ARM name
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateAndWait(
    resourceGroupName: string,
    projectName: string,
    groupName: string,
    resource: Group,
    options?: GroupsOperationsCreateOptionalParams,
  ): Promise<GroupsOperationsCreateResponse>;
  /**
   * Delete a Group
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param projectName Assessment Project Name
   * @param groupName Group ARM name
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    projectName: string,
    groupName: string,
    options?: GroupsOperationsDeleteOptionalParams,
  ): Promise<void>;
  /**
   * Update machines in group by adding or removing machines.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param projectName Assessment Project Name
   * @param groupName Group ARM name
   * @param body The content of the action request
   * @param options The options parameters.
   */
  beginUpdateMachines(
    resourceGroupName: string,
    projectName: string,
    groupName: string,
    body: UpdateGroupBody,
    options?: GroupsOperationsUpdateMachinesOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<GroupsOperationsUpdateMachinesResponse>,
      GroupsOperationsUpdateMachinesResponse
    >
  >;
  /**
   * Update machines in group by adding or removing machines.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param projectName Assessment Project Name
   * @param groupName Group ARM name
   * @param body The content of the action request
   * @param options The options parameters.
   */
  beginUpdateMachinesAndWait(
    resourceGroupName: string,
    projectName: string,
    groupName: string,
    body: UpdateGroupBody,
    options?: GroupsOperationsUpdateMachinesOptionalParams,
  ): Promise<GroupsOperationsUpdateMachinesResponse>;
}
