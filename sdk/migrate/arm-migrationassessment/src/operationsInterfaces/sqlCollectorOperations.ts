/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  SqlCollector,
  SqlCollectorOperationsListByAssessmentProjectOptionalParams,
  SqlCollectorOperationsGetOptionalParams,
  SqlCollectorOperationsGetResponse,
  SqlCollectorOperationsCreateOptionalParams,
  SqlCollectorOperationsCreateResponse,
  SqlCollectorOperationsDeleteOptionalParams,
} from "../models/index.js";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a SqlCollectorOperations. */
export interface SqlCollectorOperations {
  /**
   * List SqlCollector resources by AssessmentProject
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param projectName Assessment Project Name
   * @param options The options parameters.
   */
  listByAssessmentProject(
    resourceGroupName: string,
    projectName: string,
    options?: SqlCollectorOperationsListByAssessmentProjectOptionalParams,
  ): PagedAsyncIterableIterator<SqlCollector>;
  /**
   * Get a SqlCollector
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param projectName Assessment Project Name
   * @param collectorName Sql collector ARM name.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    projectName: string,
    collectorName: string,
    options?: SqlCollectorOperationsGetOptionalParams,
  ): Promise<SqlCollectorOperationsGetResponse>;
  /**
   * Create a SqlCollector
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param projectName Assessment Project Name
   * @param collectorName Sql collector ARM name.
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreate(
    resourceGroupName: string,
    projectName: string,
    collectorName: string,
    resource: SqlCollector,
    options?: SqlCollectorOperationsCreateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<SqlCollectorOperationsCreateResponse>,
      SqlCollectorOperationsCreateResponse
    >
  >;
  /**
   * Create a SqlCollector
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param projectName Assessment Project Name
   * @param collectorName Sql collector ARM name.
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateAndWait(
    resourceGroupName: string,
    projectName: string,
    collectorName: string,
    resource: SqlCollector,
    options?: SqlCollectorOperationsCreateOptionalParams,
  ): Promise<SqlCollectorOperationsCreateResponse>;
  /**
   * Delete a SqlCollector
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param projectName Assessment Project Name
   * @param collectorName Sql collector ARM name.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    projectName: string,
    collectorName: string,
    options?: SqlCollectorOperationsDeleteOptionalParams,
  ): Promise<void>;
}
