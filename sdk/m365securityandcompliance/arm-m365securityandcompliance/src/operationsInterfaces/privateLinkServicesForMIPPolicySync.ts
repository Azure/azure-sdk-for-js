/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  PrivateLinkServicesForMIPPolicySyncDescription,
  PrivateLinkServicesForMIPPolicySyncListOptionalParams,
  PrivateLinkServicesForMIPPolicySyncListByResourceGroupOptionalParams,
  PrivateLinkServicesForMIPPolicySyncGetOptionalParams,
  PrivateLinkServicesForMIPPolicySyncGetResponse,
  PrivateLinkServicesForMIPPolicySyncCreateOrUpdateOptionalParams,
  PrivateLinkServicesForMIPPolicySyncCreateOrUpdateResponse,
  ServicesPatchDescription,
  PrivateLinkServicesForMIPPolicySyncUpdateOptionalParams,
  PrivateLinkServicesForMIPPolicySyncUpdateResponse,
  PrivateLinkServicesForMIPPolicySyncDeleteOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a PrivateLinkServicesForMIPPolicySync. */
export interface PrivateLinkServicesForMIPPolicySync {
  /**
   * Get all the privateLinkServicesForMIPPolicySync instances in a subscription.
   * @param options The options parameters.
   */
  list(
    options?: PrivateLinkServicesForMIPPolicySyncListOptionalParams
  ): PagedAsyncIterableIterator<PrivateLinkServicesForMIPPolicySyncDescription>;
  /**
   * Get all the service instances in a resource group.
   * @param resourceGroupName The name of the resource group that contains the service instance.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: PrivateLinkServicesForMIPPolicySyncListByResourceGroupOptionalParams
  ): PagedAsyncIterableIterator<PrivateLinkServicesForMIPPolicySyncDescription>;
  /**
   * Get the metadata of a privateLinkServicesForMIPPolicySync resource.
   * @param resourceGroupName The name of the resource group that contains the service instance.
   * @param resourceName The name of the service instance.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    resourceName: string,
    options?: PrivateLinkServicesForMIPPolicySyncGetOptionalParams
  ): Promise<PrivateLinkServicesForMIPPolicySyncGetResponse>;
  /**
   * Create or update the metadata of a privateLinkServicesForMIPPolicySync instance.
   * @param resourceGroupName The name of the resource group that contains the service instance.
   * @param resourceName The name of the service instance.
   * @param privateLinkServicesForMIPPolicySyncDescription The service instance metadata.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    resourceName: string,
    privateLinkServicesForMIPPolicySyncDescription: PrivateLinkServicesForMIPPolicySyncDescription,
    options?: PrivateLinkServicesForMIPPolicySyncCreateOrUpdateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<
        PrivateLinkServicesForMIPPolicySyncCreateOrUpdateResponse
      >,
      PrivateLinkServicesForMIPPolicySyncCreateOrUpdateResponse
    >
  >;
  /**
   * Create or update the metadata of a privateLinkServicesForMIPPolicySync instance.
   * @param resourceGroupName The name of the resource group that contains the service instance.
   * @param resourceName The name of the service instance.
   * @param privateLinkServicesForMIPPolicySyncDescription The service instance metadata.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    resourceName: string,
    privateLinkServicesForMIPPolicySyncDescription: PrivateLinkServicesForMIPPolicySyncDescription,
    options?: PrivateLinkServicesForMIPPolicySyncCreateOrUpdateOptionalParams
  ): Promise<PrivateLinkServicesForMIPPolicySyncCreateOrUpdateResponse>;
  /**
   * Update the metadata of a privateLinkServicesForMIPPolicySync instance.
   * @param resourceGroupName The name of the resource group that contains the service instance.
   * @param resourceName The name of the service instance.
   * @param servicePatchDescription The service instance metadata and security metadata.
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    resourceName: string,
    servicePatchDescription: ServicesPatchDescription,
    options?: PrivateLinkServicesForMIPPolicySyncUpdateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<PrivateLinkServicesForMIPPolicySyncUpdateResponse>,
      PrivateLinkServicesForMIPPolicySyncUpdateResponse
    >
  >;
  /**
   * Update the metadata of a privateLinkServicesForMIPPolicySync instance.
   * @param resourceGroupName The name of the resource group that contains the service instance.
   * @param resourceName The name of the service instance.
   * @param servicePatchDescription The service instance metadata and security metadata.
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    resourceName: string,
    servicePatchDescription: ServicesPatchDescription,
    options?: PrivateLinkServicesForMIPPolicySyncUpdateOptionalParams
  ): Promise<PrivateLinkServicesForMIPPolicySyncUpdateResponse>;
  /**
   * Delete a service instance.
   * @param resourceGroupName The name of the resource group that contains the service instance.
   * @param resourceName The name of the service instance.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    resourceName: string,
    options?: PrivateLinkServicesForMIPPolicySyncDeleteOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Delete a service instance.
   * @param resourceGroupName The name of the resource group that contains the service instance.
   * @param resourceName The name of the service instance.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    resourceName: string,
    options?: PrivateLinkServicesForMIPPolicySyncDeleteOptionalParams
  ): Promise<void>;
}
