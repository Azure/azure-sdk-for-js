/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { CloudErrorMapper, BaseResourceMapper } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export const CloudError = CloudErrorMapper;
export const BaseResource = BaseResourceMapper;

export const ServiceAccessPolicyEntry: msRest.CompositeMapper = {
  serializedName: "ServiceAccessPolicyEntry",
  type: {
    name: "Composite",
    className: "ServiceAccessPolicyEntry",
    modelProperties: {
      objectId: {
        required: true,
        serializedName: "objectId",
        constraints: {
          Pattern: /^(([0-9A-Fa-f]{8}[-]?(?:[0-9A-Fa-f]{4}[-]?){3}[0-9A-Fa-f]{12}){1})+$/
        },
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServiceCosmosDbConfigurationInfo: msRest.CompositeMapper = {
  serializedName: "ServiceCosmosDbConfigurationInfo",
  type: {
    name: "Composite",
    className: "ServiceCosmosDbConfigurationInfo",
    modelProperties: {
      offerThroughput: {
        serializedName: "offerThroughput",
        constraints: {
          InclusiveMaximum: 10000,
          InclusiveMinimum: 400
        },
        type: {
          name: "Number"
        }
      },
      keyVaultKeyUri: {
        serializedName: "keyVaultKeyUri",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServiceAuthenticationConfigurationInfo: msRest.CompositeMapper = {
  serializedName: "ServiceAuthenticationConfigurationInfo",
  type: {
    name: "Composite",
    className: "ServiceAuthenticationConfigurationInfo",
    modelProperties: {
      authority: {
        serializedName: "authority",
        type: {
          name: "String"
        }
      },
      audience: {
        serializedName: "audience",
        type: {
          name: "String"
        }
      },
      smartProxyEnabled: {
        serializedName: "smartProxyEnabled",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const ServiceCorsConfigurationInfo: msRest.CompositeMapper = {
  serializedName: "ServiceCorsConfigurationInfo",
  type: {
    name: "Composite",
    className: "ServiceCorsConfigurationInfo",
    modelProperties: {
      origins: {
        serializedName: "origins",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      headers: {
        serializedName: "headers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      methods: {
        serializedName: "methods",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      maxAge: {
        serializedName: "maxAge",
        constraints: {
          InclusiveMaximum: 99999,
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      },
      allowCredentials: {
        serializedName: "allowCredentials",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const ServiceExportConfigurationInfo: msRest.CompositeMapper = {
  serializedName: "ServiceExportConfigurationInfo",
  type: {
    name: "Composite",
    className: "ServiceExportConfigurationInfo",
    modelProperties: {
      storageAccountName: {
        serializedName: "storageAccountName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SystemData: msRest.CompositeMapper = {
  serializedName: "systemData",
  type: {
    name: "Composite",
    className: "SystemData",
    modelProperties: {
      createdBy: {
        serializedName: "createdBy",
        type: {
          name: "String"
        }
      },
      createdByType: {
        serializedName: "createdByType",
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "createdAt",
        type: {
          name: "DateTime"
        }
      },
      lastModifiedBy: {
        serializedName: "lastModifiedBy",
        type: {
          name: "String"
        }
      },
      lastModifiedByType: {
        serializedName: "lastModifiedByType",
        type: {
          name: "String"
        }
      },
      lastModifiedAt: {
        serializedName: "lastModifiedAt",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const PrivateEndpoint: msRest.CompositeMapper = {
  serializedName: "PrivateEndpoint",
  type: {
    name: "Composite",
    className: "PrivateEndpoint",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PrivateLinkServiceConnectionState: msRest.CompositeMapper = {
  serializedName: "PrivateLinkServiceConnectionState",
  type: {
    name: "Composite",
    className: "PrivateLinkServiceConnectionState",
    modelProperties: {
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      actionsRequired: {
        serializedName: "actionsRequired",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Resource: msRest.CompositeMapper = {
  serializedName: "Resource",
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PrivateEndpointConnection: msRest.CompositeMapper = {
  serializedName: "PrivateEndpointConnection",
  type: {
    name: "Composite",
    className: "PrivateEndpointConnection",
    modelProperties: {
      ...Resource.type.modelProperties,
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      },
      privateEndpoint: {
        serializedName: "properties.privateEndpoint",
        type: {
          name: "Composite",
          className: "PrivateEndpoint"
        }
      },
      privateLinkServiceConnectionState: {
        required: true,
        serializedName: "properties.privateLinkServiceConnectionState",
        type: {
          name: "Composite",
          className: "PrivateLinkServiceConnectionState"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServicesProperties: msRest.CompositeMapper = {
  serializedName: "ServicesProperties",
  type: {
    name: "Composite",
    className: "ServicesProperties",
    modelProperties: {
      provisioningState: {
        readOnly: true,
        serializedName: "provisioningState",
        type: {
          name: "String"
        }
      },
      accessPolicies: {
        serializedName: "accessPolicies",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ServiceAccessPolicyEntry"
            }
          }
        }
      },
      cosmosDbConfiguration: {
        serializedName: "cosmosDbConfiguration",
        type: {
          name: "Composite",
          className: "ServiceCosmosDbConfigurationInfo"
        }
      },
      authenticationConfiguration: {
        serializedName: "authenticationConfiguration",
        type: {
          name: "Composite",
          className: "ServiceAuthenticationConfigurationInfo"
        }
      },
      corsConfiguration: {
        serializedName: "corsConfiguration",
        type: {
          name: "Composite",
          className: "ServiceCorsConfigurationInfo"
        }
      },
      exportConfiguration: {
        serializedName: "exportConfiguration",
        type: {
          name: "Composite",
          className: "ServiceExportConfigurationInfo"
        }
      },
      privateEndpointConnections: {
        serializedName: "privateEndpointConnections",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PrivateEndpointConnection"
            }
          }
        }
      },
      publicNetworkAccess: {
        serializedName: "publicNetworkAccess",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServicesPatchDescription: msRest.CompositeMapper = {
  serializedName: "ServicesPatchDescription",
  type: {
    name: "Composite",
    className: "ServicesPatchDescription",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      publicNetworkAccess: {
        serializedName: "properties.publicNetworkAccess",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServicesResourceIdentity: msRest.CompositeMapper = {
  serializedName: "ServicesResource_identity",
  type: {
    name: "Composite",
    className: "ServicesResourceIdentity",
    modelProperties: {
      principalId: {
        readOnly: true,
        serializedName: "principalId",
        type: {
          name: "String"
        }
      },
      tenantId: {
        readOnly: true,
        serializedName: "tenantId",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServicesResource: msRest.CompositeMapper = {
  serializedName: "ServicesResource",
  type: {
    name: "Composite",
    className: "ServicesResource",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        constraints: {
          Pattern: /^[a-z0-9][a-z0-9-]{1,21}[a-z0-9]$/
        },
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      },
      kind: {
        required: true,
        serializedName: "kind",
        type: {
          name: "Enum",
          allowedValues: [
            "fhir",
            "fhir-Stu3",
            "fhir-R4"
          ]
        }
      },
      location: {
        required: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      etag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      },
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "ServicesResourceIdentity"
        }
      }
    }
  }
};

export const PrivateLinkResource: msRest.CompositeMapper = {
  serializedName: "PrivateLinkResource",
  type: {
    name: "Composite",
    className: "PrivateLinkResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      systemData: {
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      },
      groupId: {
        readOnly: true,
        serializedName: "properties.groupId",
        type: {
          name: "String"
        }
      },
      requiredMembers: {
        readOnly: true,
        serializedName: "properties.requiredMembers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      requiredZoneNames: {
        serializedName: "properties.requiredZoneNames",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const PrivateLinkResourceListResult: msRest.CompositeMapper = {
  serializedName: "PrivateLinkResourceListResult",
  type: {
    name: "Composite",
    className: "PrivateLinkResourceListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PrivateLinkResource"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationResultsDescription: msRest.CompositeMapper = {
  serializedName: "OperationResultsDescription",
  type: {
    name: "Composite",
    className: "OperationResultsDescription",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      status: {
        readOnly: true,
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      startTime: {
        readOnly: true,
        serializedName: "startTime",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const OperationDisplay: msRest.CompositeMapper = {
  serializedName: "OperationDisplay",
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        readOnly: true,
        serializedName: "provider",
        type: {
          name: "String"
        }
      },
      resource: {
        readOnly: true,
        serializedName: "resource",
        type: {
          name: "String"
        }
      },
      operation: {
        readOnly: true,
        serializedName: "operation",
        type: {
          name: "String"
        }
      },
      description: {
        readOnly: true,
        serializedName: "description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Operation: msRest.CompositeMapper = {
  serializedName: "Operation",
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      isDataAction: {
        readOnly: true,
        serializedName: "isDataAction",
        type: {
          name: "Boolean"
        }
      },
      origin: {
        readOnly: true,
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      display: {
        readOnly: true,
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay"
        }
      }
    }
  }
};

export const ErrorDetailsInternal: msRest.CompositeMapper = {
  serializedName: "ErrorDetailsInternal",
  type: {
    name: "Composite",
    className: "ErrorDetailsInternal",
    modelProperties: {
      code: {
        readOnly: true,
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        readOnly: true,
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      target: {
        readOnly: true,
        serializedName: "target",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorDetails: msRest.CompositeMapper = {
  serializedName: "ErrorDetails",
  type: {
    name: "Composite",
    className: "ErrorDetails",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorDetailsInternal"
        }
      }
    }
  }
};

export const ProxyResource: msRest.CompositeMapper = {
  serializedName: "ProxyResource",
  type: {
    name: "Composite",
    className: "ProxyResource",
    modelProperties: {
      ...Resource.type.modelProperties
    }
  }
};

export const TrackedResource: msRest.CompositeMapper = {
  serializedName: "TrackedResource",
  type: {
    name: "Composite",
    className: "TrackedResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      location: {
        required: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureEntityResource: msRest.CompositeMapper = {
  serializedName: "AzureEntityResource",
  type: {
    name: "Composite",
    className: "AzureEntityResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      etag: {
        readOnly: true,
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PrivateLinkServicesForEDMUploadDescription: msRest.CompositeMapper = {
  serializedName: "PrivateLinkServicesForEDMUploadDescription",
  type: {
    name: "Composite",
    className: "PrivateLinkServicesForEDMUploadDescription",
    modelProperties: {
      ...ServicesResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "ServicesProperties"
        }
      }
    }
  }
};

export const PrivateLinkServicesForM365ComplianceCenterDescription: msRest.CompositeMapper = {
  serializedName: "PrivateLinkServicesForM365ComplianceCenterDescription",
  type: {
    name: "Composite",
    className: "PrivateLinkServicesForM365ComplianceCenterDescription",
    modelProperties: {
      ...ServicesResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "ServicesProperties"
        }
      }
    }
  }
};

export const PrivateLinkServicesForM365SecurityCenterDescription: msRest.CompositeMapper = {
  serializedName: "PrivateLinkServicesForM365SecurityCenterDescription",
  type: {
    name: "Composite",
    className: "PrivateLinkServicesForM365SecurityCenterDescription",
    modelProperties: {
      ...ServicesResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "ServicesProperties"
        }
      }
    }
  }
};

export const PrivateLinkServicesForO365ManagementActivityAPIDescription: msRest.CompositeMapper = {
  serializedName: "PrivateLinkServicesForO365ManagementActivityAPIDescription",
  type: {
    name: "Composite",
    className: "PrivateLinkServicesForO365ManagementActivityAPIDescription",
    modelProperties: {
      ...ServicesResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "ServicesProperties"
        }
      }
    }
  }
};

export const PrivateLinkServicesForSCCPowershellDescription: msRest.CompositeMapper = {
  serializedName: "PrivateLinkServicesForSCCPowershellDescription",
  type: {
    name: "Composite",
    className: "PrivateLinkServicesForSCCPowershellDescription",
    modelProperties: {
      ...ServicesResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "ServicesProperties"
        }
      }
    }
  }
};

export const PrivateLinkServicesForMIPPolicySyncDescription: msRest.CompositeMapper = {
  serializedName: "PrivateLinkServicesForMIPPolicySyncDescription",
  type: {
    name: "Composite",
    className: "PrivateLinkServicesForMIPPolicySyncDescription",
    modelProperties: {
      ...ServicesResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "ServicesProperties"
        }
      }
    }
  }
};

export const OperationListResult: msRest.CompositeMapper = {
  serializedName: "OperationListResult",
  type: {
    name: "Composite",
    className: "OperationListResult",
    modelProperties: {
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      },
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation"
            }
          }
        }
      }
    }
  }
};

export const PrivateLinkServicesForEDMUploadDescriptionListResult: msRest.CompositeMapper = {
  serializedName: "PrivateLinkServicesForEDMUploadDescriptionListResult",
  type: {
    name: "Composite",
    className: "PrivateLinkServicesForEDMUploadDescriptionListResult",
    modelProperties: {
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PrivateLinkServicesForEDMUploadDescription"
            }
          }
        }
      }
    }
  }
};

export const PrivateEndpointConnectionListResult: msRest.CompositeMapper = {
  serializedName: "PrivateEndpointConnectionListResult",
  type: {
    name: "Composite",
    className: "PrivateEndpointConnectionListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PrivateEndpointConnection"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PrivateLinkServicesForM365ComplianceCenterDescriptionListResult: msRest.CompositeMapper = {
  serializedName: "PrivateLinkServicesForM365ComplianceCenterDescriptionListResult",
  type: {
    name: "Composite",
    className: "PrivateLinkServicesForM365ComplianceCenterDescriptionListResult",
    modelProperties: {
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PrivateLinkServicesForM365ComplianceCenterDescription"
            }
          }
        }
      }
    }
  }
};

export const PrivateLinkServicesForM365SecurityCenterDescriptionListResult: msRest.CompositeMapper = {
  serializedName: "PrivateLinkServicesForM365SecurityCenterDescriptionListResult",
  type: {
    name: "Composite",
    className: "PrivateLinkServicesForM365SecurityCenterDescriptionListResult",
    modelProperties: {
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PrivateLinkServicesForM365SecurityCenterDescription"
            }
          }
        }
      }
    }
  }
};

export const PrivateLinkServicesForO365ManagementActivityAPIDescriptionListResult: msRest.CompositeMapper = {
  serializedName: "PrivateLinkServicesForO365ManagementActivityAPIDescriptionListResult",
  type: {
    name: "Composite",
    className: "PrivateLinkServicesForO365ManagementActivityAPIDescriptionListResult",
    modelProperties: {
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PrivateLinkServicesForO365ManagementActivityAPIDescription"
            }
          }
        }
      }
    }
  }
};

export const PrivateLinkServicesForSCCPowershellDescriptionListResult: msRest.CompositeMapper = {
  serializedName: "PrivateLinkServicesForSCCPowershellDescriptionListResult",
  type: {
    name: "Composite",
    className: "PrivateLinkServicesForSCCPowershellDescriptionListResult",
    modelProperties: {
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PrivateLinkServicesForSCCPowershellDescription"
            }
          }
        }
      }
    }
  }
};

export const PrivateLinkServicesForMIPPolicySyncDescriptionListResult: msRest.CompositeMapper = {
  serializedName: "PrivateLinkServicesForMIPPolicySyncDescriptionListResult",
  type: {
    name: "Composite",
    className: "PrivateLinkServicesForMIPPolicySyncDescriptionListResult",
    modelProperties: {
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PrivateLinkServicesForMIPPolicySyncDescription"
            }
          }
        }
      }
    }
  }
};
