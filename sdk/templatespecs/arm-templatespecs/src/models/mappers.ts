/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { CloudErrorMapper, BaseResourceMapper } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export const CloudError = CloudErrorMapper;
export const BaseResource = BaseResourceMapper;

export const TemplateSpecVersionInfo: msRest.CompositeMapper = {
  serializedName: "TemplateSpecVersionInfo",
  type: {
    name: "Composite",
    className: "TemplateSpecVersionInfo",
    modelProperties: {
      description: {
        readOnly: true,
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      timeCreated: {
        readOnly: true,
        serializedName: "timeCreated",
        type: {
          name: "DateTime"
        }
      },
      timeModified: {
        readOnly: true,
        serializedName: "timeModified",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const AzureResourceBase: msRest.CompositeMapper = {
  serializedName: "AzureResourceBase",
  type: {
    name: "Composite",
    className: "AzureResourceBase",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      systemData: {
        readOnly: true,
        serializedName: "systemData",
        type: {
          name: "Composite",
          className: "SystemData"
        }
      }
    }
  }
};

export const TemplateSpec: msRest.CompositeMapper = {
  serializedName: "TemplateSpec",
  type: {
    name: "Composite",
    className: "TemplateSpec",
    modelProperties: {
      ...AzureResourceBase.type.modelProperties,
      location: {
        required: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "properties.description",
        constraints: {
          MaxLength: 4096
        },
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        constraints: {
          MaxLength: 64
        },
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "properties.metadata",
        type: {
          name: "Object"
        }
      },
      versions: {
        readOnly: true,
        serializedName: "properties.versions",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className: "TemplateSpecVersionInfo"
            }
          }
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const TemplateSpecUpdateModel: msRest.CompositeMapper = {
  serializedName: "TemplateSpecUpdateModel",
  type: {
    name: "Composite",
    className: "TemplateSpecUpdateModel",
    modelProperties: {
      ...AzureResourceBase.type.modelProperties,
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const TemplateSpecVersionUpdateModel: msRest.CompositeMapper = {
  serializedName: "TemplateSpecVersionUpdateModel",
  type: {
    name: "Composite",
    className: "TemplateSpecVersionUpdateModel",
    modelProperties: {
      ...AzureResourceBase.type.modelProperties,
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const SystemData: msRest.CompositeMapper = {
  serializedName: "systemData",
  type: {
    name: "Composite",
    className: "SystemData",
    modelProperties: {
      createdBy: {
        serializedName: "createdBy",
        type: {
          name: "String"
        }
      },
      createdByType: {
        serializedName: "createdByType",
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "createdAt",
        type: {
          name: "DateTime"
        }
      },
      lastModifiedBy: {
        serializedName: "lastModifiedBy",
        type: {
          name: "String"
        }
      },
      lastModifiedByType: {
        serializedName: "lastModifiedByType",
        type: {
          name: "String"
        }
      },
      lastModifiedAt: {
        serializedName: "lastModifiedAt",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const LinkedTemplateArtifact: msRest.CompositeMapper = {
  serializedName: "LinkedTemplateArtifact",
  type: {
    name: "Composite",
    className: "LinkedTemplateArtifact",
    modelProperties: {
      path: {
        required: true,
        serializedName: "path",
        type: {
          name: "String"
        }
      },
      template: {
        required: true,
        serializedName: "template",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const TemplateSpecVersion: msRest.CompositeMapper = {
  serializedName: "TemplateSpecVersion",
  type: {
    name: "Composite",
    className: "TemplateSpecVersion",
    modelProperties: {
      ...AzureResourceBase.type.modelProperties,
      location: {
        required: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "properties.description",
        constraints: {
          MaxLength: 4096
        },
        type: {
          name: "String"
        }
      },
      linkedTemplates: {
        serializedName: "properties.linkedTemplates",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "LinkedTemplateArtifact"
            }
          }
        }
      },
      metadata: {
        serializedName: "properties.metadata",
        type: {
          name: "Object"
        }
      },
      mainTemplate: {
        serializedName: "properties.mainTemplate",
        type: {
          name: "Object"
        }
      },
      uiFormDefinition: {
        serializedName: "properties.uiFormDefinition",
        type: {
          name: "Object"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ErrorAdditionalInfo: msRest.CompositeMapper = {
  serializedName: "ErrorAdditionalInfo",
  type: {
    name: "Composite",
    className: "ErrorAdditionalInfo",
    modelProperties: {
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      info: {
        readOnly: true,
        serializedName: "info",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const ErrorResponse: msRest.CompositeMapper = {
  serializedName: "ErrorResponse",
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      code: {
        readOnly: true,
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        readOnly: true,
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      target: {
        readOnly: true,
        serializedName: "target",
        type: {
          name: "String"
        }
      },
      details: {
        readOnly: true,
        serializedName: "details",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorResponse"
            }
          }
        }
      },
      additionalInfo: {
        readOnly: true,
        serializedName: "additionalInfo",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorAdditionalInfo"
            }
          }
        }
      }
    }
  }
};

export const TemplateSpecsError: msRest.CompositeMapper = {
  serializedName: "TemplateSpecsError",
  type: {
    name: "Composite",
    className: "TemplateSpecsError",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorResponse"
        }
      }
    }
  }
};

export const TemplateSpecsListResult: msRest.CompositeMapper = {
  serializedName: "TemplateSpecsListResult",
  type: {
    name: "Composite",
    className: "TemplateSpecsListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TemplateSpec"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TemplateSpecVersionsListResult: msRest.CompositeMapper = {
  serializedName: "TemplateSpecVersionsListResult",
  type: {
    name: "Composite",
    className: "TemplateSpecVersionsListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TemplateSpecVersion"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};
