/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/templateSpecVersionsMappers";
import * as Parameters from "../models/parameters";
import { TemplateSpecsClientContext } from "../templateSpecsClientContext";

/** Class representing a TemplateSpecVersions. */
export class TemplateSpecVersions {
  private readonly client: TemplateSpecsClientContext;

  /**
   * Create a TemplateSpecVersions.
   * @param {TemplateSpecsClientContext} client Reference to the service client.
   */
  constructor(client: TemplateSpecsClientContext) {
    this.client = client;
  }

  /**
   * Creates or updates a Template Spec version.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param templateSpecName Name of the Template Spec.
   * @param templateSpecVersion The version of the Template Spec.
   * @param templateSpecVersionModel Template Spec Version supplied to the operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.TemplateSpecVersionsCreateOrUpdateResponse>
   */
  createOrUpdate(resourceGroupName: string, templateSpecName: string, templateSpecVersion: string, templateSpecVersionModel: Models.TemplateSpecVersion, options?: msRest.RequestOptionsBase): Promise<Models.TemplateSpecVersionsCreateOrUpdateResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param templateSpecName Name of the Template Spec.
   * @param templateSpecVersion The version of the Template Spec.
   * @param templateSpecVersionModel Template Spec Version supplied to the operation.
   * @param callback The callback
   */
  createOrUpdate(resourceGroupName: string, templateSpecName: string, templateSpecVersion: string, templateSpecVersionModel: Models.TemplateSpecVersion, callback: msRest.ServiceCallback<Models.TemplateSpecVersion>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param templateSpecName Name of the Template Spec.
   * @param templateSpecVersion The version of the Template Spec.
   * @param templateSpecVersionModel Template Spec Version supplied to the operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  createOrUpdate(resourceGroupName: string, templateSpecName: string, templateSpecVersion: string, templateSpecVersionModel: Models.TemplateSpecVersion, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.TemplateSpecVersion>): void;
  createOrUpdate(resourceGroupName: string, templateSpecName: string, templateSpecVersion: string, templateSpecVersionModel: Models.TemplateSpecVersion, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.TemplateSpecVersion>, callback?: msRest.ServiceCallback<Models.TemplateSpecVersion>): Promise<Models.TemplateSpecVersionsCreateOrUpdateResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        templateSpecName,
        templateSpecVersion,
        templateSpecVersionModel,
        options
      },
      createOrUpdateOperationSpec,
      callback) as Promise<Models.TemplateSpecVersionsCreateOrUpdateResponse>;
  }

  /**
   * Updates Template Spec Version tags with specified values.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param templateSpecName Name of the Template Spec.
   * @param templateSpecVersion The version of the Template Spec.
   * @param [options] The optional parameters
   * @returns Promise<Models.TemplateSpecVersionsUpdateResponse>
   */
  update(resourceGroupName: string, templateSpecName: string, templateSpecVersion: string, options?: Models.TemplateSpecVersionsUpdateOptionalParams): Promise<Models.TemplateSpecVersionsUpdateResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param templateSpecName Name of the Template Spec.
   * @param templateSpecVersion The version of the Template Spec.
   * @param callback The callback
   */
  update(resourceGroupName: string, templateSpecName: string, templateSpecVersion: string, callback: msRest.ServiceCallback<Models.TemplateSpecVersion>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param templateSpecName Name of the Template Spec.
   * @param templateSpecVersion The version of the Template Spec.
   * @param options The optional parameters
   * @param callback The callback
   */
  update(resourceGroupName: string, templateSpecName: string, templateSpecVersion: string, options: Models.TemplateSpecVersionsUpdateOptionalParams, callback: msRest.ServiceCallback<Models.TemplateSpecVersion>): void;
  update(resourceGroupName: string, templateSpecName: string, templateSpecVersion: string, options?: Models.TemplateSpecVersionsUpdateOptionalParams | msRest.ServiceCallback<Models.TemplateSpecVersion>, callback?: msRest.ServiceCallback<Models.TemplateSpecVersion>): Promise<Models.TemplateSpecVersionsUpdateResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        templateSpecName,
        templateSpecVersion,
        options
      },
      updateOperationSpec,
      callback) as Promise<Models.TemplateSpecVersionsUpdateResponse>;
  }

  /**
   * Gets a Template Spec version from a specific Template Spec.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param templateSpecName Name of the Template Spec.
   * @param templateSpecVersion The version of the Template Spec.
   * @param [options] The optional parameters
   * @returns Promise<Models.TemplateSpecVersionsGetResponse>
   */
  get(resourceGroupName: string, templateSpecName: string, templateSpecVersion: string, options?: msRest.RequestOptionsBase): Promise<Models.TemplateSpecVersionsGetResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param templateSpecName Name of the Template Spec.
   * @param templateSpecVersion The version of the Template Spec.
   * @param callback The callback
   */
  get(resourceGroupName: string, templateSpecName: string, templateSpecVersion: string, callback: msRest.ServiceCallback<Models.TemplateSpecVersion>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param templateSpecName Name of the Template Spec.
   * @param templateSpecVersion The version of the Template Spec.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(resourceGroupName: string, templateSpecName: string, templateSpecVersion: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.TemplateSpecVersion>): void;
  get(resourceGroupName: string, templateSpecName: string, templateSpecVersion: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.TemplateSpecVersion>, callback?: msRest.ServiceCallback<Models.TemplateSpecVersion>): Promise<Models.TemplateSpecVersionsGetResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        templateSpecName,
        templateSpecVersion,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.TemplateSpecVersionsGetResponse>;
  }

  /**
   * Deletes a specific version from a Template Spec. When operation completes, status code 200
   * returned without content.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param templateSpecName Name of the Template Spec.
   * @param templateSpecVersion The version of the Template Spec.
   * @param [options] The optional parameters
   * @returns Promise<msRest.RestResponse>
   */
  deleteMethod(resourceGroupName: string, templateSpecName: string, templateSpecVersion: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param templateSpecName Name of the Template Spec.
   * @param templateSpecVersion The version of the Template Spec.
   * @param callback The callback
   */
  deleteMethod(resourceGroupName: string, templateSpecName: string, templateSpecVersion: string, callback: msRest.ServiceCallback<void>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param templateSpecName Name of the Template Spec.
   * @param templateSpecVersion The version of the Template Spec.
   * @param options The optional parameters
   * @param callback The callback
   */
  deleteMethod(resourceGroupName: string, templateSpecName: string, templateSpecVersion: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
  deleteMethod(resourceGroupName: string, templateSpecName: string, templateSpecVersion: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        templateSpecName,
        templateSpecVersion,
        options
      },
      deleteMethodOperationSpec,
      callback);
  }

  /**
   * Lists all the Template Spec versions in the specified Template Spec.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param templateSpecName Name of the Template Spec.
   * @param [options] The optional parameters
   * @returns Promise<Models.TemplateSpecVersionsListResponse>
   */
  list(resourceGroupName: string, templateSpecName: string, options?: msRest.RequestOptionsBase): Promise<Models.TemplateSpecVersionsListResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param templateSpecName Name of the Template Spec.
   * @param callback The callback
   */
  list(resourceGroupName: string, templateSpecName: string, callback: msRest.ServiceCallback<Models.TemplateSpecVersionsListResult>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param templateSpecName Name of the Template Spec.
   * @param options The optional parameters
   * @param callback The callback
   */
  list(resourceGroupName: string, templateSpecName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.TemplateSpecVersionsListResult>): void;
  list(resourceGroupName: string, templateSpecName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.TemplateSpecVersionsListResult>, callback?: msRest.ServiceCallback<Models.TemplateSpecVersionsListResult>): Promise<Models.TemplateSpecVersionsListResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        templateSpecName,
        options
      },
      listOperationSpec,
      callback) as Promise<Models.TemplateSpecVersionsListResponse>;
  }

  /**
   * Lists all the Template Spec versions in the specified Template Spec.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.TemplateSpecVersionsListNextResponse>
   */
  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.TemplateSpecVersionsListNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.TemplateSpecVersionsListResult>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.TemplateSpecVersionsListResult>): void;
  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.TemplateSpecVersionsListResult>, callback?: msRest.ServiceCallback<Models.TemplateSpecVersionsListResult>): Promise<Models.TemplateSpecVersionsListNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listNextOperationSpec,
      callback) as Promise<Models.TemplateSpecVersionsListNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const createOrUpdateOperationSpec: msRest.OperationSpec = {
  httpMethod: "PUT",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Resources/templateSpecs/{templateSpecName}/versions/{templateSpecVersion}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.templateSpecName,
    Parameters.templateSpecVersion
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "templateSpecVersionModel",
    mapper: {
      ...Mappers.TemplateSpecVersion,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.TemplateSpecVersion
    },
    201: {
      bodyMapper: Mappers.TemplateSpecVersion
    },
    default: {
      bodyMapper: Mappers.TemplateSpecsError
    }
  },
  serializer
};

const updateOperationSpec: msRest.OperationSpec = {
  httpMethod: "PATCH",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Resources/templateSpecs/{templateSpecName}/versions/{templateSpecVersion}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.templateSpecName,
    Parameters.templateSpecVersion
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: [
      "options",
      "templateSpecVersionUpdateModel"
    ],
    mapper: Mappers.TemplateSpecVersionUpdateModel
  },
  responses: {
    200: {
      bodyMapper: Mappers.TemplateSpecVersion
    },
    default: {
      bodyMapper: Mappers.TemplateSpecsError
    }
  },
  serializer
};

const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Resources/templateSpecs/{templateSpecName}/versions/{templateSpecVersion}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.templateSpecName,
    Parameters.templateSpecVersion
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.TemplateSpecVersion
    },
    default: {
      bodyMapper: Mappers.TemplateSpecsError
    }
  },
  serializer
};

const deleteMethodOperationSpec: msRest.OperationSpec = {
  httpMethod: "DELETE",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Resources/templateSpecs/{templateSpecName}/versions/{templateSpecVersion}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.templateSpecName,
    Parameters.templateSpecVersion
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {},
    204: {},
    default: {
      bodyMapper: Mappers.TemplateSpecsError
    }
  },
  serializer
};

const listOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Resources/templateSpecs/{templateSpecName}/versions",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.templateSpecName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.TemplateSpecVersionsListResult
    },
    default: {
      bodyMapper: Mappers.TemplateSpecsError
    }
  },
  serializer
};

const listNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.TemplateSpecVersionsListResult
    },
    default: {
      bodyMapper: Mappers.TemplateSpecsError
    }
  },
  serializer
};
