/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/templateSpecsMappers";
import * as Parameters from "../models/parameters";
import { TemplateSpecsClientContext } from "../templateSpecsClientContext";

/** Class representing a TemplateSpecs. */
export class TemplateSpecs {
  private readonly client: TemplateSpecsClientContext;

  /**
   * Create a TemplateSpecs.
   * @param {TemplateSpecsClientContext} client Reference to the service client.
   */
  constructor(client: TemplateSpecsClientContext) {
    this.client = client;
  }

  /**
   * Creates or updates a Template Spec.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param templateSpecName Name of the Template Spec.
   * @param templateSpec Template Spec supplied to the operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.TemplateSpecsCreateOrUpdateResponse>
   */
  createOrUpdate(resourceGroupName: string, templateSpecName: string, templateSpec: Models.TemplateSpec, options?: msRest.RequestOptionsBase): Promise<Models.TemplateSpecsCreateOrUpdateResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param templateSpecName Name of the Template Spec.
   * @param templateSpec Template Spec supplied to the operation.
   * @param callback The callback
   */
  createOrUpdate(resourceGroupName: string, templateSpecName: string, templateSpec: Models.TemplateSpec, callback: msRest.ServiceCallback<Models.TemplateSpec>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param templateSpecName Name of the Template Spec.
   * @param templateSpec Template Spec supplied to the operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  createOrUpdate(resourceGroupName: string, templateSpecName: string, templateSpec: Models.TemplateSpec, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.TemplateSpec>): void;
  createOrUpdate(resourceGroupName: string, templateSpecName: string, templateSpec: Models.TemplateSpec, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.TemplateSpec>, callback?: msRest.ServiceCallback<Models.TemplateSpec>): Promise<Models.TemplateSpecsCreateOrUpdateResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        templateSpecName,
        templateSpec,
        options
      },
      createOrUpdateOperationSpec,
      callback) as Promise<Models.TemplateSpecsCreateOrUpdateResponse>;
  }

  /**
   * Updates Template Spec tags with specified values.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param templateSpecName Name of the Template Spec.
   * @param [options] The optional parameters
   * @returns Promise<Models.TemplateSpecsUpdateResponse>
   */
  update(resourceGroupName: string, templateSpecName: string, options?: Models.TemplateSpecsUpdateOptionalParams): Promise<Models.TemplateSpecsUpdateResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param templateSpecName Name of the Template Spec.
   * @param callback The callback
   */
  update(resourceGroupName: string, templateSpecName: string, callback: msRest.ServiceCallback<Models.TemplateSpec>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param templateSpecName Name of the Template Spec.
   * @param options The optional parameters
   * @param callback The callback
   */
  update(resourceGroupName: string, templateSpecName: string, options: Models.TemplateSpecsUpdateOptionalParams, callback: msRest.ServiceCallback<Models.TemplateSpec>): void;
  update(resourceGroupName: string, templateSpecName: string, options?: Models.TemplateSpecsUpdateOptionalParams | msRest.ServiceCallback<Models.TemplateSpec>, callback?: msRest.ServiceCallback<Models.TemplateSpec>): Promise<Models.TemplateSpecsUpdateResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        templateSpecName,
        options
      },
      updateOperationSpec,
      callback) as Promise<Models.TemplateSpecsUpdateResponse>;
  }

  /**
   * Gets a Template Spec with a given name.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param templateSpecName Name of the Template Spec.
   * @param [options] The optional parameters
   * @returns Promise<Models.TemplateSpecsGetResponse>
   */
  get(resourceGroupName: string, templateSpecName: string, options?: Models.TemplateSpecsGetOptionalParams): Promise<Models.TemplateSpecsGetResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param templateSpecName Name of the Template Spec.
   * @param callback The callback
   */
  get(resourceGroupName: string, templateSpecName: string, callback: msRest.ServiceCallback<Models.TemplateSpec>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param templateSpecName Name of the Template Spec.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(resourceGroupName: string, templateSpecName: string, options: Models.TemplateSpecsGetOptionalParams, callback: msRest.ServiceCallback<Models.TemplateSpec>): void;
  get(resourceGroupName: string, templateSpecName: string, options?: Models.TemplateSpecsGetOptionalParams | msRest.ServiceCallback<Models.TemplateSpec>, callback?: msRest.ServiceCallback<Models.TemplateSpec>): Promise<Models.TemplateSpecsGetResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        templateSpecName,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.TemplateSpecsGetResponse>;
  }

  /**
   * Deletes a Template Spec by name. When operation completes, status code 200 returned without
   * content.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param templateSpecName Name of the Template Spec.
   * @param [options] The optional parameters
   * @returns Promise<msRest.RestResponse>
   */
  deleteMethod(resourceGroupName: string, templateSpecName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param templateSpecName Name of the Template Spec.
   * @param callback The callback
   */
  deleteMethod(resourceGroupName: string, templateSpecName: string, callback: msRest.ServiceCallback<void>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param templateSpecName Name of the Template Spec.
   * @param options The optional parameters
   * @param callback The callback
   */
  deleteMethod(resourceGroupName: string, templateSpecName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
  deleteMethod(resourceGroupName: string, templateSpecName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        templateSpecName,
        options
      },
      deleteMethodOperationSpec,
      callback);
  }

  /**
   * Lists all the Template Specs within the specified subscriptions.
   * @param [options] The optional parameters
   * @returns Promise<Models.TemplateSpecsListBySubscriptionResponse>
   */
  listBySubscription(options?: Models.TemplateSpecsListBySubscriptionOptionalParams): Promise<Models.TemplateSpecsListBySubscriptionResponse>;
  /**
   * @param callback The callback
   */
  listBySubscription(callback: msRest.ServiceCallback<Models.TemplateSpecsListResult>): void;
  /**
   * @param options The optional parameters
   * @param callback The callback
   */
  listBySubscription(options: Models.TemplateSpecsListBySubscriptionOptionalParams, callback: msRest.ServiceCallback<Models.TemplateSpecsListResult>): void;
  listBySubscription(options?: Models.TemplateSpecsListBySubscriptionOptionalParams | msRest.ServiceCallback<Models.TemplateSpecsListResult>, callback?: msRest.ServiceCallback<Models.TemplateSpecsListResult>): Promise<Models.TemplateSpecsListBySubscriptionResponse> {
    return this.client.sendOperationRequest(
      {
        options
      },
      listBySubscriptionOperationSpec,
      callback) as Promise<Models.TemplateSpecsListBySubscriptionResponse>;
  }

  /**
   * Lists all the Template Specs within the specified resource group.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param [options] The optional parameters
   * @returns Promise<Models.TemplateSpecsListByResourceGroupResponse>
   */
  listByResourceGroup(resourceGroupName: string, options?: Models.TemplateSpecsListByResourceGroupOptionalParams): Promise<Models.TemplateSpecsListByResourceGroupResponse>;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param callback The callback
   */
  listByResourceGroup(resourceGroupName: string, callback: msRest.ServiceCallback<Models.TemplateSpecsListResult>): void;
  /**
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByResourceGroup(resourceGroupName: string, options: Models.TemplateSpecsListByResourceGroupOptionalParams, callback: msRest.ServiceCallback<Models.TemplateSpecsListResult>): void;
  listByResourceGroup(resourceGroupName: string, options?: Models.TemplateSpecsListByResourceGroupOptionalParams | msRest.ServiceCallback<Models.TemplateSpecsListResult>, callback?: msRest.ServiceCallback<Models.TemplateSpecsListResult>): Promise<Models.TemplateSpecsListByResourceGroupResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        options
      },
      listByResourceGroupOperationSpec,
      callback) as Promise<Models.TemplateSpecsListByResourceGroupResponse>;
  }

  /**
   * Lists all the Template Specs within the specified subscriptions.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.TemplateSpecsListBySubscriptionNextResponse>
   */
  listBySubscriptionNext(nextPageLink: string, options?: Models.TemplateSpecsListBySubscriptionNextOptionalParams): Promise<Models.TemplateSpecsListBySubscriptionNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listBySubscriptionNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.TemplateSpecsListResult>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listBySubscriptionNext(nextPageLink: string, options: Models.TemplateSpecsListBySubscriptionNextOptionalParams, callback: msRest.ServiceCallback<Models.TemplateSpecsListResult>): void;
  listBySubscriptionNext(nextPageLink: string, options?: Models.TemplateSpecsListBySubscriptionNextOptionalParams | msRest.ServiceCallback<Models.TemplateSpecsListResult>, callback?: msRest.ServiceCallback<Models.TemplateSpecsListResult>): Promise<Models.TemplateSpecsListBySubscriptionNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listBySubscriptionNextOperationSpec,
      callback) as Promise<Models.TemplateSpecsListBySubscriptionNextResponse>;
  }

  /**
   * Lists all the Template Specs within the specified resource group.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.TemplateSpecsListByResourceGroupNextResponse>
   */
  listByResourceGroupNext(nextPageLink: string, options?: Models.TemplateSpecsListByResourceGroupNextOptionalParams): Promise<Models.TemplateSpecsListByResourceGroupNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listByResourceGroupNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.TemplateSpecsListResult>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByResourceGroupNext(nextPageLink: string, options: Models.TemplateSpecsListByResourceGroupNextOptionalParams, callback: msRest.ServiceCallback<Models.TemplateSpecsListResult>): void;
  listByResourceGroupNext(nextPageLink: string, options?: Models.TemplateSpecsListByResourceGroupNextOptionalParams | msRest.ServiceCallback<Models.TemplateSpecsListResult>, callback?: msRest.ServiceCallback<Models.TemplateSpecsListResult>): Promise<Models.TemplateSpecsListByResourceGroupNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listByResourceGroupNextOperationSpec,
      callback) as Promise<Models.TemplateSpecsListByResourceGroupNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const createOrUpdateOperationSpec: msRest.OperationSpec = {
  httpMethod: "PUT",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Resources/templateSpecs/{templateSpecName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.templateSpecName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "templateSpec",
    mapper: {
      ...Mappers.TemplateSpec,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.TemplateSpec
    },
    201: {
      bodyMapper: Mappers.TemplateSpec
    },
    default: {
      bodyMapper: Mappers.TemplateSpecsError
    }
  },
  serializer
};

const updateOperationSpec: msRest.OperationSpec = {
  httpMethod: "PATCH",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Resources/templateSpecs/{templateSpecName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.templateSpecName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: [
      "options",
      "templateSpec"
    ],
    mapper: Mappers.TemplateSpecUpdateModel
  },
  responses: {
    200: {
      bodyMapper: Mappers.TemplateSpec
    },
    default: {
      bodyMapper: Mappers.TemplateSpecsError
    }
  },
  serializer
};

const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Resources/templateSpecs/{templateSpecName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.templateSpecName
  ],
  queryParameters: [
    Parameters.expand,
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.TemplateSpec
    },
    default: {
      bodyMapper: Mappers.TemplateSpecsError
    }
  },
  serializer
};

const deleteMethodOperationSpec: msRest.OperationSpec = {
  httpMethod: "DELETE",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Resources/templateSpecs/{templateSpecName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.templateSpecName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {},
    204: {},
    default: {
      bodyMapper: Mappers.TemplateSpecsError
    }
  },
  serializer
};

const listBySubscriptionOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/providers/Microsoft.Resources/templateSpecs/",
  urlParameters: [
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.expand,
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.TemplateSpecsListResult
    },
    default: {
      bodyMapper: Mappers.TemplateSpecsError
    }
  },
  serializer
};

const listByResourceGroupOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Resources/templateSpecs/",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName
  ],
  queryParameters: [
    Parameters.expand,
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.TemplateSpecsListResult
    },
    default: {
      bodyMapper: Mappers.TemplateSpecsError
    }
  },
  serializer
};

const listBySubscriptionNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  queryParameters: [
    Parameters.expand,
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.TemplateSpecsListResult
    },
    default: {
      bodyMapper: Mappers.TemplateSpecsError
    }
  },
  serializer
};

const listByResourceGroupNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  queryParameters: [
    Parameters.expand,
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.TemplateSpecsListResult
    },
    default: {
      bodyMapper: Mappers.TemplateSpecsError
    }
  },
  serializer
};
