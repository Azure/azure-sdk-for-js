/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import {
  Output,
  StreamAnalyticsManagementClient
} from "@azure/arm-streamanalytics";
import { DefaultAzureCredential } from "@azure/identity";

/**
 * This sample demonstrates how to Creates an output or replaces an already existing output under an existing streaming job.
 *
 * @summary Creates an output or replaces an already existing output under an existing streaming job.
 * x-ms-original-file: specification/streamanalytics/resource-manager/Microsoft.StreamAnalytics/stable/2020-03-01/examples/Output_Create_DocumentDB.json
 */
async function createADocumentDbOutput() {
  const subscriptionId = "56b5e0a9-b645-407d-99b0-c64f86013e3d";
  const resourceGroupName = "sjrg7983";
  const jobName = "sj2331";
  const outputName = "output3022";
  const output: Output = {
    datasource: {
      type: "Microsoft.Storage/DocumentDB",
      accountId: "someAccountId",
      accountKey: "accountKey==",
      collectionNamePattern: "collection",
      database: "db01",
      documentId: "documentId",
      partitionKey: "key"
    }
  };
  const credential = new DefaultAzureCredential();
  const client = new StreamAnalyticsManagementClient(
    credential,
    subscriptionId
  );
  const result = await client.outputs.createOrReplace(
    resourceGroupName,
    jobName,
    outputName,
    output
  );
  console.log(result);
}

createADocumentDbOutput().catch(console.error);

/**
 * This sample demonstrates how to Creates an output or replaces an already existing output under an existing streaming job.
 *
 * @summary Creates an output or replaces an already existing output under an existing streaming job.
 * x-ms-original-file: specification/streamanalytics/resource-manager/Microsoft.StreamAnalytics/stable/2020-03-01/examples/Output_Create_PowerBI.json
 */
async function createAPowerBiOutput() {
  const subscriptionId = "56b5e0a9-b645-407d-99b0-c64f86013e3d";
  const resourceGroupName = "sjrg7983";
  const jobName = "sj2331";
  const outputName = "output3022";
  const output: Output = {
    datasource: {
      type: "PowerBI",
      dataset: "someDataset",
      groupId: "ac40305e-3e8d-43ac-8161-c33799f43e95",
      groupName: "MyPowerBIGroup",
      refreshToken: "someRefreshToken==",
      table: "someTable",
      tokenUserDisplayName: "Bob Smith",
      tokenUserPrincipalName: "bobsmith@contoso.com"
    }
  };
  const credential = new DefaultAzureCredential();
  const client = new StreamAnalyticsManagementClient(
    credential,
    subscriptionId
  );
  const result = await client.outputs.createOrReplace(
    resourceGroupName,
    jobName,
    outputName,
    output
  );
  console.log(result);
}

createAPowerBiOutput().catch(console.error);

/**
 * This sample demonstrates how to Creates an output or replaces an already existing output under an existing streaming job.
 *
 * @summary Creates an output or replaces an already existing output under an existing streaming job.
 * x-ms-original-file: specification/streamanalytics/resource-manager/Microsoft.StreamAnalytics/stable/2020-03-01/examples/Output_Create_ServiceBusQueue_Avro.json
 */
async function createAServiceBusQueueOutputWithAvroSerialization() {
  const subscriptionId = "56b5e0a9-b645-407d-99b0-c64f86013e3d";
  const resourceGroupName = "sjrg3410";
  const jobName = "sj5095";
  const outputName = "output3456";
  const output: Output = {
    datasource: {
      type: "Microsoft.ServiceBus/Queue",
      propertyColumns: ["column1", "column2"],
      queueName: "sdkqueue",
      serviceBusNamespace: "sdktest",
      sharedAccessPolicyKey: "sharedAccessPolicyKey=",
      sharedAccessPolicyName: "RootManageSharedAccessKey",
      systemPropertyColumns: { MessageId: "col3", PartitionKey: "col4" }
    },
    serialization: { type: "Avro" }
  };
  const credential = new DefaultAzureCredential();
  const client = new StreamAnalyticsManagementClient(
    credential,
    subscriptionId
  );
  const result = await client.outputs.createOrReplace(
    resourceGroupName,
    jobName,
    outputName,
    output
  );
  console.log(result);
}

createAServiceBusQueueOutputWithAvroSerialization().catch(console.error);

/**
 * This sample demonstrates how to Creates an output or replaces an already existing output under an existing streaming job.
 *
 * @summary Creates an output or replaces an already existing output under an existing streaming job.
 * x-ms-original-file: specification/streamanalytics/resource-manager/Microsoft.StreamAnalytics/stable/2020-03-01/examples/Output_Create_ServiceBusTopic_CSV.json
 */
async function createAServiceBusTopicOutputWithCsvSerialization() {
  const subscriptionId = "56b5e0a9-b645-407d-99b0-c64f86013e3d";
  const resourceGroupName = "sjrg6450";
  const jobName = "sj7094";
  const outputName = "output7886";
  const output: Output = {
    datasource: {
      type: "Microsoft.ServiceBus/Topic",
      propertyColumns: ["column1", "column2"],
      serviceBusNamespace: "sdktest",
      sharedAccessPolicyKey: "sharedAccessPolicyKey=",
      sharedAccessPolicyName: "RootManageSharedAccessKey",
      topicName: "sdktopic"
    },
    serialization: { type: "Csv", encoding: "UTF8", fieldDelimiter: "," }
  };
  const credential = new DefaultAzureCredential();
  const client = new StreamAnalyticsManagementClient(
    credential,
    subscriptionId
  );
  const result = await client.outputs.createOrReplace(
    resourceGroupName,
    jobName,
    outputName,
    output
  );
  console.log(result);
}

createAServiceBusTopicOutputWithCsvSerialization().catch(console.error);

/**
 * This sample demonstrates how to Creates an output or replaces an already existing output under an existing streaming job.
 *
 * @summary Creates an output or replaces an already existing output under an existing streaming job.
 * x-ms-original-file: specification/streamanalytics/resource-manager/Microsoft.StreamAnalytics/stable/2020-03-01/examples/Output_Create_Blob_CSV.json
 */
async function createABlobOutputWithCsvSerialization() {
  const subscriptionId = "56b5e0a9-b645-407d-99b0-c64f86013e3d";
  const resourceGroupName = "sjrg5023";
  const jobName = "sj900";
  const outputName = "output1623";
  const output: Output = {
    datasource: {
      type: "Microsoft.Storage/Blob",
      container: "state",
      dateFormat: "yyyy/MM/dd",
      pathPattern: "{date}/{time}",
      storageAccounts: [
        { accountKey: "accountKey==", accountName: "someAccountName" }
      ],
      timeFormat: "HH"
    },
    serialization: { type: "Csv", encoding: "UTF8", fieldDelimiter: "," }
  };
  const credential = new DefaultAzureCredential();
  const client = new StreamAnalyticsManagementClient(
    credential,
    subscriptionId
  );
  const result = await client.outputs.createOrReplace(
    resourceGroupName,
    jobName,
    outputName,
    output
  );
  console.log(result);
}

createABlobOutputWithCsvSerialization().catch(console.error);

/**
 * This sample demonstrates how to Creates an output or replaces an already existing output under an existing streaming job.
 *
 * @summary Creates an output or replaces an already existing output under an existing streaming job.
 * x-ms-original-file: specification/streamanalytics/resource-manager/Microsoft.StreamAnalytics/stable/2020-03-01/examples/Output_Create_AzureDataLakeStore_JSON.json
 */
async function createAnAzureDataLakeStoreOutputWithJsonSerialization() {
  const subscriptionId = "56b5e0a9-b645-407d-99b0-c64f86013e3d";
  const resourceGroupName = "sjrg6912";
  const jobName = "sj3310";
  const outputName = "output5195";
  const output: Output = {
    datasource: {
      type: "Microsoft.DataLake/Accounts",
      accountName: "someaccount",
      dateFormat: "yyyy/MM/dd",
      filePathPrefix: "{date}/{time}",
      refreshToken: "someRefreshToken==",
      tenantId: "cea4e98b-c798-49e7-8c40-4a2b3beb47dd",
      timeFormat: "HH",
      tokenUserDisplayName: "Bob Smith",
      tokenUserPrincipalName: "bobsmith@contoso.com"
    },
    serialization: { type: "Json", format: "Array", encoding: "UTF8" }
  };
  const credential = new DefaultAzureCredential();
  const client = new StreamAnalyticsManagementClient(
    credential,
    subscriptionId
  );
  const result = await client.outputs.createOrReplace(
    resourceGroupName,
    jobName,
    outputName,
    output
  );
  console.log(result);
}

createAnAzureDataLakeStoreOutputWithJsonSerialization().catch(console.error);

/**
 * This sample demonstrates how to Creates an output or replaces an already existing output under an existing streaming job.
 *
 * @summary Creates an output or replaces an already existing output under an existing streaming job.
 * x-ms-original-file: specification/streamanalytics/resource-manager/Microsoft.StreamAnalytics/stable/2020-03-01/examples/Output_Create_AzureSQL.json
 */
async function createAnAzureSqlDatabaseOutput() {
  const subscriptionId = "56b5e0a9-b645-407d-99b0-c64f86013e3d";
  const resourceGroupName = "sjrg2157";
  const jobName = "sj6458";
  const outputName = "output1755";
  const output: Output = {
    datasource: {
      type: "Microsoft.Sql/Server/Database",
      database: "someDatabase",
      password: "somePassword",
      server: "someServer",
      table: "someTable",
      user: "<user>"
    }
  };
  const credential = new DefaultAzureCredential();
  const client = new StreamAnalyticsManagementClient(
    credential,
    subscriptionId
  );
  const result = await client.outputs.createOrReplace(
    resourceGroupName,
    jobName,
    outputName,
    output
  );
  console.log(result);
}

createAnAzureSqlDatabaseOutput().catch(console.error);

/**
 * This sample demonstrates how to Creates an output or replaces an already existing output under an existing streaming job.
 *
 * @summary Creates an output or replaces an already existing output under an existing streaming job.
 * x-ms-original-file: specification/streamanalytics/resource-manager/Microsoft.StreamAnalytics/stable/2020-03-01/examples/Output_Create_AzureTable.json
 */
async function createAnAzureTableOutput() {
  const subscriptionId = "56b5e0a9-b645-407d-99b0-c64f86013e3d";
  const resourceGroupName = "sjrg5176";
  const jobName = "sj2790";
  const outputName = "output958";
  const output: Output = {
    datasource: {
      type: "Microsoft.Storage/Table",
      accountKey: "accountKey==",
      accountName: "someAccountName",
      batchSize: 25,
      columnsToRemove: ["column1", "column2"],
      partitionKey: "partitionKey",
      rowKey: "rowKey",
      table: "samples"
    }
  };
  const credential = new DefaultAzureCredential();
  const client = new StreamAnalyticsManagementClient(
    credential,
    subscriptionId
  );
  const result = await client.outputs.createOrReplace(
    resourceGroupName,
    jobName,
    outputName,
    output
  );
  console.log(result);
}

createAnAzureTableOutput().catch(console.error);

/**
 * This sample demonstrates how to Creates an output or replaces an already existing output under an existing streaming job.
 *
 * @summary Creates an output or replaces an already existing output under an existing streaming job.
 * x-ms-original-file: specification/streamanalytics/resource-manager/Microsoft.StreamAnalytics/stable/2020-03-01/examples/Output_Create_EventHub_JSON.json
 */
async function createAnEventHubOutputWithJsonSerialization() {
  const subscriptionId = "56b5e0a9-b645-407d-99b0-c64f86013e3d";
  const resourceGroupName = "sjrg6912";
  const jobName = "sj3310";
  const outputName = "output5195";
  const output: Output = {
    datasource: {
      type: "Microsoft.ServiceBus/EventHub",
      eventHubName: "sdkeventhub",
      partitionKey: "partitionKey",
      serviceBusNamespace: "sdktest",
      sharedAccessPolicyKey: "sharedAccessPolicyKey=",
      sharedAccessPolicyName: "RootManageSharedAccessKey"
    },
    serialization: { type: "Json", format: "Array", encoding: "UTF8" }
  };
  const credential = new DefaultAzureCredential();
  const client = new StreamAnalyticsManagementClient(
    credential,
    subscriptionId
  );
  const result = await client.outputs.createOrReplace(
    resourceGroupName,
    jobName,
    outputName,
    output
  );
  console.log(result);
}

createAnEventHubOutputWithJsonSerialization().catch(console.error);
