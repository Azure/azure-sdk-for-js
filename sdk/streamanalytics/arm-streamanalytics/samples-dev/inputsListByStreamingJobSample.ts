/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import {
  InputsListByStreamingJobOptionalParams,
  StreamAnalyticsManagementClient
} from "@azure/arm-streamanalytics";
import { DefaultAzureCredential } from "@azure/identity";

/**
 * This sample demonstrates how to Lists all of the inputs under the specified streaming job.
 *
 * @summary Lists all of the inputs under the specified streaming job.
 * x-ms-original-file: specification/streamanalytics/resource-manager/Microsoft.StreamAnalytics/stable/2020-03-01/examples/Input_ListByStreamingJob.json
 */
async function listAllInputsInAStreamingJob() {
  const subscriptionId = "56b5e0a9-b645-407d-99b0-c64f86013e3d";
  const resourceGroupName = "sjrg8440";
  const jobName = "sj9597";
  const credential = new DefaultAzureCredential();
  const client = new StreamAnalyticsManagementClient(
    credential,
    subscriptionId
  );
  const resArray = new Array();
  for await (let item of client.inputs.listByStreamingJob(
    resourceGroupName,
    jobName
  )) {
    resArray.push(item);
  }
  console.log(resArray);
}

listAllInputsInAStreamingJob().catch(console.error);

/**
 * This sample demonstrates how to Lists all of the inputs under the specified streaming job.
 *
 * @summary Lists all of the inputs under the specified streaming job.
 * x-ms-original-file: specification/streamanalytics/resource-manager/Microsoft.StreamAnalytics/stable/2020-03-01/examples/Input_ListByStreamingJob_Diagnostics.json
 */
async function listAllInputsInAStreamingJobAndIncludeDiagnosticInformationUsingTheSelectODataQueryParameter() {
  const subscriptionId = "56b5e0a9-b645-407d-99b0-c64f86013e3d";
  const select = "*";
  const resourceGroupName = "sjrg3276";
  const jobName = "sj7804";
  const options: InputsListByStreamingJobOptionalParams = { select };
  const credential = new DefaultAzureCredential();
  const client = new StreamAnalyticsManagementClient(
    credential,
    subscriptionId
  );
  const resArray = new Array();
  for await (let item of client.inputs.listByStreamingJob(
    resourceGroupName,
    jobName,
    options
  )) {
    resArray.push(item);
  }
  console.log(resArray);
}

listAllInputsInAStreamingJobAndIncludeDiagnosticInformationUsingTheSelectODataQueryParameter().catch(
  console.error
);
