/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import { TokenCredential } from "@azure/core-auth";
import * as Models from "./models";
import * as Mappers from "./models/mappers";
import * as operations from "./operations";
import { StreamAnalyticsManagementClientContext } from "./streamAnalyticsManagementClientContext";


class StreamAnalyticsManagementClient extends StreamAnalyticsManagementClientContext {
  // Operation groups
  functions: operations.Functions;
  inputs: operations.Inputs;
  outputs: operations.Outputs;
  streamingJobs: operations.StreamingJobs;
  subscriptions: operations.Subscriptions;
  transformations: operations.Transformations;
  operations: operations.Operations;
  clusters: operations.Clusters;
  privateEndpoints: operations.PrivateEndpoints;

  /**
   * Initializes a new instance of the StreamAnalyticsManagementClient class.
   * @param credentials Credentials needed for the client to connect to Azure. Credentials
   * implementing the TokenCredential interface from the @azure/identity package are recommended. For
   * more information about these credentials, see
   * {@link https://www.npmjs.com/package/@azure/identity}. Credentials implementing the
   * ServiceClientCredentials interface from the older packages @azure/ms-rest-nodeauth and
   * @azure/ms-rest-browserauth are also supported.
   * @param subscriptionId The ID of the target subscription.
   * @param [options] The parameter options
   */
  constructor(credentials: msRest.ServiceClientCredentials | TokenCredential, subscriptionId: string, options?: Models.StreamAnalyticsManagementClientOptions) {
    super(credentials, subscriptionId, options);
    this.functions = new operations.Functions(this);
    this.inputs = new operations.Inputs(this);
    this.outputs = new operations.Outputs(this);
    this.streamingJobs = new operations.StreamingJobs(this);
    this.subscriptions = new operations.Subscriptions(this);
    this.transformations = new operations.Transformations(this);
    this.operations = new operations.Operations(this);
    this.clusters = new operations.Clusters(this);
    this.privateEndpoints = new operations.PrivateEndpoints(this);
  }
}

// Operation Specifications

export {
  StreamAnalyticsManagementClient,
  StreamAnalyticsManagementClientContext,
  Models as StreamAnalyticsManagementModels,
  Mappers as StreamAnalyticsManagementMappers
};
export * from "./operations";
