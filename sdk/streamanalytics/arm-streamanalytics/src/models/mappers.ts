/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { CloudErrorMapper, BaseResourceMapper } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export const CloudError = CloudErrorMapper;
export const BaseResource = BaseResourceMapper;

export const FunctionInput: msRest.CompositeMapper = {
  serializedName: "FunctionInput",
  type: {
    name: "Composite",
    className: "FunctionInput",
    modelProperties: {
      dataType: {
        serializedName: "dataType",
        type: {
          name: "String"
        }
      },
      isConfigurationParameter: {
        serializedName: "isConfigurationParameter",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const FunctionOutput: msRest.CompositeMapper = {
  serializedName: "FunctionOutput",
  type: {
    name: "Composite",
    className: "FunctionOutput",
    modelProperties: {
      dataType: {
        serializedName: "dataType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FunctionBinding: msRest.CompositeMapper = {
  serializedName: "FunctionBinding",
  type: {
    name: "Composite",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    uberParent: "FunctionBinding",
    className: "FunctionBinding",
    modelProperties: {
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FunctionProperties: msRest.CompositeMapper = {
  serializedName: "FunctionProperties",
  type: {
    name: "Composite",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    uberParent: "FunctionProperties",
    className: "FunctionProperties",
    modelProperties: {
      etag: {
        readOnly: true,
        serializedName: "etag",
        type: {
          name: "String"
        }
      },
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      inputs: {
        serializedName: "properties.inputs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "FunctionInput"
            }
          }
        }
      },
      output: {
        serializedName: "properties.output",
        type: {
          name: "Composite",
          className: "FunctionOutput"
        }
      },
      binding: {
        serializedName: "properties.binding",
        type: {
          name: "Composite",
          className: "FunctionBinding"
        }
      }
    }
  }
};

export const SubResource: msRest.CompositeMapper = {
  serializedName: "SubResource",
  type: {
    name: "Composite",
    className: "SubResource",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FunctionModel: msRest.CompositeMapper = {
  serializedName: "Function",
  type: {
    name: "Composite",
    className: "FunctionModel",
    modelProperties: {
      ...SubResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "FunctionProperties"
        }
      }
    }
  }
};

export const ScalarFunctionProperties: msRest.CompositeMapper = {
  serializedName: "Scalar",
  type: {
    name: "Composite",
    polymorphicDiscriminator: FunctionProperties.type.polymorphicDiscriminator,
    uberParent: "FunctionProperties",
    className: "ScalarFunctionProperties",
    modelProperties: {
      ...FunctionProperties.type.modelProperties
    }
  }
};

export const AzureMachineLearningStudioInputColumn: msRest.CompositeMapper = {
  serializedName: "AzureMachineLearningStudioInputColumn",
  type: {
    name: "Composite",
    className: "AzureMachineLearningStudioInputColumn",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      dataType: {
        serializedName: "dataType",
        type: {
          name: "String"
        }
      },
      mapTo: {
        serializedName: "mapTo",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const AzureMachineLearningStudioInputs: msRest.CompositeMapper = {
  serializedName: "AzureMachineLearningStudioInputs",
  type: {
    name: "Composite",
    className: "AzureMachineLearningStudioInputs",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      columnNames: {
        serializedName: "columnNames",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AzureMachineLearningStudioInputColumn"
            }
          }
        }
      }
    }
  }
};

export const AzureMachineLearningStudioOutputColumn: msRest.CompositeMapper = {
  serializedName: "AzureMachineLearningStudioOutputColumn",
  type: {
    name: "Composite",
    className: "AzureMachineLearningStudioOutputColumn",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      dataType: {
        serializedName: "dataType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureMachineLearningStudioFunctionBinding: msRest.CompositeMapper = {
  serializedName: "Microsoft.MachineLearning/WebService",
  type: {
    name: "Composite",
    polymorphicDiscriminator: FunctionBinding.type.polymorphicDiscriminator,
    uberParent: "FunctionBinding",
    className: "AzureMachineLearningStudioFunctionBinding",
    modelProperties: {
      ...FunctionBinding.type.modelProperties,
      endpoint: {
        serializedName: "properties.endpoint",
        type: {
          name: "String"
        }
      },
      apiKey: {
        serializedName: "properties.apiKey",
        type: {
          name: "String"
        }
      },
      inputs: {
        serializedName: "properties.inputs",
        type: {
          name: "Composite",
          className: "AzureMachineLearningStudioInputs"
        }
      },
      outputs: {
        serializedName: "properties.outputs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AzureMachineLearningStudioOutputColumn"
            }
          }
        }
      },
      batchSize: {
        serializedName: "properties.batchSize",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const JavaScriptFunctionBinding: msRest.CompositeMapper = {
  serializedName: "Microsoft.StreamAnalytics/JavascriptUdf",
  type: {
    name: "Composite",
    polymorphicDiscriminator: FunctionBinding.type.polymorphicDiscriminator,
    uberParent: "FunctionBinding",
    className: "JavaScriptFunctionBinding",
    modelProperties: {
      ...FunctionBinding.type.modelProperties,
      script: {
        serializedName: "properties.script",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CSharpFunctionBinding: msRest.CompositeMapper = {
  serializedName: "Microsoft.StreamAnalytics/CLRUdf",
  type: {
    name: "Composite",
    polymorphicDiscriminator: FunctionBinding.type.polymorphicDiscriminator,
    uberParent: "FunctionBinding",
    className: "CSharpFunctionBinding",
    modelProperties: {
      ...FunctionBinding.type.modelProperties,
      script: {
        serializedName: "properties.script",
        type: {
          name: "String"
        }
      },
      dllPath: {
        serializedName: "properties.dllPath",
        type: {
          name: "String"
        }
      },
      classProperty: {
        serializedName: "properties.class",
        type: {
          name: "String"
        }
      },
      method: {
        serializedName: "properties.method",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FunctionRetrieveDefaultDefinitionParameters: msRest.CompositeMapper = {
  serializedName: "FunctionRetrieveDefaultDefinitionParameters",
  type: {
    name: "Composite",
    polymorphicDiscriminator: {
      serializedName: "bindingType",
      clientName: "bindingType"
    },
    uberParent: "FunctionRetrieveDefaultDefinitionParameters",
    className: "FunctionRetrieveDefaultDefinitionParameters",
    modelProperties: {
      bindingType: {
        required: true,
        serializedName: "bindingType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureMachineLearningStudioFunctionRetrieveDefaultDefinitionParameters: msRest.CompositeMapper = {
  serializedName: "Microsoft.MachineLearning/WebService",
  type: {
    name: "Composite",
    polymorphicDiscriminator: FunctionRetrieveDefaultDefinitionParameters.type.polymorphicDiscriminator,
    uberParent: "FunctionRetrieveDefaultDefinitionParameters",
    className: "AzureMachineLearningStudioFunctionRetrieveDefaultDefinitionParameters",
    modelProperties: {
      ...FunctionRetrieveDefaultDefinitionParameters.type.modelProperties,
      executeEndpoint: {
        serializedName: "bindingRetrievalProperties.executeEndpoint",
        type: {
          name: "String"
        }
      },
      udfType: {
        serializedName: "bindingRetrievalProperties.udfType",
        type: {
          name: "Enum",
          allowedValues: [
            "Scalar"
          ]
        }
      }
    }
  }
};

export const AzureMachineLearningServiceFunctionRetrieveDefaultDefinitionParameters: msRest.CompositeMapper = {
  serializedName: "Microsoft.MachineLearningServices",
  type: {
    name: "Composite",
    polymorphicDiscriminator: FunctionRetrieveDefaultDefinitionParameters.type.polymorphicDiscriminator,
    uberParent: "FunctionRetrieveDefaultDefinitionParameters",
    className: "AzureMachineLearningServiceFunctionRetrieveDefaultDefinitionParameters",
    modelProperties: {
      ...FunctionRetrieveDefaultDefinitionParameters.type.modelProperties,
      executeEndpoint: {
        serializedName: "bindingRetrievalProperties.executeEndpoint",
        type: {
          name: "String"
        }
      },
      udfType: {
        serializedName: "bindingRetrievalProperties.udfType",
        type: {
          name: "Enum",
          allowedValues: [
            "Scalar"
          ]
        }
      }
    }
  }
};

export const JavaScriptFunctionRetrieveDefaultDefinitionParameters: msRest.CompositeMapper = {
  serializedName: "Microsoft.StreamAnalytics/JavascriptUdf",
  type: {
    name: "Composite",
    polymorphicDiscriminator: FunctionRetrieveDefaultDefinitionParameters.type.polymorphicDiscriminator,
    uberParent: "FunctionRetrieveDefaultDefinitionParameters",
    className: "JavaScriptFunctionRetrieveDefaultDefinitionParameters",
    modelProperties: {
      ...FunctionRetrieveDefaultDefinitionParameters.type.modelProperties,
      script: {
        serializedName: "bindingRetrievalProperties.script",
        type: {
          name: "String"
        }
      },
      udfType: {
        serializedName: "bindingRetrievalProperties.udfType",
        type: {
          name: "Enum",
          allowedValues: [
            "Scalar"
          ]
        }
      }
    }
  }
};

export const CSharpFunctionRetrieveDefaultDefinitionParameters: msRest.CompositeMapper = {
  serializedName: "Microsoft.StreamAnalytics/CLRUdf",
  type: {
    name: "Composite",
    polymorphicDiscriminator: FunctionRetrieveDefaultDefinitionParameters.type.polymorphicDiscriminator,
    uberParent: "FunctionRetrieveDefaultDefinitionParameters",
    className: "CSharpFunctionRetrieveDefaultDefinitionParameters",
    modelProperties: {
      ...FunctionRetrieveDefaultDefinitionParameters.type.modelProperties,
      script: {
        serializedName: "bindingRetrievalProperties.script",
        type: {
          name: "String"
        }
      },
      udfType: {
        serializedName: "bindingRetrievalProperties.udfType",
        type: {
          name: "Enum",
          allowedValues: [
            "Scalar"
          ]
        }
      }
    }
  }
};

export const AzureMachineLearningServiceInputColumn: msRest.CompositeMapper = {
  serializedName: "AzureMachineLearningServiceInputColumn",
  type: {
    name: "Composite",
    className: "AzureMachineLearningServiceInputColumn",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      dataType: {
        serializedName: "dataType",
        type: {
          name: "String"
        }
      },
      mapTo: {
        serializedName: "mapTo",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const AzureMachineLearningServiceOutputColumn: msRest.CompositeMapper = {
  serializedName: "AzureMachineLearningServiceOutputColumn",
  type: {
    name: "Composite",
    className: "AzureMachineLearningServiceOutputColumn",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      dataType: {
        serializedName: "dataType",
        type: {
          name: "String"
        }
      },
      mapTo: {
        serializedName: "mapTo",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const AzureMachineLearningServiceFunctionBinding: msRest.CompositeMapper = {
  serializedName: "Microsoft.MachineLearningServices",
  type: {
    name: "Composite",
    polymorphicDiscriminator: FunctionBinding.type.polymorphicDiscriminator,
    uberParent: "FunctionBinding",
    className: "AzureMachineLearningServiceFunctionBinding",
    modelProperties: {
      ...FunctionBinding.type.modelProperties,
      endpoint: {
        serializedName: "properties.endpoint",
        type: {
          name: "String"
        }
      },
      apiKey: {
        serializedName: "properties.apiKey",
        type: {
          name: "String"
        }
      },
      inputs: {
        serializedName: "properties.inputs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AzureMachineLearningServiceInputColumn"
            }
          }
        }
      },
      outputs: {
        serializedName: "properties.outputs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AzureMachineLearningServiceOutputColumn"
            }
          }
        }
      },
      batchSize: {
        serializedName: "properties.batchSize",
        type: {
          name: "Number"
        }
      },
      numberOfParallelRequests: {
        serializedName: "properties.numberOfParallelRequests",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const AzureMachineLearningServiceInputs: msRest.CompositeMapper = {
  serializedName: "AzureMachineLearningServiceInputs",
  type: {
    name: "Composite",
    className: "AzureMachineLearningServiceInputs",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      columnNames: {
        serializedName: "columnNames",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AzureMachineLearningServiceInputColumn"
            }
          }
        }
      }
    }
  }
};

export const AggregateFunctionProperties: msRest.CompositeMapper = {
  serializedName: "Aggregate",
  type: {
    name: "Composite",
    polymorphicDiscriminator: FunctionProperties.type.polymorphicDiscriminator,
    uberParent: "FunctionProperties",
    className: "AggregateFunctionProperties",
    modelProperties: {
      ...FunctionProperties.type.modelProperties
    }
  }
};

export const ErrorResponse: msRest.CompositeMapper = {
  serializedName: "ErrorResponse",
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      code: {
        readOnly: true,
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        readOnly: true,
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceTestStatus: msRest.CompositeMapper = {
  serializedName: "ResourceTestStatus",
  type: {
    name: "Composite",
    className: "ResourceTestStatus",
    modelProperties: {
      status: {
        readOnly: true,
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      error: {
        readOnly: true,
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorResponse"
        }
      }
    }
  }
};

export const Serialization: msRest.CompositeMapper = {
  serializedName: "Serialization",
  type: {
    name: "Composite",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    uberParent: "Serialization",
    className: "Serialization",
    modelProperties: {
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DiagnosticCondition: msRest.CompositeMapper = {
  serializedName: "DiagnosticCondition",
  type: {
    name: "Composite",
    className: "DiagnosticCondition",
    modelProperties: {
      since: {
        readOnly: true,
        serializedName: "since",
        type: {
          name: "String"
        }
      },
      code: {
        readOnly: true,
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        readOnly: true,
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Diagnostics: msRest.CompositeMapper = {
  serializedName: "Diagnostics",
  type: {
    name: "Composite",
    className: "Diagnostics",
    modelProperties: {
      conditions: {
        readOnly: true,
        serializedName: "conditions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DiagnosticCondition"
            }
          }
        }
      }
    }
  }
};

export const Compression: msRest.CompositeMapper = {
  serializedName: "Compression",
  type: {
    name: "Composite",
    className: "Compression",
    modelProperties: {
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const InputProperties: msRest.CompositeMapper = {
  serializedName: "InputProperties",
  type: {
    name: "Composite",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    uberParent: "InputProperties",
    className: "InputProperties",
    modelProperties: {
      serialization: {
        serializedName: "serialization",
        type: {
          name: "Composite",
          className: "Serialization"
        }
      },
      diagnostics: {
        readOnly: true,
        serializedName: "diagnostics",
        type: {
          name: "Composite",
          className: "Diagnostics"
        }
      },
      etag: {
        readOnly: true,
        serializedName: "etag",
        type: {
          name: "String"
        }
      },
      compression: {
        serializedName: "compression",
        type: {
          name: "Composite",
          className: "Compression"
        }
      },
      partitionKey: {
        serializedName: "partitionKey",
        type: {
          name: "String"
        }
      },
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Input: msRest.CompositeMapper = {
  serializedName: "Input",
  type: {
    name: "Composite",
    className: "Input",
    modelProperties: {
      ...SubResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "InputProperties"
        }
      }
    }
  }
};

export const StreamInputDataSource: msRest.CompositeMapper = {
  serializedName: "StreamInputDataSource",
  type: {
    name: "Composite",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    uberParent: "StreamInputDataSource",
    className: "StreamInputDataSource",
    modelProperties: {
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const StreamInputProperties: msRest.CompositeMapper = {
  serializedName: "Stream",
  type: {
    name: "Composite",
    polymorphicDiscriminator: InputProperties.type.polymorphicDiscriminator,
    uberParent: "InputProperties",
    className: "StreamInputProperties",
    modelProperties: {
      ...InputProperties.type.modelProperties,
      datasource: {
        serializedName: "datasource",
        type: {
          name: "Composite",
          className: "StreamInputDataSource"
        }
      }
    }
  }
};

export const ReferenceInputDataSource: msRest.CompositeMapper = {
  serializedName: "ReferenceInputDataSource",
  type: {
    name: "Composite",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    uberParent: "ReferenceInputDataSource",
    className: "ReferenceInputDataSource",
    modelProperties: {
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ReferenceInputProperties: msRest.CompositeMapper = {
  serializedName: "Reference",
  type: {
    name: "Composite",
    polymorphicDiscriminator: InputProperties.type.polymorphicDiscriminator,
    uberParent: "InputProperties",
    className: "ReferenceInputProperties",
    modelProperties: {
      ...InputProperties.type.modelProperties,
      datasource: {
        serializedName: "datasource",
        type: {
          name: "Composite",
          className: "ReferenceInputDataSource"
        }
      }
    }
  }
};

export const BlobStreamInputDataSource: msRest.CompositeMapper = {
  serializedName: "Microsoft.Storage/Blob",
  type: {
    name: "Composite",
    polymorphicDiscriminator: StreamInputDataSource.type.polymorphicDiscriminator,
    uberParent: "StreamInputDataSource",
    className: "BlobStreamInputDataSource",
    modelProperties: {
      ...StreamInputDataSource.type.modelProperties,
      storageAccounts: {
        serializedName: "properties.storageAccounts",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "StorageAccount"
            }
          }
        }
      },
      container: {
        serializedName: "properties.container",
        type: {
          name: "String"
        }
      },
      pathPattern: {
        serializedName: "properties.pathPattern",
        type: {
          name: "String"
        }
      },
      dateFormat: {
        serializedName: "properties.dateFormat",
        type: {
          name: "String"
        }
      },
      timeFormat: {
        serializedName: "properties.timeFormat",
        type: {
          name: "String"
        }
      },
      sourcePartitionCount: {
        serializedName: "properties.sourcePartitionCount",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const EventHubStreamInputDataSource: msRest.CompositeMapper = {
  serializedName: "Microsoft.ServiceBus/EventHub",
  type: {
    name: "Composite",
    polymorphicDiscriminator: StreamInputDataSource.type.polymorphicDiscriminator,
    uberParent: "StreamInputDataSource",
    className: "EventHubStreamInputDataSource",
    modelProperties: {
      ...StreamInputDataSource.type.modelProperties,
      serviceBusNamespace: {
        serializedName: "properties.serviceBusNamespace",
        type: {
          name: "String"
        }
      },
      sharedAccessPolicyName: {
        serializedName: "properties.sharedAccessPolicyName",
        type: {
          name: "String"
        }
      },
      sharedAccessPolicyKey: {
        serializedName: "properties.sharedAccessPolicyKey",
        type: {
          name: "String"
        }
      },
      authenticationMode: {
        serializedName: "properties.authenticationMode",
        type: {
          name: "String"
        }
      },
      eventHubName: {
        serializedName: "properties.eventHubName",
        type: {
          name: "String"
        }
      },
      consumerGroupName: {
        serializedName: "properties.consumerGroupName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EventHubV2StreamInputDataSource: msRest.CompositeMapper = {
  serializedName: "Microsoft.EventHub/EventHub",
  type: {
    name: "Composite",
    polymorphicDiscriminator: StreamInputDataSource.type.polymorphicDiscriminator,
    uberParent: "StreamInputDataSource",
    className: "EventHubV2StreamInputDataSource",
    modelProperties: {
      ...StreamInputDataSource.type.modelProperties,
      serviceBusNamespace: {
        serializedName: "properties.serviceBusNamespace",
        type: {
          name: "String"
        }
      },
      sharedAccessPolicyName: {
        serializedName: "properties.sharedAccessPolicyName",
        type: {
          name: "String"
        }
      },
      sharedAccessPolicyKey: {
        serializedName: "properties.sharedAccessPolicyKey",
        type: {
          name: "String"
        }
      },
      authenticationMode: {
        serializedName: "properties.authenticationMode",
        type: {
          name: "String"
        }
      },
      eventHubName: {
        serializedName: "properties.eventHubName",
        type: {
          name: "String"
        }
      },
      consumerGroupName: {
        serializedName: "properties.consumerGroupName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IoTHubStreamInputDataSource: msRest.CompositeMapper = {
  serializedName: "Microsoft.Devices/IotHubs",
  type: {
    name: "Composite",
    polymorphicDiscriminator: StreamInputDataSource.type.polymorphicDiscriminator,
    uberParent: "StreamInputDataSource",
    className: "IoTHubStreamInputDataSource",
    modelProperties: {
      ...StreamInputDataSource.type.modelProperties,
      iotHubNamespace: {
        serializedName: "properties.iotHubNamespace",
        type: {
          name: "String"
        }
      },
      sharedAccessPolicyName: {
        serializedName: "properties.sharedAccessPolicyName",
        type: {
          name: "String"
        }
      },
      sharedAccessPolicyKey: {
        serializedName: "properties.sharedAccessPolicyKey",
        type: {
          name: "String"
        }
      },
      consumerGroupName: {
        serializedName: "properties.consumerGroupName",
        type: {
          name: "String"
        }
      },
      endpoint: {
        serializedName: "properties.endpoint",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BlobReferenceInputDataSource: msRest.CompositeMapper = {
  serializedName: "Microsoft.Storage/Blob",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ReferenceInputDataSource.type.polymorphicDiscriminator,
    uberParent: "ReferenceInputDataSource",
    className: "BlobReferenceInputDataSource",
    modelProperties: {
      ...ReferenceInputDataSource.type.modelProperties,
      storageAccounts: {
        serializedName: "properties.storageAccounts",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "StorageAccount"
            }
          }
        }
      },
      container: {
        serializedName: "properties.container",
        type: {
          name: "String"
        }
      },
      pathPattern: {
        serializedName: "properties.pathPattern",
        type: {
          name: "String"
        }
      },
      dateFormat: {
        serializedName: "properties.dateFormat",
        type: {
          name: "String"
        }
      },
      timeFormat: {
        serializedName: "properties.timeFormat",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const StorageAccount: msRest.CompositeMapper = {
  serializedName: "StorageAccount",
  type: {
    name: "Composite",
    className: "StorageAccount",
    modelProperties: {
      accountName: {
        serializedName: "accountName",
        type: {
          name: "String"
        }
      },
      accountKey: {
        serializedName: "accountKey",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BlobDataSourceProperties: msRest.CompositeMapper = {
  serializedName: "BlobDataSourceProperties",
  type: {
    name: "Composite",
    className: "BlobDataSourceProperties",
    modelProperties: {
      storageAccounts: {
        serializedName: "storageAccounts",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "StorageAccount"
            }
          }
        }
      },
      container: {
        serializedName: "container",
        type: {
          name: "String"
        }
      },
      pathPattern: {
        serializedName: "pathPattern",
        type: {
          name: "String"
        }
      },
      dateFormat: {
        serializedName: "dateFormat",
        type: {
          name: "String"
        }
      },
      timeFormat: {
        serializedName: "timeFormat",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServiceBusDataSourceProperties: msRest.CompositeMapper = {
  serializedName: "ServiceBusDataSourceProperties",
  type: {
    name: "Composite",
    className: "ServiceBusDataSourceProperties",
    modelProperties: {
      serviceBusNamespace: {
        serializedName: "serviceBusNamespace",
        type: {
          name: "String"
        }
      },
      sharedAccessPolicyName: {
        serializedName: "sharedAccessPolicyName",
        type: {
          name: "String"
        }
      },
      sharedAccessPolicyKey: {
        serializedName: "sharedAccessPolicyKey",
        type: {
          name: "String"
        }
      },
      authenticationMode: {
        serializedName: "authenticationMode",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EventHubDataSourceProperties: msRest.CompositeMapper = {
  serializedName: "EventHubDataSourceProperties",
  type: {
    name: "Composite",
    className: "EventHubDataSourceProperties",
    modelProperties: {
      ...ServiceBusDataSourceProperties.type.modelProperties,
      eventHubName: {
        serializedName: "eventHubName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ParquetSerialization: msRest.CompositeMapper = {
  serializedName: "Parquet",
  type: {
    name: "Composite",
    polymorphicDiscriminator: Serialization.type.polymorphicDiscriminator,
    uberParent: "Serialization",
    className: "ParquetSerialization",
    modelProperties: {
      ...Serialization.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const CustomClrSerialization: msRest.CompositeMapper = {
  serializedName: "CustomClr",
  type: {
    name: "Composite",
    polymorphicDiscriminator: Serialization.type.polymorphicDiscriminator,
    uberParent: "Serialization",
    className: "CustomClrSerialization",
    modelProperties: {
      ...Serialization.type.modelProperties,
      serializationDllPath: {
        serializedName: "properties.serializationDllPath",
        type: {
          name: "String"
        }
      },
      serializationClassName: {
        serializedName: "properties.serializationClassName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CsvSerialization: msRest.CompositeMapper = {
  serializedName: "Csv",
  type: {
    name: "Composite",
    polymorphicDiscriminator: Serialization.type.polymorphicDiscriminator,
    uberParent: "Serialization",
    className: "CsvSerialization",
    modelProperties: {
      ...Serialization.type.modelProperties,
      fieldDelimiter: {
        serializedName: "properties.fieldDelimiter",
        type: {
          name: "String"
        }
      },
      encoding: {
        serializedName: "properties.encoding",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const JsonSerialization: msRest.CompositeMapper = {
  serializedName: "Json",
  type: {
    name: "Composite",
    polymorphicDiscriminator: Serialization.type.polymorphicDiscriminator,
    uberParent: "Serialization",
    className: "JsonSerialization",
    modelProperties: {
      ...Serialization.type.modelProperties,
      encoding: {
        serializedName: "properties.encoding",
        type: {
          name: "String"
        }
      },
      format: {
        serializedName: "properties.format",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AvroSerialization: msRest.CompositeMapper = {
  serializedName: "Avro",
  type: {
    name: "Composite",
    polymorphicDiscriminator: Serialization.type.polymorphicDiscriminator,
    uberParent: "Serialization",
    className: "AvroSerialization",
    modelProperties: {
      ...Serialization.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const Identity: msRest.CompositeMapper = {
  serializedName: "Identity",
  type: {
    name: "Composite",
    className: "Identity",
    modelProperties: {
      tenantId: {
        serializedName: "tenantId",
        type: {
          name: "String"
        }
      },
      principalId: {
        serializedName: "principalId",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureSqlReferenceInputDataSourceProperties: msRest.CompositeMapper = {
  serializedName: "AzureSqlReferenceInputDataSourceProperties",
  type: {
    name: "Composite",
    className: "AzureSqlReferenceInputDataSourceProperties",
    modelProperties: {
      server: {
        serializedName: "server",
        type: {
          name: "String"
        }
      },
      database: {
        serializedName: "database",
        type: {
          name: "String"
        }
      },
      user: {
        serializedName: "user",
        type: {
          name: "String"
        }
      },
      password: {
        serializedName: "password",
        type: {
          name: "String"
        }
      },
      table: {
        serializedName: "table",
        type: {
          name: "String"
        }
      },
      refreshType: {
        serializedName: "refreshType",
        type: {
          name: "String"
        }
      },
      refreshRate: {
        serializedName: "refreshRate",
        type: {
          name: "String"
        }
      },
      fullSnapshotQuery: {
        serializedName: "fullSnapshotQuery",
        type: {
          name: "String"
        }
      },
      deltaSnapshotQuery: {
        serializedName: "deltaSnapshotQuery",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureSqlReferenceInputDataSource: msRest.CompositeMapper = {
  serializedName: "Microsoft.Sql/Server/Database",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ReferenceInputDataSource.type.polymorphicDiscriminator,
    uberParent: "ReferenceInputDataSource",
    className: "AzureSqlReferenceInputDataSource",
    modelProperties: {
      ...ReferenceInputDataSource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "AzureSqlReferenceInputDataSourceProperties"
        }
      }
    }
  }
};

export const OutputDataSource: msRest.CompositeMapper = {
  serializedName: "OutputDataSource",
  type: {
    name: "Composite",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type"
    },
    uberParent: "OutputDataSource",
    className: "OutputDataSource",
    modelProperties: {
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Output: msRest.CompositeMapper = {
  serializedName: "Output",
  type: {
    name: "Composite",
    className: "Output",
    modelProperties: {
      ...SubResource.type.modelProperties,
      datasource: {
        serializedName: "properties.datasource",
        type: {
          name: "Composite",
          className: "OutputDataSource"
        }
      },
      timeWindow: {
        serializedName: "properties.timeWindow",
        type: {
          name: "String"
        }
      },
      sizeWindow: {
        serializedName: "properties.sizeWindow",
        type: {
          name: "Number"
        }
      },
      serialization: {
        serializedName: "properties.serialization",
        type: {
          name: "Composite",
          className: "Serialization"
        }
      },
      diagnostics: {
        readOnly: true,
        serializedName: "properties.diagnostics",
        type: {
          name: "Composite",
          className: "Diagnostics"
        }
      },
      etag: {
        readOnly: true,
        serializedName: "properties.etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BlobOutputDataSource: msRest.CompositeMapper = {
  serializedName: "Microsoft.Storage/Blob",
  type: {
    name: "Composite",
    polymorphicDiscriminator: OutputDataSource.type.polymorphicDiscriminator,
    uberParent: "OutputDataSource",
    className: "BlobOutputDataSource",
    modelProperties: {
      ...OutputDataSource.type.modelProperties,
      storageAccounts: {
        serializedName: "properties.storageAccounts",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "StorageAccount"
            }
          }
        }
      },
      container: {
        serializedName: "properties.container",
        type: {
          name: "String"
        }
      },
      pathPattern: {
        serializedName: "properties.pathPattern",
        type: {
          name: "String"
        }
      },
      dateFormat: {
        serializedName: "properties.dateFormat",
        type: {
          name: "String"
        }
      },
      timeFormat: {
        serializedName: "properties.timeFormat",
        type: {
          name: "String"
        }
      },
      authenticationMode: {
        serializedName: "properties.authenticationMode",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureTableOutputDataSource: msRest.CompositeMapper = {
  serializedName: "Microsoft.Storage/Table",
  type: {
    name: "Composite",
    polymorphicDiscriminator: OutputDataSource.type.polymorphicDiscriminator,
    uberParent: "OutputDataSource",
    className: "AzureTableOutputDataSource",
    modelProperties: {
      ...OutputDataSource.type.modelProperties,
      accountName: {
        serializedName: "properties.accountName",
        type: {
          name: "String"
        }
      },
      accountKey: {
        serializedName: "properties.accountKey",
        type: {
          name: "String"
        }
      },
      table: {
        serializedName: "properties.table",
        type: {
          name: "String"
        }
      },
      partitionKey: {
        serializedName: "properties.partitionKey",
        type: {
          name: "String"
        }
      },
      rowKey: {
        serializedName: "properties.rowKey",
        type: {
          name: "String"
        }
      },
      columnsToRemove: {
        serializedName: "properties.columnsToRemove",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      batchSize: {
        serializedName: "properties.batchSize",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const EventHubOutputDataSource: msRest.CompositeMapper = {
  serializedName: "Microsoft.ServiceBus/EventHub",
  type: {
    name: "Composite",
    polymorphicDiscriminator: OutputDataSource.type.polymorphicDiscriminator,
    uberParent: "OutputDataSource",
    className: "EventHubOutputDataSource",
    modelProperties: {
      ...OutputDataSource.type.modelProperties,
      serviceBusNamespace: {
        serializedName: "properties.serviceBusNamespace",
        type: {
          name: "String"
        }
      },
      sharedAccessPolicyName: {
        serializedName: "properties.sharedAccessPolicyName",
        type: {
          name: "String"
        }
      },
      sharedAccessPolicyKey: {
        serializedName: "properties.sharedAccessPolicyKey",
        type: {
          name: "String"
        }
      },
      authenticationMode: {
        serializedName: "properties.authenticationMode",
        type: {
          name: "String"
        }
      },
      eventHubName: {
        serializedName: "properties.eventHubName",
        type: {
          name: "String"
        }
      },
      partitionKey: {
        serializedName: "properties.partitionKey",
        type: {
          name: "String"
        }
      },
      propertyColumns: {
        serializedName: "properties.propertyColumns",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const EventHubV2OutputDataSource: msRest.CompositeMapper = {
  serializedName: "Microsoft.EventHub/EventHub",
  type: {
    name: "Composite",
    polymorphicDiscriminator: OutputDataSource.type.polymorphicDiscriminator,
    uberParent: "OutputDataSource",
    className: "EventHubV2OutputDataSource",
    modelProperties: {
      ...OutputDataSource.type.modelProperties,
      serviceBusNamespace: {
        serializedName: "properties.serviceBusNamespace",
        type: {
          name: "String"
        }
      },
      sharedAccessPolicyName: {
        serializedName: "properties.sharedAccessPolicyName",
        type: {
          name: "String"
        }
      },
      sharedAccessPolicyKey: {
        serializedName: "properties.sharedAccessPolicyKey",
        type: {
          name: "String"
        }
      },
      authenticationMode: {
        serializedName: "properties.authenticationMode",
        type: {
          name: "String"
        }
      },
      eventHubName: {
        serializedName: "properties.eventHubName",
        type: {
          name: "String"
        }
      },
      partitionKey: {
        serializedName: "properties.partitionKey",
        type: {
          name: "String"
        }
      },
      propertyColumns: {
        serializedName: "properties.propertyColumns",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const AzureSqlDatabaseOutputDataSource: msRest.CompositeMapper = {
  serializedName: "Microsoft.Sql/Server/Database",
  type: {
    name: "Composite",
    polymorphicDiscriminator: OutputDataSource.type.polymorphicDiscriminator,
    uberParent: "OutputDataSource",
    className: "AzureSqlDatabaseOutputDataSource",
    modelProperties: {
      ...OutputDataSource.type.modelProperties,
      server: {
        serializedName: "properties.server",
        type: {
          name: "String"
        }
      },
      database: {
        serializedName: "properties.database",
        type: {
          name: "String"
        }
      },
      user: {
        serializedName: "properties.user",
        type: {
          name: "String"
        }
      },
      password: {
        serializedName: "properties.password",
        type: {
          name: "String"
        }
      },
      table: {
        serializedName: "properties.table",
        type: {
          name: "String"
        }
      },
      maxBatchCount: {
        serializedName: "properties.maxBatchCount",
        type: {
          name: "Number"
        }
      },
      maxWriterCount: {
        serializedName: "properties.maxWriterCount",
        type: {
          name: "Number"
        }
      },
      authenticationMode: {
        serializedName: "properties.authenticationMode",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureSynapseOutputDataSource: msRest.CompositeMapper = {
  serializedName: "Microsoft.Sql/Server/DataWarehouse",
  type: {
    name: "Composite",
    polymorphicDiscriminator: OutputDataSource.type.polymorphicDiscriminator,
    uberParent: "OutputDataSource",
    className: "AzureSynapseOutputDataSource",
    modelProperties: {
      ...OutputDataSource.type.modelProperties,
      server: {
        serializedName: "properties.server",
        type: {
          name: "String"
        }
      },
      database: {
        serializedName: "properties.database",
        type: {
          name: "String"
        }
      },
      table: {
        serializedName: "properties.table",
        type: {
          name: "String"
        }
      },
      user: {
        serializedName: "properties.user",
        type: {
          name: "String"
        }
      },
      password: {
        serializedName: "properties.password",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureSynapseDataSourceProperties: msRest.CompositeMapper = {
  serializedName: "AzureSynapseDataSourceProperties",
  type: {
    name: "Composite",
    className: "AzureSynapseDataSourceProperties",
    modelProperties: {
      server: {
        serializedName: "server",
        type: {
          name: "String"
        }
      },
      database: {
        serializedName: "database",
        type: {
          name: "String"
        }
      },
      table: {
        serializedName: "table",
        type: {
          name: "String"
        }
      },
      user: {
        serializedName: "user",
        type: {
          name: "String"
        }
      },
      password: {
        serializedName: "password",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DocumentDbOutputDataSource: msRest.CompositeMapper = {
  serializedName: "Microsoft.Storage/DocumentDB",
  type: {
    name: "Composite",
    polymorphicDiscriminator: OutputDataSource.type.polymorphicDiscriminator,
    uberParent: "OutputDataSource",
    className: "DocumentDbOutputDataSource",
    modelProperties: {
      ...OutputDataSource.type.modelProperties,
      accountId: {
        serializedName: "properties.accountId",
        type: {
          name: "String"
        }
      },
      accountKey: {
        serializedName: "properties.accountKey",
        type: {
          name: "String"
        }
      },
      database: {
        serializedName: "properties.database",
        type: {
          name: "String"
        }
      },
      collectionNamePattern: {
        serializedName: "properties.collectionNamePattern",
        type: {
          name: "String"
        }
      },
      partitionKey: {
        serializedName: "properties.partitionKey",
        type: {
          name: "String"
        }
      },
      documentId: {
        serializedName: "properties.documentId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureFunctionOutputDataSource: msRest.CompositeMapper = {
  serializedName: "Microsoft.AzureFunction",
  type: {
    name: "Composite",
    polymorphicDiscriminator: OutputDataSource.type.polymorphicDiscriminator,
    uberParent: "OutputDataSource",
    className: "AzureFunctionOutputDataSource",
    modelProperties: {
      ...OutputDataSource.type.modelProperties,
      functionAppName: {
        serializedName: "properties.functionAppName",
        type: {
          name: "String"
        }
      },
      functionName: {
        serializedName: "properties.functionName",
        type: {
          name: "String"
        }
      },
      apiKey: {
        serializedName: "properties.apiKey",
        type: {
          name: "String"
        }
      },
      maxBatchSize: {
        serializedName: "properties.maxBatchSize",
        type: {
          name: "Number"
        }
      },
      maxBatchCount: {
        serializedName: "properties.maxBatchCount",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ServiceBusQueueOutputDataSource: msRest.CompositeMapper = {
  serializedName: "Microsoft.ServiceBus/Queue",
  type: {
    name: "Composite",
    polymorphicDiscriminator: OutputDataSource.type.polymorphicDiscriminator,
    uberParent: "OutputDataSource",
    className: "ServiceBusQueueOutputDataSource",
    modelProperties: {
      ...OutputDataSource.type.modelProperties,
      serviceBusNamespace: {
        serializedName: "properties.serviceBusNamespace",
        type: {
          name: "String"
        }
      },
      sharedAccessPolicyName: {
        serializedName: "properties.sharedAccessPolicyName",
        type: {
          name: "String"
        }
      },
      sharedAccessPolicyKey: {
        serializedName: "properties.sharedAccessPolicyKey",
        type: {
          name: "String"
        }
      },
      authenticationMode: {
        serializedName: "properties.authenticationMode",
        type: {
          name: "String"
        }
      },
      queueName: {
        serializedName: "properties.queueName",
        type: {
          name: "String"
        }
      },
      propertyColumns: {
        serializedName: "properties.propertyColumns",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      systemPropertyColumns: {
        serializedName: "properties.systemPropertyColumns",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ServiceBusTopicOutputDataSource: msRest.CompositeMapper = {
  serializedName: "Microsoft.ServiceBus/Topic",
  type: {
    name: "Composite",
    polymorphicDiscriminator: OutputDataSource.type.polymorphicDiscriminator,
    uberParent: "OutputDataSource",
    className: "ServiceBusTopicOutputDataSource",
    modelProperties: {
      ...OutputDataSource.type.modelProperties,
      serviceBusNamespace: {
        serializedName: "properties.serviceBusNamespace",
        type: {
          name: "String"
        }
      },
      sharedAccessPolicyName: {
        serializedName: "properties.sharedAccessPolicyName",
        type: {
          name: "String"
        }
      },
      sharedAccessPolicyKey: {
        serializedName: "properties.sharedAccessPolicyKey",
        type: {
          name: "String"
        }
      },
      authenticationMode: {
        serializedName: "properties.authenticationMode",
        type: {
          name: "String"
        }
      },
      topicName: {
        serializedName: "properties.topicName",
        type: {
          name: "String"
        }
      },
      propertyColumns: {
        serializedName: "properties.propertyColumns",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      systemPropertyColumns: {
        serializedName: "properties.systemPropertyColumns",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const PowerBIOutputDataSource: msRest.CompositeMapper = {
  serializedName: "PowerBI",
  type: {
    name: "Composite",
    polymorphicDiscriminator: OutputDataSource.type.polymorphicDiscriminator,
    uberParent: "OutputDataSource",
    className: "PowerBIOutputDataSource",
    modelProperties: {
      ...OutputDataSource.type.modelProperties,
      refreshToken: {
        serializedName: "properties.refreshToken",
        type: {
          name: "String"
        }
      },
      tokenUserPrincipalName: {
        serializedName: "properties.tokenUserPrincipalName",
        type: {
          name: "String"
        }
      },
      tokenUserDisplayName: {
        serializedName: "properties.tokenUserDisplayName",
        type: {
          name: "String"
        }
      },
      dataset: {
        serializedName: "properties.dataset",
        type: {
          name: "String"
        }
      },
      table: {
        serializedName: "properties.table",
        type: {
          name: "String"
        }
      },
      groupId: {
        serializedName: "properties.groupId",
        type: {
          name: "String"
        }
      },
      groupName: {
        serializedName: "properties.groupName",
        type: {
          name: "String"
        }
      },
      authenticationMode: {
        serializedName: "properties.authenticationMode",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureDataLakeStoreOutputDataSource: msRest.CompositeMapper = {
  serializedName: "Microsoft.DataLake/Accounts",
  type: {
    name: "Composite",
    polymorphicDiscriminator: OutputDataSource.type.polymorphicDiscriminator,
    uberParent: "OutputDataSource",
    className: "AzureDataLakeStoreOutputDataSource",
    modelProperties: {
      ...OutputDataSource.type.modelProperties,
      refreshToken: {
        serializedName: "properties.refreshToken",
        type: {
          name: "String"
        }
      },
      tokenUserPrincipalName: {
        serializedName: "properties.tokenUserPrincipalName",
        type: {
          name: "String"
        }
      },
      tokenUserDisplayName: {
        serializedName: "properties.tokenUserDisplayName",
        type: {
          name: "String"
        }
      },
      accountName: {
        serializedName: "properties.accountName",
        type: {
          name: "String"
        }
      },
      tenantId: {
        serializedName: "properties.tenantId",
        type: {
          name: "String"
        }
      },
      filePathPrefix: {
        serializedName: "properties.filePathPrefix",
        type: {
          name: "String"
        }
      },
      dateFormat: {
        serializedName: "properties.dateFormat",
        type: {
          name: "String"
        }
      },
      timeFormat: {
        serializedName: "properties.timeFormat",
        type: {
          name: "String"
        }
      },
      authenticationMode: {
        serializedName: "properties.authenticationMode",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureSqlDatabaseDataSourceProperties: msRest.CompositeMapper = {
  serializedName: "AzureSqlDatabaseDataSourceProperties",
  type: {
    name: "Composite",
    className: "AzureSqlDatabaseDataSourceProperties",
    modelProperties: {
      server: {
        serializedName: "server",
        type: {
          name: "String"
        }
      },
      database: {
        serializedName: "database",
        type: {
          name: "String"
        }
      },
      user: {
        serializedName: "user",
        type: {
          name: "String"
        }
      },
      password: {
        serializedName: "password",
        type: {
          name: "String"
        }
      },
      table: {
        serializedName: "table",
        type: {
          name: "String"
        }
      },
      maxBatchCount: {
        serializedName: "maxBatchCount",
        type: {
          name: "Number"
        }
      },
      maxWriterCount: {
        serializedName: "maxWriterCount",
        type: {
          name: "Number"
        }
      },
      authenticationMode: {
        serializedName: "authenticationMode",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OAuthBasedDataSourceProperties: msRest.CompositeMapper = {
  serializedName: "OAuthBasedDataSourceProperties",
  type: {
    name: "Composite",
    className: "OAuthBasedDataSourceProperties",
    modelProperties: {
      refreshToken: {
        serializedName: "refreshToken",
        type: {
          name: "String"
        }
      },
      tokenUserPrincipalName: {
        serializedName: "tokenUserPrincipalName",
        type: {
          name: "String"
        }
      },
      tokenUserDisplayName: {
        serializedName: "tokenUserDisplayName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const External: msRest.CompositeMapper = {
  serializedName: "External",
  type: {
    name: "Composite",
    className: "External",
    modelProperties: {
      storageAccount: {
        serializedName: "storageAccount",
        type: {
          name: "Composite",
          className: "StorageAccount"
        }
      },
      container: {
        serializedName: "container",
        type: {
          name: "String"
        }
      },
      path: {
        serializedName: "path",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationDisplay: msRest.CompositeMapper = {
  serializedName: "Operation_display",
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        readOnly: true,
        serializedName: "provider",
        type: {
          name: "String"
        }
      },
      resource: {
        readOnly: true,
        serializedName: "resource",
        type: {
          name: "String"
        }
      },
      operation: {
        readOnly: true,
        serializedName: "operation",
        type: {
          name: "String"
        }
      },
      description: {
        readOnly: true,
        serializedName: "description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Operation: msRest.CompositeMapper = {
  serializedName: "Operation",
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      display: {
        readOnly: true,
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay"
        }
      }
    }
  }
};

export const StreamingJobSku: msRest.CompositeMapper = {
  serializedName: "StreamingJobSku",
  type: {
    name: "Composite",
    className: "StreamingJobSku",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Transformation: msRest.CompositeMapper = {
  serializedName: "Transformation",
  type: {
    name: "Composite",
    className: "Transformation",
    modelProperties: {
      ...SubResource.type.modelProperties,
      streamingUnits: {
        serializedName: "properties.streamingUnits",
        type: {
          name: "Number"
        }
      },
      query: {
        serializedName: "properties.query",
        type: {
          name: "String"
        }
      },
      etag: {
        readOnly: true,
        serializedName: "properties.etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const JobStorageAccount: msRest.CompositeMapper = {
  serializedName: "JobStorageAccount",
  type: {
    name: "Composite",
    className: "JobStorageAccount",
    modelProperties: {
      ...StorageAccount.type.modelProperties,
      authenticationMode: {
        serializedName: "authenticationMode",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ClusterInfo: msRest.CompositeMapper = {
  serializedName: "ClusterInfo",
  type: {
    name: "Composite",
    className: "ClusterInfo",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Resource: msRest.CompositeMapper = {
  serializedName: "Resource",
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TrackedResource: msRest.CompositeMapper = {
  serializedName: "TrackedResource",
  type: {
    name: "Composite",
    className: "TrackedResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const StreamingJob: msRest.CompositeMapper = {
  serializedName: "StreamingJob",
  type: {
    name: "Composite",
    className: "StreamingJob",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      sku: {
        serializedName: "properties.sku",
        type: {
          name: "Composite",
          className: "StreamingJobSku"
        }
      },
      jobId: {
        readOnly: true,
        serializedName: "properties.jobId",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      jobState: {
        readOnly: true,
        serializedName: "properties.jobState",
        type: {
          name: "String"
        }
      },
      jobType: {
        serializedName: "properties.jobType",
        type: {
          name: "String"
        }
      },
      outputStartMode: {
        serializedName: "properties.outputStartMode",
        type: {
          name: "String"
        }
      },
      outputStartTime: {
        serializedName: "properties.outputStartTime",
        type: {
          name: "DateTime"
        }
      },
      lastOutputEventTime: {
        readOnly: true,
        serializedName: "properties.lastOutputEventTime",
        type: {
          name: "DateTime"
        }
      },
      eventsOutOfOrderPolicy: {
        serializedName: "properties.eventsOutOfOrderPolicy",
        type: {
          name: "String"
        }
      },
      outputErrorPolicy: {
        serializedName: "properties.outputErrorPolicy",
        type: {
          name: "String"
        }
      },
      eventsOutOfOrderMaxDelayInSeconds: {
        serializedName: "properties.eventsOutOfOrderMaxDelayInSeconds",
        type: {
          name: "Number"
        }
      },
      eventsLateArrivalMaxDelayInSeconds: {
        serializedName: "properties.eventsLateArrivalMaxDelayInSeconds",
        type: {
          name: "Number"
        }
      },
      dataLocale: {
        serializedName: "properties.dataLocale",
        type: {
          name: "String"
        }
      },
      compatibilityLevel: {
        serializedName: "properties.compatibilityLevel",
        type: {
          name: "String"
        }
      },
      createdDate: {
        readOnly: true,
        serializedName: "properties.createdDate",
        type: {
          name: "DateTime"
        }
      },
      inputs: {
        serializedName: "properties.inputs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Input"
            }
          }
        }
      },
      transformation: {
        serializedName: "properties.transformation",
        type: {
          name: "Composite",
          className: "Transformation"
        }
      },
      outputs: {
        serializedName: "properties.outputs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Output"
            }
          }
        }
      },
      functions: {
        serializedName: "properties.functions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "FunctionModel"
            }
          }
        }
      },
      etag: {
        readOnly: true,
        serializedName: "properties.etag",
        type: {
          name: "String"
        }
      },
      jobStorageAccount: {
        serializedName: "properties.jobStorageAccount",
        type: {
          name: "Composite",
          className: "JobStorageAccount"
        }
      },
      contentStoragePolicy: {
        serializedName: "properties.contentStoragePolicy",
        type: {
          name: "String"
        }
      },
      externals: {
        serializedName: "properties.externals",
        type: {
          name: "Composite",
          className: "External"
        }
      },
      cluster: {
        serializedName: "properties.cluster",
        type: {
          name: "Composite",
          className: "ClusterInfo"
        }
      },
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "Identity"
        }
      }
    }
  }
};

export const StartStreamingJobParameters: msRest.CompositeMapper = {
  serializedName: "StartStreamingJobParameters",
  type: {
    name: "Composite",
    className: "StartStreamingJobParameters",
    modelProperties: {
      outputStartMode: {
        serializedName: "outputStartMode",
        type: {
          name: "String"
        }
      },
      outputStartTime: {
        serializedName: "outputStartTime",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const ProxyResource: msRest.CompositeMapper = {
  serializedName: "ProxyResource",
  type: {
    name: "Composite",
    className: "ProxyResource",
    modelProperties: {
      ...Resource.type.modelProperties
    }
  }
};

export const SubscriptionQuota: msRest.CompositeMapper = {
  serializedName: "SubscriptionQuota",
  type: {
    name: "Composite",
    className: "SubscriptionQuota",
    modelProperties: {
      ...SubResource.type.modelProperties,
      maxCount: {
        readOnly: true,
        serializedName: "properties.maxCount",
        type: {
          name: "Number"
        }
      },
      currentCount: {
        readOnly: true,
        serializedName: "properties.currentCount",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const SubscriptionQuotasListResult: msRest.CompositeMapper = {
  serializedName: "SubscriptionQuotasListResult",
  type: {
    name: "Composite",
    className: "SubscriptionQuotasListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SubscriptionQuota"
            }
          }
        }
      }
    }
  }
};

export const ClusterSku: msRest.CompositeMapper = {
  serializedName: "ClusterSku",
  type: {
    name: "Composite",
    className: "ClusterSku",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      capacity: {
        serializedName: "capacity",
        constraints: {
          InclusiveMaximum: 216,
          InclusiveMinimum: 36
        },
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ClusterProperties: msRest.CompositeMapper = {
  serializedName: "ClusterProperties",
  type: {
    name: "Composite",
    className: "ClusterProperties",
    modelProperties: {
      createdDate: {
        readOnly: true,
        serializedName: "createdDate",
        type: {
          name: "DateTime"
        }
      },
      clusterId: {
        readOnly: true,
        serializedName: "clusterId",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "provisioningState",
        type: {
          name: "String"
        }
      },
      capacityAllocated: {
        readOnly: true,
        serializedName: "capacityAllocated",
        type: {
          name: "Number"
        }
      },
      capacityAssigned: {
        readOnly: true,
        serializedName: "capacityAssigned",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Cluster: msRest.CompositeMapper = {
  serializedName: "Cluster",
  type: {
    name: "Composite",
    className: "Cluster",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "ClusterSku"
        }
      },
      etag: {
        readOnly: true,
        serializedName: "etag",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "ClusterProperties"
        }
      }
    }
  }
};

export const ClusterJob: msRest.CompositeMapper = {
  serializedName: "ClusterJob",
  type: {
    name: "Composite",
    className: "ClusterJob",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      streamingUnits: {
        readOnly: true,
        serializedName: "streamingUnits",
        type: {
          name: "Number"
        }
      },
      jobState: {
        serializedName: "jobState",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorDetails: msRest.CompositeMapper = {
  serializedName: "ErrorDetails",
  type: {
    name: "Composite",
    className: "ErrorDetails",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorError: msRest.CompositeMapper = {
  serializedName: "Error_error",
  type: {
    name: "Composite",
    className: "ErrorError",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        type: {
          name: "String"
        }
      },
      details: {
        serializedName: "details",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorDetails"
            }
          }
        }
      }
    }
  }
};

export const ErrorModel: msRest.CompositeMapper = {
  serializedName: "Error",
  type: {
    name: "Composite",
    className: "ErrorModel",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorError"
        }
      }
    }
  }
};

export const PrivateLinkConnectionState: msRest.CompositeMapper = {
  serializedName: "PrivateLinkConnectionState",
  type: {
    name: "Composite",
    className: "PrivateLinkConnectionState",
    modelProperties: {
      status: {
        readOnly: true,
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      description: {
        readOnly: true,
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      actionsRequired: {
        readOnly: true,
        serializedName: "actionsRequired",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PrivateLinkServiceConnection: msRest.CompositeMapper = {
  serializedName: "PrivateLinkServiceConnection",
  type: {
    name: "Composite",
    className: "PrivateLinkServiceConnection",
    modelProperties: {
      privateLinkServiceId: {
        serializedName: "properties.privateLinkServiceId",
        type: {
          name: "String"
        }
      },
      groupIds: {
        serializedName: "properties.groupIds",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      requestMessage: {
        serializedName: "properties.requestMessage",
        type: {
          name: "String"
        }
      },
      privateLinkServiceConnectionState: {
        serializedName: "properties.privateLinkServiceConnectionState",
        type: {
          name: "Composite",
          className: "PrivateLinkConnectionState"
        }
      }
    }
  }
};

export const PrivateEndpointProperties: msRest.CompositeMapper = {
  serializedName: "PrivateEndpointProperties",
  type: {
    name: "Composite",
    className: "PrivateEndpointProperties",
    modelProperties: {
      createdDate: {
        readOnly: true,
        serializedName: "createdDate",
        type: {
          name: "String"
        }
      },
      manualPrivateLinkServiceConnections: {
        serializedName: "manualPrivateLinkServiceConnections",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PrivateLinkServiceConnection"
            }
          }
        }
      }
    }
  }
};

export const PrivateEndpoint: msRest.CompositeMapper = {
  serializedName: "PrivateEndpoint",
  type: {
    name: "Composite",
    className: "PrivateEndpoint",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "PrivateEndpointProperties"
        }
      },
      etag: {
        readOnly: true,
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FunctionsCreateOrReplaceHeaders: msRest.CompositeMapper = {
  serializedName: "functions-createorreplace-headers",
  type: {
    name: "Composite",
    className: "FunctionsCreateOrReplaceHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FunctionsUpdateHeaders: msRest.CompositeMapper = {
  serializedName: "functions-update-headers",
  type: {
    name: "Composite",
    className: "FunctionsUpdateHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FunctionsGetHeaders: msRest.CompositeMapper = {
  serializedName: "functions-get-headers",
  type: {
    name: "Composite",
    className: "FunctionsGetHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const InputsCreateOrReplaceHeaders: msRest.CompositeMapper = {
  serializedName: "inputs-createorreplace-headers",
  type: {
    name: "Composite",
    className: "InputsCreateOrReplaceHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const InputsUpdateHeaders: msRest.CompositeMapper = {
  serializedName: "inputs-update-headers",
  type: {
    name: "Composite",
    className: "InputsUpdateHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const InputsGetHeaders: msRest.CompositeMapper = {
  serializedName: "inputs-get-headers",
  type: {
    name: "Composite",
    className: "InputsGetHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OutputsCreateOrReplaceHeaders: msRest.CompositeMapper = {
  serializedName: "outputs-createorreplace-headers",
  type: {
    name: "Composite",
    className: "OutputsCreateOrReplaceHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OutputsUpdateHeaders: msRest.CompositeMapper = {
  serializedName: "outputs-update-headers",
  type: {
    name: "Composite",
    className: "OutputsUpdateHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OutputsGetHeaders: msRest.CompositeMapper = {
  serializedName: "outputs-get-headers",
  type: {
    name: "Composite",
    className: "OutputsGetHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const StreamingJobsCreateOrReplaceHeaders: msRest.CompositeMapper = {
  serializedName: "streamingjobs-createorreplace-headers",
  type: {
    name: "Composite",
    className: "StreamingJobsCreateOrReplaceHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const StreamingJobsUpdateHeaders: msRest.CompositeMapper = {
  serializedName: "streamingjobs-update-headers",
  type: {
    name: "Composite",
    className: "StreamingJobsUpdateHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const StreamingJobsGetHeaders: msRest.CompositeMapper = {
  serializedName: "streamingjobs-get-headers",
  type: {
    name: "Composite",
    className: "StreamingJobsGetHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TransformationsCreateOrReplaceHeaders: msRest.CompositeMapper = {
  serializedName: "transformations-createorreplace-headers",
  type: {
    name: "Composite",
    className: "TransformationsCreateOrReplaceHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TransformationsUpdateHeaders: msRest.CompositeMapper = {
  serializedName: "transformations-update-headers",
  type: {
    name: "Composite",
    className: "TransformationsUpdateHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TransformationsGetHeaders: msRest.CompositeMapper = {
  serializedName: "transformations-get-headers",
  type: {
    name: "Composite",
    className: "TransformationsGetHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FunctionListResult: msRest.CompositeMapper = {
  serializedName: "FunctionListResult",
  type: {
    name: "Composite",
    className: "FunctionListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "FunctionModel"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const InputListResult: msRest.CompositeMapper = {
  serializedName: "InputListResult",
  type: {
    name: "Composite",
    className: "InputListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Input"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OutputListResult: msRest.CompositeMapper = {
  serializedName: "OutputListResult",
  type: {
    name: "Composite",
    className: "OutputListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Output"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const StreamingJobListResult: msRest.CompositeMapper = {
  serializedName: "StreamingJobListResult",
  type: {
    name: "Composite",
    className: "StreamingJobListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "StreamingJob"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationListResult: msRest.CompositeMapper = {
  serializedName: "OperationListResult",
  type: {
    name: "Composite",
    className: "OperationListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ClusterListResult: msRest.CompositeMapper = {
  serializedName: "ClusterListResult",
  type: {
    name: "Composite",
    className: "ClusterListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Cluster"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ClusterJobListResult: msRest.CompositeMapper = {
  serializedName: "ClusterJobListResult",
  type: {
    name: "Composite",
    className: "ClusterJobListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ClusterJob"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PrivateEndpointListResult: msRest.CompositeMapper = {
  serializedName: "PrivateEndpointListResult",
  type: {
    name: "Composite",
    className: "PrivateEndpointListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PrivateEndpoint"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const discriminators = {
  'FunctionBinding' : FunctionBinding,
  'FunctionProperties' : FunctionProperties,
  'FunctionProperties.Scalar' : ScalarFunctionProperties,
  'FunctionBinding.Microsoft.MachineLearning/WebService' : AzureMachineLearningStudioFunctionBinding,
  'FunctionBinding.Microsoft.StreamAnalytics/JavascriptUdf' : JavaScriptFunctionBinding,
  'FunctionBinding.Microsoft.StreamAnalytics/CLRUdf' : CSharpFunctionBinding,
  'FunctionRetrieveDefaultDefinitionParameters' : FunctionRetrieveDefaultDefinitionParameters,
  'FunctionRetrieveDefaultDefinitionParameters.Microsoft.MachineLearning/WebService' : AzureMachineLearningStudioFunctionRetrieveDefaultDefinitionParameters,
  'FunctionRetrieveDefaultDefinitionParameters.Microsoft.MachineLearningServices' : AzureMachineLearningServiceFunctionRetrieveDefaultDefinitionParameters,
  'FunctionRetrieveDefaultDefinitionParameters.Microsoft.StreamAnalytics/JavascriptUdf' : JavaScriptFunctionRetrieveDefaultDefinitionParameters,
  'FunctionRetrieveDefaultDefinitionParameters.Microsoft.StreamAnalytics/CLRUdf' : CSharpFunctionRetrieveDefaultDefinitionParameters,
  'FunctionBinding.Microsoft.MachineLearningServices' : AzureMachineLearningServiceFunctionBinding,
  'FunctionProperties.Aggregate' : AggregateFunctionProperties,
  'Serialization' : Serialization,
  'InputProperties' : InputProperties,
  'StreamInputDataSource' : StreamInputDataSource,
  'InputProperties.Stream' : StreamInputProperties,
  'ReferenceInputDataSource' : ReferenceInputDataSource,
  'InputProperties.Reference' : ReferenceInputProperties,
  'StreamInputDataSource.Microsoft.Storage/Blob' : BlobStreamInputDataSource,
  'StreamInputDataSource.Microsoft.ServiceBus/EventHub' : EventHubStreamInputDataSource,
  'StreamInputDataSource.Microsoft.EventHub/EventHub' : EventHubV2StreamInputDataSource,
  'StreamInputDataSource.Microsoft.Devices/IotHubs' : IoTHubStreamInputDataSource,
  'ReferenceInputDataSource.Microsoft.Storage/Blob' : BlobReferenceInputDataSource,
  'Serialization.Parquet' : ParquetSerialization,
  'Serialization.CustomClr' : CustomClrSerialization,
  'Serialization.Csv' : CsvSerialization,
  'Serialization.Json' : JsonSerialization,
  'Serialization.Avro' : AvroSerialization,
  'ReferenceInputDataSource.Microsoft.Sql/Server/Database' : AzureSqlReferenceInputDataSource,
  'OutputDataSource' : OutputDataSource,
  'OutputDataSource.Microsoft.Storage/Blob' : BlobOutputDataSource,
  'OutputDataSource.Microsoft.Storage/Table' : AzureTableOutputDataSource,
  'OutputDataSource.Microsoft.ServiceBus/EventHub' : EventHubOutputDataSource,
  'OutputDataSource.Microsoft.EventHub/EventHub' : EventHubV2OutputDataSource,
  'OutputDataSource.Microsoft.Sql/Server/Database' : AzureSqlDatabaseOutputDataSource,
  'OutputDataSource.Microsoft.Sql/Server/DataWarehouse' : AzureSynapseOutputDataSource,
  'OutputDataSource.Microsoft.Storage/DocumentDB' : DocumentDbOutputDataSource,
  'OutputDataSource.Microsoft.AzureFunction' : AzureFunctionOutputDataSource,
  'OutputDataSource.Microsoft.ServiceBus/Queue' : ServiceBusQueueOutputDataSource,
  'OutputDataSource.Microsoft.ServiceBus/Topic' : ServiceBusTopicOutputDataSource,
  'OutputDataSource.PowerBI' : PowerBIOutputDataSource,
  'OutputDataSource.Microsoft.DataLake/Accounts' : AzureDataLakeStoreOutputDataSource

};
