/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { OperationsDiscoveryOperations } from "../operationsInterfaces";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { ResourceMoverServiceAPI } from "../resourceMoverServiceAPI";
import {
  OperationsDiscoveryGetOptionalParams,
  OperationsDiscoveryGetResponse
} from "../models";

/** Class containing OperationsDiscoveryOperations operations. */
export class OperationsDiscoveryOperationsImpl
  implements OperationsDiscoveryOperations {
  private readonly client: ResourceMoverServiceAPI;

  /**
   * Initialize a new instance of the class OperationsDiscoveryOperations class.
   * @param client Reference to the service client
   */
  constructor(client: ResourceMoverServiceAPI) {
    this.client = client;
  }

  /** @param options The options parameters. */
  get(
    options?: OperationsDiscoveryGetOptionalParams
  ): Promise<OperationsDiscoveryGetResponse> {
    return this.client.sendOperationRequest({ options }, getOperationSpec);
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const getOperationSpec: coreClient.OperationSpec = {
  path: "/providers/Microsoft.Migrate/operations",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.OperationsDiscoveryCollection
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [Parameters.$host],
  headerParameters: [Parameters.accept],
  serializer
};
