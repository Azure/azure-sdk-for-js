/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };

/**
 * Metadata pertaining to creation and last modification of the resource.
 */
export interface SystemData {
  /**
   * The identity that created the resource.
   */
  createdBy?: string;
  /**
   * The type of identity that created the resource. Possible values include: 'User',
   * 'Application', 'ManagedIdentity', 'Key'
   */
  createdByType?: CreatedByType;
  /**
   * The timestamp of resource creation (UTC).
   */
  createdAt?: Date;
  /**
   * The identity that last modified the resource.
   */
  lastModifiedBy?: string;
  /**
   * The type of identity that last modified the resource. Possible values include: 'User',
   * 'Application', 'ManagedIdentity', 'Key'
   */
  lastModifiedByType?: CreatedByType;
  /**
   * The type of identity that last modified the resource.
   */
  lastModifiedAt?: Date;
}

/**
 * Represents the base class for all object models.
 */
export interface ARMBaseModel extends BaseResource {
  /**
   * The path ID that uniquely identifies the object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The object name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The hierarchical type of the object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
}

/**
 * Contains the possible cases for Addon.
 */
export type AddonUnion = Addon | ArcAddon | IoTAddon;

/**
 * Role Addon
 */
export interface Addon {
  /**
   * Polymorphic Discriminator
   */
  kind: "Addon";
  /**
   * The path ID that uniquely identifies the object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The object name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The hierarchical type of the object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Addon type
   */
  systemData?: SystemData;
}

/**
 * The shipping address of the customer.
 */
export interface Address {
  /**
   * The address line1.
   */
  addressLine1?: string;
  /**
   * The address line2.
   */
  addressLine2?: string;
  /**
   * The address line3.
   */
  addressLine3?: string;
  /**
   * The postal code.
   */
  postalCode?: string;
  /**
   * The city name.
   */
  city?: string;
  /**
   * The state name.
   */
  state?: string;
  /**
   * The country name.
   */
  country: string;
}

/**
 * Error details for the alert.
 */
export interface AlertErrorDetails {
  /**
   * Error code.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly errorCode?: string;
  /**
   * Error Message.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly errorMessage?: string;
  /**
   * Number of occurrences.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly occurrences?: number;
}

/**
 * Alert on the data box edge/gateway device.
 */
export interface Alert extends ARMBaseModel {
  /**
   * Alert generated in the resource
   */
  systemData?: SystemData;
  /**
   * Alert title.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly title?: string;
  /**
   * Alert type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly alertType?: string;
  /**
   * UTC time when the alert appeared.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly appearedAtDateTime?: Date;
  /**
   * Alert recommendation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly recommendation?: string;
  /**
   * Severity of the alert. Possible values include: 'Informational', 'Warning', 'Critical'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly severity?: AlertSeverity;
  /**
   * Error details of the alert.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly errorDetails?: AlertErrorDetails;
  /**
   * Alert details.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly detailedInformation?: { [propertyName: string]: string };
}

/**
 * Arc Addon.
 */
export interface ArcAddon {
  /**
   * Polymorphic Discriminator
   */
  kind: "ArcForKubernetes";
  /**
   * The path ID that uniquely identifies the object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The object name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The hierarchical type of the object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Addon type
   */
  systemData?: SystemData;
  /**
   * Arc resource subscription Id
   */
  subscriptionId: string;
  /**
   * Arc resource group name
   */
  resourceGroupName: string;
  /**
   * Arc resource Name
   */
  resourceName: string;
  /**
   * Arc resource location
   */
  resourceLocation: string;
  /**
   * Arc resource version
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly version?: string;
  /**
   * Host OS supported by the Arc addon. Possible values include: 'Windows', 'Linux'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly hostPlatform?: PlatformType;
  /**
   * Platform where the runtime is hosted. Possible values include: 'KubernetesCluster', 'LinuxVM'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly hostPlatformType?: HostPlatformType;
  /**
   * Addon Provisioning State. Possible values include: 'Invalid', 'Creating', 'Created',
   * 'Updating', 'Reconfiguring', 'Failed', 'Deleting'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: AddonState;
}

/**
 * Represent the secrets intended for encryption with asymmetric key pair.
 */
export interface AsymmetricEncryptedSecret {
  /**
   * The value of the secret.
   */
  value: string;
  /**
   * Thumbprint certificate used to encrypt \"Value\". If the value is unencrypted, it will be
   * null.
   */
  encryptionCertThumbprint?: string;
  /**
   * The algorithm used to encrypt "Value". Possible values include: 'None', 'AES256',
   * 'RSAES_PKCS1_v_1_5'
   */
  encryptionAlgorithm: EncryptionAlgorithm;
}

/**
 * Symmetric key for authentication.
 */
export interface SymmetricKey {
  /**
   * Connection string based on the symmetric key.
   */
  connectionString?: AsymmetricEncryptedSecret;
}

/**
 * Authentication mechanism for IoT devices.
 */
export interface Authentication {
  /**
   * Symmetric key for authentication.
   */
  symmetricKey?: SymmetricKey;
}

/**
 * Azure container mapping of the endpoint.
 */
export interface AzureContainerInfo {
  /**
   * ID of the storage account credential used to access storage.
   */
  storageAccountCredentialId: string;
  /**
   * Container name (Based on the data format specified, this represents the name of Azure
   * Files/Page blob/Block blob).
   */
  containerName: string;
  /**
   * Storage format used for the file represented by the share. Possible values include:
   * 'BlockBlob', 'PageBlob', 'AzureFile'
   */
  dataFormat: AzureContainerDataFormat;
}

/**
 * The bandwidth schedule details.
 */
export interface BandwidthSchedule extends ARMBaseModel {
  /**
   * Bandwidth object related to ASE resource
   */
  systemData?: SystemData;
  /**
   * The start time of the schedule in UTC.
   */
  start: string;
  /**
   * The stop time of the schedule in UTC.
   */
  stop: string;
  /**
   * The bandwidth rate in Mbps.
   */
  rateInMbps: number;
  /**
   * The days of the week when this schedule is applicable.
   */
  days: DayOfWeek[];
}

/**
 * The mapping between a particular client IP and the type of access client has on the NFS share.
 */
export interface ClientAccessRight {
  /**
   * IP of the client.
   */
  client: string;
  /**
   * Type of access to be allowed for the client. Possible values include: 'NoAccess', 'ReadOnly',
   * 'ReadWrite'
   */
  accessPermission: ClientPermissionType;
}

/**
 * An interface representing SubscriptionRegisteredFeatures.
 */
export interface SubscriptionRegisteredFeatures {
  name?: string;
  state?: string;
}

/**
 * Subscription details for the Edge Profile
 */
export interface EdgeProfileSubscription {
  /**
   * Edge Subscription Registration ID
   */
  registrationId?: string;
  /**
   * ARM ID of the subscription
   */
  id?: string;
  /**
   * Possible values include: 'Registered', 'Warned', 'Suspended', 'Deleted', 'Unregistered'
   */
  state?: SubscriptionState;
  registrationDate?: string;
  subscriptionId?: string;
  tenantId?: string;
  locationPlacementId?: string;
  quotaId?: string;
  serializedDetails?: string;
  registeredFeatures?: SubscriptionRegisteredFeatures[];
}

/**
 * Details about Edge Profile for the resource
 */
export interface EdgeProfile {
  /**
   * Edge Profile Subscription
   */
  subscription?: EdgeProfileSubscription;
}

/**
 * Contains the possible cases for Role.
 */
export type RoleUnion = Role | CloudEdgeManagementRole | IoTRole | KubernetesRole | MECRole;

/**
 * Compute role.
 */
export interface Role {
  /**
   * Polymorphic Discriminator
   */
  kind: "Role";
  /**
   * The path ID that uniquely identifies the object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The object name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The hierarchical type of the object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Role configured on ASE resource
   */
  systemData?: SystemData;
}

/**
 * CloudEdgeManagementRole role, Currently It's in Private Preview
 */
export interface CloudEdgeManagementRole {
  /**
   * Polymorphic Discriminator
   */
  kind: "CloudEdgeManagement";
  /**
   * The path ID that uniquely identifies the object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The object name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The hierarchical type of the object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Role configured on ASE resource
   */
  systemData?: SystemData;
  /**
   * Local Edge Management Status. Possible values include: 'Enabled', 'Disabled'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly localManagementStatus?: RoleStatus;
  /**
   * Edge Profile of the resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly edgeProfile?: EdgeProfile;
  /**
   * Role status. Possible values include: 'Enabled', 'Disabled'
   */
  roleStatus: RoleStatus;
}

/**
 * Cni configuration
 */
export interface CniConfig {
  /**
   * Cni type
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Cni version
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly version?: string;
  /**
   * Pod Subnet
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly podSubnet?: string;
  /**
   * Service subnet
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly serviceSubnet?: string;
}

/**
 * Compute infrastructure Resource
 */
export interface ComputeResource {
  /**
   * Processor count
   */
  processorCount: number;
  /**
   * Memory in GB
   */
  memoryInGB: number;
}

/**
 * Contains all the contact details of the customer.
 */
export interface ContactDetails {
  /**
   * The contact person name.
   */
  contactPerson: string;
  /**
   * The name of the company.
   */
  companyName: string;
  /**
   * The phone number.
   */
  phone: string;
  /**
   * The email list.
   */
  emailList: string[];
}

/**
 * Fields for tracking refresh job on the share or container.
 */
export interface RefreshDetails {
  /**
   * If a refresh job is currently in progress on this share or container, this field indicates the
   * ARM resource ID of that job. The field is empty if no job is in progress.
   */
  inProgressRefreshJobId?: string;
  /**
   * Indicates the completed time for the last refresh job on this particular share or container,
   * if any.This could be a failed job or a successful job.
   */
  lastCompletedRefreshJobTimeInUTC?: Date;
  /**
   * Indicates the relative path of the error xml for the last refresh job on this particular share
   * or container, if any. This could be a failed job or a successful job.
   */
  errorManifestFile?: string;
  /**
   * Indicates the id of the last refresh job on this particular share or container,if any. This
   * could be a failed job or a successful job.
   */
  lastJob?: string;
}

/**
 * Represents a container on the  Data Box Edge/Gateway device.
 */
export interface Container extends ARMBaseModel {
  /**
   * Container in DataBoxEdge Resource
   */
  systemData?: SystemData;
  /**
   * Current status of the container. Possible values include: 'OK', 'Offline', 'Unknown',
   * 'Updating', 'NeedsAttention'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly containerStatus?: ContainerStatus;
  /**
   * DataFormat for Container. Possible values include: 'BlockBlob', 'PageBlob', 'AzureFile'
   */
  dataFormat: AzureContainerDataFormat;
  /**
   * Details of the refresh job on this container.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly refreshDetails?: RefreshDetails;
  /**
   * The UTC time when container got created.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly createdDateTime?: Date;
}

/**
 * The SKU type.
 */
export interface Sku {
  /**
   * SKU name. Possible values include: 'Gateway', 'Edge', 'TEA_1Node', 'TEA_1Node_UPS',
   * 'TEA_1Node_Heater', 'TEA_1Node_UPS_Heater', 'TEA_4Node_Heater', 'TEA_4Node_UPS_Heater', 'TMA',
   * 'TDC', 'TCA_Small', 'GPU', 'TCA_Large', 'EdgeP_Base', 'EdgeP_High', 'EdgePR_Base',
   * 'EdgePR_Base_UPS', 'EP2_64_1VPU_W', 'EP2_128_1T4_Mx1_W', 'EP2_256_2T4_W', 'EdgeMR_Mini',
   * 'RCA_Small', 'RCA_Large', 'RDC', 'Management'
   */
  name?: SkuName;
  /**
   * The SKU tier. This is based on the SKU name. Possible values include: 'Standard'
   */
  tier?: SkuTier;
}

/**
 * Msi identity details of the resource
 */
export interface ResourceIdentity {
  /**
   * Identity type. Possible values include: 'None', 'SystemAssigned', 'UserAssigned'
   */
  type?: MsiIdentityType;
  /**
   * Service Principal Id backing the Msi
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly principalId?: string;
  /**
   * Home Tenant Id
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly tenantId?: string;
}

/**
 * Fields for tracking resource move
 */
export interface ResourceMoveDetails {
  /**
   * Denotes whether move operation is in progress. Possible values include: 'None',
   * 'ResourceMoveInProgress', 'ResourceMoveFailed'
   */
  operationInProgress?: ResourceMoveStatus;
  /**
   * Denotes the timeout of the operation to finish
   */
  operationInProgressLockTimeoutInUTC?: Date;
}

/**
 * Wraps data-residency related information for edge-resource and this should be used with ARM
 * layer.
 */
export interface DataResidency {
  /**
   * DataResidencyType enum. Possible values include: 'GeoZoneReplication', 'ZoneReplication'
   */
  type?: DataResidencyType;
}

/**
 * The Data Box Edge/Gateway device.
 */
export interface DataBoxEdgeDevice extends ARMBaseModel {
  /**
   * The location of the device. This is a supported and registered Azure geographical region (for
   * example, West US, East US, or Southeast Asia). The geographical region of a device cannot be
   * changed once it is created, but if an identical geographical region is specified on update,
   * the request will succeed.
   */
  location: string;
  /**
   * The list of tags that describe the device. These tags can be used to view and group this
   * device (across resource groups).
   */
  tags?: { [propertyName: string]: string };
  /**
   * The SKU type.
   */
  sku?: Sku;
  /**
   * The etag for the devices.
   */
  etag?: string;
  /**
   * Msi identity of the resource
   */
  identity?: ResourceIdentity;
  /**
   * The kind of the device. Possible values include: 'AzureDataBoxGateway', 'AzureStackEdge',
   * 'AzureStackHub', 'AzureModularDataCentre'
   */
  kind?: DataBoxEdgeDeviceKind;
  /**
   * DataBoxEdge Resource
   */
  systemData?: SystemData;
  /**
   * DataBoxEdge Device Properties
   */
  systemData1?: SystemData;
  /**
   * The status of the Data Box Edge/Gateway device. Possible values include: 'ReadyToSetup',
   * 'Online', 'Offline', 'NeedsAttention', 'Disconnected', 'PartiallyDisconnected', 'Maintenance'
   */
  dataBoxEdgeDeviceStatus?: DataBoxEdgeDeviceStatus;
  /**
   * The Serial Number of Data Box Edge/Gateway device.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly serialNumber?: string;
  /**
   * The Description of the Data Box Edge/Gateway device.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * The description of the Data Box Edge/Gateway device model.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly modelDescription?: string;
  /**
   * The type of the Data Box Edge/Gateway device. Possible values include: 'DataBoxEdgeDevice'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly deviceType?: DeviceType;
  /**
   * The Data Box Edge/Gateway device name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly friendlyName?: string;
  /**
   * The Data Box Edge/Gateway device culture.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly culture?: string;
  /**
   * The Data Box Edge/Gateway device model.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly deviceModel?: string;
  /**
   * The Data Box Edge/Gateway device software version.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly deviceSoftwareVersion?: string;
  /**
   * The Data Box Edge/Gateway device local capacity in MB.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly deviceLocalCapacity?: number;
  /**
   * The Data Box Edge/Gateway device timezone.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly timeZone?: string;
  /**
   * The device software version number of the device (eg: 1.2.18105.6).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly deviceHcsVersion?: string;
  /**
   * Type of compute roles configured.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly configuredRoleTypes?: RoleTypes[];
  /**
   * The number of nodes in the cluster.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nodeCount?: number;
  /**
   * The details of the move operation on this resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly resourceMoveDetails?: ResourceMoveDetails;
  /**
   * The details of Edge Profile for this resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly edgeProfile?: EdgeProfile;
  /**
   * The details of data-residency related properties for this resource
   */
  dataResidency?: DataResidency;
}

/**
 * Holds device secret either as a KeyVault reference or as an encrypted value.
 */
export interface Secret {
  /**
   * Encrypted (using device public key) secret value.
   */
  encryptedSecret?: AsymmetricEncryptedSecret;
  /**
   * Id of the Key-Vault where secret is stored (ex:
   * secrets/AuthClientSecret/82ef4346187a4033a10d629cde07d740).
   */
  keyVaultId?: string;
}

/**
 * The extended Info of the Data Box Edge/Gateway device.
 */
export interface DataBoxEdgeDeviceExtendedInfo extends ARMBaseModel {
  /**
   * The digital signature of encrypted certificate.
   */
  encryptionKeyThumbprint?: string;
  /**
   * The public part of the encryption certificate. Client uses this to encrypt any secret.
   */
  encryptionKey?: string;
  /**
   * The Resource ID of the Resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly resourceKey?: string;
  /**
   * The Key Vault ARM Id for client secrets
   */
  clientSecretStoreId?: string;
  /**
   * The url to access the Client Key Vault
   */
  clientSecretStoreUrl?: string;
  /**
   * The name of Channel Integrity Key stored in the Client Key Vault
   */
  channelIntegrityKeyName?: string;
  /**
   * The version of Channel Integrity Key stored in the Client Key Vault
   */
  channelIntegrityKeyVersion?: string;
  /**
   * Key vault sync status. Possible values include: 'KeyVaultSynced', 'KeyVaultSyncFailed',
   * 'KeyVaultNotConfigured', 'KeyVaultSyncPending', 'KeyVaultSyncing', 'KeyVaultNotSynced'
   */
  keyVaultSyncStatus?: KeyVaultSyncStatus;
  /**
   * Device secrets, will be returned only with ODataFilter $expand=deviceSecrets
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly deviceSecrets?: { [propertyName: string]: Secret };
}

/**
 * The Data Box Edge/Gateway device extended info patch.
 */
export interface DataBoxEdgeDeviceExtendedInfoPatch {
  /**
   * The Key Vault ARM Id for client secrets
   */
  clientSecretStoreId?: string;
  /**
   * The url to access the Client Key Vault
   */
  clientSecretStoreUrl?: string;
  /**
   * The name for Channel Integrity Key stored in the Client Key Vault
   */
  channelIntegrityKeyName?: string;
  /**
   * The version of Channel Integrity Key stored in the Client Key Vault
   */
  channelIntegrityKeyVersion?: string;
  /**
   * For changing or to initiate the resync to key-vault set the status to KeyVaultSyncPending,
   * rest of the status will not be applicable. Possible values include: 'KeyVaultSynced',
   * 'KeyVaultSyncFailed', 'KeyVaultNotConfigured', 'KeyVaultSyncPending', 'KeyVaultSyncing',
   * 'KeyVaultNotSynced'
   */
  syncStatus?: KeyVaultSyncStatus;
}

/**
 * The Data Box Edge/Gateway Edge Profile Subscription patch.
 */
export interface EdgeProfileSubscriptionPatch {
  /**
   * The path ID that uniquely identifies the subscription of the edge profile.
   */
  id?: string;
}

/**
 * The Data Box Edge/Gateway Edge Profile patch.
 */
export interface EdgeProfilePatch {
  /**
   * The Data Box Edge/Gateway Edge Profile Subscription patch
   */
  subscription?: EdgeProfileSubscriptionPatch;
}

/**
 * The Data Box Edge/Gateway device patch.
 */
export interface DataBoxEdgeDevicePatch {
  /**
   * The tags attached to the Data Box Edge/Gateway resource.
   */
  tags?: { [propertyName: string]: string };
  /**
   * Msi identity of the resource
   */
  identity?: ResourceIdentity;
  /**
   * Edge Profile property of the Data Box Edge/Gateway device
   */
  edgeProfile?: EdgeProfilePatch;
}

/**
 * Resource Move details
 */
export interface DataBoxEdgeMoveRequest {
  /**
   * Target resource group ARMId
   */
  targetResourceGroup: string;
  /**
   * List of resources to be moved
   */
  resources: string[];
}

/**
 * The location info.
 */
export interface SkuLocationInfo {
  /**
   * The location.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly location?: string;
  /**
   * The zones.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly zones?: string[];
  /**
   * The sites.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly sites?: string[];
}

/**
 * The metadata for retrieving price info.
 */
export interface SkuCost {
  /**
   * Used for querying price from commerce.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly meterId?: string;
  /**
   * The cost quantity.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly quantity?: number;
  /**
   * The extended unit.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly extendedUnit?: string;
}

/**
 * The metadata to describe the capability.
 */
export interface SkuCapability {
  /**
   * An invariant to describe the feature.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * An invariant if the feature is measured by quantity.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly value?: string;
}

/**
 * The Sku information.
 */
export interface DataBoxEdgeSku {
  /**
   * The type of the resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly resourceType?: string;
  /**
   * The Sku name. Possible values include: 'Gateway', 'Edge', 'TEA_1Node', 'TEA_1Node_UPS',
   * 'TEA_1Node_Heater', 'TEA_1Node_UPS_Heater', 'TEA_4Node_Heater', 'TEA_4Node_UPS_Heater', 'TMA',
   * 'TDC', 'TCA_Small', 'GPU', 'TCA_Large', 'EdgeP_Base', 'EdgeP_High', 'EdgePR_Base',
   * 'EdgePR_Base_UPS', 'EP2_64_1VPU_W', 'EP2_128_1T4_Mx1_W', 'EP2_256_2T4_W', 'EdgeMR_Mini',
   * 'RCA_Small', 'RCA_Large', 'RDC', 'Management'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: SkuName;
  /**
   * The Sku kind.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly kind?: string;
  /**
   * The Sku tier. Possible values include: 'Standard'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly tier?: SkuTier;
  /**
   * The Sku kind.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly size?: string;
  /**
   * The Sku family.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly family?: string;
  /**
   * Availability of the Sku for the region.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly locations?: string[];
  /**
   * The API versions in which Sku is available.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly apiVersions?: string[];
  /**
   * Availability of the Sku for the location/zone/site.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly locationInfo?: SkuLocationInfo[];
  /**
   * The pricing info of the Sku.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly costs?: SkuCost[];
  /**
   * Sku can be signed up by customer or not. Possible values include: 'None', 'Available'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly signupOption?: SkuSignupOption;
  /**
   * Availability of the Sku as preview/stable. Possible values include: 'Stable', 'Preview'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly version?: SkuVersion;
  /**
   * Links to the next set of results. Possible values include: 'Available', 'Unavailable'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly availability?: SkuAvailability;
  /**
   * List of Shipment Types supported by this SKU
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly shipmentTypes?: ShipmentType[];
  /**
   * The capability info of the SKU.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly capabilities?: SkuCapability[];
}

/**
 * DC Access code in the case of Self Managed Shipping.
 */
export interface DCAccessCode {
  /**
   * DCAccess Code for the Self Managed shipment.
   */
  authCode?: string;
}

/**
 * The diagnostic proactive log collection settings of a device.
 */
export interface DiagnosticProactiveLogCollectionSettings extends ARMBaseModel {
  /**
   * DiagnosticProactiveLogCollectionSettings
   */
  systemData?: SystemData;
  /**
   * Proactive diagnostic collection consent flag. Possible values include: 'Enabled', 'Disabled'
   */
  userConsent: ProactiveDiagnosticsConsent;
}

/**
 * RemoteApplicationType for which remote support settings is being modified
 */
export interface RemoteSupportSettings {
  /**
   * Remote application type. Possible values include: 'Powershell', 'WAC', 'LocalUI',
   * 'AllApplications'
   */
  remoteApplicationType?: RemoteApplicationType;
  /**
   * Access level allowed for this remote application type. Possible values include: 'None',
   * 'ReadOnly', 'ReadWrite', 'FullAccess'
   */
  accessLevel?: AccessLevel;
  /**
   * Expiration time stamp
   */
  expirationTimeStampInUTC?: Date;
}

/**
 * The remote support settings of a device.
 */
export interface DiagnosticRemoteSupportSettings extends ARMBaseModel {
  /**
   * DiagnosticRemoteSupportSettings
   */
  systemData?: SystemData;
  /**
   * Remote support settings list according to the RemoteApplicationType
   */
  remoteSupportSettingsList?: RemoteSupportSettings[];
}

/**
 * Etcd configuration
 */
export interface EtcdInfo {
  /**
   * Etcd type
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Etcd version
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly version?: string;
}

/**
 * File source details.
 */
export interface FileSourceInfo {
  /**
   * File share ID.
   */
  shareId: string;
}

/**
 * Compute role against which events will be raised.
 */
export interface RoleSinkInfo {
  /**
   * Compute role ID.
   */
  roleId: string;
}

/**
 * Contains the possible cases for Trigger.
 */
export type TriggerUnion = Trigger | FileEventTrigger | PeriodicTimerEventTrigger;

/**
 * Trigger details.
 */
export interface Trigger {
  /**
   * Polymorphic Discriminator
   */
  kind: "Trigger";
  /**
   * The path ID that uniquely identifies the object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The object name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The hierarchical type of the object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Trigger in DataBoxEdge Resource
   */
  systemData?: SystemData;
}

/**
 * Trigger details.
 */
export interface FileEventTrigger {
  /**
   * Polymorphic Discriminator
   */
  kind: "FileEvent";
  /**
   * The path ID that uniquely identifies the object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The object name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The hierarchical type of the object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Trigger in DataBoxEdge Resource
   */
  systemData?: SystemData;
  /**
   * File event source details.
   */
  sourceInfo: FileSourceInfo;
  /**
   * Role sink info.
   */
  sinkInfo: RoleSinkInfo;
  /**
   * A custom context tag typically used to correlate the trigger against its usage. For example,
   * if a periodic timer trigger is intended for certain specific IoT modules in the device, the
   * tag can be the name or the image URL of the module.
   */
  customContextTag?: string;
}

/**
 * Used in activation key generation flow.
 */
export interface GenerateCertResponse {
  /**
   * Gets or sets base64 encoded certificate raw data,
   * this is the public part needed to be uploaded to cert vault
   */
  publicKey?: string;
  /**
   * Gets or sets base64 encoded private part of the certificate,
   * needed to form the activation key
   */
  privateKey?: string;
  /**
   * Gets or sets expiry time in UTC
   */
  expiryTimeInUTC?: string;
}

/**
 * Image repository credential.
 */
export interface ImageRepositoryCredential {
  /**
   * Image repository url (e.g.: mcr.microsoft.com).
   */
  imageRepositoryUrl: string;
  /**
   * Repository user name.
   */
  userName: string;
  /**
   * Repository user password.
   */
  password?: AsymmetricEncryptedSecret;
}

/**
 * Metadata of IoT device/IoT Edge device to be configured.
 */
export interface IoTDeviceInfo {
  /**
   * ID of the IoT device/edge device.
   */
  deviceId: string;
  /**
   * Host name for the IoT hub associated to the device.
   */
  ioTHostHub: string;
  /**
   * Id for the IoT hub associated to the device.
   */
  ioTHostHubId?: string;
  /**
   * Encrypted IoT device/IoT edge device connection string.
   */
  authentication?: Authentication;
}

/**
 * IoT Addon.
 */
export interface IoTAddon {
  /**
   * Polymorphic Discriminator
   */
  kind: "IotEdge";
  /**
   * The path ID that uniquely identifies the object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The object name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The hierarchical type of the object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Addon type
   */
  systemData?: SystemData;
  /**
   * IoT device metadata to which appliance needs to be connected.
   */
  ioTDeviceDetails: IoTDeviceInfo;
  /**
   * IoT edge device to which the IoT Addon needs to be configured.
   */
  ioTEdgeDeviceDetails: IoTDeviceInfo;
  /**
   * Version of IoT running on the appliance.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly version?: string;
  /**
   * Host OS supported by the IoT addon. Possible values include: 'Windows', 'Linux'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly hostPlatform?: PlatformType;
  /**
   * Platform where the runtime is hosted. Possible values include: 'KubernetesCluster', 'LinuxVM'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly hostPlatformType?: HostPlatformType;
  /**
   * Addon Provisioning State. Possible values include: 'Invalid', 'Creating', 'Created',
   * 'Updating', 'Reconfiguring', 'Failed', 'Deleting'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: AddonState;
}

/**
 * IoT edge agent details is optional, this will be used for download system Agent module while
 * bootstrapping IoT Role if specified.
 */
export interface IoTEdgeAgentInfo {
  /**
   * Name of the IoT edge agent image.
   */
  imageName: string;
  /**
   * Image Tag.
   */
  tag: string;
  /**
   * Image repository details.
   */
  imageRepository?: ImageRepositoryCredential;
}

/**
 * The share mount point.
 */
export interface MountPointMap {
  /**
   * ID of the share mounted to the role VM.
   */
  shareId: string;
  /**
   * ID of the role to which share is mounted.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly roleId?: string;
  /**
   * Mount point for the share.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly mountPoint?: string;
  /**
   * Mounting type. Possible values include: 'Volume', 'HostPath'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly mountType?: MountType;
  /**
   * Role type. Possible values include: 'IOT', 'ASA', 'Functions', 'Cognitive', 'MEC',
   * 'CloudEdgeManagement', 'Kubernetes'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly roleType?: RoleTypes;
}

/**
 * Compute role.
 */
export interface IoTRole {
  /**
   * Polymorphic Discriminator
   */
  kind: "IOT";
  /**
   * The path ID that uniquely identifies the object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The object name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The hierarchical type of the object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Role configured on ASE resource
   */
  systemData?: SystemData;
  /**
   * Host OS supported by the IoT role. Possible values include: 'Windows', 'Linux'
   */
  hostPlatform: PlatformType;
  /**
   * IoT device metadata to which data box edge device needs to be connected.
   */
  ioTDeviceDetails: IoTDeviceInfo;
  /**
   * IoT edge device to which the IoT role needs to be configured.
   */
  ioTEdgeDeviceDetails: IoTDeviceInfo;
  /**
   * Mount points of shares in role(s).
   */
  shareMappings?: MountPointMap[];
  /**
   * Iot edge agent details to download the agent and bootstrap iot runtime.
   */
  ioTEdgeAgentInfo?: IoTEdgeAgentInfo;
  /**
   * Platform where the Iot runtime is hosted. Possible values include: 'KubernetesCluster',
   * 'LinuxVM'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly hostPlatformType?: HostPlatformType;
  /**
   * Resource allocation
   */
  computeResource?: ComputeResource;
  /**
   * Role status. Possible values include: 'Enabled', 'Disabled'
   */
  roleStatus: RoleStatus;
}

/**
 * Details related to the IPv4 address configuration.
 */
export interface Ipv4Config {
  /**
   * The IPv4 address of the network adapter.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly ipAddress?: string;
  /**
   * The IPv4 subnet of the network adapter.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly subnet?: string;
  /**
   * The IPv4 gateway of the network adapter.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly gateway?: string;
}

/**
 * Details related to the IPv6 address configuration.
 */
export interface Ipv6Config {
  /**
   * The IPv6 address of the network adapter.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly ipAddress?: string;
  /**
   * The IPv6 prefix of the network adapter.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly prefixLength?: number;
  /**
   * The IPv6 gateway of the network adapter.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly gateway?: string;
}

/**
 * The job error items.
 */
export interface JobErrorItem {
  /**
   * The recommended actions.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly recommendations?: string[];
  /**
   * The code intended for programmatic access.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly code?: string;
  /**
   * The message that describes the error in detail.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly message?: string;
}

/**
 * The job error information containing the list of job errors.
 */
export interface JobErrorDetails {
  /**
   * The error details.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly errorDetails?: JobErrorItem[];
  /**
   * The code intended for programmatic access.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly code?: string;
  /**
   * The message that describes the error in detail.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly message?: string;
}

/**
 * Details about the download progress of update.
 */
export interface UpdateDownloadProgress {
  /**
   * The download phase. Possible values include: 'Unknown', 'Initializing', 'Downloading',
   * 'Verifying'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly downloadPhase?: DownloadPhase;
  /**
   * Percentage of completion.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly percentComplete?: number;
  /**
   * Total bytes to download.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly totalBytesToDownload?: number;
  /**
   * Total bytes downloaded.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly totalBytesDownloaded?: number;
  /**
   * Number of updates to download.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly numberOfUpdatesToDownload?: number;
  /**
   * Number of updates downloaded.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly numberOfUpdatesDownloaded?: number;
}

/**
 * Progress details during installation of updates.
 */
export interface UpdateInstallProgress {
  /**
   * Percentage completed.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly percentComplete?: number;
  /**
   * Number of updates to install.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly numberOfUpdatesToInstall?: number;
  /**
   * Number of updates installed.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly numberOfUpdatesInstalled?: number;
}

/**
 * A device job.
 */
export interface Job {
  /**
   * The path ID that uniquely identifies the object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The name of the object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The hierarchical type of the object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * The current status of the job. Possible values include: 'Invalid', 'Running', 'Succeeded',
   * 'Failed', 'Canceled', 'Paused', 'Scheduled'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: JobStatus;
  /**
   * The UTC date and time at which the job started.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly startTime?: Date;
  /**
   * The UTC date and time at which the job completed.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly endTime?: Date;
  /**
   * The percentage of the job that is complete.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly percentComplete?: number;
  /**
   * The error details.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly error?: JobErrorDetails;
  /**
   * The type of the job. Possible values include: 'Invalid', 'ScanForUpdates', 'DownloadUpdates',
   * 'InstallUpdates', 'RefreshShare', 'RefreshContainer', 'Backup', 'Restore',
   * 'TriggerSupportPackage'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly jobType?: JobType;
  /**
   * Current stage of the update operation. Possible values include: 'Unknown', 'Initial',
   * 'ScanStarted', 'ScanComplete', 'ScanFailed', 'DownloadStarted', 'DownloadComplete',
   * 'DownloadFailed', 'InstallStarted', 'InstallComplete', 'InstallFailed', 'RebootInitiated',
   * 'Success', 'Failure', 'RescanStarted', 'RescanComplete', 'RescanFailed'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly currentStage?: UpdateOperationStage;
  /**
   * The download progress.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly downloadProgress?: UpdateDownloadProgress;
  /**
   * The install progress.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly installProgress?: UpdateInstallProgress;
  /**
   * Total number of errors encountered during the refresh process.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly totalRefreshErrors?: number;
  /**
   * Local share/remote container relative path to the error manifest file of the refresh.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly errorManifestFile?: string;
  /**
   * ARM ID of the entity that was refreshed.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly refreshedEntityId?: string;
  /**
   * If only subfolders need to be refreshed, then the subfolder path inside the share or
   * container. (The path is empty if there are no subfolders.)
   */
  folder?: string;
}

/**
 * Kubernetes node IP configuration
 */
export interface KubernetesIPConfiguration {
  /**
   * Port of the Kubernetes node.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly port?: string;
  /**
   * IP address of the Kubernetes node.
   */
  ipAddress?: string;
}

/**
 * Kubernetes node info
 */
export interface NodeInfo {
  /**
   * Node name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Node type - Master/Worker. Possible values include: 'Invalid', 'Master', 'Worker'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: KubernetesNodeType;
  /**
   * IP Configuration of the Kubernetes node.
   */
  ipConfiguration?: KubernetesIPConfiguration[];
}

/**
 * Kubernetes cluster configuration
 */
export interface KubernetesClusterInfo {
  /**
   * Etcd configuration
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly etcdInfo?: EtcdInfo;
  /**
   * Kubernetes cluster nodes
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nodes?: NodeInfo[];
  /**
   * Kubernetes cluster version
   */
  version: string;
}

/**
 * Kubernetes storage class info.
 */
export interface KubernetesRoleStorageClassInfo {
  /**
   * Storage class name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Storage class type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * If provisioned storage is posix compliant. Possible values include: 'Invalid', 'Enabled',
   * 'Disabled'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly posixCompliant?: PosixComplianceStatus;
}

/**
 * Kubernetes role storage resource
 */
export interface KubernetesRoleStorage {
  /**
   * Kubernetes storage class info.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly storageClasses?: KubernetesRoleStorageClassInfo[];
  /**
   * Mount points of shares in role(s).
   */
  endpoints?: MountPointMap[];
}

/**
 * Kubernetes role compute resource
 */
export interface KubernetesRoleCompute {
  /**
   * VM profile
   */
  vmProfile: string;
  /**
   * Memory in bytes
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly memoryInBytes?: number;
  /**
   * Processor count
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly processorCount?: number;
}

/**
 * Load balancer configuration
 */
export interface LoadBalancerConfig {
  /**
   * Load balancer type
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Load balancer version
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly version?: string;
}

/**
 * Kubernetes role network resource
 */
export interface KubernetesRoleNetwork {
  /**
   * Cni configuration
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly cniConfig?: CniConfig;
  /**
   * Load balancer configuration
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly loadBalancerConfig?: LoadBalancerConfig;
}

/**
 * Kubernetes role resources
 */
export interface KubernetesRoleResources {
  /**
   * Kubernetes role storage resource
   */
  storage?: KubernetesRoleStorage;
  /**
   * Kubernetes role compute resource
   */
  compute: KubernetesRoleCompute;
  /**
   * Kubernetes role network resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly network?: KubernetesRoleNetwork;
}

/**
 * Kubernetes role, Currently it's in Private Preview
 */
export interface KubernetesRole {
  /**
   * Polymorphic Discriminator
   */
  kind: "Kubernetes";
  /**
   * The path ID that uniquely identifies the object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The object name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The hierarchical type of the object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Role configured on ASE resource
   */
  systemData?: SystemData;
  /**
   * Host OS supported by the Kubernetes role. Possible values include: 'Windows', 'Linux'
   */
  hostPlatform: PlatformType;
  /**
   * State of Kubernetes deployment. Possible values include: 'Invalid', 'Creating', 'Created',
   * 'Updating', 'Reconfiguring', 'Failed', 'Deleting'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: KubernetesState;
  /**
   * Platform where the runtime is hosted. Possible values include: 'KubernetesCluster', 'LinuxVM'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly hostPlatformType?: HostPlatformType;
  /**
   * Kubernetes cluster configuration
   */
  kubernetesClusterInfo: KubernetesClusterInfo;
  /**
   * Kubernetes role resources
   */
  kubernetesRoleResources: KubernetesRoleResources;
  /**
   * Role status. Possible values include: 'Enabled', 'Disabled'
   */
  roleStatus: RoleStatus;
}

/**
 * MEC role.
 */
export interface MECRole {
  /**
   * Polymorphic Discriminator
   */
  kind: "MEC";
  /**
   * The path ID that uniquely identifies the object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The object name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The hierarchical type of the object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Role configured on ASE resource
   */
  systemData?: SystemData;
  /**
   * Activation key of the MEC.
   */
  connectionString?: AsymmetricEncryptedSecret;
  /**
   * Controller Endpoint.
   */
  controllerEndpoint?: string;
  /**
   * Unique Id of the Resource.
   */
  resourceUniqueId?: string;
  /**
   * Role status. Possible values include: 'Enabled', 'Disabled'
   */
  roleStatus: RoleStatus;
}

/**
 * The metric dimension
 */
export interface MetricDimension {
  /**
   * The dimension type.
   */
  sourceType: string;
  /**
   * The dimension value.
   */
  sourceName: string;
}

/**
 * The metric counter
 */
export interface MetricCounter {
  /**
   * The counter name.
   */
  name: string;
  /**
   * The instance from which counter should be collected.
   */
  instance?: string;
  /**
   * The dimension filter.
   */
  dimensionFilter?: MetricDimension[];
  /**
   * The additional dimensions to be added to metric.
   */
  additionalDimensions?: MetricDimension[];
}

/**
 * The metric counter set
 */
export interface MetricCounterSet {
  /**
   * The counters that should be collected in this set.
   */
  counters: MetricCounter[];
}

/**
 * Metric configuration.
 */
export interface MetricConfiguration {
  /**
   * The Resource ID on which the metrics should be pushed.
   */
  resourceId: string;
  /**
   * The MDM account to which the counters should be pushed.
   */
  mdmAccount?: string;
  /**
   * The MDM namespace to which the counters should be pushed. This is required if MDMAccount is
   * specified
   */
  metricNameSpace?: string;
  /**
   * Host name for the IoT hub associated to the device.
   */
  counterSets: MetricCounterSet[];
}

/**
 * Metric Dimension v1.
 */
export interface MetricDimensionV1 {
  /**
   * Name of the metrics dimension.
   */
  name?: string;
  /**
   * Display name of the metrics dimension.
   */
  displayName?: string;
  /**
   * To be exported to shoe box.
   */
  toBeExportedForShoebox?: boolean;
}

/**
 * Metric specification version 1.
 */
export interface MetricSpecificationV1 {
  /**
   * Name of the metric.
   */
  name?: string;
  /**
   * Display name of the metric.
   */
  displayName?: string;
  /**
   * Description of the metric to be displayed.
   */
  displayDescription?: string;
  /**
   * Metric units. Possible values include: 'NotSpecified', 'Percent', 'Count', 'Seconds',
   * 'Milliseconds', 'Bytes', 'BytesPerSecond', 'CountPerSecond'
   */
  unit?: MetricUnit;
  /**
   * Metric aggregation type. Possible values include: 'NotSpecified', 'None', 'Average',
   * 'Minimum', 'Maximum', 'Total', 'Count'
   */
  aggregationType?: MetricAggregationType;
  /**
   * Metric dimensions, other than default dimension which is resource.
   */
  dimensions?: MetricDimensionV1[];
  /**
   * Set true to fill the gaps with zero.
   */
  fillGapWithZero?: boolean;
  /**
   * Metric category. Possible values include: 'Capacity', 'Transaction'
   */
  category?: MetricCategory;
  /**
   * Resource name override.
   */
  resourceIdDimensionNameOverride?: string;
  /**
   * Support granularity of metrics.
   */
  supportedTimeGrainTypes?: TimeGrain[];
  /**
   * Support metric aggregation type.
   */
  supportedAggregationTypes?: MetricAggregationType[];
}

/**
 * The metric setting details for the role
 */
export interface MonitoringMetricConfiguration extends ARMBaseModel {
  /**
   * MonitoringConfiguration on ASE device
   */
  systemData?: SystemData;
  /**
   * The metrics configuration details
   */
  metricConfigurations: MetricConfiguration[];
}

/**
 * The network adapter position.
 */
export interface NetworkAdapterPosition {
  /**
   * The network group. Possible values include: 'None', 'NonRDMA', 'RDMA'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly networkGroup?: NetworkGroup;
  /**
   * The port.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly port?: number;
}

/**
 * Represents the networkAdapter on a device.
 */
export interface NetworkAdapter {
  /**
   * Instance ID of network adapter.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly adapterId?: string;
  /**
   * Hardware position of network adapter.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly adapterPosition?: NetworkAdapterPosition;
  /**
   * Logical index of the adapter.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly index?: number;
  /**
   * Node ID of the network adapter.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nodeId?: string;
  /**
   * Network adapter name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly networkAdapterName?: string;
  /**
   * Hardware label for the adapter.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly label?: string;
  /**
   * MAC address.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly macAddress?: string;
  /**
   * Link speed.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly linkSpeed?: number;
  /**
   * Value indicating whether this adapter is valid. Possible values include: 'Inactive', 'Active'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: NetworkAdapterStatus;
  /**
   * Value indicating whether this adapter is RDMA capable. Possible values include: 'Incapable',
   * 'Capable'
   */
  rdmaStatus?: NetworkAdapterRDMAStatus;
  /**
   * Value indicating whether this adapter has DHCP enabled. Possible values include: 'Disabled',
   * 'Enabled'
   */
  dhcpStatus?: NetworkAdapterDHCPStatus;
  /**
   * The IPv4 configuration of the network adapter.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly ipv4Configuration?: Ipv4Config;
  /**
   * The IPv6 configuration of the network adapter.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly ipv6Configuration?: Ipv6Config;
  /**
   * The IPv6 local address.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly ipv6LinkLocalAddress?: string;
  /**
   * The list of DNS Servers of the device.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly dnsServers?: string[];
}

/**
 * The network settings of a device.
 */
export interface NetworkSettings extends ARMBaseModel {
  /**
   * NetworkSettings on ASE device
   */
  systemData?: SystemData;
  /**
   * The network adapter list on the device.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly networkAdapters?: NetworkAdapter[];
}

/**
 * Represents a single node in a Data box Edge/Gateway device
 * Gateway devices, standalone Edge devices and a single node cluster Edge device will all have 1
 * node
 * Multi-node Edge devices will have more than 1 nodes
 */
export interface Node extends ARMBaseModel {
  /**
   * The current status of the individual node. Possible values include: 'Unknown', 'Up', 'Down',
   * 'Rebooting', 'ShuttingDown'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nodeStatus?: NodeStatus;
  /**
   * Serial number of the Chassis
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nodeChassisSerialNumber?: string;
  /**
   * Serial number of the individual node
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nodeSerialNumber?: string;
  /**
   * Display Name of the individual node
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nodeDisplayName?: string;
  /**
   * Friendly software version name that is currently installed on the node
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nodeFriendlySoftwareVersion?: string;
  /**
   * HCS version that is currently installed on the node
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nodeHcsVersion?: string;
  /**
   * Guid instance id of the node
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nodeInstanceId?: string;
}

/**
 * Operation display properties.
 */
export interface OperationDisplay {
  /**
   * Provider name.
   */
  provider?: string;
  /**
   * The type of resource in which the operation is performed.
   */
  resource?: string;
  /**
   * Operation to be performed on the resource.
   */
  operation?: string;
  /**
   * Description of the operation to be performed.
   */
  description?: string;
}

/**
 * Service specification.
 */
export interface ServiceSpecification {
  /**
   * Metric specification as defined by shoebox.
   */
  metricSpecifications?: MetricSpecificationV1[];
}

/**
 * Operations.
 */
export interface Operation {
  /**
   * Name of the operation.
   */
  name?: string;
  /**
   * Is data action.
   */
  isDataAction?: boolean;
  /**
   * Properties displayed for the operation.
   */
  display?: OperationDisplay;
  /**
   * Origin of the operation.
   */
  origin?: string;
  /**
   * Service specification.
   */
  serviceSpecification?: ServiceSpecification;
}

/**
 * Tracking courier information.
 */
export interface TrackingInfo {
  /**
   * Serial number of the device being tracked.
   */
  serialNumber?: string;
  /**
   * Name of the carrier used in the delivery.
   */
  carrierName?: string;
  /**
   * Tracking ID of the shipment.
   */
  trackingId?: string;
  /**
   * Tracking URL of the shipment.
   */
  trackingUrl?: string;
}

/**
 * Represents a single status change.
 */
export interface OrderStatus {
  /**
   * Status of the order as per the allowed status types. Possible values include: 'Untracked',
   * 'AwaitingFulfillment', 'AwaitingPreparation', 'AwaitingShipment', 'Shipped', 'Arriving',
   * 'Delivered', 'ReplacementRequested', 'LostDevice', 'Declined', 'ReturnInitiated',
   * 'AwaitingReturnShipment', 'ShippedBack', 'CollectedAtMicrosoft', 'AwaitingPickup',
   * 'PickupCompleted', 'AwaitingDrop'
   */
  status: OrderState;
  /**
   * Time of status update.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly updateDateTime?: Date;
  /**
   * Comments related to this status change.
   */
  comments?: string;
  /**
   * Tracking information related to the state in the ordering flow
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly trackingInformation?: TrackingInfo;
  /**
   * Dictionary to hold generic information which is not stored
   * by the already existing properties
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly additionalOrderDetails?: { [propertyName: string]: string };
}

/**
 * The order details.
 */
export interface Order extends ARMBaseModel {
  /**
   * Order configured on ASE resource
   */
  systemData?: SystemData;
  /**
   * The contact details.
   */
  contactInformation: ContactDetails;
  /**
   * The shipping address.
   */
  shippingAddress?: Address;
  /**
   * Current status of the order.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly currentStatus?: OrderStatus;
  /**
   * List of status changes in the order.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly orderHistory?: OrderStatus[];
  /**
   * Serial number of the device.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly serialNumber?: string;
  /**
   * Tracking information for the package delivered to the customer whether it has an original or a
   * replacement device.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly deliveryTrackingInfo?: TrackingInfo[];
  /**
   * Tracking information for the package returned from the customer whether it has an original or
   * a replacement device.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly returnTrackingInfo?: TrackingInfo[];
  /**
   * ShipmentType of the order. Possible values include: 'NotApplicable', 'ShippedToCustomer',
   * 'SelfPickup'
   */
  shipmentType?: ShipmentType;
}

/**
 * Periodic timer event source.
 */
export interface PeriodicTimerSourceInfo {
  /**
   * The time of the day that results in a valid trigger. Schedule is computed with reference to
   * the time specified upto seconds. If timezone is not specified the time will considered to be
   * in device timezone. The value will always be returned as UTC time.
   */
  startTime: Date;
  /**
   * Periodic frequency at which timer event needs to be raised. Supports daily, hourly, minutes,
   * and seconds.
   */
  schedule: string;
  /**
   * Topic where periodic events are published to IoT device.
   */
  topic?: string;
}

/**
 * Trigger details.
 */
export interface PeriodicTimerEventTrigger {
  /**
   * Polymorphic Discriminator
   */
  kind: "PeriodicTimerEvent";
  /**
   * The path ID that uniquely identifies the object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The object name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The hierarchical type of the object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Trigger in DataBoxEdge Resource
   */
  systemData?: SystemData;
  /**
   * Periodic timer details.
   */
  sourceInfo: PeriodicTimerSourceInfo;
  /**
   * Role Sink information.
   */
  sinkInfo: RoleSinkInfo;
  /**
   * A custom context tag typically used to correlate the trigger against its usage. For example,
   * if a periodic timer trigger is intended for certain specific IoT modules in the device, the
   * tag can be the name or the image URL of the module.
   */
  customContextTag?: string;
}

/**
 * Sku information
 */
export interface SkuInformation {
  /**
   * The sku name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The sku tier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly tier?: string;
  /**
   * The sku kind.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly kind?: string;
  /**
   * The Sku family.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly family?: string;
  /**
   * The pricing info of the Sku.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly costs?: SkuCost[];
  /**
   * The locations where Sku is available.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly locations?: string[];
  /**
   * The locations where Sku is available with zones and sites info
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly locationInfo?: SkuLocationInfo[];
  /**
   * The required quotaIds for the sku to be available.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly requiredQuotaIds?: string[];
  /**
   * The required features for the sku to be available.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly requiredFeatures?: string[];
}

/**
 * Resource type Sku object
 */
export interface ResourceTypeSku {
  /**
   * The resource type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly resourceType?: string;
  /**
   * The skus.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly skus?: SkuInformation[];
}

/**
 * The security settings of a device.
 */
export interface SecuritySettings extends ARMBaseModel {
  /**
   * Device administrator password as an encrypted string (encrypted using RSA PKCS #1) is used to
   * sign into the  local web UI of the device. The Actual password should have at least 8
   * characters that are a combination of  uppercase, lowercase, numeric, and special characters.
   */
  deviceAdminPassword: AsymmetricEncryptedSecret;
}

/**
 * The mapping between a particular user and the access type on the SMB share.
 */
export interface UserAccessRight {
  /**
   * User ID (already existing in the device).
   */
  userId: string;
  /**
   * Type of access to be allowed for the user. Possible values include: 'Change', 'Read', 'Custom'
   */
  accessType: ShareAccessType;
}

/**
 * Represents a share on the  Data Box Edge/Gateway device.
 */
export interface Share extends ARMBaseModel {
  /**
   * Share on ASE device
   */
  systemData?: SystemData;
  /**
   * Description for the share.
   */
  description?: string;
  /**
   * Current status of the share. Possible values include: 'Offline', 'Unknown', 'OK', 'Updating',
   * 'NeedsAttention'
   */
  shareStatus: ShareStatus;
  /**
   * Current monitoring status of the share. Possible values include: 'Enabled', 'Disabled'
   */
  monitoringStatus: MonitoringStatus;
  /**
   * Azure container mapping for the share.
   */
  azureContainerInfo?: AzureContainerInfo;
  /**
   * Access protocol to be used by the share. Possible values include: 'SMB', 'NFS'
   */
  accessProtocol: ShareAccessProtocol;
  /**
   * Mapping of users and corresponding access rights on the share (required for SMB protocol).
   */
  userAccessRights?: UserAccessRight[];
  /**
   * List of IP addresses and corresponding access rights on the share(required for NFS protocol).
   */
  clientAccessRights?: ClientAccessRight[];
  /**
   * Details of the refresh job on this share.
   */
  refreshDetails?: RefreshDetails;
  /**
   * Share mount point to the role.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly shareMappings?: MountPointMap[];
  /**
   * Data policy of the share. Possible values include: 'Cloud', 'Local'
   */
  dataPolicy?: DataPolicy;
}

/**
 * Specifies the mapping between this particular user and the type of access he has on shares on
 * this device.
 */
export interface ShareAccessRight {
  /**
   * The share ID.
   */
  shareId: string;
  /**
   * Type of access to be allowed on the share for this user. Possible values include: 'Change',
   * 'Read', 'Custom'
   */
  accessType: ShareAccessType;
}

/**
 * List of SKU Information objects
 */
export interface SkuInformationList {
  /**
   * List of ResourceTypeSku objects
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly value?: ResourceTypeSku[];
  /**
   * Links to the next set of results
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * Represents a Storage Account on the  Data Box Edge/Gateway device.
 */
export interface StorageAccount extends ARMBaseModel {
  /**
   * StorageAccount object on ASE device
   */
  systemData?: SystemData;
  /**
   * Description for the storage Account.
   */
  description?: string;
  /**
   * Current status of the storage account. Possible values include: 'OK', 'Offline', 'Unknown',
   * 'Updating', 'NeedsAttention'
   */
  storageAccountStatus?: StorageAccountStatus;
  /**
   * Data policy of the storage Account. Possible values include: 'Cloud', 'Local'
   */
  dataPolicy: DataPolicy;
  /**
   * Storage Account Credential Id
   */
  storageAccountCredentialId?: string;
  /**
   * BlobEndpoint of Storage Account
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly blobEndpoint?: string;
  /**
   * The Container Count. Present only for Storage Accounts with DataPolicy set to Cloud.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly containerCount?: number;
}

/**
 * The storage account credential.
 */
export interface StorageAccountCredential extends ARMBaseModel {
  /**
   * StorageAccountCredential object
   */
  systemData?: SystemData;
  /**
   * Alias for the storage account.
   */
  alias: string;
  /**
   * Username for the storage account.
   */
  userName?: string;
  /**
   * Encrypted storage key.
   */
  accountKey?: AsymmetricEncryptedSecret;
  /**
   * Connection string for the storage account. Use this string if username and account key are not
   * specified.
   */
  connectionString?: string;
  /**
   * Signifies whether SSL needs to be enabled or not. Possible values include: 'Enabled',
   * 'Disabled'
   */
  sslStatus: SSLStatus;
  /**
   * Blob end point for private clouds.
   */
  blobDomainName?: string;
  /**
   * Type of storage accessed on the storage account. Possible values include:
   * 'GeneralPurposeStorage', 'BlobStorage'
   */
  accountType: AccountType;
  /**
   * Id of the storage account.
   */
  storageAccountId?: string;
}

/**
 * The request object for trigger support package.
 */
export interface TriggerSupportPackageRequest extends ARMBaseModel {
  /**
   * MinimumTimeStamp from where logs need to be collected
   */
  minimumTimeStamp?: Date;
  /**
   * MaximumTimeStamp until where logs need to be collected
   */
  maximumTimeStamp?: Date;
  /**
   * Type of files, which need to be included in the logs
   * This will contain the type of logs (Default/DefaultWithDumps/None/All/DefaultWithArchived)
   * or a comma separated list of log types that are required
   */
  include?: string;
}

/**
 * Update Specific attributes
 */
export interface UpdateDetails {
  /**
   * Title of the Update
   */
  updateTitle?: string;
  /**
   * Size of the update(In Bytes)
   */
  updateSize?: number;
  /**
   * Type of the Update. Possible values include: 'Software', 'Kubernetes', 'Firmware'
   */
  updateType?: UpdateType;
  /**
   * Target Version number
   */
  targetVersion?: string;
  /**
   * Friendly Version Number
   */
  friendlyVersionNumber?: string;
  /**
   * Estimated Install Time for the update
   */
  estimatedInstallTimeInMins?: number;
  /**
   * Indicates if updates are available and at least one of the updates needs a reboot. Possible
   * values include: 'NeverReboots', 'RequiresReboot', 'RequestReboot'
   */
  rebootBehavior?: InstallRebootBehavior;
  /**
   * Impact of Installing an updateType. Possible values include: 'None', 'DeviceRebooted',
   * 'KubernetesWorkloadsDown'
   */
  installationImpact?: InstallationImpact;
  /**
   * Status of the update. Possible values include: 'DownloadPending', 'DownloadStarted',
   * 'DownloadCompleted', 'InstallStarted', 'InstallCompleted'
   */
  status?: UpdateStatus;
}

/**
 * Details about ongoing updates and availability of updates on the device.
 */
export interface UpdateSummary extends ARMBaseModel {
  /**
   * UpdateSummary Result
   */
  systemData?: SystemData;
  /**
   * The current version of the device in format: 1.2.17312.13.",
   */
  deviceVersionNumber?: string;
  /**
   * The current version of the device in text format.
   */
  friendlyDeviceVersionName?: string;
  /**
   * The last time when a scan was done on the device.
   */
  deviceLastScannedDateTime?: Date;
  /**
   * The time when the last scan job was completed (success/cancelled/failed) on the appliance.
   */
  lastCompletedScanJobDateTime?: Date;
  /**
   * Time when the last scan job is successfully completed.
   */
  lastSuccessfulScanJobTime?: Date;
  /**
   * The time when the last Download job was completed (success/cancelled/failed) on the appliance.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastCompletedDownloadJobDateTime?: Date;
  /**
   * JobId of the last ran download job.(Can be success/cancelled/failed)
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastCompletedDownloadJobId?: string;
  /**
   * JobStatus of the last ran download job. Possible values include: 'Invalid', 'Running',
   * 'Succeeded', 'Failed', 'Canceled', 'Paused', 'Scheduled'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastDownloadJobStatus?: JobStatus;
  /**
   * The time when the Last Install job was completed successfully on the appliance
   */
  lastSuccessfulInstallJobDateTime?: Date;
  /**
   * The time when the last Install job was completed (success/cancelled/failed) on the appliance.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastCompletedInstallJobDateTime?: Date;
  /**
   * JobId of the last ran install job.(Can be success/cancelled/failed)
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastCompletedInstallJobId?: string;
  /**
   * JobStatus of the last ran install job. Possible values include: 'Invalid', 'Running',
   * 'Succeeded', 'Failed', 'Canceled', 'Paused', 'Scheduled'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastInstallJobStatus?: JobStatus;
  /**
   * The number of updates available for the current device version as per the last device scan.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly totalNumberOfUpdatesAvailable?: number;
  /**
   * The total number of items pending download.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly totalNumberOfUpdatesPendingDownload?: number;
  /**
   * The total number of items pending install.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly totalNumberOfUpdatesPendingInstall?: number;
  /**
   * Indicates if updates are available and at least one of the updates needs a reboot. Possible
   * values include: 'NeverReboots', 'RequiresReboot', 'RequestReboot'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly rebootBehavior?: InstallRebootBehavior;
  /**
   * The current update operation. Possible values include: 'None', 'Scan', 'Download', 'Install'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly ongoingUpdateOperation?: UpdateOperation;
  /**
   * The job ID of the download job in progress.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly inProgressDownloadJobId?: string;
  /**
   * The job ID of the install job in progress.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly inProgressInstallJobId?: string;
  /**
   * The time when the currently running download (if any) started.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly inProgressDownloadJobStartedDateTime?: Date;
  /**
   * The time when the currently running install (if any) started.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly inProgressInstallJobStartedDateTime?: Date;
  /**
   * The list of updates available for install.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly updateTitles?: string[];
  /**
   * The list of updates available for install.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly updates?: UpdateDetails[];
  /**
   * The total size of updates available for download in bytes.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly totalUpdateSizeInBytes?: number;
  /**
   * The total time in Minutes
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly totalTimeInMinutes?: number;
}

/**
 * The upload certificate request.
 */
export interface UploadCertificateRequest {
  /**
   * The authentication type. Possible values include: 'Invalid', 'AzureActiveDirectory'
   */
  authenticationType?: AuthenticationType;
  /**
   * The base64 encoded certificate raw data.
   */
  certificate: string;
}

/**
 * The upload registration certificate response.
 */
export interface UploadCertificateResponse {
  /**
   * Specifies authentication type. Possible values include: 'Invalid', 'AzureActiveDirectory'
   */
  authType?: AuthenticationType;
  /**
   * The resource ID of the Data Box Edge/Gateway device.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly resourceId?: string;
  /**
   * Azure Active Directory tenant authority.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly aadAuthority?: string;
  /**
   * Azure Active Directory tenant ID.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly aadTenantId?: string;
  /**
   * Azure Active Directory service principal client ID.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly servicePrincipalClientId?: string;
  /**
   * Azure Active Directory service principal object ID.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly servicePrincipalObjectId?: string;
  /**
   * The azure management endpoint audience.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly azureManagementEndpointAudience?: string;
  /**
   * Identifier of the target resource that is the recipient of the requested token.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly aadAudience?: string;
}

/**
 * Represents a user who has access to one or more shares on the Data Box Edge/Gateway device.
 */
export interface User extends ARMBaseModel {
  /**
   * User in DataBoxEdge Resource
   */
  systemData?: SystemData;
  /**
   * The password details.
   */
  encryptedPassword?: AsymmetricEncryptedSecret;
  /**
   * List of shares that the user has rights on. This field should not be specified during user
   * creation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly shareAccessRights?: ShareAccessRight[];
  /**
   * Type of the user. Possible values include: 'Share', 'LocalManagement', 'ARM'
   */
  userType: UserType;
}

/**
 * Optional Parameters.
 */
export interface DevicesListBySubscriptionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Specify $expand=details to populate additional fields related to the resource or Specify
   * $skipToken=<token> to populate the next page in the list.
   */
  expand?: string;
}

/**
 * Optional Parameters.
 */
export interface DevicesListByResourceGroupOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Specify $expand=details to populate additional fields related to the resource or Specify
   * $skipToken=<token> to populate the next page in the list.
   */
  expand?: string;
}

/**
 * Optional Parameters.
 */
export interface DevicesListBySubscriptionNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Specify $expand=details to populate additional fields related to the resource or Specify
   * $skipToken=<token> to populate the next page in the list.
   */
  expand?: string;
}

/**
 * Optional Parameters.
 */
export interface DevicesListByResourceGroupNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Specify $expand=details to populate additional fields related to the resource or Specify
   * $skipToken=<token> to populate the next page in the list.
   */
  expand?: string;
}

/**
 * Optional Parameters.
 */
export interface TriggersListByDataBoxEdgeDeviceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Specify $filter='CustomContextTag eq <tag>' to filter on custom context tag property
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface TriggersListByDataBoxEdgeDeviceNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Specify $filter='CustomContextTag eq <tag>' to filter on custom context tag property
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface UsersListByDataBoxEdgeDeviceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Specify $filter='Type eq <type>' to filter on user type property
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface UsersListByDataBoxEdgeDeviceNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Specify $filter='Type eq <type>' to filter on user type property
   */
  filter?: string;
}

/**
 * An interface representing DataBoxEdgeManagementClientOptions.
 */
export interface DataBoxEdgeManagementClientOptions extends AzureServiceClientOptions {
  baseUri?: string;
}

/**
 * @interface
 * The list of operations used for the discovery of available provider operations.
 * @extends Array<Operation>
 */
export interface OperationsList extends Array<Operation> {
  /**
   * Link to the next set of results.
   */
  nextLink?: string;
}

/**
 * @interface
 * List of SKU Information objects.
 * @extends Array<DataBoxEdgeSku>
 */
export interface DataBoxEdgeSkuList extends Array<DataBoxEdgeSku> {
  /**
   * Links to the next set of results
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * The collection of Data Box Edge/Gateway devices.
 * @extends Array<DataBoxEdgeDevice>
 */
export interface DataBoxEdgeDeviceList extends Array<DataBoxEdgeDevice> {
  /**
   * Link to the next set of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Collection of alerts.
 * @extends Array<Alert>
 */
export interface AlertList extends Array<Alert> {
  /**
   * Link to the next set of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * The collection of bandwidth schedules.
 * @extends Array<BandwidthSchedule>
 */
export interface BandwidthSchedulesList extends Array<BandwidthSchedule> {
  /**
   * Link to the next set of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Collection of Nodes.
 * @extends Array<Node>
 */
export interface NodeList extends Array<Node> {
  /**
   * Link to the next set of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * List of order entities.
 * @extends Array<Order>
 */
export interface OrderList extends Array<Order> {
  /**
   * Link to the next set of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Collection of all the roles on the Data Box Edge device.
 * @extends Array<RoleUnion>
 */
export interface RoleList extends Array<RoleUnion> {
  /**
   * Link to the next set of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Collection of all the Role addon on the Azure Stack Edge device.
 * @extends Array<AddonUnion>
 */
export interface AddonList extends Array<AddonUnion> {
  /**
   * Link to the next set of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Collection of metric configurations.
 * @extends Array<MonitoringMetricConfiguration>
 */
export interface MonitoringMetricConfigurationList extends Array<MonitoringMetricConfiguration> {
  /**
   * Link to the next set of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Collection of all the shares on the Data Box Edge/Gateway device.
 * @extends Array<Share>
 */
export interface ShareList extends Array<Share> {
  /**
   * Link to the next set of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * The collection of storage account credentials.
 * @extends Array<StorageAccountCredential>
 */
export interface StorageAccountCredentialList extends Array<StorageAccountCredential> {
  /**
   * Link to the next set of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Collection of all the Storage Accounts on the Data Box Edge/Gateway device.
 * @extends Array<StorageAccount>
 */
export interface StorageAccountList extends Array<StorageAccount> {
  /**
   * Link to the next set of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Collection of all the containers on the Data Box Edge/Gateway device.
 * @extends Array<Container>
 */
export interface ContainerList extends Array<Container> {
  /**
   * Link to the next set of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Collection of all trigger on the data box edge device.
 * @extends Array<TriggerUnion>
 */
export interface TriggerList extends Array<TriggerUnion> {
  /**
   * Link to the next set of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Collection of users.
 * @extends Array<User>
 */
export interface UserList extends Array<User> {
  /**
   * Link to the next set of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * Defines values for CreatedByType.
 * Possible values include: 'User', 'Application', 'ManagedIdentity', 'Key'
 * @readonly
 * @enum {string}
 */
export type CreatedByType = 'User' | 'Application' | 'ManagedIdentity' | 'Key';

/**
 * Defines values for AlertSeverity.
 * Possible values include: 'Informational', 'Warning', 'Critical'
 * @readonly
 * @enum {string}
 */
export type AlertSeverity = 'Informational' | 'Warning' | 'Critical';

/**
 * Defines values for PlatformType.
 * Possible values include: 'Windows', 'Linux'
 * @readonly
 * @enum {string}
 */
export type PlatformType = 'Windows' | 'Linux';

/**
 * Defines values for HostPlatformType.
 * Possible values include: 'KubernetesCluster', 'LinuxVM'
 * @readonly
 * @enum {string}
 */
export type HostPlatformType = 'KubernetesCluster' | 'LinuxVM';

/**
 * Defines values for AddonState.
 * Possible values include: 'Invalid', 'Creating', 'Created', 'Updating', 'Reconfiguring',
 * 'Failed', 'Deleting'
 * @readonly
 * @enum {string}
 */
export type AddonState = 'Invalid' | 'Creating' | 'Created' | 'Updating' | 'Reconfiguring' | 'Failed' | 'Deleting';

/**
 * Defines values for EncryptionAlgorithm.
 * Possible values include: 'None', 'AES256', 'RSAES_PKCS1_v_1_5'
 * @readonly
 * @enum {string}
 */
export type EncryptionAlgorithm = 'None' | 'AES256' | 'RSAES_PKCS1_v_1_5';

/**
 * Defines values for AzureContainerDataFormat.
 * Possible values include: 'BlockBlob', 'PageBlob', 'AzureFile'
 * @readonly
 * @enum {string}
 */
export type AzureContainerDataFormat = 'BlockBlob' | 'PageBlob' | 'AzureFile';

/**
 * Defines values for DayOfWeek.
 * Possible values include: 'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday',
 * 'Saturday'
 * @readonly
 * @enum {string}
 */
export type DayOfWeek = 'Sunday' | 'Monday' | 'Tuesday' | 'Wednesday' | 'Thursday' | 'Friday' | 'Saturday';

/**
 * Defines values for ClientPermissionType.
 * Possible values include: 'NoAccess', 'ReadOnly', 'ReadWrite'
 * @readonly
 * @enum {string}
 */
export type ClientPermissionType = 'NoAccess' | 'ReadOnly' | 'ReadWrite';

/**
 * Defines values for RoleStatus.
 * Possible values include: 'Enabled', 'Disabled'
 * @readonly
 * @enum {string}
 */
export type RoleStatus = 'Enabled' | 'Disabled';

/**
 * Defines values for SubscriptionState.
 * Possible values include: 'Registered', 'Warned', 'Suspended', 'Deleted', 'Unregistered'
 * @readonly
 * @enum {string}
 */
export type SubscriptionState = 'Registered' | 'Warned' | 'Suspended' | 'Deleted' | 'Unregistered';

/**
 * Defines values for ContainerStatus.
 * Possible values include: 'OK', 'Offline', 'Unknown', 'Updating', 'NeedsAttention'
 * @readonly
 * @enum {string}
 */
export type ContainerStatus = 'OK' | 'Offline' | 'Unknown' | 'Updating' | 'NeedsAttention';

/**
 * Defines values for SkuName.
 * Possible values include: 'Gateway', 'Edge', 'TEA_1Node', 'TEA_1Node_UPS', 'TEA_1Node_Heater',
 * 'TEA_1Node_UPS_Heater', 'TEA_4Node_Heater', 'TEA_4Node_UPS_Heater', 'TMA', 'TDC', 'TCA_Small',
 * 'GPU', 'TCA_Large', 'EdgeP_Base', 'EdgeP_High', 'EdgePR_Base', 'EdgePR_Base_UPS',
 * 'EP2_64_1VPU_W', 'EP2_128_1T4_Mx1_W', 'EP2_256_2T4_W', 'EdgeMR_Mini', 'RCA_Small', 'RCA_Large',
 * 'RDC', 'Management'
 * @readonly
 * @enum {string}
 */
export type SkuName = 'Gateway' | 'Edge' | 'TEA_1Node' | 'TEA_1Node_UPS' | 'TEA_1Node_Heater' | 'TEA_1Node_UPS_Heater' | 'TEA_4Node_Heater' | 'TEA_4Node_UPS_Heater' | 'TMA' | 'TDC' | 'TCA_Small' | 'GPU' | 'TCA_Large' | 'EdgeP_Base' | 'EdgeP_High' | 'EdgePR_Base' | 'EdgePR_Base_UPS' | 'EP2_64_1VPU_W' | 'EP2_128_1T4_Mx1_W' | 'EP2_256_2T4_W' | 'EdgeMR_Mini' | 'RCA_Small' | 'RCA_Large' | 'RDC' | 'Management';

/**
 * Defines values for SkuTier.
 * Possible values include: 'Standard'
 * @readonly
 * @enum {string}
 */
export type SkuTier = 'Standard';

/**
 * Defines values for MsiIdentityType.
 * Possible values include: 'None', 'SystemAssigned', 'UserAssigned'
 * @readonly
 * @enum {string}
 */
export type MsiIdentityType = 'None' | 'SystemAssigned' | 'UserAssigned';

/**
 * Defines values for DataBoxEdgeDeviceKind.
 * Possible values include: 'AzureDataBoxGateway', 'AzureStackEdge', 'AzureStackHub',
 * 'AzureModularDataCentre'
 * @readonly
 * @enum {string}
 */
export type DataBoxEdgeDeviceKind = 'AzureDataBoxGateway' | 'AzureStackEdge' | 'AzureStackHub' | 'AzureModularDataCentre';

/**
 * Defines values for DataBoxEdgeDeviceStatus.
 * Possible values include: 'ReadyToSetup', 'Online', 'Offline', 'NeedsAttention', 'Disconnected',
 * 'PartiallyDisconnected', 'Maintenance'
 * @readonly
 * @enum {string}
 */
export type DataBoxEdgeDeviceStatus = 'ReadyToSetup' | 'Online' | 'Offline' | 'NeedsAttention' | 'Disconnected' | 'PartiallyDisconnected' | 'Maintenance';

/**
 * Defines values for DeviceType.
 * Possible values include: 'DataBoxEdgeDevice'
 * @readonly
 * @enum {string}
 */
export type DeviceType = 'DataBoxEdgeDevice';

/**
 * Defines values for RoleTypes.
 * Possible values include: 'IOT', 'ASA', 'Functions', 'Cognitive', 'MEC', 'CloudEdgeManagement',
 * 'Kubernetes'
 * @readonly
 * @enum {string}
 */
export type RoleTypes = 'IOT' | 'ASA' | 'Functions' | 'Cognitive' | 'MEC' | 'CloudEdgeManagement' | 'Kubernetes';

/**
 * Defines values for ResourceMoveStatus.
 * Possible values include: 'None', 'ResourceMoveInProgress', 'ResourceMoveFailed'
 * @readonly
 * @enum {string}
 */
export type ResourceMoveStatus = 'None' | 'ResourceMoveInProgress' | 'ResourceMoveFailed';

/**
 * Defines values for DataResidencyType.
 * Possible values include: 'GeoZoneReplication', 'ZoneReplication'
 * @readonly
 * @enum {string}
 */
export type DataResidencyType = 'GeoZoneReplication' | 'ZoneReplication';

/**
 * Defines values for KeyVaultSyncStatus.
 * Possible values include: 'KeyVaultSynced', 'KeyVaultSyncFailed', 'KeyVaultNotConfigured',
 * 'KeyVaultSyncPending', 'KeyVaultSyncing', 'KeyVaultNotSynced'
 * @readonly
 * @enum {string}
 */
export type KeyVaultSyncStatus = 'KeyVaultSynced' | 'KeyVaultSyncFailed' | 'KeyVaultNotConfigured' | 'KeyVaultSyncPending' | 'KeyVaultSyncing' | 'KeyVaultNotSynced';

/**
 * Defines values for SkuSignupOption.
 * Possible values include: 'None', 'Available'
 * @readonly
 * @enum {string}
 */
export type SkuSignupOption = 'None' | 'Available';

/**
 * Defines values for SkuVersion.
 * Possible values include: 'Stable', 'Preview'
 * @readonly
 * @enum {string}
 */
export type SkuVersion = 'Stable' | 'Preview';

/**
 * Defines values for SkuAvailability.
 * Possible values include: 'Available', 'Unavailable'
 * @readonly
 * @enum {string}
 */
export type SkuAvailability = 'Available' | 'Unavailable';

/**
 * Defines values for ShipmentType.
 * Possible values include: 'NotApplicable', 'ShippedToCustomer', 'SelfPickup'
 * @readonly
 * @enum {string}
 */
export type ShipmentType = 'NotApplicable' | 'ShippedToCustomer' | 'SelfPickup';

/**
 * Defines values for ProactiveDiagnosticsConsent.
 * Possible values include: 'Enabled', 'Disabled'
 * @readonly
 * @enum {string}
 */
export type ProactiveDiagnosticsConsent = 'Enabled' | 'Disabled';

/**
 * Defines values for RemoteApplicationType.
 * Possible values include: 'Powershell', 'WAC', 'LocalUI', 'AllApplications'
 * @readonly
 * @enum {string}
 */
export type RemoteApplicationType = 'Powershell' | 'WAC' | 'LocalUI' | 'AllApplications';

/**
 * Defines values for AccessLevel.
 * Possible values include: 'None', 'ReadOnly', 'ReadWrite', 'FullAccess'
 * @readonly
 * @enum {string}
 */
export type AccessLevel = 'None' | 'ReadOnly' | 'ReadWrite' | 'FullAccess';

/**
 * Defines values for MountType.
 * Possible values include: 'Volume', 'HostPath'
 * @readonly
 * @enum {string}
 */
export type MountType = 'Volume' | 'HostPath';

/**
 * Defines values for JobStatus.
 * Possible values include: 'Invalid', 'Running', 'Succeeded', 'Failed', 'Canceled', 'Paused',
 * 'Scheduled'
 * @readonly
 * @enum {string}
 */
export type JobStatus = 'Invalid' | 'Running' | 'Succeeded' | 'Failed' | 'Canceled' | 'Paused' | 'Scheduled';

/**
 * Defines values for JobType.
 * Possible values include: 'Invalid', 'ScanForUpdates', 'DownloadUpdates', 'InstallUpdates',
 * 'RefreshShare', 'RefreshContainer', 'Backup', 'Restore', 'TriggerSupportPackage'
 * @readonly
 * @enum {string}
 */
export type JobType = 'Invalid' | 'ScanForUpdates' | 'DownloadUpdates' | 'InstallUpdates' | 'RefreshShare' | 'RefreshContainer' | 'Backup' | 'Restore' | 'TriggerSupportPackage';

/**
 * Defines values for UpdateOperationStage.
 * Possible values include: 'Unknown', 'Initial', 'ScanStarted', 'ScanComplete', 'ScanFailed',
 * 'DownloadStarted', 'DownloadComplete', 'DownloadFailed', 'InstallStarted', 'InstallComplete',
 * 'InstallFailed', 'RebootInitiated', 'Success', 'Failure', 'RescanStarted', 'RescanComplete',
 * 'RescanFailed'
 * @readonly
 * @enum {string}
 */
export type UpdateOperationStage = 'Unknown' | 'Initial' | 'ScanStarted' | 'ScanComplete' | 'ScanFailed' | 'DownloadStarted' | 'DownloadComplete' | 'DownloadFailed' | 'InstallStarted' | 'InstallComplete' | 'InstallFailed' | 'RebootInitiated' | 'Success' | 'Failure' | 'RescanStarted' | 'RescanComplete' | 'RescanFailed';

/**
 * Defines values for DownloadPhase.
 * Possible values include: 'Unknown', 'Initializing', 'Downloading', 'Verifying'
 * @readonly
 * @enum {string}
 */
export type DownloadPhase = 'Unknown' | 'Initializing' | 'Downloading' | 'Verifying';

/**
 * Defines values for KubernetesNodeType.
 * Possible values include: 'Invalid', 'Master', 'Worker'
 * @readonly
 * @enum {string}
 */
export type KubernetesNodeType = 'Invalid' | 'Master' | 'Worker';

/**
 * Defines values for KubernetesState.
 * Possible values include: 'Invalid', 'Creating', 'Created', 'Updating', 'Reconfiguring',
 * 'Failed', 'Deleting'
 * @readonly
 * @enum {string}
 */
export type KubernetesState = 'Invalid' | 'Creating' | 'Created' | 'Updating' | 'Reconfiguring' | 'Failed' | 'Deleting';

/**
 * Defines values for PosixComplianceStatus.
 * Possible values include: 'Invalid', 'Enabled', 'Disabled'
 * @readonly
 * @enum {string}
 */
export type PosixComplianceStatus = 'Invalid' | 'Enabled' | 'Disabled';

/**
 * Defines values for MetricUnit.
 * Possible values include: 'NotSpecified', 'Percent', 'Count', 'Seconds', 'Milliseconds', 'Bytes',
 * 'BytesPerSecond', 'CountPerSecond'
 * @readonly
 * @enum {string}
 */
export type MetricUnit = 'NotSpecified' | 'Percent' | 'Count' | 'Seconds' | 'Milliseconds' | 'Bytes' | 'BytesPerSecond' | 'CountPerSecond';

/**
 * Defines values for MetricAggregationType.
 * Possible values include: 'NotSpecified', 'None', 'Average', 'Minimum', 'Maximum', 'Total',
 * 'Count'
 * @readonly
 * @enum {string}
 */
export type MetricAggregationType = 'NotSpecified' | 'None' | 'Average' | 'Minimum' | 'Maximum' | 'Total' | 'Count';

/**
 * Defines values for MetricCategory.
 * Possible values include: 'Capacity', 'Transaction'
 * @readonly
 * @enum {string}
 */
export type MetricCategory = 'Capacity' | 'Transaction';

/**
 * Defines values for TimeGrain.
 * Possible values include: 'PT1M', 'PT5M', 'PT15M', 'PT30M', 'PT1H', 'PT6H', 'PT12H', 'PT1D'
 * @readonly
 * @enum {string}
 */
export type TimeGrain = 'PT1M' | 'PT5M' | 'PT15M' | 'PT30M' | 'PT1H' | 'PT6H' | 'PT12H' | 'PT1D';

/**
 * Defines values for NetworkGroup.
 * Possible values include: 'None', 'NonRDMA', 'RDMA'
 * @readonly
 * @enum {string}
 */
export type NetworkGroup = 'None' | 'NonRDMA' | 'RDMA';

/**
 * Defines values for NetworkAdapterStatus.
 * Possible values include: 'Inactive', 'Active'
 * @readonly
 * @enum {string}
 */
export type NetworkAdapterStatus = 'Inactive' | 'Active';

/**
 * Defines values for NetworkAdapterRDMAStatus.
 * Possible values include: 'Incapable', 'Capable'
 * @readonly
 * @enum {string}
 */
export type NetworkAdapterRDMAStatus = 'Incapable' | 'Capable';

/**
 * Defines values for NetworkAdapterDHCPStatus.
 * Possible values include: 'Disabled', 'Enabled'
 * @readonly
 * @enum {string}
 */
export type NetworkAdapterDHCPStatus = 'Disabled' | 'Enabled';

/**
 * Defines values for NodeStatus.
 * Possible values include: 'Unknown', 'Up', 'Down', 'Rebooting', 'ShuttingDown'
 * @readonly
 * @enum {string}
 */
export type NodeStatus = 'Unknown' | 'Up' | 'Down' | 'Rebooting' | 'ShuttingDown';

/**
 * Defines values for OrderState.
 * Possible values include: 'Untracked', 'AwaitingFulfillment', 'AwaitingPreparation',
 * 'AwaitingShipment', 'Shipped', 'Arriving', 'Delivered', 'ReplacementRequested', 'LostDevice',
 * 'Declined', 'ReturnInitiated', 'AwaitingReturnShipment', 'ShippedBack', 'CollectedAtMicrosoft',
 * 'AwaitingPickup', 'PickupCompleted', 'AwaitingDrop'
 * @readonly
 * @enum {string}
 */
export type OrderState = 'Untracked' | 'AwaitingFulfillment' | 'AwaitingPreparation' | 'AwaitingShipment' | 'Shipped' | 'Arriving' | 'Delivered' | 'ReplacementRequested' | 'LostDevice' | 'Declined' | 'ReturnInitiated' | 'AwaitingReturnShipment' | 'ShippedBack' | 'CollectedAtMicrosoft' | 'AwaitingPickup' | 'PickupCompleted' | 'AwaitingDrop';

/**
 * Defines values for AuthenticationType.
 * Possible values include: 'Invalid', 'AzureActiveDirectory'
 * @readonly
 * @enum {string}
 */
export type AuthenticationType = 'Invalid' | 'AzureActiveDirectory';

/**
 * Defines values for ShareStatus.
 * Possible values include: 'Offline', 'Unknown', 'OK', 'Updating', 'NeedsAttention'
 * @readonly
 * @enum {string}
 */
export type ShareStatus = 'Offline' | 'Unknown' | 'OK' | 'Updating' | 'NeedsAttention';

/**
 * Defines values for MonitoringStatus.
 * Possible values include: 'Enabled', 'Disabled'
 * @readonly
 * @enum {string}
 */
export type MonitoringStatus = 'Enabled' | 'Disabled';

/**
 * Defines values for ShareAccessProtocol.
 * Possible values include: 'SMB', 'NFS'
 * @readonly
 * @enum {string}
 */
export type ShareAccessProtocol = 'SMB' | 'NFS';

/**
 * Defines values for ShareAccessType.
 * Possible values include: 'Change', 'Read', 'Custom'
 * @readonly
 * @enum {string}
 */
export type ShareAccessType = 'Change' | 'Read' | 'Custom';

/**
 * Defines values for DataPolicy.
 * Possible values include: 'Cloud', 'Local'
 * @readonly
 * @enum {string}
 */
export type DataPolicy = 'Cloud' | 'Local';

/**
 * Defines values for StorageAccountStatus.
 * Possible values include: 'OK', 'Offline', 'Unknown', 'Updating', 'NeedsAttention'
 * @readonly
 * @enum {string}
 */
export type StorageAccountStatus = 'OK' | 'Offline' | 'Unknown' | 'Updating' | 'NeedsAttention';

/**
 * Defines values for SSLStatus.
 * Possible values include: 'Enabled', 'Disabled'
 * @readonly
 * @enum {string}
 */
export type SSLStatus = 'Enabled' | 'Disabled';

/**
 * Defines values for AccountType.
 * Possible values include: 'GeneralPurposeStorage', 'BlobStorage'
 * @readonly
 * @enum {string}
 */
export type AccountType = 'GeneralPurposeStorage' | 'BlobStorage';

/**
 * Defines values for UpdateType.
 * Possible values include: 'Software', 'Kubernetes', 'Firmware'
 * @readonly
 * @enum {string}
 */
export type UpdateType = 'Software' | 'Kubernetes' | 'Firmware';

/**
 * Defines values for InstallRebootBehavior.
 * Possible values include: 'NeverReboots', 'RequiresReboot', 'RequestReboot'
 * @readonly
 * @enum {string}
 */
export type InstallRebootBehavior = 'NeverReboots' | 'RequiresReboot' | 'RequestReboot';

/**
 * Defines values for InstallationImpact.
 * Possible values include: 'None', 'DeviceRebooted', 'KubernetesWorkloadsDown'
 * @readonly
 * @enum {string}
 */
export type InstallationImpact = 'None' | 'DeviceRebooted' | 'KubernetesWorkloadsDown';

/**
 * Defines values for UpdateStatus.
 * Possible values include: 'DownloadPending', 'DownloadStarted', 'DownloadCompleted',
 * 'InstallStarted', 'InstallCompleted'
 * @readonly
 * @enum {string}
 */
export type UpdateStatus = 'DownloadPending' | 'DownloadStarted' | 'DownloadCompleted' | 'InstallStarted' | 'InstallCompleted';

/**
 * Defines values for UpdateOperation.
 * Possible values include: 'None', 'Scan', 'Download', 'Install'
 * @readonly
 * @enum {string}
 */
export type UpdateOperation = 'None' | 'Scan' | 'Download' | 'Install';

/**
 * Defines values for UserType.
 * Possible values include: 'Share', 'LocalManagement', 'ARM'
 * @readonly
 * @enum {string}
 */
export type UserType = 'Share' | 'LocalManagement' | 'ARM';

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationsList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationsList;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type OperationsListNextResponse = OperationsList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationsList;
    };
};

/**
 * Contains response data for the list operation.
 */
export type AvailableSkusListResponse = DataBoxEdgeSkuList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataBoxEdgeSkuList;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type AvailableSkusListNextResponse = DataBoxEdgeSkuList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataBoxEdgeSkuList;
    };
};

/**
 * Contains response data for the listBySubscription operation.
 */
export type DevicesListBySubscriptionResponse = DataBoxEdgeDeviceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataBoxEdgeDeviceList;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type DevicesListByResourceGroupResponse = DataBoxEdgeDeviceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataBoxEdgeDeviceList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type DevicesGetResponse = DataBoxEdgeDevice & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataBoxEdgeDevice;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type DevicesCreateOrUpdateResponse = DataBoxEdgeDevice & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataBoxEdgeDevice;
    };
};

/**
 * Contains response data for the update operation.
 */
export type DevicesUpdateResponse = DataBoxEdgeDevice & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataBoxEdgeDevice;
    };
};

/**
 * Contains response data for the generateCertificate operation.
 */
export type DevicesGenerateCertificateResponse = GenerateCertResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GenerateCertResponse;
    };
};

/**
 * Contains response data for the getExtendedInformation operation.
 */
export type DevicesGetExtendedInformationResponse = DataBoxEdgeDeviceExtendedInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataBoxEdgeDeviceExtendedInfo;
    };
};

/**
 * Contains response data for the getNetworkSettings operation.
 */
export type DevicesGetNetworkSettingsResponse = NetworkSettings & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NetworkSettings;
    };
};

/**
 * Contains response data for the updateExtendedInformation operation.
 */
export type DevicesUpdateExtendedInformationResponse = DataBoxEdgeDeviceExtendedInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataBoxEdgeDeviceExtendedInfo;
    };
};

/**
 * Contains response data for the getUpdateSummary operation.
 */
export type DevicesGetUpdateSummaryResponse = UpdateSummary & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: UpdateSummary;
    };
};

/**
 * Contains response data for the uploadCertificate operation.
 */
export type DevicesUploadCertificateResponse = UploadCertificateResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: UploadCertificateResponse;
    };
};

/**
 * Contains response data for the listBySubscriptionNext operation.
 */
export type DevicesListBySubscriptionNextResponse = DataBoxEdgeDeviceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataBoxEdgeDeviceList;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type DevicesListByResourceGroupNextResponse = DataBoxEdgeDeviceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DataBoxEdgeDeviceList;
    };
};

/**
 * Contains response data for the listByDataBoxEdgeDevice operation.
 */
export type AlertsListByDataBoxEdgeDeviceResponse = AlertList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AlertList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type AlertsGetResponse = Alert & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Alert;
    };
};

/**
 * Contains response data for the listByDataBoxEdgeDeviceNext operation.
 */
export type AlertsListByDataBoxEdgeDeviceNextResponse = AlertList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AlertList;
    };
};

/**
 * Contains response data for the listByDataBoxEdgeDevice operation.
 */
export type BandwidthSchedulesListByDataBoxEdgeDeviceResponse = BandwidthSchedulesList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BandwidthSchedulesList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type BandwidthSchedulesGetResponse = BandwidthSchedule & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BandwidthSchedule;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type BandwidthSchedulesCreateOrUpdateResponse = BandwidthSchedule & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BandwidthSchedule;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type BandwidthSchedulesBeginCreateOrUpdateResponse = BandwidthSchedule & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BandwidthSchedule;
    };
};

/**
 * Contains response data for the listByDataBoxEdgeDeviceNext operation.
 */
export type BandwidthSchedulesListByDataBoxEdgeDeviceNextResponse = BandwidthSchedulesList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BandwidthSchedulesList;
    };
};

/**
 * Contains response data for the getDiagnosticProactiveLogCollectionSettings operation.
 */
export type DiagnosticSettingsGetDiagnosticProactiveLogCollectionSettingsResponse = DiagnosticProactiveLogCollectionSettings & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiagnosticProactiveLogCollectionSettings;
    };
};

/**
 * Contains response data for the getDiagnosticRemoteSupportSettings operation.
 */
export type DiagnosticSettingsGetDiagnosticRemoteSupportSettingsResponse = DiagnosticRemoteSupportSettings & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DiagnosticRemoteSupportSettings;
    };
};

/**
 * Contains response data for the get operation.
 */
export type JobsGetResponse = Job & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Job;
    };
};

/**
 * Contains response data for the listByDataBoxEdgeDevice operation.
 */
export type NodesListByDataBoxEdgeDeviceResponse = NodeList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NodeList;
    };
};

/**
 * Contains response data for the listByDataBoxEdgeDeviceNext operation.
 */
export type NodesListByDataBoxEdgeDeviceNextResponse = NodeList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: NodeList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type OperationsStatusGetResponse = Job & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Job;
    };
};

/**
 * Contains response data for the listByDataBoxEdgeDevice operation.
 */
export type OrdersListByDataBoxEdgeDeviceResponse = OrderList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OrderList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type OrdersGetResponse = Order & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Order;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type OrdersCreateOrUpdateResponse = Order & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Order;
    };
};

/**
 * Contains response data for the listDCAccessCode operation.
 */
export type OrdersListDCAccessCodeResponse = DCAccessCode & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DCAccessCode;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type OrdersBeginCreateOrUpdateResponse = Order & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Order;
    };
};

/**
 * Contains response data for the listByDataBoxEdgeDeviceNext operation.
 */
export type OrdersListByDataBoxEdgeDeviceNextResponse = OrderList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OrderList;
    };
};

/**
 * Contains response data for the listByDataBoxEdgeDevice operation.
 */
export type RolesListByDataBoxEdgeDeviceResponse = RoleList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoleList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type RolesGetResponse = RoleUnion & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoleUnion;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type RolesCreateOrUpdateResponse = RoleUnion & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoleUnion;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type RolesBeginCreateOrUpdateResponse = RoleUnion & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoleUnion;
    };
};

/**
 * Contains response data for the listByDataBoxEdgeDeviceNext operation.
 */
export type RolesListByDataBoxEdgeDeviceNextResponse = RoleList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RoleList;
    };
};

/**
 * Contains response data for the listByRole operation.
 */
export type AddonsListByRoleResponse = AddonList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AddonList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type AddonsGetResponse = AddonUnion & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AddonUnion;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type AddonsCreateOrUpdateResponse = AddonUnion & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AddonUnion;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type AddonsBeginCreateOrUpdateResponse = AddonUnion & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AddonUnion;
    };
};

/**
 * Contains response data for the listByRoleNext operation.
 */
export type AddonsListByRoleNextResponse = AddonList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AddonList;
    };
};

/**
 * Contains response data for the list operation.
 */
export type MonitoringConfigListResponse = MonitoringMetricConfigurationList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MonitoringMetricConfigurationList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type MonitoringConfigGetResponse = MonitoringMetricConfiguration & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MonitoringMetricConfiguration;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type MonitoringConfigCreateOrUpdateResponse = MonitoringMetricConfiguration & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MonitoringMetricConfiguration;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type MonitoringConfigBeginCreateOrUpdateResponse = MonitoringMetricConfiguration & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MonitoringMetricConfiguration;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type MonitoringConfigListNextResponse = MonitoringMetricConfigurationList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MonitoringMetricConfigurationList;
    };
};

/**
 * Contains response data for the listByDataBoxEdgeDevice operation.
 */
export type SharesListByDataBoxEdgeDeviceResponse = ShareList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ShareList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type SharesGetResponse = Share & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Share;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type SharesCreateOrUpdateResponse = Share & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Share;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type SharesBeginCreateOrUpdateResponse = Share & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Share;
    };
};

/**
 * Contains response data for the listByDataBoxEdgeDeviceNext operation.
 */
export type SharesListByDataBoxEdgeDeviceNextResponse = ShareList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ShareList;
    };
};

/**
 * Contains response data for the listByDataBoxEdgeDevice operation.
 */
export type StorageAccountCredentialsListByDataBoxEdgeDeviceResponse = StorageAccountCredentialList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StorageAccountCredentialList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type StorageAccountCredentialsGetResponse = StorageAccountCredential & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StorageAccountCredential;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type StorageAccountCredentialsCreateOrUpdateResponse = StorageAccountCredential & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StorageAccountCredential;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type StorageAccountCredentialsBeginCreateOrUpdateResponse = StorageAccountCredential & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StorageAccountCredential;
    };
};

/**
 * Contains response data for the listByDataBoxEdgeDeviceNext operation.
 */
export type StorageAccountCredentialsListByDataBoxEdgeDeviceNextResponse = StorageAccountCredentialList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StorageAccountCredentialList;
    };
};

/**
 * Contains response data for the listByDataBoxEdgeDevice operation.
 */
export type StorageAccountsListByDataBoxEdgeDeviceResponse = StorageAccountList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StorageAccountList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type StorageAccountsGetResponse = StorageAccount & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StorageAccount;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type StorageAccountsCreateOrUpdateResponse = StorageAccount & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StorageAccount;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type StorageAccountsBeginCreateOrUpdateResponse = StorageAccount & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StorageAccount;
    };
};

/**
 * Contains response data for the listByDataBoxEdgeDeviceNext operation.
 */
export type StorageAccountsListByDataBoxEdgeDeviceNextResponse = StorageAccountList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StorageAccountList;
    };
};

/**
 * Contains response data for the listByStorageAccount operation.
 */
export type ContainersListByStorageAccountResponse = ContainerList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ContainerList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ContainersGetResponse = Container & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Container;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ContainersCreateOrUpdateResponse = Container & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Container;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type ContainersBeginCreateOrUpdateResponse = Container & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Container;
    };
};

/**
 * Contains response data for the listByStorageAccountNext operation.
 */
export type ContainersListByStorageAccountNextResponse = ContainerList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ContainerList;
    };
};

/**
 * Contains response data for the listByDataBoxEdgeDevice operation.
 */
export type TriggersListByDataBoxEdgeDeviceResponse = TriggerList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TriggerList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type TriggersGetResponse = TriggerUnion & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TriggerUnion;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type TriggersCreateOrUpdateResponse = TriggerUnion & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TriggerUnion;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type TriggersBeginCreateOrUpdateResponse = TriggerUnion & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TriggerUnion;
    };
};

/**
 * Contains response data for the listByDataBoxEdgeDeviceNext operation.
 */
export type TriggersListByDataBoxEdgeDeviceNextResponse = TriggerList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TriggerList;
    };
};

/**
 * Contains response data for the listByDataBoxEdgeDevice operation.
 */
export type UsersListByDataBoxEdgeDeviceResponse = UserList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: UserList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type UsersGetResponse = User & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: User;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type UsersCreateOrUpdateResponse = User & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: User;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type UsersBeginCreateOrUpdateResponse = User & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: User;
    };
};

/**
 * Contains response data for the listByDataBoxEdgeDeviceNext operation.
 */
export type UsersListByDataBoxEdgeDeviceNextResponse = UserList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: UserList;
    };
};
