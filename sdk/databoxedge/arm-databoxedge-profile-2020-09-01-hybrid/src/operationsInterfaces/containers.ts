/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  Container,
  ContainersListByStorageAccountOptionalParams,
  ContainersGetOptionalParams,
  ContainersGetResponse,
  ContainersCreateOrUpdateOptionalParams,
  ContainersCreateOrUpdateResponse,
  ContainersDeleteOptionalParams,
  ContainersRefreshOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Containers. */
export interface Containers {
  /**
   * Lists all the containers of a storage Account in a Data Box Edge/Data Box Gateway device.
   * @param deviceName The device name.
   * @param storageAccountName The storage Account name.
   * @param resourceGroupName The resource group name.
   * @param options The options parameters.
   */
  listByStorageAccount(
    deviceName: string,
    storageAccountName: string,
    resourceGroupName: string,
    options?: ContainersListByStorageAccountOptionalParams
  ): PagedAsyncIterableIterator<Container>;
  /**
   * Gets a container by name.
   * @param deviceName The device name.
   * @param storageAccountName The Storage Account Name
   * @param containerName The container Name
   * @param resourceGroupName The resource group name.
   * @param options The options parameters.
   */
  get(
    deviceName: string,
    storageAccountName: string,
    containerName: string,
    resourceGroupName: string,
    options?: ContainersGetOptionalParams
  ): Promise<ContainersGetResponse>;
  /**
   * Creates a new container or updates an existing container on the device.
   * @param deviceName The device name.
   * @param storageAccountName The Storage Account Name
   * @param containerName The container name.
   * @param resourceGroupName The resource group name.
   * @param container The container properties.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    deviceName: string,
    storageAccountName: string,
    containerName: string,
    resourceGroupName: string,
    container: Container,
    options?: ContainersCreateOrUpdateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<ContainersCreateOrUpdateResponse>,
      ContainersCreateOrUpdateResponse
    >
  >;
  /**
   * Creates a new container or updates an existing container on the device.
   * @param deviceName The device name.
   * @param storageAccountName The Storage Account Name
   * @param containerName The container name.
   * @param resourceGroupName The resource group name.
   * @param container The container properties.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    deviceName: string,
    storageAccountName: string,
    containerName: string,
    resourceGroupName: string,
    container: Container,
    options?: ContainersCreateOrUpdateOptionalParams
  ): Promise<ContainersCreateOrUpdateResponse>;
  /**
   * Deletes the container on the Data Box Edge/Data Box Gateway device.
   * @param deviceName The device name.
   * @param storageAccountName The Storage Account Name
   * @param containerName The container name.
   * @param resourceGroupName The resource group name.
   * @param options The options parameters.
   */
  beginDelete(
    deviceName: string,
    storageAccountName: string,
    containerName: string,
    resourceGroupName: string,
    options?: ContainersDeleteOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Deletes the container on the Data Box Edge/Data Box Gateway device.
   * @param deviceName The device name.
   * @param storageAccountName The Storage Account Name
   * @param containerName The container name.
   * @param resourceGroupName The resource group name.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    deviceName: string,
    storageAccountName: string,
    containerName: string,
    resourceGroupName: string,
    options?: ContainersDeleteOptionalParams
  ): Promise<void>;
  /**
   * Refreshes the container metadata with the data from the cloud.
   * @param deviceName The device name.
   * @param storageAccountName The Storage Account Name
   * @param containerName The container name.
   * @param resourceGroupName The resource group name.
   * @param options The options parameters.
   */
  beginRefresh(
    deviceName: string,
    storageAccountName: string,
    containerName: string,
    resourceGroupName: string,
    options?: ContainersRefreshOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Refreshes the container metadata with the data from the cloud.
   * @param deviceName The device name.
   * @param storageAccountName The Storage Account Name
   * @param containerName The container name.
   * @param resourceGroupName The resource group name.
   * @param options The options parameters.
   */
  beginRefreshAndWait(
    deviceName: string,
    storageAccountName: string,
    containerName: string,
    resourceGroupName: string,
    options?: ContainersRefreshOptionalParams
  ): Promise<void>;
}
