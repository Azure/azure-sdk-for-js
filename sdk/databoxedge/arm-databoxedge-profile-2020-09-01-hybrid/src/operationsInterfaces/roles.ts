/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  RoleUnion,
  RolesListByDataBoxEdgeDeviceOptionalParams,
  RolesGetOptionalParams,
  RolesGetResponse,
  RolesCreateOrUpdateOptionalParams,
  RolesCreateOrUpdateResponse,
  RolesDeleteOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Roles. */
export interface Roles {
  /**
   * Lists all the roles configured in a Data Box Edge/Data Box Gateway device.
   * @param deviceName The device name.
   * @param resourceGroupName The resource group name.
   * @param options The options parameters.
   */
  listByDataBoxEdgeDevice(
    deviceName: string,
    resourceGroupName: string,
    options?: RolesListByDataBoxEdgeDeviceOptionalParams
  ): PagedAsyncIterableIterator<RoleUnion>;
  /**
   * Gets a specific role by name.
   * @param deviceName The device name.
   * @param name The role name.
   * @param resourceGroupName The resource group name.
   * @param options The options parameters.
   */
  get(
    deviceName: string,
    name: string,
    resourceGroupName: string,
    options?: RolesGetOptionalParams
  ): Promise<RolesGetResponse>;
  /**
   * Create or update a role.
   * @param deviceName The device name.
   * @param name The role name.
   * @param resourceGroupName The resource group name.
   * @param role The role properties.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    deviceName: string,
    name: string,
    resourceGroupName: string,
    role: RoleUnion,
    options?: RolesCreateOrUpdateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<RolesCreateOrUpdateResponse>,
      RolesCreateOrUpdateResponse
    >
  >;
  /**
   * Create or update a role.
   * @param deviceName The device name.
   * @param name The role name.
   * @param resourceGroupName The resource group name.
   * @param role The role properties.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    deviceName: string,
    name: string,
    resourceGroupName: string,
    role: RoleUnion,
    options?: RolesCreateOrUpdateOptionalParams
  ): Promise<RolesCreateOrUpdateResponse>;
  /**
   * Deletes the role on the device.
   * @param deviceName The device name.
   * @param name The role name.
   * @param resourceGroupName The resource group name.
   * @param options The options parameters.
   */
  beginDelete(
    deviceName: string,
    name: string,
    resourceGroupName: string,
    options?: RolesDeleteOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Deletes the role on the device.
   * @param deviceName The device name.
   * @param name The role name.
   * @param resourceGroupName The resource group name.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    deviceName: string,
    name: string,
    resourceGroupName: string,
    options?: RolesDeleteOptionalParams
  ): Promise<void>;
}
