/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  TriggerUnion,
  TriggersListByDataBoxEdgeDeviceOptionalParams,
  TriggersGetOptionalParams,
  TriggersGetResponse,
  TriggersCreateOrUpdateOptionalParams,
  TriggersCreateOrUpdateResponse,
  TriggersDeleteOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Triggers. */
export interface Triggers {
  /**
   * Lists all the triggers configured in the device.
   * @param deviceName The device name.
   * @param resourceGroupName The resource group name.
   * @param options The options parameters.
   */
  listByDataBoxEdgeDevice(
    deviceName: string,
    resourceGroupName: string,
    options?: TriggersListByDataBoxEdgeDeviceOptionalParams
  ): PagedAsyncIterableIterator<TriggerUnion>;
  /**
   * Get a specific trigger by name.
   * @param deviceName The device name.
   * @param name The trigger name.
   * @param resourceGroupName The resource group name.
   * @param options The options parameters.
   */
  get(
    deviceName: string,
    name: string,
    resourceGroupName: string,
    options?: TriggersGetOptionalParams
  ): Promise<TriggersGetResponse>;
  /**
   * Creates or updates a trigger.
   * @param deviceName Creates or updates a trigger
   * @param name The trigger name.
   * @param resourceGroupName The resource group name.
   * @param trigger The trigger.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    deviceName: string,
    name: string,
    resourceGroupName: string,
    trigger: TriggerUnion,
    options?: TriggersCreateOrUpdateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<TriggersCreateOrUpdateResponse>,
      TriggersCreateOrUpdateResponse
    >
  >;
  /**
   * Creates or updates a trigger.
   * @param deviceName Creates or updates a trigger
   * @param name The trigger name.
   * @param resourceGroupName The resource group name.
   * @param trigger The trigger.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    deviceName: string,
    name: string,
    resourceGroupName: string,
    trigger: TriggerUnion,
    options?: TriggersCreateOrUpdateOptionalParams
  ): Promise<TriggersCreateOrUpdateResponse>;
  /**
   * Deletes the trigger on the gateway device.
   * @param deviceName The device name.
   * @param name The trigger name.
   * @param resourceGroupName The resource group name.
   * @param options The options parameters.
   */
  beginDelete(
    deviceName: string,
    name: string,
    resourceGroupName: string,
    options?: TriggersDeleteOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Deletes the trigger on the gateway device.
   * @param deviceName The device name.
   * @param name The trigger name.
   * @param resourceGroupName The resource group name.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    deviceName: string,
    name: string,
    resourceGroupName: string,
    options?: TriggersDeleteOptionalParams
  ): Promise<void>;
}
