/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/privateLinkResourcesMappers";
import * as Parameters from "../models/parameters";
import { SearchManagementClientContext } from "../searchManagementClientContext";

/** Class representing a PrivateLinkResources. */
export class PrivateLinkResources {
  private readonly client: SearchManagementClientContext;

  /**
   * Create a PrivateLinkResources.
   * @param {SearchManagementClientContext} client Reference to the service client.
   */
  constructor(client: SearchManagementClientContext) {
    this.client = client;
  }

  /**
   * Gets a list of all supported private link resource types for the given service.
   * @param resourceGroupName The name of the resource group within the current subscription. You can
   * obtain this value from the Azure Resource Manager API or the portal.
   * @param searchServiceName The name of the Azure Cognitive Search service associated with the
   * specified resource group.
   * @param [options] The optional parameters
   * @returns Promise<Models.PrivateLinkResourcesListSupportedResponse>
   */
  listSupported(resourceGroupName: string, searchServiceName: string, options?: Models.PrivateLinkResourcesListSupportedOptionalParams): Promise<Models.PrivateLinkResourcesListSupportedResponse>;
  /**
   * @param resourceGroupName The name of the resource group within the current subscription. You can
   * obtain this value from the Azure Resource Manager API or the portal.
   * @param searchServiceName The name of the Azure Cognitive Search service associated with the
   * specified resource group.
   * @param callback The callback
   */
  listSupported(resourceGroupName: string, searchServiceName: string, callback: msRest.ServiceCallback<Models.PrivateLinkResourcesResult>): void;
  /**
   * @param resourceGroupName The name of the resource group within the current subscription. You can
   * obtain this value from the Azure Resource Manager API or the portal.
   * @param searchServiceName The name of the Azure Cognitive Search service associated with the
   * specified resource group.
   * @param options The optional parameters
   * @param callback The callback
   */
  listSupported(resourceGroupName: string, searchServiceName: string, options: Models.PrivateLinkResourcesListSupportedOptionalParams, callback: msRest.ServiceCallback<Models.PrivateLinkResourcesResult>): void;
  listSupported(resourceGroupName: string, searchServiceName: string, options?: Models.PrivateLinkResourcesListSupportedOptionalParams | msRest.ServiceCallback<Models.PrivateLinkResourcesResult>, callback?: msRest.ServiceCallback<Models.PrivateLinkResourcesResult>): Promise<Models.PrivateLinkResourcesListSupportedResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        searchServiceName,
        options
      },
      listSupportedOperationSpec,
      callback) as Promise<Models.PrivateLinkResourcesListSupportedResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listSupportedOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Search/searchServices/{searchServiceName}/privateLinkResources",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.searchServiceName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage,
    Parameters.clientRequestId
  ],
  responses: {
    200: {
      bodyMapper: Mappers.PrivateLinkResourcesResult
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};
