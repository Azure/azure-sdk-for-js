/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/privateEndpointConnectionsMappers";
import * as Parameters from "../models/parameters";
import { SearchManagementClientContext } from "../searchManagementClientContext";

/** Class representing a PrivateEndpointConnections. */
export class PrivateEndpointConnections {
  private readonly client: SearchManagementClientContext;

  /**
   * Create a PrivateEndpointConnections.
   * @param {SearchManagementClientContext} client Reference to the service client.
   */
  constructor(client: SearchManagementClientContext) {
    this.client = client;
  }

  /**
   * Updates a Private Endpoint connection to the search service in the given resource group.
   * @param resourceGroupName The name of the resource group within the current subscription. You can
   * obtain this value from the Azure Resource Manager API or the portal.
   * @param searchServiceName The name of the Azure Cognitive Search service associated with the
   * specified resource group.
   * @param privateEndpointConnectionName The name of the private endpoint connection to the Azure
   * Cognitive Search service with the specified resource group.
   * @param privateEndpointConnection The definition of the private endpoint connection to update.
   * @param [options] The optional parameters
   * @returns Promise<Models.PrivateEndpointConnectionsUpdateResponse>
   */
  update(resourceGroupName: string, searchServiceName: string, privateEndpointConnectionName: string, privateEndpointConnection: Models.PrivateEndpointConnection, options?: Models.PrivateEndpointConnectionsUpdateOptionalParams): Promise<Models.PrivateEndpointConnectionsUpdateResponse>;
  /**
   * @param resourceGroupName The name of the resource group within the current subscription. You can
   * obtain this value from the Azure Resource Manager API or the portal.
   * @param searchServiceName The name of the Azure Cognitive Search service associated with the
   * specified resource group.
   * @param privateEndpointConnectionName The name of the private endpoint connection to the Azure
   * Cognitive Search service with the specified resource group.
   * @param privateEndpointConnection The definition of the private endpoint connection to update.
   * @param callback The callback
   */
  update(resourceGroupName: string, searchServiceName: string, privateEndpointConnectionName: string, privateEndpointConnection: Models.PrivateEndpointConnection, callback: msRest.ServiceCallback<Models.PrivateEndpointConnection>): void;
  /**
   * @param resourceGroupName The name of the resource group within the current subscription. You can
   * obtain this value from the Azure Resource Manager API or the portal.
   * @param searchServiceName The name of the Azure Cognitive Search service associated with the
   * specified resource group.
   * @param privateEndpointConnectionName The name of the private endpoint connection to the Azure
   * Cognitive Search service with the specified resource group.
   * @param privateEndpointConnection The definition of the private endpoint connection to update.
   * @param options The optional parameters
   * @param callback The callback
   */
  update(resourceGroupName: string, searchServiceName: string, privateEndpointConnectionName: string, privateEndpointConnection: Models.PrivateEndpointConnection, options: Models.PrivateEndpointConnectionsUpdateOptionalParams, callback: msRest.ServiceCallback<Models.PrivateEndpointConnection>): void;
  update(resourceGroupName: string, searchServiceName: string, privateEndpointConnectionName: string, privateEndpointConnection: Models.PrivateEndpointConnection, options?: Models.PrivateEndpointConnectionsUpdateOptionalParams | msRest.ServiceCallback<Models.PrivateEndpointConnection>, callback?: msRest.ServiceCallback<Models.PrivateEndpointConnection>): Promise<Models.PrivateEndpointConnectionsUpdateResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        searchServiceName,
        privateEndpointConnectionName,
        privateEndpointConnection,
        options
      },
      updateOperationSpec,
      callback) as Promise<Models.PrivateEndpointConnectionsUpdateResponse>;
  }

  /**
   * Gets the details of the private endpoint connection to the search service in the given resource
   * group.
   * @param resourceGroupName The name of the resource group within the current subscription. You can
   * obtain this value from the Azure Resource Manager API or the portal.
   * @param searchServiceName The name of the Azure Cognitive Search service associated with the
   * specified resource group.
   * @param privateEndpointConnectionName The name of the private endpoint connection to the Azure
   * Cognitive Search service with the specified resource group.
   * @param [options] The optional parameters
   * @returns Promise<Models.PrivateEndpointConnectionsGetResponse>
   */
  get(resourceGroupName: string, searchServiceName: string, privateEndpointConnectionName: string, options?: Models.PrivateEndpointConnectionsGetOptionalParams): Promise<Models.PrivateEndpointConnectionsGetResponse>;
  /**
   * @param resourceGroupName The name of the resource group within the current subscription. You can
   * obtain this value from the Azure Resource Manager API or the portal.
   * @param searchServiceName The name of the Azure Cognitive Search service associated with the
   * specified resource group.
   * @param privateEndpointConnectionName The name of the private endpoint connection to the Azure
   * Cognitive Search service with the specified resource group.
   * @param callback The callback
   */
  get(resourceGroupName: string, searchServiceName: string, privateEndpointConnectionName: string, callback: msRest.ServiceCallback<Models.PrivateEndpointConnection>): void;
  /**
   * @param resourceGroupName The name of the resource group within the current subscription. You can
   * obtain this value from the Azure Resource Manager API or the portal.
   * @param searchServiceName The name of the Azure Cognitive Search service associated with the
   * specified resource group.
   * @param privateEndpointConnectionName The name of the private endpoint connection to the Azure
   * Cognitive Search service with the specified resource group.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(resourceGroupName: string, searchServiceName: string, privateEndpointConnectionName: string, options: Models.PrivateEndpointConnectionsGetOptionalParams, callback: msRest.ServiceCallback<Models.PrivateEndpointConnection>): void;
  get(resourceGroupName: string, searchServiceName: string, privateEndpointConnectionName: string, options?: Models.PrivateEndpointConnectionsGetOptionalParams | msRest.ServiceCallback<Models.PrivateEndpointConnection>, callback?: msRest.ServiceCallback<Models.PrivateEndpointConnection>): Promise<Models.PrivateEndpointConnectionsGetResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        searchServiceName,
        privateEndpointConnectionName,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.PrivateEndpointConnectionsGetResponse>;
  }

  /**
   * Disconnects the private endpoint connection and deletes it from the search service.
   * @param resourceGroupName The name of the resource group within the current subscription. You can
   * obtain this value from the Azure Resource Manager API or the portal.
   * @param searchServiceName The name of the Azure Cognitive Search service associated with the
   * specified resource group.
   * @param privateEndpointConnectionName The name of the private endpoint connection to the Azure
   * Cognitive Search service with the specified resource group.
   * @param [options] The optional parameters
   * @returns Promise<Models.PrivateEndpointConnectionsDeleteMethodResponse>
   */
  deleteMethod(resourceGroupName: string, searchServiceName: string, privateEndpointConnectionName: string, options?: Models.PrivateEndpointConnectionsDeleteMethodOptionalParams): Promise<Models.PrivateEndpointConnectionsDeleteMethodResponse>;
  /**
   * @param resourceGroupName The name of the resource group within the current subscription. You can
   * obtain this value from the Azure Resource Manager API or the portal.
   * @param searchServiceName The name of the Azure Cognitive Search service associated with the
   * specified resource group.
   * @param privateEndpointConnectionName The name of the private endpoint connection to the Azure
   * Cognitive Search service with the specified resource group.
   * @param callback The callback
   */
  deleteMethod(resourceGroupName: string, searchServiceName: string, privateEndpointConnectionName: string, callback: msRest.ServiceCallback<Models.PrivateEndpointConnection>): void;
  /**
   * @param resourceGroupName The name of the resource group within the current subscription. You can
   * obtain this value from the Azure Resource Manager API or the portal.
   * @param searchServiceName The name of the Azure Cognitive Search service associated with the
   * specified resource group.
   * @param privateEndpointConnectionName The name of the private endpoint connection to the Azure
   * Cognitive Search service with the specified resource group.
   * @param options The optional parameters
   * @param callback The callback
   */
  deleteMethod(resourceGroupName: string, searchServiceName: string, privateEndpointConnectionName: string, options: Models.PrivateEndpointConnectionsDeleteMethodOptionalParams, callback: msRest.ServiceCallback<Models.PrivateEndpointConnection>): void;
  deleteMethod(resourceGroupName: string, searchServiceName: string, privateEndpointConnectionName: string, options?: Models.PrivateEndpointConnectionsDeleteMethodOptionalParams | msRest.ServiceCallback<Models.PrivateEndpointConnection>, callback?: msRest.ServiceCallback<Models.PrivateEndpointConnection>): Promise<Models.PrivateEndpointConnectionsDeleteMethodResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        searchServiceName,
        privateEndpointConnectionName,
        options
      },
      deleteMethodOperationSpec,
      callback) as Promise<Models.PrivateEndpointConnectionsDeleteMethodResponse>;
  }

  /**
   * Gets a list of all private endpoint connections in the given service.
   * @param resourceGroupName The name of the resource group within the current subscription. You can
   * obtain this value from the Azure Resource Manager API or the portal.
   * @param searchServiceName The name of the Azure Cognitive Search service associated with the
   * specified resource group.
   * @param [options] The optional parameters
   * @returns Promise<Models.PrivateEndpointConnectionsListByServiceResponse>
   */
  listByService(resourceGroupName: string, searchServiceName: string, options?: Models.PrivateEndpointConnectionsListByServiceOptionalParams): Promise<Models.PrivateEndpointConnectionsListByServiceResponse>;
  /**
   * @param resourceGroupName The name of the resource group within the current subscription. You can
   * obtain this value from the Azure Resource Manager API or the portal.
   * @param searchServiceName The name of the Azure Cognitive Search service associated with the
   * specified resource group.
   * @param callback The callback
   */
  listByService(resourceGroupName: string, searchServiceName: string, callback: msRest.ServiceCallback<Models.PrivateEndpointConnectionListResult>): void;
  /**
   * @param resourceGroupName The name of the resource group within the current subscription. You can
   * obtain this value from the Azure Resource Manager API or the portal.
   * @param searchServiceName The name of the Azure Cognitive Search service associated with the
   * specified resource group.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByService(resourceGroupName: string, searchServiceName: string, options: Models.PrivateEndpointConnectionsListByServiceOptionalParams, callback: msRest.ServiceCallback<Models.PrivateEndpointConnectionListResult>): void;
  listByService(resourceGroupName: string, searchServiceName: string, options?: Models.PrivateEndpointConnectionsListByServiceOptionalParams | msRest.ServiceCallback<Models.PrivateEndpointConnectionListResult>, callback?: msRest.ServiceCallback<Models.PrivateEndpointConnectionListResult>): Promise<Models.PrivateEndpointConnectionsListByServiceResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        searchServiceName,
        options
      },
      listByServiceOperationSpec,
      callback) as Promise<Models.PrivateEndpointConnectionsListByServiceResponse>;
  }

  /**
   * Gets a list of all private endpoint connections in the given service.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.PrivateEndpointConnectionsListByServiceNextResponse>
   */
  listByServiceNext(nextPageLink: string, options?: Models.PrivateEndpointConnectionsListByServiceNextOptionalParams): Promise<Models.PrivateEndpointConnectionsListByServiceNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listByServiceNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.PrivateEndpointConnectionListResult>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByServiceNext(nextPageLink: string, options: Models.PrivateEndpointConnectionsListByServiceNextOptionalParams, callback: msRest.ServiceCallback<Models.PrivateEndpointConnectionListResult>): void;
  listByServiceNext(nextPageLink: string, options?: Models.PrivateEndpointConnectionsListByServiceNextOptionalParams | msRest.ServiceCallback<Models.PrivateEndpointConnectionListResult>, callback?: msRest.ServiceCallback<Models.PrivateEndpointConnectionListResult>): Promise<Models.PrivateEndpointConnectionsListByServiceNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listByServiceNextOperationSpec,
      callback) as Promise<Models.PrivateEndpointConnectionsListByServiceNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const updateOperationSpec: msRest.OperationSpec = {
  httpMethod: "PUT",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Search/searchServices/{searchServiceName}/privateEndpointConnections/{privateEndpointConnectionName}",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.searchServiceName,
    Parameters.privateEndpointConnectionName,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage,
    Parameters.clientRequestId
  ],
  requestBody: {
    parameterPath: "privateEndpointConnection",
    mapper: {
      ...Mappers.PrivateEndpointConnection,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.PrivateEndpointConnection
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Search/searchServices/{searchServiceName}/privateEndpointConnections/{privateEndpointConnectionName}",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.searchServiceName,
    Parameters.privateEndpointConnectionName,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage,
    Parameters.clientRequestId
  ],
  responses: {
    200: {
      bodyMapper: Mappers.PrivateEndpointConnection
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const deleteMethodOperationSpec: msRest.OperationSpec = {
  httpMethod: "DELETE",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Search/searchServices/{searchServiceName}/privateEndpointConnections/{privateEndpointConnectionName}",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.searchServiceName,
    Parameters.privateEndpointConnectionName,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage,
    Parameters.clientRequestId
  ],
  responses: {
    200: {
      bodyMapper: Mappers.PrivateEndpointConnection
    },
    404: {},
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listByServiceOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Search/searchServices/{searchServiceName}/privateEndpointConnections",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.searchServiceName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage,
    Parameters.clientRequestId
  ],
  responses: {
    200: {
      bodyMapper: Mappers.PrivateEndpointConnectionListResult
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listByServiceNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage,
    Parameters.clientRequestId
  ],
  responses: {
    200: {
      bodyMapper: Mappers.PrivateEndpointConnectionListResult
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};
