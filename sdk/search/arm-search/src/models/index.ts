/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

/** The result of the request to list REST API operations. It contains a list of operations and a URL  to get the next set of results. */
export interface OperationListResult {
  /**
   * The list of operations supported by the resource provider.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Operation[];
  /**
   * The URL to get the next set of operation list results, if any.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Describes a REST API operation. */
export interface Operation {
  /**
   * The name of the operation. This name is of the form {provider}/{resource}/{operation}.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The object that describes the operation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly display?: OperationDisplay;
}

/** The object that describes the operation. */
export interface OperationDisplay {
  /**
   * The friendly name of the resource provider.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provider?: string;
  /**
   * The operation type: read, write, delete, listKeys/action, etc.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly operation?: string;
  /**
   * The resource type on which the operation is performed.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resource?: string;
  /**
   * The friendly name of the operation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
}

/** Contains information about an API error. */
export interface CloudError {
  /** Describes a particular API error with an error code and a message. */
  error?: CloudErrorBody;
}

/** Describes a particular API error with an error code and a message. */
export interface CloudErrorBody {
  /** An error code that describes the error condition more precisely than an HTTP status code. Can be used to programmatically handle specific error cases. */
  code?: string;
  /** A message that describes the error in detail and provides debugging information. */
  message?: string;
  /** The target of the particular error (for example, the name of the property in error). */
  target?: string;
  /** Contains nested errors that are related to this error. */
  details?: CloudErrorBody[];
}

/** Response containing the primary and secondary admin API keys for a given Azure Cognitive Search service. */
export interface AdminKeyResult {
  /**
   * The primary admin API key of the search service.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly primaryKey?: string;
  /**
   * The secondary admin API key of the search service.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly secondaryKey?: string;
}

/** Describes an API key for a given Azure Cognitive Search service that has permissions for query operations only. */
export interface QueryKey {
  /**
   * The name of the query API key; may be empty.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The value of the query API key.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly key?: string;
}

/** Response containing the query API keys for a given Azure Cognitive Search service. */
export interface ListQueryKeysResult {
  /**
   * The query keys for the Azure Cognitive Search service.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: QueryKey[];
  /**
   * Request URL that can be used to query next page of query keys. Returned when the total number of requested query keys exceed maximum page size.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Network specific rules that determine how the Azure Cognitive Search service may be reached. */
export interface NetworkRuleSet {
  /** A list of IP restriction rules that defines the inbound network(s) with allowing access to the search service endpoint. At the meantime, all other public IP networks are blocked by the firewall. These restriction rules are applied only when the 'publicNetworkAccess' of the search service is 'enabled'; otherwise, traffic over public interface is not allowed even with any public IP rules, and private endpoint connections would be the exclusive access method. */
  ipRules?: IpRule[];
}

/** The IP restriction rule of the Azure Cognitive Search service. */
export interface IpRule {
  /** Value corresponding to a single IPv4 address (eg., 123.1.2.3) or an IP range in CIDR format (eg., 123.1.2.3/24) to be allowed. */
  value?: string;
}

/** Describes the properties of an existing Private Endpoint connection to the Azure Cognitive Search service. */
export interface PrivateEndpointConnectionProperties {
  /** The private endpoint resource from Microsoft.Network provider. */
  privateEndpoint?: PrivateEndpointConnectionPropertiesPrivateEndpoint;
  /** Describes the current state of an existing Private Link Service connection to the Azure Private Endpoint. */
  privateLinkServiceConnectionState?: PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionState;
}

/** The private endpoint resource from Microsoft.Network provider. */
export interface PrivateEndpointConnectionPropertiesPrivateEndpoint {
  /** The resource id of the private endpoint resource from Microsoft.Network provider. */
  id?: string;
}

/** Describes the current state of an existing Private Link Service connection to the Azure Private Endpoint. */
export interface PrivateEndpointConnectionPropertiesPrivateLinkServiceConnectionState {
  /** Status of the the private link service connection. Can be Pending, Approved, Rejected, or Disconnected. */
  status?: PrivateLinkServiceConnectionStatus;
  /** The description for the private link service connection state. */
  description?: string;
  /** A description of any extra actions that may be required. */
  actionsRequired?: string;
}

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export interface Resource {
  /**
   * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
}

/** Describes the properties of an existing Shared Private Link Resource managed by the Azure Cognitive Search service. */
export interface SharedPrivateLinkResourceProperties {
  /** The resource id of the resource the shared private link resource is for. */
  privateLinkResourceId?: string;
  /** The group id from the provider of resource the shared private link resource is for. */
  groupId?: string;
  /** The request message for requesting approval of the shared private link resource. */
  requestMessage?: string;
  /** Optional. Can be used to specify the Azure Resource Manager location of the resource to which a shared private link is to be created. This is only required for those resources whose DNS configuration are regional (such as Azure Kubernetes Service). */
  resourceRegion?: string;
  /** Status of the shared private link resource. Can be Pending, Approved, Rejected or Disconnected. */
  status?: SharedPrivateLinkResourceStatus;
  /** The provisioning state of the shared private link resource. Can be Updating, Deleting, Failed, Succeeded or Incomplete. */
  provisioningState?: SharedPrivateLinkResourceProvisioningState;
}

/** Defines the SKU of an Azure Cognitive Search Service, which determines price tier and capacity limits. */
export interface Sku {
  /** The SKU of the search service. Valid values include: 'free': Shared service. 'basic': Dedicated service with up to 3 replicas. 'standard': Dedicated service with up to 12 partitions and 12 replicas. 'standard2': Similar to standard, but with more capacity per search unit. 'standard3': The largest Standard offering with up to 12 partitions and 12 replicas (or up to 3 partitions with more indexes if you also set the hostingMode property to 'highDensity'). 'storage_optimized_l1': Supports 1TB per partition, up to 12 partitions. 'storage_optimized_l2': Supports 2TB per partition, up to 12 partitions.' */
  name?: SkuName;
}

/** Identity for the resource. */
export interface Identity {
  /**
   * The principal ID of resource identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly principalId?: string;
  /**
   * The tenant ID of resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly tenantId?: string;
  /** The identity type. */
  type: IdentityType;
}

/** Response containing a list of Azure Cognitive Search services. */
export interface SearchServiceListResult {
  /**
   * The list of search services.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: SearchService[];
  /**
   * Request URL that can be used to query next page of search services. Returned when the total number of requested search services exceed maximum page size.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Response containing a list of supported Private Link Resources. */
export interface PrivateLinkResourcesResult {
  /**
   * The list of supported Private Link Resources.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: PrivateLinkResource[];
}

/** Describes the properties of a supported private link resource for the Azure Cognitive Search service. For a given API version, this represents the 'supported' groupIds when creating a shared private link resource. */
export interface PrivateLinkResourceProperties {
  /**
   * The group ID of the private link resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly groupId?: string;
  /**
   * The list of required members of the private link resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly requiredMembers?: string[];
  /**
   * The list of required DNS zone names of the private link resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly requiredZoneNames?: string[];
  /**
   * The list of resources that are onboarded to private link service, that are supported by Azure Cognitive Search.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly shareablePrivateLinkResourceTypes?: ShareablePrivateLinkResourceType[];
}

/** Describes an resource type that has been onboarded to private link service, supported by Azure Cognitive Search. */
export interface ShareablePrivateLinkResourceType {
  /**
   * The name of the resource type that has been onboarded to private link service, supported by Azure Cognitive Search.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Describes the properties of a resource type that has been onboarded to private link service, supported by Azure Cognitive Search.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly properties?: ShareablePrivateLinkResourceProperties;
}

/** Describes the properties of a resource type that has been onboarded to private link service, supported by Azure Cognitive Search. */
export interface ShareablePrivateLinkResourceProperties {
  /**
   * The resource provider type for the resource that has been onboarded to private link service, supported by Azure Cognitive Search.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * The resource provider group id for the resource that has been onboarded to private link service, supported by Azure Cognitive Search.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly groupId?: string;
  /**
   * The description of the resource type that has been onboarded to private link service, supported by Azure Cognitive Search.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
}

/** Response containing a list of Private Endpoint connections. */
export interface PrivateEndpointConnectionListResult {
  /**
   * The list of Private Endpoint connections.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: PrivateEndpointConnection[];
  /**
   * Request URL that can be used to query next page of private endpoint connections. Returned when the total number of requested private endpoint connections exceed maximum page size.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Response containing a list of Shared Private Link Resources. */
export interface SharedPrivateLinkResourceListResult {
  /**
   * The list of Shared Private Link Resources.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: SharedPrivateLinkResource[];
  /** The URL to get the next set of shared private link resources, if there are any. */
  nextLink?: string;
}

/** Input of check name availability API. */
export interface CheckNameAvailabilityInput {
  /** The search service name to validate. Search service names must only contain lowercase letters, digits or dashes, cannot use dash as the first two or last one characters, cannot contain consecutive dashes, and must be between 2 and 60 characters in length. */
  name: string;
  /** The type of the resource whose name is to be validated. This value must always be 'searchServices'. */
  type: "searchServices";
}

/** Output of check name availability API. */
export interface CheckNameAvailabilityOutput {
  /**
   * A value indicating whether the name is available.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isNameAvailable?: boolean;
  /**
   * The reason why the name is not available. 'Invalid' indicates the name provided does not match the naming requirements (incorrect length, unsupported characters, etc.). 'AlreadyExists' indicates that the name is already in use and is therefore unavailable.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly reason?: UnavailableNameReason;
  /**
   * A message that explains why the name is invalid and provides resource naming requirements. Available only if 'Invalid' is returned in the 'reason' property.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
}

/** The details of a long running asynchronous shared private link resource operation */
export interface AsyncOperationResult {
  /** The current status of the long running asynchronous shared private link resource operation. */
  status?: SharedPrivateLinkResourceAsyncOperationResult;
}

/** Describes an existing Private Endpoint connection to the Azure Cognitive Search service. */
export type PrivateEndpointConnection = Resource & {
  /** Describes the properties of an existing Private Endpoint connection to the Azure Cognitive Search service. */
  properties?: PrivateEndpointConnectionProperties;
};

/** Describes a Shared Private Link Resource managed by the Azure Cognitive Search service. */
export type SharedPrivateLinkResource = Resource & {
  /** Describes the properties of a Shared Private Link Resource managed by the Azure Cognitive Search service. */
  properties?: SharedPrivateLinkResourceProperties;
};

/** The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location' */
export type TrackedResource = Resource & {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** The geo-location where the resource lives */
  location: string;
};

/** The parameters used to update an Azure Cognitive Search service. */
export type SearchServiceUpdate = Resource & {
  /** The SKU of the Search Service, which determines price tier and capacity limits. This property is required when creating a new Search Service. */
  sku?: Sku;
  /** The geographic location of the resource. This must be one of the supported and registered Azure Geo Regions (for example, West US, East US, Southeast Asia, and so forth). This property is required when creating a new resource. */
  location?: string;
  /** Tags to help categorize the resource in the Azure portal. */
  tags?: { [propertyName: string]: string };
  /** The identity of the resource. */
  identity?: Identity;
  /** The number of replicas in the search service. If specified, it must be a value between 1 and 12 inclusive for standard SKUs or between 1 and 3 inclusive for basic SKU. */
  replicaCount?: number;
  /** The number of partitions in the search service; if specified, it can be 1, 2, 3, 4, 6, or 12. Values greater than 1 are only valid for standard SKUs. For 'standard3' services with hostingMode set to 'highDensity', the allowed values are between 1 and 3. */
  partitionCount?: number;
  /** Applicable only for the standard3 SKU. You can set this property to enable up to 3 high density partitions that allow up to 1000 indexes, which is much higher than the maximum indexes allowed for any other SKU. For the standard3 SKU, the value is either 'default' or 'highDensity'. For all other SKUs, this value must be 'default'. */
  hostingMode?: HostingMode;
  /** This value can be set to 'enabled' to avoid breaking changes on existing customer resources and templates. If set to 'disabled', traffic over public interface is not allowed, and private endpoint connections would be the exclusive access method. */
  publicNetworkAccess?: PublicNetworkAccess;
  /**
   * The status of the search service. Possible values include: 'running': The search service is running and no provisioning operations are underway. 'provisioning': The search service is being provisioned or scaled up or down. 'deleting': The search service is being deleted. 'degraded': The search service is degraded. This can occur when the underlying search units are not healthy. The search service is most likely operational, but performance might be slow and some requests might be dropped. 'disabled': The search service is disabled. In this state, the service will reject all API requests. 'error': The search service is in an error state. If your service is in the degraded, disabled, or error states, it means the Azure Cognitive Search team is actively investigating the underlying issue. Dedicated services in these states are still chargeable based on the number of search units provisioned.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: SearchServiceStatus;
  /**
   * The details of the search service status.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly statusDetails?: string;
  /**
   * The state of the last provisioning operation performed on the search service. Provisioning is an intermediate state that occurs while service capacity is being established. After capacity is set up, provisioningState changes to either 'succeeded' or 'failed'. Client applications can poll provisioning status (the recommended polling interval is from 30 seconds to one minute) by using the Get Search Service operation to see when an operation is completed. If you are using the free service, this value tends to come back as 'succeeded' directly in the call to Create search service. This is because the free service uses capacity that is already set up.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /** Network specific rules that determine how the Azure Cognitive Search service may be reached. */
  networkRuleSet?: NetworkRuleSet;
  /**
   * The list of private endpoint connections to the Azure Cognitive Search service.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly privateEndpointConnections?: PrivateEndpointConnection[];
  /**
   * The list of shared private link resources managed by the Azure Cognitive Search service.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly sharedPrivateLinkResources?: SharedPrivateLinkResource[];
};

/** Describes a supported private link resource for the Azure Cognitive Search service. */
export type PrivateLinkResource = Resource & {
  /**
   * Describes the properties of a supported private link resource for the Azure Cognitive Search service.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly properties?: PrivateLinkResourceProperties;
};

/** Describes an Azure Cognitive Search service and its current state. */
export type SearchService = TrackedResource & {
  /** The SKU of the Search Service, which determines price tier and capacity limits. This property is required when creating a new Search Service. */
  sku?: Sku;
  /** The identity of the resource. */
  identity?: Identity;
  /** The number of replicas in the search service. If specified, it must be a value between 1 and 12 inclusive for standard SKUs or between 1 and 3 inclusive for basic SKU. */
  replicaCount?: number;
  /** The number of partitions in the search service; if specified, it can be 1, 2, 3, 4, 6, or 12. Values greater than 1 are only valid for standard SKUs. For 'standard3' services with hostingMode set to 'highDensity', the allowed values are between 1 and 3. */
  partitionCount?: number;
  /** Applicable only for the standard3 SKU. You can set this property to enable up to 3 high density partitions that allow up to 1000 indexes, which is much higher than the maximum indexes allowed for any other SKU. For the standard3 SKU, the value is either 'default' or 'highDensity'. For all other SKUs, this value must be 'default'. */
  hostingMode?: HostingMode;
  /** This value can be set to 'enabled' to avoid breaking changes on existing customer resources and templates. If set to 'disabled', traffic over public interface is not allowed, and private endpoint connections would be the exclusive access method. */
  publicNetworkAccess?: PublicNetworkAccess;
  /**
   * The status of the search service. Possible values include: 'running': The search service is running and no provisioning operations are underway. 'provisioning': The search service is being provisioned or scaled up or down. 'deleting': The search service is being deleted. 'degraded': The search service is degraded. This can occur when the underlying search units are not healthy. The search service is most likely operational, but performance might be slow and some requests might be dropped. 'disabled': The search service is disabled. In this state, the service will reject all API requests. 'error': The search service is in an error state. If your service is in the degraded, disabled, or error states, it means the Azure Cognitive Search team is actively investigating the underlying issue. Dedicated services in these states are still chargeable based on the number of search units provisioned.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly status?: SearchServiceStatus;
  /**
   * The details of the search service status.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly statusDetails?: string;
  /**
   * The state of the last provisioning operation performed on the search service. Provisioning is an intermediate state that occurs while service capacity is being established. After capacity is set up, provisioningState changes to either 'succeeded' or 'failed'. Client applications can poll provisioning status (the recommended polling interval is from 30 seconds to one minute) by using the Get Search Service operation to see when an operation is completed. If you are using the free service, this value tends to come back as 'succeeded' directly in the call to Create search service. This is because the free service uses capacity that is already set up.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /** Network specific rules that determine how the Azure Cognitive Search service may be reached. */
  networkRuleSet?: NetworkRuleSet;
  /**
   * The list of private endpoint connections to the Azure Cognitive Search service.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly privateEndpointConnections?: PrivateEndpointConnection[];
  /**
   * The list of shared private link resources managed by the Azure Cognitive Search service.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly sharedPrivateLinkResources?: SharedPrivateLinkResource[];
};

/** Parameter group */
export interface SearchManagementRequestOptions {
  /** A client-generated GUID value that identifies this request. If specified, this will be included in response information as a way to track the request. */
  clientRequestId?: string;
}

/** Known values of {@link UnavailableNameReason} that the service accepts. */
export enum KnownUnavailableNameReason {
  Invalid = "Invalid",
  AlreadyExists = "AlreadyExists"
}

/**
 * Defines values for UnavailableNameReason. \
 * {@link KnownUnavailableNameReason} can be used interchangeably with UnavailableNameReason,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Invalid** \
 * **AlreadyExists**
 */
export type UnavailableNameReason = string;

/** Known values of {@link SharedPrivateLinkResourceAsyncOperationResult} that the service accepts. */
export enum KnownSharedPrivateLinkResourceAsyncOperationResult {
  Running = "Running",
  Succeeded = "Succeeded",
  Failed = "Failed"
}

/**
 * Defines values for SharedPrivateLinkResourceAsyncOperationResult. \
 * {@link KnownSharedPrivateLinkResourceAsyncOperationResult} can be used interchangeably with SharedPrivateLinkResourceAsyncOperationResult,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Running** \
 * **Succeeded** \
 * **Failed**
 */
export type SharedPrivateLinkResourceAsyncOperationResult = string;
/** Defines values for AdminKeyKind. */
export type AdminKeyKind = "primary" | "secondary";
/** Defines values for HostingMode. */
export type HostingMode = "default" | "highDensity";
/** Defines values for PublicNetworkAccess. */
export type PublicNetworkAccess = "enabled" | "disabled";
/** Defines values for SearchServiceStatus. */
export type SearchServiceStatus =
  | "running"
  | "provisioning"
  | "deleting"
  | "degraded"
  | "disabled"
  | "error";
/** Defines values for ProvisioningState. */
export type ProvisioningState = "succeeded" | "provisioning" | "failed";
/** Defines values for PrivateLinkServiceConnectionStatus. */
export type PrivateLinkServiceConnectionStatus =
  | "Pending"
  | "Approved"
  | "Rejected"
  | "Disconnected";
/** Defines values for SharedPrivateLinkResourceStatus. */
export type SharedPrivateLinkResourceStatus =
  | "Pending"
  | "Approved"
  | "Rejected"
  | "Disconnected";
/** Defines values for SharedPrivateLinkResourceProvisioningState. */
export type SharedPrivateLinkResourceProvisioningState =
  | "Updating"
  | "Deleting"
  | "Failed"
  | "Succeeded"
  | "Incomplete";
/** Defines values for SkuName. */
export type SkuName =
  | "free"
  | "basic"
  | "standard"
  | "standard2"
  | "standard3"
  | "storage_optimized_l1"
  | "storage_optimized_l2";
/** Defines values for IdentityType. */
export type IdentityType = "None" | "SystemAssigned";

/** Optional parameters. */
export interface OperationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type OperationsListResponse = OperationListResult;

/** Optional parameters. */
export interface AdminKeysGetOptionalParams
  extends coreClient.OperationOptions {
  /** Parameter group */
  searchManagementRequestOptions?: SearchManagementRequestOptions;
}

/** Contains response data for the get operation. */
export type AdminKeysGetResponse = AdminKeyResult;

/** Optional parameters. */
export interface AdminKeysRegenerateOptionalParams
  extends coreClient.OperationOptions {
  /** Parameter group */
  searchManagementRequestOptions?: SearchManagementRequestOptions;
}

/** Contains response data for the regenerate operation. */
export type AdminKeysRegenerateResponse = AdminKeyResult;

/** Optional parameters. */
export interface QueryKeysCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Parameter group */
  searchManagementRequestOptions?: SearchManagementRequestOptions;
}

/** Contains response data for the create operation. */
export type QueryKeysCreateResponse = QueryKey;

/** Optional parameters. */
export interface QueryKeysListBySearchServiceOptionalParams
  extends coreClient.OperationOptions {
  /** Parameter group */
  searchManagementRequestOptions?: SearchManagementRequestOptions;
}

/** Contains response data for the listBySearchService operation. */
export type QueryKeysListBySearchServiceResponse = ListQueryKeysResult;

/** Optional parameters. */
export interface QueryKeysDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Parameter group */
  searchManagementRequestOptions?: SearchManagementRequestOptions;
}

/** Optional parameters. */
export interface QueryKeysListBySearchServiceNextOptionalParams
  extends coreClient.OperationOptions {
  /** Parameter group */
  searchManagementRequestOptions?: SearchManagementRequestOptions;
}

/** Contains response data for the listBySearchServiceNext operation. */
export type QueryKeysListBySearchServiceNextResponse = ListQueryKeysResult;

/** Optional parameters. */
export interface ServicesCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Parameter group */
  searchManagementRequestOptions?: SearchManagementRequestOptions;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type ServicesCreateOrUpdateResponse = SearchService;

/** Optional parameters. */
export interface ServicesUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Parameter group */
  searchManagementRequestOptions?: SearchManagementRequestOptions;
}

/** Contains response data for the update operation. */
export type ServicesUpdateResponse = SearchService;

/** Optional parameters. */
export interface ServicesGetOptionalParams extends coreClient.OperationOptions {
  /** Parameter group */
  searchManagementRequestOptions?: SearchManagementRequestOptions;
}

/** Contains response data for the get operation. */
export type ServicesGetResponse = SearchService;

/** Optional parameters. */
export interface ServicesDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Parameter group */
  searchManagementRequestOptions?: SearchManagementRequestOptions;
}

/** Optional parameters. */
export interface ServicesListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {
  /** Parameter group */
  searchManagementRequestOptions?: SearchManagementRequestOptions;
}

/** Contains response data for the listByResourceGroup operation. */
export type ServicesListByResourceGroupResponse = SearchServiceListResult;

/** Optional parameters. */
export interface ServicesListBySubscriptionOptionalParams
  extends coreClient.OperationOptions {
  /** Parameter group */
  searchManagementRequestOptions?: SearchManagementRequestOptions;
}

/** Contains response data for the listBySubscription operation. */
export type ServicesListBySubscriptionResponse = SearchServiceListResult;

/** Optional parameters. */
export interface ServicesCheckNameAvailabilityOptionalParams
  extends coreClient.OperationOptions {
  /** Parameter group */
  searchManagementRequestOptions?: SearchManagementRequestOptions;
}

/** Contains response data for the checkNameAvailability operation. */
export type ServicesCheckNameAvailabilityResponse = CheckNameAvailabilityOutput;

/** Optional parameters. */
export interface ServicesListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {
  /** Parameter group */
  searchManagementRequestOptions?: SearchManagementRequestOptions;
}

/** Contains response data for the listByResourceGroupNext operation. */
export type ServicesListByResourceGroupNextResponse = SearchServiceListResult;

/** Optional parameters. */
export interface ServicesListBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {
  /** Parameter group */
  searchManagementRequestOptions?: SearchManagementRequestOptions;
}

/** Contains response data for the listBySubscriptionNext operation. */
export type ServicesListBySubscriptionNextResponse = SearchServiceListResult;

/** Optional parameters. */
export interface PrivateLinkResourcesListSupportedOptionalParams
  extends coreClient.OperationOptions {
  /** Parameter group */
  searchManagementRequestOptions?: SearchManagementRequestOptions;
}

/** Contains response data for the listSupported operation. */
export type PrivateLinkResourcesListSupportedResponse = PrivateLinkResourcesResult;

/** Optional parameters. */
export interface PrivateEndpointConnectionsUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Parameter group */
  searchManagementRequestOptions?: SearchManagementRequestOptions;
}

/** Contains response data for the update operation. */
export type PrivateEndpointConnectionsUpdateResponse = PrivateEndpointConnection;

/** Optional parameters. */
export interface PrivateEndpointConnectionsGetOptionalParams
  extends coreClient.OperationOptions {
  /** Parameter group */
  searchManagementRequestOptions?: SearchManagementRequestOptions;
}

/** Contains response data for the get operation. */
export type PrivateEndpointConnectionsGetResponse = PrivateEndpointConnection;

/** Optional parameters. */
export interface PrivateEndpointConnectionsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Parameter group */
  searchManagementRequestOptions?: SearchManagementRequestOptions;
}

/** Contains response data for the delete operation. */
export type PrivateEndpointConnectionsDeleteResponse = PrivateEndpointConnection;

/** Optional parameters. */
export interface PrivateEndpointConnectionsListByServiceOptionalParams
  extends coreClient.OperationOptions {
  /** Parameter group */
  searchManagementRequestOptions?: SearchManagementRequestOptions;
}

/** Contains response data for the listByService operation. */
export type PrivateEndpointConnectionsListByServiceResponse = PrivateEndpointConnectionListResult;

/** Optional parameters. */
export interface PrivateEndpointConnectionsListByServiceNextOptionalParams
  extends coreClient.OperationOptions {
  /** Parameter group */
  searchManagementRequestOptions?: SearchManagementRequestOptions;
}

/** Contains response data for the listByServiceNext operation. */
export type PrivateEndpointConnectionsListByServiceNextResponse = PrivateEndpointConnectionListResult;

/** Optional parameters. */
export interface SharedPrivateLinkResourcesCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Parameter group */
  searchManagementRequestOptions?: SearchManagementRequestOptions;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type SharedPrivateLinkResourcesCreateOrUpdateResponse = SharedPrivateLinkResource;

/** Optional parameters. */
export interface SharedPrivateLinkResourcesGetOptionalParams
  extends coreClient.OperationOptions {
  /** Parameter group */
  searchManagementRequestOptions?: SearchManagementRequestOptions;
}

/** Contains response data for the get operation. */
export type SharedPrivateLinkResourcesGetResponse = SharedPrivateLinkResource;

/** Optional parameters. */
export interface SharedPrivateLinkResourcesDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Parameter group */
  searchManagementRequestOptions?: SearchManagementRequestOptions;
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface SharedPrivateLinkResourcesListByServiceOptionalParams
  extends coreClient.OperationOptions {
  /** Parameter group */
  searchManagementRequestOptions?: SearchManagementRequestOptions;
}

/** Contains response data for the listByService operation. */
export type SharedPrivateLinkResourcesListByServiceResponse = SharedPrivateLinkResourceListResult;

/** Optional parameters. */
export interface SharedPrivateLinkResourcesListByServiceNextOptionalParams
  extends coreClient.OperationOptions {
  /** Parameter group */
  searchManagementRequestOptions?: SearchManagementRequestOptions;
}

/** Contains response data for the listByServiceNext operation. */
export type SharedPrivateLinkResourcesListByServiceNextResponse = SharedPrivateLinkResourceListResult;

/** Optional parameters. */
export interface SearchManagementClientOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
