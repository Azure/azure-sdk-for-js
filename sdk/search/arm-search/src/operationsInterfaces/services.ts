/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  SearchService,
  ServicesListByResourceGroupOptionalParams,
  ServicesListBySubscriptionOptionalParams,
  ServicesCreateOrUpdateOptionalParams,
  ServicesCreateOrUpdateResponse,
  SearchServiceUpdate,
  ServicesUpdateOptionalParams,
  ServicesUpdateResponse,
  ServicesGetOptionalParams,
  ServicesGetResponse,
  ServicesDeleteOptionalParams,
  ServicesCheckNameAvailabilityOptionalParams,
  ServicesCheckNameAvailabilityResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Services. */
export interface Services {
  /**
   * Gets a list of all search services in the given resource group.
   * @param resourceGroupName The name of the resource group within the current subscription. You can
   *                          obtain this value from the Azure Resource Manager API or the portal.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: ServicesListByResourceGroupOptionalParams
  ): PagedAsyncIterableIterator<SearchService>;
  /**
   * Gets a list of all search services in the given subscription.
   * @param options The options parameters.
   */
  listBySubscription(
    options?: ServicesListBySubscriptionOptionalParams
  ): PagedAsyncIterableIterator<SearchService>;
  /**
   * Creates or updates a search service in the given resource group. If the search service already
   * exists, all properties will be updated with the given values.
   * @param resourceGroupName The name of the resource group within the current subscription. You can
   *                          obtain this value from the Azure Resource Manager API or the portal.
   * @param searchServiceName The name of the Azure Cognitive Search service to create or update. Search
   *                          service names must only contain lowercase letters, digits or dashes, cannot use dash as the first
   *                          two or last one characters, cannot contain consecutive dashes, and must be between 2 and 60
   *                          characters in length. Search service names must be globally unique since they are part of the
   *                          service URI (https://<name>.search.windows.net). You cannot change the service name after the
   *                          service is created.
   * @param service The definition of the search service to create or update.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    searchServiceName: string,
    service: SearchService,
    options?: ServicesCreateOrUpdateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<ServicesCreateOrUpdateResponse>,
      ServicesCreateOrUpdateResponse
    >
  >;
  /**
   * Creates or updates a search service in the given resource group. If the search service already
   * exists, all properties will be updated with the given values.
   * @param resourceGroupName The name of the resource group within the current subscription. You can
   *                          obtain this value from the Azure Resource Manager API or the portal.
   * @param searchServiceName The name of the Azure Cognitive Search service to create or update. Search
   *                          service names must only contain lowercase letters, digits or dashes, cannot use dash as the first
   *                          two or last one characters, cannot contain consecutive dashes, and must be between 2 and 60
   *                          characters in length. Search service names must be globally unique since they are part of the
   *                          service URI (https://<name>.search.windows.net). You cannot change the service name after the
   *                          service is created.
   * @param service The definition of the search service to create or update.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    searchServiceName: string,
    service: SearchService,
    options?: ServicesCreateOrUpdateOptionalParams
  ): Promise<ServicesCreateOrUpdateResponse>;
  /**
   * Updates an existing search service in the given resource group.
   * @param resourceGroupName The name of the resource group within the current subscription. You can
   *                          obtain this value from the Azure Resource Manager API or the portal.
   * @param searchServiceName The name of the Azure Cognitive Search service to update.
   * @param service The definition of the search service to update.
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    searchServiceName: string,
    service: SearchServiceUpdate,
    options?: ServicesUpdateOptionalParams
  ): Promise<ServicesUpdateResponse>;
  /**
   * Gets the search service with the given name in the given resource group.
   * @param resourceGroupName The name of the resource group within the current subscription. You can
   *                          obtain this value from the Azure Resource Manager API or the portal.
   * @param searchServiceName The name of the Azure Cognitive Search service associated with the
   *                          specified resource group.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    searchServiceName: string,
    options?: ServicesGetOptionalParams
  ): Promise<ServicesGetResponse>;
  /**
   * Deletes a search service in the given resource group, along with its associated resources.
   * @param resourceGroupName The name of the resource group within the current subscription. You can
   *                          obtain this value from the Azure Resource Manager API or the portal.
   * @param searchServiceName The name of the Azure Cognitive Search service associated with the
   *                          specified resource group.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    searchServiceName: string,
    options?: ServicesDeleteOptionalParams
  ): Promise<void>;
  /**
   * Checks whether or not the given search service name is available for use. Search service names must
   * be globally unique since they are part of the service URI (https://<name>.search.windows.net).
   * @param name The search service name to validate. Search service names must only contain lowercase
   *             letters, digits or dashes, cannot use dash as the first two or last one characters, cannot contain
   *             consecutive dashes, and must be between 2 and 60 characters in length.
   * @param options The options parameters.
   */
  checkNameAvailability(
    name: string,
    options?: ServicesCheckNameAvailabilityOptionalParams
  ): Promise<ServicesCheckNameAvailabilityResponse>;
}
