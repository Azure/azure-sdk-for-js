/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as coreHttp from "@azure/core-http";
import * as Models from "./models";

const packageName = "@azure/search";
const packageVersion = "1.0.0-preview.1";

export class SearchServiceClientContext extends coreHttp.ServiceClient {
  apiVersion: string;
  searchServiceName: string;
  searchDnsSuffix?: string;
  credentials: coreHttp.TokenCredential | coreHttp.ServiceClientCredentials;

  /**
   * Initializes a new instance of the SearchServiceClientContext class.
   * @param apiVersion Client Api Version.
   * @param searchServiceName The name of the search service.
   * @param credentials Subscription credentials which uniquely identify client subscription.
   * @param [options] The parameter options
   */
  constructor(
    credentials: coreHttp.TokenCredential | coreHttp.ServiceClientCredentials,
    apiVersion: string,
    searchServiceName: string,
    options?: Models.SearchServiceClientOptions
  ) {
    if (apiVersion == undefined) {
      throw new Error("'apiVersion' cannot be null.");
    }
    if (searchServiceName == undefined) {
      throw new Error("'searchServiceName' cannot be null.");
    }
    if (credentials == undefined) {
      throw new Error("'credentials' cannot be null.");
    }

    if (!options) {
      options = {};
    }

    if (!options.userAgent) {
      const defaultUserAgent = coreHttp.getDefaultUserAgentValue();
      options.userAgent = `${packageName}/${packageVersion} ${defaultUserAgent}`;
    }

    super(credentials, options);

    this.searchDnsSuffix = "search.windows.net";
    this.baseUri = "https://{searchServiceName}.{searchDnsSuffix}";
    this.requestContentType = "application/json; charset=utf-8";
    this.apiVersion = apiVersion;
    this.searchServiceName = searchServiceName;
    this.credentials = credentials;
    if (options.searchDnsSuffix !== null && options.searchDnsSuffix !== undefined) {
      this.searchDnsSuffix = options.searchDnsSuffix;
    }
  }
}
