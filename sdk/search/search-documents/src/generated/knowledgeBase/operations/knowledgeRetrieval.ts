/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { KnowledgeRetrieval } from "../operationsInterfaces/index.js";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers.js";
import * as Parameters from "../models/parameters.js";
import { SearchClient } from "../searchClient.js";
import {
  KnowledgeBaseRetrievalRequest,
  KnowledgeRetrievalRetrieveOptionalParams,
  KnowledgeRetrievalRetrieveResponse,
} from "../models/index.js";

/** Class containing KnowledgeRetrieval operations. */
export class KnowledgeRetrievalImpl implements KnowledgeRetrieval {
  private readonly client: SearchClient;

  /**
   * Initialize a new instance of the class KnowledgeRetrieval class.
   * @param client Reference to the service client
   */
  constructor(client: SearchClient) {
    this.client = client;
  }

  /**
   * KnowledgeBase retrieves relevant data from backing stores.
   * @param retrievalRequest The retrieval request to process.
   * @param options The options parameters.
   */
  retrieve(
    retrievalRequest: KnowledgeBaseRetrievalRequest,
    options?: KnowledgeRetrievalRetrieveOptionalParams,
  ): Promise<KnowledgeRetrievalRetrieveResponse> {
    return this.client.sendOperationRequest(
      { retrievalRequest, options },
      retrieveOperationSpec,
    );
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const retrieveOperationSpec: coreClient.OperationSpec = {
  path: "/retrieve",
  httpMethod: "POST",
  responses: {
    200: {
      bodyMapper: Mappers.KnowledgeBaseRetrievalResponse,
    },
    206: {
      bodyMapper: Mappers.KnowledgeBaseRetrievalResponse,
    },
    default: {
      bodyMapper: Mappers.ErrorResponse,
    },
  },
  requestBody: Parameters.retrievalRequest,
  queryParameters: [Parameters.apiVersion],
  urlParameters: [Parameters.endpoint, Parameters.knowledgeBaseName],
  headerParameters: [
    Parameters.contentType,
    Parameters.accept,
    Parameters.xMsQuerySourceAuthorization,
  ],
  mediaType: "json",
  serializer,
};
