/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export const KnowledgeAgentRetrievalRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "KnowledgeAgentRetrievalRequest",
    modelProperties: {
      messages: {
        serializedName: "messages",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "KnowledgeAgentMessage",
            },
          },
        },
      },
      targetIndexParams: {
        serializedName: "targetIndexParams",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "KnowledgeAgentIndexParams",
            },
          },
        },
      },
    },
  },
};

export const KnowledgeAgentMessage: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "KnowledgeAgentMessage",
    modelProperties: {
      role: {
        serializedName: "role",
        required: true,
        type: {
          name: "String",
        },
      },
      content: {
        serializedName: "content",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "KnowledgeAgentMessageContent",
            },
          },
        },
      },
    },
  },
};

export const KnowledgeAgentMessageContent: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "KnowledgeAgentMessageContent",
    uberParent: "KnowledgeAgentMessageContent",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type",
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const KnowledgeAgentIndexParams: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "KnowledgeAgentIndexParams",
    modelProperties: {
      indexName: {
        serializedName: "indexName",
        type: {
          name: "String",
        },
      },
      filterAddOn: {
        serializedName: "filterAddOn",
        type: {
          name: "String",
        },
      },
      maxDocsForReranker: {
        serializedName: "maxDocsForReranker",
        type: {
          name: "Number",
        },
      },
      rerankerThreshold: {
        constraints: {
          InclusiveMaximum: 4,
          InclusiveMinimum: 0,
        },
        serializedName: "rerankerThreshold",
        type: {
          name: "Number",
        },
      },
      includeReferenceSourceData: {
        serializedName: "includeReferenceSourceData",
        type: {
          name: "Boolean",
        },
      },
    },
  },
};

export const KnowledgeAgentRetrievalResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "KnowledgeAgentRetrievalResponse",
    modelProperties: {
      response: {
        serializedName: "response",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "KnowledgeAgentMessage",
            },
          },
        },
      },
      activity: {
        serializedName: "activity",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "KnowledgeAgentActivityRecord",
            },
          },
        },
      },
      references: {
        serializedName: "references",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "KnowledgeAgentReference",
            },
          },
        },
      },
    },
  },
};

export const KnowledgeAgentActivityRecord: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "KnowledgeAgentActivityRecord",
    uberParent: "KnowledgeAgentActivityRecord",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type",
    },
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Number",
        },
      },
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const KnowledgeAgentReference: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "KnowledgeAgentReference",
    uberParent: "KnowledgeAgentReference",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type",
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String",
        },
      },
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String",
        },
      },
      activitySource: {
        serializedName: "activitySource",
        required: true,
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const ErrorResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorDetail",
        },
      },
    },
  },
};

export const ErrorDetail: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorDetail",
    modelProperties: {
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      target: {
        serializedName: "target",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      details: {
        serializedName: "details",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorDetail",
            },
          },
        },
      },
      additionalInfo: {
        serializedName: "additionalInfo",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorAdditionalInfo",
            },
          },
        },
      },
    },
  },
};

export const ErrorAdditionalInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorAdditionalInfo",
    modelProperties: {
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      info: {
        serializedName: "info",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } },
        },
      },
    },
  },
};

export const KnowledgeAgentMessageImageContentImage: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "KnowledgeAgentMessageImageContentImage",
      modelProperties: {
        url: {
          serializedName: "url",
          required: true,
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const KnowledgeAgentSearchActivityRecordQuery: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "KnowledgeAgentSearchActivityRecordQuery",
      modelProperties: {
        search: {
          serializedName: "search",
          type: {
            name: "String",
          },
        },
        filter: {
          serializedName: "filter",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const KnowledgeAgentMessageTextContent: coreClient.CompositeMapper = {
  serializedName: "text",
  type: {
    name: "Composite",
    className: "KnowledgeAgentMessageTextContent",
    uberParent: "KnowledgeAgentMessageContent",
    polymorphicDiscriminator:
      KnowledgeAgentMessageContent.type.polymorphicDiscriminator,
    modelProperties: {
      ...KnowledgeAgentMessageContent.type.modelProperties,
      text: {
        serializedName: "text",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const KnowledgeAgentMessageImageContent: coreClient.CompositeMapper = {
  serializedName: "image",
  type: {
    name: "Composite",
    className: "KnowledgeAgentMessageImageContent",
    uberParent: "KnowledgeAgentMessageContent",
    polymorphicDiscriminator:
      KnowledgeAgentMessageContent.type.polymorphicDiscriminator,
    modelProperties: {
      ...KnowledgeAgentMessageContent.type.modelProperties,
      image: {
        serializedName: "image",
        type: {
          name: "Composite",
          className: "KnowledgeAgentMessageImageContentImage",
        },
      },
    },
  },
};

export const KnowledgeAgentSearchActivityRecord: coreClient.CompositeMapper = {
  serializedName: "AzureSearchQuery",
  type: {
    name: "Composite",
    className: "KnowledgeAgentSearchActivityRecord",
    uberParent: "KnowledgeAgentActivityRecord",
    polymorphicDiscriminator:
      KnowledgeAgentActivityRecord.type.polymorphicDiscriminator,
    modelProperties: {
      ...KnowledgeAgentActivityRecord.type.modelProperties,
      targetIndex: {
        serializedName: "targetIndex",
        type: {
          name: "String",
        },
      },
      query: {
        serializedName: "query",
        type: {
          name: "Composite",
          className: "KnowledgeAgentSearchActivityRecordQuery",
        },
      },
      queryTime: {
        serializedName: "queryTime",
        type: {
          name: "DateTime",
        },
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number",
        },
      },
      elapsedMs: {
        serializedName: "elapsedMs",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const KnowledgeAgentModelQueryPlanningActivityRecord: coreClient.CompositeMapper =
  {
    serializedName: "ModelQueryPlanning",
    type: {
      name: "Composite",
      className: "KnowledgeAgentModelQueryPlanningActivityRecord",
      uberParent: "KnowledgeAgentActivityRecord",
      polymorphicDiscriminator:
        KnowledgeAgentActivityRecord.type.polymorphicDiscriminator,
      modelProperties: {
        ...KnowledgeAgentActivityRecord.type.modelProperties,
        inputTokens: {
          serializedName: "inputTokens",
          type: {
            name: "Number",
          },
        },
        outputTokens: {
          serializedName: "outputTokens",
          type: {
            name: "Number",
          },
        },
        elapsedMs: {
          serializedName: "elapsedMs",
          type: {
            name: "Number",
          },
        },
      },
    },
  };

export const KnowledgeAgentSemanticRankerActivityRecord: coreClient.CompositeMapper =
  {
    serializedName: "AzureSearchSemanticRanker",
    type: {
      name: "Composite",
      className: "KnowledgeAgentSemanticRankerActivityRecord",
      uberParent: "KnowledgeAgentActivityRecord",
      polymorphicDiscriminator:
        KnowledgeAgentActivityRecord.type.polymorphicDiscriminator,
      modelProperties: {
        ...KnowledgeAgentActivityRecord.type.modelProperties,
        inputTokens: {
          serializedName: "inputTokens",
          type: {
            name: "Number",
          },
        },
        elapsedMs: {
          serializedName: "elapsedMs",
          type: {
            name: "Number",
          },
        },
      },
    },
  };

export const KnowledgeAgentAzureSearchDocReference: coreClient.CompositeMapper =
  {
    serializedName: "AzureSearchDoc",
    type: {
      name: "Composite",
      className: "KnowledgeAgentAzureSearchDocReference",
      uberParent: "KnowledgeAgentReference",
      polymorphicDiscriminator:
        KnowledgeAgentReference.type.polymorphicDiscriminator,
      modelProperties: {
        ...KnowledgeAgentReference.type.modelProperties,
        docKey: {
          serializedName: "docKey",
          type: {
            name: "String",
          },
        },
        sourceData: {
          serializedName: "sourceData",
          type: {
            name: "Dictionary",
            value: { type: { name: "any" } },
          },
        },
      },
    },
  };

export let discriminators = {
  KnowledgeAgentMessageContent: KnowledgeAgentMessageContent,
  KnowledgeAgentActivityRecord: KnowledgeAgentActivityRecord,
  KnowledgeAgentReference: KnowledgeAgentReference,
  "KnowledgeAgentMessageContent.text": KnowledgeAgentMessageTextContent,
  "KnowledgeAgentMessageContent.image": KnowledgeAgentMessageImageContent,
  "KnowledgeAgentActivityRecord.AzureSearchQuery":
    KnowledgeAgentSearchActivityRecord,
  "KnowledgeAgentActivityRecord.ModelQueryPlanning":
    KnowledgeAgentModelQueryPlanningActivityRecord,
  "KnowledgeAgentActivityRecord.AzureSearchSemanticRanker":
    KnowledgeAgentSemanticRankerActivityRecord,
  "KnowledgeAgentReference.AzureSearchDoc":
    KnowledgeAgentAzureSearchDocReference,
};
