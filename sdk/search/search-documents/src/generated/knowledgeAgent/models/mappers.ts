/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export const KnowledgeBaseRetrievalRequest: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "KnowledgeBaseRetrievalRequest",
    modelProperties: {
      messages: {
        serializedName: "messages",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "KnowledgeBaseMessage",
            },
          },
        },
      },
      intents: {
        serializedName: "intents",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "KnowledgeRetrievalIntent",
            },
          },
        },
      },
      maxRuntimeInSeconds: {
        serializedName: "maxRuntimeInSeconds",
        type: {
          name: "Number",
        },
      },
      maxOutputSize: {
        serializedName: "maxOutputSize",
        type: {
          name: "Number",
        },
      },
      retrievalReasoningEffort: {
        serializedName: "retrievalReasoningEffort",
        type: {
          name: "Composite",
          className: "KnowledgeRetrievalReasoningEffort",
        },
      },
      includeActivity: {
        serializedName: "includeActivity",
        type: {
          name: "Boolean",
        },
      },
      outputMode: {
        serializedName: "outputMode",
        type: {
          name: "String",
        },
      },
      knowledgeSourceParams: {
        serializedName: "knowledgeSourceParams",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "KnowledgeSourceParams",
            },
          },
        },
      },
    },
  },
};

export const KnowledgeBaseMessage: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "KnowledgeBaseMessage",
    modelProperties: {
      role: {
        serializedName: "role",
        type: {
          name: "String",
        },
      },
      content: {
        serializedName: "content",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "KnowledgeBaseMessageContent",
            },
          },
        },
      },
    },
  },
};

export const KnowledgeBaseMessageContent: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "KnowledgeBaseMessageContent",
    uberParent: "KnowledgeBaseMessageContent",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type",
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const KnowledgeRetrievalIntent: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "KnowledgeRetrievalIntent",
    uberParent: "KnowledgeRetrievalIntent",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type",
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const KnowledgeRetrievalReasoningEffort: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "KnowledgeRetrievalReasoningEffort",
    uberParent: "KnowledgeRetrievalReasoningEffort",
    polymorphicDiscriminator: {
      serializedName: "kind",
      clientName: "kind",
    },
    modelProperties: {
      kind: {
        serializedName: "kind",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const KnowledgeSourceParams: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "KnowledgeSourceParams",
    uberParent: "KnowledgeSourceParams",
    polymorphicDiscriminator: {
      serializedName: "kind",
      clientName: "kind",
    },
    modelProperties: {
      knowledgeSourceName: {
        serializedName: "knowledgeSourceName",
        required: true,
        type: {
          name: "String",
        },
      },
      includeReferences: {
        serializedName: "includeReferences",
        type: {
          name: "Boolean",
        },
      },
      includeReferenceSourceData: {
        serializedName: "includeReferenceSourceData",
        type: {
          name: "Boolean",
        },
      },
      alwaysQuerySource: {
        serializedName: "alwaysQuerySource",
        type: {
          name: "Boolean",
        },
      },
      rerankerThreshold: {
        serializedName: "rerankerThreshold",
        type: {
          name: "Number",
        },
      },
      kind: {
        serializedName: "kind",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const KnowledgeBaseRetrievalResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "KnowledgeBaseRetrievalResponse",
    modelProperties: {
      response: {
        serializedName: "response",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "KnowledgeBaseMessage",
            },
          },
        },
      },
      activity: {
        serializedName: "activity",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "KnowledgeBaseActivityRecord",
            },
          },
        },
      },
      references: {
        serializedName: "references",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "KnowledgeBaseReference",
            },
          },
        },
      },
    },
  },
};

export const KnowledgeBaseActivityRecord: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "KnowledgeBaseActivityRecord",
    uberParent: "KnowledgeBaseActivityRecord",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type",
    },
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Number",
        },
      },
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String",
        },
      },
      elapsedMs: {
        serializedName: "elapsedMs",
        type: {
          name: "Number",
        },
      },
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "KnowledgeBaseErrorDetail",
        },
      },
    },
  },
};

export const KnowledgeBaseErrorDetail: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "KnowledgeBaseErrorDetail",
    modelProperties: {
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      target: {
        serializedName: "target",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      details: {
        serializedName: "details",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "KnowledgeBaseErrorDetail",
            },
          },
        },
      },
      additionalInfo: {
        serializedName: "additionalInfo",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "KnowledgeBaseErrorAdditionalInfo",
            },
          },
        },
      },
    },
  },
};

export const KnowledgeBaseErrorAdditionalInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "KnowledgeBaseErrorAdditionalInfo",
    modelProperties: {
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      info: {
        serializedName: "info",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } },
        },
      },
    },
  },
};

export const KnowledgeBaseReference: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "KnowledgeBaseReference",
    uberParent: "KnowledgeBaseReference",
    polymorphicDiscriminator: {
      serializedName: "type",
      clientName: "type",
    },
    modelProperties: {
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String",
        },
      },
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String",
        },
      },
      activitySource: {
        serializedName: "activitySource",
        required: true,
        type: {
          name: "Number",
        },
      },
      sourceData: {
        serializedName: "sourceData",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } },
        },
      },
      rerankerScore: {
        serializedName: "rerankerScore",
        type: {
          name: "Number",
        },
      },
    },
  },
};

export const ErrorResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorDetail",
        },
      },
    },
  },
};

export const ErrorDetail: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorDetail",
    modelProperties: {
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      target: {
        serializedName: "target",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      details: {
        serializedName: "details",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorDetail",
            },
          },
        },
      },
      additionalInfo: {
        serializedName: "additionalInfo",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorAdditionalInfo",
            },
          },
        },
      },
    },
  },
};

export const ErrorAdditionalInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorAdditionalInfo",
    modelProperties: {
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String",
        },
      },
      info: {
        serializedName: "info",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } },
        },
      },
    },
  },
};

export const KnowledgeBaseMessageImageContentImage: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "KnowledgeBaseMessageImageContentImage",
      modelProperties: {
        url: {
          serializedName: "url",
          required: true,
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const KnowledgeBaseSearchIndexActivityArguments: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "KnowledgeBaseSearchIndexActivityArguments",
      modelProperties: {
        search: {
          serializedName: "search",
          type: {
            name: "String",
          },
        },
        filter: {
          serializedName: "filter",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const KnowledgeBaseAzureBlobActivityArguments: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "KnowledgeBaseAzureBlobActivityArguments",
      modelProperties: {
        search: {
          serializedName: "search",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const KnowledgeBaseIndexedSharePointActivityArguments: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "KnowledgeBaseIndexedSharePointActivityArguments",
      modelProperties: {
        search: {
          serializedName: "search",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const KnowledgeBaseIndexedOneLakeActivityArguments: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "KnowledgeBaseIndexedOneLakeActivityArguments",
      modelProperties: {
        search: {
          serializedName: "search",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const KnowledgeBaseWebActivityArguments: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "KnowledgeBaseWebActivityArguments",
    modelProperties: {
      search: {
        serializedName: "search",
        type: {
          name: "String",
        },
      },
      language: {
        serializedName: "language",
        type: {
          name: "String",
        },
      },
      market: {
        serializedName: "market",
        type: {
          name: "String",
        },
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number",
        },
      },
      freshness: {
        serializedName: "freshness",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const KnowledgeBaseRemoteSharePointActivityArguments: coreClient.CompositeMapper =
  {
    type: {
      name: "Composite",
      className: "KnowledgeBaseRemoteSharePointActivityArguments",
      modelProperties: {
        search: {
          serializedName: "search",
          type: {
            name: "String",
          },
        },
        filterExpressionAddOn: {
          serializedName: "filterExpressionAddOn",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const SharePointSensitivityLabelInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SharePointSensitivityLabelInfo",
    modelProperties: {
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String",
        },
      },
      sensitivityLabelId: {
        serializedName: "sensitivityLabelId",
        type: {
          name: "String",
        },
      },
      tooltip: {
        serializedName: "tooltip",
        type: {
          name: "String",
        },
      },
      priority: {
        serializedName: "priority",
        type: {
          name: "Number",
        },
      },
      color: {
        serializedName: "color",
        type: {
          name: "String",
        },
      },
      isEncrypted: {
        serializedName: "isEncrypted",
        type: {
          name: "Boolean",
        },
      },
    },
  },
};

export const KnowledgeBaseMessageTextContent: coreClient.CompositeMapper = {
  serializedName: "text",
  type: {
    name: "Composite",
    className: "KnowledgeBaseMessageTextContent",
    uberParent: "KnowledgeBaseMessageContent",
    polymorphicDiscriminator:
      KnowledgeBaseMessageContent.type.polymorphicDiscriminator,
    modelProperties: {
      ...KnowledgeBaseMessageContent.type.modelProperties,
      text: {
        serializedName: "text",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const KnowledgeBaseMessageImageContent: coreClient.CompositeMapper = {
  serializedName: "image",
  type: {
    name: "Composite",
    className: "KnowledgeBaseMessageImageContent",
    uberParent: "KnowledgeBaseMessageContent",
    polymorphicDiscriminator:
      KnowledgeBaseMessageContent.type.polymorphicDiscriminator,
    modelProperties: {
      ...KnowledgeBaseMessageContent.type.modelProperties,
      image: {
        serializedName: "image",
        type: {
          name: "Composite",
          className: "KnowledgeBaseMessageImageContentImage",
        },
      },
    },
  },
};

export const KnowledgeRetrievalSemanticIntent: coreClient.CompositeMapper = {
  serializedName: "semantic",
  type: {
    name: "Composite",
    className: "KnowledgeRetrievalSemanticIntent",
    uberParent: "KnowledgeRetrievalIntent",
    polymorphicDiscriminator:
      KnowledgeRetrievalIntent.type.polymorphicDiscriminator,
    modelProperties: {
      ...KnowledgeRetrievalIntent.type.modelProperties,
      search: {
        serializedName: "search",
        required: true,
        type: {
          name: "String",
        },
      },
    },
  },
};

export const KnowledgeRetrievalMinimalReasoningEffort: coreClient.CompositeMapper =
  {
    serializedName: "minimal",
    type: {
      name: "Composite",
      className: "KnowledgeRetrievalMinimalReasoningEffort",
      uberParent: "KnowledgeRetrievalReasoningEffort",
      polymorphicDiscriminator:
        KnowledgeRetrievalReasoningEffort.type.polymorphicDiscriminator,
      modelProperties: {
        ...KnowledgeRetrievalReasoningEffort.type.modelProperties,
      },
    },
  };

export const KnowledgeRetrievalLowReasoningEffort: coreClient.CompositeMapper =
  {
    serializedName: "low",
    type: {
      name: "Composite",
      className: "KnowledgeRetrievalLowReasoningEffort",
      uberParent: "KnowledgeRetrievalReasoningEffort",
      polymorphicDiscriminator:
        KnowledgeRetrievalReasoningEffort.type.polymorphicDiscriminator,
      modelProperties: {
        ...KnowledgeRetrievalReasoningEffort.type.modelProperties,
      },
    },
  };

export const KnowledgeRetrievalMediumReasoningEffort: coreClient.CompositeMapper =
  {
    serializedName: "medium",
    type: {
      name: "Composite",
      className: "KnowledgeRetrievalMediumReasoningEffort",
      uberParent: "KnowledgeRetrievalReasoningEffort",
      polymorphicDiscriminator:
        KnowledgeRetrievalReasoningEffort.type.polymorphicDiscriminator,
      modelProperties: {
        ...KnowledgeRetrievalReasoningEffort.type.modelProperties,
      },
    },
  };

export const SearchIndexKnowledgeSourceParams: coreClient.CompositeMapper = {
  serializedName: "searchIndex",
  type: {
    name: "Composite",
    className: "SearchIndexKnowledgeSourceParams",
    uberParent: "KnowledgeSourceParams",
    polymorphicDiscriminator:
      KnowledgeSourceParams.type.polymorphicDiscriminator,
    modelProperties: {
      ...KnowledgeSourceParams.type.modelProperties,
      filterAddOn: {
        serializedName: "filterAddOn",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const AzureBlobKnowledgeSourceParams: coreClient.CompositeMapper = {
  serializedName: "azureBlob",
  type: {
    name: "Composite",
    className: "AzureBlobKnowledgeSourceParams",
    uberParent: "KnowledgeSourceParams",
    polymorphicDiscriminator:
      KnowledgeSourceParams.type.polymorphicDiscriminator,
    modelProperties: {
      ...KnowledgeSourceParams.type.modelProperties,
    },
  },
};

export const IndexedSharePointKnowledgeSourceParams: coreClient.CompositeMapper =
  {
    serializedName: "indexedSharePoint",
    type: {
      name: "Composite",
      className: "IndexedSharePointKnowledgeSourceParams",
      uberParent: "KnowledgeSourceParams",
      polymorphicDiscriminator:
        KnowledgeSourceParams.type.polymorphicDiscriminator,
      modelProperties: {
        ...KnowledgeSourceParams.type.modelProperties,
      },
    },
  };

export const IndexedOneLakeKnowledgeSourceParams: coreClient.CompositeMapper = {
  serializedName: "indexedOneLake",
  type: {
    name: "Composite",
    className: "IndexedOneLakeKnowledgeSourceParams",
    uberParent: "KnowledgeSourceParams",
    polymorphicDiscriminator:
      KnowledgeSourceParams.type.polymorphicDiscriminator,
    modelProperties: {
      ...KnowledgeSourceParams.type.modelProperties,
    },
  },
};

export const WebKnowledgeSourceParams: coreClient.CompositeMapper = {
  serializedName: "web",
  type: {
    name: "Composite",
    className: "WebKnowledgeSourceParams",
    uberParent: "KnowledgeSourceParams",
    polymorphicDiscriminator:
      KnowledgeSourceParams.type.polymorphicDiscriminator,
    modelProperties: {
      ...KnowledgeSourceParams.type.modelProperties,
      language: {
        serializedName: "language",
        type: {
          name: "String",
        },
      },
      market: {
        serializedName: "market",
        type: {
          name: "String",
        },
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number",
        },
      },
      freshness: {
        serializedName: "freshness",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const RemoteSharePointKnowledgeSourceParams: coreClient.CompositeMapper =
  {
    serializedName: "remoteSharePoint",
    type: {
      name: "Composite",
      className: "RemoteSharePointKnowledgeSourceParams",
      uberParent: "KnowledgeSourceParams",
      polymorphicDiscriminator:
        KnowledgeSourceParams.type.polymorphicDiscriminator,
      modelProperties: {
        ...KnowledgeSourceParams.type.modelProperties,
        filterExpressionAddOn: {
          serializedName: "filterExpressionAddOn",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const KnowledgeBaseRetrievalActivityRecord: coreClient.CompositeMapper =
  {
    serializedName: "KnowledgeBaseRetrievalActivityRecord",
    type: {
      name: "Composite",
      className: "KnowledgeBaseRetrievalActivityRecord",
      uberParent: "KnowledgeBaseActivityRecord",
      polymorphicDiscriminator: {
        serializedName: "type",
        clientName: "type",
      },
      modelProperties: {
        ...KnowledgeBaseActivityRecord.type.modelProperties,
        knowledgeSourceName: {
          serializedName: "knowledgeSourceName",
          type: {
            name: "String",
          },
        },
        queryTime: {
          serializedName: "queryTime",
          type: {
            name: "DateTime",
          },
        },
        count: {
          serializedName: "count",
          type: {
            name: "Number",
          },
        },
      },
    },
  };

export const KnowledgeBaseModelQueryPlanningActivityRecord: coreClient.CompositeMapper =
  {
    serializedName: "modelQueryPlanning",
    type: {
      name: "Composite",
      className: "KnowledgeBaseModelQueryPlanningActivityRecord",
      uberParent: "KnowledgeBaseActivityRecord",
      polymorphicDiscriminator:
        KnowledgeBaseActivityRecord.type.polymorphicDiscriminator,
      modelProperties: {
        ...KnowledgeBaseActivityRecord.type.modelProperties,
        inputTokens: {
          serializedName: "inputTokens",
          type: {
            name: "Number",
          },
        },
        outputTokens: {
          serializedName: "outputTokens",
          type: {
            name: "Number",
          },
        },
      },
    },
  };

export const KnowledgeBaseModelAnswerSynthesisActivityRecord: coreClient.CompositeMapper =
  {
    serializedName: "modelAnswerSynthesis",
    type: {
      name: "Composite",
      className: "KnowledgeBaseModelAnswerSynthesisActivityRecord",
      uberParent: "KnowledgeBaseActivityRecord",
      polymorphicDiscriminator:
        KnowledgeBaseActivityRecord.type.polymorphicDiscriminator,
      modelProperties: {
        ...KnowledgeBaseActivityRecord.type.modelProperties,
        inputTokens: {
          serializedName: "inputTokens",
          type: {
            name: "Number",
          },
        },
        outputTokens: {
          serializedName: "outputTokens",
          type: {
            name: "Number",
          },
        },
      },
    },
  };

export const KnowledgeBaseAgenticReasoningActivityRecord: coreClient.CompositeMapper =
  {
    serializedName: "agenticReasoning",
    type: {
      name: "Composite",
      className: "KnowledgeBaseAgenticReasoningActivityRecord",
      uberParent: "KnowledgeBaseActivityRecord",
      polymorphicDiscriminator:
        KnowledgeBaseActivityRecord.type.polymorphicDiscriminator,
      modelProperties: {
        ...KnowledgeBaseActivityRecord.type.modelProperties,
        reasoningTokens: {
          serializedName: "reasoningTokens",
          type: {
            name: "Number",
          },
        },
        retrievalReasoningEffort: {
          serializedName: "retrievalReasoningEffort",
          type: {
            name: "Composite",
            className: "KnowledgeRetrievalReasoningEffort",
          },
        },
      },
    },
  };

export const KnowledgeBaseSearchIndexReference: coreClient.CompositeMapper = {
  serializedName: "searchIndex",
  type: {
    name: "Composite",
    className: "KnowledgeBaseSearchIndexReference",
    uberParent: "KnowledgeBaseReference",
    polymorphicDiscriminator:
      KnowledgeBaseReference.type.polymorphicDiscriminator,
    modelProperties: {
      ...KnowledgeBaseReference.type.modelProperties,
      docKey: {
        serializedName: "docKey",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const KnowledgeBaseAzureBlobReference: coreClient.CompositeMapper = {
  serializedName: "azureBlob",
  type: {
    name: "Composite",
    className: "KnowledgeBaseAzureBlobReference",
    uberParent: "KnowledgeBaseReference",
    polymorphicDiscriminator:
      KnowledgeBaseReference.type.polymorphicDiscriminator,
    modelProperties: {
      ...KnowledgeBaseReference.type.modelProperties,
      blobUrl: {
        serializedName: "blobUrl",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const KnowledgeBaseIndexedSharePointReference: coreClient.CompositeMapper =
  {
    serializedName: "indexedSharePoint",
    type: {
      name: "Composite",
      className: "KnowledgeBaseIndexedSharePointReference",
      uberParent: "KnowledgeBaseReference",
      polymorphicDiscriminator:
        KnowledgeBaseReference.type.polymorphicDiscriminator,
      modelProperties: {
        ...KnowledgeBaseReference.type.modelProperties,
        docUrl: {
          serializedName: "docUrl",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const KnowledgeBaseIndexedOneLakeReference: coreClient.CompositeMapper =
  {
    serializedName: "indexedOneLake",
    type: {
      name: "Composite",
      className: "KnowledgeBaseIndexedOneLakeReference",
      uberParent: "KnowledgeBaseReference",
      polymorphicDiscriminator:
        KnowledgeBaseReference.type.polymorphicDiscriminator,
      modelProperties: {
        ...KnowledgeBaseReference.type.modelProperties,
        docUrl: {
          serializedName: "docUrl",
          type: {
            name: "String",
          },
        },
      },
    },
  };

export const KnowledgeBaseWebReference: coreClient.CompositeMapper = {
  serializedName: "web",
  type: {
    name: "Composite",
    className: "KnowledgeBaseWebReference",
    uberParent: "KnowledgeBaseReference",
    polymorphicDiscriminator:
      KnowledgeBaseReference.type.polymorphicDiscriminator,
    modelProperties: {
      ...KnowledgeBaseReference.type.modelProperties,
      url: {
        serializedName: "url",
        type: {
          name: "String",
        },
      },
      title: {
        serializedName: "title",
        type: {
          name: "String",
        },
      },
    },
  },
};

export const KnowledgeBaseRemoteSharePointReference: coreClient.CompositeMapper =
  {
    serializedName: "remoteSharePoint",
    type: {
      name: "Composite",
      className: "KnowledgeBaseRemoteSharePointReference",
      uberParent: "KnowledgeBaseReference",
      polymorphicDiscriminator:
        KnowledgeBaseReference.type.polymorphicDiscriminator,
      modelProperties: {
        ...KnowledgeBaseReference.type.modelProperties,
        webUrl: {
          serializedName: "webUrl",
          type: {
            name: "String",
          },
        },
        searchSensitivityLabelInfo: {
          serializedName: "searchSensitivityLabelInfo",
          type: {
            name: "Composite",
            className: "SharePointSensitivityLabelInfo",
          },
        },
      },
    },
  };

export const KnowledgeBaseSearchIndexActivityRecord: coreClient.CompositeMapper =
  {
    serializedName: "searchIndex",
    type: {
      name: "Composite",
      className: "KnowledgeBaseSearchIndexActivityRecord",
      uberParent: "KnowledgeBaseRetrievalActivityRecord",
      polymorphicDiscriminator:
        KnowledgeBaseRetrievalActivityRecord.type.polymorphicDiscriminator,
      modelProperties: {
        ...KnowledgeBaseRetrievalActivityRecord.type.modelProperties,
        searchIndexArguments: {
          serializedName: "searchIndexArguments",
          type: {
            name: "Composite",
            className: "KnowledgeBaseSearchIndexActivityArguments",
          },
        },
      },
    },
  };

export const KnowledgeBaseAzureBlobActivityRecord: coreClient.CompositeMapper =
  {
    serializedName: "azureBlob",
    type: {
      name: "Composite",
      className: "KnowledgeBaseAzureBlobActivityRecord",
      uberParent: "KnowledgeBaseRetrievalActivityRecord",
      polymorphicDiscriminator:
        KnowledgeBaseRetrievalActivityRecord.type.polymorphicDiscriminator,
      modelProperties: {
        ...KnowledgeBaseRetrievalActivityRecord.type.modelProperties,
        azureBlobArguments: {
          serializedName: "azureBlobArguments",
          type: {
            name: "Composite",
            className: "KnowledgeBaseAzureBlobActivityArguments",
          },
        },
      },
    },
  };

export const KnowledgeBaseIndexedSharePointActivityRecord: coreClient.CompositeMapper =
  {
    serializedName: "indexedSharePoint",
    type: {
      name: "Composite",
      className: "KnowledgeBaseIndexedSharePointActivityRecord",
      uberParent: "KnowledgeBaseRetrievalActivityRecord",
      polymorphicDiscriminator:
        KnowledgeBaseRetrievalActivityRecord.type.polymorphicDiscriminator,
      modelProperties: {
        ...KnowledgeBaseRetrievalActivityRecord.type.modelProperties,
        indexedSharePointArguments: {
          serializedName: "indexedSharePointArguments",
          type: {
            name: "Composite",
            className: "KnowledgeBaseIndexedSharePointActivityArguments",
          },
        },
      },
    },
  };

export const KnowledgeBaseIndexedOneLakeActivityRecord: coreClient.CompositeMapper =
  {
    serializedName: "indexedOneLake",
    type: {
      name: "Composite",
      className: "KnowledgeBaseIndexedOneLakeActivityRecord",
      uberParent: "KnowledgeBaseRetrievalActivityRecord",
      polymorphicDiscriminator:
        KnowledgeBaseRetrievalActivityRecord.type.polymorphicDiscriminator,
      modelProperties: {
        ...KnowledgeBaseRetrievalActivityRecord.type.modelProperties,
        indexedOneLakeArguments: {
          serializedName: "indexedOneLakeArguments",
          type: {
            name: "Composite",
            className: "KnowledgeBaseIndexedOneLakeActivityArguments",
          },
        },
      },
    },
  };

export const KnowledgeBaseWebActivityRecord: coreClient.CompositeMapper = {
  serializedName: "web",
  type: {
    name: "Composite",
    className: "KnowledgeBaseWebActivityRecord",
    uberParent: "KnowledgeBaseRetrievalActivityRecord",
    polymorphicDiscriminator:
      KnowledgeBaseRetrievalActivityRecord.type.polymorphicDiscriminator,
    modelProperties: {
      ...KnowledgeBaseRetrievalActivityRecord.type.modelProperties,
      webArguments: {
        serializedName: "webArguments",
        type: {
          name: "Composite",
          className: "KnowledgeBaseWebActivityArguments",
        },
      },
    },
  },
};

export const KnowledgeBaseRemoteSharePointActivityRecord: coreClient.CompositeMapper =
  {
    serializedName: "remoteSharePoint",
    type: {
      name: "Composite",
      className: "KnowledgeBaseRemoteSharePointActivityRecord",
      uberParent: "KnowledgeBaseRetrievalActivityRecord",
      polymorphicDiscriminator:
        KnowledgeBaseRetrievalActivityRecord.type.polymorphicDiscriminator,
      modelProperties: {
        ...KnowledgeBaseRetrievalActivityRecord.type.modelProperties,
        remoteSharePointArguments: {
          serializedName: "remoteSharePointArguments",
          type: {
            name: "Composite",
            className: "KnowledgeBaseRemoteSharePointActivityArguments",
          },
        },
      },
    },
  };

export let discriminators = {
  KnowledgeBaseMessageContent: KnowledgeBaseMessageContent,
  KnowledgeRetrievalIntent: KnowledgeRetrievalIntent,
  KnowledgeRetrievalReasoningEffort: KnowledgeRetrievalReasoningEffort,
  KnowledgeSourceParams: KnowledgeSourceParams,
  KnowledgeBaseActivityRecord: KnowledgeBaseActivityRecord,
  KnowledgeBaseReference: KnowledgeBaseReference,
  "KnowledgeBaseMessageContent.text": KnowledgeBaseMessageTextContent,
  "KnowledgeBaseMessageContent.image": KnowledgeBaseMessageImageContent,
  "KnowledgeRetrievalIntent.semantic": KnowledgeRetrievalSemanticIntent,
  "KnowledgeRetrievalReasoningEffort.minimal":
    KnowledgeRetrievalMinimalReasoningEffort,
  "KnowledgeRetrievalReasoningEffort.low": KnowledgeRetrievalLowReasoningEffort,
  "KnowledgeRetrievalReasoningEffort.medium":
    KnowledgeRetrievalMediumReasoningEffort,
  "KnowledgeSourceParams.searchIndex": SearchIndexKnowledgeSourceParams,
  "KnowledgeSourceParams.azureBlob": AzureBlobKnowledgeSourceParams,
  "KnowledgeSourceParams.indexedSharePoint":
    IndexedSharePointKnowledgeSourceParams,
  "KnowledgeSourceParams.indexedOneLake": IndexedOneLakeKnowledgeSourceParams,
  "KnowledgeSourceParams.web": WebKnowledgeSourceParams,
  "KnowledgeSourceParams.remoteSharePoint":
    RemoteSharePointKnowledgeSourceParams,
  "KnowledgeBaseActivityRecord.KnowledgeBaseRetrievalActivityRecord":
    KnowledgeBaseRetrievalActivityRecord,
  "KnowledgeBaseActivityRecord.modelQueryPlanning":
    KnowledgeBaseModelQueryPlanningActivityRecord,
  "KnowledgeBaseActivityRecord.modelAnswerSynthesis":
    KnowledgeBaseModelAnswerSynthesisActivityRecord,
  "KnowledgeBaseActivityRecord.agenticReasoning":
    KnowledgeBaseAgenticReasoningActivityRecord,
  "KnowledgeBaseReference.searchIndex": KnowledgeBaseSearchIndexReference,
  "KnowledgeBaseReference.azureBlob": KnowledgeBaseAzureBlobReference,
  "KnowledgeBaseReference.indexedSharePoint":
    KnowledgeBaseIndexedSharePointReference,
  "KnowledgeBaseReference.indexedOneLake": KnowledgeBaseIndexedOneLakeReference,
  "KnowledgeBaseReference.web": KnowledgeBaseWebReference,
  "KnowledgeBaseReference.remoteSharePoint":
    KnowledgeBaseRemoteSharePointReference,
  "KnowledgeBaseRetrievalActivityRecord.searchIndex":
    KnowledgeBaseSearchIndexActivityRecord,
  "KnowledgeBaseRetrievalActivityRecord.azureBlob":
    KnowledgeBaseAzureBlobActivityRecord,
  "KnowledgeBaseRetrievalActivityRecord.indexedSharePoint":
    KnowledgeBaseIndexedSharePointActivityRecord,
  "KnowledgeBaseRetrievalActivityRecord.indexedOneLake":
    KnowledgeBaseIndexedOneLakeActivityRecord,
  "KnowledgeBaseRetrievalActivityRecord.web": KnowledgeBaseWebActivityRecord,
  "KnowledgeBaseRetrievalActivityRecord.remoteSharePoint":
    KnowledgeBaseRemoteSharePointActivityRecord,
};
