/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";
import * as coreHttpCompat from "@azure/core-http-compat";

export type KnowledgeAgentMessageContentUnion =
  | KnowledgeAgentMessageContent
  | KnowledgeAgentMessageTextContent
  | KnowledgeAgentMessageImageContent;
export type KnowledgeSourceParamsUnion =
  | KnowledgeSourceParams
  | SearchIndexKnowledgeSourceParams;
export type KnowledgeAgentActivityRecordUnion =
  | KnowledgeAgentActivityRecord
  | KnowledgeAgentRetrievalActivityRecordUnion
  | KnowledgeAgentModelQueryPlanningActivityRecord
  | KnowledgeAgentModelAnswerSynthesisActivityRecord
  | KnowledgeAgentSemanticRerankerActivityRecord;
export type KnowledgeAgentReferenceUnion =
  | KnowledgeAgentReference
  | KnowledgeAgentSearchIndexReference
  | KnowledgeAgentAzureBlobReference;
export type KnowledgeAgentRetrievalActivityRecordUnion =
  | KnowledgeAgentRetrievalActivityRecord
  | KnowledgeAgentSearchIndexActivityRecord
  | KnowledgeAgentAzureBlobActivityRecord;

/** The input contract for the retrieval request. */
export interface KnowledgeAgentRetrievalRequest {
  messages: KnowledgeAgentMessage[];
  knowledgeSourceParams?: KnowledgeSourceParamsUnion[];
}

/** The natural language message style object. */
export interface KnowledgeAgentMessage {
  /** The role of the tool response. */
  role?: string;
  content: KnowledgeAgentMessageContentUnion[];
}

/** Specifies the type of the message content. */
export interface KnowledgeAgentMessageContent {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "text" | "image";
}

export interface KnowledgeSourceParams {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  kind: "searchIndex";
  /** The name of the index the params apply to. */
  knowledgeSourceName: string;
}

/** The output contract for the retrieval response. */
export interface KnowledgeAgentRetrievalResponse {
  response?: KnowledgeAgentMessage[];
  /** The activity records for tracking progress and billing implications. */
  activity?: KnowledgeAgentActivityRecordUnion[];
  /** The references for the retrieval data used in the response. */
  references?: KnowledgeAgentReferenceUnion[];
}

/** Base type for activity records. */
export interface KnowledgeAgentActivityRecord {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type:
    | "KnowledgeAgentRetrievalActivityRecord"
    | "searchIndex"
    | "azureBlob"
    | "modelQueryPlanning"
    | "modelAnswerSynthesis"
    | "semanticReranker";
  /** The ID of the activity record. */
  id: number;
  /** The elapsed time in milliseconds for the retrieval activity. */
  elapsedMs?: number;
}

/** Base type for references. */
export interface KnowledgeAgentReference {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "searchIndex" | "azureBlob";
  /** The ID of the reference. */
  id: string;
  /** The source activity ID for the reference. */
  activitySource: number;
  /** Dictionary of <any> */
  sourceData?: { [propertyName: string]: any };
  /** The reranker score for the document reference. */
  rerankerScore?: number;
}

/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */
export interface ErrorResponse {
  /** The error object. */
  error?: ErrorDetail;
}

/** The error detail. */
export interface ErrorDetail {
  /**
   * The error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * The error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * The error target.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly target?: string;
  /**
   * The error details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly details?: ErrorDetail[];
  /**
   * The error additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalInfo?: ErrorAdditionalInfo[];
}

/** The resource management error additional info. */
export interface ErrorAdditionalInfo {
  /**
   * The additional info type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * The additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly info?: Record<string, unknown>;
}

export interface KnowledgeAgentMessageImageContentImage {
  /** The url of the image. */
  url: string;
}

/** Represents the arguments the search index retrieval activity was run with. */
export interface KnowledgeAgentSearchIndexActivityArguments {
  /** The search string used to query the search index. */
  search?: string;
  /** The filter string. */
  filter?: string;
}

/** Represents the arguments the azure blob retrieval activity was run with. */
export interface KnowledgeAgentAzureBlobActivityArguments {
  /** The search string used to query blob contents. */
  search?: string;
}

/** Text message type. */
export interface KnowledgeAgentMessageTextContent
  extends KnowledgeAgentMessageContent {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "text";
  text: string;
}

/** Text message type. */
export interface KnowledgeAgentMessageImageContent
  extends KnowledgeAgentMessageContent {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "image";
  image: KnowledgeAgentMessageImageContentImage;
}

/** Specifies runtime parameters for a search index knowledge source */
export interface SearchIndexKnowledgeSourceParams
  extends KnowledgeSourceParams {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  kind: "searchIndex";
  /** A filter condition applied to the index (e.g., 'State eq VA'). */
  filterAddOn?: string;
}

/** Represents a retrieval activity record. */
export interface KnowledgeAgentRetrievalActivityRecord
  extends KnowledgeAgentActivityRecord {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "KnowledgeAgentRetrievalActivityRecord" | "searchIndex" | "azureBlob";
  /** The knowledge source for the retrieval activity. */
  knowledgeSourceName?: string;
  /** The query time for this retrieval activity. */
  queryTime?: Date;
  /** The count of documents retrieved that were sufficiently relevant to pass the reranker threshold. */
  count?: number;
}

/** Represents an LLM query planning activity record. */
export interface KnowledgeAgentModelQueryPlanningActivityRecord
  extends KnowledgeAgentActivityRecord {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "modelQueryPlanning";
  /** The number of input tokens for the LLM query planning activity. */
  inputTokens?: number;
  /** The number of output tokens for the LLM query planning activity. */
  outputTokens?: number;
}

/** Represents an LLM answer synthesis activity record. */
export interface KnowledgeAgentModelAnswerSynthesisActivityRecord
  extends KnowledgeAgentActivityRecord {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "modelAnswerSynthesis";
  /** The number of input tokens for the LLM answer synthesis activity. */
  inputTokens?: number;
  /** The number of output tokens for the LLM answer synthesis activity. */
  outputTokens?: number;
}

/** Represents a semantic ranker activity record. */
export interface KnowledgeAgentSemanticRerankerActivityRecord
  extends KnowledgeAgentActivityRecord {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "semanticReranker";
  /** The number of input tokens for the semantic ranker activity. */
  inputTokens?: number;
}

/** Represents an Azure Search document reference. */
export interface KnowledgeAgentSearchIndexReference
  extends KnowledgeAgentReference {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "searchIndex";
  /** The document key for the reference. */
  docKey?: string;
}

/** Represents an Azure Blob Storage document reference. */
export interface KnowledgeAgentAzureBlobReference
  extends KnowledgeAgentReference {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "azureBlob";
  /** The blob URL for the reference. */
  blobUrl?: string;
}

/** Represents a search index retrieval activity record. */
export interface KnowledgeAgentSearchIndexActivityRecord
  extends KnowledgeAgentRetrievalActivityRecord {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "searchIndex";
  /** The search index arguments for the retrieval activity. */
  searchIndexArguments?: KnowledgeAgentSearchIndexActivityArguments;
}

/** Represents a azure blob retrieval activity record. */
export interface KnowledgeAgentAzureBlobActivityRecord
  extends KnowledgeAgentRetrievalActivityRecord {
  /** Polymorphic discriminator, which specifies the different types this object can be */
  type: "azureBlob";
  /** The azure blob arguments for the retrieval activity. */
  azureBlobArguments?: KnowledgeAgentAzureBlobActivityArguments;
}

/** Known values of {@link ApiVersion20250801Preview} that the service accepts. */
export enum KnownApiVersion20250801Preview {
  /** Api Version '2025-08-01-preview' */
  TwoThousandTwentyFive0801Preview = "2025-08-01-preview",
}

/**
 * Defines values for ApiVersion20250801Preview. \
 * {@link KnownApiVersion20250801Preview} can be used interchangeably with ApiVersion20250801Preview,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **2025-08-01-preview**: Api Version '2025-08-01-preview'
 */
export type ApiVersion20250801Preview = string;

/** Known values of {@link KnowledgeAgentMessageContentType} that the service accepts. */
export enum KnownKnowledgeAgentMessageContentType {
  /** Text message content kind. */
  Text = "text",
  /** Image message content kind. */
  Image = "image",
}

/**
 * Defines values for KnowledgeAgentMessageContentType. \
 * {@link KnownKnowledgeAgentMessageContentType} can be used interchangeably with KnowledgeAgentMessageContentType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **text**: Text message content kind. \
 * **image**: Image message content kind.
 */
export type KnowledgeAgentMessageContentType = string;

/** Known values of {@link KnowledgeSourceKind} that the service accepts. */
export enum KnownKnowledgeSourceKind {
  /** A knowledge source that reads data from a Search Index. */
  SearchIndex = "searchIndex",
  /** A knowledge source that read and ingest data from Azure Blob Storage to a Search Index. */
  AzureBlob = "azureBlob",
}

/**
 * Defines values for KnowledgeSourceKind. \
 * {@link KnownKnowledgeSourceKind} can be used interchangeably with KnowledgeSourceKind,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **searchIndex**: A knowledge source that reads data from a Search Index. \
 * **azureBlob**: A knowledge source that read and ingest data from Azure Blob Storage to a Search Index.
 */
export type KnowledgeSourceKind = string;

/** Optional parameters. */
export interface KnowledgeRetrievalRetrieveOptionalParams
  extends coreClient.OperationOptions {
  /** Token identifying the user for which the query is being executed. This token is used to enforce security restrictions on documents. */
  xMsQuerySourceAuthorization?: string;
}

/** Contains response data for the retrieve operation. */
export type KnowledgeRetrievalRetrieveResponse =
  KnowledgeAgentRetrievalResponse;

/** Optional parameters. */
export interface SearchClientOptionalParams
  extends coreHttpCompat.ExtendedServiceClientOptions {
  /** Overrides client endpoint. */
  endpoint?: string;
}
