/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";
import {
  DataSourcesImpl,
  IndexersImpl,
  SkillsetsImpl,
  SynonymMapsImpl,
  IndexesImpl
} from "./operations";
import {
  DataSources,
  Indexers,
  Skillsets,
  SynonymMaps,
  Indexes
} from "./operationsInterfaces";
import * as Parameters from "./models/parameters";
import * as Mappers from "./models/mappers";
import { SearchServiceClientContext } from "./searchServiceClientContext";
import {
  SearchServiceClientOptionalParams,
  ApiVersion20200630,
  SearchServiceClientGetServiceStatisticsOptionalParams,
  SearchServiceClientGetServiceStatisticsResponse
} from "./models";

/** @internal */
export class SearchServiceClient extends SearchServiceClientContext {
  /**
   * Initializes a new instance of the SearchServiceClient class.
   * @param endpoint The endpoint URL of the search service.
   * @param apiVersion Api Version
   * @param options The parameter options
   */
  constructor(
    endpoint: string,
    apiVersion: ApiVersion20200630,
    options?: SearchServiceClientOptionalParams
  ) {
    super(endpoint, apiVersion, options);
    this.dataSources = new DataSourcesImpl(this);
    this.indexers = new IndexersImpl(this);
    this.skillsets = new SkillsetsImpl(this);
    this.synonymMaps = new SynonymMapsImpl(this);
    this.indexes = new IndexesImpl(this);
  }

  /**
   * Gets service level statistics for a search service.
   * @param options The options parameters.
   */
  getServiceStatistics(
    options?: SearchServiceClientGetServiceStatisticsOptionalParams
  ): Promise<SearchServiceClientGetServiceStatisticsResponse> {
    return this.sendOperationRequest(
      { options },
      getServiceStatisticsOperationSpec
    );
  }

  dataSources: DataSources;
  indexers: Indexers;
  skillsets: Skillsets;
  synonymMaps: SynonymMaps;
  indexes: Indexes;
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const getServiceStatisticsOperationSpec: coreClient.OperationSpec = {
  path: "/servicestats",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.ServiceStatistics
    },
    default: {
      bodyMapper: Mappers.SearchError
    }
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [Parameters.endpoint],
  headerParameters: [Parameters.accept],
  serializer
};
