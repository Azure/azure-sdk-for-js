/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  KnowledgeAgent,
  KnowledgeAgentsCreateOrUpdateOptionalParams,
  KnowledgeAgentsCreateOrUpdateResponse,
  KnowledgeAgentsDeleteOptionalParams,
  KnowledgeAgentsGetOptionalParams,
  KnowledgeAgentsGetResponse,
  KnowledgeAgentsListOptionalParams,
  KnowledgeAgentsListResponse,
  KnowledgeAgentsCreateOptionalParams,
  KnowledgeAgentsCreateResponse,
} from "../models/index.js";

/** Interface representing a KnowledgeAgents. */
export interface KnowledgeAgents {
  /**
   * Creates a new agent or updates an agent if it already exists.
   * @param agentName The name of the agent to create or update.
   * @param knowledgeAgent The definition of the agent to create or update.
   * @param options The options parameters.
   */
  createOrUpdate(
    agentName: string,
    knowledgeAgent: KnowledgeAgent,
    options?: KnowledgeAgentsCreateOrUpdateOptionalParams,
  ): Promise<KnowledgeAgentsCreateOrUpdateResponse>;
  /**
   * Deletes an existing agent.
   * @param agentName The name of the agent to delete.
   * @param options The options parameters.
   */
  delete(
    agentName: string,
    options?: KnowledgeAgentsDeleteOptionalParams,
  ): Promise<void>;
  /**
   * Retrieves an agent definition.
   * @param agentName The name of the agent to retrieve.
   * @param options The options parameters.
   */
  get(
    agentName: string,
    options?: KnowledgeAgentsGetOptionalParams,
  ): Promise<KnowledgeAgentsGetResponse>;
  /**
   * Lists all agents available for a search service.
   * @param options The options parameters.
   */
  list(
    options?: KnowledgeAgentsListOptionalParams,
  ): Promise<KnowledgeAgentsListResponse>;
  /**
   * Creates a new agent.
   * @param knowledgeAgent The definition of the agent to create.
   * @param options The options parameters.
   */
  create(
    knowledgeAgent: KnowledgeAgent,
    options?: KnowledgeAgentsCreateOptionalParams,
  ): Promise<KnowledgeAgentsCreateResponse>;
}
