/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  KnowledgeSourceUnion,
  KnowledgeSourcesCreateOrUpdateOptionalParams,
  KnowledgeSourcesCreateOrUpdateResponse,
  KnowledgeSourcesDeleteOptionalParams,
  KnowledgeSourcesGetOptionalParams,
  KnowledgeSourcesGetResponse,
  KnowledgeSourcesListOptionalParams,
  KnowledgeSourcesListResponse,
  KnowledgeSourcesCreateOptionalParams,
  KnowledgeSourcesCreateResponse,
} from "../models/index.js";

/** Interface representing a KnowledgeSources. */
export interface KnowledgeSources {
  /**
   * Creates a new knowledge source or updates an knowledge source if it already exists.
   * @param sourceName The name of the knowledge source to create or update.
   * @param knowledgeSource The definition of the knowledge source to create or update.
   * @param options The options parameters.
   */
  createOrUpdate(
    sourceName: string,
    knowledgeSource: KnowledgeSourceUnion,
    options?: KnowledgeSourcesCreateOrUpdateOptionalParams,
  ): Promise<KnowledgeSourcesCreateOrUpdateResponse>;
  /**
   * Deletes an existing knowledge source.
   * @param sourceName The name of the knowledge source to delete.
   * @param options The options parameters.
   */
  delete(
    sourceName: string,
    options?: KnowledgeSourcesDeleteOptionalParams,
  ): Promise<void>;
  /**
   * Retrieves a knowledge source definition.
   * @param sourceName The name of the knowledge source to retrieve.
   * @param options The options parameters.
   */
  get(
    sourceName: string,
    options?: KnowledgeSourcesGetOptionalParams,
  ): Promise<KnowledgeSourcesGetResponse>;
  /**
   * Lists all knowledge sources available for a search service.
   * @param options The options parameters.
   */
  list(
    options?: KnowledgeSourcesListOptionalParams,
  ): Promise<KnowledgeSourcesListResponse>;
  /**
   * Creates a new knowledge source.
   * @param knowledgeSource The definition of the knowledge source to create.
   * @param options The options parameters.
   */
  create(
    knowledgeSource: KnowledgeSourceUnion,
    options?: KnowledgeSourcesCreateOptionalParams,
  ): Promise<KnowledgeSourcesCreateResponse>;
}
