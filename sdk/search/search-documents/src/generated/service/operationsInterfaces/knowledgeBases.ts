/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  KnowledgeBase,
  KnowledgeBasesCreateOrUpdateOptionalParams,
  KnowledgeBasesCreateOrUpdateResponse,
  KnowledgeBasesDeleteOptionalParams,
  KnowledgeBasesGetOptionalParams,
  KnowledgeBasesGetResponse,
  KnowledgeBasesListOptionalParams,
  KnowledgeBasesListResponse,
  KnowledgeBasesCreateOptionalParams,
  KnowledgeBasesCreateResponse,
} from "../models/index.js";

/** Interface representing a KnowledgeBases. */
export interface KnowledgeBases {
  /**
   * Creates a new knowledge base or updates an knowledge base if it already exists.
   * @param knowledgeBaseName The name of the knowledge base to create or update.
   * @param knowledgeBase The definition of the knowledge base to create or update.
   * @param options The options parameters.
   */
  createOrUpdate(
    knowledgeBaseName: string,
    knowledgeBase: KnowledgeBase,
    options?: KnowledgeBasesCreateOrUpdateOptionalParams,
  ): Promise<KnowledgeBasesCreateOrUpdateResponse>;
  /**
   * Deletes an existing knowledge base.
   * @param knowledgeBaseName The name of the knowledge base to delete.
   * @param options The options parameters.
   */
  delete(
    knowledgeBaseName: string,
    options?: KnowledgeBasesDeleteOptionalParams,
  ): Promise<void>;
  /**
   * Retrieves an knowledge base definition.
   * @param knowledgeBaseName The name of the knowledge base to retrieve.
   * @param options The options parameters.
   */
  get(
    knowledgeBaseName: string,
    options?: KnowledgeBasesGetOptionalParams,
  ): Promise<KnowledgeBasesGetResponse>;
  /**
   * Lists all knowledge bases available for a search service.
   * @param options The options parameters.
   */
  list(
    options?: KnowledgeBasesListOptionalParams,
  ): Promise<KnowledgeBasesListResponse>;
  /**
   * Creates a new knowledge base.
   * @param knowledgeBase The definition of the knowledge base to create.
   * @param options The options parameters.
   */
  create(
    knowledgeBase: KnowledgeBase,
    options?: KnowledgeBasesCreateOptionalParams,
  ): Promise<KnowledgeBasesCreateResponse>;
}
