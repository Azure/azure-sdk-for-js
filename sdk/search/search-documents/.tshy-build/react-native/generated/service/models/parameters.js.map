{"version":3,"file":"parameters.js","sourceRoot":"","sources":["../../../../../src/generated/service/models/parameters.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport {\n  OperationParameter,\n  OperationURLParameter,\n  OperationQueryParameter,\n} from \"@azure/core-client\";\nimport {\n  SearchIndexerDataSource as SearchIndexerDataSourceMapper,\n  DocumentKeysOrIds as DocumentKeysOrIdsMapper,\n  SearchIndexer as SearchIndexerMapper,\n  SearchIndexerSkillset as SearchIndexerSkillsetMapper,\n  SkillNames as SkillNamesMapper,\n  SynonymMap as SynonymMapMapper,\n  SearchIndex as SearchIndexMapper,\n  AnalyzeRequest as AnalyzeRequestMapper,\n  SearchAlias as SearchAliasMapper,\n} from \"../models/mappers.js\";\n\nexport const contentType: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const dataSource: OperationParameter = {\n  parameterPath: \"dataSource\",\n  mapper: SearchIndexerDataSourceMapper,\n};\n\nexport const accept: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const endpoint: OperationURLParameter = {\n  parameterPath: \"endpoint\",\n  mapper: {\n    serializedName: \"endpoint\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n  skipEncoding: true,\n};\n\nexport const dataSourceName: OperationURLParameter = {\n  parameterPath: \"dataSourceName\",\n  mapper: {\n    serializedName: \"dataSourceName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const ifMatch: OperationParameter = {\n  parameterPath: [\"options\", \"ifMatch\"],\n  mapper: {\n    serializedName: \"If-Match\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const ifNoneMatch: OperationParameter = {\n  parameterPath: [\"options\", \"ifNoneMatch\"],\n  mapper: {\n    serializedName: \"If-None-Match\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const prefer: OperationParameter = {\n  parameterPath: \"prefer\",\n  mapper: {\n    defaultValue: \"return=representation\",\n    isConstant: true,\n    serializedName: \"Prefer\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const apiVersion: OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    serializedName: \"api-version\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const skipIndexerResetRequirementForCache: OperationQueryParameter = {\n  parameterPath: [\"options\", \"skipIndexerResetRequirementForCache\"],\n  mapper: {\n    serializedName: \"ignoreResetRequirements\",\n    type: {\n      name: \"Boolean\",\n    },\n  },\n};\n\nexport const select: OperationQueryParameter = {\n  parameterPath: [\"options\", \"select\"],\n  mapper: {\n    serializedName: \"$select\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const indexerName: OperationURLParameter = {\n  parameterPath: \"indexerName\",\n  mapper: {\n    serializedName: \"indexerName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const keysOrIds: OperationParameter = {\n  parameterPath: [\"options\", \"keysOrIds\"],\n  mapper: DocumentKeysOrIdsMapper,\n};\n\nexport const overwrite: OperationQueryParameter = {\n  parameterPath: [\"options\", \"overwrite\"],\n  mapper: {\n    defaultValue: false,\n    serializedName: \"overwrite\",\n    type: {\n      name: \"Boolean\",\n    },\n  },\n};\n\nexport const indexer: OperationParameter = {\n  parameterPath: \"indexer\",\n  mapper: SearchIndexerMapper,\n};\n\nexport const disableCacheReprocessingChangeDetection: OperationQueryParameter =\n  {\n    parameterPath: [\"options\", \"disableCacheReprocessingChangeDetection\"],\n    mapper: {\n      serializedName: \"disableCacheReprocessingChangeDetection\",\n      type: {\n        name: \"Boolean\",\n      },\n    },\n  };\n\nexport const skillset: OperationParameter = {\n  parameterPath: \"skillset\",\n  mapper: SearchIndexerSkillsetMapper,\n};\n\nexport const skillsetName: OperationURLParameter = {\n  parameterPath: \"skillsetName\",\n  mapper: {\n    serializedName: \"skillsetName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const skillNames: OperationParameter = {\n  parameterPath: \"skillNames\",\n  mapper: SkillNamesMapper,\n};\n\nexport const synonymMap: OperationParameter = {\n  parameterPath: \"synonymMap\",\n  mapper: SynonymMapMapper,\n};\n\nexport const synonymMapName: OperationURLParameter = {\n  parameterPath: \"synonymMapName\",\n  mapper: {\n    serializedName: \"synonymMapName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const index: OperationParameter = {\n  parameterPath: \"index\",\n  mapper: SearchIndexMapper,\n};\n\nexport const indexName: OperationURLParameter = {\n  parameterPath: \"indexName\",\n  mapper: {\n    serializedName: \"indexName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const allowIndexDowntime: OperationQueryParameter = {\n  parameterPath: [\"options\", \"allowIndexDowntime\"],\n  mapper: {\n    serializedName: \"allowIndexDowntime\",\n    type: {\n      name: \"Boolean\",\n    },\n  },\n};\n\nexport const request: OperationParameter = {\n  parameterPath: \"request\",\n  mapper: AnalyzeRequestMapper,\n};\n\nexport const alias: OperationParameter = {\n  parameterPath: \"alias\",\n  mapper: SearchAliasMapper,\n};\n\nexport const aliasName: OperationURLParameter = {\n  parameterPath: \"aliasName\",\n  mapper: {\n    serializedName: \"aliasName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n"]}