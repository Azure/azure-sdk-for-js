/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  SessionPool,
  ContainerAppsSessionPoolsListBySubscriptionOptionalParams,
  ContainerAppsSessionPoolsListByResourceGroupOptionalParams,
  ContainerAppsSessionPoolsGetOptionalParams,
  ContainerAppsSessionPoolsGetResponse,
  ContainerAppsSessionPoolsCreateOrUpdateOptionalParams,
  ContainerAppsSessionPoolsCreateOrUpdateResponse,
  SessionPoolUpdatableProperties,
  ContainerAppsSessionPoolsUpdateOptionalParams,
  ContainerAppsSessionPoolsUpdateResponse,
  ContainerAppsSessionPoolsDeleteOptionalParams,
  ContainerAppsSessionPoolsDeleteResponse,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a ContainerAppsSessionPools. */
export interface ContainerAppsSessionPools {
  /**
   * Get the session pools in a given subscription.
   * @param options The options parameters.
   */
  listBySubscription(
    options?: ContainerAppsSessionPoolsListBySubscriptionOptionalParams,
  ): PagedAsyncIterableIterator<SessionPool>;
  /**
   * Get the session pools in a given resource group of a subscription.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: ContainerAppsSessionPoolsListByResourceGroupOptionalParams,
  ): PagedAsyncIterableIterator<SessionPool>;
  /**
   * Get the properties of a session pool.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param sessionPoolName Name of the session pool.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    sessionPoolName: string,
    options?: ContainerAppsSessionPoolsGetOptionalParams,
  ): Promise<ContainerAppsSessionPoolsGetResponse>;
  /**
   * Create or update a session pool with the given properties.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param sessionPoolName Name of the session pool.
   * @param sessionPoolEnvelope Properties used to create a session pool
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    sessionPoolName: string,
    sessionPoolEnvelope: SessionPool,
    options?: ContainerAppsSessionPoolsCreateOrUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<ContainerAppsSessionPoolsCreateOrUpdateResponse>,
      ContainerAppsSessionPoolsCreateOrUpdateResponse
    >
  >;
  /**
   * Create or update a session pool with the given properties.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param sessionPoolName Name of the session pool.
   * @param sessionPoolEnvelope Properties used to create a session pool
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    sessionPoolName: string,
    sessionPoolEnvelope: SessionPool,
    options?: ContainerAppsSessionPoolsCreateOrUpdateOptionalParams,
  ): Promise<ContainerAppsSessionPoolsCreateOrUpdateResponse>;
  /**
   * Patches a session pool using JSON merge patch
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param sessionPoolName Name of the session pool.
   * @param sessionPoolEnvelope Properties used to create a session pool
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    sessionPoolName: string,
    sessionPoolEnvelope: SessionPoolUpdatableProperties,
    options?: ContainerAppsSessionPoolsUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<ContainerAppsSessionPoolsUpdateResponse>,
      ContainerAppsSessionPoolsUpdateResponse
    >
  >;
  /**
   * Patches a session pool using JSON merge patch
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param sessionPoolName Name of the session pool.
   * @param sessionPoolEnvelope Properties used to create a session pool
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    sessionPoolName: string,
    sessionPoolEnvelope: SessionPoolUpdatableProperties,
    options?: ContainerAppsSessionPoolsUpdateOptionalParams,
  ): Promise<ContainerAppsSessionPoolsUpdateResponse>;
  /**
   * Delete the session pool with the given name.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param sessionPoolName Name of the session pool.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    sessionPoolName: string,
    options?: ContainerAppsSessionPoolsDeleteOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<ContainerAppsSessionPoolsDeleteResponse>,
      ContainerAppsSessionPoolsDeleteResponse
    >
  >;
  /**
   * Delete the session pool with the given name.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param sessionPoolName Name of the session pool.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    sessionPoolName: string,
    options?: ContainerAppsSessionPoolsDeleteOptionalParams,
  ): Promise<ContainerAppsSessionPoolsDeleteResponse>;
}
