/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  HttpRouteConfig,
  HttpRouteConfigListOptionalParams,
  HttpRouteConfigGetOptionalParams,
  HttpRouteConfigGetResponse,
  HttpRouteConfigCreateOrUpdateOptionalParams,
  HttpRouteConfigCreateOrUpdateResponse,
  HttpRouteConfigUpdateOptionalParams,
  HttpRouteConfigUpdateResponse,
  HttpRouteConfigDeleteOptionalParams,
} from "../models/index.js";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a HttpRouteConfigOperations. */
export interface HttpRouteConfigOperations {
  /**
   * Get the Managed Http Routes in a given managed environment.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param environmentName Name of the Managed Environment.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    environmentName: string,
    options?: HttpRouteConfigListOptionalParams,
  ): PagedAsyncIterableIterator<HttpRouteConfig>;
  /**
   * Get the specified Managed Http Route Config.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param environmentName Name of the Managed Environment.
   * @param httpRouteName Name of the Http Route Config Resource.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    environmentName: string,
    httpRouteName: string,
    options?: HttpRouteConfigGetOptionalParams,
  ): Promise<HttpRouteConfigGetResponse>;
  /**
   * Create or Update a Http Route Config.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param environmentName Name of the Managed Environment.
   * @param httpRouteName Name of the Http Route Config Resource.
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    environmentName: string,
    httpRouteName: string,
    options?: HttpRouteConfigCreateOrUpdateOptionalParams,
  ): Promise<HttpRouteConfigCreateOrUpdateResponse>;
  /**
   * Patches an http route config resource. Only patching of tags is supported
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param environmentName Name of the Managed Environment.
   * @param httpRouteName Name of the Http Route Config Resource.
   * @param httpRouteConfigEnvelope Properties of http route config that need to be updated
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    environmentName: string,
    httpRouteName: string,
    httpRouteConfigEnvelope: HttpRouteConfig,
    options?: HttpRouteConfigUpdateOptionalParams,
  ): Promise<HttpRouteConfigUpdateResponse>;
  /**
   * Deletes the specified Managed Http Route.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param environmentName Name of the Managed Environment.
   * @param httpRouteName Name of the Http Route Config Resource.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    environmentName: string,
    httpRouteName: string,
    options?: HttpRouteConfigDeleteOptionalParams,
  ): Promise<void>;
}
