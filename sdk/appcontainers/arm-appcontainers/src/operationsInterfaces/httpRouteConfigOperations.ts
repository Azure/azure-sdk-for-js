// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import type { PagedAsyncIterableIterator } from "@azure/core-paging";
import type { SimplePollerLike, OperationState } from "@azure/core-lro";
import type {
  HttpRouteConfig,
  HttpRouteConfigListOptionalParams,
  HttpRouteConfigGetOptionalParams,
  HttpRouteConfigGetResponse,
  HttpRouteConfigCreateOrUpdateOptionalParams,
  HttpRouteConfigCreateOrUpdateResponse,
  HttpRouteConfigUpdateOptionalParams,
  HttpRouteConfigUpdateResponse,
  HttpRouteConfigDeleteOptionalParams,
  HttpRouteConfigDeleteResponse,
} from "../models/index.js";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a HttpRouteConfigOperations. */
export interface HttpRouteConfigOperations {
  /**
   * List the Http Route Configs in a given managed environment.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param environmentName Name of the Managed Environment.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    environmentName: string,
    options?: HttpRouteConfigListOptionalParams,
  ): PagedAsyncIterableIterator<HttpRouteConfig>;
  /**
   * Get the specified Http Route Config.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param environmentName Name of the Managed Environment.
   * @param httpRouteName Name of the Http Route Config Resource.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    environmentName: string,
    httpRouteName: string,
    options?: HttpRouteConfigGetOptionalParams,
  ): Promise<HttpRouteConfigGetResponse>;
  /**
   * Create or Update a Http Route Config.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param environmentName Name of the Managed Environment.
   * @param httpRouteName Name of the Http Route Config Resource.
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    environmentName: string,
    httpRouteName: string,
    options?: HttpRouteConfigCreateOrUpdateOptionalParams,
  ): Promise<HttpRouteConfigCreateOrUpdateResponse>;
  /**
   * Patches a Http Route Config resource. Only patching of tags is supported
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param environmentName Name of the Managed Environment.
   * @param httpRouteName Name of the Http Route Config Resource.
   * @param httpRouteConfigEnvelope Properties of http route config that need to be updated
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    environmentName: string,
    httpRouteName: string,
    httpRouteConfigEnvelope: HttpRouteConfig,
    options?: HttpRouteConfigUpdateOptionalParams,
  ): Promise<HttpRouteConfigUpdateResponse>;
  /**
   * Deletes the specified Http Route Config.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param environmentName Name of the Managed Environment.
   * @param httpRouteName Name of the Http Route Config Resource.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    environmentName: string,
    httpRouteName: string,
    options?: HttpRouteConfigDeleteOptionalParams,
  ): Promise<
    SimplePollerLike<OperationState<HttpRouteConfigDeleteResponse>, HttpRouteConfigDeleteResponse>
  >;
  /**
   * Deletes the specified Http Route Config.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param environmentName Name of the Managed Environment.
   * @param httpRouteName Name of the Http Route Config Resource.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    environmentName: string,
    httpRouteName: string,
    options?: HttpRouteConfigDeleteOptionalParams,
  ): Promise<HttpRouteConfigDeleteResponse>;
}
