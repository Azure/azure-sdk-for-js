/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  ConnectedEnvironmentDaprComponent,
  ConnectedEnvironmentsDaprComponentsListOptionalParams,
  ConnectedEnvironmentsDaprComponentsGetOptionalParams,
  ConnectedEnvironmentsDaprComponentsGetResponse,
  ConnectedEnvironmentsDaprComponentsCreateOrUpdateOptionalParams,
  ConnectedEnvironmentsDaprComponentsCreateOrUpdateResponse,
  ConnectedEnvironmentsDaprComponentsDeleteOptionalParams,
  ConnectedEnvironmentsDaprComponentsDeleteResponse,
  ConnectedEnvironmentsDaprComponentsListSecretsOptionalParams,
  ConnectedEnvironmentsDaprComponentsListSecretsResponse,
} from "../models/index.js";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a ConnectedEnvironmentsDaprComponents. */
export interface ConnectedEnvironmentsDaprComponents {
  /**
   * Get the Dapr Components for a connected environment.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param connectedEnvironmentName Name of the connected environment.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    connectedEnvironmentName: string,
    options?: ConnectedEnvironmentsDaprComponentsListOptionalParams,
  ): PagedAsyncIterableIterator<ConnectedEnvironmentDaprComponent>;
  /**
   * Get a dapr component.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param connectedEnvironmentName Name of the connected environment.
   * @param componentName Name of the Dapr Component.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    connectedEnvironmentName: string,
    componentName: string,
    options?: ConnectedEnvironmentsDaprComponentsGetOptionalParams,
  ): Promise<ConnectedEnvironmentsDaprComponentsGetResponse>;
  /**
   * Creates or updates a Dapr Component in a connected environment.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param connectedEnvironmentName Name of the connected environment.
   * @param componentName Name of the Dapr Component.
   * @param daprComponentEnvelope Configuration details of the Dapr Component.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    connectedEnvironmentName: string,
    componentName: string,
    daprComponentEnvelope: ConnectedEnvironmentDaprComponent,
    options?: ConnectedEnvironmentsDaprComponentsCreateOrUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<ConnectedEnvironmentsDaprComponentsCreateOrUpdateResponse>,
      ConnectedEnvironmentsDaprComponentsCreateOrUpdateResponse
    >
  >;
  /**
   * Creates or updates a Dapr Component in a connected environment.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param connectedEnvironmentName Name of the connected environment.
   * @param componentName Name of the Dapr Component.
   * @param daprComponentEnvelope Configuration details of the Dapr Component.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    connectedEnvironmentName: string,
    componentName: string,
    daprComponentEnvelope: ConnectedEnvironmentDaprComponent,
    options?: ConnectedEnvironmentsDaprComponentsCreateOrUpdateOptionalParams,
  ): Promise<ConnectedEnvironmentsDaprComponentsCreateOrUpdateResponse>;
  /**
   * Delete a Dapr Component from a connected environment.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param connectedEnvironmentName Name of the connected environment.
   * @param componentName Name of the Dapr Component.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    connectedEnvironmentName: string,
    componentName: string,
    options?: ConnectedEnvironmentsDaprComponentsDeleteOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<ConnectedEnvironmentsDaprComponentsDeleteResponse>,
      ConnectedEnvironmentsDaprComponentsDeleteResponse
    >
  >;
  /**
   * Delete a Dapr Component from a connected environment.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param connectedEnvironmentName Name of the connected environment.
   * @param componentName Name of the Dapr Component.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    connectedEnvironmentName: string,
    componentName: string,
    options?: ConnectedEnvironmentsDaprComponentsDeleteOptionalParams,
  ): Promise<ConnectedEnvironmentsDaprComponentsDeleteResponse>;
  /**
   * List secrets for a dapr component
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param connectedEnvironmentName Name of the connected environment.
   * @param componentName Name of the Dapr Component.
   * @param options The options parameters.
   */
  listSecrets(
    resourceGroupName: string,
    connectedEnvironmentName: string,
    componentName: string,
    options?: ConnectedEnvironmentsDaprComponentsListSecretsOptionalParams,
  ): Promise<ConnectedEnvironmentsDaprComponentsListSecretsResponse>;
}
