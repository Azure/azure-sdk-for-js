/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  SourceControl,
  ContainerAppsSourceControlsListByContainerAppOptionalParams,
  ContainerAppsSourceControlsGetOptionalParams,
  ContainerAppsSourceControlsGetResponse,
  ContainerAppsSourceControlsCreateOrUpdateOptionalParams,
  ContainerAppsSourceControlsCreateOrUpdateResponse,
  ContainerAppsSourceControlsDeleteOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a ContainerAppsSourceControls. */
export interface ContainerAppsSourceControls {
  /**
   * Get the Container App SourceControls in a given resource group.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param containerAppName Name of the Container App.
   * @param options The options parameters.
   */
  listByContainerApp(
    resourceGroupName: string,
    containerAppName: string,
    options?: ContainerAppsSourceControlsListByContainerAppOptionalParams
  ): PagedAsyncIterableIterator<SourceControl>;
  /**
   * Get a SourceControl of a Container App.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param containerAppName Name of the Container App.
   * @param sourceControlName Name of the Container App SourceControl.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    containerAppName: string,
    sourceControlName: string,
    options?: ContainerAppsSourceControlsGetOptionalParams
  ): Promise<ContainerAppsSourceControlsGetResponse>;
  /**
   * Create or update the SourceControl for a Container App.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param containerAppName Name of the Container App.
   * @param sourceControlName Name of the Container App SourceControl.
   * @param sourceControlEnvelope Properties used to create a Container App SourceControl
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    containerAppName: string,
    sourceControlName: string,
    sourceControlEnvelope: SourceControl,
    options?: ContainerAppsSourceControlsCreateOrUpdateOptionalParams
  ): Promise<
    SimplePollerLike<
      OperationState<ContainerAppsSourceControlsCreateOrUpdateResponse>,
      ContainerAppsSourceControlsCreateOrUpdateResponse
    >
  >;
  /**
   * Create or update the SourceControl for a Container App.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param containerAppName Name of the Container App.
   * @param sourceControlName Name of the Container App SourceControl.
   * @param sourceControlEnvelope Properties used to create a Container App SourceControl
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    containerAppName: string,
    sourceControlName: string,
    sourceControlEnvelope: SourceControl,
    options?: ContainerAppsSourceControlsCreateOrUpdateOptionalParams
  ): Promise<ContainerAppsSourceControlsCreateOrUpdateResponse>;
  /**
   * Delete a Container App SourceControl.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param containerAppName Name of the Container App.
   * @param sourceControlName Name of the Container App SourceControl.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    containerAppName: string,
    sourceControlName: string,
    options?: ContainerAppsSourceControlsDeleteOptionalParams
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Delete a Container App SourceControl.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param containerAppName Name of the Container App.
   * @param sourceControlName Name of the Container App SourceControl.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    containerAppName: string,
    sourceControlName: string,
    options?: ContainerAppsSourceControlsDeleteOptionalParams
  ): Promise<void>;
}
