/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  DotNetComponent,
  DotNetComponentsListOptionalParams,
  DotNetComponentsGetOptionalParams,
  DotNetComponentsGetResponse,
  DotNetComponentsCreateOrUpdateOptionalParams,
  DotNetComponentsCreateOrUpdateResponse,
  DotNetComponentsUpdateOptionalParams,
  DotNetComponentsUpdateResponse,
  DotNetComponentsDeleteOptionalParams,
  DotNetComponentsDeleteResponse,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a DotNetComponents. */
export interface DotNetComponents {
  /**
   * Get the .NET Components for a managed environment.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param environmentName Name of the Managed Environment.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    environmentName: string,
    options?: DotNetComponentsListOptionalParams,
  ): PagedAsyncIterableIterator<DotNetComponent>;
  /**
   * Get a .NET Component.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param environmentName Name of the Managed Environment.
   * @param name Name of the .NET Component.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    environmentName: string,
    name: string,
    options?: DotNetComponentsGetOptionalParams,
  ): Promise<DotNetComponentsGetResponse>;
  /**
   * Creates or updates a .NET Component in a Managed Environment.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param environmentName Name of the Managed Environment.
   * @param name Name of the .NET Component.
   * @param dotNetComponentEnvelope Configuration details of the .NET Component.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    environmentName: string,
    name: string,
    dotNetComponentEnvelope: DotNetComponent,
    options?: DotNetComponentsCreateOrUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<DotNetComponentsCreateOrUpdateResponse>,
      DotNetComponentsCreateOrUpdateResponse
    >
  >;
  /**
   * Creates or updates a .NET Component in a Managed Environment.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param environmentName Name of the Managed Environment.
   * @param name Name of the .NET Component.
   * @param dotNetComponentEnvelope Configuration details of the .NET Component.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    environmentName: string,
    name: string,
    dotNetComponentEnvelope: DotNetComponent,
    options?: DotNetComponentsCreateOrUpdateOptionalParams,
  ): Promise<DotNetComponentsCreateOrUpdateResponse>;
  /**
   * Patches a .NET Component using JSON Merge Patch
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param environmentName Name of the Managed Environment.
   * @param name Name of the .NET Component.
   * @param dotNetComponentEnvelope Configuration details of the .NET Component.
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    environmentName: string,
    name: string,
    dotNetComponentEnvelope: DotNetComponent,
    options?: DotNetComponentsUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<DotNetComponentsUpdateResponse>,
      DotNetComponentsUpdateResponse
    >
  >;
  /**
   * Patches a .NET Component using JSON Merge Patch
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param environmentName Name of the Managed Environment.
   * @param name Name of the .NET Component.
   * @param dotNetComponentEnvelope Configuration details of the .NET Component.
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    environmentName: string,
    name: string,
    dotNetComponentEnvelope: DotNetComponent,
    options?: DotNetComponentsUpdateOptionalParams,
  ): Promise<DotNetComponentsUpdateResponse>;
  /**
   * Delete a .NET Component.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param environmentName Name of the Managed Environment.
   * @param name Name of the .NET Component.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    environmentName: string,
    name: string,
    options?: DotNetComponentsDeleteOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<DotNetComponentsDeleteResponse>,
      DotNetComponentsDeleteResponse
    >
  >;
  /**
   * Delete a .NET Component.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param environmentName Name of the Managed Environment.
   * @param name Name of the .NET Component.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    environmentName: string,
    name: string,
    options?: DotNetComponentsDeleteOptionalParams,
  ): Promise<DotNetComponentsDeleteResponse>;
}
