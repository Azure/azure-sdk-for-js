/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BuildAuthToken } from "../operationsInterfaces";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { ContainerAppsAPIClient } from "../containerAppsAPIClient";
import {
  BuildAuthTokenListOptionalParams,
  BuildAuthTokenListResponse,
} from "../models";

/** Class containing BuildAuthToken operations. */
export class BuildAuthTokenImpl implements BuildAuthToken {
  private readonly client: ContainerAppsAPIClient;

  /**
   * Initialize a new instance of the class BuildAuthToken class.
   * @param client Reference to the service client
   */
  constructor(client: ContainerAppsAPIClient) {
    this.client = client;
  }

  /**
   * Gets the token used to connect to the endpoint where source code can be uploaded for a build.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param builderName The name of the builder.
   * @param buildName The name of a build.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    builderName: string,
    buildName: string,
    options?: BuildAuthTokenListOptionalParams,
  ): Promise<BuildAuthTokenListResponse> {
    return this.client.sendOperationRequest(
      { resourceGroupName, builderName, buildName, options },
      listOperationSpec,
    );
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const listOperationSpec: coreClient.OperationSpec = {
  path: "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/builders/{builderName}/builds/{buildName}/listAuthToken",
  httpMethod: "POST",
  responses: {
    200: {
      bodyMapper: Mappers.BuildToken,
    },
    default: {
      bodyMapper: Mappers.ErrorResponse,
    },
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.builderName,
    Parameters.buildName,
  ],
  headerParameters: [Parameters.accept],
  serializer,
};
