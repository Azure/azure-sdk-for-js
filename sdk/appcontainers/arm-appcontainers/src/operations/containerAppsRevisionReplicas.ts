/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { ContainerAppsRevisionReplicas } from "../operationsInterfaces";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { ContainerAppsAPIClient } from "../containerAppsAPIClient";
import {
  ContainerAppsRevisionReplicasGetReplicaOptionalParams,
  ContainerAppsRevisionReplicasGetReplicaResponse,
  ContainerAppsRevisionReplicasListReplicasOptionalParams,
  ContainerAppsRevisionReplicasListReplicasResponse
} from "../models";

/** Class containing ContainerAppsRevisionReplicas operations. */
export class ContainerAppsRevisionReplicasImpl
  implements ContainerAppsRevisionReplicas {
  private readonly client: ContainerAppsAPIClient;

  /**
   * Initialize a new instance of the class ContainerAppsRevisionReplicas class.
   * @param client Reference to the service client
   */
  constructor(client: ContainerAppsAPIClient) {
    this.client = client;
  }

  /**
   * Get a replica for a Container App Revision.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param containerAppName Name of the Container App.
   * @param revisionName Name of the Container App Revision.
   * @param replicaName Name of the Container App Revision Replica.
   * @param options The options parameters.
   */
  getReplica(
    resourceGroupName: string,
    containerAppName: string,
    revisionName: string,
    replicaName: string,
    options?: ContainerAppsRevisionReplicasGetReplicaOptionalParams
  ): Promise<ContainerAppsRevisionReplicasGetReplicaResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        containerAppName,
        revisionName,
        replicaName,
        options
      },
      getReplicaOperationSpec
    );
  }

  /**
   * List replicas for a Container App Revision.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param containerAppName Name of the Container App.
   * @param revisionName Name of the Container App Revision.
   * @param options The options parameters.
   */
  listReplicas(
    resourceGroupName: string,
    containerAppName: string,
    revisionName: string,
    options?: ContainerAppsRevisionReplicasListReplicasOptionalParams
  ): Promise<ContainerAppsRevisionReplicasListReplicasResponse> {
    return this.client.sendOperationRequest(
      { resourceGroupName, containerAppName, revisionName, options },
      listReplicasOperationSpec
    );
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const getReplicaOperationSpec: coreClient.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/revisions/{revisionName}/replicas/{replicaName}",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.Replica
    },
    default: {
      bodyMapper: Mappers.DefaultErrorResponse
    }
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.containerAppName,
    Parameters.revisionName,
    Parameters.replicaName
  ],
  headerParameters: [Parameters.accept],
  serializer
};
const listReplicasOperationSpec: coreClient.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/revisions/{revisionName}/replicas",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.ReplicaCollection
    },
    default: {
      bodyMapper: Mappers.DefaultErrorResponse
    }
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.containerAppName,
    Parameters.revisionName
  ],
  headerParameters: [Parameters.accept],
  serializer
};
