{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/models/index.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG;;;AA4cH,0EAA0E;AAC1E,IAAY,sBASX;AATD,WAAY,sBAAsB;IAChC,cAAc;IACd,6CAAmB,CAAA;IACnB,mBAAmB;IACnB,uDAA6B,CAAA;IAC7B,gBAAgB;IAChB,iDAAuB,CAAA;IACvB,aAAa;IACb,2CAAiB,CAAA;AACnB,CAAC,EATW,sBAAsB,sCAAtB,sBAAsB,QASjC;AAcD,yEAAyE;AACzE,IAAY,qBAOX;AAPD,WAAY,qBAAqB;IAC/B,WAAW;IACX,sCAAa,CAAA;IACb,YAAY;IACZ,wCAAe,CAAA;IACf,UAAU;IACV,oCAAW,CAAA;AACb,CAAC,EAPW,qBAAqB,qCAArB,qBAAqB,QAOhC;AAaD,mEAAmE;AACnE,IAAY,eASX;AATD,WAAY,eAAe;IACzB,cAAc;IACd,sCAAmB,CAAA;IACnB,cAAc;IACd,sCAAmB,CAAA;IACnB,aAAa;IACb,oCAAiB,CAAA;IACjB,aAAa;IACb,oCAAiB,CAAA;AACnB,CAAC,EATW,eAAe,+BAAf,eAAe,QAS1B;AAcD,qEAAqE;AACrE,IAAY,iBAmCX;AAnCD,WAAY,iBAAiB;IAC3B,WAAW;IACX,kCAAa,CAAA;IACb,WAAW;IACX,kCAAa,CAAA;IACb,gBAAgB;IAChB,4CAAuB,CAAA;IACvB,iBAAiB;IACjB,8CAAyB,CAAA;IACzB,eAAe;IACf,2CAAsB,CAAA;IACtB,qBAAqB;IACrB,uDAAkC,CAAA;IAClC,aAAa;IACb,sCAAiB,CAAA;IACjB,eAAe;IACf,0CAAqB,CAAA;IACrB,YAAY;IACZ,oCAAe,CAAA;IACf,WAAW;IACX,kCAAa,CAAA;IACb,YAAY;IACZ,oCAAe,CAAA;IACf,YAAY;IACZ,oCAAe,CAAA;IACf,YAAY;IACZ,oCAAe,CAAA;IACf,YAAY;IACZ,oCAAe,CAAA;IACf,aAAa;IACb,sCAAiB,CAAA;IACjB,aAAa;IACb,sCAAiB,CAAA;IACjB,aAAa;IACb,sCAAiB,CAAA;AACnB,CAAC,EAnCW,iBAAiB,iCAAjB,iBAAiB,QAmC5B;AA2BD,kEAAkE;AAClE,IAAY,cAKX;AALD,WAAY,cAAc;IACxB,aAAa;IACb,mCAAiB,CAAA;IACjB,eAAe;IACf,uCAAqB,CAAA;AACvB,CAAC,EALW,cAAc,8BAAd,cAAc,QAKzB;AAYD,sEAAsE;AACtE,IAAY,kBAGX;AAHD,WAAY,kBAAkB;IAC5B,cAAc;IACd,yCAAmB,CAAA;AACrB,CAAC,EAHW,kBAAkB,kCAAlB,kBAAkB,QAG7B;AAWD,uEAAuE;AACvE,IAAY,mBAGX;AAHD,WAAY,mBAAmB;IAC7B,cAAc;IACd,0CAAmB,CAAA;AACrB,CAAC,EAHW,mBAAmB,mCAAnB,mBAAmB,QAG9B;AAWD,sEAAsE;AACtE,IAAY,kBAyBX;AAzBD,WAAY,kBAAkB;IAC5B,aAAa;IACb,uCAAiB,CAAA;IACjB,UAAU;IACV,iCAAW,CAAA;IACX,YAAY;IACZ,qCAAe,CAAA;IACf,iBAAiB;IACjB,+CAAyB,CAAA;IACzB,aAAa;IACb,uCAAiB,CAAA;IACjB,WAAW;IACX,mCAAa,CAAA;IACb,iBAAiB;IACjB,+CAAyB,CAAA;IACzB,cAAc;IACd,yCAAmB,CAAA;IACnB,aAAa;IACb,uCAAiB,CAAA;IACjB,mBAAmB;IACnB,mDAA6B,CAAA;IAC7B,qBAAqB;IACrB,uDAAiC,CAAA;IACjC,sBAAsB;IACtB,yDAAmC,CAAA;AACrC,CAAC,EAzBW,kBAAkB,kCAAlB,kBAAkB,QAyB7B","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\nexport type WebServicePropertiesUnion =\n  | WebServiceProperties\n  | WebServicePropertiesForGraph;\n\n/** The list of REST API operations. */\nexport interface OperationEntityListResult {\n  /**\n   * The list of operations.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: OperationEntity[];\n}\n\n/** An API operation. */\nexport interface OperationEntity {\n  /**\n   * Operation name: {provider}/{resource}/{operation}.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /** The API operation info. */\n  display?: OperationDisplayInfo;\n}\n\n/** The API operation info. */\nexport interface OperationDisplayInfo {\n  /**\n   * The description of the operation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly description?: string;\n  /**\n   * The action that users can perform, based on their permission level.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly operation?: string;\n  /**\n   * The service provider.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provider?: string;\n  /**\n   * The resource on which the operation is performed.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resource?: string;\n}\n\n/** The set of properties specific to the Azure ML web service resource. */\nexport interface WebServiceProperties {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  packageType: \"Graph\";\n  /** The title of the web service. */\n  title?: string;\n  /** The description of the web service. */\n  description?: string;\n  /**\n   * Read Only: The date and time when the web service was created.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly createdOn?: Date;\n  /**\n   * Read Only: The date and time when the web service was last modified.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly modifiedOn?: Date;\n  /**\n   * Read Only: The provision state of the web service. Valid values are Unknown, Provisioning, Succeeded, and Failed.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /** Contains the web service provisioning keys. If you do not specify provisioning keys, the Azure Machine Learning system generates them for you. Note: The keys are not returned from calls to GET operations. */\n  keys?: WebServiceKeys;\n  /** When set to true, indicates that the web service is read-only and can no longer be updated or patched, only removed. Default, is false. Note: Once set to true, you cannot change its value. */\n  readOnly?: boolean;\n  /**\n   * Read Only: Contains the URI of the swagger spec associated with this web service.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly swaggerLocation?: string;\n  /** When set to true, sample data is included in the web service's swagger definition. The default value is true. */\n  exposeSampleData?: boolean;\n  /** Contains the configuration settings for the web service endpoint. */\n  realtimeConfiguration?: RealtimeConfiguration;\n  /** Settings controlling the diagnostics traces collection for the web service. */\n  diagnostics?: DiagnosticsConfiguration;\n  /** Specifies the storage account that Azure Machine Learning uses to store information about the web service. Only the name of the storage account is returned from calls to GET operations. When updating the storage account information, you must ensure that all necessary assets are available in the new storage account or calls to your web service will fail. */\n  storageAccount?: StorageAccount;\n  /** Specifies the Machine Learning workspace containing the experiment that is source for the web service. */\n  machineLearningWorkspace?: MachineLearningWorkspace;\n  /** Contains the commitment plan associated with this web service. Set at creation time. Once set, this value cannot be changed. Note: The commitment plan is not returned from calls to GET operations. */\n  commitmentPlan?: CommitmentPlan;\n  /** Contains the Swagger 2.0 schema describing one or more of the web service's inputs. For more information, see the Swagger specification. */\n  input?: ServiceInputOutputSpecification;\n  /** Contains the Swagger 2.0 schema describing one or more of the web service's outputs. For more information, see the Swagger specification. */\n  output?: ServiceInputOutputSpecification;\n  /** Defines sample input data for one or more of the service's inputs. */\n  exampleRequest?: ExampleRequest;\n  /** Contains user defined properties describing web service assets. Properties are expressed as Key/Value pairs. */\n  assets?: { [propertyName: string]: AssetItem };\n  /** The set of global parameters values defined for the web service, given as a global parameter name to default value map. If no default value is specified, the parameter is considered to be required. */\n  parameters?: { [propertyName: string]: WebServiceParameter };\n  /** When set to true, indicates that the payload size is larger than 3 MB. Otherwise false. If the payload size exceed 3 MB, the payload is stored in a blob and the PayloadsLocation parameter contains the URI of the blob. Otherwise, this will be set to false and Assets, Input, Output, Package, Parameters, ExampleRequest are inline. The Payload sizes is determined by adding the size of the Assets, Input, Output, Package, Parameters, and the ExampleRequest. */\n  payloadsInBlobStorage?: boolean;\n  /** The URI of the payload blob. This parameter contains a value only if the payloadsInBlobStorage parameter is set to true. Otherwise is set to null. */\n  payloadsLocation?: BlobLocation;\n}\n\n/** Access keys for the web service calls. */\nexport interface WebServiceKeys {\n  /** The primary access key. */\n  primary?: string;\n  /** The secondary access key. */\n  secondary?: string;\n}\n\n/** Holds the available configuration options for an Azure ML web service endpoint. */\nexport interface RealtimeConfiguration {\n  /** Specifies the maximum concurrent calls that can be made to the web service. Minimum value: 4, Maximum value: 200. */\n  maxConcurrentCalls?: number;\n}\n\n/** Diagnostics settings for an Azure ML web service. */\nexport interface DiagnosticsConfiguration {\n  /** Specifies the verbosity of the diagnostic output. Valid values are: None - disables tracing; Error - collects only error (stderr) traces; All - collects all traces (stdout and stderr). */\n  level: DiagnosticsLevel;\n  /** Specifies the date and time when the logging will cease. If null, diagnostic collection is not time limited. */\n  expiry?: Date;\n}\n\n/** Access information for a storage account. */\nexport interface StorageAccount {\n  /** Specifies the name of the storage account. */\n  name?: string;\n  /** Specifies the key used to access the storage account. */\n  key?: string;\n}\n\n/** Information about the machine learning workspace containing the experiment that is source for the web service. */\nexport interface MachineLearningWorkspace {\n  /** Specifies the workspace ID of the machine learning workspace associated with the web service */\n  id: string;\n}\n\n/** Information about the machine learning commitment plan associated with the web service. */\nexport interface CommitmentPlan {\n  /** Specifies the Azure Resource Manager ID of the commitment plan associated with the web service. */\n  id: string;\n}\n\n/** The swagger 2.0 schema describing the service's inputs or outputs. See Swagger specification: http://swagger.io/specification/ */\nexport interface ServiceInputOutputSpecification {\n  /** The title of your Swagger schema. */\n  title?: string;\n  /** The description of the Swagger schema. */\n  description?: string;\n  /** The type of the entity described in swagger. Always 'object'. */\n  type: string;\n  /** Specifies a collection that contains the column schema for each input or output of the web service. For more information, see the Swagger specification. */\n  properties: { [propertyName: string]: TableSpecification };\n}\n\n/** The swagger 2.0 schema describing a single service input or output. See Swagger specification: http://swagger.io/specification/ */\nexport interface TableSpecification {\n  /** Swagger schema title. */\n  title?: string;\n  /** Swagger schema description. */\n  description?: string;\n  /** The type of the entity described in swagger. */\n  type: string;\n  /** The format, if 'type' is not 'object' */\n  format?: string;\n  /** The set of columns within the data table. */\n  properties?: { [propertyName: string]: ColumnSpecification };\n}\n\n/** Swagger 2.0 schema for a column within the data table representing a web service input or output. See Swagger specification: http://swagger.io/specification/ */\nexport interface ColumnSpecification {\n  /** Data type of the column. */\n  type: ColumnType;\n  /** Additional format information for the data type. */\n  format?: ColumnFormat;\n  /** If the data type is categorical, this provides the list of accepted categories. */\n  enum?: Record<string, unknown>[];\n  /** Flag indicating if the type supports null values or not. */\n  xMsIsnullable?: boolean;\n  /** Flag indicating whether the categories are treated as an ordered set or not, if this is a categorical column. */\n  xMsIsordered?: boolean;\n}\n\n/** Sample input data for the service's input(s). */\nexport interface ExampleRequest {\n  /** Sample input data for the web service's input(s) given as an input name to sample input values matrix map. */\n  inputs?: { [propertyName: string]: Record<string, unknown>[][] };\n  /** Sample input data for the web service's global parameters */\n  globalParameters?: { [propertyName: string]: Record<string, unknown> };\n}\n\n/** Information about an asset associated with the web service. */\nexport interface AssetItem {\n  /** Asset's friendly name. */\n  name: string;\n  /** Asset's Id. */\n  id?: string;\n  /** Asset's type. */\n  type: AssetType;\n  /** Access information for the asset. */\n  locationInfo: BlobLocation;\n  /** Information about the asset's input ports. */\n  inputPorts?: { [propertyName: string]: InputPort };\n  /** Information about the asset's output ports. */\n  outputPorts?: { [propertyName: string]: OutputPort };\n  /** If the asset is a custom module, this holds the module's metadata. */\n  metadata?: { [propertyName: string]: string };\n  /** If the asset is a custom module, this holds the module's parameters. */\n  parameters?: ModuleAssetParameter[];\n}\n\n/** Describes the access location for a blob. */\nexport interface BlobLocation {\n  /** The URI from which the blob is accessible from. For example, aml://abc for system assets or https://xyz for user assets or payload. */\n  uri: string;\n  /** Access credentials for the blob, if applicable (e.g. blob specified by storage account connection string + blob URI) */\n  credentials?: string;\n}\n\n/** Asset input port */\nexport interface InputPort {\n  /** Port data type. */\n  type?: InputPortType;\n}\n\n/** Asset output port */\nexport interface OutputPort {\n  /** Port data type. */\n  type?: OutputPortType;\n}\n\n/** Parameter definition for a module asset. */\nexport interface ModuleAssetParameter {\n  /** Parameter name. */\n  name?: string;\n  /** Parameter type. */\n  parameterType?: string;\n  /** Definitions for nested interface parameters if this is a complex module parameter. */\n  modeValuesInfo?: { [propertyName: string]: ModeValueInfo };\n}\n\n/** Nested parameter definition. */\nexport interface ModeValueInfo {\n  /** The interface string name for the nested parameter. */\n  interfaceString?: string;\n  /** The definition of the parameter. */\n  parameters?: ModuleAssetParameter[];\n}\n\n/** Web Service Parameter object for node and global parameter */\nexport interface WebServiceParameter {\n  /** The parameter value */\n  value?: Record<string, unknown>;\n  /** If the parameter value in 'value' field is encrypted, the thumbprint of the certificate should be put here. */\n  certificateThumbprint?: string;\n}\n\n/** Azure resource. */\nexport interface Resource {\n  /**\n   * Specifies the resource ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * Specifies the name of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /** Specifies the location of the resource. */\n  location: string;\n  /**\n   * Specifies the type of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** Contains resource tags defined as key/value pairs. */\n  tags?: { [propertyName: string]: string };\n}\n\n/** Azure resource. */\nexport interface PatchedResource {\n  /**\n   * Specifies the resource ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * Specifies the name of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * Specifies the location of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly location?: string;\n  /**\n   * Specifies the type of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** Contains resource tags defined as key/value pairs. */\n  tags?: { [propertyName: string]: string };\n}\n\n/** Azure async operation status. */\nexport interface AsyncOperationStatus {\n  /**\n   * Async operation id.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * Async operation name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * Read Only: The provisioning state of the web service. Valid values are Unknown, Provisioning, Succeeded, and Failed.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /**\n   * The date time that the async operation started.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly startTime?: Date;\n  /**\n   * The date time that the async operation finished.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly endTime?: Date;\n  /**\n   * Async operation progress.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly percentComplete?: number;\n  /**\n   * If the async operation fails, this structure contains the error details.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly errorInfo?: AsyncOperationErrorInfo;\n}\n\n/** The error detail information for async operation */\nexport interface AsyncOperationErrorInfo {\n  /**\n   * The error code.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly code?: string;\n  /**\n   * The error target.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly target?: string;\n  /**\n   * The error message.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly message?: string;\n  /**\n   * An array containing error information.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly details?: AsyncOperationErrorInfo[];\n}\n\n/** Paginated list of web services. */\nexport interface PaginatedWebServicesList {\n  /** An array of web service objects. */\n  value?: WebService[];\n  /** A continuation link (absolute URI) to the next page of results in the list. */\n  nextLink?: string;\n}\n\n/** Defines the graph of modules making up the machine learning solution. */\nexport interface GraphPackage {\n  /** The set of nodes making up the graph, provided as a nodeId to GraphNode map */\n  nodes?: { [propertyName: string]: GraphNode };\n  /** The list of edges making up the graph. */\n  edges?: GraphEdge[];\n  /** The collection of global parameters for the graph, given as a global parameter name to GraphParameter map. Each parameter here has a 1:1 match with the global parameters values map declared at the WebServiceProperties level. */\n  graphParameters?: { [propertyName: string]: GraphParameter };\n}\n\n/** Specifies a node in the web service graph. The node can either be an input, output or asset node, so only one of the corresponding id properties is populated at any given time. */\nexport interface GraphNode {\n  /** The id of the asset represented by this node. */\n  assetId?: string;\n  /** The id of the input element represented by this node. */\n  inputId?: string;\n  /** The id of the output element represented by this node. */\n  outputId?: string;\n  /** If applicable, parameters of the node. Global graph parameters map into these, with values set at runtime. */\n  parameters?: { [propertyName: string]: WebServiceParameter };\n}\n\n/** Defines an edge within the web service's graph. */\nexport interface GraphEdge {\n  /** The source graph node's identifier. */\n  sourceNodeId?: string;\n  /** The identifier of the source node's port that the edge connects from. */\n  sourcePortId?: string;\n  /** The destination graph node's identifier. */\n  targetNodeId?: string;\n  /** The identifier of the destination node's port that the edge connects into. */\n  targetPortId?: string;\n}\n\n/** Defines a global parameter in the graph. */\nexport interface GraphParameter {\n  /** Description of this graph parameter. */\n  description?: string;\n  /** Graph parameter's type. */\n  type: ParameterType;\n  /** Association links for this parameter to nodes in the graph. */\n  links: GraphParameterLink[];\n}\n\n/** Association link for a graph global parameter to a node in the graph. */\nexport interface GraphParameterLink {\n  /** The graph node's identifier */\n  nodeId: string;\n  /** The identifier of the node parameter that the global parameter maps to. */\n  parameterKey: string;\n}\n\n/** Properties specific to a Graph based web service. */\nexport interface WebServicePropertiesForGraph extends WebServiceProperties {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  packageType: \"Graph\";\n  /** The definition of the graph package making up this web service. */\n  package?: GraphPackage;\n}\n\n/** Instance of an Azure ML web service resource. */\nexport interface WebService extends Resource {\n  /** Contains the property payload that describes the web service. */\n  properties: WebServicePropertiesUnion;\n}\n\n/** Instance of an Patched Azure ML web service resource. */\nexport interface PatchedWebService extends PatchedResource {\n  /** Contains the property payload that describes the web service. */\n  properties?: WebServicePropertiesUnion;\n}\n\n/** Known values of {@link ProvisioningState} that the service accepts. */\nexport enum KnownProvisioningState {\n  /** Unknown */\n  Unknown = \"Unknown\",\n  /** Provisioning */\n  Provisioning = \"Provisioning\",\n  /** Succeeded */\n  Succeeded = \"Succeeded\",\n  /** Failed */\n  Failed = \"Failed\"\n}\n\n/**\n * Defines values for ProvisioningState. \\\n * {@link KnownProvisioningState} can be used interchangeably with ProvisioningState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Unknown** \\\n * **Provisioning** \\\n * **Succeeded** \\\n * **Failed**\n */\nexport type ProvisioningState = string;\n\n/** Known values of {@link DiagnosticsLevel} that the service accepts. */\nexport enum KnownDiagnosticsLevel {\n  /** None */\n  None = \"None\",\n  /** Error */\n  Error = \"Error\",\n  /** All */\n  All = \"All\"\n}\n\n/**\n * Defines values for DiagnosticsLevel. \\\n * {@link KnownDiagnosticsLevel} can be used interchangeably with DiagnosticsLevel,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None** \\\n * **Error** \\\n * **All**\n */\nexport type DiagnosticsLevel = string;\n\n/** Known values of {@link ColumnType} that the service accepts. */\nexport enum KnownColumnType {\n  /** Boolean */\n  Boolean = \"Boolean\",\n  /** Integer */\n  Integer = \"Integer\",\n  /** Number */\n  Number = \"Number\",\n  /** String */\n  String = \"String\"\n}\n\n/**\n * Defines values for ColumnType. \\\n * {@link KnownColumnType} can be used interchangeably with ColumnType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Boolean** \\\n * **Integer** \\\n * **Number** \\\n * **String**\n */\nexport type ColumnType = string;\n\n/** Known values of {@link ColumnFormat} that the service accepts. */\nexport enum KnownColumnFormat {\n  /** Byte */\n  Byte = \"Byte\",\n  /** Char */\n  Char = \"Char\",\n  /** Complex64 */\n  Complex64 = \"Complex64\",\n  /** Complex128 */\n  Complex128 = \"Complex128\",\n  /** DateTime */\n  DateTime = \"Date-time\",\n  /** DateTimeOffset */\n  DateTimeOffset = \"Date-timeOffset\",\n  /** Double */\n  Double = \"Double\",\n  /** Duration */\n  Duration = \"Duration\",\n  /** Float */\n  Float = \"Float\",\n  /** Int8 */\n  Int8 = \"Int8\",\n  /** Int16 */\n  Int16 = \"Int16\",\n  /** Int32 */\n  Int32 = \"Int32\",\n  /** Int64 */\n  Int64 = \"Int64\",\n  /** Uint8 */\n  Uint8 = \"Uint8\",\n  /** Uint16 */\n  Uint16 = \"Uint16\",\n  /** Uint32 */\n  Uint32 = \"Uint32\",\n  /** Uint64 */\n  Uint64 = \"Uint64\"\n}\n\n/**\n * Defines values for ColumnFormat. \\\n * {@link KnownColumnFormat} can be used interchangeably with ColumnFormat,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Byte** \\\n * **Char** \\\n * **Complex64** \\\n * **Complex128** \\\n * **Date-time** \\\n * **Date-timeOffset** \\\n * **Double** \\\n * **Duration** \\\n * **Float** \\\n * **Int8** \\\n * **Int16** \\\n * **Int32** \\\n * **Int64** \\\n * **Uint8** \\\n * **Uint16** \\\n * **Uint32** \\\n * **Uint64**\n */\nexport type ColumnFormat = string;\n\n/** Known values of {@link AssetType} that the service accepts. */\nexport enum KnownAssetType {\n  /** Module */\n  Module = \"Module\",\n  /** Resource */\n  Resource = \"Resource\"\n}\n\n/**\n * Defines values for AssetType. \\\n * {@link KnownAssetType} can be used interchangeably with AssetType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Module** \\\n * **Resource**\n */\nexport type AssetType = string;\n\n/** Known values of {@link InputPortType} that the service accepts. */\nexport enum KnownInputPortType {\n  /** Dataset */\n  Dataset = \"Dataset\"\n}\n\n/**\n * Defines values for InputPortType. \\\n * {@link KnownInputPortType} can be used interchangeably with InputPortType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Dataset**\n */\nexport type InputPortType = string;\n\n/** Known values of {@link OutputPortType} that the service accepts. */\nexport enum KnownOutputPortType {\n  /** Dataset */\n  Dataset = \"Dataset\"\n}\n\n/**\n * Defines values for OutputPortType. \\\n * {@link KnownOutputPortType} can be used interchangeably with OutputPortType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Dataset**\n */\nexport type OutputPortType = string;\n\n/** Known values of {@link ParameterType} that the service accepts. */\nexport enum KnownParameterType {\n  /** String */\n  String = \"String\",\n  /** Int */\n  Int = \"Int\",\n  /** Float */\n  Float = \"Float\",\n  /** Enumerated */\n  Enumerated = \"Enumerated\",\n  /** Script */\n  Script = \"Script\",\n  /** Mode */\n  Mode = \"Mode\",\n  /** Credential */\n  Credential = \"Credential\",\n  /** Boolean */\n  Boolean = \"Boolean\",\n  /** Double */\n  Double = \"Double\",\n  /** ColumnPicker */\n  ColumnPicker = \"ColumnPicker\",\n  /** ParameterRange */\n  ParameterRange = \"ParameterRange\",\n  /** DataGatewayName */\n  DataGatewayName = \"DataGatewayName\"\n}\n\n/**\n * Defines values for ParameterType. \\\n * {@link KnownParameterType} can be used interchangeably with ParameterType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **String** \\\n * **Int** \\\n * **Float** \\\n * **Enumerated** \\\n * **Script** \\\n * **Mode** \\\n * **Credential** \\\n * **Boolean** \\\n * **Double** \\\n * **ColumnPicker** \\\n * **ParameterRange** \\\n * **DataGatewayName**\n */\nexport type ParameterType = string;\n\n/** Optional parameters. */\nexport interface OperationsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type OperationsListResponse = OperationEntityListResult;\n\n/** Optional parameters. */\nexport interface WebServicesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type WebServicesCreateOrUpdateResponse = WebService;\n\n/** Optional parameters. */\nexport interface WebServicesGetOptionalParams\n  extends coreClient.OperationOptions {\n  /** The region for which encrypted credential parameters are valid. */\n  region?: string;\n}\n\n/** Contains response data for the get operation. */\nexport type WebServicesGetResponse = WebService;\n\n/** Optional parameters. */\nexport interface WebServicesPatchOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the patch operation. */\nexport type WebServicesPatchResponse = WebService;\n\n/** Optional parameters. */\nexport interface WebServicesRemoveOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface WebServicesCreateRegionalPropertiesOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createRegionalProperties operation. */\nexport type WebServicesCreateRegionalPropertiesResponse = AsyncOperationStatus;\n\n/** Optional parameters. */\nexport interface WebServicesListKeysOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listKeys operation. */\nexport type WebServicesListKeysResponse = WebServiceKeys;\n\n/** Optional parameters. */\nexport interface WebServicesListByResourceGroupOptionalParams\n  extends coreClient.OperationOptions {\n  /** Continuation token for pagination. */\n  skiptoken?: string;\n}\n\n/** Contains response data for the listByResourceGroup operation. */\nexport type WebServicesListByResourceGroupResponse = PaginatedWebServicesList;\n\n/** Optional parameters. */\nexport interface WebServicesListBySubscriptionIdOptionalParams\n  extends coreClient.OperationOptions {\n  /** Continuation token for pagination. */\n  skiptoken?: string;\n}\n\n/** Contains response data for the listBySubscriptionId operation. */\nexport type WebServicesListBySubscriptionIdResponse = PaginatedWebServicesList;\n\n/** Optional parameters. */\nexport interface WebServicesListByResourceGroupNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** Continuation token for pagination. */\n  skiptoken?: string;\n}\n\n/** Contains response data for the listByResourceGroupNext operation. */\nexport type WebServicesListByResourceGroupNextResponse = PaginatedWebServicesList;\n\n/** Optional parameters. */\nexport interface WebServicesListBySubscriptionIdNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** Continuation token for pagination. */\n  skiptoken?: string;\n}\n\n/** Contains response data for the listBySubscriptionIdNext operation. */\nexport type WebServicesListBySubscriptionIdNextResponse = PaginatedWebServicesList;\n\n/** Optional parameters. */\nexport interface AzureMLWebServicesManagementClientOptionalParams\n  extends coreClient.ServiceClientOptions {\n  /** server parameter */\n  $host?: string;\n  /** Api Version */\n  apiVersion?: string;\n  /** Overrides client endpoint. */\n  endpoint?: string;\n}\n"]}