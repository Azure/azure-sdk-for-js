"use strict";
/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.discriminators = exports.PatchedWebService = exports.WebService = exports.WebServicePropertiesForGraph = exports.GraphParameterLink = exports.GraphParameter = exports.GraphEdge = exports.GraphNode = exports.GraphPackage = exports.PaginatedWebServicesList = exports.AsyncOperationErrorInfo = exports.AsyncOperationStatus = exports.PatchedResource = exports.Resource = exports.WebServiceParameter = exports.ModeValueInfo = exports.ModuleAssetParameter = exports.OutputPort = exports.InputPort = exports.BlobLocation = exports.AssetItem = exports.ExampleRequest = exports.ColumnSpecification = exports.TableSpecification = exports.ServiceInputOutputSpecification = exports.CommitmentPlan = exports.MachineLearningWorkspace = exports.StorageAccount = exports.DiagnosticsConfiguration = exports.RealtimeConfiguration = exports.WebServiceKeys = exports.WebServiceProperties = exports.OperationDisplayInfo = exports.OperationEntity = exports.OperationEntityListResult = void 0;
exports.OperationEntityListResult = {
    type: {
        name: "Composite",
        className: "OperationEntityListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "OperationEntity"
                        }
                    }
                }
            }
        }
    }
};
exports.OperationEntity = {
    type: {
        name: "Composite",
        className: "OperationEntity",
        modelProperties: {
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            display: {
                serializedName: "display",
                type: {
                    name: "Composite",
                    className: "OperationDisplayInfo"
                }
            }
        }
    }
};
exports.OperationDisplayInfo = {
    type: {
        name: "Composite",
        className: "OperationDisplayInfo",
        modelProperties: {
            description: {
                serializedName: "description",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            operation: {
                serializedName: "operation",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            provider: {
                serializedName: "provider",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            resource: {
                serializedName: "resource",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.WebServiceProperties = {
    type: {
        name: "Composite",
        className: "WebServiceProperties",
        uberParent: "WebServiceProperties",
        polymorphicDiscriminator: {
            serializedName: "packageType",
            clientName: "packageType"
        },
        modelProperties: {
            title: {
                serializedName: "title",
                type: {
                    name: "String"
                }
            },
            description: {
                serializedName: "description",
                type: {
                    name: "String"
                }
            },
            createdOn: {
                serializedName: "createdOn",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            },
            modifiedOn: {
                serializedName: "modifiedOn",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            },
            provisioningState: {
                serializedName: "provisioningState",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            keys: {
                serializedName: "keys",
                type: {
                    name: "Composite",
                    className: "WebServiceKeys"
                }
            },
            readOnly: {
                serializedName: "readOnly",
                type: {
                    name: "Boolean"
                }
            },
            swaggerLocation: {
                serializedName: "swaggerLocation",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            exposeSampleData: {
                serializedName: "exposeSampleData",
                type: {
                    name: "Boolean"
                }
            },
            realtimeConfiguration: {
                serializedName: "realtimeConfiguration",
                type: {
                    name: "Composite",
                    className: "RealtimeConfiguration"
                }
            },
            diagnostics: {
                serializedName: "diagnostics",
                type: {
                    name: "Composite",
                    className: "DiagnosticsConfiguration"
                }
            },
            storageAccount: {
                serializedName: "storageAccount",
                type: {
                    name: "Composite",
                    className: "StorageAccount"
                }
            },
            machineLearningWorkspace: {
                serializedName: "machineLearningWorkspace",
                type: {
                    name: "Composite",
                    className: "MachineLearningWorkspace"
                }
            },
            commitmentPlan: {
                serializedName: "commitmentPlan",
                type: {
                    name: "Composite",
                    className: "CommitmentPlan"
                }
            },
            input: {
                serializedName: "input",
                type: {
                    name: "Composite",
                    className: "ServiceInputOutputSpecification"
                }
            },
            output: {
                serializedName: "output",
                type: {
                    name: "Composite",
                    className: "ServiceInputOutputSpecification"
                }
            },
            exampleRequest: {
                serializedName: "exampleRequest",
                type: {
                    name: "Composite",
                    className: "ExampleRequest"
                }
            },
            assets: {
                serializedName: "assets",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "Composite", className: "AssetItem" } }
                }
            },
            parameters: {
                serializedName: "parameters",
                type: {
                    name: "Dictionary",
                    value: {
                        type: { name: "Composite", className: "WebServiceParameter" }
                    }
                }
            },
            packageType: {
                defaultValue: "Graph",
                isConstant: true,
                serializedName: "packageType",
                type: {
                    name: "String"
                }
            },
            payloadsInBlobStorage: {
                serializedName: "payloadsInBlobStorage",
                type: {
                    name: "Boolean"
                }
            },
            payloadsLocation: {
                serializedName: "payloadsLocation",
                type: {
                    name: "Composite",
                    className: "BlobLocation"
                }
            }
        }
    }
};
exports.WebServiceKeys = {
    type: {
        name: "Composite",
        className: "WebServiceKeys",
        modelProperties: {
            primary: {
                serializedName: "primary",
                type: {
                    name: "String"
                }
            },
            secondary: {
                serializedName: "secondary",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.RealtimeConfiguration = {
    type: {
        name: "Composite",
        className: "RealtimeConfiguration",
        modelProperties: {
            maxConcurrentCalls: {
                constraints: {
                    InclusiveMaximum: 200,
                    InclusiveMinimum: 4
                },
                serializedName: "maxConcurrentCalls",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
exports.DiagnosticsConfiguration = {
    type: {
        name: "Composite",
        className: "DiagnosticsConfiguration",
        modelProperties: {
            level: {
                serializedName: "level",
                required: true,
                type: {
                    name: "String"
                }
            },
            expiry: {
                serializedName: "expiry",
                type: {
                    name: "DateTime"
                }
            }
        }
    }
};
exports.StorageAccount = {
    type: {
        name: "Composite",
        className: "StorageAccount",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            key: {
                serializedName: "key",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.MachineLearningWorkspace = {
    type: {
        name: "Composite",
        className: "MachineLearningWorkspace",
        modelProperties: {
            id: {
                serializedName: "id",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.CommitmentPlan = {
    type: {
        name: "Composite",
        className: "CommitmentPlan",
        modelProperties: {
            id: {
                serializedName: "id",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.ServiceInputOutputSpecification = {
    type: {
        name: "Composite",
        className: "ServiceInputOutputSpecification",
        modelProperties: {
            title: {
                serializedName: "title",
                type: {
                    name: "String"
                }
            },
            description: {
                serializedName: "description",
                type: {
                    name: "String"
                }
            },
            type: {
                defaultValue: "object",
                serializedName: "type",
                required: true,
                type: {
                    name: "String"
                }
            },
            properties: {
                serializedName: "properties",
                required: true,
                type: {
                    name: "Dictionary",
                    value: {
                        type: { name: "Composite", className: "TableSpecification" }
                    }
                }
            }
        }
    }
};
exports.TableSpecification = {
    type: {
        name: "Composite",
        className: "TableSpecification",
        modelProperties: {
            title: {
                serializedName: "title",
                type: {
                    name: "String"
                }
            },
            description: {
                serializedName: "description",
                type: {
                    name: "String"
                }
            },
            type: {
                defaultValue: "object",
                serializedName: "type",
                required: true,
                type: {
                    name: "String"
                }
            },
            format: {
                serializedName: "format",
                type: {
                    name: "String"
                }
            },
            properties: {
                serializedName: "properties",
                type: {
                    name: "Dictionary",
                    value: {
                        type: { name: "Composite", className: "ColumnSpecification" }
                    }
                }
            }
        }
    }
};
exports.ColumnSpecification = {
    type: {
        name: "Composite",
        className: "ColumnSpecification",
        modelProperties: {
            type: {
                serializedName: "type",
                required: true,
                type: {
                    name: "String"
                }
            },
            format: {
                serializedName: "format",
                type: {
                    name: "String"
                }
            },
            enum: {
                serializedName: "enum",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Dictionary",
                            value: { type: { name: "any" } }
                        }
                    }
                }
            },
            xMsIsnullable: {
                serializedName: "x-ms-isnullable",
                type: {
                    name: "Boolean"
                }
            },
            xMsIsordered: {
                serializedName: "x-ms-isordered",
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
exports.ExampleRequest = {
    type: {
        name: "Composite",
        className: "ExampleRequest",
        modelProperties: {
            inputs: {
                serializedName: "inputs",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "Sequence",
                            element: {
                                type: {
                                    name: "Sequence",
                                    element: {
                                        type: {
                                            name: "Dictionary",
                                            value: { type: { name: "any" } }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            globalParameters: {
                serializedName: "globalParameters",
                type: {
                    name: "Dictionary",
                    value: {
                        type: { name: "Dictionary", value: { type: { name: "any" } } }
                    }
                }
            }
        }
    }
};
exports.AssetItem = {
    type: {
        name: "Composite",
        className: "AssetItem",
        modelProperties: {
            name: {
                serializedName: "name",
                required: true,
                type: {
                    name: "String"
                }
            },
            id: {
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            type: {
                serializedName: "type",
                required: true,
                type: {
                    name: "String"
                }
            },
            locationInfo: {
                serializedName: "locationInfo",
                type: {
                    name: "Composite",
                    className: "BlobLocation"
                }
            },
            inputPorts: {
                serializedName: "inputPorts",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "Composite", className: "InputPort" } }
                }
            },
            outputPorts: {
                serializedName: "outputPorts",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "Composite", className: "OutputPort" } }
                }
            },
            metadata: {
                serializedName: "metadata",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            },
            parameters: {
                serializedName: "parameters",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ModuleAssetParameter"
                        }
                    }
                }
            }
        }
    }
};
exports.BlobLocation = {
    type: {
        name: "Composite",
        className: "BlobLocation",
        modelProperties: {
            uri: {
                serializedName: "uri",
                required: true,
                type: {
                    name: "String"
                }
            },
            credentials: {
                serializedName: "credentials",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.InputPort = {
    type: {
        name: "Composite",
        className: "InputPort",
        modelProperties: {
            type: {
                defaultValue: "Dataset",
                serializedName: "type",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.OutputPort = {
    type: {
        name: "Composite",
        className: "OutputPort",
        modelProperties: {
            type: {
                defaultValue: "Dataset",
                serializedName: "type",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.ModuleAssetParameter = {
    type: {
        name: "Composite",
        className: "ModuleAssetParameter",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            parameterType: {
                serializedName: "parameterType",
                type: {
                    name: "String"
                }
            },
            modeValuesInfo: {
                serializedName: "modeValuesInfo",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "Composite", className: "ModeValueInfo" } }
                }
            }
        }
    }
};
exports.ModeValueInfo = {
    type: {
        name: "Composite",
        className: "ModeValueInfo",
        modelProperties: {
            interfaceString: {
                serializedName: "interfaceString",
                type: {
                    name: "String"
                }
            },
            parameters: {
                serializedName: "parameters",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ModuleAssetParameter"
                        }
                    }
                }
            }
        }
    }
};
exports.WebServiceParameter = {
    type: {
        name: "Composite",
        className: "WebServiceParameter",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "any" } }
                }
            },
            certificateThumbprint: {
                serializedName: "certificateThumbprint",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.Resource = {
    type: {
        name: "Composite",
        className: "Resource",
        modelProperties: {
            id: {
                serializedName: "id",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                required: true,
                type: {
                    name: "String"
                }
            },
            type: {
                serializedName: "type",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            }
        }
    }
};
exports.PatchedResource = {
    type: {
        name: "Composite",
        className: "PatchedResource",
        modelProperties: {
            id: {
                serializedName: "id",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            type: {
                serializedName: "type",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            }
        }
    }
};
exports.AsyncOperationStatus = {
    type: {
        name: "Composite",
        className: "AsyncOperationStatus",
        modelProperties: {
            id: {
                serializedName: "id",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            provisioningState: {
                serializedName: "provisioningState",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            startTime: {
                serializedName: "startTime",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            },
            endTime: {
                serializedName: "endTime",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            },
            percentComplete: {
                serializedName: "percentComplete",
                readOnly: true,
                type: {
                    name: "Number"
                }
            },
            errorInfo: {
                serializedName: "errorInfo",
                type: {
                    name: "Composite",
                    className: "AsyncOperationErrorInfo"
                }
            }
        }
    }
};
exports.AsyncOperationErrorInfo = {
    type: {
        name: "Composite",
        className: "AsyncOperationErrorInfo",
        modelProperties: {
            code: {
                serializedName: "code",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            target: {
                serializedName: "target",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            message: {
                serializedName: "message",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            details: {
                serializedName: "details",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "AsyncOperationErrorInfo"
                        }
                    }
                }
            }
        }
    }
};
exports.PaginatedWebServicesList = {
    type: {
        name: "Composite",
        className: "PaginatedWebServicesList",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "WebService"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.GraphPackage = {
    type: {
        name: "Composite",
        className: "GraphPackage",
        modelProperties: {
            nodes: {
                serializedName: "nodes",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "Composite", className: "GraphNode" } }
                }
            },
            edges: {
                serializedName: "edges",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "GraphEdge"
                        }
                    }
                }
            },
            graphParameters: {
                serializedName: "graphParameters",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "Composite", className: "GraphParameter" } }
                }
            }
        }
    }
};
exports.GraphNode = {
    type: {
        name: "Composite",
        className: "GraphNode",
        modelProperties: {
            assetId: {
                serializedName: "assetId",
                type: {
                    name: "String"
                }
            },
            inputId: {
                serializedName: "inputId",
                type: {
                    name: "String"
                }
            },
            outputId: {
                serializedName: "outputId",
                type: {
                    name: "String"
                }
            },
            parameters: {
                serializedName: "parameters",
                type: {
                    name: "Dictionary",
                    value: {
                        type: { name: "Composite", className: "WebServiceParameter" }
                    }
                }
            }
        }
    }
};
exports.GraphEdge = {
    type: {
        name: "Composite",
        className: "GraphEdge",
        modelProperties: {
            sourceNodeId: {
                serializedName: "sourceNodeId",
                type: {
                    name: "String"
                }
            },
            sourcePortId: {
                serializedName: "sourcePortId",
                type: {
                    name: "String"
                }
            },
            targetNodeId: {
                serializedName: "targetNodeId",
                type: {
                    name: "String"
                }
            },
            targetPortId: {
                serializedName: "targetPortId",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.GraphParameter = {
    type: {
        name: "Composite",
        className: "GraphParameter",
        modelProperties: {
            description: {
                serializedName: "description",
                type: {
                    name: "String"
                }
            },
            type: {
                serializedName: "type",
                required: true,
                type: {
                    name: "String"
                }
            },
            links: {
                serializedName: "links",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "GraphParameterLink"
                        }
                    }
                }
            }
        }
    }
};
exports.GraphParameterLink = {
    type: {
        name: "Composite",
        className: "GraphParameterLink",
        modelProperties: {
            nodeId: {
                serializedName: "nodeId",
                required: true,
                type: {
                    name: "String"
                }
            },
            parameterKey: {
                serializedName: "parameterKey",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.WebServicePropertiesForGraph = {
    serializedName: "Graph",
    type: {
        name: "Composite",
        className: "WebServicePropertiesForGraph",
        uberParent: "WebServiceProperties",
        polymorphicDiscriminator: exports.WebServiceProperties.type.polymorphicDiscriminator,
        modelProperties: Object.assign(Object.assign({}, exports.WebServiceProperties.type.modelProperties), { package: {
                serializedName: "package",
                type: {
                    name: "Composite",
                    className: "GraphPackage"
                }
            } })
    }
};
exports.WebService = {
    type: {
        name: "Composite",
        className: "WebService",
        modelProperties: Object.assign(Object.assign({}, exports.Resource.type.modelProperties), { properties: {
                serializedName: "properties",
                type: {
                    name: "Composite",
                    className: "WebServiceProperties"
                }
            } })
    }
};
exports.PatchedWebService = {
    type: {
        name: "Composite",
        className: "PatchedWebService",
        modelProperties: Object.assign(Object.assign({}, exports.PatchedResource.type.modelProperties), { properties: {
                serializedName: "properties",
                type: {
                    name: "Composite",
                    className: "WebServiceProperties"
                }
            } })
    }
};
exports.discriminators = {
    WebServiceProperties: exports.WebServiceProperties,
    "WebServiceProperties.Graph": exports.WebServicePropertiesForGraph
};
//# sourceMappingURL=mappers.js.map