{"version":3,"file":"webServices.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/webServices.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { PollerLike, PollOperationState } from \"@azure/core-lro\";\nimport {\n  WebService,\n  WebServicesListByResourceGroupOptionalParams,\n  WebServicesListBySubscriptionIdOptionalParams,\n  WebServicesCreateOrUpdateOptionalParams,\n  WebServicesCreateOrUpdateResponse,\n  WebServicesGetOptionalParams,\n  WebServicesGetResponse,\n  PatchedWebService,\n  WebServicesPatchOptionalParams,\n  WebServicesPatchResponse,\n  WebServicesRemoveOptionalParams,\n  WebServicesCreateRegionalPropertiesOptionalParams,\n  WebServicesCreateRegionalPropertiesResponse,\n  WebServicesListKeysOptionalParams,\n  WebServicesListKeysResponse\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Interface representing a WebServices. */\nexport interface WebServices {\n  /**\n   * Gets the web services in the specified resource group.\n   * @param resourceGroupName Name of the resource group in which the web service is located.\n   * @param options The options parameters.\n   */\n  listByResourceGroup(\n    resourceGroupName: string,\n    options?: WebServicesListByResourceGroupOptionalParams\n  ): PagedAsyncIterableIterator<WebService>;\n  /**\n   * Gets the web services in the specified subscription.\n   * @param options The options parameters.\n   */\n  listBySubscriptionId(\n    options?: WebServicesListBySubscriptionIdOptionalParams\n  ): PagedAsyncIterableIterator<WebService>;\n  /**\n   * Create or update a web service. This call will overwrite an existing web service. Note that there is\n   * no warning or confirmation. This is a nonrecoverable operation. If your intent is to create a new\n   * web service, call the Get operation first to verify that it does not exist.\n   * @param resourceGroupName Name of the resource group in which the web service is located.\n   * @param webServiceName The name of the web service.\n   * @param createOrUpdatePayload The payload that is used to create or update the web service.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdate(\n    resourceGroupName: string,\n    webServiceName: string,\n    createOrUpdatePayload: WebService,\n    options?: WebServicesCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<WebServicesCreateOrUpdateResponse>,\n      WebServicesCreateOrUpdateResponse\n    >\n  >;\n  /**\n   * Create or update a web service. This call will overwrite an existing web service. Note that there is\n   * no warning or confirmation. This is a nonrecoverable operation. If your intent is to create a new\n   * web service, call the Get operation first to verify that it does not exist.\n   * @param resourceGroupName Name of the resource group in which the web service is located.\n   * @param webServiceName The name of the web service.\n   * @param createOrUpdatePayload The payload that is used to create or update the web service.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    webServiceName: string,\n    createOrUpdatePayload: WebService,\n    options?: WebServicesCreateOrUpdateOptionalParams\n  ): Promise<WebServicesCreateOrUpdateResponse>;\n  /**\n   * Gets the Web Service Definition as specified by a subscription, resource group, and name. Note that\n   * the storage credentials and web service keys are not returned by this call. To get the web service\n   * access keys, call List Keys.\n   * @param resourceGroupName Name of the resource group in which the web service is located.\n   * @param webServiceName The name of the web service.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    webServiceName: string,\n    options?: WebServicesGetOptionalParams\n  ): Promise<WebServicesGetResponse>;\n  /**\n   * Modifies an existing web service resource. The PATCH API call is an asynchronous operation. To\n   * determine whether it has completed successfully, you must perform a Get operation.\n   * @param resourceGroupName Name of the resource group in which the web service is located.\n   * @param webServiceName The name of the web service.\n   * @param patchPayload The payload to use to patch the web service.\n   * @param options The options parameters.\n   */\n  beginPatch(\n    resourceGroupName: string,\n    webServiceName: string,\n    patchPayload: PatchedWebService,\n    options?: WebServicesPatchOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<WebServicesPatchResponse>,\n      WebServicesPatchResponse\n    >\n  >;\n  /**\n   * Modifies an existing web service resource. The PATCH API call is an asynchronous operation. To\n   * determine whether it has completed successfully, you must perform a Get operation.\n   * @param resourceGroupName Name of the resource group in which the web service is located.\n   * @param webServiceName The name of the web service.\n   * @param patchPayload The payload to use to patch the web service.\n   * @param options The options parameters.\n   */\n  beginPatchAndWait(\n    resourceGroupName: string,\n    webServiceName: string,\n    patchPayload: PatchedWebService,\n    options?: WebServicesPatchOptionalParams\n  ): Promise<WebServicesPatchResponse>;\n  /**\n   * Deletes the specified web service.\n   * @param resourceGroupName Name of the resource group in which the web service is located.\n   * @param webServiceName The name of the web service.\n   * @param options The options parameters.\n   */\n  beginRemove(\n    resourceGroupName: string,\n    webServiceName: string,\n    options?: WebServicesRemoveOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>>;\n  /**\n   * Deletes the specified web service.\n   * @param resourceGroupName Name of the resource group in which the web service is located.\n   * @param webServiceName The name of the web service.\n   * @param options The options parameters.\n   */\n  beginRemoveAndWait(\n    resourceGroupName: string,\n    webServiceName: string,\n    options?: WebServicesRemoveOptionalParams\n  ): Promise<void>;\n  /**\n   * Creates an encrypted credentials parameter blob for the specified region. To get the web service\n   * from a region other than the region in which it has been created, you must first call Create\n   * Regional Web Services Properties to create a copy of the encrypted credential parameter blob in that\n   * region. You only need to do this before the first time that you get the web service in the new\n   * region.\n   * @param resourceGroupName Name of the resource group in which the web service is located.\n   * @param webServiceName The name of the web service.\n   * @param region The region for which encrypted credential parameters are created.\n   * @param options The options parameters.\n   */\n  beginCreateRegionalProperties(\n    resourceGroupName: string,\n    webServiceName: string,\n    region: string,\n    options?: WebServicesCreateRegionalPropertiesOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<WebServicesCreateRegionalPropertiesResponse>,\n      WebServicesCreateRegionalPropertiesResponse\n    >\n  >;\n  /**\n   * Creates an encrypted credentials parameter blob for the specified region. To get the web service\n   * from a region other than the region in which it has been created, you must first call Create\n   * Regional Web Services Properties to create a copy of the encrypted credential parameter blob in that\n   * region. You only need to do this before the first time that you get the web service in the new\n   * region.\n   * @param resourceGroupName Name of the resource group in which the web service is located.\n   * @param webServiceName The name of the web service.\n   * @param region The region for which encrypted credential parameters are created.\n   * @param options The options parameters.\n   */\n  beginCreateRegionalPropertiesAndWait(\n    resourceGroupName: string,\n    webServiceName: string,\n    region: string,\n    options?: WebServicesCreateRegionalPropertiesOptionalParams\n  ): Promise<WebServicesCreateRegionalPropertiesResponse>;\n  /**\n   * Gets the access keys for the specified web service.\n   * @param resourceGroupName Name of the resource group in which the web service is located.\n   * @param webServiceName The name of the web service.\n   * @param options The options parameters.\n   */\n  listKeys(\n    resourceGroupName: string,\n    webServiceName: string,\n    options?: WebServicesListKeysOptionalParams\n  ): Promise<WebServicesListKeysResponse>;\n}\n"]}