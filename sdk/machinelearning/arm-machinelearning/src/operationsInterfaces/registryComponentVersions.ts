/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  ComponentVersion,
  RegistryComponentVersionsListOptionalParams,
  RegistryComponentVersionsDeleteOptionalParams,
  RegistryComponentVersionsGetOptionalParams,
  RegistryComponentVersionsGetResponse,
  RegistryComponentVersionsCreateOrUpdateOptionalParams,
  RegistryComponentVersionsCreateOrUpdateResponse,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a RegistryComponentVersions. */
export interface RegistryComponentVersions {
  /**
   * List versions.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param registryName Name of Azure Machine Learning registry. This is case-insensitive
   * @param componentName Container name.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    registryName: string,
    componentName: string,
    options?: RegistryComponentVersionsListOptionalParams,
  ): PagedAsyncIterableIterator<ComponentVersion>;
  /**
   * Delete version.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param registryName Name of Azure Machine Learning registry. This is case-insensitive
   * @param componentName Container name.
   * @param version Version identifier.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    registryName: string,
    componentName: string,
    version: string,
    options?: RegistryComponentVersionsDeleteOptionalParams,
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Delete version.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param registryName Name of Azure Machine Learning registry. This is case-insensitive
   * @param componentName Container name.
   * @param version Version identifier.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    registryName: string,
    componentName: string,
    version: string,
    options?: RegistryComponentVersionsDeleteOptionalParams,
  ): Promise<void>;
  /**
   * Get version.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param registryName Name of Azure Machine Learning registry. This is case-insensitive
   * @param componentName Container name.
   * @param version Version identifier.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    registryName: string,
    componentName: string,
    version: string,
    options?: RegistryComponentVersionsGetOptionalParams,
  ): Promise<RegistryComponentVersionsGetResponse>;
  /**
   * Create or update version.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param registryName Name of Azure Machine Learning registry. This is case-insensitive
   * @param componentName Container name.
   * @param version Version identifier.
   * @param body Version entity to create or update.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    registryName: string,
    componentName: string,
    version: string,
    body: ComponentVersion,
    options?: RegistryComponentVersionsCreateOrUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<RegistryComponentVersionsCreateOrUpdateResponse>,
      RegistryComponentVersionsCreateOrUpdateResponse
    >
  >;
  /**
   * Create or update version.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param registryName Name of Azure Machine Learning registry. This is case-insensitive
   * @param componentName Container name.
   * @param version Version identifier.
   * @param body Version entity to create or update.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    registryName: string,
    componentName: string,
    version: string,
    body: ComponentVersion,
    options?: RegistryComponentVersionsCreateOrUpdateOptionalParams,
  ): Promise<RegistryComponentVersionsCreateOrUpdateResponse>;
}
