/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  CommitmentAssociation,
  CommitmentAssociationsListOptionalParams,
  CommitmentAssociationsGetOptionalParams,
  CommitmentAssociationsGetResponse,
  MoveCommitmentAssociationRequest,
  CommitmentAssociationsMoveOptionalParams,
  CommitmentAssociationsMoveResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a CommitmentAssociations. */
export interface CommitmentAssociations {
  /**
   * Get all commitment associations for a parent commitment plan.
   * @param resourceGroupName The resource group name.
   * @param commitmentPlanName The Azure ML commitment plan name.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    commitmentPlanName: string,
    options?: CommitmentAssociationsListOptionalParams
  ): PagedAsyncIterableIterator<CommitmentAssociation>;
  /**
   * Get a commitment association.
   * @param resourceGroupName The resource group name.
   * @param commitmentPlanName The Azure ML commitment plan name.
   * @param commitmentAssociationName The commitment association name.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    commitmentPlanName: string,
    commitmentAssociationName: string,
    options?: CommitmentAssociationsGetOptionalParams
  ): Promise<CommitmentAssociationsGetResponse>;
  /**
   * Re-parent a commitment association from one commitment plan to another.
   * @param resourceGroupName The resource group name.
   * @param commitmentPlanName The Azure ML commitment plan name.
   * @param commitmentAssociationName The commitment association name.
   * @param movePayload The move request payload.
   * @param options The options parameters.
   */
  move(
    resourceGroupName: string,
    commitmentPlanName: string,
    commitmentAssociationName: string,
    movePayload: MoveCommitmentAssociationRequest,
    options?: CommitmentAssociationsMoveOptionalParams
  ): Promise<CommitmentAssociationsMoveResponse>;
}
