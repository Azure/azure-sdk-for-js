/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

/** The list of REST API operations. */
export interface OperationEntityListResult {
  /**
   * The list of operations.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: OperationEntity[];
}

/** An API operation. */
export interface OperationEntity {
  /**
   * Operation name: {provider}/{resource}/{operation}.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /** The API operation info. */
  display?: OperationDisplayInfo;
}

/** The API operation info. */
export interface OperationDisplayInfo {
  /**
   * The description of the operation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
  /**
   * The action that users can perform, based on their permission level.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly operation?: string;
  /**
   * The service provider.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provider?: string;
  /**
   * The resource on which the operation is performed.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resource?: string;
}

/** The list of commitment plan SKUs. */
export interface SkuListResult {
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly value?: CatalogSku[];
}

/** Details of a commitment plan SKU. */
export interface CatalogSku {
  /**
   * Resource type name
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resourceType?: string;
  /**
   * SKU name
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * SKU tier
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly tier?: string;
  /**
   * Regions where the SKU is available.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly locations?: string[];
  /**
   * SKU scaling information
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly capacity?: SkuCapacity;
  /**
   * The capability information for the specified SKU.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly capabilities?: SkuCapability[];
  /**
   * The cost information for the specified SKU.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly costs?: SkuCost[];
  /**
   * Restrictions which would prevent a SKU from being used. This is empty if there are no restrictions.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly restrictions?: SkuRestrictions[];
}

/** Describes scaling information of a SKU. */
export interface SkuCapacity {
  /**
   * The minimum capacity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly minimum?: number;
  /**
   * The maximum capacity that can be set.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly maximum?: number;
  /**
   * The default capacity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly default?: number;
  /**
   * The scale type applicable to the sku.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly scaleType?: SkuCapacityScaleType;
}

/** Describes The SKU capabilities object. */
export interface SkuCapability {
  /**
   * The capability name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The capability value.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: string;
}

/** Describes metadata for SKU cost info. */
export interface SkuCost {
  /**
   * The meter used for this part of a SKU's cost.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly meterID?: string;
  /**
   * The multiplier for the meter ID.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly quantity?: number;
  /**
   * The overall duration represented by the quantity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly extendedUnit?: string;
}

/** Describes restrictions which would prevent a SKU from being used. */
export interface SkuRestrictions {
  /**
   * The type of restrictions.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: ResourceSkuRestrictionsType;
  /**
   * The value of restrictions. If the restriction type is set to location. This would be different locations where the SKU is restricted.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly values?: string[];
  /**
   * The reason for restriction.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly reasonCode?: ResourceSkuRestrictionsReasonCode;
}

/** Properties of an Azure ML commitment association. */
export interface CommitmentAssociationProperties {
  /**
   * The ID of the resource this association points to, such as the ARM ID of an Azure ML web service.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly associatedResourceId?: string;
  /**
   * The ARM ID of the parent Azure ML commitment plan.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly commitmentPlanId?: string;
  /**
   * The date at which this commitment association was created, in ISO 8601 format.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly creationDate?: Date;
}

/** Common properties of an ARM resource. */
export interface Resource {
  /**
   * Resource Id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * Resource name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /** Resource location. */
  location: string;
  /**
   * Resource type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /** User-defined tags for the resource. */
  tags?: { [propertyName: string]: string };
}

/** A page of commitment association resources. */
export interface CommitmentAssociationListResult {
  /** A URI to retrieve the next page of results. */
  nextLink?: string;
  /** The set of results for this page. */
  value?: CommitmentAssociation[];
}

/** Specifies the destination Azure ML commitment plan for a move operation. */
export interface MoveCommitmentAssociationRequest {
  /** The ARM ID of the commitment plan to re-parent the commitment association to. */
  destinationPlanId?: string;
}

/** Properties of an Azure ML commitment plan. */
export interface CommitmentPlanProperties {
  /**
   * Indicates whether usage beyond the commitment plan's included quantities will be charged.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly chargeForOverage?: boolean;
  /**
   * Indicates whether the commitment plan will incur a charge.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly chargeForPlan?: boolean;
  /**
   * The date at which this commitment plan was created, in ISO 8601 format.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly creationDate?: Date;
  /**
   * The included resource quantities this plan gives you.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly includedQuantities?: { [propertyName: string]: PlanQuantity };
  /**
   * The maximum number of commitment associations that can be children of this commitment plan.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly maxAssociationLimit?: number;
  /**
   * The maximum scale-out capacity for this commitment plan.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly maxCapacityLimit?: number;
  /**
   * The minimum scale-out capacity for this commitment plan.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly minCapacityLimit?: number;
  /**
   * The Azure meter which will be used to charge for this commitment plan.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly planMeter?: string;
  /**
   * The frequency at which this commitment plan's included quantities are refilled.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly refillFrequencyInDays?: number;
  /**
   * Indicates whether this commitment plan will be moved into a suspended state if usage goes beyond the commitment plan's included quantities.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly suspendPlanOnOverage?: boolean;
}

/** Represents the quantity a commitment plan provides of a metered resource. */
export interface PlanQuantity {
  /**
   * The quantity added to the commitment plan at an interval specified by its allowance frequency.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly allowance?: number;
  /**
   * The quantity available to the plan the last time usage was calculated.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly amount?: number;
  /**
   * The Azure meter for usage against included quantities.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly includedQuantityMeter?: string;
  /**
   * The Azure meter for usage which exceeds included quantities.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly overageMeter?: string;
}

/** The SKU of a resource. */
export interface ResourceSku {
  /** The scale-out capacity of the resource. 1 is 1x, 2 is 2x, etc. This impacts the quantities and cost of any commitment plan resource. */
  capacity?: number;
  /** The SKU name. Along with tier, uniquely identifies the SKU. */
  name?: string;
  /** The SKU tier. Along with name, uniquely identifies the SKU. */
  tier?: string;
}

/** The properties of a commitment plan which may be updated via PATCH. */
export interface CommitmentPlanPatchPayload {
  /** User-defined tags for the commitment plan. */
  tags?: { [propertyName: string]: string };
  /** The commitment plan SKU. */
  sku?: ResourceSku;
}

/** A page of commitment plan resources. */
export interface CommitmentPlanListResult {
  /** A URI to retrieve the next page of results. */
  nextLink?: string;
  /** The set of results for this page. */
  value?: CommitmentPlan[];
}

/** A page of usage history. */
export interface PlanUsageHistoryListResult {
  /** A URI to retrieve the next page of results. */
  nextLink?: string;
  /** The set of results for this page. */
  value?: PlanUsageHistory[];
}

/** Represents historical information about usage of the Azure resources associated with a commitment plan. */
export interface PlanUsageHistory {
  /** Overage incurred as a result of deleting a commitment plan. */
  planDeletionOverage?: { [propertyName: string]: number };
  /** Overage incurred as a result of migrating a commitment plan from one SKU to another. */
  planMigrationOverage?: { [propertyName: string]: number };
  /** Included quantities remaining after usage against the commitment plan's associated resources was calculated. */
  planQuantitiesAfterUsage?: { [propertyName: string]: number };
  /** Included quantities remaining before usage against the commitment plan's associated resources was calculated. */
  planQuantitiesBeforeUsage?: { [propertyName: string]: number };
  /** Usage against the commitment plan's associated resources which was not covered by included quantities and is therefore overage. */
  planUsageOverage?: { [propertyName: string]: number };
  /** Usage against the commitment plan's associated resources. */
  usage?: { [propertyName: string]: number };
  /** The date of usage, in ISO 8601 format. */
  usageDate?: Date;
}

/** Represents the association between a commitment plan and some other resource, such as a Machine Learning web service. */
export type CommitmentAssociation = Resource & {
  /** An entity tag used to enforce optimistic concurrency. */
  etag?: string;
  /** The properties of the commitment association resource. */
  properties?: CommitmentAssociationProperties;
};

/** An Azure ML commitment plan resource. */
export type CommitmentPlan = Resource & {
  /** An entity tag used to enforce optimistic concurrency. */
  etag?: string;
  /**
   * The commitment plan properties.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly properties?: CommitmentPlanProperties;
  /** The commitment plan SKU. */
  sku?: ResourceSku;
};

/** Known values of {@link SkuCapacityScaleType} that the service accepts. */
export enum KnownSkuCapacityScaleType {
  Automatic = "Automatic",
  Manual = "Manual",
  None = "None"
}

/**
 * Defines values for SkuCapacityScaleType. \
 * {@link KnownSkuCapacityScaleType} can be used interchangeably with SkuCapacityScaleType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Automatic** \
 * **Manual** \
 * **None**
 */
export type SkuCapacityScaleType = string;

/** Known values of {@link ResourceSkuRestrictionsType} that the service accepts. */
export enum KnownResourceSkuRestrictionsType {
  Location = "location",
  Zone = "zone"
}

/**
 * Defines values for ResourceSkuRestrictionsType. \
 * {@link KnownResourceSkuRestrictionsType} can be used interchangeably with ResourceSkuRestrictionsType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **location** \
 * **zone**
 */
export type ResourceSkuRestrictionsType = string;

/** Known values of {@link ResourceSkuRestrictionsReasonCode} that the service accepts. */
export enum KnownResourceSkuRestrictionsReasonCode {
  QuotaId = "QuotaId",
  NotAvailableForSubscription = "NotAvailableForSubscription"
}

/**
 * Defines values for ResourceSkuRestrictionsReasonCode. \
 * {@link KnownResourceSkuRestrictionsReasonCode} can be used interchangeably with ResourceSkuRestrictionsReasonCode,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **QuotaId** \
 * **NotAvailableForSubscription**
 */
export type ResourceSkuRestrictionsReasonCode = string;

/** Optional parameters. */
export interface OperationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type OperationsListResponse = OperationEntityListResult;

/** Optional parameters. */
export interface SkusListOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type SkusListResponse = SkuListResult;

/** Optional parameters. */
export interface CommitmentAssociationsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type CommitmentAssociationsGetResponse = CommitmentAssociation;

/** Optional parameters. */
export interface CommitmentAssociationsListOptionalParams
  extends coreClient.OperationOptions {
  /** Continuation token for pagination. */
  skipToken?: string;
}

/** Contains response data for the list operation. */
export type CommitmentAssociationsListResponse = CommitmentAssociationListResult;

/** Optional parameters. */
export interface CommitmentAssociationsMoveOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the move operation. */
export type CommitmentAssociationsMoveResponse = CommitmentAssociation;

/** Optional parameters. */
export interface CommitmentAssociationsListNextOptionalParams
  extends coreClient.OperationOptions {
  /** Continuation token for pagination. */
  skipToken?: string;
}

/** Contains response data for the listNext operation. */
export type CommitmentAssociationsListNextResponse = CommitmentAssociationListResult;

/** Optional parameters. */
export interface CommitmentPlansGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type CommitmentPlansGetResponse = CommitmentPlan;

/** Optional parameters. */
export interface CommitmentPlansCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the createOrUpdate operation. */
export type CommitmentPlansCreateOrUpdateResponse = CommitmentPlan;

/** Optional parameters. */
export interface CommitmentPlansRemoveOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface CommitmentPlansPatchOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the patch operation. */
export type CommitmentPlansPatchResponse = CommitmentPlan;

/** Optional parameters. */
export interface CommitmentPlansListOptionalParams
  extends coreClient.OperationOptions {
  /** Continuation token for pagination. */
  skipToken?: string;
}

/** Contains response data for the list operation. */
export type CommitmentPlansListResponse = CommitmentPlanListResult;

/** Optional parameters. */
export interface CommitmentPlansListInResourceGroupOptionalParams
  extends coreClient.OperationOptions {
  /** Continuation token for pagination. */
  skipToken?: string;
}

/** Contains response data for the listInResourceGroup operation. */
export type CommitmentPlansListInResourceGroupResponse = CommitmentPlanListResult;

/** Optional parameters. */
export interface CommitmentPlansListNextOptionalParams
  extends coreClient.OperationOptions {
  /** Continuation token for pagination. */
  skipToken?: string;
}

/** Contains response data for the listNext operation. */
export type CommitmentPlansListNextResponse = CommitmentPlanListResult;

/** Optional parameters. */
export interface CommitmentPlansListInResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {
  /** Continuation token for pagination. */
  skipToken?: string;
}

/** Contains response data for the listInResourceGroupNext operation. */
export type CommitmentPlansListInResourceGroupNextResponse = CommitmentPlanListResult;

/** Optional parameters. */
export interface UsageHistoryListOptionalParams
  extends coreClient.OperationOptions {
  /** Continuation token for pagination. */
  skipToken?: string;
}

/** Contains response data for the list operation. */
export type UsageHistoryListResponse = PlanUsageHistoryListResult;

/** Optional parameters. */
export interface UsageHistoryListNextOptionalParams
  extends coreClient.OperationOptions {
  /** Continuation token for pagination. */
  skipToken?: string;
}

/** Contains response data for the listNext operation. */
export type UsageHistoryListNextResponse = PlanUsageHistoryListResult;

/** Optional parameters. */
export interface AzureMLCommitmentPlansManagementClientOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
