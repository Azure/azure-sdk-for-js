/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };

/**
 * Describes scaling information of a SKU.
 */
export interface SkuCapacity {
  /**
   * The minimum capacity.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly minimum?: number;
  /**
   * The maximum capacity that can be set.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly maximum?: number;
  /**
   * The default capacity.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly default?: number;
  /**
   * The scale type applicable to the sku. Possible values include: 'Automatic', 'Manual', 'None'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly scaleType?: SkuCapacityScaleType;
}

/**
 * Describes The SKU capabilities object.
 */
export interface SkuCapability {
  /**
   * The capability name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The capability value.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly value?: string;
}

/**
 * Describes metadata for SKU cost info.
 */
export interface SkuCost {
  /**
   * The meter used for this part of a SKU's cost.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly meterID?: string;
  /**
   * The multiplier for the meter ID.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly quantity?: number;
  /**
   * The overall duration represented by the quantity.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly extendedUnit?: string;
}

/**
 * Describes restrictions which would prevent a SKU from being used.
 */
export interface SkuRestrictions {
  /**
   * The type of restrictions. Possible values include: 'location', 'zone'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: ResourceSkuRestrictionsType;
  /**
   * The value of restrictions. If the restriction type is set to location. This would be different
   * locations where the SKU is restricted.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly values?: string[];
  /**
   * The reason for restriction. Possible values include: 'QuotaId', 'NotAvailableForSubscription'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly reasonCode?: ResourceSkuRestrictionsReasonCode;
}

/**
 * Details of a commitment plan SKU.
 */
export interface CatalogSku {
  /**
   * Resource type name
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly resourceType?: string;
  /**
   * SKU name
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * SKU tier
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly tier?: string;
  /**
   * Regions where the SKU is available.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly locations?: string[];
  /**
   * SKU scaling information
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly capacity?: SkuCapacity;
  /**
   * The capability information for the specified SKU.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly capabilities?: SkuCapability[];
  /**
   * The cost information for the specified SKU.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly costs?: SkuCost[];
  /**
   * Restrictions which would prevent a SKU from being used. This is empty if there are no
   * restrictions.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly restrictions?: SkuRestrictions[];
}

/**
 * Common properties of an ARM resource.
 */
export interface Resource extends BaseResource {
  /**
   * Resource Id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Resource name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Resource location.
   */
  location: string;
  /**
   * Resource type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * User-defined tags for the resource.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * Properties of an Azure ML commitment association.
 */
export interface CommitmentAssociationProperties {
  /**
   * The ID of the resource this association points to, such as the ARM ID of an Azure ML web
   * service.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly associatedResourceId?: string;
  /**
   * The ARM ID of the parent Azure ML commitment plan.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly commitmentPlanId?: string;
  /**
   * The date at which this commitment association was created, in ISO 8601 format.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly creationDate?: Date;
}

/**
 * Represents the association between a commitment plan and some other resource, such as a Machine
 * Learning web service.
 */
export interface CommitmentAssociation extends Resource {
  /**
   * An entity tag used to enforce optimistic concurrency.
   */
  etag?: string;
  /**
   * The properties of the commitment association resource.
   */
  properties?: CommitmentAssociationProperties;
}

/**
 * The SKU of a resource.
 */
export interface ResourceSku {
  /**
   * The scale-out capacity of the resource. 1 is 1x, 2 is 2x, etc. This impacts the quantities and
   * cost of any commitment plan resource.
   */
  capacity?: number;
  /**
   * The SKU name. Along with tier, uniquely identifies the SKU.
   */
  name?: string;
  /**
   * The SKU tier. Along with name, uniquely identifies the SKU.
   */
  tier?: string;
}

/**
 * Specifies the destination Azure ML commitment plan for a move operation.
 */
export interface MoveCommitmentAssociationRequest {
  /**
   * The ARM ID of the commitment plan to re-parent the commitment association to.
   */
  destinationPlanId?: string;
}

/**
 * The properties of a commitment plan which may be updated via PATCH.
 */
export interface CommitmentPlanPatchPayload {
  /**
   * User-defined tags for the commitment plan.
   */
  tags?: { [propertyName: string]: string };
  /**
   * The commitment plan SKU.
   */
  sku?: ResourceSku;
}

/**
 * Represents the quantity a commitment plan provides of a metered resource.
 */
export interface PlanQuantity {
  /**
   * The quantity added to the commitment plan at an interval specified by its allowance frequency.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly allowance?: number;
  /**
   * The quantity available to the plan the last time usage was calculated.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly amount?: number;
  /**
   * The Azure meter for usage against included quantities.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly includedQuantityMeter?: string;
  /**
   * The Azure meter for usage which exceeds included quantities.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly overageMeter?: string;
}

/**
 * Properties of an Azure ML commitment plan.
 */
export interface CommitmentPlanProperties {
  /**
   * Indicates whether usage beyond the commitment plan's included quantities will be charged.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly chargeForOverage?: boolean;
  /**
   * Indicates whether the commitment plan will incur a charge.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly chargeForPlan?: boolean;
  /**
   * The date at which this commitment plan was created, in ISO 8601 format.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly creationDate?: Date;
  /**
   * The included resource quantities this plan gives you.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly includedQuantities?: { [propertyName: string]: PlanQuantity };
  /**
   * The maximum number of commitment associations that can be children of this commitment plan.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly maxAssociationLimit?: number;
  /**
   * The maximum scale-out capacity for this commitment plan.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly maxCapacityLimit?: number;
  /**
   * The minimum scale-out capacity for this commitment plan.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly minCapacityLimit?: number;
  /**
   * The Azure meter which will be used to charge for this commitment plan.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly planMeter?: string;
  /**
   * The frequency at which this commitment plan's included quantities are refilled.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly refillFrequencyInDays?: number;
  /**
   * Indicates whether this commitment plan will be moved into a suspended state if usage goes
   * beyond the commitment plan's included quantities.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly suspendPlanOnOverage?: boolean;
}

/**
 * An Azure ML commitment plan resource.
 */
export interface CommitmentPlan extends Resource {
  /**
   * An entity tag used to enforce optimistic concurrency.
   */
  etag?: string;
  /**
   * The commitment plan properties.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly properties?: CommitmentPlanProperties;
  /**
   * The commitment plan SKU.
   */
  sku?: ResourceSku;
}

/**
 * Represents historical information about usage of the Azure resources associated with a
 * commitment plan.
 */
export interface PlanUsageHistory {
  /**
   * Overage incurred as a result of deleting a commitment plan.
   */
  planDeletionOverage?: { [propertyName: string]: number };
  /**
   * Overage incurred as a result of migrating a commitment plan from one SKU to another.
   */
  planMigrationOverage?: { [propertyName: string]: number };
  /**
   * Included quantities remaining after usage against the commitment plan's associated resources
   * was calculated.
   */
  planQuantitiesAfterUsage?: { [propertyName: string]: number };
  /**
   * Included quantities remaining before usage against the commitment plan's associated resources
   * was calculated.
   */
  planQuantitiesBeforeUsage?: { [propertyName: string]: number };
  /**
   * Usage against the commitment plan's associated resources which was not covered by included
   * quantities and is therefore overage.
   */
  planUsageOverage?: { [propertyName: string]: number };
  /**
   * Usage against the commitment plan's associated resources.
   */
  usage?: { [propertyName: string]: number };
  /**
   * The date of usage, in ISO 8601 format.
   */
  usageDate?: Date;
}

/**
 * The API operation info.
 */
export interface OperationDisplayInfo {
  /**
   * The description of the operation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * The action that users can perform, based on their permission level.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly operation?: string;
  /**
   * The service provider.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provider?: string;
  /**
   * The resource on which the operation is performed.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly resource?: string;
}

/**
 * An API operation.
 */
export interface OperationEntity {
  /**
   * Operation name: {provider}/{resource}/{operation}.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The API operation info.
   */
  display?: OperationDisplayInfo;
}

/**
 * Optional Parameters.
 */
export interface CommitmentAssociationsListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Continuation token for pagination.
   */
  skipToken?: string;
}

/**
 * Optional Parameters.
 */
export interface CommitmentPlansListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Continuation token for pagination.
   */
  skipToken?: string;
}

/**
 * Optional Parameters.
 */
export interface CommitmentPlansListInResourceGroupOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Continuation token for pagination.
   */
  skipToken?: string;
}

/**
 * Optional Parameters.
 */
export interface UsageHistoryListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Continuation token for pagination.
   */
  skipToken?: string;
}

/**
 * An interface representing AzureMLCommitmentPlansManagementClientOptions.
 */
export interface AzureMLCommitmentPlansManagementClientOptions extends AzureServiceClientOptions {
  baseUri?: string;
}

/**
 * @interface
 * The list of REST API operations.
 * @extends Array<OperationEntity>
 */
export interface OperationEntityListResult extends Array<OperationEntity> {
}

/**
 * @interface
 * The list of commitment plan SKUs.
 * @extends Array<CatalogSku>
 */
export interface SkuListResult extends Array<CatalogSku> {
}

/**
 * @interface
 * A page of commitment association resources.
 * @extends Array<CommitmentAssociation>
 */
export interface CommitmentAssociationListResult extends Array<CommitmentAssociation> {
  /**
   * A URI to retrieve the next page of results.
   */
  nextLink?: string;
}

/**
 * @interface
 * A page of commitment plan resources.
 * @extends Array<CommitmentPlan>
 */
export interface CommitmentPlanListResult extends Array<CommitmentPlan> {
  /**
   * A URI to retrieve the next page of results.
   */
  nextLink?: string;
}

/**
 * @interface
 * A page of usage history.
 * @extends Array<PlanUsageHistory>
 */
export interface PlanUsageHistoryListResult extends Array<PlanUsageHistory> {
  /**
   * A URI to retrieve the next page of results.
   */
  nextLink?: string;
}

/**
 * Defines values for SkuCapacityScaleType.
 * Possible values include: 'Automatic', 'Manual', 'None'
 * @readonly
 * @enum {string}
 */
export type SkuCapacityScaleType = 'Automatic' | 'Manual' | 'None';

/**
 * Defines values for ResourceSkuRestrictionsType.
 * Possible values include: 'location', 'zone'
 * @readonly
 * @enum {string}
 */
export type ResourceSkuRestrictionsType = 'location' | 'zone';

/**
 * Defines values for ResourceSkuRestrictionsReasonCode.
 * Possible values include: 'QuotaId', 'NotAvailableForSubscription'
 * @readonly
 * @enum {string}
 */
export type ResourceSkuRestrictionsReasonCode = 'QuotaId' | 'NotAvailableForSubscription';

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationEntityListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationEntityListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type SkusListResponse = SkuListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SkuListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type CommitmentAssociationsGetResponse = CommitmentAssociation & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CommitmentAssociation;
    };
};

/**
 * Contains response data for the list operation.
 */
export type CommitmentAssociationsListResponse = CommitmentAssociationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CommitmentAssociationListResult;
    };
};

/**
 * Contains response data for the move operation.
 */
export type CommitmentAssociationsMoveResponse = CommitmentAssociation & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CommitmentAssociation;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type CommitmentAssociationsListNextResponse = CommitmentAssociationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CommitmentAssociationListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type CommitmentPlansGetResponse = CommitmentPlan & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CommitmentPlan;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type CommitmentPlansCreateOrUpdateResponse = CommitmentPlan & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CommitmentPlan;
    };
};

/**
 * Contains response data for the patch operation.
 */
export type CommitmentPlansPatchResponse = CommitmentPlan & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CommitmentPlan;
    };
};

/**
 * Contains response data for the list operation.
 */
export type CommitmentPlansListResponse = CommitmentPlanListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CommitmentPlanListResult;
    };
};

/**
 * Contains response data for the listInResourceGroup operation.
 */
export type CommitmentPlansListInResourceGroupResponse = CommitmentPlanListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CommitmentPlanListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type CommitmentPlansListNextResponse = CommitmentPlanListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CommitmentPlanListResult;
    };
};

/**
 * Contains response data for the listInResourceGroupNext operation.
 */
export type CommitmentPlansListInResourceGroupNextResponse = CommitmentPlanListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CommitmentPlanListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type UsageHistoryListResponse = PlanUsageHistoryListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PlanUsageHistoryListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type UsageHistoryListNextResponse = PlanUsageHistoryListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PlanUsageHistoryListResult;
    };
};
