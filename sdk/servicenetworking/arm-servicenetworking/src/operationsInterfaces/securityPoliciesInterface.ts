/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  SecurityPolicy,
  SecurityPoliciesInterfaceListByTrafficControllerOptionalParams,
  SecurityPoliciesInterfaceGetOptionalParams,
  SecurityPoliciesInterfaceGetResponse,
  SecurityPoliciesInterfaceCreateOrUpdateOptionalParams,
  SecurityPoliciesInterfaceCreateOrUpdateResponse,
  SecurityPolicyUpdate,
  SecurityPoliciesInterfaceUpdateOptionalParams,
  SecurityPoliciesInterfaceUpdateResponse,
  SecurityPoliciesInterfaceDeleteOptionalParams,
  SecurityPoliciesInterfaceDeleteResponse,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a SecurityPoliciesInterface. */
export interface SecurityPoliciesInterface {
  /**
   * List SecurityPolicy resources by TrafficController
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param trafficControllerName traffic controller name for path
   * @param options The options parameters.
   */
  listByTrafficController(
    resourceGroupName: string,
    trafficControllerName: string,
    options?: SecurityPoliciesInterfaceListByTrafficControllerOptionalParams,
  ): PagedAsyncIterableIterator<SecurityPolicy>;
  /**
   * Get a SecurityPolicy
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param trafficControllerName traffic controller name for path
   * @param securityPolicyName SecurityPolicy
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    trafficControllerName: string,
    securityPolicyName: string,
    options?: SecurityPoliciesInterfaceGetOptionalParams,
  ): Promise<SecurityPoliciesInterfaceGetResponse>;
  /**
   * Create a SecurityPolicy
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param trafficControllerName traffic controller name for path
   * @param securityPolicyName SecurityPolicy
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    trafficControllerName: string,
    securityPolicyName: string,
    resource: SecurityPolicy,
    options?: SecurityPoliciesInterfaceCreateOrUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<SecurityPoliciesInterfaceCreateOrUpdateResponse>,
      SecurityPoliciesInterfaceCreateOrUpdateResponse
    >
  >;
  /**
   * Create a SecurityPolicy
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param trafficControllerName traffic controller name for path
   * @param securityPolicyName SecurityPolicy
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    trafficControllerName: string,
    securityPolicyName: string,
    resource: SecurityPolicy,
    options?: SecurityPoliciesInterfaceCreateOrUpdateOptionalParams,
  ): Promise<SecurityPoliciesInterfaceCreateOrUpdateResponse>;
  /**
   * Update a SecurityPolicy
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param trafficControllerName traffic controller name for path
   * @param securityPolicyName SecurityPolicy
   * @param properties The resource properties to be updated.
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    trafficControllerName: string,
    securityPolicyName: string,
    properties: SecurityPolicyUpdate,
    options?: SecurityPoliciesInterfaceUpdateOptionalParams,
  ): Promise<SecurityPoliciesInterfaceUpdateResponse>;
  /**
   * Delete a SecurityPolicy
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param trafficControllerName traffic controller name for path
   * @param securityPolicyName SecurityPolicy
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    trafficControllerName: string,
    securityPolicyName: string,
    options?: SecurityPoliciesInterfaceDeleteOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<SecurityPoliciesInterfaceDeleteResponse>,
      SecurityPoliciesInterfaceDeleteResponse
    >
  >;
  /**
   * Delete a SecurityPolicy
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param trafficControllerName traffic controller name for path
   * @param securityPolicyName SecurityPolicy
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    trafficControllerName: string,
    securityPolicyName: string,
    options?: SecurityPoliciesInterfaceDeleteOptionalParams,
  ): Promise<SecurityPoliciesInterfaceDeleteResponse>;
}
