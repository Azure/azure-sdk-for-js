/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { CloudErrorMapper, BaseResourceMapper } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export const CloudError = CloudErrorMapper;
export const BaseResource = BaseResourceMapper;

export const OperationValue: msRest.CompositeMapper = {
  serializedName: "OperationValue",
  type: {
    name: "Composite",
    className: "OperationValue",
    modelProperties: {
      origin: {
        readOnly: true,
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      operation: {
        readOnly: true,
        serializedName: "display.operation",
        type: {
          name: "String"
        }
      },
      resource: {
        readOnly: true,
        serializedName: "display.resource",
        type: {
          name: "String"
        }
      },
      description: {
        readOnly: true,
        serializedName: "display.description",
        type: {
          name: "String"
        }
      },
      provider: {
        readOnly: true,
        serializedName: "display.provider",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationValueDisplayModel: msRest.CompositeMapper = {
  serializedName: "OperationValueDisplay",
  type: {
    name: "Composite",
    className: "OperationValueDisplayModel",
    modelProperties: {
      operation: {
        readOnly: true,
        serializedName: "operation",
        type: {
          name: "String"
        }
      },
      resource: {
        readOnly: true,
        serializedName: "resource",
        type: {
          name: "String"
        }
      },
      description: {
        readOnly: true,
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      provider: {
        readOnly: true,
        serializedName: "provider",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OSProfile: msRest.CompositeMapper = {
  serializedName: "OSProfile",
  type: {
    name: "Composite",
    className: "OSProfile",
    modelProperties: {
      computerName: {
        readOnly: true,
        serializedName: "computerName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LocationData: msRest.CompositeMapper = {
  serializedName: "locationData",
  type: {
    name: "Composite",
    className: "LocationData",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        constraints: {
          MaxLength: 256
        },
        type: {
          name: "String"
        }
      },
      city: {
        serializedName: "city",
        type: {
          name: "String"
        }
      },
      district: {
        serializedName: "district",
        type: {
          name: "String"
        }
      },
      countryOrRegion: {
        serializedName: "countryOrRegion",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MachinePropertiesOsProfile: msRest.CompositeMapper = {
  serializedName: "MachineProperties_osProfile",
  type: {
    name: "Composite",
    className: "MachinePropertiesOsProfile",
    modelProperties: {
      ...OSProfile.type.modelProperties
    }
  }
};

export const ErrorDetail: msRest.CompositeMapper = {
  serializedName: "ErrorDetail",
  type: {
    name: "Composite",
    className: "ErrorDetail",
    modelProperties: {
      code: {
        required: true,
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        required: true,
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        type: {
          name: "String"
        }
      },
      details: {
        serializedName: "details",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorDetail"
            }
          }
        }
      }
    }
  }
};

export const MachineExtensionInstanceViewStatus: msRest.CompositeMapper = {
  serializedName: "MachineExtensionInstanceView_status",
  type: {
    name: "Composite",
    className: "MachineExtensionInstanceViewStatus",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      level: {
        serializedName: "level",
        type: {
          name: "String"
        }
      },
      displayStatus: {
        serializedName: "displayStatus",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      time: {
        serializedName: "time",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const MachineExtensionInstanceView: msRest.CompositeMapper = {
  serializedName: "MachineExtensionInstanceView",
  type: {
    name: "Composite",
    className: "MachineExtensionInstanceView",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      typeHandlerVersion: {
        serializedName: "typeHandlerVersion",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "Composite",
          className: "MachineExtensionInstanceViewStatus"
        }
      }
    }
  }
};

export const MachineProperties: msRest.CompositeMapper = {
  serializedName: "MachineProperties",
  type: {
    name: "Composite",
    className: "MachineProperties",
    modelProperties: {
      locationData: {
        serializedName: "locationData",
        type: {
          name: "Composite",
          className: "LocationData"
        }
      },
      osProfile: {
        serializedName: "osProfile",
        type: {
          name: "Composite",
          className: "MachinePropertiesOsProfile"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "provisioningState",
        type: {
          name: "String"
        }
      },
      status: {
        readOnly: true,
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      lastStatusChange: {
        readOnly: true,
        serializedName: "lastStatusChange",
        type: {
          name: "DateTime"
        }
      },
      errorDetails: {
        readOnly: true,
        serializedName: "errorDetails",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorDetail"
            }
          }
        }
      },
      agentVersion: {
        readOnly: true,
        serializedName: "agentVersion",
        type: {
          name: "String"
        }
      },
      vmId: {
        serializedName: "vmId",
        type: {
          name: "String"
        }
      },
      displayName: {
        readOnly: true,
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      machineFqdn: {
        readOnly: true,
        serializedName: "machineFqdn",
        type: {
          name: "String"
        }
      },
      clientPublicKey: {
        serializedName: "clientPublicKey",
        type: {
          name: "String"
        }
      },
      osName: {
        readOnly: true,
        serializedName: "osName",
        type: {
          name: "String"
        }
      },
      osVersion: {
        readOnly: true,
        serializedName: "osVersion",
        type: {
          name: "String"
        }
      },
      vmUuid: {
        readOnly: true,
        serializedName: "vmUuid",
        type: {
          name: "String"
        }
      },
      extensions: {
        serializedName: "extensions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MachineExtensionInstanceView"
            }
          }
        }
      },
      osSku: {
        readOnly: true,
        serializedName: "osSku",
        type: {
          name: "String"
        }
      },
      domainName: {
        readOnly: true,
        serializedName: "domainName",
        type: {
          name: "String"
        }
      },
      adFqdn: {
        readOnly: true,
        serializedName: "adFqdn",
        type: {
          name: "String"
        }
      },
      dnsFqdn: {
        readOnly: true,
        serializedName: "dnsFqdn",
        type: {
          name: "String"
        }
      },
      privateLinkScopedResources: {
        readOnly: true,
        serializedName: "privateLinkScopedResources",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const MachineUpdateProperties: msRest.CompositeMapper = {
  serializedName: "MachineUpdateProperties",
  type: {
    name: "Composite",
    className: "MachineUpdateProperties",
    modelProperties: {
      locationData: {
        serializedName: "locationData",
        type: {
          name: "Composite",
          className: "LocationData"
        }
      }
    }
  }
};

export const Identity: msRest.CompositeMapper = {
  serializedName: "Identity",
  type: {
    name: "Composite",
    className: "Identity",
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      principalId: {
        readOnly: true,
        serializedName: "principalId",
        type: {
          name: "String"
        }
      },
      tenantId: {
        readOnly: true,
        serializedName: "tenantId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MachineIdentity: msRest.CompositeMapper = {
  serializedName: "Machine_identity",
  type: {
    name: "Composite",
    className: "MachineIdentity",
    modelProperties: {
      ...Identity.type.modelProperties
    }
  }
};

export const Resource: msRest.CompositeMapper = {
  serializedName: "Resource",
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TrackedResource: msRest.CompositeMapper = {
  serializedName: "TrackedResource",
  type: {
    name: "Composite",
    className: "TrackedResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      location: {
        required: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Machine: msRest.CompositeMapper = {
  serializedName: "Machine",
  type: {
    name: "Composite",
    className: "Machine",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      locationData: {
        serializedName: "properties.locationData",
        type: {
          name: "Composite",
          className: "LocationData"
        }
      },
      osProfile: {
        serializedName: "properties.osProfile",
        type: {
          name: "Composite",
          className: "MachinePropertiesOsProfile"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      status: {
        readOnly: true,
        serializedName: "properties.status",
        type: {
          name: "String"
        }
      },
      lastStatusChange: {
        readOnly: true,
        serializedName: "properties.lastStatusChange",
        type: {
          name: "DateTime"
        }
      },
      errorDetails: {
        readOnly: true,
        serializedName: "properties.errorDetails",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorDetail"
            }
          }
        }
      },
      agentVersion: {
        readOnly: true,
        serializedName: "properties.agentVersion",
        type: {
          name: "String"
        }
      },
      vmId: {
        serializedName: "properties.vmId",
        type: {
          name: "String"
        }
      },
      displayName: {
        readOnly: true,
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      machineFqdn: {
        readOnly: true,
        serializedName: "properties.machineFqdn",
        type: {
          name: "String"
        }
      },
      clientPublicKey: {
        serializedName: "properties.clientPublicKey",
        type: {
          name: "String"
        }
      },
      osName: {
        readOnly: true,
        serializedName: "properties.osName",
        type: {
          name: "String"
        }
      },
      osVersion: {
        readOnly: true,
        serializedName: "properties.osVersion",
        type: {
          name: "String"
        }
      },
      vmUuid: {
        readOnly: true,
        serializedName: "properties.vmUuid",
        type: {
          name: "String"
        }
      },
      extensions: {
        serializedName: "properties.extensions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MachineExtensionInstanceView"
            }
          }
        }
      },
      osSku: {
        readOnly: true,
        serializedName: "properties.osSku",
        type: {
          name: "String"
        }
      },
      domainName: {
        readOnly: true,
        serializedName: "properties.domainName",
        type: {
          name: "String"
        }
      },
      adFqdn: {
        readOnly: true,
        serializedName: "properties.adFqdn",
        type: {
          name: "String"
        }
      },
      dnsFqdn: {
        readOnly: true,
        serializedName: "properties.dnsFqdn",
        type: {
          name: "String"
        }
      },
      privateLinkScopedResources: {
        readOnly: true,
        serializedName: "properties.privateLinkScopedResources",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      identity: {
        serializedName: "identity",
        type: {
          name: "Composite",
          className: "MachineIdentity"
        }
      }
    }
  }
};

export const UpdateResource: msRest.CompositeMapper = {
  serializedName: "UpdateResource",
  type: {
    name: "Composite",
    className: "UpdateResource",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const MachineUpdate: msRest.CompositeMapper = {
  serializedName: "MachineUpdate",
  type: {
    name: "Composite",
    className: "MachineUpdate",
    modelProperties: {
      ...UpdateResource.type.modelProperties,
      type: {
        serializedName: "identity.type",
        type: {
          name: "String"
        }
      },
      principalId: {
        readOnly: true,
        serializedName: "identity.principalId",
        type: {
          name: "String"
        }
      },
      tenantId: {
        readOnly: true,
        serializedName: "identity.tenantId",
        type: {
          name: "String"
        }
      },
      locationData: {
        serializedName: "properties.locationData",
        type: {
          name: "Composite",
          className: "LocationData"
        }
      }
    }
  }
};

export const ErrorResponse: msRest.CompositeMapper = {
  serializedName: "ErrorResponse",
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      error: {
        required: true,
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorDetail"
        }
      }
    }
  }
};

export const MachineExtension: msRest.CompositeMapper = {
  serializedName: "MachineExtension",
  type: {
    name: "Composite",
    className: "MachineExtension",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      forceUpdateTag: {
        serializedName: "properties.forceUpdateTag",
        type: {
          name: "String"
        }
      },
      publisher: {
        serializedName: "properties.publisher",
        type: {
          name: "String"
        }
      },
      machineExtensionType: {
        serializedName: "properties.type",
        type: {
          name: "String"
        }
      },
      typeHandlerVersion: {
        serializedName: "properties.typeHandlerVersion",
        type: {
          name: "String"
        }
      },
      autoUpgradeMinorVersion: {
        serializedName: "properties.autoUpgradeMinorVersion",
        type: {
          name: "Boolean"
        }
      },
      settings: {
        serializedName: "properties.settings",
        type: {
          name: "Object"
        }
      },
      protectedSettings: {
        serializedName: "properties.protectedSettings",
        type: {
          name: "Object"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      instanceView: {
        serializedName: "properties.instanceView",
        type: {
          name: "Composite",
          className: "MachineExtensionPropertiesInstanceView"
        }
      }
    }
  }
};

export const MachineExtensionUpdate: msRest.CompositeMapper = {
  serializedName: "MachineExtensionUpdate",
  type: {
    name: "Composite",
    className: "MachineExtensionUpdate",
    modelProperties: {
      ...UpdateResource.type.modelProperties,
      forceUpdateTag: {
        serializedName: "properties.forceUpdateTag",
        type: {
          name: "String"
        }
      },
      publisher: {
        serializedName: "properties.publisher",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "properties.type",
        type: {
          name: "String"
        }
      },
      typeHandlerVersion: {
        serializedName: "properties.typeHandlerVersion",
        type: {
          name: "String"
        }
      },
      autoUpgradeMinorVersion: {
        serializedName: "properties.autoUpgradeMinorVersion",
        type: {
          name: "Boolean"
        }
      },
      settings: {
        serializedName: "properties.settings",
        type: {
          name: "Object"
        }
      },
      protectedSettings: {
        serializedName: "properties.protectedSettings",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const MachineExtensionPropertiesInstanceView: msRest.CompositeMapper = {
  serializedName: "MachineExtensionProperties_instanceView",
  type: {
    name: "Composite",
    className: "MachineExtensionPropertiesInstanceView",
    modelProperties: {
      ...MachineExtensionInstanceView.type.modelProperties
    }
  }
};

export const MachineExtensionPropertiesModel: msRest.CompositeMapper = {
  serializedName: "MachineExtensionProperties",
  type: {
    name: "Composite",
    className: "MachineExtensionPropertiesModel",
    modelProperties: {
      forceUpdateTag: {
        serializedName: "forceUpdateTag",
        type: {
          name: "String"
        }
      },
      publisher: {
        serializedName: "publisher",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      typeHandlerVersion: {
        serializedName: "typeHandlerVersion",
        type: {
          name: "String"
        }
      },
      autoUpgradeMinorVersion: {
        serializedName: "autoUpgradeMinorVersion",
        type: {
          name: "Boolean"
        }
      },
      settings: {
        serializedName: "settings",
        type: {
          name: "Object"
        }
      },
      protectedSettings: {
        serializedName: "protectedSettings",
        type: {
          name: "Object"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "provisioningState",
        type: {
          name: "String"
        }
      },
      instanceView: {
        serializedName: "instanceView",
        type: {
          name: "Composite",
          className: "MachineExtensionPropertiesInstanceView"
        }
      }
    }
  }
};

export const MachineExtensionUpdatePropertiesModel: msRest.CompositeMapper = {
  serializedName: "MachineExtensionUpdateProperties",
  type: {
    name: "Composite",
    className: "MachineExtensionUpdatePropertiesModel",
    modelProperties: {
      forceUpdateTag: {
        serializedName: "forceUpdateTag",
        type: {
          name: "String"
        }
      },
      publisher: {
        serializedName: "publisher",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      typeHandlerVersion: {
        serializedName: "typeHandlerVersion",
        type: {
          name: "String"
        }
      },
      autoUpgradeMinorVersion: {
        serializedName: "autoUpgradeMinorVersion",
        type: {
          name: "Boolean"
        }
      },
      settings: {
        serializedName: "settings",
        type: {
          name: "Object"
        }
      },
      protectedSettings: {
        serializedName: "protectedSettings",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const ProxyResource: msRest.CompositeMapper = {
  serializedName: "ProxyResource",
  type: {
    name: "Composite",
    className: "ProxyResource",
    modelProperties: {
      ...Resource.type.modelProperties
    }
  }
};

export const AzureEntityResource: msRest.CompositeMapper = {
  serializedName: "AzureEntityResource",
  type: {
    name: "Composite",
    className: "AzureEntityResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      etag: {
        readOnly: true,
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PrivateLinkScopesResource: msRest.CompositeMapper = {
  serializedName: "PrivateLinkScopesResource",
  type: {
    name: "Composite",
    className: "PrivateLinkScopesResource",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      location: {
        required: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const TagsResource: msRest.CompositeMapper = {
  serializedName: "TagsResource",
  type: {
    name: "Composite",
    className: "TagsResource",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const PrivateEndpointProperty: msRest.CompositeMapper = {
  serializedName: "PrivateEndpointProperty",
  type: {
    name: "Composite",
    className: "PrivateEndpointProperty",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PrivateLinkServiceConnectionStateProperty: msRest.CompositeMapper = {
  serializedName: "PrivateLinkServiceConnectionStateProperty",
  type: {
    name: "Composite",
    className: "PrivateLinkServiceConnectionStateProperty",
    modelProperties: {
      status: {
        required: true,
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      description: {
        required: true,
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      actionsRequired: {
        readOnly: true,
        serializedName: "actionsRequired",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PrivateEndpointConnection: msRest.CompositeMapper = {
  serializedName: "PrivateEndpointConnection",
  type: {
    name: "Composite",
    className: "PrivateEndpointConnection",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      privateEndpoint: {
        serializedName: "properties.privateEndpoint",
        type: {
          name: "Composite",
          className: "PrivateEndpointProperty"
        }
      },
      privateLinkServiceConnectionState: {
        serializedName: "properties.privateLinkServiceConnectionState",
        type: {
          name: "Composite",
          className: "PrivateLinkServiceConnectionStateProperty"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const HybridComputePrivateLinkScope: msRest.CompositeMapper = {
  serializedName: "HybridComputePrivateLinkScope",
  type: {
    name: "Composite",
    className: "HybridComputePrivateLinkScope",
    modelProperties: {
      ...PrivateLinkScopesResource.type.modelProperties,
      publicNetworkAccess: {
        serializedName: "properties.publicNetworkAccess",
        defaultValue: 'Disabled',
        type: {
          name: "String"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      privateEndpointConnections: {
        readOnly: true,
        serializedName: "properties.privateEndpointConnections",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PrivateEndpointConnection"
            }
          }
        }
      }
    }
  }
};

export const PrivateLinkResource: msRest.CompositeMapper = {
  serializedName: "PrivateLinkResource",
  type: {
    name: "Composite",
    className: "PrivateLinkResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      groupId: {
        readOnly: true,
        serializedName: "properties.groupId",
        type: {
          name: "String"
        }
      },
      requiredMembers: {
        readOnly: true,
        serializedName: "properties.requiredMembers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      requiredZoneNames: {
        readOnly: true,
        serializedName: "properties.requiredZoneNames",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ScopedResource: msRest.CompositeMapper = {
  serializedName: "ScopedResource",
  type: {
    name: "Composite",
    className: "ScopedResource",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      linkedResourceId: {
        serializedName: "properties.linkedResourceId",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorAdditionalInfo: msRest.CompositeMapper = {
  serializedName: "ErrorAdditionalInfo",
  type: {
    name: "Composite",
    className: "ErrorAdditionalInfo",
    modelProperties: {
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      info: {
        readOnly: true,
        serializedName: "info",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const ErrorResponseV2: msRest.CompositeMapper = {
  serializedName: "ErrorResponseV2",
  type: {
    name: "Composite",
    className: "ErrorResponseV2",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorResponseV2Error"
        }
      }
    }
  }
};

export const ErrorResponseCommon: msRest.CompositeMapper = {
  serializedName: "ErrorResponseCommon",
  type: {
    name: "Composite",
    className: "ErrorResponseCommon",
    modelProperties: {
      ...ErrorResponseV2.type.modelProperties,
      details: {
        readOnly: true,
        serializedName: "details",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorResponseCommon"
            }
          }
        }
      },
      additionalInfo: {
        readOnly: true,
        serializedName: "additionalInfo",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorAdditionalInfo"
            }
          }
        }
      }
    }
  }
};

export const ErrorResponseV2Error: msRest.CompositeMapper = {
  serializedName: "ErrorResponseV2_error",
  type: {
    name: "Composite",
    className: "ErrorResponseV2Error",
    modelProperties: {
      code: {
        readOnly: true,
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        readOnly: true,
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      target: {
        readOnly: true,
        serializedName: "target",
        type: {
          name: "String"
        }
      },
      details: {
        readOnly: true,
        serializedName: "details",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorResponseV2"
            }
          }
        }
      },
      additionalInfo: {
        readOnly: true,
        serializedName: "additionalInfo",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorAdditionalInfo"
            }
          }
        }
      }
    }
  }
};

export const MachineListResult: msRest.CompositeMapper = {
  serializedName: "MachineListResult",
  type: {
    name: "Composite",
    className: "MachineListResult",
    modelProperties: {
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Machine"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MachineExtensionsListResult: msRest.CompositeMapper = {
  serializedName: "MachineExtensionsListResult",
  type: {
    name: "Composite",
    className: "MachineExtensionsListResult",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MachineExtension"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationListResult: msRest.CompositeMapper = {
  serializedName: "OperationListResult",
  type: {
    name: "Composite",
    className: "OperationListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "OperationValue"
            }
          }
        }
      }
    }
  }
};

export const HybridComputePrivateLinkScopeListResult: msRest.CompositeMapper = {
  serializedName: "HybridComputePrivateLinkScopeListResult",
  type: {
    name: "Composite",
    className: "HybridComputePrivateLinkScopeListResult",
    modelProperties: {
      value: {
        required: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "HybridComputePrivateLinkScope"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PrivateLinkResourceListResult: msRest.CompositeMapper = {
  serializedName: "PrivateLinkResourceListResult",
  type: {
    name: "Composite",
    className: "PrivateLinkResourceListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PrivateLinkResource"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PrivateEndpointConnectionListResult: msRest.CompositeMapper = {
  serializedName: "PrivateEndpointConnectionListResult",
  type: {
    name: "Composite",
    className: "PrivateEndpointConnectionListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PrivateEndpointConnection"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ScopedResourceListResult: msRest.CompositeMapper = {
  serializedName: "ScopedResourceListResult",
  type: {
    name: "Composite",
    className: "ScopedResourceListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ScopedResource"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};
