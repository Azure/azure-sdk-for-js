/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  ExtensionValueV2,
  ExtensionMetadataV2ListOptionalParams,
  ExtensionMetadataV2GetOptionalParams,
  ExtensionMetadataV2GetResponse,
} from "../models/index.js";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a ExtensionMetadataV2. */
export interface ExtensionMetadataV2 {
  /**
   * Gets all Extension versions based on location, publisher, extensionType
   * @param location The name of Azure region.
   * @param publisher The publisher of the Extension being received.
   * @param extensionType The extensionType of the Extension being received.
   * @param options The options parameters.
   */
  list(
    location: string,
    publisher: string,
    extensionType: string,
    options?: ExtensionMetadataV2ListOptionalParams,
  ): PagedAsyncIterableIterator<ExtensionValueV2>;
  /**
   * Gets an Extension Metadata based on location, publisher, extensionType and version
   * @param location The name of Azure region.
   * @param publisher The publisher of the Extension being received.
   * @param extensionType The extensionType of the Extension being received.
   * @param version The version of the Extension being received.
   * @param options The options parameters.
   */
  get(
    location: string,
    publisher: string,
    extensionType: string,
    version: string,
    options?: ExtensionMetadataV2GetOptionalParams,
  ): Promise<ExtensionMetadataV2GetResponse>;
}
