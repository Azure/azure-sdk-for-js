/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as msRestAzure from "@azure/ms-rest-azure-js";
import * as Models from "../models";
import * as Mappers from "../models/privateLinkScopesMappers";
import * as Parameters from "../models/parameters";
import { HybridComputeManagementClientContext } from "../hybridComputeManagementClientContext";

/** Class representing a PrivateLinkScopes. */
export class PrivateLinkScopes {
  private readonly client: HybridComputeManagementClientContext;

  /**
   * Create a PrivateLinkScopes.
   * @param {HybridComputeManagementClientContext} client Reference to the service client.
   */
  constructor(client: HybridComputeManagementClientContext) {
    this.client = client;
  }

  /**
   * Gets a list of all Azure Arc PrivateLinkScopes within a subscription.
   * @param [options] The optional parameters
   * @returns Promise<Models.PrivateLinkScopesListResponse>
   */
  list(options?: msRest.RequestOptionsBase): Promise<Models.PrivateLinkScopesListResponse>;
  /**
   * @param callback The callback
   */
  list(callback: msRest.ServiceCallback<Models.HybridComputePrivateLinkScopeListResult>): void;
  /**
   * @param options The optional parameters
   * @param callback The callback
   */
  list(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.HybridComputePrivateLinkScopeListResult>): void;
  list(options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.HybridComputePrivateLinkScopeListResult>, callback?: msRest.ServiceCallback<Models.HybridComputePrivateLinkScopeListResult>): Promise<Models.PrivateLinkScopesListResponse> {
    return this.client.sendOperationRequest(
      {
        options
      },
      listOperationSpec,
      callback) as Promise<Models.PrivateLinkScopesListResponse>;
  }

  /**
   * Gets a list of Azure Arc PrivateLinkScopes within a resource group.
   * @param resourceGroupName The name of the resource group.
   * @param [options] The optional parameters
   * @returns Promise<Models.PrivateLinkScopesListByResourceGroupResponse>
   */
  listByResourceGroup(resourceGroupName: string, options?: msRest.RequestOptionsBase): Promise<Models.PrivateLinkScopesListByResourceGroupResponse>;
  /**
   * @param resourceGroupName The name of the resource group.
   * @param callback The callback
   */
  listByResourceGroup(resourceGroupName: string, callback: msRest.ServiceCallback<Models.HybridComputePrivateLinkScopeListResult>): void;
  /**
   * @param resourceGroupName The name of the resource group.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByResourceGroup(resourceGroupName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.HybridComputePrivateLinkScopeListResult>): void;
  listByResourceGroup(resourceGroupName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.HybridComputePrivateLinkScopeListResult>, callback?: msRest.ServiceCallback<Models.HybridComputePrivateLinkScopeListResult>): Promise<Models.PrivateLinkScopesListByResourceGroupResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        options
      },
      listByResourceGroupOperationSpec,
      callback) as Promise<Models.PrivateLinkScopesListByResourceGroupResponse>;
  }

  /**
   * Deletes a Azure Arc PrivateLinkScope.
   * @param resourceGroupName The name of the resource group.
   * @param scopeName The name of the Azure Arc PrivateLinkScope resource.
   * @param [options] The optional parameters
   * @returns Promise<msRest.RestResponse>
   */
  deleteMethod(resourceGroupName: string, scopeName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse> {
    return this.beginDeleteMethod(resourceGroupName,scopeName,options)
      .then(lroPoller => lroPoller.pollUntilFinished());
  }

  /**
   * Returns a Azure Arc PrivateLinkScope.
   * @param resourceGroupName The name of the resource group.
   * @param scopeName The name of the Azure Arc PrivateLinkScope resource.
   * @param [options] The optional parameters
   * @returns Promise<Models.PrivateLinkScopesGetResponse>
   */
  get(resourceGroupName: string, scopeName: string, options?: msRest.RequestOptionsBase): Promise<Models.PrivateLinkScopesGetResponse>;
  /**
   * @param resourceGroupName The name of the resource group.
   * @param scopeName The name of the Azure Arc PrivateLinkScope resource.
   * @param callback The callback
   */
  get(resourceGroupName: string, scopeName: string, callback: msRest.ServiceCallback<Models.HybridComputePrivateLinkScope>): void;
  /**
   * @param resourceGroupName The name of the resource group.
   * @param scopeName The name of the Azure Arc PrivateLinkScope resource.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(resourceGroupName: string, scopeName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.HybridComputePrivateLinkScope>): void;
  get(resourceGroupName: string, scopeName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.HybridComputePrivateLinkScope>, callback?: msRest.ServiceCallback<Models.HybridComputePrivateLinkScope>): Promise<Models.PrivateLinkScopesGetResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        scopeName,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.PrivateLinkScopesGetResponse>;
  }

  /**
   * Creates (or updates) a Azure Arc PrivateLinkScope. Note: You cannot specify a different value
   * for InstrumentationKey nor AppId in the Put operation.
   * @param resourceGroupName The name of the resource group.
   * @param scopeName The name of the Azure Arc PrivateLinkScope resource.
   * @param parameters Properties that need to be specified to create or update a Azure Arc for
   * Servers and Clusters PrivateLinkScope.
   * @param [options] The optional parameters
   * @returns Promise<Models.PrivateLinkScopesCreateOrUpdateResponse>
   */
  createOrUpdate(resourceGroupName: string, scopeName: string, parameters: Models.HybridComputePrivateLinkScope, options?: msRest.RequestOptionsBase): Promise<Models.PrivateLinkScopesCreateOrUpdateResponse>;
  /**
   * @param resourceGroupName The name of the resource group.
   * @param scopeName The name of the Azure Arc PrivateLinkScope resource.
   * @param parameters Properties that need to be specified to create or update a Azure Arc for
   * Servers and Clusters PrivateLinkScope.
   * @param callback The callback
   */
  createOrUpdate(resourceGroupName: string, scopeName: string, parameters: Models.HybridComputePrivateLinkScope, callback: msRest.ServiceCallback<Models.HybridComputePrivateLinkScope>): void;
  /**
   * @param resourceGroupName The name of the resource group.
   * @param scopeName The name of the Azure Arc PrivateLinkScope resource.
   * @param parameters Properties that need to be specified to create or update a Azure Arc for
   * Servers and Clusters PrivateLinkScope.
   * @param options The optional parameters
   * @param callback The callback
   */
  createOrUpdate(resourceGroupName: string, scopeName: string, parameters: Models.HybridComputePrivateLinkScope, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.HybridComputePrivateLinkScope>): void;
  createOrUpdate(resourceGroupName: string, scopeName: string, parameters: Models.HybridComputePrivateLinkScope, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.HybridComputePrivateLinkScope>, callback?: msRest.ServiceCallback<Models.HybridComputePrivateLinkScope>): Promise<Models.PrivateLinkScopesCreateOrUpdateResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        scopeName,
        parameters,
        options
      },
      createOrUpdateOperationSpec,
      callback) as Promise<Models.PrivateLinkScopesCreateOrUpdateResponse>;
  }

  /**
   * Updates an existing PrivateLinkScope's tags. To update other fields use the CreateOrUpdate
   * method.
   * @param resourceGroupName The name of the resource group.
   * @param scopeName The name of the Azure Arc PrivateLinkScope resource.
   * @param privateLinkScopeTags Updated tag information to set into the PrivateLinkScope instance.
   * @param [options] The optional parameters
   * @returns Promise<Models.PrivateLinkScopesUpdateTagsResponse>
   */
  updateTags(resourceGroupName: string, scopeName: string, privateLinkScopeTags: Models.TagsResource, options?: msRest.RequestOptionsBase): Promise<Models.PrivateLinkScopesUpdateTagsResponse>;
  /**
   * @param resourceGroupName The name of the resource group.
   * @param scopeName The name of the Azure Arc PrivateLinkScope resource.
   * @param privateLinkScopeTags Updated tag information to set into the PrivateLinkScope instance.
   * @param callback The callback
   */
  updateTags(resourceGroupName: string, scopeName: string, privateLinkScopeTags: Models.TagsResource, callback: msRest.ServiceCallback<Models.HybridComputePrivateLinkScope>): void;
  /**
   * @param resourceGroupName The name of the resource group.
   * @param scopeName The name of the Azure Arc PrivateLinkScope resource.
   * @param privateLinkScopeTags Updated tag information to set into the PrivateLinkScope instance.
   * @param options The optional parameters
   * @param callback The callback
   */
  updateTags(resourceGroupName: string, scopeName: string, privateLinkScopeTags: Models.TagsResource, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.HybridComputePrivateLinkScope>): void;
  updateTags(resourceGroupName: string, scopeName: string, privateLinkScopeTags: Models.TagsResource, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.HybridComputePrivateLinkScope>, callback?: msRest.ServiceCallback<Models.HybridComputePrivateLinkScope>): Promise<Models.PrivateLinkScopesUpdateTagsResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        scopeName,
        privateLinkScopeTags,
        options
      },
      updateTagsOperationSpec,
      callback) as Promise<Models.PrivateLinkScopesUpdateTagsResponse>;
  }

  /**
   * Deletes a Azure Arc PrivateLinkScope.
   * @param resourceGroupName The name of the resource group.
   * @param scopeName The name of the Azure Arc PrivateLinkScope resource.
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginDeleteMethod(resourceGroupName: string, scopeName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        resourceGroupName,
        scopeName,
        options
      },
      beginDeleteMethodOperationSpec,
      options);
  }

  /**
   * Gets a list of all Azure Arc PrivateLinkScopes within a subscription.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.PrivateLinkScopesListNextResponse>
   */
  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.PrivateLinkScopesListNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.HybridComputePrivateLinkScopeListResult>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.HybridComputePrivateLinkScopeListResult>): void;
  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.HybridComputePrivateLinkScopeListResult>, callback?: msRest.ServiceCallback<Models.HybridComputePrivateLinkScopeListResult>): Promise<Models.PrivateLinkScopesListNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listNextOperationSpec,
      callback) as Promise<Models.PrivateLinkScopesListNextResponse>;
  }

  /**
   * Gets a list of Azure Arc PrivateLinkScopes within a resource group.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.PrivateLinkScopesListByResourceGroupNextResponse>
   */
  listByResourceGroupNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.PrivateLinkScopesListByResourceGroupNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listByResourceGroupNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.HybridComputePrivateLinkScopeListResult>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByResourceGroupNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.HybridComputePrivateLinkScopeListResult>): void;
  listByResourceGroupNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.HybridComputePrivateLinkScopeListResult>, callback?: msRest.ServiceCallback<Models.HybridComputePrivateLinkScopeListResult>): Promise<Models.PrivateLinkScopesListByResourceGroupNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listByResourceGroupNextOperationSpec,
      callback) as Promise<Models.PrivateLinkScopesListByResourceGroupNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/providers/Microsoft.HybridCompute/privateLinkScopes",
  urlParameters: [
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.HybridComputePrivateLinkScopeListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponseV2
    }
  },
  serializer
};

const listByResourceGroupOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCompute/privateLinkScopes",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.HybridComputePrivateLinkScopeListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponseV2
    }
  },
  serializer
};

const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCompute/privateLinkScopes/{scopeName}",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.subscriptionId,
    Parameters.scopeName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.HybridComputePrivateLinkScope
    },
    default: {
      bodyMapper: Mappers.ErrorResponseV2
    }
  },
  serializer
};

const createOrUpdateOperationSpec: msRest.OperationSpec = {
  httpMethod: "PUT",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCompute/privateLinkScopes/{scopeName}",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.subscriptionId,
    Parameters.scopeName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "parameters",
    mapper: {
      ...Mappers.HybridComputePrivateLinkScope,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.HybridComputePrivateLinkScope
    },
    201: {
      bodyMapper: Mappers.HybridComputePrivateLinkScope
    },
    default: {
      bodyMapper: Mappers.ErrorResponseV2
    }
  },
  serializer
};

const updateTagsOperationSpec: msRest.OperationSpec = {
  httpMethod: "PATCH",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCompute/privateLinkScopes/{scopeName}",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.subscriptionId,
    Parameters.scopeName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "privateLinkScopeTags",
    mapper: {
      ...Mappers.TagsResource,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.HybridComputePrivateLinkScope
    },
    default: {
      bodyMapper: Mappers.ErrorResponseV2
    }
  },
  serializer
};

const beginDeleteMethodOperationSpec: msRest.OperationSpec = {
  httpMethod: "DELETE",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCompute/privateLinkScopes/{scopeName}",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.subscriptionId,
    Parameters.scopeName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {},
    202: {},
    204: {},
    default: {
      bodyMapper: Mappers.ErrorResponseV2
    }
  },
  serializer
};

const listNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.HybridComputePrivateLinkScopeListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponseV2
    }
  },
  serializer
};

const listByResourceGroupNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.HybridComputePrivateLinkScopeListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponseV2
    }
  },
  serializer
};
