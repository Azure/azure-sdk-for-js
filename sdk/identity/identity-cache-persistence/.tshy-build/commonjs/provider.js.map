{"version":3,"file":"provider.js","sourceRoot":"","sources":["../../src/provider.ts"],"names":[],"mappings":";AAAA,uCAAuC;AACvC,kCAAkC;;AAclC,8CAQC;AAED,oEASC;AA9BD,iDAA0D;AAE1D,sEAAqE;AAGrE;;;;;GAKG;AACI,KAAK,UAAU,iBAAiB,CAAC,OAA+B;;IACrE,MAAM,WAAW,GAAG,MAAM,CAAA,MAAA,uCAAwB,CAAC,OAAO,CAAC,QAAQ,CAAC,wFAAG,OAAO,CAAC,CAAA,CAAC;IAEhF,IAAI,WAAW,KAAK,SAAS,EAAE,CAAC;QAC9B,MAAM,IAAI,KAAK,CAAC,yDAAyD,CAAC,CAAC;IAC7E,CAAC;IAED,OAAO,WAAW,CAAC;AACrB,CAAC;AAEM,KAAK,UAAU,4BAA4B,CAChD,OAAgC;IAEhC,MAAM,WAAW,GAAG,MAAM,iBAAiB,CAAC,OAAO,aAAP,OAAO,cAAP,OAAO,GAAI,EAAE,CAAC,CAAC;IAE3D,OAAO,IAAI,6CAAsB,CAAC,WAAW,EAAE;QAC7C,WAAW,EAAE,GAAG;QAChB,UAAU,EAAE,EAAE;KACf,CAAC,CAAC;AACL,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { MsalPersistenceOptions } from \"./platforms.js\";\nimport { msalPersistencePlatforms } from \"./platforms.js\";\nimport type { IPersistence as Persistence } from \"@azure/msal-node-extensions\";\nimport { PersistenceCachePlugin } from \"@azure/msal-node-extensions\";\nimport type { ICachePlugin as CachePlugin } from \"@azure/msal-node\";\n\n/**\n * This is used to gain access to the underlying Persistence instance, which we use for testing\n *\n * @returns a raw persistence instance\n * @internal\n */\nexport async function createPersistence(options: MsalPersistenceOptions): Promise<Persistence> {\n  const persistence = await msalPersistencePlatforms[process.platform]?.(options);\n\n  if (persistence === undefined) {\n    throw new Error(\"no persistence providers are available on this platform\");\n  }\n\n  return persistence;\n}\n\nexport async function createPersistenceCachePlugin(\n  options?: MsalPersistenceOptions,\n): Promise<CachePlugin> {\n  const persistence = await createPersistence(options ?? {});\n\n  return new PersistenceCachePlugin(persistence, {\n    retryNumber: 100,\n    retryDelay: 50,\n  });\n}\n"]}