/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  OfferType,
  MarketplaceAgreementsGetOptionalParams,
  MarketplaceAgreementsGetResponse,
  AgreementTerms,
  MarketplaceAgreementsCreateOptionalParams,
  MarketplaceAgreementsCreateResponse,
  MarketplaceAgreementsSignOptionalParams,
  MarketplaceAgreementsSignResponse,
  MarketplaceAgreementsCancelOptionalParams,
  MarketplaceAgreementsCancelResponse,
  MarketplaceAgreementsGetAgreementOptionalParams,
  MarketplaceAgreementsGetAgreementResponse,
  MarketplaceAgreementsListOptionalParams,
  MarketplaceAgreementsListResponse
} from "../models";

/** Interface representing a MarketplaceAgreements. */
export interface MarketplaceAgreements {
  /**
   * Get marketplace terms.
   * @param offerType Offer Type, currently only virtualmachine type is supported.
   * @param publisherId Publisher identifier string of image being deployed.
   * @param offerId Offer identifier string of image being deployed.
   * @param planId Plan identifier string of image being deployed.
   * @param options The options parameters.
   */
  get(
    offerType: OfferType,
    publisherId: string,
    offerId: string,
    planId: string,
    options?: MarketplaceAgreementsGetOptionalParams
  ): Promise<MarketplaceAgreementsGetResponse>;
  /**
   * Save marketplace terms.
   * @param offerType Offer Type, currently only virtualmachine type is supported.
   * @param publisherId Publisher identifier string of image being deployed.
   * @param offerId Offer identifier string of image being deployed.
   * @param planId Plan identifier string of image being deployed.
   * @param parameters Parameters supplied to the Create Marketplace Terms operation.
   * @param options The options parameters.
   */
  create(
    offerType: OfferType,
    publisherId: string,
    offerId: string,
    planId: string,
    parameters: AgreementTerms,
    options?: MarketplaceAgreementsCreateOptionalParams
  ): Promise<MarketplaceAgreementsCreateResponse>;
  /**
   * Sign marketplace terms.
   * @param publisherId Publisher identifier string of image being deployed.
   * @param offerId Offer identifier string of image being deployed.
   * @param planId Plan identifier string of image being deployed.
   * @param options The options parameters.
   */
  sign(
    publisherId: string,
    offerId: string,
    planId: string,
    options?: MarketplaceAgreementsSignOptionalParams
  ): Promise<MarketplaceAgreementsSignResponse>;
  /**
   * Cancel marketplace terms.
   * @param publisherId Publisher identifier string of image being deployed.
   * @param offerId Offer identifier string of image being deployed.
   * @param planId Plan identifier string of image being deployed.
   * @param options The options parameters.
   */
  cancel(
    publisherId: string,
    offerId: string,
    planId: string,
    options?: MarketplaceAgreementsCancelOptionalParams
  ): Promise<MarketplaceAgreementsCancelResponse>;
  /**
   * Get marketplace agreement.
   * @param publisherId Publisher identifier string of image being deployed.
   * @param offerId Offer identifier string of image being deployed.
   * @param planId Plan identifier string of image being deployed.
   * @param options The options parameters.
   */
  getAgreement(
    publisherId: string,
    offerId: string,
    planId: string,
    options?: MarketplaceAgreementsGetAgreementOptionalParams
  ): Promise<MarketplaceAgreementsGetAgreementResponse>;
  /**
   * List marketplace agreements in the subscription.
   * @param options The options parameters.
   */
  list(
    options?: MarketplaceAgreementsListOptionalParams
  ): Promise<MarketplaceAgreementsListResponse>;
}
