/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

/** Metadata pertaining to creation and last modification of the resource. */
export interface SystemData {
  /** The identity that created the resource. */
  createdBy?: string;
  /** The type of identity that created the resource. */
  createdByType?: CreatedByType;
  /** The timestamp of resource creation (UTC). */
  createdAt?: Date;
  /** The identity that last modified the resource. */
  lastModifiedBy?: string;
  /** The type of identity that last modified the resource. */
  lastModifiedByType?: CreatedByType;
  /** The timestamp of resource last modification (UTC) */
  lastModifiedAt?: Date;
}

/** ARM resource. */
export interface Resource {
  /**
   * Resource ID.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * Resource name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Resource type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
}

/** Error response indicates Microsoft.MarketplaceOrdering service is not able to process the incoming request. The reason is provided in the error message. */
export interface ErrorResponse {
  /** The details of the error. */
  error?: ErrorResponseError;
}

/** The details of the error. */
export interface ErrorResponseError {
  /**
   * Error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * Error message indicating why the operation failed.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
}

/** Result of the request to list MarketplaceOrdering operations. It contains a list of operations and a URL link to get the next set of results. */
export interface OperationListResult {
  /** List of Microsoft.MarketplaceOrdering operations supported by the Microsoft.MarketplaceOrdering resource provider. */
  value?: Operation[];
  /**
   * URL to get the next set of operation list results if there are any.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Microsoft.MarketplaceOrdering REST API operation */
export interface Operation {
  /** Operation name: {provider}/{resource}/{operation} */
  name?: string;
  /** The object that represents the operation. */
  display?: OperationDisplay;
}

/** The object that represents the operation. */
export interface OperationDisplay {
  /** Service provider: Microsoft.MarketplaceOrdering */
  provider?: string;
  /** Resource on which the operation is performed: Agreement, virtualmachine, etc. */
  resource?: string;
  /** Operation type: Get Agreement, Sign Agreement, Cancel Agreement etc. */
  operation?: string;
  /** Operation description. */
  description?: string;
}

/** Terms properties for provided Publisher/Offer/Plan tuple */
export interface AgreementTerms extends Resource {
  /**
   * The system meta data relating to this resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
  /** Publisher identifier string of image being deployed. */
  publisher?: string;
  /** Offer identifier string of image being deployed. */
  product?: string;
  /** Plan identifier string of image being deployed. */
  plan?: string;
  /** Link to HTML with Microsoft and Publisher terms. */
  licenseTextLink?: string;
  /** Link to the privacy policy of the publisher. */
  privacyPolicyLink?: string;
  /** Link to HTML with Azure Marketplace terms. */
  marketplaceTermsLink?: string;
  /** Date and time in UTC of when the terms were accepted. This is empty if Accepted is false. */
  retrieveDatetime?: string;
  /** Terms signature. */
  signature?: string;
  /** If any version of the terms have been accepted, otherwise false. */
  accepted?: boolean;
}

/** Known values of {@link OfferType} that the service accepts. */
export enum KnownOfferType {
  /** Virtualmachine */
  Virtualmachine = "virtualmachine"
}

/**
 * Defines values for OfferType. \
 * {@link KnownOfferType} can be used interchangeably with OfferType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **virtualmachine**
 */
export type OfferType = string;

/** Known values of {@link CreatedByType} that the service accepts. */
export enum KnownCreatedByType {
  /** User */
  User = "User",
  /** Application */
  Application = "Application",
  /** ManagedIdentity */
  ManagedIdentity = "ManagedIdentity",
  /** Key */
  Key = "Key"
}

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export type CreatedByType = string;

/** Optional parameters. */
export interface MarketplaceAgreementsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type MarketplaceAgreementsGetResponse = AgreementTerms;

/** Optional parameters. */
export interface MarketplaceAgreementsCreateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the create operation. */
export type MarketplaceAgreementsCreateResponse = AgreementTerms;

/** Optional parameters. */
export interface MarketplaceAgreementsSignOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the sign operation. */
export type MarketplaceAgreementsSignResponse = AgreementTerms;

/** Optional parameters. */
export interface MarketplaceAgreementsCancelOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the cancel operation. */
export type MarketplaceAgreementsCancelResponse = AgreementTerms;

/** Optional parameters. */
export interface MarketplaceAgreementsGetAgreementOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getAgreement operation. */
export type MarketplaceAgreementsGetAgreementResponse = AgreementTerms;

/** Optional parameters. */
export interface MarketplaceAgreementsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type MarketplaceAgreementsListResponse = AgreementTerms[];

/** Optional parameters. */
export interface OperationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type OperationsListResponse = OperationListResult;

/** Optional parameters. */
export interface OperationsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type OperationsListNextResponse = OperationListResult;

/** Optional parameters. */
export interface MarketplaceOrderingAgreementsOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
