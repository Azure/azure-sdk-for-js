/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };

/**
 * Resource tags
 */
export interface Tags {
  /**
   * Resource tags
   */
  tags?: { [propertyName: string]: string };
}

/**
 * The media services details
 */
export interface MediaServicesForPutRequest {
  /**
   * The media services resource id
   */
  resourceId?: string;
  /**
   * The user assigned identity to be used to grant permissions
   */
  userAssignedIdentity?: string;
}

/**
 * User assigned identity properties
 */
export interface UserAssignedIdentity {
  /**
   * The principal ID of the assigned identity.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly principalId?: string;
  /**
   * The client ID of the assigned identity.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly clientId?: string;
}

/**
 * Managed service identity (system assigned and/or user assigned identities)
 */
export interface ManagedServiceIdentity {
  /**
   * The service principal ID of the system assigned identity. This property will only be provided
   * for a system assigned identity.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly principalId?: string;
  /**
   * The tenant ID of the system assigned identity. This property will only be provided for a
   * system assigned identity.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly tenantId?: string;
  /**
   * Possible values include: 'None', 'SystemAssigned', 'UserAssigned',
   * 'SystemAssigned,UserAssigned'
   */
  type: ManagedServiceIdentityType;
  userAssignedIdentities?: { [propertyName: string]: UserAssignedIdentity };
}

/**
 * Metadata pertaining to creation and last modification of the resource.
 */
export interface SystemData {
  /**
   * The identity that created the resource.
   */
  createdBy?: string;
  /**
   * The type of identity that created the resource. Possible values include: 'User',
   * 'Application', 'ManagedIdentity', 'Key'
   */
  createdByType?: CreatedByType;
  /**
   * The timestamp of resource creation (UTC).
   */
  createdAt?: Date;
  /**
   * The identity that last modified the resource.
   */
  lastModifiedBy?: string;
  /**
   * The type of identity that last modified the resource. Possible values include: 'User',
   * 'Application', 'ManagedIdentity', 'Key'
   */
  lastModifiedByType?: CreatedByType;
  /**
   * The timestamp of resource last modification (UTC)
   */
  lastModifiedAt?: Date;
}

/**
 * Common fields that are returned in the response for all Azure Resource Manager resources
 * @summary Resource
 */
export interface Resource extends BaseResource {
  /**
   * Fully qualified resource ID for the resource. Ex -
   * /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The name of the resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
   * "Microsoft.Storage/storageAccounts"
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
}

/**
 * The resource model definition for an Azure Resource Manager tracked top level resource which has
 * 'tags' and a 'location'
 * @summary Tracked Resource
 */
export interface TrackedResource extends Resource {
  /**
   * Resource tags.
   */
  tags?: { [propertyName: string]: string };
  /**
   * The geo-location where the resource lives
   */
  location: string;
}

/**
 * An Azure Video Analyzer for Media account.
 */
export interface Account extends TrackedResource {
  /**
   * The account's tenant id
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly tenantId?: string;
  /**
   * The account's data-plane ID
   */
  accountId?: string;
  /**
   * The account's name
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly accountName?: string;
  /**
   * The media services details
   */
  mediaServices?: MediaServicesForPutRequest;
  /**
   * Gets the status of the account at the time the operation was called. Possible values include:
   * 'Succeeded', 'Failed', 'Canceled', 'Accepted', 'Provisioning', 'Deleting'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: ProvisioningState;
  identity?: ManagedServiceIdentity;
  /**
   * The system meta data relating to this resource.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly systemData?: SystemData;
}

/**
 * The media services details
 */
export interface MediaServicesForPatchRequest {
  /**
   * The user assigned identity to be used to grant permissions
   */
  userAssignedIdentity?: string;
}

/**
 * Azure Video Analyzer for Media account
 */
export interface AccountPatch extends Tags {
  /**
   * The account's tenant id
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly tenantId?: string;
  /**
   * The account's data-plane ID
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly accountId?: string;
  /**
   * The media services details
   */
  mediaServices?: MediaServicesForPatchRequest;
  /**
   * Gets the status of the account at the time the operation was called. Possible values include:
   * 'Succeeded', 'Failed', 'Canceled', 'Accepted', 'Provisioning', 'Deleting'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: ProvisioningState;
  identity?: ManagedServiceIdentity;
}

/**
 * Access token generation request's parameters
 */
export interface GenerateAccessTokenParameters {
  /**
   * The requested permission. Possible values include: 'Contributor', 'Reader'
   */
  permissionType: PermissionType;
  /**
   * The requested media type. Possible values include: 'Video', 'Account', 'Project'
   */
  scope: Scope;
  /**
   * The video ID
   */
  videoId?: string;
  /**
   * The project ID
   */
  projectId?: string;
}

/**
 * Azure Video Analyzer for Media access token.
 */
export interface AccessToken {
  /**
   * The access token.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly accessToken?: string;
}

/**
 * Operation display payload
 */
export interface OperationDisplay {
  /**
   * Resource provider of the operation
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provider?: string;
  /**
   * Resource of the operation
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly resource?: string;
  /**
   * Localized friendly name for the operation
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly operation?: string;
  /**
   * Localized friendly description for the operation
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
}

/**
 * Operation detail payload
 */
export interface Operation {
  /**
   * Name of the operation
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Indicates whether the operation is a data action
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isDataAction?: boolean;
  /**
   * Indicates the action type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly actionType?: string;
  /**
   * Display of the operation
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly display?: OperationDisplay;
  /**
   * Origin of the operation
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly origin?: string;
}

/**
 * Error definition.
 */
export interface ErrorDefinition {
  /**
   * Service specific error code which serves as the substatus for the HTTP error code.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly code?: string;
  /**
   * Description of the error.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly message?: string;
  /**
   * Internal error details.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly details?: ErrorDefinition[];
}

/**
 * Error response.
 */
export interface ErrorResponse {
  /**
   * The error details.
   */
  error?: ErrorDefinition;
}

/**
 * The parameters used to check the availability of the Video Indexer account name.
 */
export interface AccountCheckNameAvailabilityParameters {
  /**
   * The VideoIndexer account name.
   */
  name: string;
}

/**
 * The CheckNameAvailability operation response.
 */
export interface CheckNameAvailabilityResult {
  /**
   * Gets a boolean value that indicates whether the name is available for you to use. If true, the
   * name is available. If false, the name has already been taken.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nameAvailable?: boolean;
  /**
   * Gets the reason that a Video Indexer account name could not be used. The Reason element is
   * only returned if NameAvailable is false. Possible values include: 'AlreadyExists'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly reason?: Reason;
  /**
   * Gets an error message explaining the Reason value in more detail.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly message?: string;
}

/**
 * The resource model definition for a Azure Resource Manager proxy resource. It will not have tags
 * and a location
 * @summary Proxy Resource
 */
export interface ProxyResource extends Resource {
}

/**
 * The resource model definition for an Azure Resource Manager resource with an etag.
 * @summary Entity Resource
 */
export interface AzureEntityResource extends Resource {
  /**
   * Resource Etag.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly etag?: string;
}

/**
 * Optional Parameters.
 */
export interface AccountsUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The parameters to provide for the current Azure Video Analyzer for Media account.
   */
  parameters?: AccountPatch;
}

/**
 * Optional Parameters.
 */
export interface AccountsCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The parameters to provide for the Azure Video Analyzer for Media account.
   */
  parameters?: Account;
}

/**
 * Optional Parameters.
 */
export interface GenerateAccessTokenMethodOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The video ID
   */
  videoId?: string;
  /**
   * The project ID
   */
  projectId?: string;
}

/**
 * An interface representing ViManagementClientOptions.
 */
export interface ViManagementClientOptions extends AzureServiceClientOptions {
  baseUri?: string;
}

/**
 * @interface
 * Available operations of the service.
 * @extends Array<Operation>
 */
export interface OperationListResult extends Array<Operation> {
  /**
   * URL to get the next set of operation list results if there are any.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * The list operation response, that contains the data pools and their properties.
 * @extends Array<Account>
 */
export interface AccountList extends Array<Account> {
  /**
   * URL to get the next set of operation list results if there are any.
   */
  nextLink?: string;
}

/**
 * Defines values for ProvisioningState.
 * Possible values include: 'Succeeded', 'Failed', 'Canceled', 'Accepted', 'Provisioning',
 * 'Deleting'
 * @readonly
 * @enum {string}
 */
export type ProvisioningState = 'Succeeded' | 'Failed' | 'Canceled' | 'Accepted' | 'Provisioning' | 'Deleting';

/**
 * Defines values for ManagedServiceIdentityType.
 * Possible values include: 'None', 'SystemAssigned', 'UserAssigned', 'SystemAssigned,UserAssigned'
 * @readonly
 * @enum {string}
 */
export type ManagedServiceIdentityType = 'None' | 'SystemAssigned' | 'UserAssigned' | 'SystemAssigned,UserAssigned';

/**
 * Defines values for CreatedByType.
 * Possible values include: 'User', 'Application', 'ManagedIdentity', 'Key'
 * @readonly
 * @enum {string}
 */
export type CreatedByType = 'User' | 'Application' | 'ManagedIdentity' | 'Key';

/**
 * Defines values for PermissionType.
 * Possible values include: 'Contributor', 'Reader'
 * @readonly
 * @enum {string}
 */
export type PermissionType = 'Contributor' | 'Reader';

/**
 * Defines values for Scope.
 * Possible values include: 'Video', 'Account', 'Project'
 * @readonly
 * @enum {string}
 */
export type Scope = 'Video' | 'Account' | 'Project';

/**
 * Defines values for Reason.
 * Possible values include: 'AlreadyExists'
 * @readonly
 * @enum {string}
 */
export type Reason = 'AlreadyExists';

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type OperationsListNextResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationListResult;
    };
};

/**
 * Contains response data for the checkNameAvailability operation.
 */
export type AccountsCheckNameAvailabilityResponse = CheckNameAvailabilityResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CheckNameAvailabilityResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type AccountsListResponse = AccountList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AccountList;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type AccountsListByResourceGroupResponse = AccountList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AccountList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type AccountsGetResponse = Account & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Account;
    };
};

/**
 * Contains response data for the update operation.
 */
export type AccountsUpdateResponse = Account & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Account;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type AccountsCreateOrUpdateResponse = Account & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Account;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type AccountsListNextResponse = AccountList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AccountList;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type AccountsListByResourceGroupNextResponse = AccountList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AccountList;
    };
};

/**
 * Contains response data for the accessTokenMethod operation.
 */
export type GenerateAccessTokenMethodResponse = AccessToken & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AccessToken;
    };
};
