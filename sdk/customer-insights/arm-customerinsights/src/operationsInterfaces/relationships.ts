/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  RelationshipResourceFormat,
  RelationshipsListByHubOptionalParams,
  RelationshipsCreateOrUpdateOptionalParams,
  RelationshipsCreateOrUpdateResponse,
  RelationshipsGetOptionalParams,
  RelationshipsGetResponse,
  RelationshipsDeleteOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Relationships. */
export interface Relationships {
  /**
   * Gets all relationships in the hub.
   * @param resourceGroupName The name of the resource group.
   * @param hubName The name of the hub.
   * @param options The options parameters.
   */
  listByHub(
    resourceGroupName: string,
    hubName: string,
    options?: RelationshipsListByHubOptionalParams
  ): PagedAsyncIterableIterator<RelationshipResourceFormat>;
  /**
   * Creates a relationship or updates an existing relationship within a hub.
   * @param resourceGroupName The name of the resource group.
   * @param hubName The name of the hub.
   * @param relationshipName The name of the Relationship.
   * @param parameters Parameters supplied to the CreateOrUpdate Relationship operation.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    hubName: string,
    relationshipName: string,
    parameters: RelationshipResourceFormat,
    options?: RelationshipsCreateOrUpdateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<RelationshipsCreateOrUpdateResponse>,
      RelationshipsCreateOrUpdateResponse
    >
  >;
  /**
   * Creates a relationship or updates an existing relationship within a hub.
   * @param resourceGroupName The name of the resource group.
   * @param hubName The name of the hub.
   * @param relationshipName The name of the Relationship.
   * @param parameters Parameters supplied to the CreateOrUpdate Relationship operation.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    hubName: string,
    relationshipName: string,
    parameters: RelationshipResourceFormat,
    options?: RelationshipsCreateOrUpdateOptionalParams
  ): Promise<RelationshipsCreateOrUpdateResponse>;
  /**
   * Gets information about the specified relationship.
   * @param resourceGroupName The name of the resource group.
   * @param hubName The name of the hub.
   * @param relationshipName The name of the relationship.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    hubName: string,
    relationshipName: string,
    options?: RelationshipsGetOptionalParams
  ): Promise<RelationshipsGetResponse>;
  /**
   * Deletes a relationship within a hub.
   * @param resourceGroupName The name of the resource group.
   * @param hubName The name of the hub.
   * @param relationshipName The name of the relationship.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    hubName: string,
    relationshipName: string,
    options?: RelationshipsDeleteOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Deletes a relationship within a hub.
   * @param resourceGroupName The name of the resource group.
   * @param hubName The name of the hub.
   * @param relationshipName The name of the relationship.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    hubName: string,
    relationshipName: string,
    options?: RelationshipsDeleteOptionalParams
  ): Promise<void>;
}
