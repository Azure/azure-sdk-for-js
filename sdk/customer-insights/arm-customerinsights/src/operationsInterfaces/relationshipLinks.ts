/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  RelationshipLinkResourceFormat,
  RelationshipLinksListByHubOptionalParams,
  RelationshipLinksCreateOrUpdateOptionalParams,
  RelationshipLinksCreateOrUpdateResponse,
  RelationshipLinksGetOptionalParams,
  RelationshipLinksGetResponse,
  RelationshipLinksDeleteOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a RelationshipLinks. */
export interface RelationshipLinks {
  /**
   * Gets all relationship links in the hub.
   * @param resourceGroupName The name of the resource group.
   * @param hubName The name of the hub.
   * @param options The options parameters.
   */
  listByHub(
    resourceGroupName: string,
    hubName: string,
    options?: RelationshipLinksListByHubOptionalParams
  ): PagedAsyncIterableIterator<RelationshipLinkResourceFormat>;
  /**
   * Creates a relationship link or updates an existing relationship link within a hub.
   * @param resourceGroupName The name of the resource group.
   * @param hubName The name of the hub.
   * @param relationshipLinkName The name of the relationship link.
   * @param parameters Parameters supplied to the CreateOrUpdate relationship link operation.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    hubName: string,
    relationshipLinkName: string,
    parameters: RelationshipLinkResourceFormat,
    options?: RelationshipLinksCreateOrUpdateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<RelationshipLinksCreateOrUpdateResponse>,
      RelationshipLinksCreateOrUpdateResponse
    >
  >;
  /**
   * Creates a relationship link or updates an existing relationship link within a hub.
   * @param resourceGroupName The name of the resource group.
   * @param hubName The name of the hub.
   * @param relationshipLinkName The name of the relationship link.
   * @param parameters Parameters supplied to the CreateOrUpdate relationship link operation.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    hubName: string,
    relationshipLinkName: string,
    parameters: RelationshipLinkResourceFormat,
    options?: RelationshipLinksCreateOrUpdateOptionalParams
  ): Promise<RelationshipLinksCreateOrUpdateResponse>;
  /**
   * Gets information about the specified relationship Link.
   * @param resourceGroupName The name of the resource group.
   * @param hubName The name of the hub.
   * @param relationshipLinkName The name of the relationship link.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    hubName: string,
    relationshipLinkName: string,
    options?: RelationshipLinksGetOptionalParams
  ): Promise<RelationshipLinksGetResponse>;
  /**
   * Deletes a relationship link within a hub.
   * @param resourceGroupName The name of the resource group.
   * @param hubName The name of the hub.
   * @param relationshipLinkName The name of the relationship.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    hubName: string,
    relationshipLinkName: string,
    options?: RelationshipLinksDeleteOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Deletes a relationship link within a hub.
   * @param resourceGroupName The name of the resource group.
   * @param hubName The name of the hub.
   * @param relationshipLinkName The name of the relationship.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    hubName: string,
    relationshipLinkName: string,
    options?: RelationshipLinksDeleteOptionalParams
  ): Promise<void>;
}
