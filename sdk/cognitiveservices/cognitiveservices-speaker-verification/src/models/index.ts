/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */


import * as msRest from "@azure/ms-rest-js";

/**
 * Speaker profile locale
 */
export interface LocaleInfo {
  locale?: string;
}

/**
 * Text-Dependent Speaker profile info list
 */
export interface TdProfileInfoList {
  profiles?: any;
  nextLink?: string;
}

/**
 * Text-Dependent Speaker profile info
 */
export interface TdProfileInfo {
  profileId?: string;
  locale?: string;
  /**
   * Possible values include: 'Enrolling', 'Training', 'Enrolled'
   */
  enrollmentStatus?: TrainingStatusType;
  createdDateTime?: string;
  lastUpdatedDateTime?: string;
  enrollmentsCount?: number;
  enrollmentsLength?: number;
  enrollmentsSpeechLength?: number;
  remainingEnrollmentsCount?: number;
  modelVersion?: string;
}

/**
 * Text-Dependent Speaker profile enrollment info
 */
export interface TdEnrollmentInfo {
  profileId?: string;
  /**
   * Possible values include: 'Enrolling', 'Training', 'Enrolled'
   */
  enrollmentStatus?: TrainingStatusType;
  enrollmentsCount?: number;
  enrollmentsLength?: number;
  enrollmentsSpeechLength?: number;
  remainingEnrollmentsCount?: number;
  /**
   * Passphrase associated with this enrollment.
   */
  passPhrase?: string;
  /**
   * This enrolment audio length in seconds.
   */
  audioLength?: number;
  /**
   * This enrollment audio pure speech (which is the amount of audio after removing silence and
   * non-speech segments) length in seconds.
   */
  audioSpeechLength?: number;
}

/**
 * Text-Independent Speaker profile info list
 */
export interface TiProfileInfoList {
  profiles?: any;
  nextLink?: string;
}

/**
 * Text-Independent Speaker profile info
 */
export interface TiProfileInfo {
  profileId?: string;
  locale?: string;
  /**
   * Possible values include: 'Enrolling', 'Training', 'Enrolled'
   */
  enrollmentStatus?: TrainingStatusType;
  createdDateTime?: string;
  lastUpdatedDateTime?: string;
  enrollmentsCount?: number;
  enrollmentsLength?: number;
  enrollmentsSpeechLength?: number;
  remainingEnrollmentsSpeechLength?: number;
  modelVersion?: string;
}

/**
 * Text-Independent Speaker profile enrollment info
 */
export interface TiEnrollmentInfo {
  profileId?: string;
  /**
   * Possible values include: 'Enrolling', 'Training', 'Enrolled'
   */
  enrollmentStatus?: TrainingStatusType;
  enrollmentsCount?: number;
  enrollmentsLength?: number;
  enrollmentsSpeechLength?: number;
  remainingEnrollmentsSpeechLength?: number;
  /**
   * This enrolment audio length in seconds.
   */
  audioLength?: number;
  /**
   * This enrollment audio pure speech (which is the amount of audio after removing silence and
   * non-speech segments) length in seconds.
   */
  audioSpeechLength?: number;
}

/**
 * Speaker recognition result
 */
export interface RecognitionInfo {
  /**
   * Does audio belong to targeted profile?. Possible values include: 'accept', 'reject'
   */
  recognitionResult?: ResultType;
  /**
   * A float number indicating the similarity between input audio and targeted voice print. This
   * number must be between 0 and 1. A higher number means higher similarity.
   */
  score?: number;
}

/**
 * An interface representing ErrorError.
 */
export interface ErrorError {
  code?: string;
  message?: string;
}

/**
 * Speaker error message
 */
export interface ErrorModel {
  error: ErrorError;
}

/**
 * Optional Parameters.
 */
export interface TextDependentCreateProfileOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Provide following detail info when creating a new profile.
   * Fields  | Description
   * ------- | ------------
   * locale  | Locale for the language of this speaker profile. A complete supported locale list is
   * here: <ul><li>**en-US**</li></li></ul>
   */
  profileInfo?: LocaleInfo;
}

/**
 * Optional Parameters.
 */
export interface TextDependentListProfilesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The number of profiles to return. Default is 100 and the maximum is 500
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface TextIndependentCreateProfileOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Provide following detail info when creating a new profile.
   * Fields  | Description
   * ------- | ------------
   * locale  | Locale for the language of this speaker profile. A complete supported locale list is
   * here: <ul><li>**en-US**</li> <li>**es-ES**</li> <li>**fr-FR**</li> <li>**zh-CN**</li>
   * <li>**de-DE**</li> <li>**en-GB**</li> <li>**en-AU**</li> <li>**en-CA**</li> <li>**fr-CA**</li>
   * <li>**it-IT**</li> <li>**es-MX**</li> <li>**ja-JP**</li> <li>**pt-BR**</li> <li>**en-IN**</li>
   * </ul>
   */
  profileInfo?: LocaleInfo;
}

/**
 * Optional Parameters.
 */
export interface TextIndependentListProfilesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The number of profiles to return. Default is 100 and the maximum is 500
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface TextIndependentCreateEnrollmentOptionalParams extends msRest.RequestOptionsBase {
  /**
   * If true, a voice print will be created immediately for this profile regardless of how much
   * speech is supplied or stored. Default is false.
   */
  ignoreMinLength?: boolean;
}

/**
 * Optional Parameters.
 */
export interface TextIndependentVerifyProfileOptionalParams extends msRest.RequestOptionsBase {
  /**
   * If true, a voice print will be created immediately for this profile regardless of how much
   * speech is supplied or stored. Default is false.
   */
  ignoreMinLength?: boolean;
}

/**
 * Defines headers for CreateProfile operation.
 */
export interface TextDependentCreateProfileHeaders {
  /**
   * url location of new resource
   */
  location: string;
}

/**
 * Defines headers for CreateProfile operation.
 */
export interface TextIndependentCreateProfileHeaders {
  /**
   * url location of new resource
   */
  location: string;
}

/**
 * Defines values for TrainingStatusType.
 * Possible values include: 'Enrolling', 'Training', 'Enrolled'
 * @readonly
 * @enum {string}
 */
export type TrainingStatusType = 'Enrolling' | 'Training' | 'Enrolled';

/**
 * Defines values for ResultType.
 * Possible values include: 'accept', 'reject'
 * @readonly
 * @enum {string}
 */
export type ResultType = 'accept' | 'reject';

/**
 * Contains response data for the createProfile operation.
 */
export type TextDependentCreateProfileResponse = TdProfileInfo & TextDependentCreateProfileHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: TextDependentCreateProfileHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TdProfileInfo;
    };
};

/**
 * Contains response data for the listProfiles operation.
 */
export type TextDependentListProfilesResponse = TdProfileInfoList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TdProfileInfoList;
    };
};

/**
 * Contains response data for the getProfile operation.
 */
export type TextDependentGetProfileResponse = TdProfileInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TdProfileInfo;
    };
};

/**
 * Contains response data for the createEnrollment operation.
 */
export type TextDependentCreateEnrollmentResponse = TdEnrollmentInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TdEnrollmentInfo;
    };
};

/**
 * Contains response data for the verifyProfile operation.
 */
export type TextDependentVerifyProfileResponse = RecognitionInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecognitionInfo;
    };
};

/**
 * Contains response data for the listPhrases operation.
 */
export type TextDependentListPhrasesResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the createProfile operation.
 */
export type TextIndependentCreateProfileResponse = TiProfileInfo & TextIndependentCreateProfileHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: TextIndependentCreateProfileHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TiProfileInfo;
    };
};

/**
 * Contains response data for the listProfiles operation.
 */
export type TextIndependentListProfilesResponse = TiProfileInfoList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TiProfileInfoList;
    };
};

/**
 * Contains response data for the getProfile operation.
 */
export type TextIndependentGetProfileResponse = TiProfileInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TiProfileInfo;
    };
};

/**
 * Contains response data for the createEnrollment operation.
 */
export type TextIndependentCreateEnrollmentResponse = TiEnrollmentInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TiEnrollmentInfo;
    };
};

/**
 * Contains response data for the verifyProfile operation.
 */
export type TextIndependentVerifyProfileResponse = RecognitionInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RecognitionInfo;
    };
};
