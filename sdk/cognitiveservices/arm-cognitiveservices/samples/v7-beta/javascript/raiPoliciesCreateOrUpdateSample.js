/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
const { CognitiveServicesManagementClient } = require("@azure/arm-cognitiveservices");
const { DefaultAzureCredential } = require("@azure/identity");
require("dotenv").config();

/**
 * This sample demonstrates how to Update the state of specified Content Filters associated with the Azure OpenAI account.
 *
 * @summary Update the state of specified Content Filters associated with the Azure OpenAI account.
 * x-ms-original-file: specification/cognitiveservices/resource-manager/Microsoft.CognitiveServices/preview/2023-10-01-preview/examples/PutRaiPolicy.json
 */
async function putRaiPolicy() {
  const subscriptionId =
    process.env["COGNITIVESERVICES_SUBSCRIPTION_ID"] || "00000000-0000-0000-0000-000000000000";
  const resourceGroupName = process.env["COGNITIVESERVICES_RESOURCE_GROUP"] || "resourceGroupName";
  const accountName = "accountName";
  const raiPolicyName = "raiPolicyName";
  const raiPolicy = {
    properties: {
      basePolicyName: "112",
      contentFilters: [
        { allowedContentLevel: "Low", blocking: true, policyName: "hate" },
        { allowedContentLevel: "Low", policyName: "sexual" },
        { enabled: false, policyName: "violence" },
        { enabled: false, policyName: "DefaultHateSpeechBlockList" },
      ],
    },
  };
  const credential = new DefaultAzureCredential();
  const client = new CognitiveServicesManagementClient(credential, subscriptionId);
  const result = await client.raiPolicies.createOrUpdate(
    resourceGroupName,
    accountName,
    raiPolicyName,
    raiPolicy
  );
  console.log(result);
}

async function main() {
  putRaiPolicy();
}

main().catch(console.error);
