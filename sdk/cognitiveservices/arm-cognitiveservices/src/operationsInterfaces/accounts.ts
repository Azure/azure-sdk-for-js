/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  Account,
  AccountsListByResourceGroupOptionalParams,
  AccountsListOptionalParams,
  AccountModel,
  AccountsListModelsOptionalParams,
  AccountsCreateOptionalParams,
  AccountsCreateResponse,
  AccountsUpdateOptionalParams,
  AccountsUpdateResponse,
  AccountsDeleteOptionalParams,
  AccountsGetOptionalParams,
  AccountsGetResponse,
  AccountsListKeysOptionalParams,
  AccountsListKeysResponse,
  KeyName,
  AccountsRegenerateKeyOptionalParams,
  AccountsRegenerateKeyResponse,
  AccountsListSkusOptionalParams,
  AccountsListSkusResponse,
  AccountsListUsagesOptionalParams,
  AccountsListUsagesResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Accounts. */
export interface Accounts {
  /**
   * Returns all the resources of a particular type belonging to a resource group
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: AccountsListByResourceGroupOptionalParams
  ): PagedAsyncIterableIterator<Account>;
  /**
   * Returns all the resources of a particular type belonging to a subscription.
   * @param options The options parameters.
   */
  list(
    options?: AccountsListOptionalParams
  ): PagedAsyncIterableIterator<Account>;
  /**
   * List available Models for the requested Cognitive Services account
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The name of Cognitive Services account.
   * @param options The options parameters.
   */
  listModels(
    resourceGroupName: string,
    accountName: string,
    options?: AccountsListModelsOptionalParams
  ): PagedAsyncIterableIterator<AccountModel>;
  /**
   * Create Cognitive Services Account. Accounts is a resource group wide resource type. It holds the
   * keys for developer to access intelligent APIs. It's also the resource type for billing.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The name of Cognitive Services account.
   * @param account The parameters to provide for the created account.
   * @param options The options parameters.
   */
  beginCreate(
    resourceGroupName: string,
    accountName: string,
    account: Account,
    options?: AccountsCreateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<AccountsCreateResponse>,
      AccountsCreateResponse
    >
  >;
  /**
   * Create Cognitive Services Account. Accounts is a resource group wide resource type. It holds the
   * keys for developer to access intelligent APIs. It's also the resource type for billing.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The name of Cognitive Services account.
   * @param account The parameters to provide for the created account.
   * @param options The options parameters.
   */
  beginCreateAndWait(
    resourceGroupName: string,
    accountName: string,
    account: Account,
    options?: AccountsCreateOptionalParams
  ): Promise<AccountsCreateResponse>;
  /**
   * Updates a Cognitive Services account
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The name of Cognitive Services account.
   * @param account The parameters to provide for the created account.
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    accountName: string,
    account: Account,
    options?: AccountsUpdateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<AccountsUpdateResponse>,
      AccountsUpdateResponse
    >
  >;
  /**
   * Updates a Cognitive Services account
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The name of Cognitive Services account.
   * @param account The parameters to provide for the created account.
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    accountName: string,
    account: Account,
    options?: AccountsUpdateOptionalParams
  ): Promise<AccountsUpdateResponse>;
  /**
   * Deletes a Cognitive Services account from the resource group.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The name of Cognitive Services account.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    accountName: string,
    options?: AccountsDeleteOptionalParams
  ): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Deletes a Cognitive Services account from the resource group.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The name of Cognitive Services account.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    accountName: string,
    options?: AccountsDeleteOptionalParams
  ): Promise<void>;
  /**
   * Returns a Cognitive Services account specified by the parameters.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The name of Cognitive Services account.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    accountName: string,
    options?: AccountsGetOptionalParams
  ): Promise<AccountsGetResponse>;
  /**
   * Lists the account keys for the specified Cognitive Services account.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The name of Cognitive Services account.
   * @param options The options parameters.
   */
  listKeys(
    resourceGroupName: string,
    accountName: string,
    options?: AccountsListKeysOptionalParams
  ): Promise<AccountsListKeysResponse>;
  /**
   * Regenerates the specified account key for the specified Cognitive Services account.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The name of Cognitive Services account.
   * @param keyName key name to generate (Key1|Key2)
   * @param options The options parameters.
   */
  regenerateKey(
    resourceGroupName: string,
    accountName: string,
    keyName: KeyName,
    options?: AccountsRegenerateKeyOptionalParams
  ): Promise<AccountsRegenerateKeyResponse>;
  /**
   * List available SKUs for the requested Cognitive Services account
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The name of Cognitive Services account.
   * @param options The options parameters.
   */
  listSkus(
    resourceGroupName: string,
    accountName: string,
    options?: AccountsListSkusOptionalParams
  ): Promise<AccountsListSkusResponse>;
  /**
   * Get usages for the requested Cognitive Services account
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The name of Cognitive Services account.
   * @param options The options parameters.
   */
  listUsages(
    resourceGroupName: string,
    accountName: string,
    options?: AccountsListUsagesOptionalParams
  ): Promise<AccountsListUsagesResponse>;
}
