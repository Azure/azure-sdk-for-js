/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  EncryptionScope,
  EncryptionScopesListOptionalParams,
  EncryptionScopesGetOptionalParams,
  EncryptionScopesGetResponse,
  EncryptionScopesCreateOrUpdateOptionalParams,
  EncryptionScopesCreateOrUpdateResponse,
  EncryptionScopesDeleteOptionalParams,
  EncryptionScopesDeleteResponse,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a EncryptionScopes. */
export interface EncryptionScopes {
  /**
   * Gets the content filters associated with the Azure OpenAI account.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The name of Cognitive Services account.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    accountName: string,
    options?: EncryptionScopesListOptionalParams,
  ): PagedAsyncIterableIterator<EncryptionScope>;
  /**
   * Gets the specified EncryptionScope associated with the Cognitive Services account.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The name of Cognitive Services account.
   * @param encryptionScopeName The name of the encryptionScope associated with the Cognitive Services
   *                            Account
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    accountName: string,
    encryptionScopeName: string,
    options?: EncryptionScopesGetOptionalParams,
  ): Promise<EncryptionScopesGetResponse>;
  /**
   * Update the state of specified encryptionScope associated with the Cognitive Services account.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The name of Cognitive Services account.
   * @param encryptionScopeName The name of the encryptionScope associated with the Cognitive Services
   *                            Account
   * @param encryptionScope The encryptionScope properties.
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    accountName: string,
    encryptionScopeName: string,
    encryptionScope: EncryptionScope,
    options?: EncryptionScopesCreateOrUpdateOptionalParams,
  ): Promise<EncryptionScopesCreateOrUpdateResponse>;
  /**
   * Deletes the specified encryptionScope associated with the Cognitive Services account.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The name of Cognitive Services account.
   * @param encryptionScopeName The name of the encryptionScope associated with the Cognitive Services
   *                            Account
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    accountName: string,
    encryptionScopeName: string,
    options?: EncryptionScopesDeleteOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<EncryptionScopesDeleteResponse>,
      EncryptionScopesDeleteResponse
    >
  >;
  /**
   * Deletes the specified encryptionScope associated with the Cognitive Services account.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The name of Cognitive Services account.
   * @param encryptionScopeName The name of the encryptionScope associated with the Cognitive Services
   *                            Account
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    accountName: string,
    encryptionScopeName: string,
    options?: EncryptionScopesDeleteOptionalParams,
  ): Promise<EncryptionScopesDeleteResponse>;
}
