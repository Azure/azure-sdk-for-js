/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  Project,
  ProjectsListOptionalParams,
  ProjectsCreateOptionalParams,
  ProjectsCreateResponse,
  ProjectsUpdateOptionalParams,
  ProjectsUpdateResponse,
  ProjectsDeleteOptionalParams,
  ProjectsGetOptionalParams,
  ProjectsGetResponse,
} from "../models/index.js";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Projects. */
export interface Projects {
  /**
   * Returns all the projects in a Cognitive Services account.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The name of Cognitive Services account.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    accountName: string,
    options?: ProjectsListOptionalParams,
  ): PagedAsyncIterableIterator<Project>;
  /**
   * Create Cognitive Services Account's Project. Project is a sub-resource of an account which give AI
   * developer it's individual container to work on.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The name of Cognitive Services account.
   * @param projectName The name of Cognitive Services account's project.
   * @param project The parameters to provide for the created project.
   * @param options The options parameters.
   */
  beginCreate(
    resourceGroupName: string,
    accountName: string,
    projectName: string,
    project: Project,
    options?: ProjectsCreateOptionalParams,
  ): Promise<SimplePollerLike<OperationState<ProjectsCreateResponse>, ProjectsCreateResponse>>;
  /**
   * Create Cognitive Services Account's Project. Project is a sub-resource of an account which give AI
   * developer it's individual container to work on.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The name of Cognitive Services account.
   * @param projectName The name of Cognitive Services account's project.
   * @param project The parameters to provide for the created project.
   * @param options The options parameters.
   */
  beginCreateAndWait(
    resourceGroupName: string,
    accountName: string,
    projectName: string,
    project: Project,
    options?: ProjectsCreateOptionalParams,
  ): Promise<ProjectsCreateResponse>;
  /**
   * Updates a Cognitive Services Project
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The name of Cognitive Services account.
   * @param projectName The name of Cognitive Services account's project.
   * @param project The parameters to provide for the created project.
   * @param options The options parameters.
   */
  beginUpdate(
    resourceGroupName: string,
    accountName: string,
    projectName: string,
    project: Project,
    options?: ProjectsUpdateOptionalParams,
  ): Promise<SimplePollerLike<OperationState<ProjectsUpdateResponse>, ProjectsUpdateResponse>>;
  /**
   * Updates a Cognitive Services Project
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The name of Cognitive Services account.
   * @param projectName The name of Cognitive Services account's project.
   * @param project The parameters to provide for the created project.
   * @param options The options parameters.
   */
  beginUpdateAndWait(
    resourceGroupName: string,
    accountName: string,
    projectName: string,
    project: Project,
    options?: ProjectsUpdateOptionalParams,
  ): Promise<ProjectsUpdateResponse>;
  /**
   * Deletes a Cognitive Services project from the resource group.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The name of Cognitive Services account.
   * @param projectName The name of Cognitive Services account's project.
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    accountName: string,
    projectName: string,
    options?: ProjectsDeleteOptionalParams,
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Deletes a Cognitive Services project from the resource group.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The name of Cognitive Services account.
   * @param projectName The name of Cognitive Services account's project.
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    accountName: string,
    projectName: string,
    options?: ProjectsDeleteOptionalParams,
  ): Promise<void>;
  /**
   * Returns a Cognitive Services project specified by the parameters.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param accountName The name of Cognitive Services account.
   * @param projectName The name of Cognitive Services account's project.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    accountName: string,
    projectName: string,
    options?: ProjectsGetOptionalParams,
  ): Promise<ProjectsGetResponse>;
}
