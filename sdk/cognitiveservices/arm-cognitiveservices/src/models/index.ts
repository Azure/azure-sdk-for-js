/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

/** The resource model definition representing SKU */
export interface Sku {
  /** The name of the SKU. Ex - P3. It is typically a letter+number code */
  name: string;
  /** This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT. */
  tier?: SkuTier;
  /** The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. */
  size?: string;
  /** If the service has different generations of hardware, for the same SKU, then that can be captured here. */
  family?: string;
  /** If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted. */
  capacity?: number;
}

/** Identity for the resource. */
export interface Identity {
  /** The identity type. */
  type?: ResourceIdentityType;
  /**
   * The tenant ID of resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly tenantId?: string;
  /**
   * The principal ID of resource identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly principalId?: string;
  /** The list of user assigned identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName} */
  userAssignedIdentities?: { [propertyName: string]: UserAssignedIdentity };
}

/** User-assigned managed identity. */
export interface UserAssignedIdentity {
  /**
   * Azure Active Directory principal ID associated with this Identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly principalId?: string;
  /**
   * Client App Id associated with this identity.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly clientId?: string;
}

/** Metadata pertaining to creation and last modification of the resource. */
export interface SystemData {
  /** The identity that created the resource. */
  createdBy?: string;
  /** The type of identity that created the resource. */
  createdByType?: CreatedByType;
  /** The timestamp of resource creation (UTC). */
  createdAt?: Date;
  /** The identity that last modified the resource. */
  lastModifiedBy?: string;
  /** The type of identity that last modified the resource. */
  lastModifiedByType?: CreatedByType;
  /** The timestamp of resource last modification (UTC) */
  lastModifiedAt?: Date;
}

/** Properties of Cognitive Services account. */
export interface AccountProperties {
  /**
   * Gets the status of the cognitive services account at the time the operation was called.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * Endpoint of the created account.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly endpoint?: string;
  /**
   * The internal identifier (deprecated, do not use this property).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly internalId?: string;
  /**
   * Gets the capabilities of the cognitive services account. Each item indicates the capability of a specific feature. The values are read-only and for reference only.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly capabilities?: SkuCapability[];
  /**
   * If the resource is migrated from an existing key.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isMigrated?: boolean;
  /** Resource migration token. */
  migrationToken?: string;
  /**
   * Sku change info of account.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly skuChangeInfo?: SkuChangeInfo;
  /** Optional subdomain name used for token-based authentication. */
  customSubDomainName?: string;
  /** A collection of rules governing the accessibility from specific network locations. */
  networkAcls?: NetworkRuleSet;
  /** The encryption properties for this resource. */
  encryption?: Encryption;
  /** The storage accounts for this resource. */
  userOwnedStorage?: UserOwnedStorage[];
  /**
   * The private endpoint connection associated with the Cognitive Services account.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly privateEndpointConnections?: PrivateEndpointConnection[];
  /** Whether or not public endpoint access is allowed for this account. */
  publicNetworkAccess?: PublicNetworkAccess;
  /** The api properties for special APIs. */
  apiProperties?: ApiProperties;
  /**
   * Gets the date of cognitive services account creation.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly dateCreated?: string;
  /**
   * The call rate limit Cognitive Services account.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly callRateLimit?: CallRateLimit;
  /** The flag to enable dynamic throttling. */
  dynamicThrottlingEnabled?: boolean;
  /** NOTE: This property will not be serialized. It can only be populated by the server. */
  readonly quotaLimit?: QuotaLimit;
  restrictOutboundNetworkAccess?: boolean;
  allowedFqdnList?: string[];
  disableLocalAuth?: boolean;
  /**
   * Dictionary of <string>
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly endpoints?: { [propertyName: string]: string };
  restore?: boolean;
  /**
   * The deletion date, only available for deleted account.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly deletionDate?: string;
  /**
   * The scheduled purge date, only available for deleted account.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly scheduledPurgeDate?: string;
  /** The multiregion settings of Cognitive Services account. */
  locations?: MultiRegionSettings;
  /**
   * The commitment plan associations of Cognitive Services account.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly commitmentPlanAssociations?: CommitmentPlanAssociation[];
}

/** SkuCapability indicates the capability of a certain feature. */
export interface SkuCapability {
  /** The name of the SkuCapability. */
  name?: string;
  /** The value of the SkuCapability. */
  value?: string;
}

/** Sku change info of account. */
export interface SkuChangeInfo {
  /** Gets the count of downgrades. */
  countOfDowngrades?: number;
  /** Gets the count of upgrades after downgrades. */
  countOfUpgradesAfterDowngrades?: number;
  /** Gets the last change date. */
  lastChangeDate?: string;
}

/** A set of rules governing the network accessibility. */
export interface NetworkRuleSet {
  /** The default action when no rule from ipRules and from virtualNetworkRules match. This is only used after the bypass property has been evaluated. */
  defaultAction?: NetworkRuleAction;
  /** The list of IP address rules. */
  ipRules?: IpRule[];
  /** The list of virtual network rules. */
  virtualNetworkRules?: VirtualNetworkRule[];
}

/** A rule governing the accessibility from a specific ip address or ip range. */
export interface IpRule {
  /** An IPv4 address range in CIDR notation, such as '124.56.78.91' (simple IP address) or '124.56.78.0/24' (all addresses that start with 124.56.78). */
  value: string;
}

/** A rule governing the accessibility from a specific virtual network. */
export interface VirtualNetworkRule {
  /** Full resource id of a vnet subnet, such as '/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/test-vnet/subnets/subnet1'. */
  id: string;
  /** Gets the state of virtual network rule. */
  state?: string;
  /** Ignore missing vnet service endpoint or not. */
  ignoreMissingVnetServiceEndpoint?: boolean;
}

/** Properties to configure Encryption */
export interface Encryption {
  /** Properties of KeyVault */
  keyVaultProperties?: KeyVaultProperties;
  /** Enumerates the possible value of keySource for Encryption */
  keySource?: KeySource;
}

/** Properties to configure keyVault Properties */
export interface KeyVaultProperties {
  /** Name of the Key from KeyVault */
  keyName?: string;
  /** Version of the Key from KeyVault */
  keyVersion?: string;
  /** Uri of KeyVault */
  keyVaultUri?: string;
  identityClientId?: string;
}

/** The user owned storage for Cognitive Services account. */
export interface UserOwnedStorage {
  /** Full resource id of a Microsoft.Storage resource. */
  resourceId?: string;
  identityClientId?: string;
}

/** Properties of the PrivateEndpointConnectProperties. */
export interface PrivateEndpointConnectionProperties {
  /** The resource of private end point. */
  privateEndpoint?: PrivateEndpoint;
  /** A collection of information about the state of the connection between service consumer and provider. */
  privateLinkServiceConnectionState: PrivateLinkServiceConnectionState;
  /**
   * The provisioning state of the private endpoint connection resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: PrivateEndpointConnectionProvisioningState;
  /** The private link resource group ids. */
  groupIds?: string[];
}

/** The Private Endpoint resource. */
export interface PrivateEndpoint {
  /**
   * The ARM identifier for Private Endpoint
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
}

/** A collection of information about the state of the connection between service consumer and provider. */
export interface PrivateLinkServiceConnectionState {
  /** Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service. */
  status?: PrivateEndpointServiceConnectionStatus;
  /** The reason for approval/rejection of the connection. */
  description?: string;
  /** A message indicating if changes on the service provider require any updates on the consumer. */
  actionsRequired?: string;
}

/** Common fields that are returned in the response for all Azure Resource Manager resources */
export interface Resource {
  /**
   * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly id?: string;
  /**
   * The name of the resource
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
}

/** The api properties for special APIs. */
export interface ApiProperties {
  /** Describes unknown properties. The value of an unknown property can be of "any" type. */
  [property: string]: any;
  /** (QnAMaker Only) The runtime endpoint of QnAMaker. */
  qnaRuntimeEndpoint?: string;
  /** (QnAMaker Only) The Azure Search endpoint key of QnAMaker. */
  qnaAzureSearchEndpointKey?: string;
  /** (QnAMaker Only) The Azure Search endpoint id of QnAMaker. */
  qnaAzureSearchEndpointId?: string;
  /** (Bing Search Only) The flag to enable statistics of Bing Search. */
  statisticsEnabled?: boolean;
  /** (Personalization Only) The flag to enable statistics of Bing Search. */
  eventHubConnectionString?: string;
  /** (Personalization Only) The storage account connection string. */
  storageAccountConnectionString?: string;
  /** (Metrics Advisor Only) The Azure AD Client Id (Application Id). */
  aadClientId?: string;
  /** (Metrics Advisor Only) The Azure AD Tenant Id. */
  aadTenantId?: string;
  /** (Metrics Advisor Only) The super user of Metrics Advisor. */
  superUser?: string;
  /** (Metrics Advisor Only) The website name of Metrics Advisor. */
  websiteName?: string;
}

/** The call rate limit Cognitive Services account. */
export interface CallRateLimit {
  /** The count value of Call Rate Limit. */
  count?: number;
  /** The renewal period in seconds of Call Rate Limit. */
  renewalPeriod?: number;
  rules?: ThrottlingRule[];
}

export interface ThrottlingRule {
  key?: string;
  renewalPeriod?: number;
  count?: number;
  minCount?: number;
  dynamicThrottlingEnabled?: boolean;
  matchPatterns?: RequestMatchPattern[];
}

export interface RequestMatchPattern {
  path?: string;
  method?: string;
}

export interface QuotaLimit {
  count?: number;
  renewalPeriod?: number;
  rules?: ThrottlingRule[];
}

/** The multiregion settings Cognitive Services account. */
export interface MultiRegionSettings {
  /** Multiregion routing methods. */
  routingMethod?: RoutingMethods;
  regions?: RegionSetting[];
}

/** The call rate limit Cognitive Services account. */
export interface RegionSetting {
  /** Name of the region. */
  name?: string;
  /** A value for priority or weighted routing methods. */
  value?: number;
  /** Maps the region to the regional custom subdomain. */
  customsubdomain?: string;
}

/** The commitment plan association. */
export interface CommitmentPlanAssociation {
  /** The Azure resource id of the commitment plan. */
  commitmentPlanId?: string;
  /** The location of of the commitment plan. */
  commitmentPlanLocation?: string;
}

/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */
export interface ErrorResponse {
  /** The error object. */
  error?: ErrorDetail;
}

/** The error detail. */
export interface ErrorDetail {
  /**
   * The error code.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly code?: string;
  /**
   * The error message.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly message?: string;
  /**
   * The error target.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly target?: string;
  /**
   * The error details.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly details?: ErrorDetail[];
  /**
   * The error additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly additionalInfo?: ErrorAdditionalInfo[];
}

/** The resource management error additional info. */
export interface ErrorAdditionalInfo {
  /**
   * The additional info type.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly type?: string;
  /**
   * The additional info.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly info?: Record<string, unknown>;
}

/** The list of cognitive services accounts operation response. */
export interface AccountListResult {
  /** The link used to get the next page of accounts. */
  nextLink?: string;
  /**
   * Gets the list of Cognitive Services accounts and their properties.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Account[];
}

/** The access keys for the cognitive services account. */
export interface ApiKeys {
  /** Gets the value of key 1. */
  key1?: string;
  /** Gets the value of key 2. */
  key2?: string;
}

/** Regenerate key parameters. */
export interface RegenerateKeyParameters {
  /** key name to generate (Key1|Key2) */
  keyName: KeyName;
}

/** The Get Skus operation response. */
export interface ResourceSkuListResult {
  /** The list of skus available for the subscription. */
  value: ResourceSku[];
  /** The uri to fetch the next page of Skus. */
  nextLink?: string;
}

/** Describes an available Cognitive Services SKU. */
export interface ResourceSku {
  /** The type of resource the SKU applies to. */
  resourceType?: string;
  /** The name of SKU. */
  name?: string;
  /** Specifies the tier of Cognitive Services account. */
  tier?: string;
  /** The Kind of resources that are supported in this SKU. */
  kind?: string;
  /** The set of locations that the SKU is available. */
  locations?: string[];
  /** The restrictions because of which SKU cannot be used. This is empty if there are no restrictions. */
  restrictions?: ResourceSkuRestrictions[];
}

/** Describes restrictions of a SKU. */
export interface ResourceSkuRestrictions {
  /** The type of restrictions. */
  type?: ResourceSkuRestrictionsType;
  /** The value of restrictions. If the restriction type is set to location. This would be different locations where the SKU is restricted. */
  values?: string[];
  /** The information about the restriction where the SKU cannot be used. */
  restrictionInfo?: ResourceSkuRestrictionInfo;
  /** The reason for restriction. */
  reasonCode?: ResourceSkuRestrictionsReasonCode;
}

export interface ResourceSkuRestrictionInfo {
  /** Locations where the SKU is restricted */
  locations?: string[];
  /** List of availability zones where the SKU is restricted. */
  zones?: string[];
}

/** The list of cognitive services accounts operation response. */
export interface AccountSkuListResult {
  /** Gets the list of Cognitive Services accounts and their properties. */
  value?: AccountSku[];
}

/** Cognitive Services resource type and SKU. */
export interface AccountSku {
  /** Resource Namespace and Type */
  resourceType?: string;
  /** The SKU of Cognitive Services account. */
  sku?: Sku;
}

/** The response to a list usage request. */
export interface UsageListResult {
  /** The list of usages for Cognitive Service account. */
  value?: Usage[];
}

/** The usage data for a usage request. */
export interface Usage {
  /** The unit of the metric. */
  unit?: UnitType;
  /** The name information for the metric. */
  name?: MetricName;
  /** The quota period used to summarize the usage values. */
  quotaPeriod?: string;
  /** Maximum value for this metric. */
  limit?: number;
  /** Current value for this metric. */
  currentValue?: number;
  /** Next reset time for current quota. */
  nextResetTime?: string;
  /** Cognitive Services account quota usage status. */
  status?: QuotaUsageStatus;
}

/** A metric name. */
export interface MetricName {
  /** The name of the metric. */
  value?: string;
  /** The friendly name of the metric. */
  localizedValue?: string;
}

/** The list of cognitive services accounts operation response. */
export interface AccountModelListResult {
  /** The link used to get the next page of Model. */
  nextLink?: string;
  /** Gets the list of Cognitive Services accounts Model and their properties. */
  value?: AccountModel[];
}

/** Properties of Cognitive Services account deployment model. */
export interface DeploymentModel {
  /** Deployment model format. */
  format?: string;
  /** Deployment model name. */
  name?: string;
  /** Deployment model version. */
  version?: string;
  /**
   * The call rate limit Cognitive Services account.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly callRateLimit?: CallRateLimit;
}

/** Cognitive Services account ModelDeprecationInfo. */
export interface ModelDeprecationInfo {
  /** The datetime of deprecation of the fineTune Model. */
  fineTune?: string;
  /** The datetime of deprecation of the inference Model. */
  inference?: string;
}

/** A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results. */
export interface OperationListResult {
  /**
   * List of operations supported by the resource provider
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Operation[];
  /**
   * URL to get the next set of operation list results (if there are any).
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly nextLink?: string;
}

/** Details of a REST API operation, returned from the Resource Provider Operations API */
export interface Operation {
  /**
   * The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
  /**
   * Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly isDataAction?: boolean;
  /** Localized display information for this particular operation. */
  display?: OperationDisplay;
  /**
   * The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly origin?: Origin;
  /**
   * Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly actionType?: ActionType;
}

/** Localized display information for this particular operation. */
export interface OperationDisplay {
  /**
   * The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provider?: string;
  /**
   * The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly resource?: string;
  /**
   * The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly operation?: string;
  /**
   * The short, localized friendly description of the operation; suitable for tool tips and detailed views.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly description?: string;
}

/** Check SKU availability parameter. */
export interface CheckSkuAvailabilityParameter {
  /** The SKU of the resource. */
  skus: string[];
  /** The Kind of the resource. */
  kind: string;
  /** The Type of the resource. */
  type: string;
}

/** Check SKU availability result list. */
export interface SkuAvailabilityListResult {
  /** Check SKU availability result list. */
  value?: SkuAvailability[];
}

/** SKU availability. */
export interface SkuAvailability {
  /** The Kind of the resource. */
  kind?: string;
  /** The Type of the resource. */
  type?: string;
  /** The SKU of Cognitive Services account. */
  skuName?: string;
  /** Indicates the given SKU is available or not. */
  skuAvailable?: boolean;
  /** Reason why the SKU is not available. */
  reason?: string;
  /** Additional error message. */
  message?: string;
}

/** The list of cognitive services accounts operation response. */
export interface CommitmentTierListResult {
  /** The link used to get the next page of CommitmentTier. */
  nextLink?: string;
  /**
   * Gets the list of Cognitive Services accounts CommitmentTier and their properties.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: CommitmentTier[];
}

/** Cognitive Services account commitment tier. */
export interface CommitmentTier {
  /** The Kind of the resource. */
  kind?: string;
  /** The name of the SKU. Ex - P3. It is typically a letter+number code */
  skuName?: string;
  /** Account hosting model. */
  hostingModel?: HostingModel;
  /** Commitment plan type. */
  planType?: string;
  /** Commitment period commitment tier. */
  tier?: string;
  /** Commitment period commitment max count. */
  maxCount?: number;
  /** Cognitive Services account commitment quota. */
  quota?: CommitmentQuota;
  /** Cognitive Services account commitment cost. */
  cost?: CommitmentCost;
}

/** Cognitive Services account commitment quota. */
export interface CommitmentQuota {
  /** Commitment quota quantity. */
  quantity?: number;
  /** Commitment quota unit. */
  unit?: string;
}

/** Cognitive Services account commitment cost. */
export interface CommitmentCost {
  /** Commitment meter Id. */
  commitmentMeterId?: string;
  /** Overage meter Id. */
  overageMeterId?: string;
}

/** Check Domain availability parameter. */
export interface CheckDomainAvailabilityParameter {
  /** The subdomain name to use. */
  subdomainName: string;
  /** The Type of the resource. */
  type: string;
  /** The Kind of the resource. */
  kind?: string;
}

/** Domain availability. */
export interface DomainAvailability {
  /** Indicates the given SKU is available or not. */
  isSubdomainAvailable?: boolean;
  /** Reason why the SKU is not available. */
  reason?: string;
  /** The subdomain name to use. */
  subdomainName?: string;
  /** The Type of the resource. */
  type?: string;
  /** The Kind of the resource. */
  kind?: string;
}

/** A list of private endpoint connections */
export interface PrivateEndpointConnectionListResult {
  /** Array of private endpoint connections */
  value?: PrivateEndpointConnection[];
}

/** A list of private link resources */
export interface PrivateLinkResourceListResult {
  /** Array of private link resources */
  value?: PrivateLinkResource[];
}

/** Properties of a private link resource. */
export interface PrivateLinkResourceProperties {
  /**
   * The private link resource group id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly groupId?: string;
  /**
   * The private link resource required member names.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly requiredMembers?: string[];
  /** The private link resource Private link DNS zone name. */
  requiredZoneNames?: string[];
  /**
   * The private link resource display name.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly displayName?: string;
}

/** The list of cognitive services accounts operation response. */
export interface DeploymentListResult {
  /** The link used to get the next page of Deployment. */
  nextLink?: string;
  /**
   * Gets the list of Cognitive Services accounts Deployment and their properties.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: Deployment[];
}

/** Properties of Cognitive Services account deployment. */
export interface DeploymentProperties {
  /**
   * Gets the status of the resource at the time the operation was called.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: DeploymentProvisioningState;
  /** Properties of Cognitive Services account deployment model. */
  model?: DeploymentModel;
  /** Properties of Cognitive Services account deployment model. */
  scaleSettings?: DeploymentScaleSettings;
  /**
   * The capabilities.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly capabilities?: { [propertyName: string]: string };
  /** The name of RAI policy. */
  raiPolicyName?: string;
  /**
   * The call rate limit Cognitive Services account.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly callRateLimit?: CallRateLimit;
}

/** Properties of Cognitive Services account deployment model. */
export interface DeploymentScaleSettings {
  /** Deployment scale type. */
  scaleType?: DeploymentScaleType;
  /** Deployment capacity. */
  capacity?: number;
  /**
   * Deployment active capacity. This value might be different from `capacity` if customer recently updated `capacity`.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly activeCapacity?: number;
}

/** The list of cognitive services accounts operation response. */
export interface CommitmentPlanListResult {
  /** The link used to get the next page of CommitmentPlan. */
  nextLink?: string;
  /**
   * Gets the list of Cognitive Services accounts CommitmentPlan and their properties.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: CommitmentPlan[];
}

/** Properties of Cognitive Services account commitment plan. */
export interface CommitmentPlanProperties {
  /**
   * Gets the status of the resource at the time the operation was called.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly provisioningState?: CommitmentPlanProvisioningState;
  /** Commitment plan guid. */
  commitmentPlanGuid?: string;
  /** Account hosting model. */
  hostingModel?: HostingModel;
  /** Commitment plan type. */
  planType?: string;
  /** Cognitive Services account commitment period. */
  current?: CommitmentPeriod;
  /** AutoRenew commitment plan. */
  autoRenew?: boolean;
  /** Cognitive Services account commitment period. */
  next?: CommitmentPeriod;
  /**
   * Cognitive Services account commitment period.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly last?: CommitmentPeriod;
}

/** Cognitive Services account commitment period. */
export interface CommitmentPeriod {
  /** Commitment period commitment tier. */
  tier?: string;
  /** Commitment period commitment count. */
  count?: number;
  /**
   * Cognitive Services account commitment quota.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly quota?: CommitmentQuota;
  /**
   * Commitment period start date.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly startDate?: string;
  /**
   * Commitment period end date.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly endDate?: string;
}

/** The object being used to update tags of a resource, in general used for PATCH operations. */
export interface PatchResourceTags {
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
}

/** The list of cognitive services Commitment Plan Account Association operation response. */
export interface CommitmentPlanAccountAssociationListResult {
  /** The link used to get the next page of Commitment Plan Account Association. */
  nextLink?: string;
  /**
   * Gets the list of Cognitive Services Commitment Plan Account Association and their properties.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly value?: CommitmentPlanAccountAssociation[];
}

/** The resource model definition for an Azure Resource Manager resource with an etag. */
export interface AzureEntityResource extends Resource {
  /**
   * Resource Etag.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly etag?: string;
}

/** A private link resource */
export interface PrivateLinkResource extends Resource {
  /** Resource properties. */
  properties?: PrivateLinkResourceProperties;
}

/** The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location */
export interface ProxyResource extends Resource {}

/** Cognitive Services account Model. */
export interface AccountModel extends DeploymentModel {
  /** Base Model Identifier. */
  baseModel?: DeploymentModel;
  /** The max capacity. */
  maxCapacity?: number;
  /** The capabilities. */
  capabilities?: { [propertyName: string]: string };
  /** The capabilities for finetune models. */
  finetuneCapabilities?: { [propertyName: string]: string };
  /** Cognitive Services account ModelDeprecationInfo. */
  deprecation?: ModelDeprecationInfo;
  /** Model lifecycle status. */
  lifecycleStatus?: ModelLifecycleStatus;
  /**
   * Metadata pertaining to creation and last modification of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
}

/** The object being used to update tags and sku of a resource, in general used for PATCH operations. */
export interface PatchResourceTagsAndSku extends PatchResourceTags {
  /** The resource model definition representing SKU */
  sku?: Sku;
}

/** The Private Endpoint Connection resource. */
export interface PrivateEndpointConnection extends AzureEntityResource {
  /** Resource properties. */
  properties?: PrivateEndpointConnectionProperties;
  /**
   * Metadata pertaining to creation and last modification of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
  /** The location of the private endpoint connection */
  location?: string;
}

/** Cognitive Services account is an Azure resource representing the provisioned account, it's type, location and SKU. */
export interface Account extends AzureEntityResource {
  /** The Kind of the resource. */
  kind?: string;
  /** The resource model definition representing SKU */
  sku?: Sku;
  /** Identity for the resource. */
  identity?: Identity;
  /**
   * Metadata pertaining to creation and last modification of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** The geo-location where the resource lives */
  location?: string;
  /** Properties of Cognitive Services account. */
  properties?: AccountProperties;
}

/** Cognitive Services account deployment. */
export interface Deployment extends ProxyResource {
  /**
   * Metadata pertaining to creation and last modification of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
  /**
   * Resource Etag.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly etag?: string;
  /** Properties of Cognitive Services account deployment. */
  properties?: DeploymentProperties;
}

/** Cognitive Services account commitment plan. */
export interface CommitmentPlan extends ProxyResource {
  /**
   * Metadata pertaining to creation and last modification of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
  /**
   * Resource Etag.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly etag?: string;
  /** The Kind of the resource. */
  kind?: string;
  /** The resource model definition representing SKU */
  sku?: Sku;
  /** Resource tags. */
  tags?: { [propertyName: string]: string };
  /** The geo-location where the resource lives */
  location?: string;
  /** Properties of Cognitive Services account commitment plan. */
  properties?: CommitmentPlanProperties;
}

/** The commitment plan association. */
export interface CommitmentPlanAccountAssociation extends ProxyResource {
  /**
   * Metadata pertaining to creation and last modification of the resource.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly systemData?: SystemData;
  /**
   * Resource Etag.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly etag?: string;
  /** The Azure resource id of the account. */
  accountId?: string;
}

/** Defines headers for CommitmentPlans_updatePlan operation. */
export interface CommitmentPlansUpdatePlanHeaders {
  location?: string;
}

/** Defines headers for CommitmentPlans_deletePlan operation. */
export interface CommitmentPlansDeletePlanHeaders {
  location?: string;
}

/** Defines headers for CommitmentPlans_deleteAssociation operation. */
export interface CommitmentPlansDeleteAssociationHeaders {
  location?: string;
}

/** Known values of {@link SkuTier} that the service accepts. */
export enum KnownSkuTier {
  /** Free */
  Free = "Free",
  /** Basic */
  Basic = "Basic",
  /** Standard */
  Standard = "Standard",
  /** Premium */
  Premium = "Premium",
  /** Enterprise */
  Enterprise = "Enterprise"
}

/**
 * Defines values for SkuTier. \
 * {@link KnownSkuTier} can be used interchangeably with SkuTier,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Free** \
 * **Basic** \
 * **Standard** \
 * **Premium** \
 * **Enterprise**
 */
export type SkuTier = string;

/** Known values of {@link CreatedByType} that the service accepts. */
export enum KnownCreatedByType {
  /** User */
  User = "User",
  /** Application */
  Application = "Application",
  /** ManagedIdentity */
  ManagedIdentity = "ManagedIdentity",
  /** Key */
  Key = "Key"
}

/**
 * Defines values for CreatedByType. \
 * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **User** \
 * **Application** \
 * **ManagedIdentity** \
 * **Key**
 */
export type CreatedByType = string;

/** Known values of {@link ProvisioningState} that the service accepts. */
export enum KnownProvisioningState {
  /** Accepted */
  Accepted = "Accepted",
  /** Creating */
  Creating = "Creating",
  /** Deleting */
  Deleting = "Deleting",
  /** Moving */
  Moving = "Moving",
  /** Failed */
  Failed = "Failed",
  /** Succeeded */
  Succeeded = "Succeeded",
  /** ResolvingDNS */
  ResolvingDNS = "ResolvingDNS"
}

/**
 * Defines values for ProvisioningState. \
 * {@link KnownProvisioningState} can be used interchangeably with ProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Accepted** \
 * **Creating** \
 * **Deleting** \
 * **Moving** \
 * **Failed** \
 * **Succeeded** \
 * **ResolvingDNS**
 */
export type ProvisioningState = string;

/** Known values of {@link NetworkRuleAction} that the service accepts. */
export enum KnownNetworkRuleAction {
  /** Allow */
  Allow = "Allow",
  /** Deny */
  Deny = "Deny"
}

/**
 * Defines values for NetworkRuleAction. \
 * {@link KnownNetworkRuleAction} can be used interchangeably with NetworkRuleAction,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Allow** \
 * **Deny**
 */
export type NetworkRuleAction = string;

/** Known values of {@link KeySource} that the service accepts. */
export enum KnownKeySource {
  /** MicrosoftCognitiveServices */
  MicrosoftCognitiveServices = "Microsoft.CognitiveServices",
  /** MicrosoftKeyVault */
  MicrosoftKeyVault = "Microsoft.KeyVault"
}

/**
 * Defines values for KeySource. \
 * {@link KnownKeySource} can be used interchangeably with KeySource,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Microsoft.CognitiveServices** \
 * **Microsoft.KeyVault**
 */
export type KeySource = string;

/** Known values of {@link PrivateEndpointServiceConnectionStatus} that the service accepts. */
export enum KnownPrivateEndpointServiceConnectionStatus {
  /** Pending */
  Pending = "Pending",
  /** Approved */
  Approved = "Approved",
  /** Rejected */
  Rejected = "Rejected"
}

/**
 * Defines values for PrivateEndpointServiceConnectionStatus. \
 * {@link KnownPrivateEndpointServiceConnectionStatus} can be used interchangeably with PrivateEndpointServiceConnectionStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Pending** \
 * **Approved** \
 * **Rejected**
 */
export type PrivateEndpointServiceConnectionStatus = string;

/** Known values of {@link PrivateEndpointConnectionProvisioningState} that the service accepts. */
export enum KnownPrivateEndpointConnectionProvisioningState {
  /** Succeeded */
  Succeeded = "Succeeded",
  /** Creating */
  Creating = "Creating",
  /** Deleting */
  Deleting = "Deleting",
  /** Failed */
  Failed = "Failed"
}

/**
 * Defines values for PrivateEndpointConnectionProvisioningState. \
 * {@link KnownPrivateEndpointConnectionProvisioningState} can be used interchangeably with PrivateEndpointConnectionProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Succeeded** \
 * **Creating** \
 * **Deleting** \
 * **Failed**
 */
export type PrivateEndpointConnectionProvisioningState = string;

/** Known values of {@link PublicNetworkAccess} that the service accepts. */
export enum KnownPublicNetworkAccess {
  /** Enabled */
  Enabled = "Enabled",
  /** Disabled */
  Disabled = "Disabled"
}

/**
 * Defines values for PublicNetworkAccess. \
 * {@link KnownPublicNetworkAccess} can be used interchangeably with PublicNetworkAccess,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Enabled** \
 * **Disabled**
 */
export type PublicNetworkAccess = string;

/** Known values of {@link RoutingMethods} that the service accepts. */
export enum KnownRoutingMethods {
  /** Priority */
  Priority = "Priority",
  /** Weighted */
  Weighted = "Weighted",
  /** Performance */
  Performance = "Performance"
}

/**
 * Defines values for RoutingMethods. \
 * {@link KnownRoutingMethods} can be used interchangeably with RoutingMethods,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Priority** \
 * **Weighted** \
 * **Performance**
 */
export type RoutingMethods = string;

/** Known values of {@link ResourceSkuRestrictionsReasonCode} that the service accepts. */
export enum KnownResourceSkuRestrictionsReasonCode {
  /** QuotaId */
  QuotaId = "QuotaId",
  /** NotAvailableForSubscription */
  NotAvailableForSubscription = "NotAvailableForSubscription"
}

/**
 * Defines values for ResourceSkuRestrictionsReasonCode. \
 * {@link KnownResourceSkuRestrictionsReasonCode} can be used interchangeably with ResourceSkuRestrictionsReasonCode,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **QuotaId** \
 * **NotAvailableForSubscription**
 */
export type ResourceSkuRestrictionsReasonCode = string;

/** Known values of {@link UnitType} that the service accepts. */
export enum KnownUnitType {
  /** Count */
  Count = "Count",
  /** Bytes */
  Bytes = "Bytes",
  /** Seconds */
  Seconds = "Seconds",
  /** Percent */
  Percent = "Percent",
  /** CountPerSecond */
  CountPerSecond = "CountPerSecond",
  /** BytesPerSecond */
  BytesPerSecond = "BytesPerSecond",
  /** Milliseconds */
  Milliseconds = "Milliseconds"
}

/**
 * Defines values for UnitType. \
 * {@link KnownUnitType} can be used interchangeably with UnitType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Count** \
 * **Bytes** \
 * **Seconds** \
 * **Percent** \
 * **CountPerSecond** \
 * **BytesPerSecond** \
 * **Milliseconds**
 */
export type UnitType = string;

/** Known values of {@link QuotaUsageStatus} that the service accepts. */
export enum KnownQuotaUsageStatus {
  /** Included */
  Included = "Included",
  /** Blocked */
  Blocked = "Blocked",
  /** InOverage */
  InOverage = "InOverage",
  /** Unknown */
  Unknown = "Unknown"
}

/**
 * Defines values for QuotaUsageStatus. \
 * {@link KnownQuotaUsageStatus} can be used interchangeably with QuotaUsageStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Included** \
 * **Blocked** \
 * **InOverage** \
 * **Unknown**
 */
export type QuotaUsageStatus = string;

/** Known values of {@link ModelLifecycleStatus} that the service accepts. */
export enum KnownModelLifecycleStatus {
  /** GenerallyAvailable */
  GenerallyAvailable = "GenerallyAvailable",
  /** Preview */
  Preview = "Preview"
}

/**
 * Defines values for ModelLifecycleStatus. \
 * {@link KnownModelLifecycleStatus} can be used interchangeably with ModelLifecycleStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **GenerallyAvailable** \
 * **Preview**
 */
export type ModelLifecycleStatus = string;

/** Known values of {@link Origin} that the service accepts. */
export enum KnownOrigin {
  /** User */
  User = "user",
  /** System */
  System = "system",
  /** UserSystem */
  UserSystem = "user,system"
}

/**
 * Defines values for Origin. \
 * {@link KnownOrigin} can be used interchangeably with Origin,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **user** \
 * **system** \
 * **user,system**
 */
export type Origin = string;

/** Known values of {@link ActionType} that the service accepts. */
export enum KnownActionType {
  /** Internal */
  Internal = "Internal"
}

/**
 * Defines values for ActionType. \
 * {@link KnownActionType} can be used interchangeably with ActionType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Internal**
 */
export type ActionType = string;

/** Known values of {@link HostingModel} that the service accepts. */
export enum KnownHostingModel {
  /** Web */
  Web = "Web",
  /** ConnectedContainer */
  ConnectedContainer = "ConnectedContainer",
  /** DisconnectedContainer */
  DisconnectedContainer = "DisconnectedContainer"
}

/**
 * Defines values for HostingModel. \
 * {@link KnownHostingModel} can be used interchangeably with HostingModel,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Web** \
 * **ConnectedContainer** \
 * **DisconnectedContainer**
 */
export type HostingModel = string;

/** Known values of {@link DeploymentProvisioningState} that the service accepts. */
export enum KnownDeploymentProvisioningState {
  /** Accepted */
  Accepted = "Accepted",
  /** Creating */
  Creating = "Creating",
  /** Deleting */
  Deleting = "Deleting",
  /** Moving */
  Moving = "Moving",
  /** Failed */
  Failed = "Failed",
  /** Succeeded */
  Succeeded = "Succeeded"
}

/**
 * Defines values for DeploymentProvisioningState. \
 * {@link KnownDeploymentProvisioningState} can be used interchangeably with DeploymentProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Accepted** \
 * **Creating** \
 * **Deleting** \
 * **Moving** \
 * **Failed** \
 * **Succeeded**
 */
export type DeploymentProvisioningState = string;

/** Known values of {@link DeploymentScaleType} that the service accepts. */
export enum KnownDeploymentScaleType {
  /** Standard */
  Standard = "Standard",
  /** Manual */
  Manual = "Manual"
}

/**
 * Defines values for DeploymentScaleType. \
 * {@link KnownDeploymentScaleType} can be used interchangeably with DeploymentScaleType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Standard** \
 * **Manual**
 */
export type DeploymentScaleType = string;

/** Known values of {@link CommitmentPlanProvisioningState} that the service accepts. */
export enum KnownCommitmentPlanProvisioningState {
  /** Accepted */
  Accepted = "Accepted",
  /** Creating */
  Creating = "Creating",
  /** Deleting */
  Deleting = "Deleting",
  /** Moving */
  Moving = "Moving",
  /** Failed */
  Failed = "Failed",
  /** Succeeded */
  Succeeded = "Succeeded",
  /** Canceled */
  Canceled = "Canceled"
}

/**
 * Defines values for CommitmentPlanProvisioningState. \
 * {@link KnownCommitmentPlanProvisioningState} can be used interchangeably with CommitmentPlanProvisioningState,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **Accepted** \
 * **Creating** \
 * **Deleting** \
 * **Moving** \
 * **Failed** \
 * **Succeeded** \
 * **Canceled**
 */
export type CommitmentPlanProvisioningState = string;
/** Defines values for ResourceIdentityType. */
export type ResourceIdentityType =
  | "None"
  | "SystemAssigned"
  | "UserAssigned"
  | "SystemAssigned, UserAssigned";
/** Defines values for KeyName. */
export type KeyName = "Key1" | "Key2";
/** Defines values for ResourceSkuRestrictionsType. */
export type ResourceSkuRestrictionsType = "Location" | "Zone";

/** Optional parameters. */
export interface AccountsCreateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the create operation. */
export type AccountsCreateResponse = Account;

/** Optional parameters. */
export interface AccountsUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the update operation. */
export type AccountsUpdateResponse = Account;

/** Optional parameters. */
export interface AccountsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface AccountsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type AccountsGetResponse = Account;

/** Optional parameters. */
export interface AccountsListByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroup operation. */
export type AccountsListByResourceGroupResponse = AccountListResult;

/** Optional parameters. */
export interface AccountsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type AccountsListResponse = AccountListResult;

/** Optional parameters. */
export interface AccountsListKeysOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listKeys operation. */
export type AccountsListKeysResponse = ApiKeys;

/** Optional parameters. */
export interface AccountsRegenerateKeyOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the regenerateKey operation. */
export type AccountsRegenerateKeyResponse = ApiKeys;

/** Optional parameters. */
export interface AccountsListSkusOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listSkus operation. */
export type AccountsListSkusResponse = AccountSkuListResult;

/** Optional parameters. */
export interface AccountsListUsagesOptionalParams
  extends coreClient.OperationOptions {
  /** An OData filter expression that describes a subset of usages to return. The supported parameter is name.value (name of the metric, can have an or of multiple names). */
  filter?: string;
}

/** Contains response data for the listUsages operation. */
export type AccountsListUsagesResponse = UsageListResult;

/** Optional parameters. */
export interface AccountsListModelsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listModels operation. */
export type AccountsListModelsResponse = AccountModelListResult;

/** Optional parameters. */
export interface AccountsListByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listByResourceGroupNext operation. */
export type AccountsListByResourceGroupNextResponse = AccountListResult;

/** Optional parameters. */
export interface AccountsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type AccountsListNextResponse = AccountListResult;

/** Optional parameters. */
export interface AccountsListModelsNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listModelsNext operation. */
export type AccountsListModelsNextResponse = AccountModelListResult;

/** Optional parameters. */
export interface DeletedAccountsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type DeletedAccountsGetResponse = Account;

/** Optional parameters. */
export interface DeletedAccountsPurgeOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface DeletedAccountsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type DeletedAccountsListResponse = AccountListResult;

/** Optional parameters. */
export interface DeletedAccountsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type DeletedAccountsListNextResponse = AccountListResult;

/** Optional parameters. */
export interface ResourceSkusListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type ResourceSkusListResponse = ResourceSkuListResult;

/** Optional parameters. */
export interface ResourceSkusListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type ResourceSkusListNextResponse = ResourceSkuListResult;

/** Optional parameters. */
export interface OperationsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type OperationsListResponse = OperationListResult;

/** Optional parameters. */
export interface OperationsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type OperationsListNextResponse = OperationListResult;

/** Optional parameters. */
export interface CheckSkuAvailabilityOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the checkSkuAvailability operation. */
export type CheckSkuAvailabilityResponse = SkuAvailabilityListResult;

/** Optional parameters. */
export interface CheckDomainAvailabilityOptionalParams
  extends coreClient.OperationOptions {
  /** The Kind of the resource. */
  kind?: string;
}

/** Contains response data for the checkDomainAvailability operation. */
export type CheckDomainAvailabilityResponse = DomainAvailability;

/** Optional parameters. */
export interface CommitmentTiersListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type CommitmentTiersListResponse = CommitmentTierListResult;

/** Optional parameters. */
export interface CommitmentTiersListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type CommitmentTiersListNextResponse = CommitmentTierListResult;

/** Optional parameters. */
export interface PrivateEndpointConnectionsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type PrivateEndpointConnectionsListResponse = PrivateEndpointConnectionListResult;

/** Optional parameters. */
export interface PrivateEndpointConnectionsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type PrivateEndpointConnectionsGetResponse = PrivateEndpointConnection;

/** Optional parameters. */
export interface PrivateEndpointConnectionsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type PrivateEndpointConnectionsCreateOrUpdateResponse = PrivateEndpointConnection;

/** Optional parameters. */
export interface PrivateEndpointConnectionsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface PrivateLinkResourcesListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type PrivateLinkResourcesListResponse = PrivateLinkResourceListResult;

/** Optional parameters. */
export interface DeploymentsListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type DeploymentsListResponse = DeploymentListResult;

/** Optional parameters. */
export interface DeploymentsGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type DeploymentsGetResponse = Deployment;

/** Optional parameters. */
export interface DeploymentsCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdate operation. */
export type DeploymentsCreateOrUpdateResponse = Deployment;

/** Optional parameters. */
export interface DeploymentsDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface DeploymentsListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type DeploymentsListNextResponse = DeploymentListResult;

/** Optional parameters. */
export interface CommitmentPlansListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the list operation. */
export type CommitmentPlansListResponse = CommitmentPlanListResult;

/** Optional parameters. */
export interface CommitmentPlansGetOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the get operation. */
export type CommitmentPlansGetResponse = CommitmentPlan;

/** Optional parameters. */
export interface CommitmentPlansCreateOrUpdateOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the createOrUpdate operation. */
export type CommitmentPlansCreateOrUpdateResponse = CommitmentPlan;

/** Optional parameters. */
export interface CommitmentPlansDeleteOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface CommitmentPlansCreateOrUpdatePlanOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdatePlan operation. */
export type CommitmentPlansCreateOrUpdatePlanResponse = CommitmentPlan;

/** Optional parameters. */
export interface CommitmentPlansUpdatePlanOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the updatePlan operation. */
export type CommitmentPlansUpdatePlanResponse = CommitmentPlan;

/** Optional parameters. */
export interface CommitmentPlansDeletePlanOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface CommitmentPlansGetPlanOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getPlan operation. */
export type CommitmentPlansGetPlanResponse = CommitmentPlan;

/** Optional parameters. */
export interface CommitmentPlansListPlansByResourceGroupOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listPlansByResourceGroup operation. */
export type CommitmentPlansListPlansByResourceGroupResponse = CommitmentPlanListResult;

/** Optional parameters. */
export interface CommitmentPlansListPlansBySubscriptionOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listPlansBySubscription operation. */
export type CommitmentPlansListPlansBySubscriptionResponse = CommitmentPlanListResult;

/** Optional parameters. */
export interface CommitmentPlansListAssociationsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listAssociations operation. */
export type CommitmentPlansListAssociationsResponse = CommitmentPlanAccountAssociationListResult;

/** Optional parameters. */
export interface CommitmentPlansGetAssociationOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getAssociation operation. */
export type CommitmentPlansGetAssociationResponse = CommitmentPlanAccountAssociation;

/** Optional parameters. */
export interface CommitmentPlansCreateOrUpdateAssociationOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Contains response data for the createOrUpdateAssociation operation. */
export type CommitmentPlansCreateOrUpdateAssociationResponse = CommitmentPlanAccountAssociation;

/** Optional parameters. */
export interface CommitmentPlansDeleteAssociationOptionalParams
  extends coreClient.OperationOptions {
  /** Delay to wait until next poll, in milliseconds. */
  updateIntervalInMs?: number;
  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */
  resumeFrom?: string;
}

/** Optional parameters. */
export interface CommitmentPlansListNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listNext operation. */
export type CommitmentPlansListNextResponse = CommitmentPlanListResult;

/** Optional parameters. */
export interface CommitmentPlansListPlansByResourceGroupNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listPlansByResourceGroupNext operation. */
export type CommitmentPlansListPlansByResourceGroupNextResponse = CommitmentPlanListResult;

/** Optional parameters. */
export interface CommitmentPlansListPlansBySubscriptionNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listPlansBySubscriptionNext operation. */
export type CommitmentPlansListPlansBySubscriptionNextResponse = CommitmentPlanListResult;

/** Optional parameters. */
export interface CommitmentPlansListAssociationsNextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listAssociationsNext operation. */
export type CommitmentPlansListAssociationsNextResponse = CommitmentPlanAccountAssociationListResult;

/** Optional parameters. */
export interface CognitiveServicesManagementClientOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Api Version */
  apiVersion?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
