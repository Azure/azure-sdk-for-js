{"version":3,"file":"defenderForAISettings.js","sourceRoot":"","sources":["../../../src/operations/defenderForAISettings.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper.js\";\nimport { DefenderForAISettings } from \"../operationsInterfaces/index.js\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers.js\";\nimport * as Parameters from \"../models/parameters.js\";\nimport { CognitiveServicesManagementClient } from \"../cognitiveServicesManagementClient.js\";\nimport {\n  DefenderForAISetting,\n  DefenderForAISettingsListNextOptionalParams,\n  DefenderForAISettingsListOptionalParams,\n  DefenderForAISettingsListResponse,\n  DefenderForAISettingsGetOptionalParams,\n  DefenderForAISettingsGetResponse,\n  DefenderForAISettingsCreateOrUpdateOptionalParams,\n  DefenderForAISettingsCreateOrUpdateResponse,\n  DefenderForAISettingsUpdateOptionalParams,\n  DefenderForAISettingsUpdateResponse,\n  DefenderForAISettingsListNextResponse,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing DefenderForAISettings operations. */\nexport class DefenderForAISettingsImpl implements DefenderForAISettings {\n  private readonly client: CognitiveServicesManagementClient;\n\n  /**\n   * Initialize a new instance of the class DefenderForAISettings class.\n   * @param client Reference to the service client\n   */\n  constructor(client: CognitiveServicesManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists the Defender for AI settings.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param accountName The name of Cognitive Services account.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    accountName: string,\n    options?: DefenderForAISettingsListOptionalParams,\n  ): PagedAsyncIterableIterator<DefenderForAISetting> {\n    const iter = this.listPagingAll(resourceGroupName, accountName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(\n          resourceGroupName,\n          accountName,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    accountName: string,\n    options?: DefenderForAISettingsListOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<DefenderForAISetting[]> {\n    let result: DefenderForAISettingsListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(resourceGroupName, accountName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        accountName,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    accountName: string,\n    options?: DefenderForAISettingsListOptionalParams,\n  ): AsyncIterableIterator<DefenderForAISetting> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      accountName,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists the Defender for AI settings.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param accountName The name of Cognitive Services account.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    accountName: string,\n    options?: DefenderForAISettingsListOptionalParams,\n  ): Promise<DefenderForAISettingsListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountName, options },\n      listOperationSpec,\n    );\n  }\n\n  /**\n   * Gets the specified Defender for AI setting by name.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param accountName The name of Cognitive Services account.\n   * @param defenderForAISettingName The name of the defender for AI setting.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    accountName: string,\n    defenderForAISettingName: string,\n    options?: DefenderForAISettingsGetOptionalParams,\n  ): Promise<DefenderForAISettingsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountName, defenderForAISettingName, options },\n      getOperationSpec,\n    );\n  }\n\n  /**\n   * Creates or Updates the specified Defender for AI setting.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param accountName The name of Cognitive Services account.\n   * @param defenderForAISettingName The name of the defender for AI setting.\n   * @param defenderForAISettings Properties describing the Defender for AI setting.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    accountName: string,\n    defenderForAISettingName: string,\n    defenderForAISettings: DefenderForAISetting,\n    options?: DefenderForAISettingsCreateOrUpdateOptionalParams,\n  ): Promise<DefenderForAISettingsCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        accountName,\n        defenderForAISettingName,\n        defenderForAISettings,\n        options,\n      },\n      createOrUpdateOperationSpec,\n    );\n  }\n\n  /**\n   * Updates the specified Defender for AI setting.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param accountName The name of Cognitive Services account.\n   * @param defenderForAISettingName The name of the defender for AI setting.\n   * @param defenderForAISettings Properties describing the Defender for AI setting.\n   * @param options The options parameters.\n   */\n  update(\n    resourceGroupName: string,\n    accountName: string,\n    defenderForAISettingName: string,\n    defenderForAISettings: DefenderForAISetting,\n    options?: DefenderForAISettingsUpdateOptionalParams,\n  ): Promise<DefenderForAISettingsUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        accountName,\n        defenderForAISettingName,\n        defenderForAISettings,\n        options,\n      },\n      updateOperationSpec,\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param accountName The name of Cognitive Services account.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    accountName: string,\n    nextLink: string,\n    options?: DefenderForAISettingsListNextOptionalParams,\n  ): Promise<DefenderForAISettingsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountName, nextLink, options },\n      listNextOperationSpec,\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CognitiveServices/accounts/{accountName}/defenderForAISettings\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DefenderForAISettingResult,\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.accountName,\n    Parameters.subscriptionId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CognitiveServices/accounts/{accountName}/defenderForAISettings/{defenderForAISettingName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DefenderForAISetting,\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.accountName,\n    Parameters.subscriptionId,\n    Parameters.defenderForAISettingName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CognitiveServices/accounts/{accountName}/defenderForAISettings/{defenderForAISettingName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DefenderForAISetting,\n    },\n    201: {\n      bodyMapper: Mappers.DefenderForAISetting,\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse,\n    },\n  },\n  requestBody: Parameters.defenderForAISettings,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.accountName,\n    Parameters.subscriptionId,\n    Parameters.defenderForAISettingName,\n  ],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer,\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CognitiveServices/accounts/{accountName}/defenderForAISettings/{defenderForAISettingName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DefenderForAISetting,\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse,\n    },\n  },\n  requestBody: Parameters.defenderForAISettings,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.accountName,\n    Parameters.subscriptionId,\n    Parameters.defenderForAISettingName,\n  ],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer,\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DefenderForAISettingResult,\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.accountName,\n    Parameters.subscriptionId,\n    Parameters.nextLink,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\n"]}