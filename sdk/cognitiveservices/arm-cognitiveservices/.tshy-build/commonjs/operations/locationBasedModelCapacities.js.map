{"version":3,"file":"locationBasedModelCapacities.js","sourceRoot":"","sources":["../../../src/operations/locationBasedModelCapacities.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper.js\";\nimport { LocationBasedModelCapacities } from \"../operationsInterfaces/index.js\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers.js\";\nimport * as Parameters from \"../models/parameters.js\";\nimport { CognitiveServicesManagementClient } from \"../cognitiveServicesManagementClient.js\";\nimport {\n  ModelCapacityListResultValueItem,\n  LocationBasedModelCapacitiesListNextOptionalParams,\n  LocationBasedModelCapacitiesListOptionalParams,\n  LocationBasedModelCapacitiesListResponse,\n  LocationBasedModelCapacitiesListNextResponse,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing LocationBasedModelCapacities operations. */\nexport class LocationBasedModelCapacitiesImpl\n  implements LocationBasedModelCapacities\n{\n  private readonly client: CognitiveServicesManagementClient;\n\n  /**\n   * Initialize a new instance of the class LocationBasedModelCapacities class.\n   * @param client Reference to the service client\n   */\n  constructor(client: CognitiveServicesManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * List Location Based ModelCapacities.\n   * @param location Resource location.\n   * @param modelFormat The format of the Model\n   * @param modelName The name of the Model\n   * @param modelVersion The version of the Model\n   * @param options The options parameters.\n   */\n  public list(\n    location: string,\n    modelFormat: string,\n    modelName: string,\n    modelVersion: string,\n    options?: LocationBasedModelCapacitiesListOptionalParams,\n  ): PagedAsyncIterableIterator<ModelCapacityListResultValueItem> {\n    const iter = this.listPagingAll(\n      location,\n      modelFormat,\n      modelName,\n      modelVersion,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(\n          location,\n          modelFormat,\n          modelName,\n          modelVersion,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listPagingPage(\n    location: string,\n    modelFormat: string,\n    modelName: string,\n    modelVersion: string,\n    options?: LocationBasedModelCapacitiesListOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<ModelCapacityListResultValueItem[]> {\n    let result: LocationBasedModelCapacitiesListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(\n        location,\n        modelFormat,\n        modelName,\n        modelVersion,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(location, continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    location: string,\n    modelFormat: string,\n    modelName: string,\n    modelVersion: string,\n    options?: LocationBasedModelCapacitiesListOptionalParams,\n  ): AsyncIterableIterator<ModelCapacityListResultValueItem> {\n    for await (const page of this.listPagingPage(\n      location,\n      modelFormat,\n      modelName,\n      modelVersion,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * List Location Based ModelCapacities.\n   * @param location Resource location.\n   * @param modelFormat The format of the Model\n   * @param modelName The name of the Model\n   * @param modelVersion The version of the Model\n   * @param options The options parameters.\n   */\n  private _list(\n    location: string,\n    modelFormat: string,\n    modelName: string,\n    modelVersion: string,\n    options?: LocationBasedModelCapacitiesListOptionalParams,\n  ): Promise<LocationBasedModelCapacitiesListResponse> {\n    return this.client.sendOperationRequest(\n      { location, modelFormat, modelName, modelVersion, options },\n      listOperationSpec,\n    );\n  }\n\n  /**\n   * ListNext\n   * @param location Resource location.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    location: string,\n    nextLink: string,\n    options?: LocationBasedModelCapacitiesListNextOptionalParams,\n  ): Promise<LocationBasedModelCapacitiesListNextResponse> {\n    return this.client.sendOperationRequest(\n      { location, nextLink, options },\n      listNextOperationSpec,\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/providers/Microsoft.CognitiveServices/locations/{location}/modelCapacities\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ModelCapacityListResult,\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse,\n    },\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.modelFormat,\n    Parameters.modelName,\n    Parameters.modelVersion,\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.location,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ModelCapacityListResult,\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink,\n    Parameters.location,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\n"]}