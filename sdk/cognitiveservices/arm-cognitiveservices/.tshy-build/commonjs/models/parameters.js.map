{"version":3,"file":"parameters.js","sourceRoot":"","sources":["../../../src/models/parameters.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG;;;AAOH,qDAgB8B;AAEjB,QAAA,WAAW,GAAuB;IAC7C,aAAa,EAAE,CAAC,SAAS,EAAE,aAAa,CAAC;IACzC,MAAM,EAAE;QACN,YAAY,EAAE,kBAAkB;QAChC,UAAU,EAAE,IAAI;QAChB,cAAc,EAAE,cAAc;QAC9B,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEW,QAAA,OAAO,GAAuB;IACzC,aAAa,EAAE,SAAS;IACxB,MAAM,EAAE,oBAAa;CACtB,CAAC;AAEW,QAAA,MAAM,GAAuB;IACxC,aAAa,EAAE,QAAQ;IACvB,MAAM,EAAE;QACN,YAAY,EAAE,kBAAkB;QAChC,UAAU,EAAE,IAAI;QAChB,cAAc,EAAE,QAAQ;QACxB,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEW,QAAA,KAAK,GAA0B;IAC1C,aAAa,EAAE,OAAO;IACtB,MAAM,EAAE;QACN,cAAc,EAAE,OAAO;QACvB,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;IACD,YAAY,EAAE,IAAI;CACnB,CAAC;AAEW,QAAA,iBAAiB,GAA0B;IACtD,aAAa,EAAE,mBAAmB;IAClC,MAAM,EAAE;QACN,WAAW,EAAE;YACX,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC;SACb;QACD,cAAc,EAAE,mBAAmB;QACnC,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEW,QAAA,WAAW,GAA0B;IAChD,aAAa,EAAE,aAAa;IAC5B,MAAM,EAAE;QACN,WAAW,EAAE;YACX,OAAO,EAAE,IAAI,MAAM,CAAC,8BAA8B,CAAC;YACnD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC;SACb;QACD,cAAc,EAAE,aAAa;QAC7B,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEW,QAAA,UAAU,GAA4B;IACjD,aAAa,EAAE,YAAY;IAC3B,MAAM,EAAE;QACN,YAAY,EAAE,YAAY;QAC1B,UAAU,EAAE,IAAI;QAChB,cAAc,EAAE,aAAa;QAC7B,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEW,QAAA,cAAc,GAA0B;IACnD,aAAa,EAAE,gBAAgB;IAC/B,MAAM,EAAE;QACN,WAAW,EAAE;YACX,SAAS,EAAE,CAAC;SACb;QACD,cAAc,EAAE,gBAAgB;QAChC,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEW,QAAA,OAAO,GAAuB;IACzC,aAAa,EAAE,SAAS;IACxB,MAAM,EAAE,oCAA6B;CACtC,CAAC;AAEW,QAAA,MAAM,GAA4B;IAC7C,aAAa,EAAE,CAAC,SAAS,EAAE,QAAQ,CAAC;IACpC,MAAM,EAAE;QACN,cAAc,EAAE,SAAS;QACzB,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEW,QAAA,QAAQ,GAA0B;IAC7C,aAAa,EAAE,UAAU;IACzB,MAAM,EAAE;QACN,cAAc,EAAE,UAAU;QAC1B,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;IACD,YAAY,EAAE,IAAI;CACnB,CAAC;AAEW,QAAA,QAAQ,GAA0B;IAC7C,aAAa,EAAE,UAAU;IACzB,MAAM,EAAE;QACN,cAAc,EAAE,UAAU;QAC1B,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEW,QAAA,IAAI,GAAuB;IACtC,aAAa,EAAE,MAAM;IACrB,MAAM,EAAE,0CAAmC;CAC5C,CAAC;AAEW,QAAA,IAAI,GAAuB;IACtC,aAAa,EAAE,MAAM;IACrB,MAAM,EAAE,0CAAmC;CAC5C,CAAC;AAEW,QAAA,SAAS,GAAuB;IAC3C,aAAa,EAAE,WAAW;IAC1B,MAAM,EAAE,0CAAmC;CAC5C,CAAC;AAEW,QAAA,aAAa,GAAuB;IAC/C,aAAa,EAAE,eAAe;IAC9B,MAAM,EAAE,6CAAsC;CAC/C,CAAC;AAEW,QAAA,UAAU,GAAuB;IAC5C,aAAa,EAAE,WAAW;IAC1B,MAAM,EAAE,6CAAsC;CAC/C,CAAC;AAEW,QAAA,KAAK,GAAuB;IACvC,aAAa,EAAE,CAAC,SAAS,EAAE,MAAM,CAAC;IAClC,MAAM,EAAE,6CAAsC;CAC/C,CAAC;AAEW,QAAA,KAAK,GAAuB;IACvC,aAAa,EAAE,CAAC,SAAS,EAAE,OAAO,CAAC;IACnC,MAAM,EAAE,4CAAqC;CAC9C,CAAC;AAEW,QAAA,OAAO,GAAuB;IACzC,aAAa,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC;IACrC,MAAM,EAAE,4CAAqC;CAC9C,CAAC;AAEW,QAAA,SAAS,GAAuB;IAC3C,aAAa,EAAE,CAAC,SAAS,EAAE,WAAW,CAAC;IACvC,MAAM,EAAE,4CAAqC;CAC9C,CAAC;AAEW,QAAA,WAAW,GAA4B;IAClD,aAAa,EAAE,aAAa;IAC5B,MAAM,EAAE;QACN,WAAW,EAAE;YACX,OAAO,EAAE,IAAI,MAAM,CAAC,8BAA8B,CAAC;SACpD;QACD,cAAc,EAAE,aAAa;QAC7B,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEW,QAAA,SAAS,GAA4B;IAChD,aAAa,EAAE,WAAW;IAC1B,MAAM,EAAE;QACN,WAAW,EAAE;YACX,OAAO,EAAE,IAAI,MAAM,CAAC,8BAA8B,CAAC;SACpD;QACD,cAAc,EAAE,WAAW;QAC3B,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEW,QAAA,YAAY,GAA4B;IACnD,aAAa,EAAE,cAAc;IAC7B,MAAM,EAAE;QACN,WAAW,EAAE;YACX,OAAO,EAAE,IAAI,MAAM,CAAC,8BAA8B,CAAC;SACpD;QACD,cAAc,EAAE,cAAc;QAC9B,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEW,QAAA,6BAA6B,GAA0B;IAClE,aAAa,EAAE,+BAA+B;IAC9C,MAAM,EAAE;QACN,cAAc,EAAE,+BAA+B;QAC/C,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEW,QAAA,UAAU,GAAuB;IAC5C,aAAa,EAAE,YAAY;IAC3B,MAAM,EAAE,sCAA+B;CACxC,CAAC;AAEW,QAAA,cAAc,GAA0B;IACnD,aAAa,EAAE,gBAAgB;IAC/B,MAAM,EAAE;QACN,cAAc,EAAE,gBAAgB;QAChC,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEW,QAAA,UAAU,GAAuB;IAC5C,aAAa,EAAE,YAAY;IAC3B,MAAM,EAAE,uBAAgB;CACzB,CAAC;AAEW,QAAA,WAAW,GAAuB;IAC7C,aAAa,EAAE,YAAY;IAC3B,MAAM,EAAE,oCAA6B;CACtC,CAAC;AAEW,QAAA,kBAAkB,GAA0B;IACvD,aAAa,EAAE,oBAAoB;IACnC,MAAM,EAAE;QACN,cAAc,EAAE,oBAAoB;QACpC,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEW,QAAA,cAAc,GAAuB;IAChD,aAAa,EAAE,gBAAgB;IAC/B,MAAM,EAAE,2BAAoB;CAC7B,CAAC;AAEW,QAAA,mBAAmB,GAA0B;IACxD,aAAa,EAAE,oBAAoB;IACnC,MAAM,EAAE;QACN,WAAW,EAAE;YACX,OAAO,EAAE,IAAI,MAAM,CAAC,8BAA8B,CAAC;SACpD;QACD,cAAc,EAAE,oBAAoB;QACpC,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEW,QAAA,eAAe,GAAuB;IACjD,aAAa,EAAE,gBAAgB;IAC/B,MAAM,EAAE,oCAA6B;CACtC,CAAC;AAEW,QAAA,6BAA6B,GAA0B;IAClE,aAAa,EAAE,+BAA+B;IAC9C,MAAM,EAAE;QACN,WAAW,EAAE;YACX,OAAO,EAAE,IAAI,MAAM,CAAC,8BAA8B,CAAC;SACpD;QACD,cAAc,EAAE,+BAA+B;QAC/C,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEW,QAAA,WAAW,GAAuB;IAC7C,aAAa,EAAE,aAAa;IAC5B,MAAM,EAAE,6CAAsC;CAC/C,CAAC;AAEW,QAAA,mBAAmB,GAA0B;IACxD,aAAa,EAAE,qBAAqB;IACpC,MAAM,EAAE;QACN,WAAW,EAAE;YACX,OAAO,EAAE,IAAI,MAAM,CAAC,8BAA8B,CAAC;SACpD;QACD,cAAc,EAAE,qBAAqB;QACrC,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEW,QAAA,eAAe,GAAuB;IACjD,aAAa,EAAE,iBAAiB;IAChC,MAAM,EAAE,4BAAqB;CAC9B,CAAC;AAEW,QAAA,aAAa,GAA0B;IAClD,aAAa,EAAE,eAAe;IAC9B,MAAM,EAAE;QACN,WAAW,EAAE;YACX,OAAO,EAAE,IAAI,MAAM,CAAC,8BAA8B,CAAC;SACpD;QACD,cAAc,EAAE,eAAe;QAC/B,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEW,QAAA,SAAS,GAAuB;IAC3C,aAAa,EAAE,WAAW;IAC1B,MAAM,EAAE,sBAAe;CACxB,CAAC;AAEW,QAAA,gBAAgB,GAA0B;IACrD,aAAa,EAAE,kBAAkB;IACjC,MAAM,EAAE;QACN,WAAW,EAAE;YACX,OAAO,EAAE,IAAI,MAAM,CAAC,8BAA8B,CAAC;SACpD;QACD,cAAc,EAAE,kBAAkB;QAClC,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEW,QAAA,YAAY,GAAuB;IAC9C,aAAa,EAAE,cAAc;IAC7B,MAAM,EAAE,yBAAkB;CAC3B,CAAC;AAEW,QAAA,oBAAoB,GAA0B;IACzD,aAAa,EAAE,sBAAsB;IACrC,MAAM,EAAE;QACN,WAAW,EAAE;YACX,OAAO,EAAE,IAAI,MAAM,CAAC,8BAA8B,CAAC;SACpD;QACD,cAAc,EAAE,sBAAsB;QACtC,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEW,QAAA,gBAAgB,GAAuB;IAClD,aAAa,EAAE,kBAAkB;IACjC,MAAM,EAAE,6BAAsB;CAC/B,CAAC;AAEW,QAAA,iBAAiB,GAAuB;IACnD,aAAa,EAAE,mBAAmB;IAClC,MAAM,EAAE;QACN,cAAc,EAAE,mBAAmB;QACnC,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,UAAU;YAChB,OAAO,EAAE;gBACP,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,6BAA6B;iBACzC;aACF;SACF;KACF;CACF,CAAC;AAEW,QAAA,sBAAsB,GAAuB;IACxD,aAAa,EAAE,wBAAwB;IACvC,MAAM,EAAE;QACN,cAAc,EAAE,wBAAwB;QACxC,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,UAAU;YAChB,OAAO,EAAE;gBACP,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEW,QAAA,UAAU,GAA0B;IAC/C,aAAa,EAAE,YAAY;IAC3B,MAAM,EAAE;QACN,WAAW,EAAE;YACX,OAAO,EAAE,IAAI,MAAM,CAAC,8BAA8B,CAAC;SACpD;QACD,cAAc,EAAE,YAAY;QAC5B,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEW,QAAA,oBAAoB,GAA0B;IACzD,aAAa,EAAE,sBAAsB;IACrC,MAAM,EAAE;QACN,WAAW,EAAE;YACX,OAAO,EAAE,IAAI,MAAM,CAAC,MAAM,CAAC;SAC5B;QACD,cAAc,EAAE,sBAAsB;QACtC,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEW,QAAA,wBAAwB,GAA0B;IAC7D,aAAa,EAAE,0BAA0B;IACzC,MAAM,EAAE;QACN,WAAW,EAAE;YACX,OAAO,EAAE,IAAI,MAAM,CAAC,8BAA8B,CAAC;SACpD;QACD,cAAc,EAAE,0BAA0B;QAC1C,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEW,QAAA,qBAAqB,GAAuB;IACvD,aAAa,EAAE,uBAAuB;IACtC,MAAM,EAAE,iCAA0B;CACnC,CAAC","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport {\n  OperationParameter,\n  OperationURLParameter,\n  OperationQueryParameter,\n} from \"@azure/core-client\";\nimport {\n  Account as AccountMapper,\n  RegenerateKeyParameters as RegenerateKeyParametersMapper,\n  CheckSkuAvailabilityParameter as CheckSkuAvailabilityParameterMapper,\n  CheckDomainAvailabilityParameter as CheckDomainAvailabilityParameterMapper,\n  CalculateModelCapacityParameter as CalculateModelCapacityParameterMapper,\n  PrivateEndpointConnection as PrivateEndpointConnectionMapper,\n  Deployment as DeploymentMapper,\n  PatchResourceTagsAndSku as PatchResourceTagsAndSkuMapper,\n  CommitmentPlan as CommitmentPlanMapper,\n  CommitmentPlanAccountAssociation as CommitmentPlanAccountAssociationMapper,\n  EncryptionScope as EncryptionScopeMapper,\n  RaiPolicy as RaiPolicyMapper,\n  RaiBlocklist as RaiBlocklistMapper,\n  RaiBlocklistItem as RaiBlocklistItemMapper,\n  DefenderForAISetting as DefenderForAISettingMapper,\n} from \"../models/mappers.js\";\n\nexport const contentType: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const account: OperationParameter = {\n  parameterPath: \"account\",\n  mapper: AccountMapper,\n};\n\nexport const accept: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const $host: OperationURLParameter = {\n  parameterPath: \"$host\",\n  mapper: {\n    serializedName: \"$host\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n  skipEncoding: true,\n};\n\nexport const resourceGroupName: OperationURLParameter = {\n  parameterPath: \"resourceGroupName\",\n  mapper: {\n    constraints: {\n      MaxLength: 90,\n      MinLength: 1,\n    },\n    serializedName: \"resourceGroupName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const accountName: OperationURLParameter = {\n  parameterPath: \"accountName\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^[a-zA-Z0-9][a-zA-Z0-9_.-]*$\"),\n      MaxLength: 64,\n      MinLength: 2,\n    },\n    serializedName: \"accountName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const apiVersion: OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    defaultValue: \"2024-10-01\",\n    isConstant: true,\n    serializedName: \"api-version\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const subscriptionId: OperationURLParameter = {\n  parameterPath: \"subscriptionId\",\n  mapper: {\n    constraints: {\n      MinLength: 1,\n    },\n    serializedName: \"subscriptionId\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const keyName: OperationParameter = {\n  parameterPath: \"keyName\",\n  mapper: RegenerateKeyParametersMapper,\n};\n\nexport const filter: OperationQueryParameter = {\n  parameterPath: [\"options\", \"filter\"],\n  mapper: {\n    serializedName: \"$filter\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const nextLink: OperationURLParameter = {\n  parameterPath: \"nextLink\",\n  mapper: {\n    serializedName: \"nextLink\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n  skipEncoding: true,\n};\n\nexport const location: OperationURLParameter = {\n  parameterPath: \"location\",\n  mapper: {\n    serializedName: \"location\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const skus: OperationParameter = {\n  parameterPath: \"skus\",\n  mapper: CheckSkuAvailabilityParameterMapper,\n};\n\nexport const kind: OperationParameter = {\n  parameterPath: \"kind\",\n  mapper: CheckSkuAvailabilityParameterMapper,\n};\n\nexport const typeParam: OperationParameter = {\n  parameterPath: \"typeParam\",\n  mapper: CheckSkuAvailabilityParameterMapper,\n};\n\nexport const subdomainName: OperationParameter = {\n  parameterPath: \"subdomainName\",\n  mapper: CheckDomainAvailabilityParameterMapper,\n};\n\nexport const typeParam1: OperationParameter = {\n  parameterPath: \"typeParam\",\n  mapper: CheckDomainAvailabilityParameterMapper,\n};\n\nexport const kind1: OperationParameter = {\n  parameterPath: [\"options\", \"kind\"],\n  mapper: CheckDomainAvailabilityParameterMapper,\n};\n\nexport const model: OperationParameter = {\n  parameterPath: [\"options\", \"model\"],\n  mapper: CalculateModelCapacityParameterMapper,\n};\n\nexport const skuName: OperationParameter = {\n  parameterPath: [\"options\", \"skuName\"],\n  mapper: CalculateModelCapacityParameterMapper,\n};\n\nexport const workloads: OperationParameter = {\n  parameterPath: [\"options\", \"workloads\"],\n  mapper: CalculateModelCapacityParameterMapper,\n};\n\nexport const modelFormat: OperationQueryParameter = {\n  parameterPath: \"modelFormat\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^[a-zA-Z0-9][a-zA-Z0-9_.-]*$\"),\n    },\n    serializedName: \"modelFormat\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const modelName: OperationQueryParameter = {\n  parameterPath: \"modelName\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^[a-zA-Z0-9][a-zA-Z0-9_.-]*$\"),\n    },\n    serializedName: \"modelName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const modelVersion: OperationQueryParameter = {\n  parameterPath: \"modelVersion\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^[a-zA-Z0-9][a-zA-Z0-9_.-]*$\"),\n    },\n    serializedName: \"modelVersion\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const privateEndpointConnectionName: OperationURLParameter = {\n  parameterPath: \"privateEndpointConnectionName\",\n  mapper: {\n    serializedName: \"privateEndpointConnectionName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const properties: OperationParameter = {\n  parameterPath: \"properties\",\n  mapper: PrivateEndpointConnectionMapper,\n};\n\nexport const deploymentName: OperationURLParameter = {\n  parameterPath: \"deploymentName\",\n  mapper: {\n    serializedName: \"deploymentName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const deployment: OperationParameter = {\n  parameterPath: \"deployment\",\n  mapper: DeploymentMapper,\n};\n\nexport const deployment1: OperationParameter = {\n  parameterPath: \"deployment\",\n  mapper: PatchResourceTagsAndSkuMapper,\n};\n\nexport const commitmentPlanName: OperationURLParameter = {\n  parameterPath: \"commitmentPlanName\",\n  mapper: {\n    serializedName: \"commitmentPlanName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const commitmentPlan: OperationParameter = {\n  parameterPath: \"commitmentPlan\",\n  mapper: CommitmentPlanMapper,\n};\n\nexport const commitmentPlanName1: OperationURLParameter = {\n  parameterPath: \"commitmentPlanName\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^[a-zA-Z0-9][a-zA-Z0-9_.-]*$\"),\n    },\n    serializedName: \"commitmentPlanName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const commitmentPlan1: OperationParameter = {\n  parameterPath: \"commitmentPlan\",\n  mapper: PatchResourceTagsAndSkuMapper,\n};\n\nexport const commitmentPlanAssociationName: OperationURLParameter = {\n  parameterPath: \"commitmentPlanAssociationName\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^[a-zA-Z0-9][a-zA-Z0-9_.-]*$\"),\n    },\n    serializedName: \"commitmentPlanAssociationName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const association: OperationParameter = {\n  parameterPath: \"association\",\n  mapper: CommitmentPlanAccountAssociationMapper,\n};\n\nexport const encryptionScopeName: OperationURLParameter = {\n  parameterPath: \"encryptionScopeName\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^[a-zA-Z0-9][a-zA-Z0-9_.-]*$\"),\n    },\n    serializedName: \"encryptionScopeName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const encryptionScope: OperationParameter = {\n  parameterPath: \"encryptionScope\",\n  mapper: EncryptionScopeMapper,\n};\n\nexport const raiPolicyName: OperationURLParameter = {\n  parameterPath: \"raiPolicyName\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^[a-zA-Z0-9][a-zA-Z0-9_.-]*$\"),\n    },\n    serializedName: \"raiPolicyName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const raiPolicy: OperationParameter = {\n  parameterPath: \"raiPolicy\",\n  mapper: RaiPolicyMapper,\n};\n\nexport const raiBlocklistName: OperationURLParameter = {\n  parameterPath: \"raiBlocklistName\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^[a-zA-Z0-9][a-zA-Z0-9_.-]*$\"),\n    },\n    serializedName: \"raiBlocklistName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const raiBlocklist: OperationParameter = {\n  parameterPath: \"raiBlocklist\",\n  mapper: RaiBlocklistMapper,\n};\n\nexport const raiBlocklistItemName: OperationURLParameter = {\n  parameterPath: \"raiBlocklistItemName\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^[a-zA-Z0-9][a-zA-Z0-9_.-]*$\"),\n    },\n    serializedName: \"raiBlocklistItemName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const raiBlocklistItem: OperationParameter = {\n  parameterPath: \"raiBlocklistItem\",\n  mapper: RaiBlocklistItemMapper,\n};\n\nexport const raiBlocklistItems: OperationParameter = {\n  parameterPath: \"raiBlocklistItems\",\n  mapper: {\n    serializedName: \"raiBlocklistItems\",\n    required: true,\n    type: {\n      name: \"Sequence\",\n      element: {\n        type: {\n          name: \"Composite\",\n          className: \"RaiBlocklistItemBulkRequest\",\n        },\n      },\n    },\n  },\n};\n\nexport const raiBlocklistItemsNames: OperationParameter = {\n  parameterPath: \"raiBlocklistItemsNames\",\n  mapper: {\n    serializedName: \"raiBlocklistItemsNames\",\n    required: true,\n    type: {\n      name: \"Sequence\",\n      element: {\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const filterName: OperationURLParameter = {\n  parameterPath: \"filterName\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^[a-zA-Z0-9][a-zA-Z0-9_.-]*$\"),\n    },\n    serializedName: \"filterName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const nspConfigurationName: OperationURLParameter = {\n  parameterPath: \"nspConfigurationName\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^.*$\"),\n    },\n    serializedName: \"nspConfigurationName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const defenderForAISettingName: OperationURLParameter = {\n  parameterPath: \"defenderForAISettingName\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^[a-zA-Z0-9][a-zA-Z0-9_.-]*$\"),\n    },\n    serializedName: \"defenderForAISettingName\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const defenderForAISettings: OperationParameter = {\n  parameterPath: \"defenderForAISettings\",\n  mapper: DefenderForAISettingMapper,\n};\n"]}