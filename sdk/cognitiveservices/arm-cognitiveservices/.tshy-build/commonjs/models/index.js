"use strict";
/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.KnownDefenderForAISettingState = exports.KnownNspAccessRuleDirection = exports.KnownRaiPolicyContentSource = exports.KnownContentLevel = exports.KnownRaiPolicyMode = exports.KnownRaiPolicyType = exports.KnownEncryptionScopeState = exports.KnownEncryptionScopeProvisioningState = exports.KnownCommitmentPlanProvisioningState = exports.KnownDeploymentModelVersionUpgradeOption = exports.KnownDeploymentScaleType = exports.KnownDeploymentProvisioningState = exports.KnownHostingModel = exports.KnownActionType = exports.KnownOrigin = exports.KnownModelLifecycleStatus = exports.KnownQuotaUsageStatus = exports.KnownUnitType = exports.KnownResourceSkuRestrictionsReasonCode = exports.KnownAbusePenaltyAction = exports.KnownRoutingMethods = exports.KnownPublicNetworkAccess = exports.KnownPrivateEndpointConnectionProvisioningState = exports.KnownPrivateEndpointServiceConnectionStatus = exports.KnownKeySource = exports.KnownByPassSelection = exports.KnownNetworkRuleAction = exports.KnownProvisioningState = exports.KnownCreatedByType = exports.KnownSkuTier = void 0;
/** Known values of {@link SkuTier} that the service accepts. */
var KnownSkuTier;
(function (KnownSkuTier) {
    /** Free */
    KnownSkuTier["Free"] = "Free";
    /** Basic */
    KnownSkuTier["Basic"] = "Basic";
    /** Standard */
    KnownSkuTier["Standard"] = "Standard";
    /** Premium */
    KnownSkuTier["Premium"] = "Premium";
    /** Enterprise */
    KnownSkuTier["Enterprise"] = "Enterprise";
})(KnownSkuTier || (exports.KnownSkuTier = KnownSkuTier = {}));
/** Known values of {@link CreatedByType} that the service accepts. */
var KnownCreatedByType;
(function (KnownCreatedByType) {
    /** User */
    KnownCreatedByType["User"] = "User";
    /** Application */
    KnownCreatedByType["Application"] = "Application";
    /** ManagedIdentity */
    KnownCreatedByType["ManagedIdentity"] = "ManagedIdentity";
    /** Key */
    KnownCreatedByType["Key"] = "Key";
})(KnownCreatedByType || (exports.KnownCreatedByType = KnownCreatedByType = {}));
/** Known values of {@link ProvisioningState} that the service accepts. */
var KnownProvisioningState;
(function (KnownProvisioningState) {
    /** Accepted */
    KnownProvisioningState["Accepted"] = "Accepted";
    /** Creating */
    KnownProvisioningState["Creating"] = "Creating";
    /** Deleting */
    KnownProvisioningState["Deleting"] = "Deleting";
    /** Moving */
    KnownProvisioningState["Moving"] = "Moving";
    /** Failed */
    KnownProvisioningState["Failed"] = "Failed";
    /** Succeeded */
    KnownProvisioningState["Succeeded"] = "Succeeded";
    /** ResolvingDNS */
    KnownProvisioningState["ResolvingDNS"] = "ResolvingDNS";
})(KnownProvisioningState || (exports.KnownProvisioningState = KnownProvisioningState = {}));
/** Known values of {@link NetworkRuleAction} that the service accepts. */
var KnownNetworkRuleAction;
(function (KnownNetworkRuleAction) {
    /** Allow */
    KnownNetworkRuleAction["Allow"] = "Allow";
    /** Deny */
    KnownNetworkRuleAction["Deny"] = "Deny";
})(KnownNetworkRuleAction || (exports.KnownNetworkRuleAction = KnownNetworkRuleAction = {}));
/** Known values of {@link ByPassSelection} that the service accepts. */
var KnownByPassSelection;
(function (KnownByPassSelection) {
    /** None */
    KnownByPassSelection["None"] = "None";
    /** AzureServices */
    KnownByPassSelection["AzureServices"] = "AzureServices";
})(KnownByPassSelection || (exports.KnownByPassSelection = KnownByPassSelection = {}));
/** Known values of {@link KeySource} that the service accepts. */
var KnownKeySource;
(function (KnownKeySource) {
    /** MicrosoftCognitiveServices */
    KnownKeySource["MicrosoftCognitiveServices"] = "Microsoft.CognitiveServices";
    /** MicrosoftKeyVault */
    KnownKeySource["MicrosoftKeyVault"] = "Microsoft.KeyVault";
})(KnownKeySource || (exports.KnownKeySource = KnownKeySource = {}));
/** Known values of {@link PrivateEndpointServiceConnectionStatus} that the service accepts. */
var KnownPrivateEndpointServiceConnectionStatus;
(function (KnownPrivateEndpointServiceConnectionStatus) {
    /** Pending */
    KnownPrivateEndpointServiceConnectionStatus["Pending"] = "Pending";
    /** Approved */
    KnownPrivateEndpointServiceConnectionStatus["Approved"] = "Approved";
    /** Rejected */
    KnownPrivateEndpointServiceConnectionStatus["Rejected"] = "Rejected";
})(KnownPrivateEndpointServiceConnectionStatus || (exports.KnownPrivateEndpointServiceConnectionStatus = KnownPrivateEndpointServiceConnectionStatus = {}));
/** Known values of {@link PrivateEndpointConnectionProvisioningState} that the service accepts. */
var KnownPrivateEndpointConnectionProvisioningState;
(function (KnownPrivateEndpointConnectionProvisioningState) {
    /** Succeeded */
    KnownPrivateEndpointConnectionProvisioningState["Succeeded"] = "Succeeded";
    /** Creating */
    KnownPrivateEndpointConnectionProvisioningState["Creating"] = "Creating";
    /** Deleting */
    KnownPrivateEndpointConnectionProvisioningState["Deleting"] = "Deleting";
    /** Failed */
    KnownPrivateEndpointConnectionProvisioningState["Failed"] = "Failed";
})(KnownPrivateEndpointConnectionProvisioningState || (exports.KnownPrivateEndpointConnectionProvisioningState = KnownPrivateEndpointConnectionProvisioningState = {}));
/** Known values of {@link PublicNetworkAccess} that the service accepts. */
var KnownPublicNetworkAccess;
(function (KnownPublicNetworkAccess) {
    /** Enabled */
    KnownPublicNetworkAccess["Enabled"] = "Enabled";
    /** Disabled */
    KnownPublicNetworkAccess["Disabled"] = "Disabled";
})(KnownPublicNetworkAccess || (exports.KnownPublicNetworkAccess = KnownPublicNetworkAccess = {}));
/** Known values of {@link RoutingMethods} that the service accepts. */
var KnownRoutingMethods;
(function (KnownRoutingMethods) {
    /** Priority */
    KnownRoutingMethods["Priority"] = "Priority";
    /** Weighted */
    KnownRoutingMethods["Weighted"] = "Weighted";
    /** Performance */
    KnownRoutingMethods["Performance"] = "Performance";
})(KnownRoutingMethods || (exports.KnownRoutingMethods = KnownRoutingMethods = {}));
/** Known values of {@link AbusePenaltyAction} that the service accepts. */
var KnownAbusePenaltyAction;
(function (KnownAbusePenaltyAction) {
    /** Throttle */
    KnownAbusePenaltyAction["Throttle"] = "Throttle";
    /** Block */
    KnownAbusePenaltyAction["Block"] = "Block";
})(KnownAbusePenaltyAction || (exports.KnownAbusePenaltyAction = KnownAbusePenaltyAction = {}));
/** Known values of {@link ResourceSkuRestrictionsReasonCode} that the service accepts. */
var KnownResourceSkuRestrictionsReasonCode;
(function (KnownResourceSkuRestrictionsReasonCode) {
    /** QuotaId */
    KnownResourceSkuRestrictionsReasonCode["QuotaId"] = "QuotaId";
    /** NotAvailableForSubscription */
    KnownResourceSkuRestrictionsReasonCode["NotAvailableForSubscription"] = "NotAvailableForSubscription";
})(KnownResourceSkuRestrictionsReasonCode || (exports.KnownResourceSkuRestrictionsReasonCode = KnownResourceSkuRestrictionsReasonCode = {}));
/** Known values of {@link UnitType} that the service accepts. */
var KnownUnitType;
(function (KnownUnitType) {
    /** Count */
    KnownUnitType["Count"] = "Count";
    /** Bytes */
    KnownUnitType["Bytes"] = "Bytes";
    /** Seconds */
    KnownUnitType["Seconds"] = "Seconds";
    /** Percent */
    KnownUnitType["Percent"] = "Percent";
    /** CountPerSecond */
    KnownUnitType["CountPerSecond"] = "CountPerSecond";
    /** BytesPerSecond */
    KnownUnitType["BytesPerSecond"] = "BytesPerSecond";
    /** Milliseconds */
    KnownUnitType["Milliseconds"] = "Milliseconds";
})(KnownUnitType || (exports.KnownUnitType = KnownUnitType = {}));
/** Known values of {@link QuotaUsageStatus} that the service accepts. */
var KnownQuotaUsageStatus;
(function (KnownQuotaUsageStatus) {
    /** Included */
    KnownQuotaUsageStatus["Included"] = "Included";
    /** Blocked */
    KnownQuotaUsageStatus["Blocked"] = "Blocked";
    /** InOverage */
    KnownQuotaUsageStatus["InOverage"] = "InOverage";
    /** Unknown */
    KnownQuotaUsageStatus["Unknown"] = "Unknown";
})(KnownQuotaUsageStatus || (exports.KnownQuotaUsageStatus = KnownQuotaUsageStatus = {}));
/** Known values of {@link ModelLifecycleStatus} that the service accepts. */
var KnownModelLifecycleStatus;
(function (KnownModelLifecycleStatus) {
    /** Stable */
    KnownModelLifecycleStatus["Stable"] = "Stable";
    /** Preview */
    KnownModelLifecycleStatus["Preview"] = "Preview";
    /** GenerallyAvailable */
    KnownModelLifecycleStatus["GenerallyAvailable"] = "GenerallyAvailable";
    /** Deprecating */
    KnownModelLifecycleStatus["Deprecating"] = "Deprecating";
    /** Deprecated */
    KnownModelLifecycleStatus["Deprecated"] = "Deprecated";
})(KnownModelLifecycleStatus || (exports.KnownModelLifecycleStatus = KnownModelLifecycleStatus = {}));
/** Known values of {@link Origin} that the service accepts. */
var KnownOrigin;
(function (KnownOrigin) {
    /** User */
    KnownOrigin["User"] = "user";
    /** System */
    KnownOrigin["System"] = "system";
    /** UserSystem */
    KnownOrigin["UserSystem"] = "user,system";
})(KnownOrigin || (exports.KnownOrigin = KnownOrigin = {}));
/** Known values of {@link ActionType} that the service accepts. */
var KnownActionType;
(function (KnownActionType) {
    /** Internal */
    KnownActionType["Internal"] = "Internal";
})(KnownActionType || (exports.KnownActionType = KnownActionType = {}));
/** Known values of {@link HostingModel} that the service accepts. */
var KnownHostingModel;
(function (KnownHostingModel) {
    /** Web */
    KnownHostingModel["Web"] = "Web";
    /** ConnectedContainer */
    KnownHostingModel["ConnectedContainer"] = "ConnectedContainer";
    /** DisconnectedContainer */
    KnownHostingModel["DisconnectedContainer"] = "DisconnectedContainer";
    /** ProvisionedWeb */
    KnownHostingModel["ProvisionedWeb"] = "ProvisionedWeb";
})(KnownHostingModel || (exports.KnownHostingModel = KnownHostingModel = {}));
/** Known values of {@link DeploymentProvisioningState} that the service accepts. */
var KnownDeploymentProvisioningState;
(function (KnownDeploymentProvisioningState) {
    /** Accepted */
    KnownDeploymentProvisioningState["Accepted"] = "Accepted";
    /** Creating */
    KnownDeploymentProvisioningState["Creating"] = "Creating";
    /** Deleting */
    KnownDeploymentProvisioningState["Deleting"] = "Deleting";
    /** Moving */
    KnownDeploymentProvisioningState["Moving"] = "Moving";
    /** Failed */
    KnownDeploymentProvisioningState["Failed"] = "Failed";
    /** Succeeded */
    KnownDeploymentProvisioningState["Succeeded"] = "Succeeded";
    /** Disabled */
    KnownDeploymentProvisioningState["Disabled"] = "Disabled";
    /** Canceled */
    KnownDeploymentProvisioningState["Canceled"] = "Canceled";
})(KnownDeploymentProvisioningState || (exports.KnownDeploymentProvisioningState = KnownDeploymentProvisioningState = {}));
/** Known values of {@link DeploymentScaleType} that the service accepts. */
var KnownDeploymentScaleType;
(function (KnownDeploymentScaleType) {
    /** Standard */
    KnownDeploymentScaleType["Standard"] = "Standard";
    /** Manual */
    KnownDeploymentScaleType["Manual"] = "Manual";
})(KnownDeploymentScaleType || (exports.KnownDeploymentScaleType = KnownDeploymentScaleType = {}));
/** Known values of {@link DeploymentModelVersionUpgradeOption} that the service accepts. */
var KnownDeploymentModelVersionUpgradeOption;
(function (KnownDeploymentModelVersionUpgradeOption) {
    /** OnceNewDefaultVersionAvailable */
    KnownDeploymentModelVersionUpgradeOption["OnceNewDefaultVersionAvailable"] = "OnceNewDefaultVersionAvailable";
    /** OnceCurrentVersionExpired */
    KnownDeploymentModelVersionUpgradeOption["OnceCurrentVersionExpired"] = "OnceCurrentVersionExpired";
    /** NoAutoUpgrade */
    KnownDeploymentModelVersionUpgradeOption["NoAutoUpgrade"] = "NoAutoUpgrade";
})(KnownDeploymentModelVersionUpgradeOption || (exports.KnownDeploymentModelVersionUpgradeOption = KnownDeploymentModelVersionUpgradeOption = {}));
/** Known values of {@link CommitmentPlanProvisioningState} that the service accepts. */
var KnownCommitmentPlanProvisioningState;
(function (KnownCommitmentPlanProvisioningState) {
    /** Accepted */
    KnownCommitmentPlanProvisioningState["Accepted"] = "Accepted";
    /** Creating */
    KnownCommitmentPlanProvisioningState["Creating"] = "Creating";
    /** Deleting */
    KnownCommitmentPlanProvisioningState["Deleting"] = "Deleting";
    /** Moving */
    KnownCommitmentPlanProvisioningState["Moving"] = "Moving";
    /** Failed */
    KnownCommitmentPlanProvisioningState["Failed"] = "Failed";
    /** Succeeded */
    KnownCommitmentPlanProvisioningState["Succeeded"] = "Succeeded";
    /** Canceled */
    KnownCommitmentPlanProvisioningState["Canceled"] = "Canceled";
})(KnownCommitmentPlanProvisioningState || (exports.KnownCommitmentPlanProvisioningState = KnownCommitmentPlanProvisioningState = {}));
/** Known values of {@link EncryptionScopeProvisioningState} that the service accepts. */
var KnownEncryptionScopeProvisioningState;
(function (KnownEncryptionScopeProvisioningState) {
    /** Accepted */
    KnownEncryptionScopeProvisioningState["Accepted"] = "Accepted";
    /** Creating */
    KnownEncryptionScopeProvisioningState["Creating"] = "Creating";
    /** Deleting */
    KnownEncryptionScopeProvisioningState["Deleting"] = "Deleting";
    /** Moving */
    KnownEncryptionScopeProvisioningState["Moving"] = "Moving";
    /** Failed */
    KnownEncryptionScopeProvisioningState["Failed"] = "Failed";
    /** Succeeded */
    KnownEncryptionScopeProvisioningState["Succeeded"] = "Succeeded";
    /** Canceled */
    KnownEncryptionScopeProvisioningState["Canceled"] = "Canceled";
})(KnownEncryptionScopeProvisioningState || (exports.KnownEncryptionScopeProvisioningState = KnownEncryptionScopeProvisioningState = {}));
/** Known values of {@link EncryptionScopeState} that the service accepts. */
var KnownEncryptionScopeState;
(function (KnownEncryptionScopeState) {
    /** Disabled */
    KnownEncryptionScopeState["Disabled"] = "Disabled";
    /** Enabled */
    KnownEncryptionScopeState["Enabled"] = "Enabled";
})(KnownEncryptionScopeState || (exports.KnownEncryptionScopeState = KnownEncryptionScopeState = {}));
/** Known values of {@link RaiPolicyType} that the service accepts. */
var KnownRaiPolicyType;
(function (KnownRaiPolicyType) {
    /** UserManaged */
    KnownRaiPolicyType["UserManaged"] = "UserManaged";
    /** SystemManaged */
    KnownRaiPolicyType["SystemManaged"] = "SystemManaged";
})(KnownRaiPolicyType || (exports.KnownRaiPolicyType = KnownRaiPolicyType = {}));
/** Known values of {@link RaiPolicyMode} that the service accepts. */
var KnownRaiPolicyMode;
(function (KnownRaiPolicyMode) {
    /** Default */
    KnownRaiPolicyMode["Default"] = "Default";
    /** Deferred */
    KnownRaiPolicyMode["Deferred"] = "Deferred";
    /** Blocking */
    KnownRaiPolicyMode["Blocking"] = "Blocking";
    /** AsynchronousFilter */
    KnownRaiPolicyMode["AsynchronousFilter"] = "Asynchronous_filter";
})(KnownRaiPolicyMode || (exports.KnownRaiPolicyMode = KnownRaiPolicyMode = {}));
/** Known values of {@link ContentLevel} that the service accepts. */
var KnownContentLevel;
(function (KnownContentLevel) {
    /** Low */
    KnownContentLevel["Low"] = "Low";
    /** Medium */
    KnownContentLevel["Medium"] = "Medium";
    /** High */
    KnownContentLevel["High"] = "High";
})(KnownContentLevel || (exports.KnownContentLevel = KnownContentLevel = {}));
/** Known values of {@link RaiPolicyContentSource} that the service accepts. */
var KnownRaiPolicyContentSource;
(function (KnownRaiPolicyContentSource) {
    /** Prompt */
    KnownRaiPolicyContentSource["Prompt"] = "Prompt";
    /** Completion */
    KnownRaiPolicyContentSource["Completion"] = "Completion";
})(KnownRaiPolicyContentSource || (exports.KnownRaiPolicyContentSource = KnownRaiPolicyContentSource = {}));
/** Known values of {@link NspAccessRuleDirection} that the service accepts. */
var KnownNspAccessRuleDirection;
(function (KnownNspAccessRuleDirection) {
    /** Inbound */
    KnownNspAccessRuleDirection["Inbound"] = "Inbound";
    /** Outbound */
    KnownNspAccessRuleDirection["Outbound"] = "Outbound";
})(KnownNspAccessRuleDirection || (exports.KnownNspAccessRuleDirection = KnownNspAccessRuleDirection = {}));
/** Known values of {@link DefenderForAISettingState} that the service accepts. */
var KnownDefenderForAISettingState;
(function (KnownDefenderForAISettingState) {
    /** Disabled */
    KnownDefenderForAISettingState["Disabled"] = "Disabled";
    /** Enabled */
    KnownDefenderForAISettingState["Enabled"] = "Enabled";
})(KnownDefenderForAISettingState || (exports.KnownDefenderForAISettingState = KnownDefenderForAISettingState = {}));
//# sourceMappingURL=index.js.map