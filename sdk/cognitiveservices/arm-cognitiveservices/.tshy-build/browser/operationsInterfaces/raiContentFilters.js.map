{"version":3,"file":"raiContentFilters.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/raiContentFilters.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport {\n  RaiContentFilter,\n  RaiContentFiltersListOptionalParams,\n  RaiContentFiltersGetOptionalParams,\n  RaiContentFiltersGetResponse,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Interface representing a RaiContentFilters. */\nexport interface RaiContentFilters {\n  /**\n   * List Content Filters types.\n   * @param location Resource location.\n   * @param options The options parameters.\n   */\n  list(\n    location: string,\n    options?: RaiContentFiltersListOptionalParams,\n  ): PagedAsyncIterableIterator<RaiContentFilter>;\n  /**\n   * Get Content Filters by Name.\n   * @param location Resource location.\n   * @param filterName The name of the RAI Content Filter.\n   * @param options The options parameters.\n   */\n  get(\n    location: string,\n    filterName: string,\n    options?: RaiContentFiltersGetOptionalParams,\n  ): Promise<RaiContentFiltersGetResponse>;\n}\n"]}