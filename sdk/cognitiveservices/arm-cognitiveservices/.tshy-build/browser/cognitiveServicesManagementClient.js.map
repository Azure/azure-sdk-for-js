{"version":3,"file":"cognitiveServicesManagementClient.js","sourceRoot":"","sources":["../../src/cognitiveServicesManagementClient.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\nimport * as coreRestPipeline from \"@azure/core-rest-pipeline\";\nimport {\n  PipelineRequest,\n  PipelineResponse,\n  SendRequest,\n} from \"@azure/core-rest-pipeline\";\nimport * as coreAuth from \"@azure/core-auth\";\nimport {\n  AccountsImpl,\n  DeletedAccountsImpl,\n  ResourceSkusImpl,\n  UsagesImpl,\n  OperationsImpl,\n  CommitmentTiersImpl,\n  ModelsImpl,\n  LocationBasedModelCapacitiesImpl,\n  ModelCapacitiesImpl,\n  PrivateEndpointConnectionsImpl,\n  PrivateLinkResourcesImpl,\n  DeploymentsImpl,\n  CommitmentPlansImpl,\n  EncryptionScopesImpl,\n  RaiPoliciesImpl,\n  RaiBlocklistsImpl,\n  RaiBlocklistItemsImpl,\n  RaiContentFiltersImpl,\n  NetworkSecurityPerimeterConfigurationsImpl,\n  DefenderForAISettingsImpl,\n} from \"./operations/index.js\";\nimport {\n  Accounts,\n  DeletedAccounts,\n  ResourceSkus,\n  Usages,\n  Operations,\n  CommitmentTiers,\n  Models,\n  LocationBasedModelCapacities,\n  ModelCapacities,\n  PrivateEndpointConnections,\n  PrivateLinkResources,\n  Deployments,\n  CommitmentPlans,\n  EncryptionScopes,\n  RaiPolicies,\n  RaiBlocklists,\n  RaiBlocklistItems,\n  RaiContentFilters,\n  NetworkSecurityPerimeterConfigurations,\n  DefenderForAISettings,\n} from \"./operationsInterfaces/index.js\";\nimport * as Parameters from \"./models/parameters.js\";\nimport * as Mappers from \"./models/mappers.js\";\nimport {\n  CognitiveServicesManagementClientOptionalParams,\n  CheckSkuAvailabilityOptionalParams,\n  CheckSkuAvailabilityResponse,\n  CheckDomainAvailabilityOptionalParams,\n  CheckDomainAvailabilityResponse,\n  CalculateModelCapacityOptionalParams,\n  CalculateModelCapacityResponse,\n} from \"./models/index.js\";\n\nexport class CognitiveServicesManagementClient extends coreClient.ServiceClient {\n  $host: string;\n  apiVersion: string;\n  subscriptionId: string;\n\n  /**\n   * Initializes a new instance of the CognitiveServicesManagementClient class.\n   * @param credentials Subscription credentials which uniquely identify client subscription.\n   * @param subscriptionId The ID of the target subscription.\n   * @param options The parameter options\n   */\n  constructor(\n    credentials: coreAuth.TokenCredential,\n    subscriptionId: string,\n    options?: CognitiveServicesManagementClientOptionalParams,\n  ) {\n    if (credentials === undefined) {\n      throw new Error(\"'credentials' cannot be null\");\n    }\n    if (subscriptionId === undefined) {\n      throw new Error(\"'subscriptionId' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n    const defaults: CognitiveServicesManagementClientOptionalParams = {\n      requestContentType: \"application/json; charset=utf-8\",\n      credential: credentials,\n    };\n\n    const packageDetails = `azsdk-js-arm-cognitiveservices/7.6.0`;\n    const userAgentPrefix =\n      options.userAgentOptions && options.userAgentOptions.userAgentPrefix\n        ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`\n        : `${packageDetails}`;\n\n    const optionsWithDefaults = {\n      ...defaults,\n      ...options,\n      userAgentOptions: {\n        userAgentPrefix,\n      },\n      endpoint:\n        options.endpoint ?? options.baseUri ?? \"https://management.azure.com\",\n    };\n    super(optionsWithDefaults);\n\n    let bearerTokenAuthenticationPolicyFound: boolean = false;\n    if (options?.pipeline && options.pipeline.getOrderedPolicies().length > 0) {\n      const pipelinePolicies: coreRestPipeline.PipelinePolicy[] =\n        options.pipeline.getOrderedPolicies();\n      bearerTokenAuthenticationPolicyFound = pipelinePolicies.some(\n        (pipelinePolicy) =>\n          pipelinePolicy.name ===\n          coreRestPipeline.bearerTokenAuthenticationPolicyName,\n      );\n    }\n    if (\n      !options ||\n      !options.pipeline ||\n      options.pipeline.getOrderedPolicies().length == 0 ||\n      !bearerTokenAuthenticationPolicyFound\n    ) {\n      this.pipeline.removePolicy({\n        name: coreRestPipeline.bearerTokenAuthenticationPolicyName,\n      });\n      this.pipeline.addPolicy(\n        coreRestPipeline.bearerTokenAuthenticationPolicy({\n          credential: credentials,\n          scopes:\n            optionsWithDefaults.credentialScopes ??\n            `${optionsWithDefaults.endpoint}/.default`,\n          challengeCallbacks: {\n            authorizeRequestOnChallenge:\n              coreClient.authorizeRequestOnClaimChallenge,\n          },\n        }),\n      );\n    }\n    // Parameter assignments\n    this.subscriptionId = subscriptionId;\n\n    // Assigning values to Constant parameters\n    this.$host = options.$host || \"https://management.azure.com\";\n    this.apiVersion = options.apiVersion || \"2024-10-01\";\n    this.accounts = new AccountsImpl(this);\n    this.deletedAccounts = new DeletedAccountsImpl(this);\n    this.resourceSkus = new ResourceSkusImpl(this);\n    this.usages = new UsagesImpl(this);\n    this.operations = new OperationsImpl(this);\n    this.commitmentTiers = new CommitmentTiersImpl(this);\n    this.models = new ModelsImpl(this);\n    this.locationBasedModelCapacities = new LocationBasedModelCapacitiesImpl(\n      this,\n    );\n    this.modelCapacities = new ModelCapacitiesImpl(this);\n    this.privateEndpointConnections = new PrivateEndpointConnectionsImpl(this);\n    this.privateLinkResources = new PrivateLinkResourcesImpl(this);\n    this.deployments = new DeploymentsImpl(this);\n    this.commitmentPlans = new CommitmentPlansImpl(this);\n    this.encryptionScopes = new EncryptionScopesImpl(this);\n    this.raiPolicies = new RaiPoliciesImpl(this);\n    this.raiBlocklists = new RaiBlocklistsImpl(this);\n    this.raiBlocklistItems = new RaiBlocklistItemsImpl(this);\n    this.raiContentFilters = new RaiContentFiltersImpl(this);\n    this.networkSecurityPerimeterConfigurations =\n      new NetworkSecurityPerimeterConfigurationsImpl(this);\n    this.defenderForAISettings = new DefenderForAISettingsImpl(this);\n    this.addCustomApiVersionPolicy(options.apiVersion);\n  }\n\n  /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */\n  private addCustomApiVersionPolicy(apiVersion?: string) {\n    if (!apiVersion) {\n      return;\n    }\n    const apiVersionPolicy = {\n      name: \"CustomApiVersionPolicy\",\n      async sendRequest(\n        request: PipelineRequest,\n        next: SendRequest,\n      ): Promise<PipelineResponse> {\n        const param = request.url.split(\"?\");\n        if (param.length > 1) {\n          const newParams = param[1].split(\"&\").map((item) => {\n            if (item.indexOf(\"api-version\") > -1) {\n              return \"api-version=\" + apiVersion;\n            } else {\n              return item;\n            }\n          });\n          request.url = param[0] + \"?\" + newParams.join(\"&\");\n        }\n        return next(request);\n      },\n    };\n    this.pipeline.addPolicy(apiVersionPolicy);\n  }\n\n  /**\n   * Check available SKUs.\n   * @param location Resource location.\n   * @param skus The SKU of the resource.\n   * @param kind The kind (type) of cognitive service account.\n   * @param typeParam The Type of the resource.\n   * @param options The options parameters.\n   */\n  checkSkuAvailability(\n    location: string,\n    skus: string[],\n    kind: string,\n    typeParam: string,\n    options?: CheckSkuAvailabilityOptionalParams,\n  ): Promise<CheckSkuAvailabilityResponse> {\n    return this.sendOperationRequest(\n      { location, skus, kind, typeParam, options },\n      checkSkuAvailabilityOperationSpec,\n    );\n  }\n\n  /**\n   * Check whether a domain is available.\n   * @param subdomainName The subdomain name to use.\n   * @param typeParam The Type of the resource.\n   * @param options The options parameters.\n   */\n  checkDomainAvailability(\n    subdomainName: string,\n    typeParam: string,\n    options?: CheckDomainAvailabilityOptionalParams,\n  ): Promise<CheckDomainAvailabilityResponse> {\n    return this.sendOperationRequest(\n      { subdomainName, typeParam, options },\n      checkDomainAvailabilityOperationSpec,\n    );\n  }\n\n  /**\n   * Model capacity calculator.\n   * @param options The options parameters.\n   */\n  calculateModelCapacity(\n    options?: CalculateModelCapacityOptionalParams,\n  ): Promise<CalculateModelCapacityResponse> {\n    return this.sendOperationRequest(\n      { options },\n      calculateModelCapacityOperationSpec,\n    );\n  }\n\n  accounts: Accounts;\n  deletedAccounts: DeletedAccounts;\n  resourceSkus: ResourceSkus;\n  usages: Usages;\n  operations: Operations;\n  commitmentTiers: CommitmentTiers;\n  models: Models;\n  locationBasedModelCapacities: LocationBasedModelCapacities;\n  modelCapacities: ModelCapacities;\n  privateEndpointConnections: PrivateEndpointConnections;\n  privateLinkResources: PrivateLinkResources;\n  deployments: Deployments;\n  commitmentPlans: CommitmentPlans;\n  encryptionScopes: EncryptionScopes;\n  raiPolicies: RaiPolicies;\n  raiBlocklists: RaiBlocklists;\n  raiBlocklistItems: RaiBlocklistItems;\n  raiContentFilters: RaiContentFilters;\n  networkSecurityPerimeterConfigurations: NetworkSecurityPerimeterConfigurations;\n  defenderForAISettings: DefenderForAISettings;\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst checkSkuAvailabilityOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/providers/Microsoft.CognitiveServices/locations/{location}/checkSkuAvailability\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SkuAvailabilityListResult,\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse,\n    },\n  },\n  requestBody: {\n    parameterPath: { skus: [\"skus\"], kind: [\"kind\"], typeParam: [\"typeParam\"] },\n    mapper: { ...Mappers.CheckSkuAvailabilityParameter, required: true },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.location,\n  ],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer,\n};\nconst checkDomainAvailabilityOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/providers/Microsoft.CognitiveServices/checkDomainAvailability\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DomainAvailability,\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse,\n    },\n  },\n  requestBody: {\n    parameterPath: {\n      subdomainName: [\"subdomainName\"],\n      typeParam: [\"typeParam\"],\n      kind: [\"options\", \"kind\"],\n    },\n    mapper: { ...Mappers.CheckDomainAvailabilityParameter, required: true },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer,\n};\nconst calculateModelCapacityOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/providers/Microsoft.CognitiveServices/calculateModelCapacity\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CalculateModelCapacityResult,\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse,\n    },\n  },\n  requestBody: {\n    parameterPath: {\n      model: [\"options\", \"model\"],\n      skuName: [\"options\", \"skuName\"],\n      workloads: [\"options\", \"workloads\"],\n    },\n    mapper: { ...Mappers.CalculateModelCapacityParameter, required: true },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer,\n};\n"]}