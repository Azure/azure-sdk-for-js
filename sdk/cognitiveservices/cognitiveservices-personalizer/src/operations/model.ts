/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/modelMappers";
import * as Parameters from "../models/parameters";
import { PersonalizerClientContext } from "../personalizerClientContext";

/** Class representing a Model. */
export class Model {
  private readonly client: PersonalizerClientContext;

  /**
   * Create a Model.
   * @param {PersonalizerClientContext} client Reference to the service client.
   */
  constructor(client: PersonalizerClientContext) {
    this.client = client;
  }

  /**
   * Get the model file generated by Personalizer service.
   * @summary Get Model.
   * @param [options] The optional parameters
   * @returns Promise<Models.ModelGetResponse>
   */
  get(options?: msRest.RequestOptionsBase): Promise<Models.ModelGetResponse>;
  /**
   * @param callback The callback
   */
  get(callback: msRest.ServiceCallback<void>): void;
  /**
   * @param options The optional parameters
   * @param callback The callback
   */
  get(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
  get(options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<Models.ModelGetResponse> {
    return this.client.sendOperationRequest(
      {
        options
      },
      getOperationSpec,
      callback) as Promise<Models.ModelGetResponse>;
  }

  /**
   * Resets the model file generated by Personalizer service.
   * @summary Reset Model.
   * @param [options] The optional parameters
   * @returns Promise<msRest.RestResponse>
   */
  reset(options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
  /**
   * @param callback The callback
   */
  reset(callback: msRest.ServiceCallback<void>): void;
  /**
   * @param options The optional parameters
   * @param callback The callback
   */
  reset(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
  reset(options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {
    return this.client.sendOperationRequest(
      {
        options
      },
      resetOperationSpec,
      callback);
  }

  /**
   * Get properties of the model file generated by Personalizer service.
   * @summary Get Model Properties.
   * @param [options] The optional parameters
   * @returns Promise<Models.ModelGetPropertiesResponse>
   */
  getProperties(options?: msRest.RequestOptionsBase): Promise<Models.ModelGetPropertiesResponse>;
  /**
   * @param callback The callback
   */
  getProperties(callback: msRest.ServiceCallback<Models.ModelProperties>): void;
  /**
   * @param options The optional parameters
   * @param callback The callback
   */
  getProperties(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ModelProperties>): void;
  getProperties(options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ModelProperties>, callback?: msRest.ServiceCallback<Models.ModelProperties>): Promise<Models.ModelGetPropertiesResponse> {
    return this.client.sendOperationRequest(
      {
        options
      },
      getPropertiesOperationSpec,
      callback) as Promise<Models.ModelGetPropertiesResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "model",
  urlParameters: [
    Parameters.endpoint
  ],
  responses: {
    200: {
      bodyMapper: {
        serializedName: "parsedResponse",
        type: {
          name: "Stream"
        }
      }
    },
    default: {}
  },
  serializer
};

const resetOperationSpec: msRest.OperationSpec = {
  httpMethod: "DELETE",
  path: "model",
  urlParameters: [
    Parameters.endpoint
  ],
  responses: {
    204: {},
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const getPropertiesOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "model/properties",
  urlParameters: [
    Parameters.endpoint
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ModelProperties
    },
    default: {}
  },
  serializer
};
