/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/evaluationOperationsMappers";
import * as Parameters from "../models/parameters";
import { PersonalizerClientContext } from "../personalizerClientContext";

/** Class representing a EvaluationOperations. */
export class EvaluationOperations {
  private readonly client: PersonalizerClientContext;

  /**
   * Create a EvaluationOperations.
   * @param {PersonalizerClientContext} client Reference to the service client.
   */
  constructor(client: PersonalizerClientContext) {
    this.client = client;
  }

  /**
   * @summary Apply Learning Settings and model from a pre-existing Offline Evaluation, making them
   * the current online Learning Settings and model and replacing the previous ones.
   * @param body
   * @param [options] The optional parameters
   * @returns Promise<msRest.RestResponse>
   */
  apply(body: Models.PolicyReferenceContract, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
  /**
   * @param body
   * @param callback The callback
   */
  apply(body: Models.PolicyReferenceContract, callback: msRest.ServiceCallback<void>): void;
  /**
   * @param body
   * @param options The optional parameters
   * @param callback The callback
   */
  apply(body: Models.PolicyReferenceContract, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
  apply(body: Models.PolicyReferenceContract, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {
    return this.client.sendOperationRequest(
      {
        body,
        options
      },
      applyOperationSpec,
      callback);
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const applyOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "configurations/applyFromEvaluation",
  urlParameters: [
    Parameters.endpoint
  ],
  requestBody: {
    parameterPath: "body",
    mapper: {
      ...Mappers.PolicyReferenceContract,
      required: true
    }
  },
  responses: {
    204: {},
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};
