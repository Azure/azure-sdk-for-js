/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { MultiSlot } from "../operationsInterfaces";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { PersonalizerBase } from "../personalizerBase";
import {
  MultiSlotRankRequest,
  MultiSlotRankOptionalParams,
  MultiSlotRankOperationResponse
} from "../models";

/** Class containing MultiSlot operations. */
export class MultiSlotImpl implements MultiSlot {
  private readonly client: PersonalizerBase;

  /**
   * Initialize a new instance of the class MultiSlot class.
   * @param client Reference to the service client
   */
  constructor(client: PersonalizerBase) {
    this.client = client;
  }

  /**
   * Submit a Personalizer multi-slot rank request. Receives a context, a list of actions, and a list of
   * slots. Returns which of the provided actions should be used in each slot, in each rewardActionId.
   * @param body A Personalizer multi-slot Rank request.
   * @param options The options parameters.
   */
  rank(
    body: MultiSlotRankRequest,
    options?: MultiSlotRankOptionalParams
  ): Promise<MultiSlotRankOperationResponse> {
    return this.client.sendOperationRequest(
      { body, options },
      rankOperationSpec
    );
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const rankOperationSpec: coreClient.OperationSpec = {
  path: "/multislot/rank",
  httpMethod: "POST",
  responses: {
    201: {
      bodyMapper: Mappers.MultiSlotRankResponse
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  requestBody: Parameters.body3,
  urlParameters: [Parameters.endpoint],
  headerParameters: [Parameters.accept, Parameters.contentType],
  mediaType: "json",
  serializer
};
