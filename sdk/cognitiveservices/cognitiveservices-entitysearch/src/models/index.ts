/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { ServiceClientOptions } from "@azure/ms-rest-js";
import * as msRest from "@azure/ms-rest-js";


/**
 * @interface
 * An interface representing QueryContext.
 * Defines the query context that Bing used for the request.
 *
 */
export interface QueryContext {
  /**
   * @member {string} originalQuery The query string as specified in the
   * request.
   */
  originalQuery: string;
  /**
   * @member {string} [alteredQuery] The query string used by Bing to perform
   * the query. Bing uses the altered query string if the original query string
   * contained spelling mistakes. For example, if the query string is "saling
   * downwind", the altered query string will be "sailing downwind". This field
   * is included only if the original query string contains a spelling mistake.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly alteredQuery?: string;
  /**
   * @member {string} [alterationOverrideQuery] The query string to use to
   * force Bing to use the original string. For example, if the query string is
   * "saling downwind", the override query string will be "+saling downwind".
   * Remember to encode the query string which results in "%2Bsaling+downwind".
   * This field is included only if the original query string contains a
   * spelling mistake.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly alterationOverrideQuery?: string;
  /**
   * @member {boolean} [adultIntent] A Boolean value that indicates whether the
   * specified query has adult intent. The value is true if the query has adult
   * intent; otherwise, false.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly adultIntent?: boolean;
  /**
   * @member {boolean} [askUserForLocation] A Boolean value that indicates
   * whether Bing requires the user's location to provide accurate results. If
   * you specified the user's location by using the X-MSEdge-ClientIP and
   * X-Search-Location headers, you can ignore this field. For location aware
   * queries, such as "today's weather" or "restaurants near me" that need the
   * user's location to provide accurate results, this field is set to true.
   * For location aware queries that include the location (for example,
   * "Seattle weather"), this field is set to false. This field is also set to
   * false for queries that are not location aware, such as "best sellers".
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly askUserForLocation?: boolean;
}

/**
 * Contains the possible cases for ResponseBase.
 */
export type ResponseBaseUnion = ResponseBase | IdentifiableUnion;

/**
 * @interface
 * An interface representing ResponseBase.
 */
export interface ResponseBase {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "ResponseBase";
}

/**
 * Contains the possible cases for Identifiable.
 */
export type IdentifiableUnion = Identifiable | ResponseUnion;

/**
 * @interface
 * An interface representing Identifiable.
 * Defines the identity of a resource.
 *
 */
export interface Identifiable {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "Identifiable";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
}

/**
 * Contains the possible cases for Response.
 */
export type ResponseUnion = Response | ThingUnion | SearchResponse | AnswerUnion | ErrorResponse;

/**
 * @interface
 * An interface representing Response.
 * Defines a response. All schemas that could be returned at the root of a
 * response should inherit from this
 *
 */
export interface Response {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "Response";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {ContractualRulesContractualRuleUnion[]} [contractualRules] A list
   * of rules that you must adhere to if you display the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly contractualRules?: ContractualRulesContractualRuleUnion[];
  /**
   * @member {string} [webSearchUrl] The URL To Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
}

/**
 * Contains the possible cases for Thing.
 */
export type ThingUnion = Thing | PlaceUnion | Organization | CreativeWorkUnion | IntangibleUnion;

/**
 * @interface
 * An interface representing Thing.
 */
export interface Thing {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "Thing";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {ContractualRulesContractualRuleUnion[]} [contractualRules] A list
   * of rules that you must adhere to if you display the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly contractualRules?: ContractualRulesContractualRuleUnion[];
  /**
   * @member {string} [webSearchUrl] The URL To Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {string} [name] The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [url] The URL to get more information about the thing
   * represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly url?: string;
  /**
   * @member {ImageObject} [image] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * @member {string} [description] A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
  /**
   * @member {EntitiesEntityPresentationInfo} [entityPresentationInfo]
   * Additional information about the entity such as hints that you can use to
   * determine the entity's type. To determine the entity's type, use the
   * entityScenario and entityTypeHint fields.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly entityPresentationInfo?: EntitiesEntityPresentationInfo;
  /**
   * @member {string} [bingId] An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly bingId?: string;
}

/**
 * Contains the possible cases for CreativeWork.
 */
export type CreativeWorkUnion = CreativeWork | MediaObjectUnion | License;

/**
 * @interface
 * An interface representing CreativeWork.
 */
export interface CreativeWork {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "CreativeWork";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {ContractualRulesContractualRuleUnion[]} [contractualRules] A list
   * of rules that you must adhere to if you display the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly contractualRules?: ContractualRulesContractualRuleUnion[];
  /**
   * @member {string} [webSearchUrl] The URL To Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {string} [name] The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [url] The URL to get more information about the thing
   * represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly url?: string;
  /**
   * @member {ImageObject} [image] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * @member {string} [description] A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
  /**
   * @member {EntitiesEntityPresentationInfo} [entityPresentationInfo]
   * Additional information about the entity such as hints that you can use to
   * determine the entity's type. To determine the entity's type, use the
   * entityScenario and entityTypeHint fields.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly entityPresentationInfo?: EntitiesEntityPresentationInfo;
  /**
   * @member {string} [bingId] An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly bingId?: string;
  /**
   * @member {string} [thumbnailUrl] The URL to a thumbnail of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly thumbnailUrl?: string;
  /**
   * @member {ThingUnion[]} [provider] The source of the creative work.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provider?: ThingUnion[];
  /**
   * @member {string} [text] **NOTE: This property will not be serialized. It
   * can only be populated by the server.**
   */
  readonly text?: string;
}

/**
 * Contains the possible cases for MediaObject.
 */
export type MediaObjectUnion = MediaObject | ImageObject;

/**
 * @interface
 * An interface representing MediaObject.
 */
export interface MediaObject {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "MediaObject";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {ContractualRulesContractualRuleUnion[]} [contractualRules] A list
   * of rules that you must adhere to if you display the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly contractualRules?: ContractualRulesContractualRuleUnion[];
  /**
   * @member {string} [webSearchUrl] The URL To Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {string} [name] The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [url] The URL to get more information about the thing
   * represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly url?: string;
  /**
   * @member {ImageObject} [image] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * @member {string} [description] A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
  /**
   * @member {EntitiesEntityPresentationInfo} [entityPresentationInfo]
   * Additional information about the entity such as hints that you can use to
   * determine the entity's type. To determine the entity's type, use the
   * entityScenario and entityTypeHint fields.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly entityPresentationInfo?: EntitiesEntityPresentationInfo;
  /**
   * @member {string} [bingId] An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly bingId?: string;
  /**
   * @member {string} [thumbnailUrl] The URL to a thumbnail of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly thumbnailUrl?: string;
  /**
   * @member {ThingUnion[]} [provider] The source of the creative work.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provider?: ThingUnion[];
  /**
   * @member {string} [text] **NOTE: This property will not be serialized. It
   * can only be populated by the server.**
   */
  readonly text?: string;
  /**
   * @member {string} [contentUrl] Original URL to retrieve the source (file)
   * for the media object (e.g the source URL for the image).
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly contentUrl?: string;
  /**
   * @member {string} [hostPageUrl] URL of the page that hosts the media
   * object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly hostPageUrl?: string;
  /**
   * @member {number} [width] The width of the source media object, in pixels.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly width?: number;
  /**
   * @member {number} [height] The height of the source media object, in
   * pixels.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly height?: number;
}

/**
 * @interface
 * An interface representing ImageObject.
 * Defines an image
 *
 */
export interface ImageObject {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "ImageObject";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {ContractualRulesContractualRuleUnion[]} [contractualRules] A list
   * of rules that you must adhere to if you display the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly contractualRules?: ContractualRulesContractualRuleUnion[];
  /**
   * @member {string} [webSearchUrl] The URL To Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {string} [name] The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [url] The URL to get more information about the thing
   * represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly url?: string;
  /**
   * @member {ImageObject} [image] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * @member {string} [description] A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
  /**
   * @member {EntitiesEntityPresentationInfo} [entityPresentationInfo]
   * Additional information about the entity such as hints that you can use to
   * determine the entity's type. To determine the entity's type, use the
   * entityScenario and entityTypeHint fields.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly entityPresentationInfo?: EntitiesEntityPresentationInfo;
  /**
   * @member {string} [bingId] An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly bingId?: string;
  /**
   * @member {string} [thumbnailUrl] The URL to a thumbnail of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly thumbnailUrl?: string;
  /**
   * @member {ThingUnion[]} [provider] The source of the creative work.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provider?: ThingUnion[];
  /**
   * @member {string} [text] **NOTE: This property will not be serialized. It
   * can only be populated by the server.**
   */
  readonly text?: string;
  /**
   * @member {string} [contentUrl] Original URL to retrieve the source (file)
   * for the media object (e.g the source URL for the image).
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly contentUrl?: string;
  /**
   * @member {string} [hostPageUrl] URL of the page that hosts the media
   * object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly hostPageUrl?: string;
  /**
   * @member {number} [width] The width of the source media object, in pixels.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly width?: number;
  /**
   * @member {number} [height] The height of the source media object, in
   * pixels.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly height?: number;
  /**
   * @member {ImageObject} [thumbnail] The URL to a thumbnail of the image
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly thumbnail?: ImageObject;
}

/**
 * @interface
 * An interface representing EntitiesEntityPresentationInfo.
 * Defines additional information about an entity such as type hints.
 *
 */
export interface EntitiesEntityPresentationInfo {
  /**
   * @member {EntityScenario} entityScenario The supported scenario. Possible
   * values include: 'DominantEntity', 'DisambiguationItem', 'ListItem'.
   * Default value: 'DominantEntity' .
   */
  entityScenario: EntityScenario;
  /**
   * @member {EntityType[]} [entityTypeHints] A list of hints that indicate the
   * entity's type. The list could contain a single hint such as Movie or a
   * list of hints such as Place, LocalBusiness, Restaurant. Each successive
   * hint in the array narrows the entity's type.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly entityTypeHints?: EntityType[];
  /**
   * @member {string} [entityTypeDisplayHint] A display version of the entity
   * hint. For example, if entityTypeHints is Artist, this field may be set to
   * American Singer.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly entityTypeDisplayHint?: string;
}

/**
 * Contains the possible cases for Answer.
 */
export type AnswerUnion = Answer | SearchResultsAnswerUnion;

/**
 * @interface
 * An interface representing Answer.
 */
export interface Answer {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "Answer";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {ContractualRulesContractualRuleUnion[]} [contractualRules] A list
   * of rules that you must adhere to if you display the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly contractualRules?: ContractualRulesContractualRuleUnion[];
  /**
   * @member {string} [webSearchUrl] The URL To Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
}

/**
 * Contains the possible cases for SearchResultsAnswer.
 */
export type SearchResultsAnswerUnion = SearchResultsAnswer | Entities | Places;

/**
 * @interface
 * An interface representing SearchResultsAnswer.
 */
export interface SearchResultsAnswer {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "SearchResultsAnswer";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {ContractualRulesContractualRuleUnion[]} [contractualRules] A list
   * of rules that you must adhere to if you display the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly contractualRules?: ContractualRulesContractualRuleUnion[];
  /**
   * @member {string} [webSearchUrl] The URL To Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {QueryContext} [queryContext] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly queryContext?: QueryContext;
}

/**
 * @interface
 * An interface representing Entities.
 * Defines an entity answer.
 *
 */
export interface Entities {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "Entities";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {ContractualRulesContractualRuleUnion[]} [contractualRules] A list
   * of rules that you must adhere to if you display the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly contractualRules?: ContractualRulesContractualRuleUnion[];
  /**
   * @member {string} [webSearchUrl] The URL To Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {QueryContext} [queryContext] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly queryContext?: QueryContext;
  /**
   * @member {EntityQueryScenario} [queryScenario] The supported query
   * scenario. This field is set to DominantEntity or DisambiguationItem. The
   * field is set to DominantEntity if Bing determines that only a single
   * entity satisfies the request. For example, a book, movie, person, or
   * attraction. If multiple entities could satisfy the request, the field is
   * set to DisambiguationItem. For example, if the request uses the generic
   * title of a movie franchise, the entity's type would likely be
   * DisambiguationItem. But, if the request specifies a specific title from
   * the franchise, the entity's type would likely be DominantEntity. Possible
   * values include: 'DominantEntity', 'DominantEntityWithDisambiguation',
   * 'Disambiguation', 'List', 'ListWithPivot'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**. Default value: 'DominantEntity' .
   */
  readonly queryScenario?: EntityQueryScenario;
  /**
   * @member {ThingUnion[]} value A list of entities.
   */
  value: ThingUnion[];
}

/**
 * @interface
 * An interface representing Places.
 * Defines a local entity answer.
 *
 */
export interface Places {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "Places";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {ContractualRulesContractualRuleUnion[]} [contractualRules] A list
   * of rules that you must adhere to if you display the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly contractualRules?: ContractualRulesContractualRuleUnion[];
  /**
   * @member {string} [webSearchUrl] The URL To Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {QueryContext} [queryContext] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly queryContext?: QueryContext;
  /**
   * @member {ThingUnion[]} value A list of local entities, such as restaurants
   * or hotels.
   */
  value: ThingUnion[];
}

/**
 * @interface
 * An interface representing SearchResponse.
 * Defines the top-level object that the response includes when the request
 * succeeds.
 *
 */
export interface SearchResponse {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "SearchResponse";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {ContractualRulesContractualRuleUnion[]} [contractualRules] A list
   * of rules that you must adhere to if you display the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly contractualRules?: ContractualRulesContractualRuleUnion[];
  /**
   * @member {string} [webSearchUrl] The URL To Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {QueryContext} [queryContext] An object that contains the query
   * string that Bing used for the request. This object contains the query
   * string as entered by the user. It may also contain an altered query string
   * that Bing used for the query if the query string contained a spelling
   * mistake.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly queryContext?: QueryContext;
  /**
   * @member {Entities} [entities] A list of entities that are relevant to the
   * search query.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly entities?: Entities;
  /**
   * @member {Places} [places] A list of local entities such as restaurants or
   * hotels that are relevant to the query.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly places?: Places;
}

/**
 * Contains the possible cases for ContractualRulesContractualRule.
 */
export type ContractualRulesContractualRuleUnion = ContractualRulesContractualRule | ContractualRulesAttributionUnion;

/**
 * @interface
 * An interface representing ContractualRulesContractualRule.
 */
export interface ContractualRulesContractualRule {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "ContractualRules/ContractualRule";
  /**
   * @member {string} [targetPropertyName] The name of the field that the rule
   * applies to.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly targetPropertyName?: string;
}

/**
 * @interface
 * An interface representing ErrorModel.
 * Defines the error that occurred.
 *
 */
export interface ErrorModel {
  /**
   * @member {ErrorCode} code The error code that identifies the category of
   * error. Possible values include: 'None', 'ServerError', 'InvalidRequest',
   * 'RateLimitExceeded', 'InvalidAuthorization', 'InsufficientAuthorization'.
   * Default value: 'None' .
   */
  code: ErrorCode;
  /**
   * @member {ErrorSubCode} [subCode] The error code that further helps to
   * identify the error. Possible values include: 'UnexpectedError',
   * 'ResourceError', 'NotImplemented', 'ParameterMissing',
   * 'ParameterInvalidValue', 'HttpNotAllowed', 'Blocked',
   * 'AuthorizationMissing', 'AuthorizationRedundancy',
   * 'AuthorizationDisabled', 'AuthorizationExpired'
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly subCode?: ErrorSubCode;
  /**
   * @member {string} message A description of the error.
   */
  message: string;
  /**
   * @member {string} [moreDetails] A description that provides additional
   * information about the error.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly moreDetails?: string;
  /**
   * @member {string} [parameter] The parameter in the request that caused the
   * error.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly parameter?: string;
  /**
   * @member {string} [value] The parameter's value in the request that was not
   * valid.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly value?: string;
}

/**
 * @interface
 * An interface representing ErrorResponse.
 * The top-level response that represents a failed request.
 *
 */
export interface ErrorResponse {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "ErrorResponse";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {ContractualRulesContractualRuleUnion[]} [contractualRules] A list
   * of rules that you must adhere to if you display the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly contractualRules?: ContractualRulesContractualRuleUnion[];
  /**
   * @member {string} [webSearchUrl] The URL To Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {ErrorModel[]} errors A list of errors that describe the reasons
   * why the request failed.
   */
  errors: ErrorModel[];
}

/**
 * Contains the possible cases for Intangible.
 */
export type IntangibleUnion = Intangible | StructuredValueUnion;

/**
 * @interface
 * An interface representing Intangible.
 */
export interface Intangible {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "Intangible";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {ContractualRulesContractualRuleUnion[]} [contractualRules] A list
   * of rules that you must adhere to if you display the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly contractualRules?: ContractualRulesContractualRuleUnion[];
  /**
   * @member {string} [webSearchUrl] The URL To Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {string} [name] The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [url] The URL to get more information about the thing
   * represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly url?: string;
  /**
   * @member {ImageObject} [image] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * @member {string} [description] A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
  /**
   * @member {EntitiesEntityPresentationInfo} [entityPresentationInfo]
   * Additional information about the entity such as hints that you can use to
   * determine the entity's type. To determine the entity's type, use the
   * entityScenario and entityTypeHint fields.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly entityPresentationInfo?: EntitiesEntityPresentationInfo;
  /**
   * @member {string} [bingId] An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly bingId?: string;
}

/**
 * Contains the possible cases for StructuredValue.
 */
export type StructuredValueUnion = StructuredValue | PostalAddress;

/**
 * @interface
 * An interface representing StructuredValue.
 */
export interface StructuredValue {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "StructuredValue";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {ContractualRulesContractualRuleUnion[]} [contractualRules] A list
   * of rules that you must adhere to if you display the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly contractualRules?: ContractualRulesContractualRuleUnion[];
  /**
   * @member {string} [webSearchUrl] The URL To Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {string} [name] The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [url] The URL to get more information about the thing
   * represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly url?: string;
  /**
   * @member {ImageObject} [image] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * @member {string} [description] A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
  /**
   * @member {EntitiesEntityPresentationInfo} [entityPresentationInfo]
   * Additional information about the entity such as hints that you can use to
   * determine the entity's type. To determine the entity's type, use the
   * entityScenario and entityTypeHint fields.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly entityPresentationInfo?: EntitiesEntityPresentationInfo;
  /**
   * @member {string} [bingId] An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly bingId?: string;
}

/**
 * @interface
 * An interface representing PostalAddress.
 * Defines a postal address.
 *
 */
export interface PostalAddress {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "PostalAddress";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {ContractualRulesContractualRuleUnion[]} [contractualRules] A list
   * of rules that you must adhere to if you display the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly contractualRules?: ContractualRulesContractualRuleUnion[];
  /**
   * @member {string} [webSearchUrl] The URL To Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {string} [name] The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [url] The URL to get more information about the thing
   * represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly url?: string;
  /**
   * @member {ImageObject} [image] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * @member {string} [description] A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
  /**
   * @member {EntitiesEntityPresentationInfo} [entityPresentationInfo]
   * Additional information about the entity such as hints that you can use to
   * determine the entity's type. To determine the entity's type, use the
   * entityScenario and entityTypeHint fields.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly entityPresentationInfo?: EntitiesEntityPresentationInfo;
  /**
   * @member {string} [bingId] An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly bingId?: string;
  /**
   * @member {string} [streetAddress] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly streetAddress?: string;
  /**
   * @member {string} [addressLocality] The city where the street address is
   * located. For example, Seattle.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly addressLocality?: string;
  /**
   * @member {string} [addressSubregion] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly addressSubregion?: string;
  /**
   * @member {string} [addressRegion] The state or province code where the
   * street address is located. This could be the two-letter code. For example,
   * WA, or the full name , Washington.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly addressRegion?: string;
  /**
   * @member {string} [postalCode] The zip code or postal code where the street
   * address is located. For example, 98052.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly postalCode?: string;
  /**
   * @member {string} [postOfficeBoxNumber] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly postOfficeBoxNumber?: string;
  /**
   * @member {string} [addressCountry] The country/region where the street
   * address is located. This could be the two-letter ISO code. For example,
   * US, or the full name, United States.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly addressCountry?: string;
  /**
   * @member {string} [countryIso] The two letter ISO code of this country. For
   * example, US.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly countryIso?: string;
  /**
   * @member {string} [neighborhood] The neighborhood where the street address
   * is located. For example, Westlake.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly neighborhood?: string;
  /**
   * @member {string} [addressRegionAbbreviation] Region Abbreviation. For
   * example, WA.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly addressRegionAbbreviation?: string;
  /**
   * @member {string} [text] The complete address. For example, 2100 Westlake
   * Ave N, Bellevue, WA 98052.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly text?: string;
}

/**
 * Contains the possible cases for Place.
 */
export type PlaceUnion = Place | CivicStructureUnion | LocalBusinessUnion | TouristAttraction;

/**
 * @interface
 * An interface representing Place.
 * Defines information about a local entity, such as a restaurant or hotel.
 *
 */
export interface Place {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "Place";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {ContractualRulesContractualRuleUnion[]} [contractualRules] A list
   * of rules that you must adhere to if you display the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly contractualRules?: ContractualRulesContractualRuleUnion[];
  /**
   * @member {string} [webSearchUrl] The URL To Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {string} [name] The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [url] The URL to get more information about the thing
   * represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly url?: string;
  /**
   * @member {ImageObject} [image] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * @member {string} [description] A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
  /**
   * @member {EntitiesEntityPresentationInfo} [entityPresentationInfo]
   * Additional information about the entity such as hints that you can use to
   * determine the entity's type. To determine the entity's type, use the
   * entityScenario and entityTypeHint fields.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly entityPresentationInfo?: EntitiesEntityPresentationInfo;
  /**
   * @member {string} [bingId] An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly bingId?: string;
  /**
   * @member {PostalAddress} [address] The postal address of where the entity
   * is located
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly address?: PostalAddress;
  /**
   * @member {string} [telephone] The entity's telephone number
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly telephone?: string;
}

/**
 * @interface
 * An interface representing Organization.
 * Defines an organization.
 *
 */
export interface Organization {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "Organization";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {ContractualRulesContractualRuleUnion[]} [contractualRules] A list
   * of rules that you must adhere to if you display the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly contractualRules?: ContractualRulesContractualRuleUnion[];
  /**
   * @member {string} [webSearchUrl] The URL To Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {string} [name] The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [url] The URL to get more information about the thing
   * represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly url?: string;
  /**
   * @member {ImageObject} [image] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * @member {string} [description] A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
  /**
   * @member {EntitiesEntityPresentationInfo} [entityPresentationInfo]
   * Additional information about the entity such as hints that you can use to
   * determine the entity's type. To determine the entity's type, use the
   * entityScenario and entityTypeHint fields.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly entityPresentationInfo?: EntitiesEntityPresentationInfo;
  /**
   * @member {string} [bingId] An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly bingId?: string;
}

/**
 * Contains the possible cases for LocalBusiness.
 */
export type LocalBusinessUnion = LocalBusiness | EntertainmentBusinessUnion | FoodEstablishmentUnion | LodgingBusinessUnion;

/**
 * @interface
 * An interface representing LocalBusiness.
 */
export interface LocalBusiness {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "LocalBusiness";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {ContractualRulesContractualRuleUnion[]} [contractualRules] A list
   * of rules that you must adhere to if you display the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly contractualRules?: ContractualRulesContractualRuleUnion[];
  /**
   * @member {string} [webSearchUrl] The URL To Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {string} [name] The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [url] The URL to get more information about the thing
   * represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly url?: string;
  /**
   * @member {ImageObject} [image] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * @member {string} [description] A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
  /**
   * @member {EntitiesEntityPresentationInfo} [entityPresentationInfo]
   * Additional information about the entity such as hints that you can use to
   * determine the entity's type. To determine the entity's type, use the
   * entityScenario and entityTypeHint fields.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly entityPresentationInfo?: EntitiesEntityPresentationInfo;
  /**
   * @member {string} [bingId] An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly bingId?: string;
  /**
   * @member {PostalAddress} [address] The postal address of where the entity
   * is located
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly address?: PostalAddress;
  /**
   * @member {string} [telephone] The entity's telephone number
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly telephone?: string;
  /**
   * @member {string} [priceRange] $$.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly priceRange?: string;
  /**
   * @member {ImageObject[]} [panoramas] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly panoramas?: ImageObject[];
  /**
   * @member {boolean} [isPermanentlyClosed] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly isPermanentlyClosed?: boolean;
  /**
   * @member {string} [tagLine] **NOTE: This property will not be serialized.
   * It can only be populated by the server.**
   */
  readonly tagLine?: string;
}

/**
 * Contains the possible cases for EntertainmentBusiness.
 */
export type EntertainmentBusinessUnion = EntertainmentBusiness | MovieTheater;

/**
 * @interface
 * An interface representing EntertainmentBusiness.
 */
export interface EntertainmentBusiness {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "EntertainmentBusiness";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {ContractualRulesContractualRuleUnion[]} [contractualRules] A list
   * of rules that you must adhere to if you display the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly contractualRules?: ContractualRulesContractualRuleUnion[];
  /**
   * @member {string} [webSearchUrl] The URL To Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {string} [name] The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [url] The URL to get more information about the thing
   * represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly url?: string;
  /**
   * @member {ImageObject} [image] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * @member {string} [description] A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
  /**
   * @member {EntitiesEntityPresentationInfo} [entityPresentationInfo]
   * Additional information about the entity such as hints that you can use to
   * determine the entity's type. To determine the entity's type, use the
   * entityScenario and entityTypeHint fields.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly entityPresentationInfo?: EntitiesEntityPresentationInfo;
  /**
   * @member {string} [bingId] An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly bingId?: string;
  /**
   * @member {PostalAddress} [address] The postal address of where the entity
   * is located
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly address?: PostalAddress;
  /**
   * @member {string} [telephone] The entity's telephone number
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly telephone?: string;
  /**
   * @member {string} [priceRange] $$.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly priceRange?: string;
  /**
   * @member {ImageObject[]} [panoramas] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly panoramas?: ImageObject[];
  /**
   * @member {boolean} [isPermanentlyClosed] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly isPermanentlyClosed?: boolean;
  /**
   * @member {string} [tagLine] **NOTE: This property will not be serialized.
   * It can only be populated by the server.**
   */
  readonly tagLine?: string;
}

/**
 * @interface
 * An interface representing MovieTheater.
 */
export interface MovieTheater {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "MovieTheater";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {ContractualRulesContractualRuleUnion[]} [contractualRules] A list
   * of rules that you must adhere to if you display the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly contractualRules?: ContractualRulesContractualRuleUnion[];
  /**
   * @member {string} [webSearchUrl] The URL To Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {string} [name] The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [url] The URL to get more information about the thing
   * represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly url?: string;
  /**
   * @member {ImageObject} [image] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * @member {string} [description] A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
  /**
   * @member {EntitiesEntityPresentationInfo} [entityPresentationInfo]
   * Additional information about the entity such as hints that you can use to
   * determine the entity's type. To determine the entity's type, use the
   * entityScenario and entityTypeHint fields.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly entityPresentationInfo?: EntitiesEntityPresentationInfo;
  /**
   * @member {string} [bingId] An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly bingId?: string;
  /**
   * @member {PostalAddress} [address] The postal address of where the entity
   * is located
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly address?: PostalAddress;
  /**
   * @member {string} [telephone] The entity's telephone number
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly telephone?: string;
  /**
   * @member {string} [priceRange] $$.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly priceRange?: string;
  /**
   * @member {ImageObject[]} [panoramas] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly panoramas?: ImageObject[];
  /**
   * @member {boolean} [isPermanentlyClosed] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly isPermanentlyClosed?: boolean;
  /**
   * @member {string} [tagLine] **NOTE: This property will not be serialized.
   * It can only be populated by the server.**
   */
  readonly tagLine?: string;
  /**
   * @member {number} [screenCount] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly screenCount?: number;
}

/**
 * Contains the possible cases for ContractualRulesAttribution.
 */
export type ContractualRulesAttributionUnion = ContractualRulesAttribution | ContractualRulesLicenseAttribution | ContractualRulesLinkAttribution | ContractualRulesMediaAttribution | ContractualRulesTextAttribution;

/**
 * @interface
 * An interface representing ContractualRulesAttribution.
 */
export interface ContractualRulesAttribution {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "ContractualRules/Attribution";
  /**
   * @member {string} [targetPropertyName] The name of the field that the rule
   * applies to.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly targetPropertyName?: string;
  /**
   * @member {boolean} [mustBeCloseToContent] A Boolean value that determines
   * whether the contents of the rule must be placed in close proximity to the
   * field that the rule applies to. If true, the contents must be placed in
   * close proximity. If false, or this field does not exist, the contents may
   * be placed at the caller's discretion.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly mustBeCloseToContent?: boolean;
}

/**
 * Contains the possible cases for CivicStructure.
 */
export type CivicStructureUnion = CivicStructure | Airport;

/**
 * @interface
 * An interface representing CivicStructure.
 */
export interface CivicStructure {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "CivicStructure";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {ContractualRulesContractualRuleUnion[]} [contractualRules] A list
   * of rules that you must adhere to if you display the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly contractualRules?: ContractualRulesContractualRuleUnion[];
  /**
   * @member {string} [webSearchUrl] The URL To Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {string} [name] The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [url] The URL to get more information about the thing
   * represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly url?: string;
  /**
   * @member {ImageObject} [image] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * @member {string} [description] A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
  /**
   * @member {EntitiesEntityPresentationInfo} [entityPresentationInfo]
   * Additional information about the entity such as hints that you can use to
   * determine the entity's type. To determine the entity's type, use the
   * entityScenario and entityTypeHint fields.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly entityPresentationInfo?: EntitiesEntityPresentationInfo;
  /**
   * @member {string} [bingId] An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly bingId?: string;
  /**
   * @member {PostalAddress} [address] The postal address of where the entity
   * is located
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly address?: PostalAddress;
  /**
   * @member {string} [telephone] The entity's telephone number
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly telephone?: string;
}

/**
 * @interface
 * An interface representing TouristAttraction.
 */
export interface TouristAttraction {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "TouristAttraction";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {ContractualRulesContractualRuleUnion[]} [contractualRules] A list
   * of rules that you must adhere to if you display the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly contractualRules?: ContractualRulesContractualRuleUnion[];
  /**
   * @member {string} [webSearchUrl] The URL To Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {string} [name] The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [url] The URL to get more information about the thing
   * represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly url?: string;
  /**
   * @member {ImageObject} [image] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * @member {string} [description] A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
  /**
   * @member {EntitiesEntityPresentationInfo} [entityPresentationInfo]
   * Additional information about the entity such as hints that you can use to
   * determine the entity's type. To determine the entity's type, use the
   * entityScenario and entityTypeHint fields.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly entityPresentationInfo?: EntitiesEntityPresentationInfo;
  /**
   * @member {string} [bingId] An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly bingId?: string;
  /**
   * @member {PostalAddress} [address] The postal address of where the entity
   * is located
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly address?: PostalAddress;
  /**
   * @member {string} [telephone] The entity's telephone number
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly telephone?: string;
}

/**
 * @interface
 * An interface representing Airport.
 */
export interface Airport {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "Airport";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {ContractualRulesContractualRuleUnion[]} [contractualRules] A list
   * of rules that you must adhere to if you display the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly contractualRules?: ContractualRulesContractualRuleUnion[];
  /**
   * @member {string} [webSearchUrl] The URL To Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {string} [name] The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [url] The URL to get more information about the thing
   * represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly url?: string;
  /**
   * @member {ImageObject} [image] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * @member {string} [description] A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
  /**
   * @member {EntitiesEntityPresentationInfo} [entityPresentationInfo]
   * Additional information about the entity such as hints that you can use to
   * determine the entity's type. To determine the entity's type, use the
   * entityScenario and entityTypeHint fields.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly entityPresentationInfo?: EntitiesEntityPresentationInfo;
  /**
   * @member {string} [bingId] An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly bingId?: string;
  /**
   * @member {PostalAddress} [address] The postal address of where the entity
   * is located
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly address?: PostalAddress;
  /**
   * @member {string} [telephone] The entity's telephone number
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly telephone?: string;
  /**
   * @member {string} [iataCode] **NOTE: This property will not be serialized.
   * It can only be populated by the server.**
   */
  readonly iataCode?: string;
  /**
   * @member {string} [icaoCode] **NOTE: This property will not be serialized.
   * It can only be populated by the server.**
   */
  readonly icaoCode?: string;
}

/**
 * @interface
 * An interface representing License.
 * Defines the license under which the text or photo may be used.
 *
 */
export interface License {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "License";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {ContractualRulesContractualRuleUnion[]} [contractualRules] A list
   * of rules that you must adhere to if you display the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly contractualRules?: ContractualRulesContractualRuleUnion[];
  /**
   * @member {string} [webSearchUrl] The URL To Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {string} [name] The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [url] The URL to get more information about the thing
   * represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly url?: string;
  /**
   * @member {ImageObject} [image] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * @member {string} [description] A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
  /**
   * @member {EntitiesEntityPresentationInfo} [entityPresentationInfo]
   * Additional information about the entity such as hints that you can use to
   * determine the entity's type. To determine the entity's type, use the
   * entityScenario and entityTypeHint fields.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly entityPresentationInfo?: EntitiesEntityPresentationInfo;
  /**
   * @member {string} [bingId] An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly bingId?: string;
  /**
   * @member {string} [thumbnailUrl] The URL to a thumbnail of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly thumbnailUrl?: string;
  /**
   * @member {ThingUnion[]} [provider] The source of the creative work.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly provider?: ThingUnion[];
  /**
   * @member {string} [text] **NOTE: This property will not be serialized. It
   * can only be populated by the server.**
   */
  readonly text?: string;
}

/**
 * @interface
 * An interface representing ContractualRulesLicenseAttribution.
 * Defines a contractual rule for license attribution.
 *
 */
export interface ContractualRulesLicenseAttribution {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "ContractualRules/LicenseAttribution";
  /**
   * @member {string} [targetPropertyName] The name of the field that the rule
   * applies to.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly targetPropertyName?: string;
  /**
   * @member {boolean} [mustBeCloseToContent] A Boolean value that determines
   * whether the contents of the rule must be placed in close proximity to the
   * field that the rule applies to. If true, the contents must be placed in
   * close proximity. If false, or this field does not exist, the contents may
   * be placed at the caller's discretion.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly mustBeCloseToContent?: boolean;
  /**
   * @member {License} [license] The license under which the content may be
   * used.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly license?: License;
  /**
   * @member {string} [licenseNotice] The license to display next to the
   * targeted field.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly licenseNotice?: string;
}

/**
 * @interface
 * An interface representing ContractualRulesLinkAttribution.
 * Defines a contractual rule for link attribution.
 *
 */
export interface ContractualRulesLinkAttribution {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "ContractualRules/LinkAttribution";
  /**
   * @member {string} [targetPropertyName] The name of the field that the rule
   * applies to.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly targetPropertyName?: string;
  /**
   * @member {boolean} [mustBeCloseToContent] A Boolean value that determines
   * whether the contents of the rule must be placed in close proximity to the
   * field that the rule applies to. If true, the contents must be placed in
   * close proximity. If false, or this field does not exist, the contents may
   * be placed at the caller's discretion.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly mustBeCloseToContent?: boolean;
  /**
   * @member {string} text The attribution text.
   */
  text: string;
  /**
   * @member {string} url The URL to the provider's website. Use text and URL
   * to create the hyperlink.
   */
  url: string;
  /**
   * @member {boolean} [optionalForListDisplay] Indicates whether this
   * provider's attribution is optional.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly optionalForListDisplay?: boolean;
}

/**
 * @interface
 * An interface representing ContractualRulesMediaAttribution.
 * Defines a contractual rule for media attribution.
 *
 */
export interface ContractualRulesMediaAttribution {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "ContractualRules/MediaAttribution";
  /**
   * @member {string} [targetPropertyName] The name of the field that the rule
   * applies to.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly targetPropertyName?: string;
  /**
   * @member {boolean} [mustBeCloseToContent] A Boolean value that determines
   * whether the contents of the rule must be placed in close proximity to the
   * field that the rule applies to. If true, the contents must be placed in
   * close proximity. If false, or this field does not exist, the contents may
   * be placed at the caller's discretion.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly mustBeCloseToContent?: boolean;
  /**
   * @member {string} [url] The URL that you use to create of hyperlink of the
   * media content. For example, if the target is an image, you would use the
   * URL to make the image clickable.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly url?: string;
}

/**
 * @interface
 * An interface representing ContractualRulesTextAttribution.
 * Defines a contractual rule for text attribution.
 *
 */
export interface ContractualRulesTextAttribution {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "ContractualRules/TextAttribution";
  /**
   * @member {string} [targetPropertyName] The name of the field that the rule
   * applies to.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly targetPropertyName?: string;
  /**
   * @member {boolean} [mustBeCloseToContent] A Boolean value that determines
   * whether the contents of the rule must be placed in close proximity to the
   * field that the rule applies to. If true, the contents must be placed in
   * close proximity. If false, or this field does not exist, the contents may
   * be placed at the caller's discretion.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly mustBeCloseToContent?: boolean;
  /**
   * @member {string} text The attribution text. Text attribution applies to
   * the entity as a whole and should be displayed immediately following the
   * entity presentation. If there are multiple text or link attribution rules
   * that do not specify a target, you should concatenate them and display them
   * using a "Data from:" label.
   */
  text: string;
  /**
   * @member {boolean} [optionalForListDisplay] Indicates whether this
   * provider's attribution is optional.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly optionalForListDisplay?: boolean;
}

/**
 * Contains the possible cases for FoodEstablishment.
 */
export type FoodEstablishmentUnion = FoodEstablishment | Restaurant;

/**
 * @interface
 * An interface representing FoodEstablishment.
 */
export interface FoodEstablishment {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "FoodEstablishment";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {ContractualRulesContractualRuleUnion[]} [contractualRules] A list
   * of rules that you must adhere to if you display the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly contractualRules?: ContractualRulesContractualRuleUnion[];
  /**
   * @member {string} [webSearchUrl] The URL To Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {string} [name] The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [url] The URL to get more information about the thing
   * represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly url?: string;
  /**
   * @member {ImageObject} [image] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * @member {string} [description] A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
  /**
   * @member {EntitiesEntityPresentationInfo} [entityPresentationInfo]
   * Additional information about the entity such as hints that you can use to
   * determine the entity's type. To determine the entity's type, use the
   * entityScenario and entityTypeHint fields.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly entityPresentationInfo?: EntitiesEntityPresentationInfo;
  /**
   * @member {string} [bingId] An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly bingId?: string;
  /**
   * @member {PostalAddress} [address] The postal address of where the entity
   * is located
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly address?: PostalAddress;
  /**
   * @member {string} [telephone] The entity's telephone number
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly telephone?: string;
  /**
   * @member {string} [priceRange] $$.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly priceRange?: string;
  /**
   * @member {ImageObject[]} [panoramas] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly panoramas?: ImageObject[];
  /**
   * @member {boolean} [isPermanentlyClosed] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly isPermanentlyClosed?: boolean;
  /**
   * @member {string} [tagLine] **NOTE: This property will not be serialized.
   * It can only be populated by the server.**
   */
  readonly tagLine?: string;
}

/**
 * Contains the possible cases for LodgingBusiness.
 */
export type LodgingBusinessUnion = LodgingBusiness | Hotel;

/**
 * @interface
 * An interface representing LodgingBusiness.
 */
export interface LodgingBusiness {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "LodgingBusiness";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {ContractualRulesContractualRuleUnion[]} [contractualRules] A list
   * of rules that you must adhere to if you display the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly contractualRules?: ContractualRulesContractualRuleUnion[];
  /**
   * @member {string} [webSearchUrl] The URL To Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {string} [name] The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [url] The URL to get more information about the thing
   * represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly url?: string;
  /**
   * @member {ImageObject} [image] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * @member {string} [description] A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
  /**
   * @member {EntitiesEntityPresentationInfo} [entityPresentationInfo]
   * Additional information about the entity such as hints that you can use to
   * determine the entity's type. To determine the entity's type, use the
   * entityScenario and entityTypeHint fields.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly entityPresentationInfo?: EntitiesEntityPresentationInfo;
  /**
   * @member {string} [bingId] An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly bingId?: string;
  /**
   * @member {PostalAddress} [address] The postal address of where the entity
   * is located
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly address?: PostalAddress;
  /**
   * @member {string} [telephone] The entity's telephone number
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly telephone?: string;
  /**
   * @member {string} [priceRange] $$.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly priceRange?: string;
  /**
   * @member {ImageObject[]} [panoramas] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly panoramas?: ImageObject[];
  /**
   * @member {boolean} [isPermanentlyClosed] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly isPermanentlyClosed?: boolean;
  /**
   * @member {string} [tagLine] **NOTE: This property will not be serialized.
   * It can only be populated by the server.**
   */
  readonly tagLine?: string;
}

/**
 * @interface
 * An interface representing Restaurant.
 */
export interface Restaurant {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "Restaurant";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {ContractualRulesContractualRuleUnion[]} [contractualRules] A list
   * of rules that you must adhere to if you display the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly contractualRules?: ContractualRulesContractualRuleUnion[];
  /**
   * @member {string} [webSearchUrl] The URL To Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {string} [name] The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [url] The URL to get more information about the thing
   * represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly url?: string;
  /**
   * @member {ImageObject} [image] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * @member {string} [description] A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
  /**
   * @member {EntitiesEntityPresentationInfo} [entityPresentationInfo]
   * Additional information about the entity such as hints that you can use to
   * determine the entity's type. To determine the entity's type, use the
   * entityScenario and entityTypeHint fields.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly entityPresentationInfo?: EntitiesEntityPresentationInfo;
  /**
   * @member {string} [bingId] An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly bingId?: string;
  /**
   * @member {PostalAddress} [address] The postal address of where the entity
   * is located
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly address?: PostalAddress;
  /**
   * @member {string} [telephone] The entity's telephone number
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly telephone?: string;
  /**
   * @member {string} [priceRange] $$.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly priceRange?: string;
  /**
   * @member {ImageObject[]} [panoramas] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly panoramas?: ImageObject[];
  /**
   * @member {boolean} [isPermanentlyClosed] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly isPermanentlyClosed?: boolean;
  /**
   * @member {string} [tagLine] **NOTE: This property will not be serialized.
   * It can only be populated by the server.**
   */
  readonly tagLine?: string;
  /**
   * @member {boolean} [acceptsReservations] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly acceptsReservations?: boolean;
  /**
   * @member {string} [reservationUrl] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly reservationUrl?: string;
  /**
   * @member {string[]} [servesCuisine] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly servesCuisine?: string[];
  /**
   * @member {string} [menuUrl] **NOTE: This property will not be serialized.
   * It can only be populated by the server.**
   */
  readonly menuUrl?: string;
}

/**
 * @interface
 * An interface representing Hotel.
 */
export interface Hotel {
  /**
   * @member {string} _type Polymorphic Discriminator
   */
  _type: "Hotel";
  /**
   * @member {string} [id] A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly id?: string;
  /**
   * @member {ContractualRulesContractualRuleUnion[]} [contractualRules] A list
   * of rules that you must adhere to if you display the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly contractualRules?: ContractualRulesContractualRuleUnion[];
  /**
   * @member {string} [webSearchUrl] The URL To Bing's search result for this
   * item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * @member {string} [name] The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly name?: string;
  /**
   * @member {string} [url] The URL to get more information about the thing
   * represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly url?: string;
  /**
   * @member {ImageObject} [image] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * @member {string} [description] A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly description?: string;
  /**
   * @member {EntitiesEntityPresentationInfo} [entityPresentationInfo]
   * Additional information about the entity such as hints that you can use to
   * determine the entity's type. To determine the entity's type, use the
   * entityScenario and entityTypeHint fields.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly entityPresentationInfo?: EntitiesEntityPresentationInfo;
  /**
   * @member {string} [bingId] An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly bingId?: string;
  /**
   * @member {PostalAddress} [address] The postal address of where the entity
   * is located
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly address?: PostalAddress;
  /**
   * @member {string} [telephone] The entity's telephone number
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly telephone?: string;
  /**
   * @member {string} [priceRange] $$.
   * **NOTE: This property will not be serialized. It can only be populated by
   * the server.**
   */
  readonly priceRange?: string;
  /**
   * @member {ImageObject[]} [panoramas] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly panoramas?: ImageObject[];
  /**
   * @member {boolean} [isPermanentlyClosed] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly isPermanentlyClosed?: boolean;
  /**
   * @member {string} [tagLine] **NOTE: This property will not be serialized.
   * It can only be populated by the server.**
   */
  readonly tagLine?: string;
  /**
   * @member {string} [hotelClass] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly hotelClass?: string;
  /**
   * @member {string[]} [amenities] **NOTE: This property will not be
   * serialized. It can only be populated by the server.**
   */
  readonly amenities?: string[];
}

/**
 * @interface
 * An interface representing EntitySearchClientOptions.
 * @extends ServiceClientOptions
 */
export interface EntitySearchClientOptions extends ServiceClientOptions {
  /**
   * @member {string} [endpoint] Supported Cognitive Services endpoints
   * (protocol and hostname, for example:
   * "https://westus.api.cognitive.microsoft.com",
   * "https://api.cognitive.microsoft.com"). Default value:
   * 'https://api.cognitive.microsoft.com' .
   */
  endpoint?: string;
}

/**
 * @interface
 * An interface representing EntitiesSearchOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface EntitiesSearchOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [acceptLanguage] A comma-delimited list of one or more
   * languages to use for user interface strings. The list is in decreasing
   * order of preference. For additional information, including expected
   * format, see
   * [RFC2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html). This
   * header and the setLang query parameter are mutually exclusive; do not
   * specify both. If you set this header, you must also specify the cc query
   * parameter. Bing will use the first supported language it finds from the
   * list, and combine that language with the cc parameter value to determine
   * the market to return results for. If the list does not include a supported
   * language, Bing will find the closest language and market that supports the
   * request, and may use an aggregated or default market for the results
   * instead of a specified one. You should use this header and the cc query
   * parameter only if you specify multiple languages; otherwise, you should
   * use the mkt and setLang query parameters. A user interface string is a
   * string that's used as a label in a user interface. There are very few user
   * interface strings in the JSON response objects. Any links in the response
   * objects to Bing.com properties will apply the specified language.
   */
  acceptLanguage?: string;
  /**
   * @member {string} [pragma] By default, Bing returns cached content, if
   * available. To prevent Bing from returning cached content, set the Pragma
   * header to no-cache (for example, Pragma: no-cache).
   */
  pragma?: string;
  /**
   * @member {string} [userAgent] The user agent originating the request. Bing
   * uses the user agent to provide mobile users with an optimized experience.
   * Although optional, you are strongly encouraged to always specify this
   * header. The user-agent should be the same string that any commonly used
   * browser would send. For information about user agents, see [RFC
   * 2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html).
   */
  userAgent?: string;
  /**
   * @member {string} [clientId] Bing uses this header to provide users with
   * consistent behavior across Bing API calls. Bing often flights new features
   * and improvements, and it uses the client ID as a key for assigning traffic
   * on different flights. If you do not use the same client ID for a user
   * across multiple requests, then Bing may assign the user to multiple
   * conflicting flights. Being assigned to multiple conflicting flights can
   * lead to an inconsistent user experience. For example, if the second
   * request has a different flight assignment than the first, the experience
   * may be unexpected. Also, Bing can use the client ID to tailor web results
   * to that client ID’s search history, providing a richer experience for the
   * user. Bing also uses this header to help improve result rankings by
   * analyzing the activity generated by a client ID. The relevance
   * improvements help with better quality of results delivered by Bing APIs
   * and in turn enables higher click-through rates for the API consumer.
   * IMPORTANT: Although optional, you should consider this header required.
   * Persisting the client ID across multiple requests for the same end user
   * and device combination enables 1) the API consumer to receive a consistent
   * user experience, and 2) higher click-through rates via better quality of
   * results from the Bing APIs. Each user that uses your application on the
   * device must have a unique, Bing generated client ID. If you do not include
   * this header in the request, Bing generates an ID and returns it in the
   * X-MSEdge-ClientID response header. The only time that you should NOT
   * include this header in a request is the first time the user uses your app
   * on that device. Use the client ID for each Bing API request that your app
   * makes for this user on the device. Persist the client ID. To persist the
   * ID in a browser app, use a persistent HTTP cookie to ensure the ID is used
   * across all sessions. Do not use a session cookie. For other apps such as
   * mobile apps, use the device's persistent storage to persist the ID. The
   * next time the user uses your app on that device, get the client ID that
   * you persisted. Bing responses may or may not include this header. If the
   * response includes this header, capture the client ID and use it for all
   * subsequent Bing requests for the user on that device. If you include the
   * X-MSEdge-ClientID, you must not include cookies in the request.
   */
  clientId?: string;
  /**
   * @member {string} [clientIp] The IPv4 or IPv6 address of the client device.
   * The IP address is used to discover the user's location. Bing uses the
   * location information to determine safe search behavior. Although optional,
   * you are encouraged to always specify this header and the X-Search-Location
   * header. Do not obfuscate the address (for example, by changing the last
   * octet to 0). Obfuscating the address results in the location not being
   * anywhere near the device's actual location, which may result in Bing
   * serving erroneous results.
   */
  clientIp?: string;
  /**
   * @member {string} [location] A semicolon-delimited list of key/value pairs
   * that describe the client's geographical location. Bing uses the location
   * information to determine safe search behavior and to return relevant local
   * content. Specify the key/value pair as <key>:<value>. The following are
   * the keys that you use to specify the user's location. lat (required): The
   * latitude of the client's location, in degrees. The latitude must be
   * greater than or equal to -90.0 and less than or equal to +90.0. Negative
   * values indicate southern latitudes and positive values indicate northern
   * latitudes. long (required): The longitude of the client's location, in
   * degrees. The longitude must be greater than or equal to -180.0 and less
   * than or equal to +180.0. Negative values indicate western longitudes and
   * positive values indicate eastern longitudes. re (required): The radius, in
   * meters, which specifies the horizontal accuracy of the coordinates. Pass
   * the value returned by the device's location service. Typical values might
   * be 22m for GPS/Wi-Fi, 380m for cell tower triangulation, and 18,000m for
   * reverse IP lookup. ts (optional): The UTC UNIX timestamp of when the
   * client was at the location. (The UNIX timestamp is the number of seconds
   * since January 1, 1970.) head (optional): The client's relative heading or
   * direction of travel. Specify the direction of travel as degrees from 0
   * through 360, counting clockwise relative to true north. Specify this key
   * only if the sp key is nonzero. sp (optional): The horizontal velocity
   * (speed), in meters per second, that the client device is traveling. alt
   * (optional): The altitude of the client device, in meters. are (optional):
   * The radius, in meters, that specifies the vertical accuracy of the
   * coordinates. Specify this key only if you specify the alt key. Although
   * many of the keys are optional, the more information that you provide, the
   * more accurate the location results are. Although optional, you are
   * encouraged to always specify the user's geographical location. Providing
   * the location is especially important if the client's IP address does not
   * accurately reflect the user's physical location (for example, if the
   * client uses VPN). For optimal results, you should include this header and
   * the X-MSEdge-ClientIP header, but at a minimum, you should include this
   * header.
   */
  location?: string;
  /**
   * @member {string} [countryCode] A 2-character country code of the country
   * where the results come from. This API supports only the United States
   * market. If you specify this query parameter, it must be set to us. If you
   * set this parameter, you must also specify the Accept-Language header. Bing
   * uses the first supported language it finds from the languages list, and
   * combine that language with the country code that you specify to determine
   * the market to return results for. If the languages list does not include a
   * supported language, Bing finds the closest language and market that
   * supports the request, or it may use an aggregated or default market for
   * the results instead of a specified one. You should use this query
   * parameter and the Accept-Language query parameter only if you specify
   * multiple languages; otherwise, you should use the mkt and setLang query
   * parameters. This parameter and the mkt query parameter are mutually
   * exclusive—do not specify both.
   */
  countryCode?: string;
  /**
   * @member {string} [market] The market where the results come from. You are
   * strongly encouraged to always specify the market, if known. Specifying the
   * market helps Bing route the request and return an appropriate and optimal
   * response. This parameter and the cc query parameter are mutually
   * exclusive—do not specify both. Default value: 'en-us' .
   */
  market?: string;
  /**
   * @member {AnswerType[]} [responseFilter] A comma-delimited list of answers
   * to include in the response. If you do not specify this parameter, the
   * response includes all search answers for which there's relevant data.
   */
  responseFilter?: AnswerType[];
  /**
   * @member {ResponseFormat[]} [responseFormat] The media type to use for the
   * response. The following are the possible case-insensitive values: JSON,
   * JSONLD. The default is JSON. If you specify JSONLD, the response body
   * includes JSON-LD objects that contain the search results.
   */
  responseFormat?: ResponseFormat[];
  /**
   * @member {SafeSearch} [safeSearch] A filter used to filter adult content.
   * Off: Return webpages with adult text, images, or videos. Moderate: Return
   * webpages with adult text, but not adult images or videos. Strict: Do not
   * return webpages with adult text, images, or videos. The default is
   * Moderate. If the request comes from a market that Bing's adult policy
   * requires that safeSearch is set to Strict, Bing ignores the safeSearch
   * value and uses Strict. If you use the site: query operator, there is the
   * chance that the response may contain adult content regardless of what the
   * safeSearch query parameter is set to. Use site: only if you are aware of
   * the content on the site and your scenario supports the possibility of
   * adult content. Possible values include: 'Off', 'Moderate', 'Strict'
   */
  safeSearch?: SafeSearch;
  /**
   * @member {string} [setLang] The language to use for user interface strings.
   * Specify the language using the ISO 639-1 2-letter language code. For
   * example, the language code for English is EN. The default is EN (English).
   * Although optional, you should always specify the language. Typically, you
   * set setLang to the same language specified by mkt unless the user wants
   * the user interface strings displayed in a different language. This
   * parameter and the Accept-Language header are mutually exclusive; do not
   * specify both. A user interface string is a string that's used as a label
   * in a user interface. There are few user interface strings in the JSON
   * response objects. Also, any links to Bing.com properties in the response
   * objects apply the specified language.
   */
  setLang?: string;
}

/**
 * Defines values for EntityQueryScenario.
 * Possible values include: 'DominantEntity', 'DominantEntityWithDisambiguation', 'Disambiguation',
 * 'List', 'ListWithPivot'
 * @readonly
 * @enum {string}
 */
export type EntityQueryScenario = 'DominantEntity' | 'DominantEntityWithDisambiguation' | 'Disambiguation' | 'List' | 'ListWithPivot';

/**
 * Defines values for EntityScenario.
 * Possible values include: 'DominantEntity', 'DisambiguationItem', 'ListItem'
 * @readonly
 * @enum {string}
 */
export type EntityScenario = 'DominantEntity' | 'DisambiguationItem' | 'ListItem';

/**
 * Defines values for EntityType.
 * Possible values include: 'Generic', 'Person', 'Place', 'Media', 'Organization', 'LocalBusiness',
 * 'Restaurant', 'Hotel', 'TouristAttraction', 'Travel', 'City', 'Country', 'Attraction', 'House',
 * 'State', 'RadioStation', 'StreetAddress', 'Neighborhood', 'Locality', 'PostalCode', 'Region',
 * 'SubRegion', 'MinorRegion', 'Continent', 'PointOfInterest', 'Other', 'Movie', 'Book',
 * 'TelevisionShow', 'TelevisionSeason', 'VideoGame', 'MusicAlbum', 'MusicRecording', 'MusicGroup',
 * 'Composition', 'TheaterPlay', 'Event', 'Actor', 'Artist', 'Attorney', 'Speciality',
 * 'CollegeOrUniversity', 'School', 'Food', 'Drug', 'Animal', 'SportsTeam', 'Product', 'Car'
 * @readonly
 * @enum {string}
 */
export type EntityType = 'Generic' | 'Person' | 'Place' | 'Media' | 'Organization' | 'LocalBusiness' | 'Restaurant' | 'Hotel' | 'TouristAttraction' | 'Travel' | 'City' | 'Country' | 'Attraction' | 'House' | 'State' | 'RadioStation' | 'StreetAddress' | 'Neighborhood' | 'Locality' | 'PostalCode' | 'Region' | 'SubRegion' | 'MinorRegion' | 'Continent' | 'PointOfInterest' | 'Other' | 'Movie' | 'Book' | 'TelevisionShow' | 'TelevisionSeason' | 'VideoGame' | 'MusicAlbum' | 'MusicRecording' | 'MusicGroup' | 'Composition' | 'TheaterPlay' | 'Event' | 'Actor' | 'Artist' | 'Attorney' | 'Speciality' | 'CollegeOrUniversity' | 'School' | 'Food' | 'Drug' | 'Animal' | 'SportsTeam' | 'Product' | 'Car';

/**
 * Defines values for ErrorCode.
 * Possible values include: 'None', 'ServerError', 'InvalidRequest', 'RateLimitExceeded',
 * 'InvalidAuthorization', 'InsufficientAuthorization'
 * @readonly
 * @enum {string}
 */
export type ErrorCode = 'None' | 'ServerError' | 'InvalidRequest' | 'RateLimitExceeded' | 'InvalidAuthorization' | 'InsufficientAuthorization';

/**
 * Defines values for ErrorSubCode.
 * Possible values include: 'UnexpectedError', 'ResourceError', 'NotImplemented',
 * 'ParameterMissing', 'ParameterInvalidValue', 'HttpNotAllowed', 'Blocked',
 * 'AuthorizationMissing', 'AuthorizationRedundancy', 'AuthorizationDisabled',
 * 'AuthorizationExpired'
 * @readonly
 * @enum {string}
 */
export type ErrorSubCode = 'UnexpectedError' | 'ResourceError' | 'NotImplemented' | 'ParameterMissing' | 'ParameterInvalidValue' | 'HttpNotAllowed' | 'Blocked' | 'AuthorizationMissing' | 'AuthorizationRedundancy' | 'AuthorizationDisabled' | 'AuthorizationExpired';

/**
 * Defines values for AnswerType.
 * Possible values include: 'Entities', 'Places'
 * @readonly
 * @enum {string}
 */
export type AnswerType = 'Entities' | 'Places';

/**
 * Defines values for ResponseFormat.
 * Possible values include: 'Json', 'JsonLd'
 * @readonly
 * @enum {string}
 */
export type ResponseFormat = 'Json' | 'JsonLd';

/**
 * Defines values for SafeSearch.
 * Possible values include: 'Off', 'Moderate', 'Strict'
 * @readonly
 * @enum {string}
 */
export type SafeSearch = 'Off' | 'Moderate' | 'Strict';

/**
 * Contains response data for the search operation.
 */
export type EntitiesSearchResponse = SearchResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SearchResponse;
    };
};
