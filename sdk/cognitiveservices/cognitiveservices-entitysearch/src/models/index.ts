/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { ServiceClientOptions } from "@azure/ms-rest-js";
import * as msRest from "@azure/ms-rest-js";

/**
 * Defines the query context that Bing used for the request.
 */
export interface QueryContext {
  /**
   * The query string as specified in the request.
   */
  originalQuery: string;
  /**
   * The query string used by Bing to perform the query. Bing uses the altered query string if the
   * original query string contained spelling mistakes. For example, if the query string is "saling
   * downwind", the altered query string will be "sailing downwind". This field is included only if
   * the original query string contains a spelling mistake.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly alteredQuery?: string;
  /**
   * The query string to use to force Bing to use the original string. For example, if the query
   * string is "saling downwind", the override query string will be "+saling downwind". Remember to
   * encode the query string which results in "%2Bsaling+downwind". This field is included only if
   * the original query string contains a spelling mistake.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly alterationOverrideQuery?: string;
  /**
   * A Boolean value that indicates whether the specified query has adult intent. The value is true
   * if the query has adult intent; otherwise, false.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly adultIntent?: boolean;
  /**
   * A Boolean value that indicates whether Bing requires the user's location to provide accurate
   * results. If you specified the user's location by using the X-MSEdge-ClientIP and
   * X-Search-Location headers, you can ignore this field. For location aware queries, such as
   * "today's weather" or "restaurants near me" that need the user's location to provide accurate
   * results, this field is set to true. For location aware queries that include the location (for
   * example, "Seattle weather"), this field is set to false. This field is also set to false for
   * queries that are not location aware, such as "best sellers".
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly askUserForLocation?: boolean;
}

/**
 * Contains the possible cases for ResponseBase.
 */
export type ResponseBaseUnion = ResponseBase | IdentifiableUnion;

/**
 * An interface representing ResponseBase.
 */
export interface ResponseBase {
  /**
   * Polymorphic Discriminator
   */
  _type: "ResponseBase";
}

/**
 * Contains the possible cases for Identifiable.
 */
export type IdentifiableUnion = Identifiable | ResponseUnion;

/**
 * Defines the identity of a resource.
 */
export interface Identifiable {
  /**
   * Polymorphic Discriminator
   */
  _type: "Identifiable";
  /**
   * A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
}

/**
 * Contains the possible cases for Response.
 */
export type ResponseUnion = Response | ThingUnion | SearchResponse | AnswerUnion | ErrorResponse;

/**
 * Defines a response. All schemas that could be returned at the root of a response should inherit
 * from this
 */
export interface Response {
  /**
   * Polymorphic Discriminator
   */
  _type: "Response";
  /**
   * A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * A list of rules that you must adhere to if you display the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly contractualRules?: ContractualRulesContractualRuleUnion[];
  /**
   * The URL To Bing's search result for this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly webSearchUrl?: string;
}

/**
 * Contains the possible cases for Thing.
 */
export type ThingUnion = Thing | PlaceUnion | Organization | CreativeWorkUnion | IntangibleUnion;

/**
 * An interface representing Thing.
 */
export interface Thing {
  /**
   * Polymorphic Discriminator
   */
  _type: "Thing";
  /**
   * A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * A list of rules that you must adhere to if you display the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly contractualRules?: ContractualRulesContractualRuleUnion[];
  /**
   * The URL To Bing's search result for this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The URL to get more information about the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly url?: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * Additional information about the entity such as hints that you can use to determine the
   * entity's type. To determine the entity's type, use the entityScenario and entityTypeHint
   * fields.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly entityPresentationInfo?: EntitiesEntityPresentationInfo;
  /**
   * An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly bingId?: string;
}

/**
 * Contains the possible cases for CreativeWork.
 */
export type CreativeWorkUnion = CreativeWork | MediaObjectUnion | License;

/**
 * An interface representing CreativeWork.
 */
export interface CreativeWork {
  /**
   * Polymorphic Discriminator
   */
  _type: "CreativeWork";
  /**
   * A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * A list of rules that you must adhere to if you display the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly contractualRules?: ContractualRulesContractualRuleUnion[];
  /**
   * The URL To Bing's search result for this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The URL to get more information about the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly url?: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * Additional information about the entity such as hints that you can use to determine the
   * entity's type. To determine the entity's type, use the entityScenario and entityTypeHint
   * fields.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly entityPresentationInfo?: EntitiesEntityPresentationInfo;
  /**
   * An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly bingId?: string;
  /**
   * The URL to a thumbnail of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly thumbnailUrl?: string;
  /**
   * The source of the creative work.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provider?: ThingUnion[];
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly text?: string;
}

/**
 * Contains the possible cases for MediaObject.
 */
export type MediaObjectUnion = MediaObject | ImageObject;

/**
 * An interface representing MediaObject.
 */
export interface MediaObject {
  /**
   * Polymorphic Discriminator
   */
  _type: "MediaObject";
  /**
   * A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * A list of rules that you must adhere to if you display the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly contractualRules?: ContractualRulesContractualRuleUnion[];
  /**
   * The URL To Bing's search result for this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The URL to get more information about the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly url?: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * Additional information about the entity such as hints that you can use to determine the
   * entity's type. To determine the entity's type, use the entityScenario and entityTypeHint
   * fields.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly entityPresentationInfo?: EntitiesEntityPresentationInfo;
  /**
   * An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly bingId?: string;
  /**
   * The URL to a thumbnail of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly thumbnailUrl?: string;
  /**
   * The source of the creative work.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provider?: ThingUnion[];
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly text?: string;
  /**
   * Original URL to retrieve the source (file) for the media object (e.g the source URL for the
   * image).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly contentUrl?: string;
  /**
   * URL of the page that hosts the media object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly hostPageUrl?: string;
  /**
   * The width of the source media object, in pixels.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly width?: number;
  /**
   * The height of the source media object, in pixels.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly height?: number;
}

/**
 * Defines an image
 */
export interface ImageObject {
  /**
   * Polymorphic Discriminator
   */
  _type: "ImageObject";
  /**
   * A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * A list of rules that you must adhere to if you display the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly contractualRules?: ContractualRulesContractualRuleUnion[];
  /**
   * The URL To Bing's search result for this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The URL to get more information about the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly url?: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * Additional information about the entity such as hints that you can use to determine the
   * entity's type. To determine the entity's type, use the entityScenario and entityTypeHint
   * fields.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly entityPresentationInfo?: EntitiesEntityPresentationInfo;
  /**
   * An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly bingId?: string;
  /**
   * The URL to a thumbnail of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly thumbnailUrl?: string;
  /**
   * The source of the creative work.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provider?: ThingUnion[];
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly text?: string;
  /**
   * Original URL to retrieve the source (file) for the media object (e.g the source URL for the
   * image).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly contentUrl?: string;
  /**
   * URL of the page that hosts the media object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly hostPageUrl?: string;
  /**
   * The width of the source media object, in pixels.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly width?: number;
  /**
   * The height of the source media object, in pixels.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly height?: number;
  /**
   * The URL to a thumbnail of the image
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly thumbnail?: ImageObject;
}

/**
 * Defines additional information about an entity such as type hints.
 */
export interface EntitiesEntityPresentationInfo {
  /**
   * The supported scenario. Possible values include: 'DominantEntity', 'DisambiguationItem',
   * 'ListItem'. Default value: 'DominantEntity'.
   */
  entityScenario: EntityScenario;
  /**
   * A list of hints that indicate the entity's type. The list could contain a single hint such as
   * Movie or a list of hints such as Place, LocalBusiness, Restaurant. Each successive hint in the
   * array narrows the entity's type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly entityTypeHints?: EntityType[];
  /**
   * A display version of the entity hint. For example, if entityTypeHints is Artist, this field
   * may be set to American Singer.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly entityTypeDisplayHint?: string;
}

/**
 * Contains the possible cases for Answer.
 */
export type AnswerUnion = Answer | SearchResultsAnswerUnion;

/**
 * An interface representing Answer.
 */
export interface Answer {
  /**
   * Polymorphic Discriminator
   */
  _type: "Answer";
  /**
   * A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * A list of rules that you must adhere to if you display the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly contractualRules?: ContractualRulesContractualRuleUnion[];
  /**
   * The URL To Bing's search result for this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly webSearchUrl?: string;
}

/**
 * Contains the possible cases for SearchResultsAnswer.
 */
export type SearchResultsAnswerUnion = SearchResultsAnswer | Entities | Places;

/**
 * An interface representing SearchResultsAnswer.
 */
export interface SearchResultsAnswer {
  /**
   * Polymorphic Discriminator
   */
  _type: "SearchResultsAnswer";
  /**
   * A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * A list of rules that you must adhere to if you display the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly contractualRules?: ContractualRulesContractualRuleUnion[];
  /**
   * The URL To Bing's search result for this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly queryContext?: QueryContext;
}

/**
 * Defines an entity answer.
 */
export interface Entities {
  /**
   * Polymorphic Discriminator
   */
  _type: "Entities";
  /**
   * A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * A list of rules that you must adhere to if you display the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly contractualRules?: ContractualRulesContractualRuleUnion[];
  /**
   * The URL To Bing's search result for this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly queryContext?: QueryContext;
  /**
   * The supported query scenario. This field is set to DominantEntity or DisambiguationItem. The
   * field is set to DominantEntity if Bing determines that only a single entity satisfies the
   * request. For example, a book, movie, person, or attraction. If multiple entities could satisfy
   * the request, the field is set to DisambiguationItem. For example, if the request uses the
   * generic title of a movie franchise, the entity's type would likely be DisambiguationItem. But,
   * if the request specifies a specific title from the franchise, the entity's type would likely
   * be DominantEntity. Possible values include: 'DominantEntity',
   * 'DominantEntityWithDisambiguation', 'Disambiguation', 'List', 'ListWithPivot'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**.
   * Default value: 'DominantEntity'.
   */
  readonly queryScenario?: EntityQueryScenario;
  /**
   * A list of entities.
   */
  value: ThingUnion[];
}

/**
 * Defines a local entity answer.
 */
export interface Places {
  /**
   * Polymorphic Discriminator
   */
  _type: "Places";
  /**
   * A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * A list of rules that you must adhere to if you display the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly contractualRules?: ContractualRulesContractualRuleUnion[];
  /**
   * The URL To Bing's search result for this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly queryContext?: QueryContext;
  /**
   * A list of local entities, such as restaurants or hotels.
   */
  value: ThingUnion[];
}

/**
 * Defines the top-level object that the response includes when the request succeeds.
 */
export interface SearchResponse {
  /**
   * Polymorphic Discriminator
   */
  _type: "SearchResponse";
  /**
   * A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * A list of rules that you must adhere to if you display the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly contractualRules?: ContractualRulesContractualRuleUnion[];
  /**
   * The URL To Bing's search result for this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * An object that contains the query string that Bing used for the request. This object contains
   * the query string as entered by the user. It may also contain an altered query string that Bing
   * used for the query if the query string contained a spelling mistake.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly queryContext?: QueryContext;
  /**
   * A list of entities that are relevant to the search query.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly entities?: Entities;
  /**
   * A list of local entities such as restaurants or hotels that are relevant to the query.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly places?: Places;
}

/**
 * Contains the possible cases for ContractualRulesContractualRule.
 */
export type ContractualRulesContractualRuleUnion = ContractualRulesContractualRule | ContractualRulesAttributionUnion;

/**
 * An interface representing ContractualRulesContractualRule.
 */
export interface ContractualRulesContractualRule {
  /**
   * Polymorphic Discriminator
   */
  _type: "ContractualRules/ContractualRule";
  /**
   * The name of the field that the rule applies to.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly targetPropertyName?: string;
}

/**
 * Defines the error that occurred.
 */
export interface ErrorModel {
  /**
   * The error code that identifies the category of error. Possible values include: 'None',
   * 'ServerError', 'InvalidRequest', 'RateLimitExceeded', 'InvalidAuthorization',
   * 'InsufficientAuthorization'. Default value: 'None'.
   */
  code: ErrorCode;
  /**
   * The error code that further helps to identify the error. Possible values include:
   * 'UnexpectedError', 'ResourceError', 'NotImplemented', 'ParameterMissing',
   * 'ParameterInvalidValue', 'HttpNotAllowed', 'Blocked', 'AuthorizationMissing',
   * 'AuthorizationRedundancy', 'AuthorizationDisabled', 'AuthorizationExpired'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly subCode?: ErrorSubCode;
  /**
   * A description of the error.
   */
  message: string;
  /**
   * A description that provides additional information about the error.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly moreDetails?: string;
  /**
   * The parameter in the request that caused the error.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly parameter?: string;
  /**
   * The parameter's value in the request that was not valid.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly value?: string;
}

/**
 * The top-level response that represents a failed request.
 */
export interface ErrorResponse {
  /**
   * Polymorphic Discriminator
   */
  _type: "ErrorResponse";
  /**
   * A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * A list of rules that you must adhere to if you display the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly contractualRules?: ContractualRulesContractualRuleUnion[];
  /**
   * The URL To Bing's search result for this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * A list of errors that describe the reasons why the request failed.
   */
  errors: ErrorModel[];
}

/**
 * Contains the possible cases for Intangible.
 */
export type IntangibleUnion = Intangible | StructuredValueUnion;

/**
 * An interface representing Intangible.
 */
export interface Intangible {
  /**
   * Polymorphic Discriminator
   */
  _type: "Intangible";
  /**
   * A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * A list of rules that you must adhere to if you display the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly contractualRules?: ContractualRulesContractualRuleUnion[];
  /**
   * The URL To Bing's search result for this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The URL to get more information about the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly url?: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * Additional information about the entity such as hints that you can use to determine the
   * entity's type. To determine the entity's type, use the entityScenario and entityTypeHint
   * fields.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly entityPresentationInfo?: EntitiesEntityPresentationInfo;
  /**
   * An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly bingId?: string;
}

/**
 * Contains the possible cases for StructuredValue.
 */
export type StructuredValueUnion = StructuredValue | PostalAddress;

/**
 * An interface representing StructuredValue.
 */
export interface StructuredValue {
  /**
   * Polymorphic Discriminator
   */
  _type: "StructuredValue";
  /**
   * A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * A list of rules that you must adhere to if you display the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly contractualRules?: ContractualRulesContractualRuleUnion[];
  /**
   * The URL To Bing's search result for this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The URL to get more information about the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly url?: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * Additional information about the entity such as hints that you can use to determine the
   * entity's type. To determine the entity's type, use the entityScenario and entityTypeHint
   * fields.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly entityPresentationInfo?: EntitiesEntityPresentationInfo;
  /**
   * An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly bingId?: string;
}

/**
 * Defines a postal address.
 */
export interface PostalAddress {
  /**
   * Polymorphic Discriminator
   */
  _type: "PostalAddress";
  /**
   * A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * A list of rules that you must adhere to if you display the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly contractualRules?: ContractualRulesContractualRuleUnion[];
  /**
   * The URL To Bing's search result for this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The URL to get more information about the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly url?: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * Additional information about the entity such as hints that you can use to determine the
   * entity's type. To determine the entity's type, use the entityScenario and entityTypeHint
   * fields.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly entityPresentationInfo?: EntitiesEntityPresentationInfo;
  /**
   * An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly bingId?: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly streetAddress?: string;
  /**
   * The city where the street address is located. For example, Seattle.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly addressLocality?: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly addressSubregion?: string;
  /**
   * The state or province code where the street address is located. This could be the two-letter
   * code. For example, WA, or the full name , Washington.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly addressRegion?: string;
  /**
   * The zip code or postal code where the street address is located. For example, 98052.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly postalCode?: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly postOfficeBoxNumber?: string;
  /**
   * The country/region where the street address is located. This could be the two-letter ISO code.
   * For example, US, or the full name, United States.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly addressCountry?: string;
  /**
   * The two letter ISO code of this country. For example, US.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly countryIso?: string;
  /**
   * The neighborhood where the street address is located. For example, Westlake.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly neighborhood?: string;
  /**
   * Region Abbreviation. For example, WA.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly addressRegionAbbreviation?: string;
  /**
   * The complete address. For example, 2100 Westlake Ave N, Bellevue, WA 98052.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly text?: string;
}

/**
 * Contains the possible cases for Place.
 */
export type PlaceUnion = Place | CivicStructureUnion | LocalBusinessUnion | TouristAttraction;

/**
 * Defines information about a local entity, such as a restaurant or hotel.
 */
export interface Place {
  /**
   * Polymorphic Discriminator
   */
  _type: "Place";
  /**
   * A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * A list of rules that you must adhere to if you display the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly contractualRules?: ContractualRulesContractualRuleUnion[];
  /**
   * The URL To Bing's search result for this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The URL to get more information about the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly url?: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * Additional information about the entity such as hints that you can use to determine the
   * entity's type. To determine the entity's type, use the entityScenario and entityTypeHint
   * fields.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly entityPresentationInfo?: EntitiesEntityPresentationInfo;
  /**
   * An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly bingId?: string;
  /**
   * The postal address of where the entity is located
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly address?: PostalAddress;
  /**
   * The entity's telephone number
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly telephone?: string;
}

/**
 * Defines an organization.
 */
export interface Organization {
  /**
   * Polymorphic Discriminator
   */
  _type: "Organization";
  /**
   * A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * A list of rules that you must adhere to if you display the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly contractualRules?: ContractualRulesContractualRuleUnion[];
  /**
   * The URL To Bing's search result for this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The URL to get more information about the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly url?: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * Additional information about the entity such as hints that you can use to determine the
   * entity's type. To determine the entity's type, use the entityScenario and entityTypeHint
   * fields.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly entityPresentationInfo?: EntitiesEntityPresentationInfo;
  /**
   * An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly bingId?: string;
}

/**
 * Contains the possible cases for LocalBusiness.
 */
export type LocalBusinessUnion = LocalBusiness | EntertainmentBusinessUnion | FoodEstablishmentUnion | LodgingBusinessUnion;

/**
 * An interface representing LocalBusiness.
 */
export interface LocalBusiness {
  /**
   * Polymorphic Discriminator
   */
  _type: "LocalBusiness";
  /**
   * A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * A list of rules that you must adhere to if you display the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly contractualRules?: ContractualRulesContractualRuleUnion[];
  /**
   * The URL To Bing's search result for this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The URL to get more information about the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly url?: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * Additional information about the entity such as hints that you can use to determine the
   * entity's type. To determine the entity's type, use the entityScenario and entityTypeHint
   * fields.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly entityPresentationInfo?: EntitiesEntityPresentationInfo;
  /**
   * An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly bingId?: string;
  /**
   * The postal address of where the entity is located
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly address?: PostalAddress;
  /**
   * The entity's telephone number
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly telephone?: string;
  /**
   * $$.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly priceRange?: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly panoramas?: ImageObject[];
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isPermanentlyClosed?: boolean;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly tagLine?: string;
}

/**
 * Contains the possible cases for EntertainmentBusiness.
 */
export type EntertainmentBusinessUnion = EntertainmentBusiness | MovieTheater;

/**
 * An interface representing EntertainmentBusiness.
 */
export interface EntertainmentBusiness {
  /**
   * Polymorphic Discriminator
   */
  _type: "EntertainmentBusiness";
  /**
   * A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * A list of rules that you must adhere to if you display the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly contractualRules?: ContractualRulesContractualRuleUnion[];
  /**
   * The URL To Bing's search result for this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The URL to get more information about the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly url?: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * Additional information about the entity such as hints that you can use to determine the
   * entity's type. To determine the entity's type, use the entityScenario and entityTypeHint
   * fields.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly entityPresentationInfo?: EntitiesEntityPresentationInfo;
  /**
   * An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly bingId?: string;
  /**
   * The postal address of where the entity is located
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly address?: PostalAddress;
  /**
   * The entity's telephone number
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly telephone?: string;
  /**
   * $$.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly priceRange?: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly panoramas?: ImageObject[];
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isPermanentlyClosed?: boolean;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly tagLine?: string;
}

/**
 * An interface representing MovieTheater.
 */
export interface MovieTheater {
  /**
   * Polymorphic Discriminator
   */
  _type: "MovieTheater";
  /**
   * A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * A list of rules that you must adhere to if you display the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly contractualRules?: ContractualRulesContractualRuleUnion[];
  /**
   * The URL To Bing's search result for this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The URL to get more information about the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly url?: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * Additional information about the entity such as hints that you can use to determine the
   * entity's type. To determine the entity's type, use the entityScenario and entityTypeHint
   * fields.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly entityPresentationInfo?: EntitiesEntityPresentationInfo;
  /**
   * An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly bingId?: string;
  /**
   * The postal address of where the entity is located
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly address?: PostalAddress;
  /**
   * The entity's telephone number
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly telephone?: string;
  /**
   * $$.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly priceRange?: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly panoramas?: ImageObject[];
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isPermanentlyClosed?: boolean;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly tagLine?: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly screenCount?: number;
}

/**
 * Contains the possible cases for ContractualRulesAttribution.
 */
export type ContractualRulesAttributionUnion = ContractualRulesAttribution | ContractualRulesLicenseAttribution | ContractualRulesLinkAttribution | ContractualRulesMediaAttribution | ContractualRulesTextAttribution;

/**
 * An interface representing ContractualRulesAttribution.
 */
export interface ContractualRulesAttribution {
  /**
   * Polymorphic Discriminator
   */
  _type: "ContractualRules/Attribution";
  /**
   * The name of the field that the rule applies to.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly targetPropertyName?: string;
  /**
   * A Boolean value that determines whether the contents of the rule must be placed in close
   * proximity to the field that the rule applies to. If true, the contents must be placed in close
   * proximity. If false, or this field does not exist, the contents may be placed at the caller's
   * discretion.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly mustBeCloseToContent?: boolean;
}

/**
 * Contains the possible cases for CivicStructure.
 */
export type CivicStructureUnion = CivicStructure | Airport;

/**
 * An interface representing CivicStructure.
 */
export interface CivicStructure {
  /**
   * Polymorphic Discriminator
   */
  _type: "CivicStructure";
  /**
   * A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * A list of rules that you must adhere to if you display the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly contractualRules?: ContractualRulesContractualRuleUnion[];
  /**
   * The URL To Bing's search result for this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The URL to get more information about the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly url?: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * Additional information about the entity such as hints that you can use to determine the
   * entity's type. To determine the entity's type, use the entityScenario and entityTypeHint
   * fields.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly entityPresentationInfo?: EntitiesEntityPresentationInfo;
  /**
   * An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly bingId?: string;
  /**
   * The postal address of where the entity is located
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly address?: PostalAddress;
  /**
   * The entity's telephone number
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly telephone?: string;
}

/**
 * An interface representing TouristAttraction.
 */
export interface TouristAttraction {
  /**
   * Polymorphic Discriminator
   */
  _type: "TouristAttraction";
  /**
   * A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * A list of rules that you must adhere to if you display the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly contractualRules?: ContractualRulesContractualRuleUnion[];
  /**
   * The URL To Bing's search result for this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The URL to get more information about the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly url?: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * Additional information about the entity such as hints that you can use to determine the
   * entity's type. To determine the entity's type, use the entityScenario and entityTypeHint
   * fields.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly entityPresentationInfo?: EntitiesEntityPresentationInfo;
  /**
   * An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly bingId?: string;
  /**
   * The postal address of where the entity is located
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly address?: PostalAddress;
  /**
   * The entity's telephone number
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly telephone?: string;
}

/**
 * An interface representing Airport.
 */
export interface Airport {
  /**
   * Polymorphic Discriminator
   */
  _type: "Airport";
  /**
   * A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * A list of rules that you must adhere to if you display the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly contractualRules?: ContractualRulesContractualRuleUnion[];
  /**
   * The URL To Bing's search result for this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The URL to get more information about the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly url?: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * Additional information about the entity such as hints that you can use to determine the
   * entity's type. To determine the entity's type, use the entityScenario and entityTypeHint
   * fields.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly entityPresentationInfo?: EntitiesEntityPresentationInfo;
  /**
   * An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly bingId?: string;
  /**
   * The postal address of where the entity is located
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly address?: PostalAddress;
  /**
   * The entity's telephone number
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly telephone?: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly iataCode?: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly icaoCode?: string;
}

/**
 * Defines the license under which the text or photo may be used.
 */
export interface License {
  /**
   * Polymorphic Discriminator
   */
  _type: "License";
  /**
   * A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * A list of rules that you must adhere to if you display the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly contractualRules?: ContractualRulesContractualRuleUnion[];
  /**
   * The URL To Bing's search result for this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The URL to get more information about the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly url?: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * Additional information about the entity such as hints that you can use to determine the
   * entity's type. To determine the entity's type, use the entityScenario and entityTypeHint
   * fields.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly entityPresentationInfo?: EntitiesEntityPresentationInfo;
  /**
   * An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly bingId?: string;
  /**
   * The URL to a thumbnail of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly thumbnailUrl?: string;
  /**
   * The source of the creative work.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provider?: ThingUnion[];
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly text?: string;
}

/**
 * Defines a contractual rule for license attribution.
 */
export interface ContractualRulesLicenseAttribution {
  /**
   * Polymorphic Discriminator
   */
  _type: "ContractualRules/LicenseAttribution";
  /**
   * The name of the field that the rule applies to.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly targetPropertyName?: string;
  /**
   * A Boolean value that determines whether the contents of the rule must be placed in close
   * proximity to the field that the rule applies to. If true, the contents must be placed in close
   * proximity. If false, or this field does not exist, the contents may be placed at the caller's
   * discretion.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly mustBeCloseToContent?: boolean;
  /**
   * The license under which the content may be used.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly license?: License;
  /**
   * The license to display next to the targeted field.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly licenseNotice?: string;
}

/**
 * Defines a contractual rule for link attribution.
 */
export interface ContractualRulesLinkAttribution {
  /**
   * Polymorphic Discriminator
   */
  _type: "ContractualRules/LinkAttribution";
  /**
   * The name of the field that the rule applies to.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly targetPropertyName?: string;
  /**
   * A Boolean value that determines whether the contents of the rule must be placed in close
   * proximity to the field that the rule applies to. If true, the contents must be placed in close
   * proximity. If false, or this field does not exist, the contents may be placed at the caller's
   * discretion.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly mustBeCloseToContent?: boolean;
  /**
   * The attribution text.
   */
  text: string;
  /**
   * The URL to the provider's website. Use text and URL to create the hyperlink.
   */
  url: string;
  /**
   * Indicates whether this provider's attribution is optional.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly optionalForListDisplay?: boolean;
}

/**
 * Defines a contractual rule for media attribution.
 */
export interface ContractualRulesMediaAttribution {
  /**
   * Polymorphic Discriminator
   */
  _type: "ContractualRules/MediaAttribution";
  /**
   * The name of the field that the rule applies to.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly targetPropertyName?: string;
  /**
   * A Boolean value that determines whether the contents of the rule must be placed in close
   * proximity to the field that the rule applies to. If true, the contents must be placed in close
   * proximity. If false, or this field does not exist, the contents may be placed at the caller's
   * discretion.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly mustBeCloseToContent?: boolean;
  /**
   * The URL that you use to create of hyperlink of the media content. For example, if the target
   * is an image, you would use the URL to make the image clickable.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly url?: string;
}

/**
 * Defines a contractual rule for text attribution.
 */
export interface ContractualRulesTextAttribution {
  /**
   * Polymorphic Discriminator
   */
  _type: "ContractualRules/TextAttribution";
  /**
   * The name of the field that the rule applies to.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly targetPropertyName?: string;
  /**
   * A Boolean value that determines whether the contents of the rule must be placed in close
   * proximity to the field that the rule applies to. If true, the contents must be placed in close
   * proximity. If false, or this field does not exist, the contents may be placed at the caller's
   * discretion.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly mustBeCloseToContent?: boolean;
  /**
   * The attribution text. Text attribution applies to the entity as a whole and should be
   * displayed immediately following the entity presentation. If there are multiple text or link
   * attribution rules that do not specify a target, you should concatenate them and display them
   * using a "Data from:" label.
   */
  text: string;
  /**
   * Indicates whether this provider's attribution is optional.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly optionalForListDisplay?: boolean;
}

/**
 * Contains the possible cases for FoodEstablishment.
 */
export type FoodEstablishmentUnion = FoodEstablishment | Restaurant;

/**
 * An interface representing FoodEstablishment.
 */
export interface FoodEstablishment {
  /**
   * Polymorphic Discriminator
   */
  _type: "FoodEstablishment";
  /**
   * A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * A list of rules that you must adhere to if you display the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly contractualRules?: ContractualRulesContractualRuleUnion[];
  /**
   * The URL To Bing's search result for this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The URL to get more information about the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly url?: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * Additional information about the entity such as hints that you can use to determine the
   * entity's type. To determine the entity's type, use the entityScenario and entityTypeHint
   * fields.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly entityPresentationInfo?: EntitiesEntityPresentationInfo;
  /**
   * An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly bingId?: string;
  /**
   * The postal address of where the entity is located
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly address?: PostalAddress;
  /**
   * The entity's telephone number
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly telephone?: string;
  /**
   * $$.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly priceRange?: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly panoramas?: ImageObject[];
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isPermanentlyClosed?: boolean;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly tagLine?: string;
}

/**
 * Contains the possible cases for LodgingBusiness.
 */
export type LodgingBusinessUnion = LodgingBusiness | Hotel;

/**
 * An interface representing LodgingBusiness.
 */
export interface LodgingBusiness {
  /**
   * Polymorphic Discriminator
   */
  _type: "LodgingBusiness";
  /**
   * A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * A list of rules that you must adhere to if you display the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly contractualRules?: ContractualRulesContractualRuleUnion[];
  /**
   * The URL To Bing's search result for this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The URL to get more information about the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly url?: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * Additional information about the entity such as hints that you can use to determine the
   * entity's type. To determine the entity's type, use the entityScenario and entityTypeHint
   * fields.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly entityPresentationInfo?: EntitiesEntityPresentationInfo;
  /**
   * An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly bingId?: string;
  /**
   * The postal address of where the entity is located
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly address?: PostalAddress;
  /**
   * The entity's telephone number
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly telephone?: string;
  /**
   * $$.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly priceRange?: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly panoramas?: ImageObject[];
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isPermanentlyClosed?: boolean;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly tagLine?: string;
}

/**
 * An interface representing Restaurant.
 */
export interface Restaurant {
  /**
   * Polymorphic Discriminator
   */
  _type: "Restaurant";
  /**
   * A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * A list of rules that you must adhere to if you display the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly contractualRules?: ContractualRulesContractualRuleUnion[];
  /**
   * The URL To Bing's search result for this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The URL to get more information about the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly url?: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * Additional information about the entity such as hints that you can use to determine the
   * entity's type. To determine the entity's type, use the entityScenario and entityTypeHint
   * fields.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly entityPresentationInfo?: EntitiesEntityPresentationInfo;
  /**
   * An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly bingId?: string;
  /**
   * The postal address of where the entity is located
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly address?: PostalAddress;
  /**
   * The entity's telephone number
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly telephone?: string;
  /**
   * $$.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly priceRange?: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly panoramas?: ImageObject[];
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isPermanentlyClosed?: boolean;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly tagLine?: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly acceptsReservations?: boolean;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly reservationUrl?: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly servesCuisine?: string[];
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly menuUrl?: string;
}

/**
 * An interface representing Hotel.
 */
export interface Hotel {
  /**
   * Polymorphic Discriminator
   */
  _type: "Hotel";
  /**
   * A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * A list of rules that you must adhere to if you display the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly contractualRules?: ContractualRulesContractualRuleUnion[];
  /**
   * The URL To Bing's search result for this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The URL to get more information about the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly url?: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * Additional information about the entity such as hints that you can use to determine the
   * entity's type. To determine the entity's type, use the entityScenario and entityTypeHint
   * fields.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly entityPresentationInfo?: EntitiesEntityPresentationInfo;
  /**
   * An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly bingId?: string;
  /**
   * The postal address of where the entity is located
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly address?: PostalAddress;
  /**
   * The entity's telephone number
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly telephone?: string;
  /**
   * $$.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly priceRange?: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly panoramas?: ImageObject[];
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isPermanentlyClosed?: boolean;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly tagLine?: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly hotelClass?: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly amenities?: string[];
}

/**
 * An interface representing EntitySearchClientOptions.
 */
export interface EntitySearchClientOptions extends ServiceClientOptions {
  /**
   * Supported Cognitive Services endpoints (protocol and hostname, for example:
   * "https://westus.api.cognitive.microsoft.com", "https://api.cognitive.microsoft.com"). Default
   * value: 'https://api.cognitive.microsoft.com'.
   */
  endpoint?: string;
}

/**
 * Optional Parameters.
 */
export interface EntitiesSearchOptionalParams extends msRest.RequestOptionsBase {
  /**
   * A comma-delimited list of one or more languages to use for user interface strings. The list is
   * in decreasing order of preference. For additional information, including expected format, see
   * [RFC2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html). This header and the setLang
   * query parameter are mutually exclusive; do not specify both. If you set this header, you must
   * also specify the cc query parameter. Bing will use the first supported language it finds from
   * the list, and combine that language with the cc parameter value to determine the market to
   * return results for. If the list does not include a supported language, Bing will find the
   * closest language and market that supports the request, and may use an aggregated or default
   * market for the results instead of a specified one. You should use this header and the cc query
   * parameter only if you specify multiple languages; otherwise, you should use the mkt and
   * setLang query parameters. A user interface string is a string that's used as a label in a user
   * interface. There are very few user interface strings in the JSON response objects. Any links
   * in the response objects to Bing.com properties will apply the specified language.
   */
  acceptLanguage?: string;
  /**
   * By default, Bing returns cached content, if available. To prevent Bing from returning cached
   * content, set the Pragma header to no-cache (for example, Pragma: no-cache).
   */
  pragma?: string;
  /**
   * The user agent originating the request. Bing uses the user agent to provide mobile users with
   * an optimized experience. Although optional, you are strongly encouraged to always specify this
   * header. The user-agent should be the same string that any commonly used browser would send.
   * For information about user agents, see [RFC
   * 2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html).
   */
  userAgent?: string;
  /**
   * Bing uses this header to provide users with consistent behavior across Bing API calls. Bing
   * often flights new features and improvements, and it uses the client ID as a key for assigning
   * traffic on different flights. If you do not use the same client ID for a user across multiple
   * requests, then Bing may assign the user to multiple conflicting flights. Being assigned to
   * multiple conflicting flights can lead to an inconsistent user experience. For example, if the
   * second request has a different flight assignment than the first, the experience may be
   * unexpected. Also, Bing can use the client ID to tailor web results to that client ID’s search
   * history, providing a richer experience for the user. Bing also uses this header to help
   * improve result rankings by analyzing the activity generated by a client ID. The relevance
   * improvements help with better quality of results delivered by Bing APIs and in turn enables
   * higher click-through rates for the API consumer. IMPORTANT: Although optional, you should
   * consider this header required. Persisting the client ID across multiple requests for the same
   * end user and device combination enables 1) the API consumer to receive a consistent user
   * experience, and 2) higher click-through rates via better quality of results from the Bing
   * APIs. Each user that uses your application on the device must have a unique, Bing generated
   * client ID. If you do not include this header in the request, Bing generates an ID and returns
   * it in the X-MSEdge-ClientID response header. The only time that you should NOT include this
   * header in a request is the first time the user uses your app on that device. Use the client ID
   * for each Bing API request that your app makes for this user on the device. Persist the client
   * ID. To persist the ID in a browser app, use a persistent HTTP cookie to ensure the ID is used
   * across all sessions. Do not use a session cookie. For other apps such as mobile apps, use the
   * device's persistent storage to persist the ID. The next time the user uses your app on that
   * device, get the client ID that you persisted. Bing responses may or may not include this
   * header. If the response includes this header, capture the client ID and use it for all
   * subsequent Bing requests for the user on that device. If you include the X-MSEdge-ClientID,
   * you must not include cookies in the request.
   */
  clientId?: string;
  /**
   * The IPv4 or IPv6 address of the client device. The IP address is used to discover the user's
   * location. Bing uses the location information to determine safe search behavior. Although
   * optional, you are encouraged to always specify this header and the X-Search-Location header.
   * Do not obfuscate the address (for example, by changing the last octet to 0). Obfuscating the
   * address results in the location not being anywhere near the device's actual location, which
   * may result in Bing serving erroneous results.
   */
  clientIp?: string;
  /**
   * A semicolon-delimited list of key/value pairs that describe the client's geographical
   * location. Bing uses the location information to determine safe search behavior and to return
   * relevant local content. Specify the key/value pair as <key>:<value>. The following are the
   * keys that you use to specify the user's location. lat (required): The latitude of the client's
   * location, in degrees. The latitude must be greater than or equal to -90.0 and less than or
   * equal to +90.0. Negative values indicate southern latitudes and positive values indicate
   * northern latitudes. long (required): The longitude of the client's location, in degrees. The
   * longitude must be greater than or equal to -180.0 and less than or equal to +180.0. Negative
   * values indicate western longitudes and positive values indicate eastern longitudes. re
   * (required): The radius, in meters, which specifies the horizontal accuracy of the coordinates.
   * Pass the value returned by the device's location service. Typical values might be 22m for
   * GPS/Wi-Fi, 380m for cell tower triangulation, and 18,000m for reverse IP lookup. ts
   * (optional): The UTC UNIX timestamp of when the client was at the location. (The UNIX timestamp
   * is the number of seconds since January 1, 1970.) head (optional): The client's relative
   * heading or direction of travel. Specify the direction of travel as degrees from 0 through 360,
   * counting clockwise relative to true north. Specify this key only if the sp key is nonzero. sp
   * (optional): The horizontal velocity (speed), in meters per second, that the client device is
   * traveling. alt (optional): The altitude of the client device, in meters. are (optional): The
   * radius, in meters, that specifies the vertical accuracy of the coordinates. Specify this key
   * only if you specify the alt key. Although many of the keys are optional, the more information
   * that you provide, the more accurate the location results are. Although optional, you are
   * encouraged to always specify the user's geographical location. Providing the location is
   * especially important if the client's IP address does not accurately reflect the user's
   * physical location (for example, if the client uses VPN). For optimal results, you should
   * include this header and the X-MSEdge-ClientIP header, but at a minimum, you should include
   * this header.
   */
  location?: string;
  /**
   * A 2-character country code of the country where the results come from. This API supports only
   * the United States market. If you specify this query parameter, it must be set to us. If you
   * set this parameter, you must also specify the Accept-Language header. Bing uses the first
   * supported language it finds from the languages list, and combine that language with the
   * country code that you specify to determine the market to return results for. If the languages
   * list does not include a supported language, Bing finds the closest language and market that
   * supports the request, or it may use an aggregated or default market for the results instead of
   * a specified one. You should use this query parameter and the Accept-Language query parameter
   * only if you specify multiple languages; otherwise, you should use the mkt and setLang query
   * parameters. This parameter and the mkt query parameter are mutually exclusive—do not specify
   * both.
   */
  countryCode?: string;
  /**
   * The market where the results come from. You are strongly encouraged to always specify the
   * market, if known. Specifying the market helps Bing route the request and return an appropriate
   * and optimal response. This parameter and the cc query parameter are mutually exclusive—do not
   * specify both. Default value: 'en-us'.
   */
  market?: string;
  /**
   * A comma-delimited list of answers to include in the response. If you do not specify this
   * parameter, the response includes all search answers for which there's relevant data.
   */
  responseFilter?: AnswerType[];
  /**
   * The media type to use for the response. The following are the possible case-insensitive
   * values: JSON, JSONLD. The default is JSON. If you specify JSONLD, the response body includes
   * JSON-LD objects that contain the search results.
   */
  responseFormat?: ResponseFormat[];
  /**
   * A filter used to filter adult content. Off: Return webpages with adult text, images, or
   * videos. Moderate: Return webpages with adult text, but not adult images or videos. Strict: Do
   * not return webpages with adult text, images, or videos. The default is Moderate. If the
   * request comes from a market that Bing's adult policy requires that safeSearch is set to
   * Strict, Bing ignores the safeSearch value and uses Strict. If you use the site: query
   * operator, there is the chance that the response may contain adult content regardless of what
   * the safeSearch query parameter is set to. Use site: only if you are aware of the content on
   * the site and your scenario supports the possibility of adult content. Possible values include:
   * 'Off', 'Moderate', 'Strict'
   */
  safeSearch?: SafeSearch;
  /**
   * The language to use for user interface strings. Specify the language using the ISO 639-1
   * 2-letter language code. For example, the language code for English is EN. The default is EN
   * (English). Although optional, you should always specify the language. Typically, you set
   * setLang to the same language specified by mkt unless the user wants the user interface strings
   * displayed in a different language. This parameter and the Accept-Language header are mutually
   * exclusive; do not specify both. A user interface string is a string that's used as a label in
   * a user interface. There are few user interface strings in the JSON response objects. Also, any
   * links to Bing.com properties in the response objects apply the specified language.
   */
  setLang?: string;
}

/**
 * Defines values for EntityQueryScenario.
 * Possible values include: 'DominantEntity', 'DominantEntityWithDisambiguation', 'Disambiguation',
 * 'List', 'ListWithPivot'
 * @readonly
 * @enum {string}
 */
export type EntityQueryScenario = 'DominantEntity' | 'DominantEntityWithDisambiguation' | 'Disambiguation' | 'List' | 'ListWithPivot';

/**
 * Defines values for EntityScenario.
 * Possible values include: 'DominantEntity', 'DisambiguationItem', 'ListItem'
 * @readonly
 * @enum {string}
 */
export type EntityScenario = 'DominantEntity' | 'DisambiguationItem' | 'ListItem';

/**
 * Defines values for EntityType.
 * Possible values include: 'Generic', 'Person', 'Place', 'Media', 'Organization', 'LocalBusiness',
 * 'Restaurant', 'Hotel', 'TouristAttraction', 'Travel', 'City', 'Country', 'Attraction', 'House',
 * 'State', 'RadioStation', 'StreetAddress', 'Neighborhood', 'Locality', 'PostalCode', 'Region',
 * 'SubRegion', 'MinorRegion', 'Continent', 'PointOfInterest', 'Other', 'Movie', 'Book',
 * 'TelevisionShow', 'TelevisionSeason', 'VideoGame', 'MusicAlbum', 'MusicRecording', 'MusicGroup',
 * 'Composition', 'TheaterPlay', 'Event', 'Actor', 'Artist', 'Attorney', 'Speciality',
 * 'CollegeOrUniversity', 'School', 'Food', 'Drug', 'Animal', 'SportsTeam', 'Product', 'Car'
 * @readonly
 * @enum {string}
 */
export type EntityType = 'Generic' | 'Person' | 'Place' | 'Media' | 'Organization' | 'LocalBusiness' | 'Restaurant' | 'Hotel' | 'TouristAttraction' | 'Travel' | 'City' | 'Country' | 'Attraction' | 'House' | 'State' | 'RadioStation' | 'StreetAddress' | 'Neighborhood' | 'Locality' | 'PostalCode' | 'Region' | 'SubRegion' | 'MinorRegion' | 'Continent' | 'PointOfInterest' | 'Other' | 'Movie' | 'Book' | 'TelevisionShow' | 'TelevisionSeason' | 'VideoGame' | 'MusicAlbum' | 'MusicRecording' | 'MusicGroup' | 'Composition' | 'TheaterPlay' | 'Event' | 'Actor' | 'Artist' | 'Attorney' | 'Speciality' | 'CollegeOrUniversity' | 'School' | 'Food' | 'Drug' | 'Animal' | 'SportsTeam' | 'Product' | 'Car';

/**
 * Defines values for ErrorCode.
 * Possible values include: 'None', 'ServerError', 'InvalidRequest', 'RateLimitExceeded',
 * 'InvalidAuthorization', 'InsufficientAuthorization'
 * @readonly
 * @enum {string}
 */
export type ErrorCode = 'None' | 'ServerError' | 'InvalidRequest' | 'RateLimitExceeded' | 'InvalidAuthorization' | 'InsufficientAuthorization';

/**
 * Defines values for ErrorSubCode.
 * Possible values include: 'UnexpectedError', 'ResourceError', 'NotImplemented',
 * 'ParameterMissing', 'ParameterInvalidValue', 'HttpNotAllowed', 'Blocked',
 * 'AuthorizationMissing', 'AuthorizationRedundancy', 'AuthorizationDisabled',
 * 'AuthorizationExpired'
 * @readonly
 * @enum {string}
 */
export type ErrorSubCode = 'UnexpectedError' | 'ResourceError' | 'NotImplemented' | 'ParameterMissing' | 'ParameterInvalidValue' | 'HttpNotAllowed' | 'Blocked' | 'AuthorizationMissing' | 'AuthorizationRedundancy' | 'AuthorizationDisabled' | 'AuthorizationExpired';

/**
 * Defines values for AnswerType.
 * Possible values include: 'Entities', 'Places'
 * @readonly
 * @enum {string}
 */
export type AnswerType = 'Entities' | 'Places';

/**
 * Defines values for ResponseFormat.
 * Possible values include: 'Json', 'JsonLd'
 * @readonly
 * @enum {string}
 */
export type ResponseFormat = 'Json' | 'JsonLd';

/**
 * Defines values for SafeSearch.
 * Possible values include: 'Off', 'Moderate', 'Strict'
 * @readonly
 * @enum {string}
 */
export type SafeSearch = 'Off' | 'Moderate' | 'Strict';

/**
 * Contains response data for the search operation.
 */
export type EntitiesSearchResponse = SearchResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SearchResponse;
    };
};
