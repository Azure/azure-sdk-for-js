/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { ServiceClientOptions } from "@azure/ms-rest-js";
import * as msRest from "@azure/ms-rest-js";

/**
 * Contains the possible cases for ResponseBase.
 */
export type ResponseBaseUnion = ResponseBase | IdentifiableUnion;

/**
 * Response base
 */
export interface ResponseBase {
  /**
   * Polymorphic Discriminator
   */
  _type: "ResponseBase";
}

/**
 * Contains the possible cases for Identifiable.
 */
export type IdentifiableUnion = Identifiable | ResponseUnion;

/**
 * Defines the identity of a resource.
 */
export interface Identifiable {
  /**
   * Polymorphic Discriminator
   */
  _type: "Identifiable";
  /**
   * A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
}

/**
 * Contains the possible cases for Response.
 */
export type ResponseUnion = Response | AnswerUnion | ThingUnion | ErrorResponse;

/**
 * Defines a response. All schemas that could be returned at the root of a response should inherit
 * from this
 */
export interface Response {
  /**
   * Polymorphic Discriminator
   */
  _type: "Response";
  /**
   * A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The URL To Bing's search result for this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly webSearchUrl?: string;
}

/**
 * Contains the possible cases for Thing.
 */
export type ThingUnion = Thing | NewsTopic | CreativeWorkUnion | Organization;

/**
 * Defines a thing.
 */
export interface Thing {
  /**
   * Polymorphic Discriminator
   */
  _type: "Thing";
  /**
   * A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The URL To Bing's search result for this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The URL to get more information about the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly url?: string;
  /**
   * An image of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * An alias for the item
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly alternateName?: string;
  /**
   * An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly bingId?: string;
}

/**
 * Contains the possible cases for CreativeWork.
 */
export type CreativeWorkUnion = CreativeWork | ArticleUnion | MediaObjectUnion;

/**
 * The most generic kind of creative work, including books, movies, photographs, software programs,
 * etc.
 */
export interface CreativeWork {
  /**
   * Polymorphic Discriminator
   */
  _type: "CreativeWork";
  /**
   * A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The URL To Bing's search result for this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The URL to get more information about the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly url?: string;
  /**
   * An image of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * An alias for the item
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly alternateName?: string;
  /**
   * An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly bingId?: string;
  /**
   * The URL to a thumbnail of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly thumbnailUrl?: string;
  /**
   * The source of the creative work.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provider?: ThingUnion[];
  /**
   * The date on which the CreativeWork was published.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly datePublished?: string;
  /**
   * A video of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly video?: VideoObject;
}

/**
 * Contains the possible cases for Article.
 */
export type ArticleUnion = Article | NewsArticle;

/**
 * An interface representing Article.
 */
export interface Article {
  /**
   * Polymorphic Discriminator
   */
  _type: "Article";
  /**
   * A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The URL To Bing's search result for this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The URL to get more information about the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly url?: string;
  /**
   * An image of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * An alias for the item
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly alternateName?: string;
  /**
   * An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly bingId?: string;
  /**
   * The URL to a thumbnail of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly thumbnailUrl?: string;
  /**
   * The source of the creative work.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provider?: ThingUnion[];
  /**
   * The date on which the CreativeWork was published.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly datePublished?: string;
  /**
   * A video of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly video?: VideoObject;
  /**
   * The number of words in the text of the Article.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly wordCount?: number;
}

/**
 * Defines a news article.
 */
export interface NewsArticle {
  /**
   * Polymorphic Discriminator
   */
  _type: "NewsArticle";
  /**
   * A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The URL To Bing's search result for this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The URL to get more information about the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly url?: string;
  /**
   * An image of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * An alias for the item
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly alternateName?: string;
  /**
   * An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly bingId?: string;
  /**
   * The URL to a thumbnail of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly thumbnailUrl?: string;
  /**
   * The source of the creative work.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provider?: ThingUnion[];
  /**
   * The date on which the CreativeWork was published.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly datePublished?: string;
  /**
   * A video of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly video?: VideoObject;
  /**
   * The number of words in the text of the Article.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly wordCount?: number;
  /**
   * The news category that the article belongs to. For example, Sports. If the news category
   * cannot be determined, the article does not include this field.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly category?: string;
  /**
   * A Boolean value that indicates whether the news article is a headline. If true, the article is
   * a headline. The article includes this field only for news categories requests that do not
   * specify the category query parameter.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly headline?: boolean;
  /**
   * A list of related news articles.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly clusteredArticles?: NewsArticle[];
}

/**
 * Contains the possible cases for Answer.
 */
export type AnswerUnion = Answer | SearchResultsAnswerUnion | TrendingTopics;

/**
 * Defines an answer.
 */
export interface Answer {
  /**
   * Polymorphic Discriminator
   */
  _type: "Answer";
  /**
   * A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The URL To Bing's search result for this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly followUpQueries?: Query[];
}

/**
 * Contains the possible cases for SearchResultsAnswer.
 */
export type SearchResultsAnswerUnion = SearchResultsAnswer | News;

/**
 * Defines a search result answer.
 */
export interface SearchResultsAnswer {
  /**
   * Polymorphic Discriminator
   */
  _type: "SearchResultsAnswer";
  /**
   * A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The URL To Bing's search result for this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly followUpQueries?: Query[];
  /**
   * The estimated number of webpages that are relevant to the query. Use this number along with
   * the count and offset query parameters to page the results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly totalEstimatedMatches?: number;
}

/**
 * Defines a news answer.
 */
export interface News {
  /**
   * Polymorphic Discriminator
   */
  _type: "News";
  /**
   * A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The URL To Bing's search result for this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly followUpQueries?: Query[];
  /**
   * The estimated number of webpages that are relevant to the query. Use this number along with
   * the count and offset query parameters to page the results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly totalEstimatedMatches?: number;
  /**
   * An array of NewsArticle objects that contain information about news articles that are relevant
   * to the query. If there are no results to return for the request, the array is empty.
   */
  value: NewsArticle[];
  /**
   * Location of local news
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly location?: string;
}

/**
 * Contains the possible cases for MediaObject.
 */
export type MediaObjectUnion = MediaObject | ImageObject | VideoObject;

/**
 * Defines a media object.
 */
export interface MediaObject {
  /**
   * Polymorphic Discriminator
   */
  _type: "MediaObject";
  /**
   * A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The URL To Bing's search result for this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The URL to get more information about the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly url?: string;
  /**
   * An image of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * An alias for the item
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly alternateName?: string;
  /**
   * An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly bingId?: string;
  /**
   * The URL to a thumbnail of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly thumbnailUrl?: string;
  /**
   * The source of the creative work.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provider?: ThingUnion[];
  /**
   * The date on which the CreativeWork was published.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly datePublished?: string;
  /**
   * A video of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly video?: VideoObject;
  /**
   * Original URL to retrieve the source (file) for the media object (e.g the source URL for the
   * image).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly contentUrl?: string;
  /**
   * The width of the source media object, in pixels.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly width?: number;
  /**
   * The height of the source media object, in pixels.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly height?: number;
}

/**
 * Defines an image
 */
export interface ImageObject {
  /**
   * Polymorphic Discriminator
   */
  _type: "ImageObject";
  /**
   * A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The URL To Bing's search result for this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The URL to get more information about the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly url?: string;
  /**
   * An image of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * An alias for the item
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly alternateName?: string;
  /**
   * An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly bingId?: string;
  /**
   * The URL to a thumbnail of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly thumbnailUrl?: string;
  /**
   * The source of the creative work.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provider?: ThingUnion[];
  /**
   * The date on which the CreativeWork was published.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly datePublished?: string;
  /**
   * A video of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly video?: VideoObject;
  /**
   * Original URL to retrieve the source (file) for the media object (e.g the source URL for the
   * image).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly contentUrl?: string;
  /**
   * The width of the source media object, in pixels.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly width?: number;
  /**
   * The height of the source media object, in pixels.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly height?: number;
  /**
   * The URL to a thumbnail of the image
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly thumbnail?: ImageObject;
}

/**
 * Defines a search query.
 */
export interface Query {
  /**
   * The query string. Use this string as the query term in a new search request.
   */
  text: string;
  /**
   * The display version of the query term. This version of the query term may contain special
   * characters that highlight the search term found in the query string. The string contains the
   * highlighting characters only if the query enabled hit highlighting
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly displayText?: string;
  /**
   * The URL that takes the user to the Bing search results page for the query.Only related search
   * results include this field.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * The URL that you use to get the results of the related search. Before using the URL, you must
   * append query parameters as appropriate and include the Ocp-Apim-Subscription-Key header. Use
   * this URL if you're displaying the results in your own user interface. Otherwise, use the
   * webSearchUrl URL.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly searchLink?: string;
  /**
   * The URL to a thumbnail of a related image.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly thumbnail?: ImageObject;
}

/**
 * An interface representing NewsTopic.
 */
export interface NewsTopic {
  /**
   * Polymorphic Discriminator
   */
  _type: "News/Topic";
  /**
   * A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The URL To Bing's search result for this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The URL to get more information about the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly url?: string;
  /**
   * An image of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * An alias for the item
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly alternateName?: string;
  /**
   * An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly bingId?: string;
  /**
   * A Boolean value that indicates whether the topic is considered breaking news. If the topic is
   * considered breaking news, the value is true.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isBreakingNews?: boolean;
  /**
   * A search query term that returns this trending topic.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly query?: Query;
  /**
   * The URL to the Bing News search results for the search query term
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly newsSearchUrl?: string;
}

/**
 * An interface representing TrendingTopics.
 */
export interface TrendingTopics {
  /**
   * Polymorphic Discriminator
   */
  _type: "TrendingTopics";
  /**
   * A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The URL To Bing's search result for this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly followUpQueries?: Query[];
  /**
   * A list of trending news topics on Bing
   */
  value: NewsTopic[];
}

/**
 * Defines a video object that is relevant to the query.
 */
export interface VideoObject {
  /**
   * Polymorphic Discriminator
   */
  _type: "VideoObject";
  /**
   * A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The URL To Bing's search result for this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The URL to get more information about the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly url?: string;
  /**
   * An image of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * An alias for the item
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly alternateName?: string;
  /**
   * An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly bingId?: string;
  /**
   * The URL to a thumbnail of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly thumbnailUrl?: string;
  /**
   * The source of the creative work.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provider?: ThingUnion[];
  /**
   * The date on which the CreativeWork was published.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly datePublished?: string;
  /**
   * A video of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly video?: VideoObject;
  /**
   * Original URL to retrieve the source (file) for the media object (e.g the source URL for the
   * image).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly contentUrl?: string;
  /**
   * The width of the source media object, in pixels.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly width?: number;
  /**
   * The height of the source media object, in pixels.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly height?: number;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly motionThumbnailUrl?: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly motionThumbnailId?: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly embedHtml?: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly allowHttpsEmbed?: boolean;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly viewCount?: number;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly thumbnail?: ImageObject;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly videoId?: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly allowMobileEmbed?: boolean;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isSuperfresh?: boolean;
}

/**
 * Defines an organization.
 */
export interface Organization {
  /**
   * Polymorphic Discriminator
   */
  _type: "Organization";
  /**
   * A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The URL To Bing's search result for this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The URL to get more information about the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly url?: string;
  /**
   * An image of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * An alias for the item
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly alternateName?: string;
  /**
   * An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly bingId?: string;
}

/**
 * Defines the error that occurred.
 */
export interface ErrorModel {
  /**
   * The error code that identifies the category of error. Possible values include: 'None',
   * 'ServerError', 'InvalidRequest', 'RateLimitExceeded', 'InvalidAuthorization',
   * 'InsufficientAuthorization'. Default value: 'None'.
   */
  code: ErrorCode;
  /**
   * The error code that further helps to identify the error. Possible values include:
   * 'UnexpectedError', 'ResourceError', 'NotImplemented', 'ParameterMissing',
   * 'ParameterInvalidValue', 'HttpNotAllowed', 'Blocked', 'AuthorizationMissing',
   * 'AuthorizationRedundancy', 'AuthorizationDisabled', 'AuthorizationExpired'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly subCode?: ErrorSubCode;
  /**
   * A description of the error.
   */
  message: string;
  /**
   * A description that provides additional information about the error.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly moreDetails?: string;
  /**
   * The parameter in the request that caused the error.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly parameter?: string;
  /**
   * The parameter's value in the request that was not valid.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly value?: string;
}

/**
 * The top-level response that represents a failed request.
 */
export interface ErrorResponse {
  /**
   * Polymorphic Discriminator
   */
  _type: "ErrorResponse";
  /**
   * A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The URL To Bing's search result for this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * A list of errors that describe the reasons why the request failed.
   */
  errors: ErrorModel[];
}

/**
 * An interface representing NewsSearchClientOptions.
 */
export interface NewsSearchClientOptions extends ServiceClientOptions {
  /**
   * Supported Cognitive Services endpoints (protocol and hostname, for example:
   * "https://westus.api.cognitive.microsoft.com", "https://api.cognitive.microsoft.com"). Default
   * value: 'https://api.cognitive.microsoft.com'.
   */
  endpoint?: string;
}

/**
 * Optional Parameters.
 */
export interface NewsSearchOptionalParams extends msRest.RequestOptionsBase {
  /**
   * A comma-delimited list of one or more languages to use for user interface strings. The list is
   * in decreasing order of preference. For additional information, including expected format, see
   * [RFC2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html). This header and the
   * [setLang](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#setlang)
   * query parameter are mutually exclusive; do not specify both. If you set this header, you must
   * also specify the
   * [cc](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#cc)
   * query parameter. To determine the market to return results for, Bing uses the first supported
   * language it finds from the list and combines it with the cc parameter value. If the list does
   * not include a supported language, Bing finds the closest language and market that supports the
   * request or it uses an aggregated or default market for the results. To determine the market
   * that Bing used, see the BingAPIs-Market header. Use this header and the cc query parameter
   * only if you specify multiple languages. Otherwise, use the
   * [mkt](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#mkt)
   * and
   * [setLang](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#setlang)
   * query parameters. A user interface string is a string that's used as a label in a user
   * interface. There are few user interface strings in the JSON response objects. Any links to
   * Bing.com properties in the response objects apply the specified language.
   */
  acceptLanguage?: string;
  /**
   * The user agent originating the request. Bing uses the user agent to provide mobile users with
   * an optimized experience. Although optional, you are encouraged to always specify this header.
   * The user-agent should be the same string that any commonly used browser sends. For information
   * about user agents, see [RFC 2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html). The
   * following are examples of user-agent strings. Windows Phone: Mozilla/5.0 (compatible; MSIE
   * 10.0; Windows Phone 8.0; Trident/6.0; IEMobile/10.0; ARM; Touch; NOKIA; Lumia 822). Android:
   * Mozilla / 5.0 (Linux; U; Android 2.3.5; en - us; SCH - I500 Build / GINGERBREAD) AppleWebKit /
   * 533.1 (KHTML; like Gecko) Version / 4.0 Mobile Safari / 533.1. iPhone: Mozilla / 5.0 (iPhone;
   * CPU iPhone OS 6_1 like Mac OS X) AppleWebKit / 536.26 (KHTML; like Gecko) Mobile / 10B142
   * iPhone4; 1 BingWeb / 3.03.1428.20120423. PC: Mozilla / 5.0 (Windows NT 6.3; WOW64; Trident /
   * 7.0; Touch; rv:11.0) like Gecko. iPad: Mozilla / 5.0 (iPad; CPU OS 7_0 like Mac OS X)
   * AppleWebKit / 537.51.1 (KHTML, like Gecko) Version / 7.0 Mobile / 11A465 Safari / 9537.53
   */
  userAgent?: string;
  /**
   * Bing uses this header to provide users with consistent behavior across Bing API calls. Bing
   * often flights new features and improvements, and it uses the client ID as a key for assigning
   * traffic on different flights. If you do not use the same client ID for a user across multiple
   * requests, then Bing may assign the user to multiple conflicting flights. Being assigned to
   * multiple conflicting flights can lead to an inconsistent user experience. For example, if the
   * second request has a different flight assignment than the first, the experience may be
   * unexpected. Also, Bing can use the client ID to tailor web results to that client ID’s search
   * history, providing a richer experience for the user. Bing also uses this header to help
   * improve result rankings by analyzing the activity generated by a client ID. The relevance
   * improvements help with better quality of results delivered by Bing APIs and in turn enables
   * higher click-through rates for the API consumer. IMPORTANT: Although optional, you should
   * consider this header required. Persisting the client ID across multiple requests for the same
   * end user and device combination enables 1) the API consumer to receive a consistent user
   * experience, and 2) higher click-through rates via better quality of results from the Bing
   * APIs. Each user that uses your application on the device must have a unique, Bing generated
   * client ID. If you do not include this header in the request, Bing generates an ID and returns
   * it in the X-MSEdge-ClientID response header. The only time that you should NOT include this
   * header in a request is the first time the user uses your app on that device. Use the client ID
   * for each Bing API request that your app makes for this user on the device. Persist the client
   * ID. To persist the ID in a browser app, use a persistent HTTP cookie to ensure the ID is used
   * across all sessions. Do not use a session cookie. For other apps such as mobile apps, use the
   * device's persistent storage to persist the ID. The next time the user uses your app on that
   * device, get the client ID that you persisted. Bing responses may or may not include this
   * header. If the response includes this header, capture the client ID and use it for all
   * subsequent Bing requests for the user on that device. If you include the X-MSEdge-ClientID,
   * you must not include cookies in the request.
   */
  clientId?: string;
  /**
   * The IPv4 or IPv6 address of the client device. The IP address is used to discover the user's
   * location. Bing uses the location information to determine safe search behavior. Although
   * optional, you are encouraged to always specify this header and the X-Search-Location header.
   * Do not obfuscate the address (for example, by changing the last octet to 0). Obfuscating the
   * address results in the location not being anywhere near the device's actual location, which
   * may result in Bing serving erroneous results.
   */
  clientIp?: string;
  /**
   * A semicolon-delimited list of key/value pairs that describe the client's geographical
   * location. Bing uses the location information to determine safe search behavior and to return
   * relevant local content. Specify the key/value pair as <key>:<value>. The following are the
   * keys that you use to specify the user's location. lat (required): The latitude of the client's
   * location, in degrees. The latitude must be greater than or equal to -90.0 and less than or
   * equal to +90.0. Negative values indicate southern latitudes and positive values indicate
   * northern latitudes. long (required): The longitude of the client's location, in degrees. The
   * longitude must be greater than or equal to -180.0 and less than or equal to +180.0. Negative
   * values indicate western longitudes and positive values indicate eastern longitudes. re
   * (required): The radius, in meters, which specifies the horizontal accuracy of the coordinates.
   * Pass the value returned by the device's location service. Typical values might be 22m for
   * GPS/Wi-Fi, 380m for cell tower triangulation, and 18,000m for reverse IP lookup. ts
   * (optional): The UTC UNIX timestamp of when the client was at the location. (The UNIX timestamp
   * is the number of seconds since January 1, 1970.) head (optional): The client's relative
   * heading or direction of travel. Specify the direction of travel as degrees from 0 through 360,
   * counting clockwise relative to true north. Specify this key only if the sp key is nonzero. sp
   * (optional): The horizontal velocity (speed), in meters per second, that the client device is
   * traveling. alt (optional): The altitude of the client device, in meters. are (optional): The
   * radius, in meters, that specifies the vertical accuracy of the coordinates. Specify this key
   * only if you specify the alt key. Although many of the keys are optional, the more information
   * that you provide, the more accurate the location results are. Although optional, you are
   * encouraged to always specify the user's geographical location. Providing the location is
   * especially important if the client's IP address does not accurately reflect the user's
   * physical location (for example, if the client uses VPN). For optimal results, you should
   * include this header and the X-MSEdge-ClientIP header, but at a minimum, you should include
   * this header.
   */
  location?: string;
  /**
   * A 2-character country code of the country where the results come from. This API supports only
   * the United States market. If you specify this query parameter, it must be set to us. If you
   * set this parameter, you must also specify the Accept-Language header. Bing uses the first
   * supported language it finds from the languages list, and combine that language with the
   * country code that you specify to determine the market to return results for. If the languages
   * list does not include a supported language, Bing finds the closest language and market that
   * supports the request, or it may use an aggregated or default market for the results instead of
   * a specified one. You should use this query parameter and the Accept-Language query parameter
   * only if you specify multiple languages; otherwise, you should use the mkt and setLang query
   * parameters. This parameter and the mkt query parameter are mutually exclusive—do not specify
   * both.
   */
  countryCode?: string;
  /**
   * The number of news articles to return in the response. The actual number delivered may be less
   * than requested. The default is 10 and the maximum value is 100. The actual number delivered
   * may be less than requested.You may use this parameter along with the offset parameter to page
   * results. For example, if your user interface displays 20 articles per page, set count to 20
   * and offset to 0 to get the first page of results. For each subsequent page, increment offset
   * by 20 (for example, 0, 20, 40). It is possible for multiple pages to include some overlap in
   * results.
   */
  count?: number;
  /**
   * Filter news by the date and time that Bing discovered the news. The following are the possible
   * filter values. Day: Return news discovered within the last 24 hours. Week: Return news
   * discovered within the last 7 days. Month: Return news discovered within the last 30 days. Use
   * this parameter only with the News Search API. Do not specify this parameter when calling the
   * News Category API or the Trending Topics API. Possible values include: 'Day', 'Week', 'Month'
   */
  freshness?: Freshness;
  /**
   * The market where the results come from. Typically, mkt is the country where the user is making
   * the request from. However, it could be a different country if the user is not located in a
   * country where Bing delivers results. The market must be in the form <language code>-<country
   * code>. For example, en-US. The string is case insensitive. For a list of possible market
   * values, see [Market
   * Codes](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#market-codes).
   * NOTE: If known, you are encouraged to always specify the market. Specifying the market helps
   * Bing route the request and return an appropriate and optimal response. If you specify a market
   * that is not listed in [Market
   * Codes](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#market-codes),
   * Bing uses a best fit market code based on an internal mapping that is subject to change. This
   * parameter and the
   * [cc](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#cc)
   * query parameter are mutually exclusive—do not specify both.
   */
  market?: string;
  /**
   * The zero-based offset that indicates the number of news to skip before returning news. The
   * default is 0. The offset should be less than
   * ([totalEstimatedMatches](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#news-totalmatches)
   * - count). Use this parameter along with the count parameter to page results. For example, if
   * your user interface displays 20 news per page, set count to 20 and offset to 0 to get the
   * first page of results. For each subsequent page, increment offset by 20 (for example, 0, 20,
   * 40). It is possible for multiple pages to include some overlap in results.
   */
  offset?: number;
  /**
   * A Boolean value that determines whether the image's contentUrl contains a URL that points to a
   * thumbnail of the original article's image or the image itself. If the article includes an
   * image, and this parameter is set to true, the image's contentUrl property contains a URL that
   * you may use to download the original image from the publisher's website. Otherwise, if this
   * parameter is false, the image's contentUrl and thumbnailUrl URLs both point to the same
   * thumbnail image. Use this parameter only with the News Search API. Do not specify this
   * parameter when calling the Trending Topics API or News Category API.
   */
  originalImage?: boolean;
  /**
   * Filter news for adult content. The following are the possible filter values. Off: Return news
   * articles with adult text, images, or videos. Moderate: Return news articles with adult text
   * but not adult images or videos. Strict: Do not return news articles with adult text, images,
   * or videos. If the request comes from a market that Bing's adult policy requires that
   * safeSearch is set to Strict, Bing ignores the safeSearch value and uses Strict. If you use the
   * site: query operator, there is the chance that the response may contain adult content
   * regardless of what the safeSearch query parameter is set to. Use site: only if you are aware
   * of the content on the site and your scenario supports the possibility of adult content.
   * Possible values include: 'Off', 'Moderate', 'Strict'
   */
  safeSearch?: SafeSearch;
  /**
   * The language to use for user interface strings. Specify the language using the ISO 639-1
   * 2-letter language code. For example, the language code for English is EN. The default is EN
   * (English). Although optional, you should always specify the language. Typically, you set
   * setLang to the same language specified by mkt unless the user wants the user interface strings
   * displayed in a different language. This parameter and the
   * [Accept-Language](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#acceptlanguage)
   * header are mutually exclusive; do not specify both. A user interface string is a string that's
   * used as a label in a user interface. There are few user interface strings in the JSON response
   * objects. Also, any links to Bing.com properties in the response objects apply the specified
   * language.
   */
  setLang?: string;
  /**
   * The order to return the news in. The following are the possible case-insensitive values. Date:
   * If the request is through the News Search API, the response returns news articles sorted by
   * date from the most recent to the oldest. If the request is through the News Trending Topics
   * API, the response returns trending topics sorted by date from the most recent to the oldest.
   */
  sortBy?: string;
  /**
   * A Boolean value that determines whether display strings contain decoration markers such as hit
   * highlighting characters. If true, the strings may include markers. The default is false. To
   * specify whether to use Unicode characters or HTML tags as the markers, see the
   * [textFormat](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#textformat)
   * query parameter. For information about hit highlighting, see [Hit
   * Highlighting](https://docs.microsoft.com/azure/cognitive-services/bing-news-search/hit-highlighting).
   */
  textDecorations?: boolean;
  /**
   * The type of markers to use for text decorations (see the textDecorations query parameter).
   * Possible values are Raw—Use Unicode characters to mark content that needs special formatting.
   * The Unicode characters are in the range E000 through E019. For example, Bing uses E000 and
   * E001 to mark the beginning and end of query terms for hit highlighting. HTML—Use HTML tags to
   * mark content that needs special formatting. For example, use <b> tags to highlight query terms
   * in display strings. The default is Raw. For display strings that contain escapable HTML
   * characters such as <, >, and &, if textFormat is set to HTML, Bing escapes the characters as
   * appropriate (for example, < is escaped to &lt;). Possible values include: 'Raw', 'Html'
   */
  textFormat?: TextFormat;
}

/**
 * Optional Parameters.
 */
export interface NewsCategoryOptionalParams extends msRest.RequestOptionsBase {
  /**
   * A comma-delimited list of one or more languages to use for user interface strings. The list is
   * in decreasing order of preference. For additional information, including expected format, see
   * [RFC2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html). This header and the
   * [setLang](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#setlang)
   * query parameter are mutually exclusive; do not specify both. If you set this header, you must
   * also specify the
   * [cc](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#cc)
   * query parameter. To determine the market to return results for, Bing uses the first supported
   * language it finds from the list and combines it with the cc parameter value. If the list does
   * not include a supported language, Bing finds the closest language and market that supports the
   * request or it uses an aggregated or default market for the results. To determine the market
   * that Bing used, see the BingAPIs-Market header. Use this header and the cc query parameter
   * only if you specify multiple languages. Otherwise, use the
   * [mkt](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#mkt)
   * and
   * [setLang](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#setlang)
   * query parameters. A user interface string is a string that's used as a label in a user
   * interface. There are few user interface strings in the JSON response objects. Any links to
   * Bing.com properties in the response objects apply the specified language.
   */
  acceptLanguage?: string;
  /**
   * The user agent originating the request. Bing uses the user agent to provide mobile users with
   * an optimized experience. Although optional, you are encouraged to always specify this header.
   * The user-agent should be the same string that any commonly used browser sends. For information
   * about user agents, see [RFC 2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html). The
   * following are examples of user-agent strings. Windows Phone: Mozilla/5.0 (compatible; MSIE
   * 10.0; Windows Phone 8.0; Trident/6.0; IEMobile/10.0; ARM; Touch; NOKIA; Lumia 822). Android:
   * Mozilla / 5.0 (Linux; U; Android 2.3.5; en - us; SCH - I500 Build / GINGERBREAD) AppleWebKit /
   * 533.1 (KHTML; like Gecko) Version / 4.0 Mobile Safari / 533.1. iPhone: Mozilla / 5.0 (iPhone;
   * CPU iPhone OS 6_1 like Mac OS X) AppleWebKit / 536.26 (KHTML; like Gecko) Mobile / 10B142
   * iPhone4; 1 BingWeb / 3.03.1428.20120423. PC: Mozilla / 5.0 (Windows NT 6.3; WOW64; Trident /
   * 7.0; Touch; rv:11.0) like Gecko. iPad: Mozilla / 5.0 (iPad; CPU OS 7_0 like Mac OS X)
   * AppleWebKit / 537.51.1 (KHTML, like Gecko) Version / 7.0 Mobile / 11A465 Safari / 9537.53
   */
  userAgent?: string;
  /**
   * Bing uses this header to provide users with consistent behavior across Bing API calls. Bing
   * often flights new features and improvements, and it uses the client ID as a key for assigning
   * traffic on different flights. If you do not use the same client ID for a user across multiple
   * requests, then Bing may assign the user to multiple conflicting flights. Being assigned to
   * multiple conflicting flights can lead to an inconsistent user experience. For example, if the
   * second request has a different flight assignment than the first, the experience may be
   * unexpected. Also, Bing can use the client ID to tailor web results to that client ID’s search
   * history, providing a richer experience for the user. Bing also uses this header to help
   * improve result rankings by analyzing the activity generated by a client ID. The relevance
   * improvements help with better quality of results delivered by Bing APIs and in turn enables
   * higher click-through rates for the API consumer. IMPORTANT: Although optional, you should
   * consider this header required. Persisting the client ID across multiple requests for the same
   * end user and device combination enables 1) the API consumer to receive a consistent user
   * experience, and 2) higher click-through rates via better quality of results from the Bing
   * APIs. Each user that uses your application on the device must have a unique, Bing generated
   * client ID. If you do not include this header in the request, Bing generates an ID and returns
   * it in the X-MSEdge-ClientID response header. The only time that you should NOT include this
   * header in a request is the first time the user uses your app on that device. Use the client ID
   * for each Bing API request that your app makes for this user on the device. Persist the client
   * ID. To persist the ID in a browser app, use a persistent HTTP cookie to ensure the ID is used
   * across all sessions. Do not use a session cookie. For other apps such as mobile apps, use the
   * device's persistent storage to persist the ID. The next time the user uses your app on that
   * device, get the client ID that you persisted. Bing responses may or may not include this
   * header. If the response includes this header, capture the client ID and use it for all
   * subsequent Bing requests for the user on that device. If you include the X-MSEdge-ClientID,
   * you must not include cookies in the request.
   */
  clientId?: string;
  /**
   * The IPv4 or IPv6 address of the client device. The IP address is used to discover the user's
   * location. Bing uses the location information to determine safe search behavior. Although
   * optional, you are encouraged to always specify this header and the X-Search-Location header.
   * Do not obfuscate the address (for example, by changing the last octet to 0). Obfuscating the
   * address results in the location not being anywhere near the device's actual location, which
   * may result in Bing serving erroneous results.
   */
  clientIp?: string;
  /**
   * A semicolon-delimited list of key/value pairs that describe the client's geographical
   * location. Bing uses the location information to determine safe search behavior and to return
   * relevant local content. Specify the key/value pair as <key>:<value>. The following are the
   * keys that you use to specify the user's location. lat (required): The latitude of the client's
   * location, in degrees. The latitude must be greater than or equal to -90.0 and less than or
   * equal to +90.0. Negative values indicate southern latitudes and positive values indicate
   * northern latitudes. long (required): The longitude of the client's location, in degrees. The
   * longitude must be greater than or equal to -180.0 and less than or equal to +180.0. Negative
   * values indicate western longitudes and positive values indicate eastern longitudes. re
   * (required): The radius, in meters, which specifies the horizontal accuracy of the coordinates.
   * Pass the value returned by the device's location service. Typical values might be 22m for
   * GPS/Wi-Fi, 380m for cell tower triangulation, and 18,000m for reverse IP lookup. ts
   * (optional): The UTC UNIX timestamp of when the client was at the location. (The UNIX timestamp
   * is the number of seconds since January 1, 1970.) head (optional): The client's relative
   * heading or direction of travel. Specify the direction of travel as degrees from 0 through 360,
   * counting clockwise relative to true north. Specify this key only if the sp key is nonzero. sp
   * (optional): The horizontal velocity (speed), in meters per second, that the client device is
   * traveling. alt (optional): The altitude of the client device, in meters. are (optional): The
   * radius, in meters, that specifies the vertical accuracy of the coordinates. Specify this key
   * only if you specify the alt key. Although many of the keys are optional, the more information
   * that you provide, the more accurate the location results are. Although optional, you are
   * encouraged to always specify the user's geographical location. Providing the location is
   * especially important if the client's IP address does not accurately reflect the user's
   * physical location (for example, if the client uses VPN). For optimal results, you should
   * include this header and the X-MSEdge-ClientIP header, but at a minimum, you should include
   * this header.
   */
  location?: string;
  /**
   * A 2-character country code of the country where the results come from. This API supports only
   * the United States market. If you specify this query parameter, it must be set to us. If you
   * set this parameter, you must also specify the Accept-Language header. Bing uses the first
   * supported language it finds from the languages list, and combine that language with the
   * country code that you specify to determine the market to return results for. If the languages
   * list does not include a supported language, Bing finds the closest language and market that
   * supports the request, or it may use an aggregated or default market for the results instead of
   * a specified one. You should use this query parameter and the Accept-Language query parameter
   * only if you specify multiple languages; otherwise, you should use the mkt and setLang query
   * parameters. This parameter and the mkt query parameter are mutually exclusive—do not specify
   * both.
   */
  countryCode?: string;
  /**
   * The category of articles to return. For example, Sports articles or Entertainment articles.
   * For a list of possible categories, see [News Categories by
   * Market](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#categories-by-market).
   * Use this parameter only with News Category API. If you do not specify this parameter, the
   * response includes both: Headline articles typically published in the last 24 hours from any
   * category and articles from each parent category (up to four articles). If the article is a
   * headline, the article's headline field is set to true. By default, the response includes up to
   * 12 headline articles. To specify the number of headline articles to return, set the
   * [headlineCount](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#headlineCount)
   * query parameter.
   */
  category?: string;
  /**
   * The number of news articles to return in the response. The actual number delivered may be less
   * than requested. The default is 10 and the maximum value is 100. The actual number delivered
   * may be less than requested.You may use this parameter along with the offset parameter to page
   * results. For example, if your user interface displays 20 articles per page, set count to 20
   * and offset to 0 to get the first page of results. For each subsequent page, increment offset
   * by 20 (for example, 0, 20, 40). It is possible for multiple pages to include some overlap in
   * results. If you do not specify the
   * [category](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#category)
   * parameter, Bing ignores this parameter.
   */
  count?: number;
  /**
   * The number of headline articles to return in the response. The default is 12. Specify this
   * parameter only if you do not specify the
   * [category](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#category)
   * parameter.
   */
  headlineCount?: number;
  /**
   * The market where the results come from. Typically, mkt is the country where the user is making
   * the request from. However, it could be a different country if the user is not located in a
   * country where Bing delivers results. The market must be in the form <language code>-<country
   * code>. For example, en-US. The string is case insensitive. For a list of possible market
   * values, see [Market
   * Codes](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#market-codes).
   * NOTE: If known, you are encouraged to always specify the market. Specifying the market helps
   * Bing route the request and return an appropriate and optimal response. If you specify a market
   * that is not listed in [Market
   * Codes](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#market-codes),
   * Bing uses a best fit market code based on an internal mapping that is subject to change. This
   * parameter and the
   * [cc](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#cc)
   * query parameter are mutually exclusive—do not specify both.
   */
  market?: string;
  /**
   * The zero-based offset that indicates the number of news to skip before returning news. The
   * default is 0. The offset should be less than
   * ([totalEstimatedMatches](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#news-totalmatches)
   * - count). Use this parameter along with the count parameter to page results. For example, if
   * your user interface displays 20 news per page, set count to 20 and offset to 0 to get the
   * first page of results. For each subsequent page, increment offset by 20 (for example, 0, 20,
   * 40). It is possible for multiple pages to include some overlap in results. If you do not
   * specify the
   * [category](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#category)
   * parameter, Bing ignores this parameter.
   */
  offset?: number;
  /**
   * A Boolean value that determines whether the image's contentUrl contains a URL that points to a
   * thumbnail of the original article's image or the image itself. If the article includes an
   * image, and this parameter is set to true, the image's contentUrl property contains a URL that
   * you may use to download the original image from the publisher's website. Otherwise, if this
   * parameter is false, the image's contentUrl and thumbnailUrl URLs both point to the same
   * thumbnail image. Use this parameter only with the News Search API or News Category API.
   * Trending Topics API ignore this parameter.
   */
  originalImage?: boolean;
  /**
   * Filter news for adult content. The following are the possible filter values. Off: Return news
   * articles with adult text, images, or videos. Moderate: Return news articles with adult text
   * but not adult images or videos. Strict: Do not return news articles with adult text, images,
   * or videos. If the request comes from a market that Bing's adult policy requires that
   * safeSearch is set to Strict, Bing ignores the safeSearch value and uses Strict. If you use the
   * site: query operator, there is the chance that the response may contain adult content
   * regardless of what the safeSearch query parameter is set to. Use site: only if you are aware
   * of the content on the site and your scenario supports the possibility of adult content.
   * Possible values include: 'Off', 'Moderate', 'Strict'
   */
  safeSearch?: SafeSearch;
  /**
   * The language to use for user interface strings. Specify the language using the ISO 639-1
   * 2-letter language code. For example, the language code for English is EN. The default is EN
   * (English). Although optional, you should always specify the language. Typically, you set
   * setLang to the same language specified by mkt unless the user wants the user interface strings
   * displayed in a different language. This parameter and the
   * [Accept-Language](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#acceptlanguage)
   * header are mutually exclusive; do not specify both. A user interface string is a string that's
   * used as a label in a user interface. There are few user interface strings in the JSON response
   * objects. Also, any links to Bing.com properties in the response objects apply the specified
   * language.
   */
  setLang?: string;
  /**
   * A Boolean value that determines whether display strings contain decoration markers such as hit
   * highlighting characters. If true, the strings may include markers. The default is false. To
   * specify whether to use Unicode characters or HTML tags as the markers, see the
   * [textFormat](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#textformat)
   * query parameter. For information about hit highlighting, see [Hit
   * Highlighting](https://docs.microsoft.com/azure/cognitive-services/bing-news-search/hit-highlighting).
   */
  textDecorations?: boolean;
  /**
   * The type of markers to use for text decorations (see the textDecorations query parameter).
   * Possible values are Raw—Use Unicode characters to mark content that needs special formatting.
   * The Unicode characters are in the range E000 through E019. For example, Bing uses E000 and
   * E001 to mark the beginning and end of query terms for hit highlighting. HTML—Use HTML tags to
   * mark content that needs special formatting. For example, use <b> tags to highlight query terms
   * in display strings. The default is Raw. For display strings that contain escapable HTML
   * characters such as <, >, and &, if textFormat is set to HTML, Bing escapes the characters as
   * appropriate (for example, < is escaped to &lt;). Possible values include: 'Raw', 'Html'
   */
  textFormat?: TextFormat;
}

/**
 * Optional Parameters.
 */
export interface NewsTrendingOptionalParams extends msRest.RequestOptionsBase {
  /**
   * A comma-delimited list of one or more languages to use for user interface strings. The list is
   * in decreasing order of preference. For additional information, including expected format, see
   * [RFC2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html). This header and the
   * [setLang](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#setlang)
   * query parameter are mutually exclusive; do not specify both. If you set this header, you must
   * also specify the
   * [cc](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#cc)
   * query parameter. To determine the market to return results for, Bing uses the first supported
   * language it finds from the list and combines it with the cc parameter value. If the list does
   * not include a supported language, Bing finds the closest language and market that supports the
   * request or it uses an aggregated or default market for the results. To determine the market
   * that Bing used, see the BingAPIs-Market header. Use this header and the cc query parameter
   * only if you specify multiple languages. Otherwise, use the
   * [mkt](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#mkt)
   * and
   * [setLang](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#setlang)
   * query parameters. A user interface string is a string that's used as a label in a user
   * interface. There are few user interface strings in the JSON response objects. Any links to
   * Bing.com properties in the response objects apply the specified language.
   */
  acceptLanguage?: string;
  /**
   * The user agent originating the request. Bing uses the user agent to provide mobile users with
   * an optimized experience. Although optional, you are encouraged to always specify this header.
   * The user-agent should be the same string that any commonly used browser sends. For information
   * about user agents, see [RFC 2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html). The
   * following are examples of user-agent strings. Windows Phone: Mozilla/5.0 (compatible; MSIE
   * 10.0; Windows Phone 8.0; Trident/6.0; IEMobile/10.0; ARM; Touch; NOKIA; Lumia 822). Android:
   * Mozilla / 5.0 (Linux; U; Android 2.3.5; en - us; SCH - I500 Build / GINGERBREAD) AppleWebKit /
   * 533.1 (KHTML; like Gecko) Version / 4.0 Mobile Safari / 533.1. iPhone: Mozilla / 5.0 (iPhone;
   * CPU iPhone OS 6_1 like Mac OS X) AppleWebKit / 536.26 (KHTML; like Gecko) Mobile / 10B142
   * iPhone4; 1 BingWeb / 3.03.1428.20120423. PC: Mozilla / 5.0 (Windows NT 6.3; WOW64; Trident /
   * 7.0; Touch; rv:11.0) like Gecko. iPad: Mozilla / 5.0 (iPad; CPU OS 7_0 like Mac OS X)
   * AppleWebKit / 537.51.1 (KHTML, like Gecko) Version / 7.0 Mobile / 11A465 Safari / 9537.53
   */
  userAgent?: string;
  /**
   * Bing uses this header to provide users with consistent behavior across Bing API calls. Bing
   * often flights new features and improvements, and it uses the client ID as a key for assigning
   * traffic on different flights. If you do not use the same client ID for a user across multiple
   * requests, then Bing may assign the user to multiple conflicting flights. Being assigned to
   * multiple conflicting flights can lead to an inconsistent user experience. For example, if the
   * second request has a different flight assignment than the first, the experience may be
   * unexpected. Also, Bing can use the client ID to tailor web results to that client ID’s search
   * history, providing a richer experience for the user. Bing also uses this header to help
   * improve result rankings by analyzing the activity generated by a client ID. The relevance
   * improvements help with better quality of results delivered by Bing APIs and in turn enables
   * higher click-through rates for the API consumer. IMPORTANT: Although optional, you should
   * consider this header required. Persisting the client ID across multiple requests for the same
   * end user and device combination enables 1) the API consumer to receive a consistent user
   * experience, and 2) higher click-through rates via better quality of results from the Bing
   * APIs. Each user that uses your application on the device must have a unique, Bing generated
   * client ID. If you do not include this header in the request, Bing generates an ID and returns
   * it in the X-MSEdge-ClientID response header. The only time that you should NOT include this
   * header in a request is the first time the user uses your app on that device. Use the client ID
   * for each Bing API request that your app makes for this user on the device. Persist the client
   * ID. To persist the ID in a browser app, use a persistent HTTP cookie to ensure the ID is used
   * across all sessions. Do not use a session cookie. For other apps such as mobile apps, use the
   * device's persistent storage to persist the ID. The next time the user uses your app on that
   * device, get the client ID that you persisted. Bing responses may or may not include this
   * header. If the response includes this header, capture the client ID and use it for all
   * subsequent Bing requests for the user on that device. If you include the X-MSEdge-ClientID,
   * you must not include cookies in the request.
   */
  clientId?: string;
  /**
   * The IPv4 or IPv6 address of the client device. The IP address is used to discover the user's
   * location. Bing uses the location information to determine safe search behavior. Although
   * optional, you are encouraged to always specify this header and the X-Search-Location header.
   * Do not obfuscate the address (for example, by changing the last octet to 0). Obfuscating the
   * address results in the location not being anywhere near the device's actual location, which
   * may result in Bing serving erroneous results.
   */
  clientIp?: string;
  /**
   * A semicolon-delimited list of key/value pairs that describe the client's geographical
   * location. Bing uses the location information to determine safe search behavior and to return
   * relevant local content. Specify the key/value pair as <key>:<value>. The following are the
   * keys that you use to specify the user's location. lat (required): The latitude of the client's
   * location, in degrees. The latitude must be greater than or equal to -90.0 and less than or
   * equal to +90.0. Negative values indicate southern latitudes and positive values indicate
   * northern latitudes. long (required): The longitude of the client's location, in degrees. The
   * longitude must be greater than or equal to -180.0 and less than or equal to +180.0. Negative
   * values indicate western longitudes and positive values indicate eastern longitudes. re
   * (required): The radius, in meters, which specifies the horizontal accuracy of the coordinates.
   * Pass the value returned by the device's location service. Typical values might be 22m for
   * GPS/Wi-Fi, 380m for cell tower triangulation, and 18,000m for reverse IP lookup. ts
   * (optional): The UTC UNIX timestamp of when the client was at the location. (The UNIX timestamp
   * is the number of seconds since January 1, 1970.) head (optional): The client's relative
   * heading or direction of travel. Specify the direction of travel as degrees from 0 through 360,
   * counting clockwise relative to true north. Specify this key only if the sp key is nonzero. sp
   * (optional): The horizontal velocity (speed), in meters per second, that the client device is
   * traveling. alt (optional): The altitude of the client device, in meters. are (optional): The
   * radius, in meters, that specifies the vertical accuracy of the coordinates. Specify this key
   * only if you specify the alt key. Although many of the keys are optional, the more information
   * that you provide, the more accurate the location results are. Although optional, you are
   * encouraged to always specify the user's geographical location. Providing the location is
   * especially important if the client's IP address does not accurately reflect the user's
   * physical location (for example, if the client uses VPN). For optimal results, you should
   * include this header and the X-MSEdge-ClientIP header, but at a minimum, you should include
   * this header.
   */
  location?: string;
  /**
   * A 2-character country code of the country where the results come from. This API supports only
   * the United States market. If you specify this query parameter, it must be set to us. If you
   * set this parameter, you must also specify the Accept-Language header. Bing uses the first
   * supported language it finds from the languages list, and combine that language with the
   * country code that you specify to determine the market to return results for. If the languages
   * list does not include a supported language, Bing finds the closest language and market that
   * supports the request, or it may use an aggregated or default market for the results instead of
   * a specified one. You should use this query parameter and the Accept-Language query parameter
   * only if you specify multiple languages; otherwise, you should use the mkt and setLang query
   * parameters. This parameter and the mkt query parameter are mutually exclusive—do not specify
   * both.
   */
  countryCode?: string;
  /**
   * The number of news articles to return in the response. The actual number delivered may be less
   * than requested. The default is 10 and the maximum value is 100. The actual number delivered
   * may be less than requested.You may use this parameter along with the offset parameter to page
   * results. For example, if your user interface displays 20 articles per page, set count to 20
   * and offset to 0 to get the first page of results. For each subsequent page, increment offset
   * by 20 (for example, 0, 20, 40). It is possible for multiple pages to include some overlap in
   * results.
   */
  count?: number;
  /**
   * The market where the results come from. Typically, mkt is the country where the user is making
   * the request from. However, it could be a different country if the user is not located in a
   * country where Bing delivers results. The market must be in the form <language code>-<country
   * code>. For example, en-US. The string is case insensitive. For a list of possible market
   * values, see [Market
   * Codes](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#market-codes).
   * NOTE: If known, you are encouraged to always specify the market. Specifying the market helps
   * Bing route the request and return an appropriate and optimal response. If you specify a market
   * that is not listed in [Market
   * Codes](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#market-codes),
   * Bing uses a best fit market code based on an internal mapping that is subject to change. This
   * parameter and the
   * [cc](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#cc)
   * query parameter are mutually exclusive—do not specify both.
   */
  market?: string;
  /**
   * The zero-based offset that indicates the number of news to skip before returning news. The
   * default is 0. The offset should be less than
   * ([totalEstimatedMatches](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#news-totalmatches)
   * - count). Use this parameter along with the count parameter to page results. For example, if
   * your user interface displays 20 news per page, set count to 20 and offset to 0 to get the
   * first page of results. For each subsequent page, increment offset by 20 (for example, 0, 20,
   * 40). It is possible for multiple pages to include some overlap in results.
   */
  offset?: number;
  /**
   * Filter news for adult content. The following are the possible filter values. Off: Return news
   * articles with adult text, images, or videos. Moderate: Return news articles with adult text
   * but not adult images or videos. Strict: Do not return news articles with adult text, images,
   * or videos. If the request comes from a market that Bing's adult policy requires that
   * safeSearch is set to Strict, Bing ignores the safeSearch value and uses Strict. If you use the
   * site: query operator, there is the chance that the response may contain adult content
   * regardless of what the safeSearch query parameter is set to. Use site: only if you are aware
   * of the content on the site and your scenario supports the possibility of adult content.
   * Possible values include: 'Off', 'Moderate', 'Strict'
   */
  safeSearch?: SafeSearch;
  /**
   * The language to use for user interface strings. Specify the language using the ISO 639-1
   * 2-letter language code. For example, the language code for English is EN. The default is EN
   * (English). Although optional, you should always specify the language. Typically, you set
   * setLang to the same language specified by mkt unless the user wants the user interface strings
   * displayed in a different language. This parameter and the
   * [Accept-Language](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#acceptlanguage)
   * header are mutually exclusive; do not specify both. A user interface string is a string that's
   * used as a label in a user interface. There are few user interface strings in the JSON response
   * objects. Also, any links to Bing.com properties in the response objects apply the specified
   * language.
   */
  setLang?: string;
  /**
   * The Unix epoch time (Unix timestamp) that Bing uses to select the trending topics. Bing
   * returns trending topics that it discovered on or after the specified date and time, not the
   * date the topic was published. To use this parameter, also specify the sortBy parameter. Use
   * this parameter only with the News Trending Topics API. Do not specify this parameter when
   * calling the News Search API or News Category API.
   */
  since?: number;
  /**
   * The order to return the news in. The following are the possible case-insensitive values. Date:
   * If the request is through the News Search API, the response returns news articles sorted by
   * date from the most recent to the oldest. If the request is through the News Trending Topics
   * API, the response returns trending topics sorted by date from the most recent to the oldest.
   */
  sortBy?: string;
  /**
   * A Boolean value that determines whether display strings contain decoration markers such as hit
   * highlighting characters. If true, the strings may include markers. The default is false. To
   * specify whether to use Unicode characters or HTML tags as the markers, see the
   * [textFormat](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-news-api-v7-reference#textformat)
   * query parameter. For information about hit highlighting, see [Hit
   * Highlighting](https://docs.microsoft.com/azure/cognitive-services/bing-news-search/hit-highlighting).
   */
  textDecorations?: boolean;
  /**
   * The type of markers to use for text decorations (see the textDecorations query parameter).
   * Possible values are Raw—Use Unicode characters to mark content that needs special formatting.
   * The Unicode characters are in the range E000 through E019. For example, Bing uses E000 and
   * E001 to mark the beginning and end of query terms for hit highlighting. HTML—Use HTML tags to
   * mark content that needs special formatting. For example, use <b> tags to highlight query terms
   * in display strings. The default is Raw. For display strings that contain escapable HTML
   * characters such as <, >, and &, if textFormat is set to HTML, Bing escapes the characters as
   * appropriate (for example, < is escaped to &lt;). Possible values include: 'Raw', 'Html'
   */
  textFormat?: TextFormat;
}

/**
 * Defines values for ErrorCode.
 * Possible values include: 'None', 'ServerError', 'InvalidRequest', 'RateLimitExceeded',
 * 'InvalidAuthorization', 'InsufficientAuthorization'
 * @readonly
 * @enum {string}
 */
export type ErrorCode = 'None' | 'ServerError' | 'InvalidRequest' | 'RateLimitExceeded' | 'InvalidAuthorization' | 'InsufficientAuthorization';

/**
 * Defines values for ErrorSubCode.
 * Possible values include: 'UnexpectedError', 'ResourceError', 'NotImplemented',
 * 'ParameterMissing', 'ParameterInvalidValue', 'HttpNotAllowed', 'Blocked',
 * 'AuthorizationMissing', 'AuthorizationRedundancy', 'AuthorizationDisabled',
 * 'AuthorizationExpired'
 * @readonly
 * @enum {string}
 */
export type ErrorSubCode = 'UnexpectedError' | 'ResourceError' | 'NotImplemented' | 'ParameterMissing' | 'ParameterInvalidValue' | 'HttpNotAllowed' | 'Blocked' | 'AuthorizationMissing' | 'AuthorizationRedundancy' | 'AuthorizationDisabled' | 'AuthorizationExpired';

/**
 * Defines values for Freshness.
 * Possible values include: 'Day', 'Week', 'Month'
 * @readonly
 * @enum {string}
 */
export type Freshness = 'Day' | 'Week' | 'Month';

/**
 * Defines values for SafeSearch.
 * Possible values include: 'Off', 'Moderate', 'Strict'
 * @readonly
 * @enum {string}
 */
export type SafeSearch = 'Off' | 'Moderate' | 'Strict';

/**
 * Defines values for TextFormat.
 * Possible values include: 'Raw', 'Html'
 * @readonly
 * @enum {string}
 */
export type TextFormat = 'Raw' | 'Html';

/**
 * Contains response data for the search operation.
 */
export type NewsSearchResponse = News & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: News;
    };
};

/**
 * Contains response data for the category operation.
 */
export type NewsCategoryResponse = News & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: News;
    };
};

/**
 * Contains response data for the trending operation.
 */
export type NewsTrendingResponse = TrendingTopics & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TrendingTopics;
    };
};
