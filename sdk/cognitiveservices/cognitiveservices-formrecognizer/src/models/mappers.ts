/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as msRest from "@azure/ms-rest-js";


export const TrainRequest: msRest.CompositeMapper = {
  serializedName: "TrainRequest",
  type: {
    name: "Composite",
    className: "TrainRequest",
    modelProperties: {
      source: {
        required: true,
        serializedName: "source",
        constraints: {
          MaxLength: 2048,
          MinLength: 0
        },
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FormDocumentReport: msRest.CompositeMapper = {
  serializedName: "FormDocumentReport",
  type: {
    name: "Composite",
    className: "FormDocumentReport",
    modelProperties: {
      documentName: {
        serializedName: "documentName",
        type: {
          name: "String"
        }
      },
      pages: {
        serializedName: "pages",
        type: {
          name: "Number"
        }
      },
      errors: {
        serializedName: "errors",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FormOperationError: msRest.CompositeMapper = {
  serializedName: "FormOperationError",
  type: {
    name: "Composite",
    className: "FormOperationError",
    modelProperties: {
      errorMessage: {
        serializedName: "errorMessage",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TrainResult: msRest.CompositeMapper = {
  serializedName: "TrainResult",
  type: {
    name: "Composite",
    className: "TrainResult",
    modelProperties: {
      modelId: {
        nullable: false,
        serializedName: "modelId",
        type: {
          name: "Uuid"
        }
      },
      trainingDocuments: {
        serializedName: "trainingDocuments",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "FormDocumentReport"
            }
          }
        }
      },
      errors: {
        serializedName: "errors",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "FormOperationError"
            }
          }
        }
      }
    }
  }
};

export const KeysResult: msRest.CompositeMapper = {
  serializedName: "KeysResult",
  type: {
    name: "Composite",
    className: "KeysResult",
    modelProperties: {
      clusters: {
        serializedName: "clusters",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Sequence",
              element: {
                type: {
                  name: "String"
                }
              }
            }
          }
        }
      }
    }
  }
};

export const ModelResult: msRest.CompositeMapper = {
  serializedName: "ModelResult",
  type: {
    name: "Composite",
    className: "ModelResult",
    modelProperties: {
      modelId: {
        nullable: false,
        serializedName: "modelId",
        type: {
          name: "Uuid"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      createdDateTime: {
        serializedName: "createdDateTime",
        type: {
          name: "DateTime"
        }
      },
      lastUpdatedDateTime: {
        serializedName: "lastUpdatedDateTime",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const ModelsResult: msRest.CompositeMapper = {
  serializedName: "ModelsResult",
  type: {
    name: "Composite",
    className: "ModelsResult",
    modelProperties: {
      modelsProperty: {
        serializedName: "models",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ModelResult"
            }
          }
        }
      }
    }
  }
};

export const InnerError: msRest.CompositeMapper = {
  serializedName: "InnerError",
  type: {
    name: "Composite",
    className: "InnerError",
    modelProperties: {
      requestId: {
        serializedName: "requestId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorInformation: msRest.CompositeMapper = {
  serializedName: "ErrorInformation",
  type: {
    name: "Composite",
    className: "ErrorInformation",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      innerError: {
        serializedName: "innerError",
        type: {
          name: "Composite",
          className: "InnerError"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorResponse: msRest.CompositeMapper = {
  serializedName: "ErrorResponse",
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorInformation"
        }
      }
    }
  }
};

export const ExtractedToken: msRest.CompositeMapper = {
  serializedName: "ExtractedToken",
  type: {
    name: "Composite",
    className: "ExtractedToken",
    modelProperties: {
      text: {
        serializedName: "text",
        type: {
          name: "String"
        }
      },
      boundingBox: {
        serializedName: "boundingBox",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Number"
            }
          }
        }
      },
      confidence: {
        serializedName: "confidence",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ExtractedKeyValuePair: msRest.CompositeMapper = {
  serializedName: "ExtractedKeyValuePair",
  type: {
    name: "Composite",
    className: "ExtractedKeyValuePair",
    modelProperties: {
      key: {
        serializedName: "key",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ExtractedToken"
            }
          }
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ExtractedToken"
            }
          }
        }
      }
    }
  }
};

export const ExtractedTableColumn: msRest.CompositeMapper = {
  serializedName: "ExtractedTableColumn",
  type: {
    name: "Composite",
    className: "ExtractedTableColumn",
    modelProperties: {
      header: {
        serializedName: "header",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ExtractedToken"
            }
          }
        }
      },
      entries: {
        serializedName: "entries",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Sequence",
              element: {
                type: {
                  name: "Composite",
                  className: "ExtractedToken"
                }
              }
            }
          }
        }
      }
    }
  }
};

export const ExtractedTable: msRest.CompositeMapper = {
  serializedName: "ExtractedTable",
  type: {
    name: "Composite",
    className: "ExtractedTable",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      columns: {
        serializedName: "columns",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ExtractedTableColumn"
            }
          }
        }
      }
    }
  }
};

export const ExtractedPage: msRest.CompositeMapper = {
  serializedName: "ExtractedPage",
  type: {
    name: "Composite",
    className: "ExtractedPage",
    modelProperties: {
      number: {
        serializedName: "number",
        type: {
          name: "Number"
        }
      },
      height: {
        serializedName: "height",
        type: {
          name: "Number"
        }
      },
      width: {
        serializedName: "width",
        type: {
          name: "Number"
        }
      },
      clusterId: {
        serializedName: "clusterId",
        type: {
          name: "Number"
        }
      },
      keyValuePairs: {
        serializedName: "keyValuePairs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ExtractedKeyValuePair"
            }
          }
        }
      },
      tables: {
        serializedName: "tables",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ExtractedTable"
            }
          }
        }
      }
    }
  }
};

export const AnalyzeResult: msRest.CompositeMapper = {
  serializedName: "AnalyzeResult",
  type: {
    name: "Composite",
    className: "AnalyzeResult",
    modelProperties: {
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      pages: {
        serializedName: "pages",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ExtractedPage"
            }
          }
        }
      },
      errors: {
        serializedName: "errors",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "FormOperationError"
            }
          }
        }
      }
    }
  }
};
