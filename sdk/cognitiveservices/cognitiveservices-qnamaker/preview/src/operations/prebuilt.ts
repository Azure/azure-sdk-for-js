/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/prebuiltMappers";
import * as Parameters from "../models/parameters";
import { QnAMakerClientContext } from "../qnAMakerClientContext";

/** Class representing a Prebuilt. */
export class Prebuilt {
  private readonly client: QnAMakerClientContext;

  /**
   * Create a Prebuilt.
   * @param {QnAMakerClientContext} client Reference to the service client.
   */
  constructor(client: QnAMakerClientContext) {
    this.client = client;
  }

  /**
   * @summary GenerateAnswer call to query text in documents.
   * @param prebuiltGenerateAnswerPayload Post body of the request.
   * @param [options] The optional parameters
   * @returns Promise<Models.PrebuiltGenerateAnswerResponse>
   */
  generateAnswer(prebuiltGenerateAnswerPayload: Models.PrebuiltQuery, options?: Models.PrebuiltGenerateAnswerOptionalParams): Promise<Models.PrebuiltGenerateAnswerResponse>;
  /**
   * @param prebuiltGenerateAnswerPayload Post body of the request.
   * @param callback The callback
   */
  generateAnswer(prebuiltGenerateAnswerPayload: Models.PrebuiltQuery, callback: msRest.ServiceCallback<any>): void;
  /**
   * @param prebuiltGenerateAnswerPayload Post body of the request.
   * @param options The optional parameters
   * @param callback The callback
   */
  generateAnswer(prebuiltGenerateAnswerPayload: Models.PrebuiltQuery, options: Models.PrebuiltGenerateAnswerOptionalParams, callback: msRest.ServiceCallback<any>): void;
  generateAnswer(prebuiltGenerateAnswerPayload: Models.PrebuiltQuery, options?: Models.PrebuiltGenerateAnswerOptionalParams | msRest.ServiceCallback<any>, callback?: msRest.ServiceCallback<any>): Promise<Models.PrebuiltGenerateAnswerResponse> {
    return this.client.sendOperationRequest(
      {
        prebuiltGenerateAnswerPayload,
        options
      },
      generateAnswerOperationSpec,
      callback) as Promise<Models.PrebuiltGenerateAnswerResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const generateAnswerOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "generateAnswer",
  urlParameters: [
    Parameters.endpoint
  ],
  queryParameters: [
    Parameters.stringIndexType
  ],
  requestBody: {
    parameterPath: "prebuiltGenerateAnswerPayload",
    mapper: {
      ...Mappers.PrebuiltQuery,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: {
        serializedName: "parsedResponse",
        type: {
          name: "Object"
        }
      }
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};
