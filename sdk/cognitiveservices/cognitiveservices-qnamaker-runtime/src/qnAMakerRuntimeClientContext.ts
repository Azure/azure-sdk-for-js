/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";

const packageName = "@azure/cognitiveservices-qnamaker-runtime";
const packageVersion = "1.0.1";

export class QnAMakerRuntimeClientContext extends msRest.ServiceClient {
  runtimeEndpoint: string;
  credentials: msRest.ServiceClientCredentials;

  /**
   * Initializes a new instance of the QnAMakerRuntimeClientContext class.
   * @param runtimeEndpoint QnA Maker App Service endpoint (for example:
   * https://{qnaservice-hostname}.azurewebsites.net).
   * @param credentials Subscription credentials which uniquely identify client subscription.
   * @param [options] The parameter options
   */
  constructor(credentials: msRest.ServiceClientCredentials, runtimeEndpoint: string, options?: msRest.ServiceClientOptions) {
    if (runtimeEndpoint == undefined) {
      throw new Error("'runtimeEndpoint' cannot be null.");
    }
    if (credentials == undefined) {
      throw new Error("'credentials' cannot be null.");
    }

    if (!options) {
      options = {};
    }

    if (!options.userAgent) {
      const defaultUserAgent = msRest.getDefaultUserAgentValue();
      options.userAgent = `${packageName}/${packageVersion} ${defaultUserAgent}`;
    }

    super(credentials, options);

    this.baseUri = "{RuntimeEndpoint}/qnamaker";
    this.requestContentType = "application/json; charset=utf-8";
    this.runtimeEndpoint = runtimeEndpoint;
    this.credentials = credentials;
  }
}
