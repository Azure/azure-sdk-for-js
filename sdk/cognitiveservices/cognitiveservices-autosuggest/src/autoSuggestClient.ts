/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "./models";
import * as Mappers from "./models/mappers";
import * as Parameters from "./models/parameters";
import { AutoSuggestClientContext } from "./autoSuggestClientContext";

class AutoSuggestClient extends AutoSuggestClientContext {
  /**
   * Initializes a new instance of the AutoSuggestClient class.
   * @param credentials Subscription credentials which uniquely identify client subscription.
   * @param [options] The parameter options
   */
  constructor(credentials: msRest.ServiceClientCredentials, options?: Models.AutoSuggestClientOptions) {
    super(credentials, options);
  }

  /**
   * @summary The AutoSuggest API lets you send a search query to Bing and get back a list of query
   * suggestions. This section provides technical details about the query parameters and headers that
   * you use to request suggestions and the JSON response objects that contain them.
   * @param query The user's search term.
   * @param [options] The optional parameters
   * @returns Promise<Models.AutoSuggestResponse>
   */
  autoSuggest(query: string, options?: Models.AutoSuggestClientAutoSuggestOptionalParams): Promise<Models.AutoSuggestResponse>;
  /**
   * @param query The user's search term.
   * @param callback The callback
   */
  autoSuggest(query: string, callback: msRest.ServiceCallback<Models.Suggestions>): void;
  /**
   * @param query The user's search term.
   * @param options The optional parameters
   * @param callback The callback
   */
  autoSuggest(query: string, options: Models.AutoSuggestClientAutoSuggestOptionalParams, callback: msRest.ServiceCallback<Models.Suggestions>): void;
  autoSuggest(query: string, options?: Models.AutoSuggestClientAutoSuggestOptionalParams | msRest.ServiceCallback<Models.Suggestions>, callback?: msRest.ServiceCallback<Models.Suggestions>): Promise<Models.AutoSuggestResponse> {
    return this.sendOperationRequest(
      {
        query,
        options
      },
      autoSuggestOperationSpec,
      callback) as Promise<Models.AutoSuggestResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const autoSuggestOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "Suggestions",
  urlParameters: [
    Parameters.endpoint
  ],
  queryParameters: [
    Parameters.countryCode,
    Parameters.market,
    Parameters.query,
    Parameters.safeSearch,
    Parameters.setLang,
    Parameters.responseFormat
  ],
  headerParameters: [
    Parameters.xBingApisSDK,
    Parameters.acceptLanguage,
    Parameters.pragma,
    Parameters.userAgent,
    Parameters.clientId,
    Parameters.clientIp,
    Parameters.location
  ],
  responses: {
    200: {
      bodyMapper: Mappers.Suggestions
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

export {
  AutoSuggestClient,
  AutoSuggestClientContext,
  Models as AutoSuggestModels,
  Mappers as AutoSuggestMappers
};
