/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as msRest from "@azure/ms-rest-js";


export const ResponseBase: msRest.CompositeMapper = {
  serializedName: "ResponseBase",
  type: {
    name: "Composite",
    polymorphicDiscriminator: {
      serializedName: "_type",
      clientName: "_type"
    },
    uberParent: "ResponseBase",
    className: "ResponseBase",
    modelProperties: {
      _type: {
        required: true,
        serializedName: "_type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Identifiable: msRest.CompositeMapper = {
  serializedName: "Identifiable",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,
    uberParent: "ResponseBase",
    className: "Identifiable",
    modelProperties: {
      ...ResponseBase.type.modelProperties,
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Response: msRest.CompositeMapper = {
  serializedName: "Response",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,
    uberParent: "ResponseBase",
    className: "Response",
    modelProperties: {
      ...Identifiable.type.modelProperties,
      webSearchUrl: {
        readOnly: true,
        serializedName: "webSearchUrl",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Thing: msRest.CompositeMapper = {
  serializedName: "Thing",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,
    uberParent: "ResponseBase",
    className: "Thing",
    modelProperties: {
      ...Response.type.modelProperties,
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      url: {
        readOnly: true,
        serializedName: "url",
        type: {
          name: "String"
        }
      },
      image: {
        readOnly: true,
        serializedName: "image",
        type: {
          name: "Composite",
          className: "ImageObject"
        }
      },
      description: {
        readOnly: true,
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      alternateName: {
        readOnly: true,
        serializedName: "alternateName",
        type: {
          name: "String"
        }
      },
      bingId: {
        readOnly: true,
        serializedName: "bingId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CreativeWork: msRest.CompositeMapper = {
  serializedName: "CreativeWork",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,
    uberParent: "ResponseBase",
    className: "CreativeWork",
    modelProperties: {
      ...Thing.type.modelProperties,
      thumbnailUrl: {
        readOnly: true,
        serializedName: "thumbnailUrl",
        type: {
          name: "String"
        }
      },
      provider: {
        readOnly: true,
        serializedName: "provider",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Thing"
            }
          }
        }
      },
      text: {
        readOnly: true,
        serializedName: "text",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MediaObject: msRest.CompositeMapper = {
  serializedName: "MediaObject",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,
    uberParent: "ResponseBase",
    className: "MediaObject",
    modelProperties: {
      ...CreativeWork.type.modelProperties,
      contentUrl: {
        readOnly: true,
        serializedName: "contentUrl",
        type: {
          name: "String"
        }
      },
      hostPageUrl: {
        readOnly: true,
        serializedName: "hostPageUrl",
        type: {
          name: "String"
        }
      },
      width: {
        readOnly: true,
        serializedName: "width",
        type: {
          name: "Number"
        }
      },
      height: {
        readOnly: true,
        serializedName: "height",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ImageObject: msRest.CompositeMapper = {
  serializedName: "ImageObject",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,
    uberParent: "ResponseBase",
    className: "ImageObject",
    modelProperties: {
      ...MediaObject.type.modelProperties,
      thumbnail: {
        readOnly: true,
        serializedName: "thumbnail",
        type: {
          name: "Composite",
          className: "ImageObject"
        }
      }
    }
  }
};

export const VideoObject: msRest.CompositeMapper = {
  serializedName: "VideoObject",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,
    uberParent: "ResponseBase",
    className: "VideoObject",
    modelProperties: {
      ...MediaObject.type.modelProperties,
      motionThumbnailUrl: {
        readOnly: true,
        serializedName: "motionThumbnailUrl",
        type: {
          name: "String"
        }
      },
      motionThumbnailId: {
        readOnly: true,
        serializedName: "motionThumbnailId",
        type: {
          name: "String"
        }
      },
      embedHtml: {
        readOnly: true,
        serializedName: "embedHtml",
        type: {
          name: "String"
        }
      },
      allowHttpsEmbed: {
        readOnly: true,
        serializedName: "allowHttpsEmbed",
        type: {
          name: "Boolean"
        }
      },
      viewCount: {
        readOnly: true,
        serializedName: "viewCount",
        type: {
          name: "Number"
        }
      },
      thumbnail: {
        readOnly: true,
        serializedName: "thumbnail",
        type: {
          name: "Composite",
          className: "ImageObject"
        }
      },
      videoId: {
        readOnly: true,
        serializedName: "videoId",
        type: {
          name: "String"
        }
      },
      allowMobileEmbed: {
        readOnly: true,
        serializedName: "allowMobileEmbed",
        type: {
          name: "Boolean"
        }
      },
      isSuperfresh: {
        readOnly: true,
        serializedName: "isSuperfresh",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Query: msRest.CompositeMapper = {
  serializedName: "Query",
  type: {
    name: "Composite",
    className: "Query",
    modelProperties: {
      text: {
        required: true,
        serializedName: "text",
        type: {
          name: "String"
        }
      },
      displayText: {
        readOnly: true,
        serializedName: "displayText",
        type: {
          name: "String"
        }
      },
      webSearchUrl: {
        readOnly: true,
        serializedName: "webSearchUrl",
        type: {
          name: "String"
        }
      },
      searchLink: {
        readOnly: true,
        serializedName: "searchLink",
        type: {
          name: "String"
        }
      },
      thumbnail: {
        readOnly: true,
        serializedName: "thumbnail",
        type: {
          name: "Composite",
          className: "ImageObject"
        }
      }
    }
  }
};

export const PivotSuggestions: msRest.CompositeMapper = {
  serializedName: "PivotSuggestions",
  type: {
    name: "Composite",
    className: "PivotSuggestions",
    modelProperties: {
      pivot: {
        required: true,
        serializedName: "pivot",
        type: {
          name: "String"
        }
      },
      suggestions: {
        required: true,
        serializedName: "suggestions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Query"
            }
          }
        }
      }
    }
  }
};

export const Answer: msRest.CompositeMapper = {
  serializedName: "Answer",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,
    uberParent: "ResponseBase",
    className: "Answer",
    modelProperties: {
      ...Response.type.modelProperties,
      followUpQueries: {
        readOnly: true,
        serializedName: "followUpQueries",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Query"
            }
          }
        }
      }
    }
  }
};

export const SearchResultsAnswer: msRest.CompositeMapper = {
  serializedName: "SearchResultsAnswer",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,
    uberParent: "ResponseBase",
    className: "SearchResultsAnswer",
    modelProperties: {
      ...Answer.type.modelProperties,
      totalEstimatedMatches: {
        readOnly: true,
        serializedName: "totalEstimatedMatches",
        type: {
          name: "Number"
        }
      },
      isFamilyFriendly: {
        readOnly: true,
        serializedName: "isFamilyFriendly",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Videos: msRest.CompositeMapper = {
  serializedName: "Videos",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,
    uberParent: "ResponseBase",
    className: "Videos",
    modelProperties: {
      ...SearchResultsAnswer.type.modelProperties,
      value: {
        required: true,
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VideoObject"
            }
          }
        }
      },
      nextOffset: {
        readOnly: true,
        serializedName: "nextOffset",
        type: {
          name: "Number"
        }
      },
      scenario: {
        readOnly: true,
        serializedName: "scenario",
        type: {
          name: "Enum",
          allowedValues: [
            "List",
            "SingleDominantVideo"
          ]
        }
      },
      queryExpansions: {
        readOnly: true,
        serializedName: "queryExpansions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Query"
            }
          }
        }
      },
      pivotSuggestions: {
        readOnly: true,
        serializedName: "pivotSuggestions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PivotSuggestions"
            }
          }
        }
      }
    }
  }
};

export const QueryContext: msRest.CompositeMapper = {
  serializedName: "QueryContext",
  type: {
    name: "Composite",
    className: "QueryContext",
    modelProperties: {
      originalQuery: {
        required: true,
        serializedName: "originalQuery",
        type: {
          name: "String"
        }
      },
      alteredQuery: {
        readOnly: true,
        serializedName: "alteredQuery",
        type: {
          name: "String"
        }
      },
      alterationOverrideQuery: {
        readOnly: true,
        serializedName: "alterationOverrideQuery",
        type: {
          name: "String"
        }
      },
      adultIntent: {
        readOnly: true,
        serializedName: "adultIntent",
        type: {
          name: "Boolean"
        }
      },
      askUserForLocation: {
        readOnly: true,
        serializedName: "askUserForLocation",
        type: {
          name: "Boolean"
        }
      },
      isTransactional: {
        readOnly: true,
        serializedName: "isTransactional",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const ErrorModel: msRest.CompositeMapper = {
  serializedName: "Error",
  type: {
    name: "Composite",
    className: "ErrorModel",
    modelProperties: {
      code: {
        required: true,
        serializedName: "code",
        defaultValue: 'None',
        type: {
          name: "Enum",
          allowedValues: [
            "None",
            "ServerError",
            "InvalidRequest",
            "RateLimitExceeded",
            "InvalidAuthorization",
            "InsufficientAuthorization"
          ]
        }
      },
      subCode: {
        readOnly: true,
        serializedName: "subCode",
        type: {
          name: "Enum",
          allowedValues: [
            "UnexpectedError",
            "ResourceError",
            "NotImplemented",
            "ParameterMissing",
            "ParameterInvalidValue",
            "HttpNotAllowed",
            "Blocked",
            "AuthorizationMissing",
            "AuthorizationRedundancy",
            "AuthorizationDisabled",
            "AuthorizationExpired"
          ]
        }
      },
      message: {
        required: true,
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      moreDetails: {
        readOnly: true,
        serializedName: "moreDetails",
        type: {
          name: "String"
        }
      },
      parameter: {
        readOnly: true,
        serializedName: "parameter",
        type: {
          name: "String"
        }
      },
      value: {
        readOnly: true,
        serializedName: "value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorResponse: msRest.CompositeMapper = {
  serializedName: "ErrorResponse",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,
    uberParent: "ResponseBase",
    className: "ErrorResponse",
    modelProperties: {
      ...Response.type.modelProperties,
      errors: {
        required: true,
        serializedName: "errors",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorModel"
            }
          }
        }
      }
    }
  }
};

export const TrendingVideosTile: msRest.CompositeMapper = {
  serializedName: "TrendingVideos/Tile",
  type: {
    name: "Composite",
    className: "TrendingVideosTile",
    modelProperties: {
      query: {
        required: true,
        serializedName: "query",
        defaultValue: {},
        type: {
          name: "Composite",
          className: "Query"
        }
      },
      image: {
        required: true,
        serializedName: "image",
        type: {
          name: "Composite",
          className: "ImageObject"
        }
      }
    }
  }
};

export const TrendingVideosSubcategory: msRest.CompositeMapper = {
  serializedName: "TrendingVideos/Subcategory",
  type: {
    name: "Composite",
    className: "TrendingVideosSubcategory",
    modelProperties: {
      title: {
        required: true,
        serializedName: "title",
        type: {
          name: "String"
        }
      },
      tiles: {
        required: true,
        serializedName: "tiles",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TrendingVideosTile"
            }
          }
        }
      }
    }
  }
};

export const TrendingVideosCategory: msRest.CompositeMapper = {
  serializedName: "TrendingVideos/Category",
  type: {
    name: "Composite",
    className: "TrendingVideosCategory",
    modelProperties: {
      title: {
        required: true,
        serializedName: "title",
        type: {
          name: "String"
        }
      },
      subcategories: {
        required: true,
        serializedName: "subcategories",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TrendingVideosSubcategory"
            }
          }
        }
      }
    }
  }
};

export const TrendingVideos: msRest.CompositeMapper = {
  serializedName: "TrendingVideos",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,
    uberParent: "ResponseBase",
    className: "TrendingVideos",
    modelProperties: {
      ...Response.type.modelProperties,
      bannerTiles: {
        required: true,
        serializedName: "bannerTiles",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TrendingVideosTile"
            }
          }
        }
      },
      categories: {
        required: true,
        serializedName: "categories",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TrendingVideosCategory"
            }
          }
        }
      }
    }
  }
};

export const VideosModule: msRest.CompositeMapper = {
  serializedName: "VideosModule",
  type: {
    name: "Composite",
    className: "VideosModule",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "VideoObject"
            }
          }
        }
      }
    }
  }
};

export const VideoDetails: msRest.CompositeMapper = {
  serializedName: "VideoDetails",
  type: {
    name: "Composite",
    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,
    uberParent: "ResponseBase",
    className: "VideoDetails",
    modelProperties: {
      ...Response.type.modelProperties,
      relatedVideos: {
        readOnly: true,
        serializedName: "relatedVideos",
        type: {
          name: "Composite",
          className: "VideosModule"
        }
      },
      videoResult: {
        readOnly: true,
        serializedName: "videoResult",
        type: {
          name: "Composite",
          className: "VideoObject"
        }
      }
    }
  }
};

export const discriminators = {
  'ResponseBase.ImageObject' : ImageObject,
  'ResponseBase.VideoObject' : VideoObject,
  'ResponseBase.Videos' : Videos,
  'ResponseBase.SearchResultsAnswer' : SearchResultsAnswer,
  'ResponseBase.Answer' : Answer,
  'ResponseBase.MediaObject' : MediaObject,
  'ResponseBase.Response' : Response,
  'ResponseBase.Thing' : Thing,
  'ResponseBase.CreativeWork' : CreativeWork,
  'ResponseBase.Identifiable' : Identifiable,
  'ResponseBase.ErrorResponse' : ErrorResponse,
  'ResponseBase.TrendingVideos' : TrendingVideos,
  'ResponseBase.VideoDetails' : VideoDetails,
  'ResponseBase' : ResponseBase

};
