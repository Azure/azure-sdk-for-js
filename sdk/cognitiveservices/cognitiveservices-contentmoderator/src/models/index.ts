/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */


import * as msRest from "@azure/ms-rest-js";

/**
 * The key value pair object properties.
 */
export interface KeyValuePair {
  /**
   * The key parameter.
   */
  key?: string;
  /**
   * The value parameter.
   */
  value?: string;
}

/**
 * Tag details.
 */
export interface Tag {
  /**
   * The key parameter.
   */
  key?: string;
  /**
   * The value parameter.
   */
  value?: string;
}

/**
 * Video frame property details.
 */
export interface Frame {
  /**
   * Timestamp of the frame.
   */
  timestamp?: string;
  /**
   * Frame image.
   */
  frameImage?: string;
  /**
   * Array of KeyValue.
   */
  metadata?: KeyValuePair[];
  /**
   * Reviewer result tags.
   */
  reviewerResultTags?: Tag[];
}

/**
 * The response for a Get Frames request.
 */
export interface Frames {
  /**
   * Id of the review.
   */
  reviewId?: string;
  videoFrames?: Frame[];
}

/**
 * The category1 score details of the text. <a href="https://aka.ms/textClassifyCategories">Click
 * here</a> for more details on category classification.
 */
export interface ClassificationCategory1 {
  /**
   * The category1 score.
   */
  score?: number;
}

/**
 * The category2 score details of the text. <a href="https://aka.ms/textClassifyCategories">Click
 * here</a> for more details on category classification.
 */
export interface ClassificationCategory2 {
  /**
   * The category2 score.
   */
  score?: number;
}

/**
 * The category3 score details of the text. <a href="https://aka.ms/textClassifyCategories">Click
 * here</a> for more details on category classification.
 */
export interface ClassificationCategory3 {
  /**
   * The category3 score.
   */
  score?: number;
}

/**
 * The classification details of the text.
 */
export interface Classification {
  /**
   * The category1 score details of the text. <a href="https://aka.ms/textClassifyCategories">Click
   * here</a> for more details on category classification.
   */
  category1?: ClassificationCategory1;
  /**
   * The category2 score details of the text. <a href="https://aka.ms/textClassifyCategories">Click
   * here</a> for more details on category classification.
   */
  category2?: ClassificationCategory2;
  /**
   * The category3 score details of the text. <a href="https://aka.ms/textClassifyCategories">Click
   * here</a> for more details on category classification.
   */
  category3?: ClassificationCategory3;
  /**
   * The review recommended flag.
   */
  reviewRecommended?: boolean;
}

/**
 * Status properties.
 */
export interface Status {
  /**
   * Status code.
   */
  code?: number;
  /**
   * Status description.
   */
  description?: string;
  /**
   * Exception status.
   */
  exception?: string;
}

/**
 * Email Address details.
 */
export interface Email {
  /**
   * Detected Email Address from the input text content.
   */
  detected?: string;
  /**
   * Subtype of the detected Email Address.
   */
  subType?: string;
  /**
   * Email Address in the input text content.
   */
  text?: string;
  /**
   * Index(Location) of the Email address in the input text content.
   */
  index?: number;
}

/**
 * Detected SSN details.
 */
export interface SSN {
  /**
   * Detected SSN in the input text content.
   */
  text?: string;
  /**
   * Index(Location) of the SSN in the input text content.
   */
  index?: number;
}

/**
 * IP Address details.
 */
export interface IPA {
  /**
   * Subtype of the detected IP Address.
   */
  subType?: string;
  /**
   * Detected IP Address.
   */
  text?: string;
  /**
   * Index(Location) of the IP Address in the input text content.
   */
  index?: number;
}

/**
 * Phone Property details.
 */
export interface Phone {
  /**
   * CountryCode of the detected Phone number.
   */
  countryCode?: string;
  /**
   * Detected Phone number.
   */
  text?: string;
  /**
   * Index(Location) of the Phone number in the input text content.
   */
  index?: number;
}

/**
 * Address details.
 */
export interface Address {
  /**
   * Detected Address.
   */
  text?: string;
  /**
   * Index(Location) of the Address in the input text content.
   */
  index?: number;
}

/**
 * Personal Identifier Information details.
 */
export interface PII {
  email?: Email[];
  sSN?: SSN[];
  iPA?: IPA[];
  phone?: Phone[];
  address?: Address[];
}

/**
 * Detected Terms details.
 */
export interface DetectedTerms {
  /**
   * Index(Location) of the detected profanity term in the input text content.
   */
  index?: number;
  /**
   * Original Index(Location) of the detected profanity term in the input text content.
   */
  originalIndex?: number;
  /**
   * Matched Terms list Id.
   */
  listId?: number;
  /**
   * Detected profanity term.
   */
  term?: string;
}

/**
 * The response for a Screen text request.
 */
export interface Screen {
  /**
   * The original text.
   */
  originalText?: string;
  /**
   * The normalized text.
   */
  normalizedText?: string;
  /**
   * The autocorrected text
   */
  autoCorrectedText?: string;
  /**
   * The misrepresentation text.
   */
  misrepresentation?: string[];
  /**
   * The classification details of the text.
   */
  classification?: Classification;
  /**
   * The evaluate status.
   */
  status?: Status;
  /**
   * Personal Identifier Information details.
   */
  pII?: PII;
  /**
   * Language of the input text content.
   */
  language?: string;
  terms?: DetectedTerms[];
  /**
   * Unique Content Moderator transaction Id.
   */
  trackingId?: string;
}

/**
 * Coordinates to the found face.
 */
export interface Face {
  /**
   * The bottom coordinate.
   */
  bottom?: number;
  /**
   * The left coordinate.
   */
  left?: number;
  /**
   * The right coordinate.
   */
  right?: number;
  /**
   * The top coordinate.
   */
  top?: number;
}

/**
 * Request object the contains found faces.
 */
export interface FoundFaces {
  /**
   * The evaluate status
   */
  status?: Status;
  /**
   * The tracking id.
   */
  trackingId?: string;
  /**
   * The cache id.
   */
  cacheId?: string;
  /**
   * True if result was found.
   */
  result?: boolean;
  /**
   * Number of faces found.
   */
  count?: number;
  /**
   * The advanced info.
   */
  advancedInfo?: KeyValuePair[];
  /**
   * The list of faces.
   */
  faces?: Face[];
}

/**
 * OCR candidate text.
 */
export interface Candidate {
  /**
   * The text found.
   */
  text?: string;
  /**
   * The confidence level.
   */
  confidence?: number;
}

/**
 * Contains the text found in image for the language specified.
 */
export interface OCR {
  /**
   * The evaluate status
   */
  status?: Status;
  /**
   * Array of KeyValue.
   */
  metadata?: KeyValuePair[];
  /**
   * The tracking id.
   */
  trackingId?: string;
  /**
   * The cache id.
   */
  cacheId?: string;
  /**
   * The ISO 639-3 code.
   */
  language?: string;
  /**
   * The found text.
   */
  text?: string;
  /**
   * The list of candidate text.
   */
  candidates?: Candidate[];
}

/**
 * Evaluate response object.
 */
export interface Evaluate {
  /**
   * The cache id.
   */
  cacheID?: string;
  /**
   * Evaluate result.
   */
  result?: boolean;
  /**
   * The tracking id.
   */
  trackingId?: string;
  /**
   * The adult classification score.
   */
  adultClassificationScore?: number;
  /**
   * Indicates if an image is classified as adult.
   */
  isImageAdultClassified?: boolean;
  /**
   * The racy classification score.
   */
  racyClassificationScore?: number;
  /**
   * Indicates if the image is classified as racy.
   */
  isImageRacyClassified?: boolean;
  /**
   * The advanced info.
   */
  advancedInfo?: KeyValuePair[];
  /**
   * The evaluate status
   */
  status?: Status;
}

/**
 * The match details.
 */
export interface Match {
  /**
   * Confidence score of the image match.
   */
  score?: number;
  /**
   * The match id.
   */
  matchId?: number;
  /**
   * The source.
   */
  source?: string;
  /**
   * The tags for match details.
   */
  tags?: number[];
  /**
   * The label.
   */
  label?: string;
}

/**
 * The response for a Match request.
 */
export interface MatchResponse {
  /**
   * The tracking id.
   */
  trackingId?: string;
  /**
   * The cache id.
   */
  cacheID?: string;
  /**
   * Indicates if there is a match.
   */
  isMatch?: boolean;
  /**
   * The match details.
   */
  matches?: Match[];
  /**
   * The evaluate status
   */
  status?: Status;
}

/**
 * Detect language result.
 */
export interface DetectedLanguage {
  /**
   * The detected language.
   */
  detectedLanguage?: string;
  /**
   * The detect language status
   */
  status?: Status;
  /**
   * The tracking id.
   */
  trackingId?: string;
}

/**
 * Image List Properties.
 */
export interface ImageList {
  /**
   * Image List Id.
   */
  id?: number;
  /**
   * Image List Name.
   */
  name?: string;
  /**
   * Description for image list.
   */
  description?: string;
  /**
   * Image List Metadata.
   */
  metadata?: { [propertyName: string]: string };
}

/**
 * Term List  Properties.
 */
export interface TermList {
  /**
   * Term list Id.
   */
  id?: number;
  /**
   * Term list name.
   */
  name?: string;
  /**
   * Description for term list.
   */
  description?: string;
  /**
   * Term list metadata.
   */
  metadata?: { [propertyName: string]: string };
}

/**
 * Refresh Index Response.
 */
export interface RefreshIndex {
  /**
   * Content source Id.
   */
  contentSourceId?: string;
  /**
   * Update success status.
   */
  isUpdateSuccess?: boolean;
  /**
   * Advanced info list.
   */
  advancedInfo?: { [propertyName: string]: string }[];
  /**
   * Refresh index status.
   */
  status?: Status;
  /**
   * Tracking Id.
   */
  trackingId?: string;
}

/**
 * An interface representing ImageAdditionalInfoItem.
 */
export interface ImageAdditionalInfoItem {
  /**
   * Key parameter.
   */
  key?: string;
  /**
   * Value parameter.
   */
  value?: string;
}

/**
 * Image Properties.
 */
export interface Image {
  /**
   * Content Id.
   */
  contentId?: string;
  /**
   * Advanced info list.
   */
  additionalInfo?: ImageAdditionalInfoItem[];
  /**
   * Status details.
   */
  status?: Status;
  /**
   * Tracking Id.
   */
  trackingId?: string;
}

/**
 * Image Id properties.
 */
export interface ImageIds {
  /**
   * Source of the content.
   */
  contentSource?: string;
  /**
   * Id of the contents.
   */
  contentIds?: number[];
  /**
   * Get Image status.
   */
  status?: Status;
  /**
   * Tracking Id.
   */
  trackingId?: string;
}

/**
 * Terms in list Id passed.
 */
export interface TermsInList {
  /**
   * Added term details.
   */
  term?: string;
}

/**
 * All term Id response properties.
 */
export interface TermsData {
  /**
   * Language of the terms.
   */
  language?: string;
  /**
   * List of terms.
   */
  terms?: TermsInList[];
  /**
   * Term Status.
   */
  status?: Status;
  /**
   * Tracking Id.
   */
  trackingId?: string;
}

/**
 * Paging details.
 */
export interface TermsPaging {
  /**
   * Total details.
   */
  total?: number;
  /**
   * Limit details.
   */
  limit?: number;
  /**
   * Offset details.
   */
  offset?: number;
  /**
   * Returned text details.
   */
  returned?: number;
}

/**
 * Terms properties.
 */
export interface Terms {
  /**
   * Term data details.
   */
  data?: TermsData;
  /**
   * Paging details.
   */
  paging?: TermsPaging;
}

/**
 * The Review object.
 */
export interface Review {
  /**
   * Id of the review.
   */
  reviewId?: string;
  /**
   * Name of the subteam.
   */
  subTeam?: string;
  /**
   * The status string (<Pending, Complete>).
   */
  status?: string;
  /**
   * Array of KeyValue with Reviewer set Tags.
   */
  reviewerResultTags?: KeyValuePair[];
  /**
   * The reviewer name.
   */
  createdBy?: string;
  /**
   * Array of KeyValue.
   */
  metadata?: KeyValuePair[];
  /**
   * The type of content.
   */
  type?: string;
  /**
   * The content value.
   */
  content?: string;
  /**
   * Id of the content.
   */
  contentId?: string;
  /**
   * The callback endpoint.
   */
  callbackEndpoint?: string;
}

/**
 * Job Execution Report Values.
 */
export interface JobExecutionReportDetails {
  /**
   * Time details.
   */
  ts?: string;
  /**
   * Message details.
   */
  msg?: string;
}

/**
 * The Job object.
 */
export interface Job {
  /**
   * The job id.
   */
  id?: string;
  /**
   * The team name associated with the job.
   */
  teamName?: string;
  /**
   * The status string (<Pending, Failed, Completed>).
   */
  status?: string;
  /**
   * The Id of the workflow.
   */
  workflowId?: string;
  /**
   * Type of the content.
   */
  type?: string;
  /**
   * The callback endpoint.
   */
  callBackEndpoint?: string;
  /**
   * Review Id if one is created.
   */
  reviewId?: string;
  /**
   * Array of KeyValue pairs.
   */
  resultMetaData?: KeyValuePair[];
  /**
   * Job execution report- Array of KeyValue pairs object.
   */
  jobExecutionReport?: JobExecutionReportDetails[];
}

/**
 * The list of job ids.
 */
export interface JobListResult {
  /**
   * The job id.
   */
  value?: string[];
}

/**
 * An interface representing JobId.
 */
export interface JobId {
  /**
   * Id of the created job.
   */
  jobId?: string;
}

/**
 * Error body.
 */
export interface ErrorModel {
  code?: string;
  message?: string;
}

/**
 * Error information returned by the API
 */
export interface APIError {
  error?: ErrorModel;
}

/**
 * An interface representing Body.
 */
export interface Body {
  /**
   * Name of the list.
   */
  name?: string;
  /**
   * Description of the list.
   */
  description?: string;
  /**
   * Metadata of the list.
   */
  metadata?: { [propertyName: string]: string };
}

/**
 * An interface representing CreateReviewBodyItemMetadataItem.
 */
export interface CreateReviewBodyItemMetadataItem {
  /**
   * Your key parameter.
   */
  key: string;
  /**
   * Your value parameter.
   */
  value: string;
}

/**
 * Schema items of the body.
 */
export interface CreateReviewBodyItem {
  /**
   * Type of the content. Possible values include: 'Image', 'Text'
   */
  type: Type;
  /**
   * Content to review.
   */
  content: string;
  /**
   * Content Identifier.
   */
  contentId: string;
  /**
   * Optional CallbackEndpoint.
   */
  callbackEndpoint?: string;
  /**
   * Optional metadata details.
   */
  metadata?: CreateReviewBodyItemMetadataItem[];
}

/**
 * An interface representing Content.
 */
export interface Content {
  /**
   * Content to evaluate for a job.
   */
  contentValue: string;
}

/**
 * An interface representing TranscriptModerationBodyItemTermsItem.
 */
export interface TranscriptModerationBodyItemTermsItem {
  /**
   * Index of the word
   */
  index: number;
  /**
   * Detected word.
   */
  term: string;
}

/**
 * Schema items of the body.
 */
export interface TranscriptModerationBodyItem {
  /**
   * Timestamp of the image.
   */
  timestamp: string;
  /**
   * Optional metadata details.
   */
  terms: TranscriptModerationBodyItemTermsItem[];
}

/**
 * An interface representing ImageUrl.
 */
export interface ImageUrl {
  /**
   * Default value: 'URL'.
   */
  dataRepresentation?: string;
  value?: string;
}

/**
 * An interface representing CreateVideoReviewsBodyItemVideoFramesItemReviewerResultTagsItem.
 */
export interface CreateVideoReviewsBodyItemVideoFramesItemReviewerResultTagsItem {
  /**
   * Your key parameter.
   */
  key: string;
  /**
   * Your value parameter.
   */
  value: string;
}

/**
 * An interface representing CreateVideoReviewsBodyItemVideoFramesItemMetadataItem.
 */
export interface CreateVideoReviewsBodyItemVideoFramesItemMetadataItem {
  /**
   * Your key parameter.
   */
  key: string;
  /**
   * Your value parameter.
   */
  value: string;
}

/**
 * An interface representing CreateVideoReviewsBodyItemVideoFramesItem.
 */
export interface CreateVideoReviewsBodyItemVideoFramesItem {
  /**
   * Id of the frame.
   */
  id: string;
  /**
   * Timestamp of the frame.
   */
  timestamp: number;
  /**
   * Frame image Url.
   */
  frameImage: string;
  reviewerResultTags?: CreateVideoReviewsBodyItemVideoFramesItemReviewerResultTagsItem[];
  /**
   * Optional metadata details.
   */
  metadata?: CreateVideoReviewsBodyItemVideoFramesItemMetadataItem[];
}

/**
 * An interface representing CreateVideoReviewsBodyItemMetadataItem.
 */
export interface CreateVideoReviewsBodyItemMetadataItem {
  /**
   * Your key parameter.
   */
  key: string;
  /**
   * Your value parameter.
   */
  value: string;
}

/**
 * Schema items of the body.
 */
export interface CreateVideoReviewsBodyItem {
  /**
   * Optional metadata details.
   */
  videoFrames?: CreateVideoReviewsBodyItemVideoFramesItem[];
  /**
   * Optional metadata details.
   */
  metadata?: CreateVideoReviewsBodyItemMetadataItem[];
  /**
   * Video content url to review.
   */
  content: string;
  /**
   * Content Identifier.
   */
  contentId: string;
  /**
   * Status of the video(Complete,Unpublished,Pending). Possible values include: 'Complete',
   * 'Unpublished', 'Pending'
   */
  status: StatusEnum;
  /**
   * Timescale of the video.
   */
  timescale?: number;
  /**
   * Optional CallbackEndpoint.
   */
  callbackEndpoint?: string;
}

/**
 * An interface representing VideoFrameBodyItemReviewerResultTagsItem.
 */
export interface VideoFrameBodyItemReviewerResultTagsItem {
  /**
   * Your key parameter.
   */
  key: string;
  /**
   * Your value parameter.
   */
  value: string;
}

/**
 * An interface representing VideoFrameBodyItemMetadataItem.
 */
export interface VideoFrameBodyItemMetadataItem {
  /**
   * Your key parameter.
   */
  key: string;
  /**
   * Your value parameter.
   */
  value: string;
}

/**
 * Schema items of the body.
 */
export interface VideoFrameBodyItem {
  /**
   * Timestamp of the frame.
   */
  timestamp: string;
  /**
   * Content to review.
   */
  frameImage: string;
  reviewerResultTags?: VideoFrameBodyItemReviewerResultTagsItem[];
  /**
   * Optional metadata details.
   */
  metadata?: VideoFrameBodyItemMetadataItem[];
}

/**
 * Optional Parameters.
 */
export interface ImageModerationFindFacesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Whether to retain the submitted image for future use; defaults to false if omitted.
   */
  cacheImage?: boolean;
}

/**
 * Optional Parameters.
 */
export interface ImageModerationOCRMethodOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Whether to retain the submitted image for future use; defaults to false if omitted.
   */
  cacheImage?: boolean;
  /**
   * When set to True, the image goes through additional processing to come with additional
   * candidates.
   *
   * image/tiff is not supported when enhanced is set to true
   *
   * Note: This impacts the response time. Default value: false.
   */
  enhanced?: boolean;
}

/**
 * Optional Parameters.
 */
export interface ImageModerationEvaluateMethodOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Whether to retain the submitted image for future use; defaults to false if omitted.
   */
  cacheImage?: boolean;
}

/**
 * Optional Parameters.
 */
export interface ImageModerationMatchMethodOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The list Id.
   */
  listId?: string;
  /**
   * Whether to retain the submitted image for future use; defaults to false if omitted.
   */
  cacheImage?: boolean;
}

/**
 * Optional Parameters.
 */
export interface ImageModerationFindFacesFileInputOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Whether to retain the submitted image for future use; defaults to false if omitted.
   */
  cacheImage?: boolean;
}

/**
 * Optional Parameters.
 */
export interface ImageModerationFindFacesUrlInputOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Whether to retain the submitted image for future use; defaults to false if omitted.
   */
  cacheImage?: boolean;
}

/**
 * Optional Parameters.
 */
export interface ImageModerationOCRUrlInputOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Whether to retain the submitted image for future use; defaults to false if omitted.
   */
  cacheImage?: boolean;
  /**
   * When set to True, the image goes through additional processing to come with additional
   * candidates.
   *
   * image/tiff is not supported when enhanced is set to true
   *
   * Note: This impacts the response time. Default value: false.
   */
  enhanced?: boolean;
}

/**
 * Optional Parameters.
 */
export interface ImageModerationOCRFileInputOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Whether to retain the submitted image for future use; defaults to false if omitted.
   */
  cacheImage?: boolean;
  /**
   * When set to True, the image goes through additional processing to come with additional
   * candidates.
   *
   * image/tiff is not supported when enhanced is set to true
   *
   * Note: This impacts the response time. Default value: false.
   */
  enhanced?: boolean;
}

/**
 * Optional Parameters.
 */
export interface ImageModerationEvaluateFileInputOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Whether to retain the submitted image for future use; defaults to false if omitted.
   */
  cacheImage?: boolean;
}

/**
 * Optional Parameters.
 */
export interface ImageModerationEvaluateUrlInputOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Whether to retain the submitted image for future use; defaults to false if omitted.
   */
  cacheImage?: boolean;
}

/**
 * Optional Parameters.
 */
export interface ImageModerationMatchUrlInputOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The list Id.
   */
  listId?: string;
  /**
   * Whether to retain the submitted image for future use; defaults to false if omitted.
   */
  cacheImage?: boolean;
}

/**
 * Optional Parameters.
 */
export interface ImageModerationMatchFileInputOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The list Id.
   */
  listId?: string;
  /**
   * Whether to retain the submitted image for future use; defaults to false if omitted.
   */
  cacheImage?: boolean;
}

/**
 * Optional Parameters.
 */
export interface TextModerationScreenTextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Language of the text.
   */
  language?: string;
  /**
   * Autocorrect text. Default value: false.
   */
  autocorrect?: boolean;
  /**
   * Detect personal identifiable information. Default value: false.
   */
  pII?: boolean;
  /**
   * The list Id.
   */
  listId?: string;
  /**
   * Classify input. Default value: false.
   */
  classify?: boolean;
}

/**
 * Optional Parameters.
 */
export interface ListManagementImageAddImageOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Tag for the image.
   */
  tag?: number;
  /**
   * The image label.
   */
  label?: string;
}

/**
 * Optional Parameters.
 */
export interface ListManagementImageAddImageUrlInputOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Tag for the image.
   */
  tag?: number;
  /**
   * The image label.
   */
  label?: string;
}

/**
 * Optional Parameters.
 */
export interface ListManagementImageAddImageFileInputOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Tag for the image.
   */
  tag?: number;
  /**
   * The image label.
   */
  label?: string;
}

/**
 * Optional Parameters.
 */
export interface ListManagementTermGetAllTermsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The pagination start index.
   */
  offset?: number;
  /**
   * The max limit.
   */
  limit?: number;
}

/**
 * Optional Parameters.
 */
export interface ReviewsCreateReviewsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * SubTeam of your team, you want to assign the created review to.
   */
  subTeam?: string;
}

/**
 * Optional Parameters.
 */
export interface ReviewsCreateJobOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Callback endpoint for posting the create job result.
   */
  callBackEndpoint?: string;
}

/**
 * Optional Parameters.
 */
export interface ReviewsAddVideoFrameOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Timescale of the video you are adding frames to.
   */
  timescale?: number;
}

/**
 * Optional Parameters.
 */
export interface ReviewsGetVideoFramesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Time stamp of the frame from where you want to start fetching the frames.
   */
  startSeed?: number;
  /**
   * Number of frames to fetch.
   */
  noOfRecords?: number;
  /**
   * Get frames filtered by tags.
   */
  filter?: string;
}

/**
 * Optional Parameters.
 */
export interface ReviewsCreateVideoReviewsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * SubTeam of your team, you want to assign the created review to.
   */
  subTeam?: string;
}

/**
 * Optional Parameters.
 */
export interface ReviewsAddVideoFrameUrlOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Timescale of the video.
   */
  timescale?: number;
}

/**
 * Optional Parameters.
 */
export interface ReviewsAddVideoFrameStreamOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Timescale of the video .
   */
  timescale?: number;
}

/**
 * Defines values for Type.
 * Possible values include: 'Image', 'Text'
 * @readonly
 * @enum {string}
 */
export type Type = 'Image' | 'Text';

/**
 * Defines values for StatusEnum.
 * Possible values include: 'Complete', 'Unpublished', 'Pending'
 * @readonly
 * @enum {string}
 */
export type StatusEnum = 'Complete' | 'Unpublished' | 'Pending';

/**
 * Defines values for TextContentType.
 * Possible values include: 'text/plain', 'text/html', 'text/xml', 'text/markdown'
 * @readonly
 * @enum {string}
 */
export type TextContentType = 'text/plain' | 'text/html' | 'text/xml' | 'text/markdown';

/**
 * Defines values for TextContentType1.
 * Possible values include: 'text/plain', 'text/html', 'text/xml', 'text/markdown'
 * @readonly
 * @enum {string}
 */
export type TextContentType1 = 'text/plain' | 'text/html' | 'text/xml' | 'text/markdown';

/**
 * Defines values for ContentType.
 * Possible values include: 'Image', 'Text', 'Video'
 * @readonly
 * @enum {string}
 */
export type ContentType = 'Image' | 'Text' | 'Video';

/**
 * Defines values for JobContentType.
 * Possible values include: 'application/json', 'image/jpeg'
 * @readonly
 * @enum {string}
 */
export type JobContentType = 'application/json' | 'image/jpeg';

/**
 * Contains response data for the findFaces operation.
 */
export type ImageModerationFindFacesResponse = FoundFaces & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FoundFaces;
    };
};

/**
 * Contains response data for the oCRMethod operation.
 */
export type ImageModerationOCRMethodResponse = OCR & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OCR;
    };
};

/**
 * Contains response data for the evaluateMethod operation.
 */
export type ImageModerationEvaluateMethodResponse = Evaluate & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Evaluate;
    };
};

/**
 * Contains response data for the matchMethod operation.
 */
export type ImageModerationMatchMethodResponse = MatchResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MatchResponse;
    };
};

/**
 * Contains response data for the findFacesFileInput operation.
 */
export type ImageModerationFindFacesFileInputResponse = FoundFaces & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FoundFaces;
    };
};

/**
 * Contains response data for the findFacesUrlInput operation.
 */
export type ImageModerationFindFacesUrlInputResponse = FoundFaces & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FoundFaces;
    };
};

/**
 * Contains response data for the oCRUrlInput operation.
 */
export type ImageModerationOCRUrlInputResponse = OCR & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OCR;
    };
};

/**
 * Contains response data for the oCRFileInput operation.
 */
export type ImageModerationOCRFileInputResponse = OCR & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OCR;
    };
};

/**
 * Contains response data for the evaluateFileInput operation.
 */
export type ImageModerationEvaluateFileInputResponse = Evaluate & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Evaluate;
    };
};

/**
 * Contains response data for the evaluateUrlInput operation.
 */
export type ImageModerationEvaluateUrlInputResponse = Evaluate & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Evaluate;
    };
};

/**
 * Contains response data for the matchUrlInput operation.
 */
export type ImageModerationMatchUrlInputResponse = MatchResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MatchResponse;
    };
};

/**
 * Contains response data for the matchFileInput operation.
 */
export type ImageModerationMatchFileInputResponse = MatchResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MatchResponse;
    };
};

/**
 * Contains response data for the screenText operation.
 */
export type TextModerationScreenTextResponse = Screen & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Screen;
    };
};

/**
 * Contains response data for the detectLanguage operation.
 */
export type TextModerationDetectLanguageResponse = DetectedLanguage & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DetectedLanguage;
    };
};

/**
 * Contains response data for the getDetails operation.
 */
export type ListManagementImageListsGetDetailsResponse = ImageList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ImageList;
    };
};

/**
 * Contains response data for the deleteMethod operation.
 */
export type ListManagementImageListsDeleteMethodResponse = {
  /**
   * The parsed response body.
   */
  body: string;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the update operation.
 */
export type ListManagementImageListsUpdateResponse = ImageList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ImageList;
    };
};

/**
 * Contains response data for the create operation.
 */
export type ListManagementImageListsCreateResponse = ImageList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ImageList;
    };
};

/**
 * Contains response data for the getAllImageLists operation.
 */
export type ListManagementImageListsGetAllImageListsResponse = Array<ImageList> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ImageList[];
    };
};

/**
 * Contains response data for the refreshIndexMethod operation.
 */
export type ListManagementImageListsRefreshIndexMethodResponse = RefreshIndex & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RefreshIndex;
    };
};

/**
 * Contains response data for the getDetails operation.
 */
export type ListManagementTermListsGetDetailsResponse = TermList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TermList;
    };
};

/**
 * Contains response data for the deleteMethod operation.
 */
export type ListManagementTermListsDeleteMethodResponse = {
  /**
   * The parsed response body.
   */
  body: string;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the update operation.
 */
export type ListManagementTermListsUpdateResponse = TermList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TermList;
    };
};

/**
 * Contains response data for the create operation.
 */
export type ListManagementTermListsCreateResponse = TermList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TermList;
    };
};

/**
 * Contains response data for the getAllTermLists operation.
 */
export type ListManagementTermListsGetAllTermListsResponse = Array<TermList> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TermList[];
    };
};

/**
 * Contains response data for the refreshIndexMethod operation.
 */
export type ListManagementTermListsRefreshIndexMethodResponse = RefreshIndex & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RefreshIndex;
    };
};

/**
 * Contains response data for the addImage operation.
 */
export type ListManagementImageAddImageResponse = Image & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Image;
    };
};

/**
 * Contains response data for the deleteAllImages operation.
 */
export type ListManagementImageDeleteAllImagesResponse = {
  /**
   * The parsed response body.
   */
  body: string;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the getAllImageIds operation.
 */
export type ListManagementImageGetAllImageIdsResponse = ImageIds & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ImageIds;
    };
};

/**
 * Contains response data for the deleteImage operation.
 */
export type ListManagementImageDeleteImageResponse = {
  /**
   * The parsed response body.
   */
  body: string;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the addImageUrlInput operation.
 */
export type ListManagementImageAddImageUrlInputResponse = Image & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Image;
    };
};

/**
 * Contains response data for the addImageFileInput operation.
 */
export type ListManagementImageAddImageFileInputResponse = Image & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Image;
    };
};

/**
 * Contains response data for the deleteTerm operation.
 */
export type ListManagementTermDeleteTermResponse = {
  /**
   * The parsed response body.
   */
  body: string;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the getAllTerms operation.
 */
export type ListManagementTermGetAllTermsResponse = Terms & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Terms;
    };
};

/**
 * Contains response data for the deleteAllTerms operation.
 */
export type ListManagementTermDeleteAllTermsResponse = {
  /**
   * The parsed response body.
   */
  body: string;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string;
    };
};

/**
 * Contains response data for the getReview operation.
 */
export type ReviewsGetReviewResponse = Review & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Review;
    };
};

/**
 * Contains response data for the getJobDetails operation.
 */
export type ReviewsGetJobDetailsResponse = Job & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Job;
    };
};

/**
 * Contains response data for the createReviews operation.
 */
export type ReviewsCreateReviewsResponse = Array<string> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string[];
    };
};

/**
 * Contains response data for the createJob operation.
 */
export type ReviewsCreateJobResponse = JobId & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: JobId;
    };
};

/**
 * Contains response data for the getVideoFrames operation.
 */
export type ReviewsGetVideoFramesResponse = Frames & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Frames;
    };
};

/**
 * Contains response data for the createVideoReviews operation.
 */
export type ReviewsCreateVideoReviewsResponse = Array<string> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string[];
    };
};
