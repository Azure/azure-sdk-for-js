"use strict";
/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
exports.__esModule = true;
var msRest = require("@azure/ms-rest-js");
var Mappers = require("../models/trainMappers");
var Parameters = require("../models/parameters");
/** Class representing a Train. */
var Train = /** @class */ (function () {
    /**
     * Create a Train.
     * @param {LUISAuthoringClientContext} client Reference to the service client.
     */
    function Train(client) {
        this.client = client;
    }
    Train.prototype.trainVersion = function (appId, versionId, options, callback) {
        return this.client.sendOperationRequest({
            appId: appId,
            versionId: versionId,
            options: options
        }, trainVersionOperationSpec, callback);
    };
    Train.prototype.getStatus = function (appId, versionId, options, callback) {
        return this.client.sendOperationRequest({
            appId: appId,
            versionId: versionId,
            options: options
        }, getStatusOperationSpec, callback);
    };
    return Train;
}());
exports.Train = Train;
// Operation Specifications
var serializer = new msRest.Serializer(Mappers);
var trainVersionOperationSpec = {
    httpMethod: "POST",
    path: "apps/{appId}/versions/{versionId}/train",
    urlParameters: [
        Parameters.endpoint,
        Parameters.appId,
        Parameters.versionId0
    ],
    responses: {
        202: {
            bodyMapper: Mappers.EnqueueTrainingResponse
        },
        "default": {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer: serializer
};
var getStatusOperationSpec = {
    httpMethod: "GET",
    path: "apps/{appId}/versions/{versionId}/train",
    urlParameters: [
        Parameters.endpoint,
        Parameters.appId,
        Parameters.versionId0
    ],
    responses: {
        200: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ModelTrainingInfo"
                        }
                    }
                }
            }
        },
        "default": {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer: serializer
};
