/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";

export const acceptLanguage: msRest.OperationParameter = {
  parameterPath: [
    "options",
    "acceptLanguage"
  ],
  mapper: {
    serializedName: "Accept-Language",
    type: {
      name: "String"
    }
  }
};
export const apiVersion: msRest.OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    required: true,
    serializedName: "api-version",
    defaultValue: '3.0',
    type: {
      name: "String"
    }
  }
};
export const category: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "category"
  ],
  mapper: {
    serializedName: "category",
    type: {
      name: "String"
    }
  }
};
export const endpoint: msRest.OperationURLParameter = {
  parameterPath: "endpoint",
  mapper: {
    required: true,
    serializedName: "Endpoint",
    defaultValue: '',
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};
export const from0: msRest.OperationQueryParameter = {
  parameterPath: "from",
  mapper: {
    required: true,
    serializedName: "from",
    type: {
      name: "String"
    }
  }
};
export const from1: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "from"
  ],
  mapper: {
    serializedName: "from",
    type: {
      name: "String"
    }
  }
};
export const fromScript0: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "fromScript"
  ],
  mapper: {
    serializedName: "fromScript",
    type: {
      name: "String"
    }
  }
};
export const fromScript1: msRest.OperationQueryParameter = {
  parameterPath: "fromScript",
  mapper: {
    required: true,
    serializedName: "fromScript",
    type: {
      name: "String"
    }
  }
};
export const includeAlignment: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "includeAlignment"
  ],
  mapper: {
    serializedName: "includeAlignment",
    type: {
      name: "Boolean"
    }
  }
};
export const includeSentenceLength: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "includeSentenceLength"
  ],
  mapper: {
    serializedName: "includeSentenceLength",
    type: {
      name: "Boolean"
    }
  }
};
export const language0: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "language"
  ],
  mapper: {
    serializedName: "Language",
    type: {
      name: "String"
    }
  }
};
export const language1: msRest.OperationQueryParameter = {
  parameterPath: "language",
  mapper: {
    required: true,
    serializedName: "language",
    type: {
      name: "String"
    }
  }
};
export const profanityAction: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "profanityAction"
  ],
  mapper: {
    serializedName: "profanityAction",
    type: {
      name: "String"
    }
  }
};
export const profanityMarker: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "profanityMarker"
  ],
  mapper: {
    serializedName: "profanityMarker",
    type: {
      name: "String"
    }
  }
};
export const scope: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "scope"
  ],
  mapper: {
    serializedName: "scope",
    constraints: {
      MaxItems: 3,
      MinItems: 0
    },
    type: {
      name: "Sequence",
      element: {
        type: {
          name: "String"
        }
      }
    }
  },
  collectionFormat: msRest.QueryCollectionFormat.Csv
};
export const script: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "script"
  ],
  mapper: {
    serializedName: "Script",
    type: {
      name: "String"
    }
  }
};
export const suggestedFrom: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "suggestedFrom"
  ],
  mapper: {
    serializedName: "suggestedFrom",
    type: {
      name: "String"
    }
  }
};
export const textType: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "textType"
  ],
  mapper: {
    serializedName: "textType",
    type: {
      name: "String"
    }
  }
};
export const to0: msRest.OperationQueryParameter = {
  parameterPath: "to",
  mapper: {
    required: true,
    serializedName: "to",
    type: {
      name: "String"
    }
  }
};
export const to1: msRest.OperationQueryParameter = {
  parameterPath: "to",
  mapper: {
    required: true,
    serializedName: "to",
    type: {
      name: "Sequence",
      element: {
        type: {
          name: "String"
        }
      }
    }
  },
  collectionFormat: msRest.QueryCollectionFormat.Csv
};
export const toScript0: msRest.OperationQueryParameter = {
  parameterPath: [
    "options",
    "toScript"
  ],
  mapper: {
    serializedName: "toScript",
    type: {
      name: "Sequence",
      element: {
        type: {
          name: "String"
        }
      }
    }
  },
  collectionFormat: msRest.QueryCollectionFormat.Csv
};
export const toScript1: msRest.OperationQueryParameter = {
  parameterPath: "toScript",
  mapper: {
    required: true,
    serializedName: "toScript",
    type: {
      name: "String"
    }
  }
};
export const xClientTraceId: msRest.OperationParameter = {
  parameterPath: [
    "options",
    "xClientTraceId"
  ],
  mapper: {
    serializedName: "X-ClientTraceId",
    type: {
      name: "String"
    }
  }
};
