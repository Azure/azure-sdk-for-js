/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { ServiceClientOptions } from "@azure/ms-rest-js";
import * as msRest from "@azure/ms-rest-js";

/**
 * Contains the possible cases for ResponseBase.
 */
export type ResponseBaseUnion = ResponseBase | IdentifiableUnion;

/**
 * Response base.
 */
export interface ResponseBase {
  /**
   * Polymorphic Discriminator
   */
  _type: "ResponseBase";
}

/**
 * Contains the possible cases for Identifiable.
 */
export type IdentifiableUnion = Identifiable | ResponseUnion;

/**
 * Defines the identity of a resource.
 */
export interface Identifiable {
  /**
   * Polymorphic Discriminator
   */
  _type: "Identifiable";
  /**
   * A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
}

/**
 * Contains the possible cases for Response.
 */
export type ResponseUnion = Response | ImageKnowledge | ErrorResponse | ThingUnion;

/**
 * Defines a response. All schemas that return at the root of the response must inherit from this
 * object.
 */
export interface Response {
  /**
   * Polymorphic Discriminator
   */
  _type: "Response";
  /**
   * A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The URL that returns this resource. To use the URL, append query parameters as appropriate and
   * include the Ocp-Apim-Subscription-Key header.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly readLink?: string;
  /**
   * The URL to Bing's search result for this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly webSearchUrl?: string;
}

/**
 * Contains the possible cases for Thing.
 */
export type ThingUnion = Thing | ImageTag | Organization | OfferUnion | CreativeWorkUnion | Person | IntangibleUnion;

/**
 * Defines a thing.
 */
export interface Thing {
  /**
   * Polymorphic Discriminator
   */
  _type: "Thing";
  /**
   * A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The URL that returns this resource. To use the URL, append query parameters as appropriate and
   * include the Ocp-Apim-Subscription-Key header.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly readLink?: string;
  /**
   * The URL to Bing's search result for this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The URL to get more information about the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly url?: string;
  /**
   * An image of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * An alias for the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly alternateName?: string;
  /**
   * An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly bingId?: string;
}

/**
 * Contains the possible cases for Intangible.
 */
export type IntangibleUnion = Intangible | StructuredValueUnion;

/**
 * A utility class that serves as the umbrella for a number of 'intangible' things such as
 * quantities, structured values, etc.
 */
export interface Intangible {
  /**
   * Polymorphic Discriminator
   */
  _type: "Intangible";
  /**
   * A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The URL that returns this resource. To use the URL, append query parameters as appropriate and
   * include the Ocp-Apim-Subscription-Key header.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly readLink?: string;
  /**
   * The URL to Bing's search result for this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The URL to get more information about the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly url?: string;
  /**
   * An image of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * An alias for the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly alternateName?: string;
  /**
   * An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly bingId?: string;
}

/**
 * Contains the possible cases for StructuredValue.
 */
export type StructuredValueUnion = StructuredValue | Point2D | NormalizedQuadrilateral;

/**
 * An interface representing StructuredValue.
 */
export interface StructuredValue {
  /**
   * Polymorphic Discriminator
   */
  _type: "StructuredValue";
  /**
   * A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The URL that returns this resource. To use the URL, append query parameters as appropriate and
   * include the Ocp-Apim-Subscription-Key header.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly readLink?: string;
  /**
   * The URL to Bing's search result for this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The URL to get more information about the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly url?: string;
  /**
   * An image of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * An alias for the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly alternateName?: string;
  /**
   * An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly bingId?: string;
}

/**
 * Defines a 2D point with X and Y coordinates.
 */
export interface Point2D {
  /**
   * Polymorphic Discriminator
   */
  _type: "Point2D";
  /**
   * A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The URL that returns this resource. To use the URL, append query parameters as appropriate and
   * include the Ocp-Apim-Subscription-Key header.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly readLink?: string;
  /**
   * The URL to Bing's search result for this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The URL to get more information about the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly url?: string;
  /**
   * An image of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * An alias for the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly alternateName?: string;
  /**
   * An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly bingId?: string;
  /**
   * The x-coordinate of the point.
   */
  x: number;
  /**
   * The y-coordinate of the point.
   */
  y: number;
}

/**
 * Defines a region of an image. The region is a convex quadrilateral defined by coordinates of its
 * top left, top right, bottom left, and bottom right points. The coordinates are fractional values
 * of the original image's width and height in the range 0.0 through 1.0.
 */
export interface NormalizedQuadrilateral {
  /**
   * Polymorphic Discriminator
   */
  _type: "NormalizedQuadrilateral";
  /**
   * A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The URL that returns this resource. To use the URL, append query parameters as appropriate and
   * include the Ocp-Apim-Subscription-Key header.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly readLink?: string;
  /**
   * The URL to Bing's search result for this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The URL to get more information about the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly url?: string;
  /**
   * An image of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * An alias for the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly alternateName?: string;
  /**
   * An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly bingId?: string;
  /**
   * The top left corner coordinate.
   */
  topLeft: Point2D;
  /**
   * The top right corner coordinate.
   */
  topRight: Point2D;
  /**
   * The bottom right corner coordinate.
   */
  bottomRight: Point2D;
  /**
   * The bottom left corner coordinate.
   */
  bottomLeft: Point2D;
}

/**
 * Defines an image region relevant to the ImageTag.
 */
export interface ImageTagRegion {
  /**
   * A rectangle that outlines the area of interest for this tag.
   */
  queryRectangle: NormalizedQuadrilateral;
  /**
   * A recommended rectangle to show to the user.
   */
  displayRectangle: NormalizedQuadrilateral;
}

/**
 * Contains the possible cases for CreativeWork.
 */
export type CreativeWorkUnion = CreativeWork | ActionUnion | MediaObjectUnion | Recipe;

/**
 * The most generic kind of creative work, including books, movies, photographs, software programs,
 * etc.
 */
export interface CreativeWork {
  /**
   * Polymorphic Discriminator
   */
  _type: "CreativeWork";
  /**
   * A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The URL that returns this resource. To use the URL, append query parameters as appropriate and
   * include the Ocp-Apim-Subscription-Key header.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly readLink?: string;
  /**
   * The URL to Bing's search result for this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The URL to get more information about the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly url?: string;
  /**
   * An image of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * An alias for the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly alternateName?: string;
  /**
   * An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly bingId?: string;
  /**
   * The URL to a thumbnail of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly thumbnailUrl?: string;
  /**
   * The source of the creative work.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provider?: ThingUnion[];
  /**
   * The date on which the CreativeWork was published.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly datePublished?: string;
  /**
   * Text content of this creative work.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly text?: string;
}

/**
 * Contains the possible cases for Action.
 */
export type ActionUnion = Action | ImageActionUnion;

/**
 * Defines an action.
 */
export interface Action {
  /**
   * Polymorphic Discriminator
   */
  _type: "Action";
  /**
   * A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The URL that returns this resource. To use the URL, append query parameters as appropriate and
   * include the Ocp-Apim-Subscription-Key header.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly readLink?: string;
  /**
   * The URL to Bing's search result for this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The URL to get more information about the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly url?: string;
  /**
   * An image of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * An alias for the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly alternateName?: string;
  /**
   * An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly bingId?: string;
  /**
   * The URL to a thumbnail of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly thumbnailUrl?: string;
  /**
   * The source of the creative work.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provider?: ThingUnion[];
  /**
   * The date on which the CreativeWork was published.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly datePublished?: string;
  /**
   * Text content of this creative work.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly text?: string;
  /**
   * The result produced in the action.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly result?: ThingUnion[];
  /**
   * A display name for the action.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly displayName?: string;
  /**
   * A Boolean representing whether this result is the top action.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isTopAction?: boolean;
  /**
   * Use this URL to get additional data to determine how to take the appropriate action. For
   * example, the serviceUrl might return JSON along with an image URL.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly serviceUrl?: string;
}

/**
 * Contains the possible cases for ImageAction.
 */
export type ImageActionUnion = ImageAction | ImageEntityAction | ImageModuleAction | ImageRecipesAction | ImageRelatedSearchesAction | ImageShoppingSourcesAction;

/**
 * Defines an image action.
 */
export interface ImageAction {
  /**
   * Polymorphic Discriminator
   */
  _type: "ImageAction";
  /**
   * A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The URL that returns this resource. To use the URL, append query parameters as appropriate and
   * include the Ocp-Apim-Subscription-Key header.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly readLink?: string;
  /**
   * The URL to Bing's search result for this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The URL to get more information about the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly url?: string;
  /**
   * An image of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * An alias for the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly alternateName?: string;
  /**
   * An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly bingId?: string;
  /**
   * The URL to a thumbnail of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly thumbnailUrl?: string;
  /**
   * The source of the creative work.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provider?: ThingUnion[];
  /**
   * The date on which the CreativeWork was published.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly datePublished?: string;
  /**
   * Text content of this creative work.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly text?: string;
  /**
   * The result produced in the action.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly result?: ThingUnion[];
  /**
   * A display name for the action.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly displayName?: string;
  /**
   * A Boolean representing whether this result is the top action.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isTopAction?: boolean;
  /**
   * Use this URL to get additional data to determine how to take the appropriate action. For
   * example, the serviceUrl might return JSON along with an image URL.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly serviceUrl?: string;
  /**
   * A string representing the type of action.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly actionType?: string;
}

/**
 * A visual search tag.
 */
export interface ImageTag {
  /**
   * Polymorphic Discriminator
   */
  _type: "ImageTag";
  /**
   * A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The URL that returns this resource. To use the URL, append query parameters as appropriate and
   * include the Ocp-Apim-Subscription-Key header.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly readLink?: string;
  /**
   * The URL to Bing's search result for this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The URL to get more information about the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly url?: string;
  /**
   * An image of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * An alias for the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly alternateName?: string;
  /**
   * An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly bingId?: string;
  /**
   * Display name for this tag. For the default tag, the display name is empty.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly displayName?: string;
  /**
   * The bounding box for this tag. For the default tag, there is no bounding box.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly boundingBox?: ImageTagRegion;
  /**
   * Actions within this tag. The order of the items denotes the default ranking order of these
   * actions, with the first action being the most likely user intent.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly actions?: ImageActionUnion[];
}

/**
 * Defines an organization.
 */
export interface Organization {
  /**
   * Polymorphic Discriminator
   */
  _type: "Organization";
  /**
   * A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The URL that returns this resource. To use the URL, append query parameters as appropriate and
   * include the Ocp-Apim-Subscription-Key header.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly readLink?: string;
  /**
   * The URL to Bing's search result for this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The URL to get more information about the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly url?: string;
  /**
   * An image of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * An alias for the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly alternateName?: string;
  /**
   * An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly bingId?: string;
}

/**
 * Contains the possible cases for PropertiesItem.
 */
export type PropertiesItemUnion = PropertiesItem | RatingUnion;

/**
 * Defines an item.
 */
export interface PropertiesItem {
  /**
   * Polymorphic Discriminator
   */
  _type: "Properties/Item";
  /**
   * Text representation of an item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly text?: string;
}

/**
 * Contains the possible cases for Rating.
 */
export type RatingUnion = Rating | AggregateRating;

/**
 * Defines a rating.
 */
export interface Rating {
  /**
   * Polymorphic Discriminator
   */
  _type: "Rating";
  /**
   * Text representation of an item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly text?: string;
  /**
   * The mean (average) rating. The possible values are 1.0 through 5.0.
   */
  ratingValue: number;
  /**
   * The highest rated review. The possible values are 1.0 through 5.0.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly bestRating?: number;
}

/**
 * Defines the metrics that indicate how well an item was rated by others.
 */
export interface AggregateRating {
  /**
   * Polymorphic Discriminator
   */
  _type: "AggregateRating";
  /**
   * Text representation of an item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly text?: string;
  /**
   * The mean (average) rating. The possible values are 1.0 through 5.0.
   */
  ratingValue: number;
  /**
   * The highest rated review. The possible values are 1.0 through 5.0.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly bestRating?: number;
  /**
   * The number of times the recipe has been rated or reviewed.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly reviewCount?: number;
}

/**
 * Contains the possible cases for Offer.
 */
export type OfferUnion = Offer | AggregateOffer;

/**
 * Defines a merchant's offer.
 */
export interface Offer {
  /**
   * Polymorphic Discriminator
   */
  _type: "Offer";
  /**
   * A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The URL that returns this resource. To use the URL, append query parameters as appropriate and
   * include the Ocp-Apim-Subscription-Key header.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly readLink?: string;
  /**
   * The URL to Bing's search result for this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The URL to get more information about the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly url?: string;
  /**
   * An image of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * An alias for the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly alternateName?: string;
  /**
   * An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly bingId?: string;
  /**
   * Seller for this offer.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly seller?: Organization;
  /**
   * The item's price.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly price?: number;
  /**
   * The monetary currency. For example, USD. Possible values include: 'USD', 'CAD', 'GBP', 'EUR',
   * 'COP', 'JPY', 'CNY', 'AUD', 'INR', 'AED', 'AFN', 'ALL', 'AMD', 'ANG', 'AOA', 'ARS', 'AWG',
   * 'AZN', 'BAM', 'BBD', 'BDT', 'BGN', 'BHD', 'BIF', 'BMD', 'BND', 'BOB', 'BOV', 'BRL', 'BSD',
   * 'BTN', 'BWP', 'BYR', 'BZD', 'CDF', 'CHE', 'CHF', 'CHW', 'CLF', 'CLP', 'COU', 'CRC', 'CUC',
   * 'CUP', 'CVE', 'CZK', 'DJF', 'DKK', 'DOP', 'DZD', 'EGP', 'ERN', 'ETB', 'FJD', 'FKP', 'GEL',
   * 'GHS', 'GIP', 'GMD', 'GNF', 'GTQ', 'GYD', 'HKD', 'HNL', 'HRK', 'HTG', 'HUF', 'IDR', 'ILS',
   * 'IQD', 'IRR', 'ISK', 'JMD', 'JOD', 'KES', 'KGS', 'KHR', 'KMF', 'KPW', 'KRW', 'KWD', 'KYD',
   * 'KZT', 'LAK', 'LBP', 'LKR', 'LRD', 'LSL', 'LYD', 'MAD', 'MDL', 'MGA', 'MKD', 'MMK', 'MNT',
   * 'MOP', 'MRO', 'MUR', 'MVR', 'MWK', 'MXN', 'MXV', 'MYR', 'MZN', 'NAD', 'NGN', 'NIO', 'NOK',
   * 'NPR', 'NZD', 'OMR', 'PAB', 'PEN', 'PGK', 'PHP', 'PKR', 'PLN', 'PYG', 'QAR', 'RON', 'RSD',
   * 'RUB', 'RWF', 'SAR', 'SBD', 'SCR', 'SDG', 'SEK', 'SGD', 'SHP', 'SLL', 'SOS', 'SRD', 'SSP',
   * 'STD', 'SYP', 'SZL', 'THB', 'TJS', 'TMT', 'TND', 'TOP', 'TRY', 'TTD', 'TWD', 'TZS', 'UAH',
   * 'UGX', 'UYU', 'UZS', 'VEF', 'VND', 'VUV', 'WST', 'XAF', 'XCD', 'XOF', 'XPF', 'YER', 'ZAR',
   * 'ZMW'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**.
   * Default value: 'USD'.
   */
  readonly priceCurrency?: Currency;
  /**
   * The item's availability. The following are the possible values: Discontinued, InStock,
   * InStoreOnly, LimitedAvailability, OnlineOnly, OutOfStock, PreOrder, SoldOut. Possible values
   * include: 'Discontinued', 'InStock', 'InStoreOnly', 'LimitedAvailability', 'OnlineOnly',
   * 'OutOfStock', 'PreOrder', 'SoldOut'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly availability?: ItemAvailability;
  /**
   * An aggregated rating that indicates how well the product has been rated by others.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly aggregateRating?: AggregateRating;
  /**
   * The last date that the offer was updated. The date is in the form YYYY-MM-DD.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastUpdated?: string;
}

/**
 * Defines a list of offers from merchants that are related to the image.
 */
export interface AggregateOffer {
  /**
   * Polymorphic Discriminator
   */
  _type: "AggregateOffer";
  /**
   * A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The URL that returns this resource. To use the URL, append query parameters as appropriate and
   * include the Ocp-Apim-Subscription-Key header.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly readLink?: string;
  /**
   * The URL to Bing's search result for this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The URL to get more information about the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly url?: string;
  /**
   * An image of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * An alias for the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly alternateName?: string;
  /**
   * An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly bingId?: string;
  /**
   * Seller for this offer.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly seller?: Organization;
  /**
   * The item's price.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly price?: number;
  /**
   * The monetary currency. For example, USD. Possible values include: 'USD', 'CAD', 'GBP', 'EUR',
   * 'COP', 'JPY', 'CNY', 'AUD', 'INR', 'AED', 'AFN', 'ALL', 'AMD', 'ANG', 'AOA', 'ARS', 'AWG',
   * 'AZN', 'BAM', 'BBD', 'BDT', 'BGN', 'BHD', 'BIF', 'BMD', 'BND', 'BOB', 'BOV', 'BRL', 'BSD',
   * 'BTN', 'BWP', 'BYR', 'BZD', 'CDF', 'CHE', 'CHF', 'CHW', 'CLF', 'CLP', 'COU', 'CRC', 'CUC',
   * 'CUP', 'CVE', 'CZK', 'DJF', 'DKK', 'DOP', 'DZD', 'EGP', 'ERN', 'ETB', 'FJD', 'FKP', 'GEL',
   * 'GHS', 'GIP', 'GMD', 'GNF', 'GTQ', 'GYD', 'HKD', 'HNL', 'HRK', 'HTG', 'HUF', 'IDR', 'ILS',
   * 'IQD', 'IRR', 'ISK', 'JMD', 'JOD', 'KES', 'KGS', 'KHR', 'KMF', 'KPW', 'KRW', 'KWD', 'KYD',
   * 'KZT', 'LAK', 'LBP', 'LKR', 'LRD', 'LSL', 'LYD', 'MAD', 'MDL', 'MGA', 'MKD', 'MMK', 'MNT',
   * 'MOP', 'MRO', 'MUR', 'MVR', 'MWK', 'MXN', 'MXV', 'MYR', 'MZN', 'NAD', 'NGN', 'NIO', 'NOK',
   * 'NPR', 'NZD', 'OMR', 'PAB', 'PEN', 'PGK', 'PHP', 'PKR', 'PLN', 'PYG', 'QAR', 'RON', 'RSD',
   * 'RUB', 'RWF', 'SAR', 'SBD', 'SCR', 'SDG', 'SEK', 'SGD', 'SHP', 'SLL', 'SOS', 'SRD', 'SSP',
   * 'STD', 'SYP', 'SZL', 'THB', 'TJS', 'TMT', 'TND', 'TOP', 'TRY', 'TTD', 'TWD', 'TZS', 'UAH',
   * 'UGX', 'UYU', 'UZS', 'VEF', 'VND', 'VUV', 'WST', 'XAF', 'XCD', 'XOF', 'XPF', 'YER', 'ZAR',
   * 'ZMW'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**.
   * Default value: 'USD'.
   */
  readonly priceCurrency?: Currency;
  /**
   * The item's availability. The following are the possible values: Discontinued, InStock,
   * InStoreOnly, LimitedAvailability, OnlineOnly, OutOfStock, PreOrder, SoldOut. Possible values
   * include: 'Discontinued', 'InStock', 'InStoreOnly', 'LimitedAvailability', 'OnlineOnly',
   * 'OutOfStock', 'PreOrder', 'SoldOut'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly availability?: ItemAvailability;
  /**
   * An aggregated rating that indicates how well the product has been rated by others.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly aggregateRating?: AggregateRating;
  /**
   * The last date that the offer was updated. The date is in the form YYYY-MM-DD.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastUpdated?: string;
  /**
   * A list of offers from merchants that have offerings related to the image.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly offers?: OfferUnion[];
}

/**
 * Defines a count of the number of websites where you can shop or perform other actions related to
 * the image.
 */
export interface ImagesImageMetadata {
  /**
   * The number of websites that sell the products seen in the image.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly shoppingSourcesCount?: number;
  /**
   * The number of websites that offer recipes of the food seen in the image.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly recipeSourcesCount?: number;
  /**
   * A summary of the online offers of products found in the image. For example, if the image is of
   * a dress, the offer might identify the lowest price and the number of offers found. Only
   * visually similar products insights include this field. The offer includes the following
   * fields: Name, AggregateRating, OfferCount, and LowPrice.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly aggregateOffer?: AggregateOffer;
}

/**
 * Contains the possible cases for MediaObject.
 */
export type MediaObjectUnion = MediaObject | ImageObject;

/**
 * Defines a media object.
 */
export interface MediaObject {
  /**
   * Polymorphic Discriminator
   */
  _type: "MediaObject";
  /**
   * A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The URL that returns this resource. To use the URL, append query parameters as appropriate and
   * include the Ocp-Apim-Subscription-Key header.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly readLink?: string;
  /**
   * The URL to Bing's search result for this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The URL to get more information about the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly url?: string;
  /**
   * An image of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * An alias for the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly alternateName?: string;
  /**
   * An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly bingId?: string;
  /**
   * The URL to a thumbnail of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly thumbnailUrl?: string;
  /**
   * The source of the creative work.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provider?: ThingUnion[];
  /**
   * The date on which the CreativeWork was published.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly datePublished?: string;
  /**
   * Text content of this creative work.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly text?: string;
  /**
   * Original URL to retrieve the source (file) for the media object (e.g., the source URL for the
   * image).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly contentUrl?: string;
  /**
   * URL of the page that hosts the media object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly hostPageUrl?: string;
  /**
   * Size of the media object content. Use format "value unit" (e.g., "1024 B").
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly contentSize?: string;
  /**
   * Encoding format (e.g., png, gif, jpeg, etc).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly encodingFormat?: string;
  /**
   * Display URL of the page that hosts the media object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly hostPageDisplayUrl?: string;
  /**
   * The width of the media object, in pixels.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly width?: number;
  /**
   * The height of the media object, in pixels.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly height?: number;
}

/**
 * Defines an image.
 */
export interface ImageObject {
  /**
   * Polymorphic Discriminator
   */
  _type: "ImageObject";
  /**
   * A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The URL that returns this resource. To use the URL, append query parameters as appropriate and
   * include the Ocp-Apim-Subscription-Key header.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly readLink?: string;
  /**
   * The URL to Bing's search result for this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The URL to get more information about the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly url?: string;
  /**
   * An image of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * An alias for the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly alternateName?: string;
  /**
   * An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly bingId?: string;
  /**
   * The URL to a thumbnail of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly thumbnailUrl?: string;
  /**
   * The source of the creative work.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provider?: ThingUnion[];
  /**
   * The date on which the CreativeWork was published.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly datePublished?: string;
  /**
   * Text content of this creative work.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly text?: string;
  /**
   * Original URL to retrieve the source (file) for the media object (e.g., the source URL for the
   * image).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly contentUrl?: string;
  /**
   * URL of the page that hosts the media object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly hostPageUrl?: string;
  /**
   * Size of the media object content. Use format "value unit" (e.g., "1024 B").
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly contentSize?: string;
  /**
   * Encoding format (e.g., png, gif, jpeg, etc).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly encodingFormat?: string;
  /**
   * Display URL of the page that hosts the media object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly hostPageDisplayUrl?: string;
  /**
   * The width of the media object, in pixels.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly width?: number;
  /**
   * The height of the media object, in pixels.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly height?: number;
  /**
   * The URL to a thumbnail of the image.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly thumbnail?: ImageObject;
  /**
   * The token that you use in a subsequent call to Visual Search API to get additional information
   * about the image. For information about using this token, see the imageInsightsToken field
   * inside the knowledgeRequest request parameter.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly imageInsightsToken?: string;
  /**
   * A count of the number of websites where you can shop or perform other actions related to the
   * image. For example, if the image is of an apple pie, this object includes a count of the
   * number of websites where you can buy an apple pie. To indicate the number of offers in your
   * UX, include badging such as a shopping cart icon that contains the count. When the user clicks
   * on the icon, use imageInsightsToken in a subsequent Visual Search API call to get the list of
   * shopping websites.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly insightsMetadata?: ImagesImageMetadata;
  /**
   * Unique Id for the image.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly imageId?: string;
  /**
   * A three-byte hexadecimal number that represents the color that dominates the image. Use the
   * color as the temporary background in your client until the image is loaded.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly accentColor?: string;
  /**
   * For internal use only.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly visualWords?: string;
}

/**
 * Defines a visual search API response.
 */
export interface ImageKnowledge {
  /**
   * Polymorphic Discriminator
   */
  _type: "ImageKnowledge";
  /**
   * A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The URL that returns this resource. To use the URL, append query parameters as appropriate and
   * include the Ocp-Apim-Subscription-Key header.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly readLink?: string;
  /**
   * The URL to Bing's search result for this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * A list of visual search tags.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly tags?: ImageTag[];
  /**
   * Image object containing metadata about the requested image.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
}

/**
 * Defines the error that occurred.
 */
export interface ErrorModel {
  /**
   * The error code that identifies the category of error. Possible values include: 'None',
   * 'ServerError', 'InvalidRequest', 'RateLimitExceeded', 'InvalidAuthorization',
   * 'InsufficientAuthorization'. Default value: 'None'.
   */
  code: ErrorCode;
  /**
   * The error code that further helps to identify the error. Possible values include:
   * 'UnexpectedError', 'ResourceError', 'NotImplemented', 'ParameterMissing',
   * 'ParameterInvalidValue', 'HttpNotAllowed', 'Blocked', 'AuthorizationMissing',
   * 'AuthorizationRedundancy', 'AuthorizationDisabled', 'AuthorizationExpired'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly subCode?: ErrorSubCode;
  /**
   * A description of the error.
   */
  message: string;
  /**
   * A description that provides additional information about the error.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly moreDetails?: string;
  /**
   * The parameter in the request that caused the error.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly parameter?: string;
  /**
   * The parameter's value in the request that was not valid.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly value?: string;
}

/**
 * The top-level response that represents a failed request.
 */
export interface ErrorResponse {
  /**
   * Polymorphic Discriminator
   */
  _type: "ErrorResponse";
  /**
   * A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The URL that returns this resource. To use the URL, append query parameters as appropriate and
   * include the Ocp-Apim-Subscription-Key header.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly readLink?: string;
  /**
   * The URL to Bing's search result for this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * A list of errors that describe the reasons why the request failed.
   */
  errors: ErrorModel[];
}

/**
 * Defines a person.
 */
export interface Person {
  /**
   * Polymorphic Discriminator
   */
  _type: "Person";
  /**
   * A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The URL that returns this resource. To use the URL, append query parameters as appropriate and
   * include the Ocp-Apim-Subscription-Key header.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly readLink?: string;
  /**
   * The URL to Bing's search result for this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The URL to get more information about the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly url?: string;
  /**
   * An image of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * An alias for the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly alternateName?: string;
  /**
   * An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly bingId?: string;
  /**
   * The person's job title.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly jobTitle?: string;
  /**
   * The URL of the person's twitter profile.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly twitterProfile?: string;
}

/**
 * Defines an entity action.
 */
export interface ImageEntityAction {
  /**
   * Polymorphic Discriminator
   */
  _type: "ImageEntityAction";
  /**
   * A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The URL that returns this resource. To use the URL, append query parameters as appropriate and
   * include the Ocp-Apim-Subscription-Key header.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly readLink?: string;
  /**
   * The URL to Bing's search result for this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The URL to get more information about the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly url?: string;
  /**
   * An image of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * An alias for the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly alternateName?: string;
  /**
   * An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly bingId?: string;
  /**
   * The URL to a thumbnail of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly thumbnailUrl?: string;
  /**
   * The source of the creative work.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provider?: ThingUnion[];
  /**
   * The date on which the CreativeWork was published.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly datePublished?: string;
  /**
   * Text content of this creative work.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly text?: string;
  /**
   * The result produced in the action.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly result?: ThingUnion[];
  /**
   * A display name for the action.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly displayName?: string;
  /**
   * A Boolean representing whether this result is the top action.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isTopAction?: boolean;
  /**
   * Use this URL to get additional data to determine how to take the appropriate action. For
   * example, the serviceUrl might return JSON along with an image URL.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly serviceUrl?: string;
  /**
   * A string representing the type of action.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly actionType?: string;
}

/**
 * Defines a list of images.
 */
export interface ImagesModule {
  /**
   * A list of images.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly value?: ImageObject[];
}

/**
 * Defines an image list action.
 */
export interface ImageModuleAction {
  /**
   * Polymorphic Discriminator
   */
  _type: "ImageModuleAction";
  /**
   * A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The URL that returns this resource. To use the URL, append query parameters as appropriate and
   * include the Ocp-Apim-Subscription-Key header.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly readLink?: string;
  /**
   * The URL to Bing's search result for this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The URL to get more information about the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly url?: string;
  /**
   * An image of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * An alias for the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly alternateName?: string;
  /**
   * An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly bingId?: string;
  /**
   * The URL to a thumbnail of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly thumbnailUrl?: string;
  /**
   * The source of the creative work.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provider?: ThingUnion[];
  /**
   * The date on which the CreativeWork was published.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly datePublished?: string;
  /**
   * Text content of this creative work.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly text?: string;
  /**
   * The result produced in the action.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly result?: ThingUnion[];
  /**
   * A display name for the action.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly displayName?: string;
  /**
   * A Boolean representing whether this result is the top action.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isTopAction?: boolean;
  /**
   * Use this URL to get additional data to determine how to take the appropriate action. For
   * example, the serviceUrl might return JSON along with an image URL.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly serviceUrl?: string;
  /**
   * A string representing the type of action.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly actionType?: string;
  /**
   * A list of images.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly data?: ImagesModule;
}

/**
 * Defines a cooking recipe.
 */
export interface Recipe {
  /**
   * Polymorphic Discriminator
   */
  _type: "Recipe";
  /**
   * A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The URL that returns this resource. To use the URL, append query parameters as appropriate and
   * include the Ocp-Apim-Subscription-Key header.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly readLink?: string;
  /**
   * The URL to Bing's search result for this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The URL to get more information about the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly url?: string;
  /**
   * An image of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * An alias for the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly alternateName?: string;
  /**
   * An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly bingId?: string;
  /**
   * The URL to a thumbnail of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly thumbnailUrl?: string;
  /**
   * The source of the creative work.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provider?: ThingUnion[];
  /**
   * The date on which the CreativeWork was published.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly datePublished?: string;
  /**
   * Text content of this creative work.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly text?: string;
  /**
   * The amount of time the food takes to cook. For example, PT25M. For information about the time
   * format, see http://en.wikipedia.org/wiki/ISO_8601#Durations.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly cookTime?: string;
  /**
   * The amount of time required to prepare the ingredients. For example, PT15M. For information
   * about the time format, see http://en.wikipedia.org/wiki/ISO_8601#Durations.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly prepTime?: string;
  /**
   * The total amount of time it takes to prepare and cook the recipe. For example, PT45M. For
   * information about the time format, see http://en.wikipedia.org/wiki/ISO_8601#Durations.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly totalTime?: string;
}

/**
 * Defines a list of recipes.
 */
export interface RecipesModule {
  /**
   * A list of recipes.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly value?: Recipe[];
}

/**
 * Defines an recipe action.
 */
export interface ImageRecipesAction {
  /**
   * Polymorphic Discriminator
   */
  _type: "ImageRecipesAction";
  /**
   * A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The URL that returns this resource. To use the URL, append query parameters as appropriate and
   * include the Ocp-Apim-Subscription-Key header.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly readLink?: string;
  /**
   * The URL to Bing's search result for this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The URL to get more information about the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly url?: string;
  /**
   * An image of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * An alias for the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly alternateName?: string;
  /**
   * An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly bingId?: string;
  /**
   * The URL to a thumbnail of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly thumbnailUrl?: string;
  /**
   * The source of the creative work.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provider?: ThingUnion[];
  /**
   * The date on which the CreativeWork was published.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly datePublished?: string;
  /**
   * Text content of this creative work.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly text?: string;
  /**
   * The result produced in the action.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly result?: ThingUnion[];
  /**
   * A display name for the action.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly displayName?: string;
  /**
   * A Boolean representing whether this result is the top action.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isTopAction?: boolean;
  /**
   * Use this URL to get additional data to determine how to take the appropriate action. For
   * example, the serviceUrl might return JSON along with an image URL.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly serviceUrl?: string;
  /**
   * A string representing the type of action.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly actionType?: string;
  /**
   * A list of recipes related to the image.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly data?: RecipesModule;
}

/**
 * Defines a search query.
 */
export interface Query {
  /**
   * The query string. Use this string as the query term in a new search request.
   */
  text: string;
  /**
   * The display version of the query term.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly displayText?: string;
  /**
   * The URL that takes the user to the Bing search results page for the query.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * The URL that you use to get the results of the related search. Before using the URL, you must
   * append query parameters as appropriate and include the Ocp-Apim-Subscription-Key header. Use
   * this URL if you're displaying the results in your own user interface. Otherwise, use the
   * webSearchUrl URL.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly searchLink?: string;
  /**
   * The URL to a thumbnail of a related image.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly thumbnail?: ImageObject;
}

/**
 * Defines a list of related searches.
 */
export interface RelatedSearchesModule {
  /**
   * A list of related searches.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly value?: Query[];
}

/**
 * Defines an related search action.
 */
export interface ImageRelatedSearchesAction {
  /**
   * Polymorphic Discriminator
   */
  _type: "ImageRelatedSearchesAction";
  /**
   * A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The URL that returns this resource. To use the URL, append query parameters as appropriate and
   * include the Ocp-Apim-Subscription-Key header.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly readLink?: string;
  /**
   * The URL to Bing's search result for this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The URL to get more information about the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly url?: string;
  /**
   * An image of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * An alias for the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly alternateName?: string;
  /**
   * An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly bingId?: string;
  /**
   * The URL to a thumbnail of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly thumbnailUrl?: string;
  /**
   * The source of the creative work.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provider?: ThingUnion[];
  /**
   * The date on which the CreativeWork was published.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly datePublished?: string;
  /**
   * Text content of this creative work.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly text?: string;
  /**
   * The result produced in the action.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly result?: ThingUnion[];
  /**
   * A display name for the action.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly displayName?: string;
  /**
   * A Boolean representing whether this result is the top action.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isTopAction?: boolean;
  /**
   * Use this URL to get additional data to determine how to take the appropriate action. For
   * example, the serviceUrl might return JSON along with an image URL.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly serviceUrl?: string;
  /**
   * A string representing the type of action.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly actionType?: string;
  /**
   * A list of queries related to the image.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly data?: RelatedSearchesModule;
}

/**
 * Defines a shopping sources action.
 */
export interface ImageShoppingSourcesAction {
  /**
   * Polymorphic Discriminator
   */
  _type: "ImageShoppingSourcesAction";
  /**
   * A String identifier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The URL that returns this resource. To use the URL, append query parameters as appropriate and
   * include the Ocp-Apim-Subscription-Key header.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly readLink?: string;
  /**
   * The URL to Bing's search result for this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly webSearchUrl?: string;
  /**
   * The name of the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The URL to get more information about the thing represented by this object.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly url?: string;
  /**
   * An image of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly image?: ImageObject;
  /**
   * A short description of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
  /**
   * An alias for the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly alternateName?: string;
  /**
   * An ID that uniquely identifies this item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly bingId?: string;
  /**
   * The URL to a thumbnail of the item.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly thumbnailUrl?: string;
  /**
   * The source of the creative work.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provider?: ThingUnion[];
  /**
   * The date on which the CreativeWork was published.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly datePublished?: string;
  /**
   * Text content of this creative work.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly text?: string;
  /**
   * The result produced in the action.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly result?: ThingUnion[];
  /**
   * A display name for the action.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly displayName?: string;
  /**
   * A Boolean representing whether this result is the top action.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isTopAction?: boolean;
  /**
   * Use this URL to get additional data to determine how to take the appropriate action. For
   * example, the serviceUrl might return JSON along with an image URL.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly serviceUrl?: string;
  /**
   * A string representing the type of action.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly actionType?: string;
  /**
   * A list of merchants that offer items related to the image.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly data?: AggregateOffer;
}

/**
 * A JSON object consisting of coordinates specifying the four corners of a cropped rectangle
 * within the input image.
 */
export interface CropArea {
  /**
   * The top coordinate of the region to be cropped. The coordinate is a fractional value of the
   * original image's height and is measured from the top edge of the image. Specify the coordinate
   * as a value from 0.0 through 1.0.
   */
  top: number;
  /**
   * The bottom coordinate of the region to be cropped. The coordinate is a fractional value of the
   * original image's height and is measured from the top edge of the image. Specify the coordinate
   * as a value from 0.0 through 1.0.
   */
  bottom: number;
  /**
   * The left coordinate of the region to be cropped. The coordinate is a fractional value of the
   * original image's width and is measured from the left edge of the image. Specify the coordinate
   * as a value from 0.0 through 1.0.
   */
  left: number;
  /**
   * The right coordinate of the region to be cropped. The coordinate is a fractional value of the
   * original image's width and is measured from the left edge of the image. Specify the coordinate
   * as a value from 0.0 through 1.0.
   */
  right: number;
}

/**
 * A JSON object that identities the image to get insights of . It also includes the optional crop
 * area that you use to identify the region of interest in the image.
 */
export interface ImageInfo {
  /**
   * An image insights token. To get the insights token, call one of the Image Search APIs (for
   * example, /images/search). In the search results, the
   * [Image](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#image)
   * object's
   * [imageInsightsToken](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#image-imageinsightstoken)
   * field contains the token. The imageInsightsToken and url fields mutually exclusive; do not
   * specify both. Do not specify an insights token if the request includes the image form data.
   */
  imageInsightsToken?: string;
  /**
   * The URL of the input image. The imageInsightsToken and url fields are mutually exclusive; do
   * not specify both. Do not specify the URL if the request includes the image form data.
   */
  url?: string;
  /**
   * A JSON object consisting of coordinates specifying the four corners of a cropped rectangle
   * within the input image. Use the crop area to identify the region of interest in the image. You
   * can apply the crop area to the images specified using the imageInsightsToken or url fields, or
   * an image binary specified in an image form data.
   */
  cropArea?: CropArea;
}

/**
 * A key-value object consisting of filters that may be specified to limit the results returned by
 * the API. Current available filters: site.
 */
export interface Filters {
  /**
   * The URL of the site to return similar images and similar products from. (e.g., "www.bing.com",
   * "bing.com").
   */
  site?: string;
}

/**
 * A JSON object containing information about the request, such as filters for the resulting
 * actions.
 */
export interface KnowledgeRequest {
  /**
   * A key-value object consisting of filters that may be specified to limit the results returned
   * by the API.
   */
  filters?: Filters;
}

/**
 * A JSON object that contains information about the image to get insights of. Specify this object
 * only in a knowledgeRequest form data.
 */
export interface VisualSearchRequest {
  /**
   * A JSON object that identities the image to get insights of.
   */
  imageInfo?: ImageInfo;
  /**
   * A JSON object containing information about the request, such as filters, or a description.
   */
  knowledgeRequest?: KnowledgeRequest;
}

/**
 * An interface representing VisualSearchClientOptions.
 */
export interface VisualSearchClientOptions extends ServiceClientOptions {
  /**
   * Supported Cognitive Services endpoints (protocol and hostname, for example:
   * "https://westus.api.cognitive.microsoft.com", "https://api.cognitive.microsoft.com"). Default
   * value: 'https://api.cognitive.microsoft.com'.
   */
  endpoint?: string;
}

/**
 * Optional Parameters.
 */
export interface ImagesVisualSearchOptionalParams extends msRest.RequestOptionsBase {
  /**
   * A comma-delimited list of one or more languages to use for user interface strings. The list is
   * in decreasing order of preference. For additional information, including expected format, see
   * [RFC2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html). This header and the
   * [setLang](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-visual-search-api-v7-reference#setlang)
   * query parameter are mutually exclusive; do not specify both. If you set this header, you must
   * also specify the
   * [cc](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-visual-search-api-v7-reference#cc)
   * query parameter. To determine the market to return results for, Bing uses the first supported
   * language it finds from the list and combines it with the cc parameter value. If the list does
   * not include a supported language, Bing finds the closest language and market that supports the
   * request or it uses an aggregated or default market for the results. To determine the market
   * that Bing used, see the BingAPIs-Market header. Use this header and the cc query parameter
   * only if you specify multiple languages. Otherwise, use the
   * [mkt](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-visual-search-api-v7-reference#mkt)
   * and
   * [setLang](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-visual-search-api-v7-reference#setlang)
   * query parameters. A user interface string is a string that's used as a label in a user
   * interface. There are few user interface strings in the JSON response objects. Any links to
   * Bing.com properties in the response objects apply the specified language.
   */
  acceptLanguage?: string;
  /**
   * Must be set to multipart/form-data and include a boundary parameter (for example,
   * multipart/form-data; boundary=<boundary string>). For more details, see [Content form types](
   * https://docs.microsoft.com/en-us/azure/cognitive-services/bing-visual-search/overview#content-form-types).
   */
  contentType?: string;
  /**
   * The user agent originating the request. Bing uses the user agent to provide mobile users with
   * an optimized experience. Although optional, you are encouraged to always specify this header.
   * The user-agent should be the same string that any commonly used browser sends. For information
   * about user agents, see [RFC 2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html). The
   * following are examples of user-agent strings. Windows Phone: Mozilla/5.0 (compatible; MSIE
   * 10.0; Windows Phone 8.0; Trident/6.0; IEMobile/10.0; ARM; Touch; NOKIA; Lumia 822). Android:
   * Mozilla / 5.0 (Linux; U; Android 2.3.5; en - us; SCH - I500 Build / GINGERBREAD) AppleWebKit /
   * 533.1 (KHTML; like Gecko) Version / 4.0 Mobile Safari / 533.1. iPhone: Mozilla / 5.0 (iPhone;
   * CPU iPhone OS 6_1 like Mac OS X) AppleWebKit / 536.26 (KHTML; like Gecko) Mobile / 10B142
   * iPhone4; 1 BingWeb / 3.03.1428.20120423. PC: Mozilla / 5.0 (Windows NT 6.3; WOW64; Trident /
   * 7.0; Touch; rv:11.0) like Gecko. iPad: Mozilla / 5.0 (iPad; CPU OS 7_0 like Mac OS X)
   * AppleWebKit / 537.51.1 (KHTML, like Gecko) Version / 7.0 Mobile / 11A465 Safari / 9537.53.
   */
  userAgent?: string;
  /**
   * Bing uses this header to provide users with consistent behavior across Bing API calls. Bing
   * often flights new features and improvements, and it uses the client ID as a key for assigning
   * traffic on different flights. If you do not use the same client ID for a user across multiple
   * requests, then Bing may assign the user to multiple conflicting flights. Being assigned to
   * multiple conflicting flights can lead to an inconsistent user experience. For example, if the
   * second request has a different flight assignment than the first, the experience may be
   * unexpected. Also, Bing can use the client ID to tailor web results to that client ID’s search
   * history, providing a richer experience for the user. Bing also uses this header to help
   * improve result rankings by analyzing the activity generated by a client ID. The relevance
   * improvements help with better quality of results delivered by Bing APIs and in turn enables
   * higher click-through rates for the API consumer. IMPORTANT: Although optional, you should
   * consider this header required. Persisting the client ID across multiple requests for the same
   * end user and device combination enables 1) the API consumer to receive a consistent user
   * experience, and 2) higher click-through rates via better quality of results from the Bing
   * APIs. Each user that uses your application on the device must have a unique, Bing generated
   * client ID. If you do not include this header in the request, Bing generates an ID and returns
   * it in the X-MSEdge-ClientID response header. The only time that you should NOT include this
   * header in a request is the first time the user uses your app on that device. Use the client ID
   * for each Bing API request that your app makes for this user on the device. Persist the client
   * ID. To persist the ID in a browser app, use a persistent HTTP cookie to ensure the ID is used
   * across all sessions. Do not use a session cookie. For other apps such as mobile apps, use the
   * device's persistent storage to persist the ID. The next time the user uses your app on that
   * device, get the client ID that you persisted. Bing responses may or may not include this
   * header. If the response includes this header, capture the client ID and use it for all
   * subsequent Bing requests for the user on that device. ATTENTION: You must ensure that this
   * Client ID is not linkable to any authenticatable user account information. If you include the
   * X-MSEdge-ClientID, you must not include cookies in the request.
   */
  clientId?: string;
  /**
   * The IPv4 or IPv6 address of the client device. The IP address is used to discover the user's
   * location. Bing uses the location information to determine safe search behavior. Although
   * optional, you are encouraged to always specify this header and the X-Search-Location header.
   * Do not obfuscate the address (for example, by changing the last octet to 0). Obfuscating the
   * address results in the location not being anywhere near the device's actual location, which
   * may result in Bing serving erroneous results.
   */
  clientIp?: string;
  /**
   * A semicolon-delimited list of key/value pairs that describe the client's geographical
   * location. Bing uses the location information to determine safe search behavior and to return
   * relevant local content. Specify the key/value pair as <key>:<value>. The following are the
   * keys that you use to specify the user's location. lat (required): The latitude of the client's
   * location, in degrees. The latitude must be greater than or equal to -90.0 and less than or
   * equal to +90.0. Negative values indicate southern latitudes and positive values indicate
   * northern latitudes. long (required): The longitude of the client's location, in degrees. The
   * longitude must be greater than or equal to -180.0 and less than or equal to +180.0. Negative
   * values indicate western longitudes and positive values indicate eastern longitudes. re
   * (required): The radius, in meters, which specifies the horizontal accuracy of the coordinates.
   * Pass the value returned by the device's location service. Typical values might be 22m for
   * GPS/Wi-Fi, 380m for cell tower triangulation, and 18,000m for reverse IP lookup. ts
   * (optional): The UTC UNIX timestamp of when the client was at the location. (The UNIX timestamp
   * is the number of seconds since January 1, 1970.) head (optional): The client's relative
   * heading or direction of travel. Specify the direction of travel as degrees from 0 through 360,
   * counting clockwise relative to true north. Specify this key only if the sp key is nonzero. sp
   * (optional): The horizontal velocity (speed), in meters per second, that the client device is
   * traveling. alt (optional): The altitude of the client device, in meters. are (optional): The
   * radius, in meters, that specifies the vertical accuracy of the coordinates. Specify this key
   * only if you specify the alt key. Although many of the keys are optional, the more information
   * that you provide, the more accurate the location results are. Although optional, you are
   * encouraged to always specify the user's geographical location. Providing the location is
   * especially important if the client's IP address does not accurately reflect the user's
   * physical location (for example, if the client uses VPN). For optimal results, you should
   * include this header and the X-MSEdge-ClientIP header, but at a minimum, you should include
   * this header.
   */
  location?: string;
  /**
   * The market where the results come from. Typically, mkt is the country where the user is making
   * the request from. However, it could be a different country if the user is not located in a
   * country where Bing delivers results. The market must be in the form <language code>-<country
   * code>. For example, en-US. The string is case insensitive. For a list of possible market
   * values, see [Market
   * Codes](https://docs.microsoft.com/en-us/azure/cognitive-services/bing-visual-search/supported-countries-markets).
   * NOTE: If known, you are encouraged to always specify the market. Specifying the market helps
   * Bing route the request and return an appropriate and optimal response. If you specify a market
   * that is not listed in [Market
   * Codes](https://docs.microsoft.com/en-us/azure/cognitive-services/bing-visual-search/supported-countries-markets),
   * Bing uses a best fit market code based on an internal mapping that is subject to change.
   */
  market?: string;
  /**
   * Filter the image results in actions with type 'VisualSearch' for adult content. The following
   * are the possible filter values. Off: May return images with adult content. Moderate: Do not
   * return images with adult content. Strict: Do not return images with adult content. The default
   * is Moderate. If the request comes from a market that Bing's adult policy requires that
   * safeSearch is set to Strict, Bing ignores the safeSearch value and uses Strict. If you use the
   * site: filter in the knowledge request, there is the chance that the response may contain adult
   * content regardless of what the safeSearch query parameter is set to. Use site: only if you are
   * aware of the content on the site and your scenario supports the possibility of adult content.
   * Possible values include: 'Off', 'Moderate', 'Strict'
   */
  safeSearch?: SafeSearch;
  /**
   * The language to use for user interface strings. Specify the language using the ISO 639-1
   * 2-letter language code. For example, the language code for English is EN. The default is EN
   * (English). Although optional, you should always specify the language. Typically, you set
   * setLang to the same language specified by mkt unless the user wants the user interface strings
   * displayed in a different language. A user interface string is a string that's used as a label
   * in a user interface. There are few user interface strings in the JSON response objects. Also,
   * any links to Bing.com properties in the response objects apply the specified language.
   */
  setLang?: string;
  /**
   * The form data is a JSON object that identifies the image using an insights token or URL to the
   * image. The object may also include an optional crop area that identifies an area of interest
   * in the image. The insights token and URL are mutually exclusive – do not specify both. You may
   * specify knowledgeRequest form data and image form data in the same request only if
   * knowledgeRequest form data specifies the cropArea field only (it must not include an insights
   * token or URL).
   */
  knowledgeRequest?: string;
  /**
   * The form data is an image binary. The Content-Disposition header's name parameter must be set
   * to "image". You must specify an image binary if you do not use knowledgeRequest form data to
   * specify the image; you may not use both forms to specify an image. You may specify
   * knowledgeRequest form data and image form data in the same request only if knowledgeRequest
   * form data specifies the cropArea field only  (it must not include an insights token or URL).
   */
  image?: msRest.HttpRequestBody;
}

/**
 * Defines values for Currency.
 * Possible values include: 'USD', 'CAD', 'GBP', 'EUR', 'COP', 'JPY', 'CNY', 'AUD', 'INR', 'AED',
 * 'AFN', 'ALL', 'AMD', 'ANG', 'AOA', 'ARS', 'AWG', 'AZN', 'BAM', 'BBD', 'BDT', 'BGN', 'BHD',
 * 'BIF', 'BMD', 'BND', 'BOB', 'BOV', 'BRL', 'BSD', 'BTN', 'BWP', 'BYR', 'BZD', 'CDF', 'CHE',
 * 'CHF', 'CHW', 'CLF', 'CLP', 'COU', 'CRC', 'CUC', 'CUP', 'CVE', 'CZK', 'DJF', 'DKK', 'DOP',
 * 'DZD', 'EGP', 'ERN', 'ETB', 'FJD', 'FKP', 'GEL', 'GHS', 'GIP', 'GMD', 'GNF', 'GTQ', 'GYD',
 * 'HKD', 'HNL', 'HRK', 'HTG', 'HUF', 'IDR', 'ILS', 'IQD', 'IRR', 'ISK', 'JMD', 'JOD', 'KES',
 * 'KGS', 'KHR', 'KMF', 'KPW', 'KRW', 'KWD', 'KYD', 'KZT', 'LAK', 'LBP', 'LKR', 'LRD', 'LSL',
 * 'LYD', 'MAD', 'MDL', 'MGA', 'MKD', 'MMK', 'MNT', 'MOP', 'MRO', 'MUR', 'MVR', 'MWK', 'MXN',
 * 'MXV', 'MYR', 'MZN', 'NAD', 'NGN', 'NIO', 'NOK', 'NPR', 'NZD', 'OMR', 'PAB', 'PEN', 'PGK',
 * 'PHP', 'PKR', 'PLN', 'PYG', 'QAR', 'RON', 'RSD', 'RUB', 'RWF', 'SAR', 'SBD', 'SCR', 'SDG',
 * 'SEK', 'SGD', 'SHP', 'SLL', 'SOS', 'SRD', 'SSP', 'STD', 'SYP', 'SZL', 'THB', 'TJS', 'TMT',
 * 'TND', 'TOP', 'TRY', 'TTD', 'TWD', 'TZS', 'UAH', 'UGX', 'UYU', 'UZS', 'VEF', 'VND', 'VUV',
 * 'WST', 'XAF', 'XCD', 'XOF', 'XPF', 'YER', 'ZAR', 'ZMW'
 * @readonly
 * @enum {string}
 */
export type Currency = 'USD' | 'CAD' | 'GBP' | 'EUR' | 'COP' | 'JPY' | 'CNY' | 'AUD' | 'INR' | 'AED' | 'AFN' | 'ALL' | 'AMD' | 'ANG' | 'AOA' | 'ARS' | 'AWG' | 'AZN' | 'BAM' | 'BBD' | 'BDT' | 'BGN' | 'BHD' | 'BIF' | 'BMD' | 'BND' | 'BOB' | 'BOV' | 'BRL' | 'BSD' | 'BTN' | 'BWP' | 'BYR' | 'BZD' | 'CDF' | 'CHE' | 'CHF' | 'CHW' | 'CLF' | 'CLP' | 'COU' | 'CRC' | 'CUC' | 'CUP' | 'CVE' | 'CZK' | 'DJF' | 'DKK' | 'DOP' | 'DZD' | 'EGP' | 'ERN' | 'ETB' | 'FJD' | 'FKP' | 'GEL' | 'GHS' | 'GIP' | 'GMD' | 'GNF' | 'GTQ' | 'GYD' | 'HKD' | 'HNL' | 'HRK' | 'HTG' | 'HUF' | 'IDR' | 'ILS' | 'IQD' | 'IRR' | 'ISK' | 'JMD' | 'JOD' | 'KES' | 'KGS' | 'KHR' | 'KMF' | 'KPW' | 'KRW' | 'KWD' | 'KYD' | 'KZT' | 'LAK' | 'LBP' | 'LKR' | 'LRD' | 'LSL' | 'LYD' | 'MAD' | 'MDL' | 'MGA' | 'MKD' | 'MMK' | 'MNT' | 'MOP' | 'MRO' | 'MUR' | 'MVR' | 'MWK' | 'MXN' | 'MXV' | 'MYR' | 'MZN' | 'NAD' | 'NGN' | 'NIO' | 'NOK' | 'NPR' | 'NZD' | 'OMR' | 'PAB' | 'PEN' | 'PGK' | 'PHP' | 'PKR' | 'PLN' | 'PYG' | 'QAR' | 'RON' | 'RSD' | 'RUB' | 'RWF' | 'SAR' | 'SBD' | 'SCR' | 'SDG' | 'SEK' | 'SGD' | 'SHP' | 'SLL' | 'SOS' | 'SRD' | 'SSP' | 'STD' | 'SYP' | 'SZL' | 'THB' | 'TJS' | 'TMT' | 'TND' | 'TOP' | 'TRY' | 'TTD' | 'TWD' | 'TZS' | 'UAH' | 'UGX' | 'UYU' | 'UZS' | 'VEF' | 'VND' | 'VUV' | 'WST' | 'XAF' | 'XCD' | 'XOF' | 'XPF' | 'YER' | 'ZAR' | 'ZMW';

/**
 * Defines values for ItemAvailability.
 * Possible values include: 'Discontinued', 'InStock', 'InStoreOnly', 'LimitedAvailability',
 * 'OnlineOnly', 'OutOfStock', 'PreOrder', 'SoldOut'
 * @readonly
 * @enum {string}
 */
export type ItemAvailability = 'Discontinued' | 'InStock' | 'InStoreOnly' | 'LimitedAvailability' | 'OnlineOnly' | 'OutOfStock' | 'PreOrder' | 'SoldOut';

/**
 * Defines values for ErrorCode.
 * Possible values include: 'None', 'ServerError', 'InvalidRequest', 'RateLimitExceeded',
 * 'InvalidAuthorization', 'InsufficientAuthorization'
 * @readonly
 * @enum {string}
 */
export type ErrorCode = 'None' | 'ServerError' | 'InvalidRequest' | 'RateLimitExceeded' | 'InvalidAuthorization' | 'InsufficientAuthorization';

/**
 * Defines values for ErrorSubCode.
 * Possible values include: 'UnexpectedError', 'ResourceError', 'NotImplemented',
 * 'ParameterMissing', 'ParameterInvalidValue', 'HttpNotAllowed', 'Blocked',
 * 'AuthorizationMissing', 'AuthorizationRedundancy', 'AuthorizationDisabled',
 * 'AuthorizationExpired'
 * @readonly
 * @enum {string}
 */
export type ErrorSubCode = 'UnexpectedError' | 'ResourceError' | 'NotImplemented' | 'ParameterMissing' | 'ParameterInvalidValue' | 'HttpNotAllowed' | 'Blocked' | 'AuthorizationMissing' | 'AuthorizationRedundancy' | 'AuthorizationDisabled' | 'AuthorizationExpired';

/**
 * Defines values for SafeSearch.
 * Possible values include: 'Off', 'Moderate', 'Strict'
 * @readonly
 * @enum {string}
 */
export type SafeSearch = 'Off' | 'Moderate' | 'Strict';

/**
 * Contains response data for the visualSearch operation.
 */
export type ImagesVisualSearchResponse = ImageKnowledge & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ImageKnowledge;
    };
};
