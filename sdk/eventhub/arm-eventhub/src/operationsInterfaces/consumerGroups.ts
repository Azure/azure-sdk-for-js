/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  ConsumerGroup,
  ConsumerGroupsListByEventHubOptionalParams,
  ConsumerGroupsCreateOrUpdateOptionalParams,
  ConsumerGroupsCreateOrUpdateResponse,
  ConsumerGroupsDeleteOptionalParams,
  ConsumerGroupsGetOptionalParams,
  ConsumerGroupsGetResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a ConsumerGroups. */
export interface ConsumerGroups {
  /**
   * Gets all the consumer groups in a Namespace. An empty feed is returned if no consumer group exists
   * in the Namespace.
   * @param resourceGroupName Name of the resource group within the azure subscription.
   * @param namespaceName The Namespace name
   * @param eventHubName The Event Hub name
   * @param options The options parameters.
   */
  listByEventHub(
    resourceGroupName: string,
    namespaceName: string,
    eventHubName: string,
    options?: ConsumerGroupsListByEventHubOptionalParams
  ): PagedAsyncIterableIterator<ConsumerGroup>;
  /**
   * Creates or updates an Event Hubs consumer group as a nested resource within a Namespace.
   * @param resourceGroupName Name of the resource group within the azure subscription.
   * @param namespaceName The Namespace name
   * @param eventHubName The Event Hub name
   * @param consumerGroupName The consumer group name
   * @param parameters Parameters supplied to create or update a consumer group resource.
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    namespaceName: string,
    eventHubName: string,
    consumerGroupName: string,
    parameters: ConsumerGroup,
    options?: ConsumerGroupsCreateOrUpdateOptionalParams
  ): Promise<ConsumerGroupsCreateOrUpdateResponse>;
  /**
   * Deletes a consumer group from the specified Event Hub and resource group.
   * @param resourceGroupName Name of the resource group within the azure subscription.
   * @param namespaceName The Namespace name
   * @param eventHubName The Event Hub name
   * @param consumerGroupName The consumer group name
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    namespaceName: string,
    eventHubName: string,
    consumerGroupName: string,
    options?: ConsumerGroupsDeleteOptionalParams
  ): Promise<void>;
  /**
   * Gets a description for the specified consumer group.
   * @param resourceGroupName Name of the resource group within the azure subscription.
   * @param namespaceName The Namespace name
   * @param eventHubName The Event Hub name
   * @param consumerGroupName The consumer group name
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    namespaceName: string,
    eventHubName: string,
    consumerGroupName: string,
    options?: ConsumerGroupsGetOptionalParams
  ): Promise<ConsumerGroupsGetResponse>;
}
