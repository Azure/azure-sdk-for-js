{"version":3,"file":"partitionKeyToIdMapper.js","sourceRoot":"","sources":["../../../src/impl/partitionKeyToIdMapper.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/* eslint-disable no-fallthrough */\n\nexport function mapPartitionKeyToId(partitionKey: string, partitionCount: number): number {\n  const hashedParitionKey = hashPartitionKey(partitionKey);\n  return Math.abs(hashedParitionKey % partitionCount);\n}\n\n/**\n * @internal\n */\nexport function hashPartitionKey(partitionKey: string): number {\n  const hash = computeHash(Buffer.from(partitionKey, \"utf8\"));\n  return castToInt16(hash.c ^ hash.b);\n}\n\nfunction readUInt32(data: Buffer, offset: number): number {\n  return data.readUInt32LE(offset);\n}\n\nfunction castToInt16(n: number): number {\n  return new Int16Array([n])[0];\n}\n\nfunction computeHash(\n  data: Buffer,\n  seed1: number = 0,\n  seed2: number = 0,\n): {\n  b: number;\n  c: number;\n} {\n  let a: number, b: number, c: number;\n\n  a = b = c = 0xdeadbeef + data.length + seed1;\n  c += seed2;\n\n  let index = 0,\n    size = data.length;\n  while (size > 12) {\n    a += readUInt32(data, index);\n    b += readUInt32(data, index + 4);\n    c += readUInt32(data, index + 8);\n\n    a -= c;\n    a ^= (c << 4) | (c >>> 28);\n    c += b;\n\n    b -= a;\n    b ^= (a << 6) | (a >>> 26);\n    a += c;\n\n    c -= b;\n    c ^= (b << 8) | (b >>> 24);\n    b += a;\n\n    a -= c;\n    a ^= (c << 16) | (c >>> 16);\n    c += b;\n\n    b -= a;\n    b ^= (a << 19) | (a >>> 13);\n    a += c;\n\n    c -= b;\n    c ^= (b << 4) | (b >>> 28);\n    b += a;\n\n    index += 12;\n    size -= 12;\n  }\n\n  let curr = size;\n  switch (curr) {\n    case 12:\n      a += readUInt32(data, index);\n      b += readUInt32(data, index + 4);\n      c += readUInt32(data, index + 8);\n      break;\n    case 11:\n      c += data[index + 10] << 16;\n      curr = 10;\n    case 10:\n      c += data[index + 9] << 8;\n      curr = 9;\n    case 9:\n      c += data[index + 8];\n      curr = 8;\n    case 8:\n      b += readUInt32(data, index + 4);\n      a += readUInt32(data, index);\n      break;\n    case 7:\n      b += data[index + 6] << 16;\n      curr = 6;\n    case 6:\n      b += data[index + 5] << 8;\n      curr = 5;\n    case 5:\n      b += data[index + 4];\n      curr = 4;\n    case 4:\n      a += readUInt32(data, index);\n      break;\n    case 3:\n      a += data[index + 2] << 16;\n      curr = 2;\n    case 2:\n      a += data[index + 1] << 8;\n      curr = 1;\n    case 1:\n      a += data[index];\n      break;\n    case 0:\n      return { b: b >>> 0, c: c >>> 0 };\n  }\n\n  c ^= b;\n  c -= (b << 14) | (b >>> 18);\n\n  a ^= c;\n  a -= (c << 11) | (c >>> 21);\n\n  b ^= a;\n  b -= (a << 25) | (a >>> 7);\n\n  c ^= b;\n  c -= (b << 16) | (b >>> 16);\n\n  a ^= c;\n  a -= (c << 4) | (c >>> 28);\n\n  b ^= a;\n  b -= (a << 14) | (a >>> 18);\n\n  c ^= b;\n  c -= (b << 24) | (b >>> 8);\n\n  return { b: b >>> 0, c: c >>> 0 };\n}\n"]}