{"version":3,"file":"getPromiseParts.js","sourceRoot":"","sources":["../../../src/util/getPromiseParts.ts"],"names":[],"mappings":";AAAA,uCAAuC;AACvC,kCAAkC;;AAMlC,0CAgBC;AApBD;;;GAGG;AACH,SAAgB,eAAe;IAK7B,IAAI,QAA4B,CAAC;IACjC,IAAI,QAAgC,CAAC;IACrC,MAAM,OAAO,GAAG,IAAI,OAAO,CAAI,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;QACjD,QAAQ,GAAG,OAAO,CAAC;QACnB,QAAQ,GAAG,MAAM,CAAC;IACpB,CAAC,CAAC,CAAC;IACH,OAAO;QACL,OAAO;QACP,OAAO,EAAE,QAAS;QAClB,MAAM,EAAE,QAAS;KAClB,CAAC;AACJ,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * @internal\n * Returns a promise and the promise's resolve and reject methods.\n */\nexport function getPromiseParts<T = unknown>(): {\n  promise: Promise<T>;\n  resolve: (value: T) => void;\n  reject: (reason: Error) => void;\n} {\n  let resolver: (value: T) => void;\n  let rejector: (reason?: any) => void;\n  const promise = new Promise<T>((resolve, reject) => {\n    resolver = resolve;\n    rejector = reject;\n  });\n  return {\n    promise,\n    resolve: resolver!,\n    reject: rejector!,\n  };\n}\n"]}