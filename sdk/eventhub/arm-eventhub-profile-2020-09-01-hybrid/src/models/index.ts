/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };

/**
 * Pre-provisioned and readily available Event Hubs Cluster count per region.
 */
export interface AvailableCluster {
  /**
   * Location fo the Available Cluster
   */
  location?: string;
}

/**
 * The response of the List Available Clusters operation.
 */
export interface AvailableClustersList {
  /**
   * The count of readily available and pre-provisioned Event Hubs Clusters per region.
   */
  value?: AvailableCluster[];
}

/**
 * Error response indicates Event Hub service is not able to process the incoming request. The
 * reason is provided in the error message.
 */
export interface ErrorResponse {
  /**
   * Error code.
   */
  code?: string;
  /**
   * Error message indicating why the operation failed.
   */
  message?: string;
}

/**
 * SKU parameters particular to a cluster instance.
 */
export interface ClusterSku {
  /**
   * The quantity of Event Hubs Cluster Capacity Units contained in this cluster.
   */
  capacity?: number;
}

/**
 * The resource definition.
 */
export interface Resource extends BaseResource {
  /**
   * Resource ID.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Resource name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Resource type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
}

/**
 * Definition of resource.
 */
export interface TrackedResource extends Resource {
  /**
   * Resource location.
   */
  location?: string;
  /**
   * Resource tags.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * Single Event Hubs Cluster resource in List or Get operations.
 */
export interface Cluster extends TrackedResource {
  /**
   * Properties of the cluster SKU.
   */
  sku?: ClusterSku;
  /**
   * The UTC time when the Event Hubs Cluster was created.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly createdAt?: string;
  /**
   * The UTC time when the Event Hubs Cluster was last updated.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly updatedAt?: string;
  /**
   * The metric ID of the cluster resource. Provided by the service and not modifiable by the user.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly metricId?: string;
  /**
   * Status of the Cluster resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: string;
}

/**
 * The full ARM ID of an Event Hubs Namespace
 */
export interface EHNamespaceIdContainer {
  /**
   * id parameter
   */
  id?: string;
}

/**
 * The response of the List Namespace IDs operation
 */
export interface EHNamespaceIdListResult {
  /**
   * Result of the List Namespace IDs operation
   */
  value?: EHNamespaceIdContainer[];
}

/**
 * SKU parameters supplied to the create namespace operation
 */
export interface Sku {
  /**
   * Name of this SKU. Possible values include: 'Basic', 'Standard'
   */
  name: SkuName;
  /**
   * The billing tier of this particular SKU. Possible values include: 'Basic', 'Standard'
   */
  tier?: SkuTier;
  /**
   * The Event Hubs throughput units, value should be 0 to 20 throughput units.
   */
  capacity?: number;
}

/**
 * Properties to configure Identity for Bring your Own Keys
 */
export interface Identity {
  /**
   * ObjectId from the KeyVault
   */
  principalId?: string;
  /**
   * TenantId from the KeyVault
   */
  tenantId?: string;
  /**
   * Enumerates the possible value Identity type, which currently supports only 'SystemAssigned'.
   * Possible values include: 'SystemAssigned'. Default value: 'SystemAssigned'.
   */
  type?: IdentityType;
}

/**
 * Properties to configure keyVault Properties
 */
export interface KeyVaultProperties {
  /**
   * Name of the Key from KeyVault
   */
  keyName?: string;
  /**
   * Uri of KeyVault
   */
  keyVaultUri?: string;
  /**
   * Key Version
   */
  keyVersion?: string;
}

/**
 * Properties to configure Encryption
 */
export interface Encryption {
  /**
   * Properties of KeyVault
   */
  keyVaultProperties?: KeyVaultProperties[];
  /**
   * Enumerates the possible value of keySource for Encryption. Possible values include:
   * 'Microsoft.KeyVault'. Default value: 'Microsoft.KeyVault'.
   */
  keySource?: KeySource;
}

/**
 * Single Namespace item in List or Get Operation
 */
export interface EHNamespace extends TrackedResource {
  /**
   * Properties of sku resource
   */
  sku?: Sku;
  /**
   * Properties of BYOK Identity description
   */
  identity?: Identity;
  /**
   * Provisioning state of the Namespace.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: string;
  /**
   * The time the Namespace was created.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly createdAt?: Date;
  /**
   * The time the Namespace was updated.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly updatedAt?: Date;
  /**
   * Endpoint you can use to perform Service Bus operations.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly serviceBusEndpoint?: string;
  /**
   * Cluster ARM ID of the Namespace.
   */
  clusterArmId?: string;
  /**
   * Identifier for Azure Insights metrics.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly metricId?: string;
  /**
   * Value that indicates whether AutoInflate is enabled for eventhub namespace.
   */
  isAutoInflateEnabled?: boolean;
  /**
   * Upper limit of throughput units when AutoInflate is enabled, value should be within 0 to 20
   * throughput units. ( '0' if AutoInflateEnabled = true)
   */
  maximumThroughputUnits?: number;
  /**
   * Value that indicates whether Kafka is enabled for eventhub namespace.
   */
  kafkaEnabled?: boolean;
  /**
   * Enabling this property creates a Standard Event Hubs Namespace in regions supported
   * availability zones.
   */
  zoneRedundant?: boolean;
  /**
   * Properties of BYOK Encryption description
   */
  encryption?: Encryption;
}

/**
 * PrivateEndpoint information.
 */
export interface PrivateEndpoint {
  /**
   * The ARM identifier for Private Endpoint.
   */
  id?: string;
}

/**
 * ConnectionState information.
 */
export interface ConnectionState {
  /**
   * Status of the connection. Possible values include: 'Pending', 'Approved', 'Rejected',
   * 'Disconnected'
   */
  status?: PrivateLinkConnectionStatus;
  /**
   * Description of the connection state.
   */
  description?: string;
}

/**
 * Properties of the PrivateEndpointConnection.
 */
export interface PrivateEndpointConnection extends Resource {
  /**
   * The Private Endpoint resource for this Connection.
   */
  privateEndpoint?: PrivateEndpoint;
  /**
   * Details about the state of the connection.
   */
  privateLinkServiceConnectionState?: ConnectionState;
  /**
   * Provisioning state of the Private Endpoint Connection. Possible values include: 'Creating',
   * 'Updating', 'Deleting', 'Succeeded', 'Canceled', 'Failed'
   */
  provisioningState?: EndPointProvisioningState;
}

/**
 * Information of the private link resource.
 */
export interface PrivateLinkResource {
  /**
   * The private link resource group id.
   */
  groupId?: string;
  /**
   * The private link resource required member names.
   */
  requiredMembers?: string[];
  /**
   * The private link resource Private link DNS zone name.
   */
  requiredZoneNames?: string[];
  /**
   * Fully qualified identifier of the resource.
   */
  id?: string;
  /**
   * Name of the resource
   */
  name?: string;
  /**
   * Type of the resource
   */
  type?: string;
}

/**
 * Result of the List private link resources operation.
 */
export interface PrivateLinkResourcesListResult {
  /**
   * A collection of private link resources
   */
  value?: PrivateLinkResource[];
  /**
   * A link for the next page of private link resources.
   */
  nextLink?: string;
}

/**
 * Single item in a List or Get AuthorizationRule operation
 */
export interface AuthorizationRule extends Resource {
  /**
   * The rights associated with the rule.
   */
  rights: AccessRights[];
}

/**
 * Namespace/EventHub Connection String
 */
export interface AccessKeys {
  /**
   * Primary connection string of the created namespace AuthorizationRule.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly primaryConnectionString?: string;
  /**
   * Secondary connection string of the created namespace AuthorizationRule.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly secondaryConnectionString?: string;
  /**
   * Primary connection string of the alias if GEO DR is enabled
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly aliasPrimaryConnectionString?: string;
  /**
   * Secondary  connection string of the alias if GEO DR is enabled
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly aliasSecondaryConnectionString?: string;
  /**
   * A base64-encoded 256-bit primary key for signing and validating the SAS token.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly primaryKey?: string;
  /**
   * A base64-encoded 256-bit primary key for signing and validating the SAS token.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly secondaryKey?: string;
  /**
   * A string that describes the AuthorizationRule.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly keyName?: string;
}

/**
 * Parameters supplied to the Regenerate Authorization Rule operation, specifies which key needs to
 * be reset.
 */
export interface RegenerateAccessKeyParameters {
  /**
   * The access key to regenerate. Possible values include: 'PrimaryKey', 'SecondaryKey'
   */
  keyType: KeyType;
  /**
   * Optional, if the key value provided, is set for KeyType or autogenerated Key value set for
   * keyType
   */
  key?: string;
}

/**
 * Parameter supplied to check Namespace name availability operation
 */
export interface CheckNameAvailabilityParameter {
  /**
   * Name to check the namespace name availability
   */
  name: string;
}

/**
 * The Result of the CheckNameAvailability operation
 */
export interface CheckNameAvailabilityResult {
  /**
   * The detailed info regarding the reason associated with the Namespace.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly message?: string;
  /**
   * Value indicating Namespace is availability, true if the Namespace is available; otherwise,
   * false.
   */
  nameAvailable?: boolean;
  /**
   * The reason for unavailability of a Namespace. Possible values include: 'None', 'InvalidName',
   * 'SubscriptionIsDisabled', 'NameInUse', 'NameInLockdown',
   * 'TooManyNamespaceInCurrentSubscription'
   */
  reason?: UnavailableReason;
}

/**
 * Single item in List or Get Consumer group operation
 */
export interface ConsumerGroup extends Resource {
  /**
   * Exact time the message was created.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly createdAt?: Date;
  /**
   * The exact time the message was updated.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly updatedAt?: Date;
  /**
   * User Metadata is a placeholder to store user-defined string data with maximum length 1024.
   * e.g. it can be used to store descriptive data, such as list of teams and their contact
   * information also user-defined configuration settings can be stored.
   */
  userMetadata?: string;
}

/**
 * The object that represents the operation.
 */
export interface OperationDisplay {
  /**
   * Service provider: Microsoft.EventHub
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provider?: string;
  /**
   * Resource on which the operation is performed: Invoice, etc.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly resource?: string;
  /**
   * Operation type: Read, write, delete, etc.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly operation?: string;
}

/**
 * A Event Hub REST API operation
 */
export interface Operation {
  /**
   * Operation name: {provider}/{resource}/{operation}
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The object that represents the operation.
   */
  display?: OperationDisplay;
}

/**
 * Capture storage details for capture description
 */
export interface Destination {
  /**
   * Name for capture destination
   */
  name?: string;
  /**
   * Resource id of the storage account to be used to create the blobs
   */
  storageAccountResourceId?: string;
  /**
   * Blob container Name
   */
  blobContainer?: string;
  /**
   * Blob naming convention for archive, e.g.
   * {Namespace}/{EventHub}/{PartitionId}/{Year}/{Month}/{Day}/{Hour}/{Minute}/{Second}. Here all
   * the parameters (Namespace,EventHub .. etc) are mandatory irrespective of order
   */
  archiveNameFormat?: string;
}

/**
 * Properties to configure capture description for eventhub
 */
export interface CaptureDescription {
  /**
   * A value that indicates whether capture description is enabled.
   */
  enabled?: boolean;
  /**
   * Enumerates the possible values for the encoding format of capture description. Note:
   * 'AvroDeflate' will be deprecated in New API Version. Possible values include: 'Avro',
   * 'AvroDeflate'
   */
  encoding?: EncodingCaptureDescription;
  /**
   * The time window allows you to set the frequency with which the capture to Azure Blobs will
   * happen, value should between 60 to 900 seconds
   */
  intervalInSeconds?: number;
  /**
   * The size window defines the amount of data built up in your Event Hub before an capture
   * operation, value should be between 10485760 to 524288000 bytes
   */
  sizeLimitInBytes?: number;
  /**
   * Properties of Destination where capture will be stored. (Storage Account, Blob Names)
   */
  destination?: Destination;
  /**
   * A value that indicates whether to Skip Empty Archives
   */
  skipEmptyArchives?: boolean;
}

/**
 * Single item in List or Get Event Hub operation
 */
export interface Eventhub extends Resource {
  /**
   * Current number of shards on the Event Hub.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly partitionIds?: string[];
  /**
   * Exact time the Event Hub was created.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly createdAt?: Date;
  /**
   * The exact time the message was updated.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly updatedAt?: Date;
  /**
   * Number of days to retain the events for this Event Hub, value should be 1 to 7 days
   */
  messageRetentionInDays?: number;
  /**
   * Number of partitions created for the Event Hub, allowed values are from 1 to 32 partitions.
   */
  partitionCount?: number;
  /**
   * Enumerates the possible values for the status of the Event Hub. Possible values include:
   * 'Active', 'Disabled', 'Restoring', 'SendDisabled', 'ReceiveDisabled', 'Creating', 'Deleting',
   * 'Renaming', 'Unknown'
   */
  status?: EntityStatus;
  /**
   * Properties of capture description
   */
  captureDescription?: CaptureDescription;
}

/**
 * Properties of Messaging Region
 */
export interface MessagingRegionsProperties {
  /**
   * Region code
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly code?: string;
  /**
   * Full name of the region
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly fullName?: string;
}

/**
 * Messaging Region
 */
export interface MessagingRegions extends TrackedResource {
  /**
   * Properties of Messaging Region
   */
  properties?: MessagingRegionsProperties;
}

/**
 * Optional Parameters.
 */
export interface EventHubsListByNamespaceOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Skip is only used if a previous operation returned a partial result. If a previous response
   * contains a nextLink element, the value of the nextLink element will include a skip parameter
   * that specifies a starting point to use for subsequent calls.
   */
  skip?: number;
  /**
   * May be used to limit the number of results to the most recent N usageDetails.
   */
  top?: number;
}

/**
 * Optional Parameters.
 */
export interface ConsumerGroupsListByEventHubOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Skip is only used if a previous operation returned a partial result. If a previous response
   * contains a nextLink element, the value of the nextLink element will include a skip parameter
   * that specifies a starting point to use for subsequent calls.
   */
  skip?: number;
  /**
   * May be used to limit the number of results to the most recent N usageDetails.
   */
  top?: number;
}

/**
 * An interface representing EventHubManagementClientOptions.
 */
export interface EventHubManagementClientOptions extends AzureServiceClientOptions {
  baseUri?: string;
}

/**
 * @interface
 * The response of the List Event Hubs Clusters operation.
 * @extends Array<Cluster>
 */
export interface ClusterListResult extends Array<Cluster> {
  /**
   * Link to the next set of results. Empty unless the value parameter contains an incomplete list
   * of Event Hubs Clusters.
   */
  nextLink?: string;
}

/**
 * @interface
 * The response of the List Namespace operation
 * @extends Array<EHNamespace>
 */
export interface EHNamespaceListResult extends Array<EHNamespace> {
  /**
   * Link to the next set of results. Not empty if Value contains incomplete list of namespaces.
   */
  nextLink?: string;
}

/**
 * @interface
 * The response from the List namespace operation.
 * @extends Array<AuthorizationRule>
 */
export interface AuthorizationRuleListResult extends Array<AuthorizationRule> {
  /**
   * Link to the next set of results. Not empty if Value contains an incomplete list of
   * Authorization Rules
   */
  nextLink?: string;
}

/**
 * @interface
 * Result of the list of all private endpoint connections operation.
 * @extends Array<PrivateEndpointConnection>
 */
export interface PrivateEndpointConnectionListResult extends Array<PrivateEndpointConnection> {
  /**
   * A link for the next page of private endpoint connection resources.
   */
  nextLink?: string;
}

/**
 * @interface
 * The result of the List EventHubs operation.
 * @extends Array<Eventhub>
 */
export interface EventHubListResult extends Array<Eventhub> {
  /**
   * Link to the next set of results. Not empty if Value contains incomplete list of EventHubs.
   */
  nextLink?: string;
}

/**
 * @interface
 * The result to the List Consumer Group operation.
 * @extends Array<ConsumerGroup>
 */
export interface ConsumerGroupListResult extends Array<ConsumerGroup> {
  /**
   * Link to the next set of results. Not empty if Value contains incomplete list of Consumer Group
   */
  nextLink?: string;
}

/**
 * @interface
 * Result of the request to list Event Hub operations. It contains a list of operations and a URL
 * link to get the next set of results.
 * @extends Array<Operation>
 */
export interface OperationListResult extends Array<Operation> {
  /**
   * URL to get the next set of operation list results if there are any.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * The response of the List MessagingRegions operation.
 * @extends Array<MessagingRegions>
 */
export interface MessagingRegionsListResult extends Array<MessagingRegions> {
  /**
   * Link to the next set of results. Not empty if Value contains incomplete list of
   * MessagingRegions.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * Defines values for SkuName.
 * Possible values include: 'Basic', 'Standard'
 * @readonly
 * @enum {string}
 */
export type SkuName = 'Basic' | 'Standard';

/**
 * Defines values for SkuTier.
 * Possible values include: 'Basic', 'Standard'
 * @readonly
 * @enum {string}
 */
export type SkuTier = 'Basic' | 'Standard';

/**
 * Defines values for IdentityType.
 * Possible values include: 'SystemAssigned'
 * @readonly
 * @enum {string}
 */
export type IdentityType = 'SystemAssigned';

/**
 * Defines values for KeySource.
 * Possible values include: 'Microsoft.KeyVault'
 * @readonly
 * @enum {string}
 */
export type KeySource = 'Microsoft.KeyVault';

/**
 * Defines values for PrivateLinkConnectionStatus.
 * Possible values include: 'Pending', 'Approved', 'Rejected', 'Disconnected'
 * @readonly
 * @enum {string}
 */
export type PrivateLinkConnectionStatus = 'Pending' | 'Approved' | 'Rejected' | 'Disconnected';

/**
 * Defines values for EndPointProvisioningState.
 * Possible values include: 'Creating', 'Updating', 'Deleting', 'Succeeded', 'Canceled', 'Failed'
 * @readonly
 * @enum {string}
 */
export type EndPointProvisioningState = 'Creating' | 'Updating' | 'Deleting' | 'Succeeded' | 'Canceled' | 'Failed';

/**
 * Defines values for AccessRights.
 * Possible values include: 'Manage', 'Send', 'Listen'
 * @readonly
 * @enum {string}
 */
export type AccessRights = 'Manage' | 'Send' | 'Listen';

/**
 * Defines values for KeyType.
 * Possible values include: 'PrimaryKey', 'SecondaryKey'
 * @readonly
 * @enum {string}
 */
export type KeyType = 'PrimaryKey' | 'SecondaryKey';

/**
 * Defines values for UnavailableReason.
 * Possible values include: 'None', 'InvalidName', 'SubscriptionIsDisabled', 'NameInUse',
 * 'NameInLockdown', 'TooManyNamespaceInCurrentSubscription'
 * @readonly
 * @enum {string}
 */
export type UnavailableReason = 'None' | 'InvalidName' | 'SubscriptionIsDisabled' | 'NameInUse' | 'NameInLockdown' | 'TooManyNamespaceInCurrentSubscription';

/**
 * Defines values for EncodingCaptureDescription.
 * Possible values include: 'Avro', 'AvroDeflate'
 * @readonly
 * @enum {string}
 */
export type EncodingCaptureDescription = 'Avro' | 'AvroDeflate';

/**
 * Defines values for EntityStatus.
 * Possible values include: 'Active', 'Disabled', 'Restoring', 'SendDisabled', 'ReceiveDisabled',
 * 'Creating', 'Deleting', 'Renaming', 'Unknown'
 * @readonly
 * @enum {string}
 */
export type EntityStatus = 'Active' | 'Disabled' | 'Restoring' | 'SendDisabled' | 'ReceiveDisabled' | 'Creating' | 'Deleting' | 'Renaming' | 'Unknown';

/**
 * Contains response data for the listAvailableClusterRegion operation.
 */
export type ClustersListAvailableClusterRegionResponse = AvailableClustersList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AvailableClustersList;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type ClustersListByResourceGroupResponse = ClusterListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ClusterListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ClustersGetResponse = Cluster & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Cluster;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ClustersCreateOrUpdateResponse = Cluster & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Cluster;
    };
};

/**
 * Contains response data for the update operation.
 */
export type ClustersUpdateResponse = Cluster & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Cluster;
    };
};

/**
 * Contains response data for the listNamespaces operation.
 */
export type ClustersListNamespacesResponse = EHNamespaceIdListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EHNamespaceIdListResult;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type ClustersBeginCreateOrUpdateResponse = Cluster & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Cluster;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type ClustersBeginUpdateResponse = Cluster & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Cluster;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type ClustersListByResourceGroupNextResponse = ClusterListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ClusterListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type NamespacesListResponse = EHNamespaceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EHNamespaceListResult;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type NamespacesListByResourceGroupResponse = EHNamespaceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EHNamespaceListResult;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type NamespacesCreateOrUpdateResponse = EHNamespace & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EHNamespace;
    };
};

/**
 * Contains response data for the get operation.
 */
export type NamespacesGetResponse = EHNamespace & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EHNamespace;
    };
};

/**
 * Contains response data for the update operation.
 */
export type NamespacesUpdateResponse = EHNamespace & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EHNamespace;
    };
};

/**
 * Contains response data for the listAuthorizationRules operation.
 */
export type NamespacesListAuthorizationRulesResponse = AuthorizationRuleListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AuthorizationRuleListResult;
    };
};

/**
 * Contains response data for the createOrUpdateAuthorizationRule operation.
 */
export type NamespacesCreateOrUpdateAuthorizationRuleResponse = AuthorizationRule & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AuthorizationRule;
    };
};

/**
 * Contains response data for the getAuthorizationRule operation.
 */
export type NamespacesGetAuthorizationRuleResponse = AuthorizationRule & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AuthorizationRule;
    };
};

/**
 * Contains response data for the listKeys operation.
 */
export type NamespacesListKeysResponse = AccessKeys & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AccessKeys;
    };
};

/**
 * Contains response data for the regenerateKeys operation.
 */
export type NamespacesRegenerateKeysResponse = AccessKeys & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AccessKeys;
    };
};

/**
 * Contains response data for the checkNameAvailability operation.
 */
export type NamespacesCheckNameAvailabilityResponse = CheckNameAvailabilityResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CheckNameAvailabilityResult;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type NamespacesBeginCreateOrUpdateResponse = EHNamespace & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EHNamespace;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type NamespacesListNextResponse = EHNamespaceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EHNamespaceListResult;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type NamespacesListByResourceGroupNextResponse = EHNamespaceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EHNamespaceListResult;
    };
};

/**
 * Contains response data for the listAuthorizationRulesNext operation.
 */
export type NamespacesListAuthorizationRulesNextResponse = AuthorizationRuleListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AuthorizationRuleListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type PrivateEndpointConnectionsListResponse = PrivateEndpointConnectionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateEndpointConnectionListResult;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type PrivateEndpointConnectionsCreateOrUpdateResponse = PrivateEndpointConnection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateEndpointConnection;
    };
};

/**
 * Contains response data for the get operation.
 */
export type PrivateEndpointConnectionsGetResponse = PrivateEndpointConnection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateEndpointConnection;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type PrivateEndpointConnectionsListNextResponse = PrivateEndpointConnectionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateEndpointConnectionListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type PrivateLinkResourcesGetResponse = PrivateLinkResourcesListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PrivateLinkResourcesListResult;
    };
};

/**
 * Contains response data for the listAuthorizationRules operation.
 */
export type DisasterRecoveryConfigsListAuthorizationRulesResponse = AuthorizationRuleListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AuthorizationRuleListResult;
    };
};

/**
 * Contains response data for the getAuthorizationRule operation.
 */
export type DisasterRecoveryConfigsGetAuthorizationRuleResponse = AuthorizationRule & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AuthorizationRule;
    };
};

/**
 * Contains response data for the listKeys operation.
 */
export type DisasterRecoveryConfigsListKeysResponse = AccessKeys & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AccessKeys;
    };
};

/**
 * Contains response data for the listAuthorizationRulesNext operation.
 */
export type DisasterRecoveryConfigsListAuthorizationRulesNextResponse = AuthorizationRuleListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AuthorizationRuleListResult;
    };
};

/**
 * Contains response data for the listAuthorizationRules operation.
 */
export type EventHubsListAuthorizationRulesResponse = AuthorizationRuleListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AuthorizationRuleListResult;
    };
};

/**
 * Contains response data for the createOrUpdateAuthorizationRule operation.
 */
export type EventHubsCreateOrUpdateAuthorizationRuleResponse = AuthorizationRule & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AuthorizationRule;
    };
};

/**
 * Contains response data for the getAuthorizationRule operation.
 */
export type EventHubsGetAuthorizationRuleResponse = AuthorizationRule & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AuthorizationRule;
    };
};

/**
 * Contains response data for the listKeys operation.
 */
export type EventHubsListKeysResponse = AccessKeys & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AccessKeys;
    };
};

/**
 * Contains response data for the regenerateKeys operation.
 */
export type EventHubsRegenerateKeysResponse = AccessKeys & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AccessKeys;
    };
};

/**
 * Contains response data for the listByNamespace operation.
 */
export type EventHubsListByNamespaceResponse = EventHubListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventHubListResult;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type EventHubsCreateOrUpdateResponse = Eventhub & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Eventhub;
    };
};

/**
 * Contains response data for the get operation.
 */
export type EventHubsGetResponse = Eventhub & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Eventhub;
    };
};

/**
 * Contains response data for the listAuthorizationRulesNext operation.
 */
export type EventHubsListAuthorizationRulesNextResponse = AuthorizationRuleListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AuthorizationRuleListResult;
    };
};

/**
 * Contains response data for the listByNamespaceNext operation.
 */
export type EventHubsListByNamespaceNextResponse = EventHubListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: EventHubListResult;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ConsumerGroupsCreateOrUpdateResponse = ConsumerGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ConsumerGroup;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ConsumerGroupsGetResponse = ConsumerGroup & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ConsumerGroup;
    };
};

/**
 * Contains response data for the listByEventHub operation.
 */
export type ConsumerGroupsListByEventHubResponse = ConsumerGroupListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ConsumerGroupListResult;
    };
};

/**
 * Contains response data for the listByEventHubNext operation.
 */
export type ConsumerGroupsListByEventHubNextResponse = ConsumerGroupListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ConsumerGroupListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type OperationsListNextResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationListResult;
    };
};

/**
 * Contains response data for the listBySku operation.
 */
export type RegionsListBySkuResponse = MessagingRegionsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MessagingRegionsListResult;
    };
};

/**
 * Contains response data for the listBySkuNext operation.
 */
export type RegionsListBySkuNextResponse = MessagingRegionsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MessagingRegionsListResult;
    };
};
