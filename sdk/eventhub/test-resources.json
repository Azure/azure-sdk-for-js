{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "baseName": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "The base resource name."
      }
    },
    "storageEndpointSuffix": {
      "type": "string",
      "defaultValue": "core.windows.net",
      "metadata": {
        "description": "Storage endpoint suffix. The default value uses Azure Public Cloud (core.windows.net)"
      }
    }
  },
  "variables": {
    "apiVersion": "2017-04-01",
    "storageApiVersion": "2019-04-01",
    "iotApiVersion": "2018-04-01",
    "namespaceName": "[parameters('baseName')]",
    "storageAccountName": "[concat('storage', parameters('baseName'))]",
    "containerName": "container",
    "iotName": "[concat('iot', parameters('baseName'))]",
    "authorizationName": "[concat(parameters('baseName'), '/RootManageSharedAccessKey')]",
    "eventHubName": "eventhub",
    "eventHubNameFull": "[concat(parameters('baseName'), '/eventhub')]",
    "location": "[resourceGroup().location]"
  },
  "resources": [
    {
      "type": "Microsoft.EventHub/namespaces",
      "apiVersion": "[variables('apiVersion')]",
      "name": "[variables('namespaceName')]",
      "location": "[variables('location')]",
      "sku": {
        "name": "Standard",
        "tier": "Standard",
        "capacity": 5
      },
      "properties": {
        "zoneRedundant": false,
        "isAutoInflateEnabled": false,
        "maximumThroughputUnits": 0
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces/AuthorizationRules",
      "apiVersion": "[variables('apiVersion')]",
      "name": "[variables('authorizationName')]",
      "location": "[variables('location')]",
      "dependsOn": ["[resourceId('Microsoft.EventHub/namespaces', variables('namespaceName'))]"],
      "properties": {
        "rights": ["Listen", "Manage", "Send"]
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces/eventhubs",
      "apiVersion": "[variables('apiVersion')]",
      "name": "[variables('eventHubNameFull')]",
      "location": "[variables('location')]",
      "dependsOn": ["[resourceId('Microsoft.EventHub/namespaces', variables('namespaceName'))]"],
      "properties": {
        "messageRetentionInDays": 1,
        "partitionCount": 4
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces/networkRuleSets",
      "apiVersion": "[variables('apiVersion')]",
      "name": "[concat(variables('namespaceName'), '/default')]",
      "location": "[variables('location')]",
      "dependsOn": ["[resourceId('Microsoft.EventHub/namespaces', variables('namespaceName'))]"],
      "properties": {
        "defaultAction": "Deny",
        "virtualNetworkRules": [],
        "ipRules": []
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces/eventhubs/consumergroups",
      "apiVersion": "[variables('apiVersion')]",
      "name": "[concat(variables('eventHubNameFull'), '/$Default')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.EventHub/namespaces/eventhubs', variables('namespaceName'), variables('eventHubName'))]",
        "[resourceId('Microsoft.EventHub/namespaces', variables('namespaceName'))]"
      ],
      "properties": {}
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "[variables('storageApiVersion')]",
      "name": "[variables('storageAccountName')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard_RAGRS",
        "tier": "Standard"
      },
      "kind": "StorageV2",
      "properties": {
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "services": {
            "file": {
              "enabled": true
            },
            "blob": {
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "accessTier": "Hot"
      },
      "resources": [
        {
          "name": "[concat('default/', variables('containerName'))]",
          "type": "blobServices/containers",
          "apiVersion": "[variables('storageApiVersion')]",
          "dependsOn": ["[variables('storageAccountName')]"]
        }
      ]
    },
    {
      "type": "Microsoft.Devices/IotHubs",
      "apiVersion": "[variables('ioTapiVersion')]",
      "name": "[variables('iotName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ],
      "sku": {
        "name": "S1",
        "tier": "Standard",
        "capacity": 1
      },
      "properties": {
        "ipFilterRules": [],
        "eventHubEndpoints": {
          "events": {
            "retentionTimeInDays": 1,
            "partitionCount": 4
          }
        },
        "routing": {
          "endpoints": {
            "serviceBusQueues": [],
            "serviceBusTopics": [],
            "eventHubs": [],
            "storageContainers": []
          },
          "routes": [],
          "fallbackRoute": {
            "name": "$fallback",
            "source": "DeviceMessages",
            "condition": "true",
            "endpointNames": ["events"],
            "isEnabled": true
          }
        },
        "storageEndpoints": {
          "$default": {
            "sasTtlAsIso8601": "PT1H",
            "connectionString": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), variables('storageApiVersion')).keys[0].value, ';EndpointSuffix=', parameters('storageEndpointSuffix'))]",
            "containerName": "[variables('containerName')]"
          }
        },
        "messagingEndpoints": {
          "fileNotifications": {
            "lockDurationAsIso8601": "PT1M",
            "ttlAsIso8601": "PT1H",
            "maxDeliveryCount": 10
          }
        },
        "enableFileUploadNotifications": false,
        "cloudToDevice": {
          "maxDeliveryCount": 10,
          "defaultTtlAsIso8601": "PT1H",
          "feedback": {
            "lockDurationAsIso8601": "PT1M",
            "ttlAsIso8601": "PT1H",
            "maxDeliveryCount": 10
          }
        },
        "features": "None"
      }
    }
  ],
  "outputs": {
    "STORAGE_ACCOUNT_NAME": {
      "type": "string",
      "value": "[variables('storageAccountName')]"
    },
    "STORAGE_ACCOUNT_KEY": {
      "type": "string",
      "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), variables('storageApiVersion')).keys[0].value]"
    },
    "EVENTHUB_NAME": {
      "type": "string",
      "value": "[variables('eventHubName')]"
    },
    "EVENTHUB_CONNECTION_STRING": {
      "type": "string",
      "value": "[listKeys(resourceId('Microsoft.EventHub/namespaces/authorizationRules', variables('namespaceName'), 'RootManageSharedAccessKey'), variables('apiVersion')).primaryConnectionString]"
    },
    "IOTHUB_CONNECTION_STRING": {
      "type": "string",
      "value": "[concat('HostName=', reference(resourceId('Microsoft.Devices/IoTHubs', variables('iotName')), providers('Microsoft.Devices', 'IoTHubs').apiVersions[0]).hostName, ';SharedAccessKeyName=iothubowner;SharedAccessKey=', listKeys(resourceId('Microsoft.Devices/IotHubs', variables('iotName')), providers('Microsoft.Devices', 'IoTHubs').apiVersions[0]).value[0].primaryKey)]"
    },
    "STORAGE_CONNECTION_STRING": {
      "type": "string",
      "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), variables('storageApiVersion')).keys[0].value, ';EndpointSuffix=', parameters('storageEndpointSuffix'))]"
    }
  }
}
