{"version":3,"file":"storageBlobInterfaces.js","sourceRoot":"","sources":["../../src/storageBlobInterfaces.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type {\n  Metadata,\n  BlobItem,\n  ContainerListBlobFlatSegmentResponse,\n  ContainerListBlobsOptions,\n  BlockBlobUploadOptions,\n  BlockBlobUploadResponse,\n  HttpRequestBody,\n  BlobSetMetadataOptions,\n  ContainerSetMetadataResponse,\n} from \"@azure/storage-blob\";\nimport type { PagedAsyncIterableIterator } from \"@azure/core-paging\";\n\n/**\n * An interface compatible with an instance of {@link BlobClient}.\n */\nexport interface BlobClientLike {\n  /**\n   * Creates a BlockBlobClient object.\n   */\n  getBlockBlobClient(): BlockBlobClientLike;\n}\n\n/**\n * An interface compatible with Storage Blob's ContainerClient class.\n */\nexport interface ContainerClientLike {\n  /**\n   * Creates a {@link BlobClient}\n   */\n  getBlobClient(blobName: string): BlobClientLike;\n  /**\n   * Returns an async iterable iterator to list all the blobs\n   * under the specified account.\n   */\n  listBlobsFlat(\n    options?: ContainerListBlobsOptions,\n  ): PagedAsyncIterableIterator<BlobItem, ContainerListBlobFlatSegmentResponse>;\n}\n\n/**\n * An interface compatible with Storage Blob's BlockBlobClient class.\n */\nexport interface BlockBlobClientLike {\n  /**\n   * Creates a new block blob, or updated the content of an existing block blob.\n   */\n  upload(\n    body: HttpRequestBody,\n    contentLength: number,\n    options?: BlockBlobUploadOptions,\n  ): Promise<BlockBlobUploadResponse>;\n  /**\n   * Sets user-defined metadata for the specified blob as one or more name-value pairs.\n   */\n  setMetadata(\n    metadata?: Metadata,\n    options?: BlobSetMetadataOptions,\n  ): Promise<ContainerSetMetadataResponse>;\n}\n"]}