{"version":3,"file":"convertBufferToMessage.js","sourceRoot":"","sources":["../../../src/utils/convertBufferToMessage.ts"],"names":[],"mappings":";AAAA,uCAAuC;AACvC,kCAAkC;;AAOlC,0DAaC;;AAlBD,wDAAwB;AAExB;;GAEG;AACH,SAAgB,uBAAuB,CAAC,GAAW;;IACjD,MAAM,WAAW,GAAG,cAAI,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IAC7C,IAAI,CAAC,CAAA,MAAA,WAAW,CAAC,IAAI,0CAAE,OAAO,CAAA,EAAE,CAAC;QAC/B,OAAO,CAAC,WAAsC,CAAC,CAAC;IAClD,CAAC;IAED,IAAI,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;QAC5C,OAAO,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,OAAe,EAAE,EAAE;YACtD,OAAO,cAAI,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,OAAO,CAAC,cAAI,CAAC,OAAO,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAA4B,CAAC,CAAC;AACpF,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport rhea from \"rhea\";\n\n/**\n * Converts `Buffer`s received from `onMessage` events to an array of messages.\n */\nexport function convertBufferToMessages(buf: Buffer): rhea.Message[] {\n  const amqpMessage = rhea.message.decode(buf);\n  if (!amqpMessage.body?.content) {\n    return [amqpMessage as unknown as rhea.Message];\n  }\n\n  if (Array.isArray(amqpMessage.body.content)) {\n    return amqpMessage.body.content.map((content: Buffer) => {\n      return rhea.message.decode(content);\n    });\n  }\n\n  return [rhea.message.decode(amqpMessage.body.content) as unknown as rhea.Message];\n}\n"]}