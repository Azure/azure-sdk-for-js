{"version":3,"file":"cbsAccepted.js","sourceRoot":"","sources":["../../../../src/messages/cbs/cbsAccepted.ts"],"names":[],"mappings":";AAAA,uCAAuC;AACvC,kCAAkC;;AASlC,8CAiBC;;AAxBD,wDAAwB;AAOxB,SAAgB,iBAAiB,CAAC,UAAoC,EAAE;IACtE,MAAM,WAAW,GAAiB;QAChC,IAAI,EAAE,SAAS;QACf,sBAAsB,EAAE;YACtB,aAAa,EAAE,cAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC;YACvC,oBAAoB,EAAE,UAAU;SACjC;KACF,CAAC;IAEF,IAAI,OAAO,CAAC,UAAU,EAAE,CAAC;QACvB,WAAW,CAAC,EAAE,GAAG,OAAO,CAAC,UAAU,CAAC;IACtC,CAAC;IACD,IAAI,OAAO,CAAC,aAAa,EAAE,CAAC;QAC1B,WAAW,CAAC,cAAc,GAAG,OAAO,CAAC,aAAa,CAAC;IACrD,CAAC;IAED,OAAO,WAAW,CAAC;AACrB,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport rhea from \"rhea\";\n\nexport interface CreateCbsAcceptedOptions {\n  correlationId?: string;\n  toLinkName?: string;\n}\n\nexport function createCbsAccepted(options: CreateCbsAcceptedOptions = {}): rhea.Message {\n  const amqpMessage: rhea.Message = {\n    body: undefined,\n    application_properties: {\n      \"status-code\": rhea.types.wrap_int(202),\n      \"status-description\": \"Accepted\",\n    },\n  };\n\n  if (options.toLinkName) {\n    amqpMessage.to = options.toLinkName;\n  }\n  if (options.correlationId) {\n    amqpMessage.correlation_id = options.correlationId;\n  }\n\n  return amqpMessage;\n}\n"]}