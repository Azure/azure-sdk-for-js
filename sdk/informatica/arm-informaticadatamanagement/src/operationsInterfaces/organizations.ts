/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  InformaticaOrganizationResource,
  OrganizationsListBySubscriptionOptionalParams,
  OrganizationsListByResourceGroupOptionalParams,
  OrganizationsGetOptionalParams,
  OrganizationsGetResponse,
  OrganizationsCreateOrUpdateOptionalParams,
  OrganizationsCreateOrUpdateResponse,
  InformaticaOrganizationResourceUpdate,
  OrganizationsUpdateOptionalParams,
  OrganizationsUpdateResponse,
  OrganizationsDeleteOptionalParams,
  OrganizationsDeleteResponse,
  OrganizationsGetAllServerlessRuntimesOptionalParams,
  OrganizationsGetAllServerlessRuntimesResponse,
  OrganizationsGetServerlessMetadataOptionalParams,
  OrganizationsGetServerlessMetadataResponse,
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Organizations. */
export interface Organizations {
  /**
   * List InformaticaOrganizationResource resources by subscription ID
   * @param options The options parameters.
   */
  listBySubscription(
    options?: OrganizationsListBySubscriptionOptionalParams,
  ): PagedAsyncIterableIterator<InformaticaOrganizationResource>;
  /**
   * List InformaticaOrganizationResource resources by resource group
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: OrganizationsListByResourceGroupOptionalParams,
  ): PagedAsyncIterableIterator<InformaticaOrganizationResource>;
  /**
   * Get a InformaticaOrganizationResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param organizationName Name of the Organizations resource
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    organizationName: string,
    options?: OrganizationsGetOptionalParams,
  ): Promise<OrganizationsGetResponse>;
  /**
   * Create a InformaticaOrganizationResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param organizationName Name of the Organizations resource
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateOrUpdate(
    resourceGroupName: string,
    organizationName: string,
    resource: InformaticaOrganizationResource,
    options?: OrganizationsCreateOrUpdateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<OrganizationsCreateOrUpdateResponse>,
      OrganizationsCreateOrUpdateResponse
    >
  >;
  /**
   * Create a InformaticaOrganizationResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param organizationName Name of the Organizations resource
   * @param resource Resource create parameters.
   * @param options The options parameters.
   */
  beginCreateOrUpdateAndWait(
    resourceGroupName: string,
    organizationName: string,
    resource: InformaticaOrganizationResource,
    options?: OrganizationsCreateOrUpdateOptionalParams,
  ): Promise<OrganizationsCreateOrUpdateResponse>;
  /**
   * Update a InformaticaOrganizationResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param organizationName Name of the Organizations resource
   * @param properties The resource properties to be updated.
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    organizationName: string,
    properties: InformaticaOrganizationResourceUpdate,
    options?: OrganizationsUpdateOptionalParams,
  ): Promise<OrganizationsUpdateResponse>;
  /**
   * Delete a InformaticaOrganizationResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param organizationName Name of the Organizations resource
   * @param options The options parameters.
   */
  beginDelete(
    resourceGroupName: string,
    organizationName: string,
    options?: OrganizationsDeleteOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<OrganizationsDeleteResponse>,
      OrganizationsDeleteResponse
    >
  >;
  /**
   * Delete a InformaticaOrganizationResource
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param organizationName Name of the Organizations resource
   * @param options The options parameters.
   */
  beginDeleteAndWait(
    resourceGroupName: string,
    organizationName: string,
    options?: OrganizationsDeleteOptionalParams,
  ): Promise<OrganizationsDeleteResponse>;
  /**
   * Gets all serverless runtime resources in a given informatica organization resource.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param organizationName Name of the Organizations resource
   * @param options The options parameters.
   */
  getAllServerlessRuntimes(
    resourceGroupName: string,
    organizationName: string,
    options?: OrganizationsGetAllServerlessRuntimesOptionalParams,
  ): Promise<OrganizationsGetAllServerlessRuntimesResponse>;
  /**
   * Gets Metadata of the serverless runtime environment.
   * @param resourceGroupName The name of the resource group. The name is case insensitive.
   * @param organizationName Name of the Organizations resource
   * @param options The options parameters.
   */
  getServerlessMetadata(
    resourceGroupName: string,
    organizationName: string,
    options?: OrganizationsGetServerlessMetadataOptionalParams,
  ): Promise<OrganizationsGetServerlessMetadataResponse>;
}
