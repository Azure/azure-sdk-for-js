{"version":3,"file":"runtimeInfo-react-native.mjs","sourceRoot":"","sources":["../../../src/util/runtimeInfo-react-native.mts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAElC,OAAO,EAAE,QAAQ,EAAE,MAAM,cAAc,CAAC;AAExC;;;GAGG;AACH,MAAM,UAAU,eAAe;IAC7B,OAAO,IAAI,QAAQ,CAAC,EAAE,IAAI,QAAQ,CAAC,OAAO,GAAG,CAAC;AAChD,CAAC;AAED;;;GAGG;AACH,MAAM,UAAU,gBAAgB;;IAC9B,IAAI,MAAA,QAAQ,CAAC,SAAS,0CAAE,kBAAkB,EAAE,CAAC;QAC3C,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,QAAQ,CAAC,SAAS,CAAC,kBAAkB,CAAC;QACtE,OAAO,gBAAgB,KAAK,IAAI,KAAK,IAAI,KAAK,EAAE,CAAC;IACnD,CAAC;IACD,OAAO,sBAAsB,CAAC;AAChC,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { Platform } from \"react-native\";\n\n/**\n * Returns information about the platform this function is being run on.\n * @internal\n */\nexport function getPlatformInfo(): string {\n  return `(${Platform.OS}-${Platform.Version})`;\n}\n\n/**\n * Returns information about React-Native this function is being run on.\n * @internal\n */\nexport function getFrameworkInfo(): string {\n  if (Platform.constants?.reactNativeVersion) {\n    const { major, minor, patch } = Platform.constants.reactNativeVersion;\n    return `react-native/${major}.${minor}.${patch}`;\n  }\n  return `react-native/unknown`;\n}\n"]}