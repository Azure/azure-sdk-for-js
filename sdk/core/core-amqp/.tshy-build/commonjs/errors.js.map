{"version":3,"file":"errors.js","sourceRoot":"","sources":["../../src/errors.ts"],"names":[],"mappings":";AAAA,uCAAuC;AACvC,kCAAkC;AAClC,2BAA2B;;;AAke3B,4CAEC;AAwHD,sCAcC;AAoDD,8BAqFC;AAhvBD,+CAAsF;AACtF,gDAA0F;AAC1F,8CAAqD;AAErD;;;GAGG;AACH,IAAY,qBAqBX;AArBD,WAAY,qBAAqB;IAC/B,qGAA+D,CAAA;IAC/D,uFAAkD,CAAA;IAClD,mGAA8D,CAAA;IAC9D,iIAAuE,CAAA;IACvE,yHAA+D,CAAA;IAC/D,yHAA+D,CAAA;IAC/D,uIAAqF,CAAA;IACrF,yHAAoE,CAAA;IACpE,6GAAuE,CAAA;IACvE,mHAAkE,CAAA;IAClE,iIAAyE,CAAA;IACzE,qHAA6D,CAAA;IAC7D,uIAAsE,CAAA;IACtE,6HAAiE,CAAA;IACjE,qHAAmE,CAAA;IACnE,yHAAuE,CAAA;IACvE,2FAAgD,CAAA;IAChD,2FAAsD,CAAA;IACtD,2GAAgE,CAAA;IAChE,mHAAiE,CAAA;AACnE,CAAC,EArBW,qBAAqB,qCAArB,qBAAqB,QAqBhC;AAED;;GAEG;AACH,IAAY,wBA+MX;AA/MD,WAAY,wBAAwB;IAClC;;OAEG;IACH,6FAAmE,CAAA;IACnE;;OAEG;IACH,gFAAsD,CAAA;IACtD;;OAEG;IACH,kGAAwE,CAAA;IACxE;;;OAGG;IACH,wFAA8D,CAAA;IAC9D;;OAEG;IACH,qFAA2D,CAAA;IAC3D;;OAEG;IACH,qGAA2E,CAAA;IAC3E;;OAEG;IACH,0FAAgE,CAAA;IAChE;;OAEG;IACH,oFAA0D,CAAA;IAC1D;;OAEG;IACH,oFAA0D,CAAA;IAC1D;;OAEG;IACH,iGAAuE,CAAA;IACvE;;OAEG;IACH,uEAA6C,CAAA;IAC7C;;OAEG;IACH,wEAA8C,CAAA;IAC9C;;OAEG;IACH,oFAA0D,CAAA;IAC1D;;OAEG;IACH,gFAAsD,CAAA;IACtD;;OAEG;IACH,wEAA8C,CAAA;IAC9C;;OAEG;IACH,sEAA4C,CAAA;IAC5C;;;;;;OAMG;IACH,+EAAqD,CAAA;IACrD;;OAEG;IACH,0EAAgD,CAAA;IAChD;;OAEG;IACH,uEAAuE;IACvE,2EAAiD,CAAA;IACjD;;OAEG;IACH,6EAAmD,CAAA;IACnD;;OAEG;IACH,qFAA2D,CAAA;IAC3D;;OAEG;IACH,2FAAiE,CAAA;IACjE;;OAEG;IACH,gFAAsD,CAAA;IACtD;;OAEG;IACH,uEAAuE;IACvE,yFAA+D,CAAA;IAC/D;;OAEG;IACH,6DAAmC,CAAA;IACnC;;OAEG;IACH,oEAA0C,CAAA;IAC1C;;;OAGG;IACH,wEAA8C,CAAA;IAC9C;;OAEG;IACH,0EAAgD,CAAA;IAChD;;OAEG;IACH,oEAA0C,CAAA;IAC1C;;;;OAIG;IACH,gFAAsD,CAAA;IACtD;;OAEG;IACH,yEAA+C,CAAA;IAC/C;;OAEG;IACH,4FAAkE,CAAA;IAClE;;OAEG;IACH,oFAA0D,CAAA;IAC1D;;OAEG;IACH,oEAA0C,CAAA;IAC1C;;;OAGG;IACH,0EAAgD,CAAA;IAChD;;OAEG;IACH,yFAA+D,CAAA;IAC/D;;OAEG;IACH,wEAA8C,CAAA;IAC9C;;OAEG;IACH,2EAAiD,CAAA;IACjD;;;OAGG;IACH,oFAA0D,CAAA;IAC1D;;OAEG;IACH,4EAAkD,CAAA;IAClD;;OAEG;IACH,0EAAgD,CAAA;IAChD;;OAEG;IACH,gFAAsD,CAAA;IACtD;;OAEG;IACH,yEAA+C,CAAA;IAC/C;;OAEG;IACH,0EAAgD,CAAA;IAChD;;OAEG;IACH,yFAA+D,CAAA;IAC/D;;OAEG;IACH,oFAA0D,CAAA;IAC1D;;OAEG;IACH,gFAAsD,CAAA;IAEtD;;;OAGG;IACH,wDAA8B,CAAA;AAChC,CAAC,EA/MW,wBAAwB,wCAAxB,wBAAwB,QA+MnC;AAED;;GAEG;AACH,IAAY,wBAoMX;AApMD,WAAY,wBAAwB;IAClC;;OAEG;IACH,6FAAiE,CAAA;IACjE;;OAEG;IACH,gFAAoD,CAAA;IACpD;;OAEG;IACH,kGAAsE,CAAA;IACtE;;;OAGG;IACH,wFAA4D,CAAA;IAC5D;;OAEG;IACH,qFAAyD,CAAA;IACzD;;OAEG;IACH,qGAAyE,CAAA;IACzE;;OAEG;IACH,0FAA8D,CAAA;IAC9D;;OAEG;IACH,oFAAwD,CAAA;IACxD;;OAEG;IACH,oFAAwD,CAAA;IACxD;;OAEG;IACH,iGAAqE,CAAA;IACrE;;OAEG;IACH,uEAA2C,CAAA;IAC3C;;OAEG;IACH,wEAA4C,CAAA;IAC5C;;OAEG;IACH,oFAAwD,CAAA;IACxD;;OAEG;IACH,gFAAoD,CAAA;IACpD;;OAEG;IACH,wEAA4C,CAAA;IAC5C;;OAEG;IACH,sEAA0C,CAAA;IAC1C;;;;;;OAMG;IACH,+EAAmD,CAAA;IACnD;;OAEG;IACH,0EAA8C,CAAA;IAC9C;;OAEG;IACH,6EAAiD,CAAA;IACjD;;OAEG;IACH,qFAAyD,CAAA;IACzD;;OAEG;IACH,2FAA+D,CAAA;IAC/D;;OAEG;IACH,gFAAoD,CAAA;IACpD;;OAEG;IACH,6DAAiC,CAAA;IACjC;;OAEG;IACH,oEAAwC,CAAA;IACxC;;;OAGG;IACH,wEAA4C,CAAA;IAC5C;;OAEG;IACH,0EAA8C,CAAA;IAC9C;;OAEG;IACH,oEAAwC,CAAA;IACxC;;;;OAIG;IACH,gFAAoD,CAAA;IACpD;;OAEG;IACH,yEAA6C,CAAA;IAC7C;;OAEG;IACH,4FAAgE,CAAA;IAChE;;OAEG;IACH,oFAAwD,CAAA;IACxD;;OAEG;IACH,oEAAwC,CAAA;IACxC;;;OAGG;IACH,0EAA8C,CAAA;IAC9C;;OAEG;IACH,yFAA6D,CAAA;IAC7D;;OAEG;IACH,wEAA4C,CAAA;IAC5C;;OAEG;IACH,2EAA+C,CAAA;IAC/C;;;OAGG;IACH,oFAAwD,CAAA;IACxD;;OAEG;IACH,4EAAgD,CAAA;IAChD;;OAEG;IACH,0EAA8C,CAAA;IAC9C;;OAEG;IACH,gFAAoD,CAAA;IACpD;;OAEG;IACH,yEAA6C,CAAA;IAC7C;;OAEG;IACH,0EAA8C,CAAA;IAC9C;;OAEG;IACH,yFAA6D,CAAA;IAC7D;;OAEG;IACH,oFAAwD,CAAA;IACxD;;OAEG;IACH,gFAAoD,CAAA;IACpD;;;OAGG;IACH,wDAA4B,CAAA;AAC9B,CAAC,EApMW,wBAAwB,wCAAxB,wBAAwB,QAoMnC;AAmBD;;GAEG;AACH,MAAM,uBAAuB,GAA2D;IACtF,SAAS;IACT,MAAM;IACN,OAAO;IACP,MAAM;IACN,MAAM;IACN,OAAO;IACP,SAAS;CACV,CAAC;AAEF;;;;GAIG;AACH,SAAgB,gBAAgB,CAAC,KAA6B;IAC5D,OAAO,KAAK,CAAC,IAAI,KAAK,gBAAgB,CAAC;AACzC,CAAC;AAED;;GAEG;AACH,MAAa,cAAe,SAAQ,KAAK;IAsCvC;;;;OAIG;IACH,YAAY,OAAe,EAAE,aAAqB;QAChD,KAAK,CAAC,OAAO,CAAC,CAAC;QA7BjB;;WAEG;QACH,SAAI,GAAW,gBAAgB,CAAC;QAWhC;;;WAGG;QACH,cAAS,GAAY,IAAI,CAAC;QAaxB,IAAI,CAAC,aAAa,EAAE,CAAC;YACnB,OAAO;QACT,CAAC;QAED,oCAAoC;QACpC,KAAK,MAAM,QAAQ,IAAI,uBAAuB,EAAE,CAAC;YAC/C,IAAK,aAAoC,CAAC,QAAQ,CAAC,IAAI,SAAS,EAAE,CAAC;gBACjE,IAAI,CAAC,QAAQ,CAAC,GAAI,aAAoC,CAAC,QAAQ,CAAC,CAAC;YACnE,CAAC;QACH,CAAC;IACH,CAAC;CACF;AAzDD,wCAyDC;AAED;;;;;GAKG;AACU,QAAA,eAAe,GAAa;IACvC,qBAAqB;IACrB,iBAAiB;IACjB,yBAAyB;IACzB,yBAAyB;IAEzB,4EAA4E;IAC5E,wEAAwE;IACxE,mBAAmB;IAEnB,2FAA2F;IAC3F,0FAA0F;IAC1F,uBAAuB;IAEvB,iBAAiB;IACjB,qBAAqB;IACrB,gBAAgB;IAChB,mBAAmB;IACnB,uBAAuB;IACvB,4BAA4B;IAE5B,oGAAoG;IACpG,mIAAmI;IACnI,yBAAyB;CAC1B,CAAC;AAEF;;GAEG;AACH,IAAY,0BAeX;AAfD,WAAY,0BAA0B;IACpC,gEAAgE;IAChE,0DAA4B,CAAA;IAC5B,iEAAmC,CAAA;IACnC,qEAAuC,CAAA;IACvC,iEAAmC,CAAA;IACnC,kEAAoC,CAAA;IACpC,gEAAkC,CAAA;IAClC,iEAAmC,CAAA;IACnC,iEAAmC,CAAA;IACnC,mEAAqC,CAAA;IACrC,8DAAgC,CAAA;IAChC,qEAAuC,CAAA;IACvC,iEAAmC,CAAA;IACnC,+DAA+D;AACjE,CAAC,EAfW,0BAA0B,0CAA1B,0BAA0B,QAerC;AAED;;;GAGG;AACH,SAAgB,aAAa,CAAC,GAAY;IACxC,IAAI,CAAC,IAAA,kCAAsB,EAAC,GAAG,EAAE,CAAC,MAAM,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC,EAAE,CAAC;QAC/D,OAAO,KAAK,CAAC;IACf,CAAC;IAED,IAAI,CAAC,IAAA,mBAAQ,EAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAA,mBAAQ,EAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC;QAClD,OAAO,KAAK,CAAC;IACf,CAAC;IAED,IAAI,CAAC,IAAA,mBAAQ,EAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,IAAA,mBAAQ,EAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC;QACjD,OAAO,KAAK,CAAC;IACf,CAAC;IAED,OAAO,IAAI,CAAC;AACd,CAAC;AAED;;;;;;GAMG;AACH,SAAS,uBAAuB,CAAC,GAAQ;IACvC,IAAI,MAAM,GAAY,KAAK,CAAC;IAC5B,IACE,CAAC,sBAAU;QACX,IAAI;QACJ,GAAG,CAAC,IAAI,KAAK,OAAO;QACpB,GAAG,CAAC,MAAM,YAAa,IAAY,CAAC,SAAS,EAC7C,CAAC;QACD,MAAM,GAAG,IAAI,CAAC;IAChB,CAAC;IACD,OAAO,MAAM,CAAC;AAChB,CAAC;AAED;;;;GAIG;AACH,SAAS,YAAY,CAAC,GAAQ;IAC5B,OAAO,OAAO,GAAG,CAAC,KAAK,KAAK,QAAQ,IAAI,OAAO,GAAG,CAAC,OAAO,KAAK,QAAQ,CAAC;AAC1E,CAAC;AAED;;GAEG;AACH,MAAM,iBAAiB,GAAG;IACxB,2FAA2F;IAC3F,uBAAuB;IAEvB,oGAAoG;IACpG,yBAAyB;IAEzB,yEAAyE;IACzE,0BAA0B;CAC3B,CAAC;AAEF;;;;;;GAMG;AACH,SAAgB,SAAS,CAAC,GAAY;IACpC,IAAI,CAAC,IAAA,qBAAS,EAAC,GAAG,CAAC,EAAE,CAAC;QACpB,OAAO,IAAI,KAAK,CAAC,4BAA4B,CAAC,CAAC;IACjD,CAAC;SAAM,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE,CAAC;QACnC,sEAAsE;QACtE,OAAO,IAAI,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;IAChC,CAAC;IAED,MAAM,MAAM,GAAG,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC;IAEnD,iGAAiG;IACjG,+DAA+D;IAC/D,IAAI,MAAM,YAAY,SAAS,IAAI,MAAM,YAAY,UAAU,EAAE,CAAC;QAChE,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,IAAI,WAAW,CAAC,MAAM,CAAC,EAAE,CAAC;QACxB,YAAY;QACZ,MAAM,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;QACnC,MAAM,WAAW,GAAG,MAAM,CAAC,WAAY,CAAC;QACxC,MAAM,KAAK,GAAG,IAAI,cAAc,CAAC,WAAW,CAAC,CAAC;QAC9C,IAAK,MAAc,CAAC,KAAK;YAAE,KAAK,CAAC,KAAK,GAAI,MAAc,CAAC,KAAK,CAAC;QAC/D,KAAK,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;QACzB,IAAI,SAAS,EAAE,CAAC;YACd,KAAK,CAAC,IAAI,GAAG,wBAAwB,CAAC,SAAkD,CAAC,CAAC;QAC5F,CAAC;QACD,IACE,WAAW;YACX,CAAC,WAAW,CAAC,QAAQ,CAAC,kBAAkB,CAAC;gBACvC,WAAW,CAAC,KAAK,CAAC,+CAA+C,CAAC,KAAK,IAAI,CAAC,EAC9E,CAAC;YACD,KAAK,CAAC,IAAI,GAAG,8BAA8B,CAAC;QAC9C,CAAC;QACD,IAAI,KAAK,CAAC,IAAI,IAAI,uBAAe,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC;YAC7D,YAAY;YACZ,KAAK,CAAC,SAAS,GAAG,KAAK,CAAC;QAC1B,CAAC;QACD,OAAO,KAAK,CAAC;IACf,CAAC;IAED,IAAI,MAAM,YAAY,KAAK,IAAI,MAAM,CAAC,IAAI,KAAK,gBAAgB,EAAE,CAAC;QAChE,qBAAqB;QACrB,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,IAAI,aAAa,CAAC,MAAM,CAAC,EAAE,CAAC;QAC1B,YAAY;QACZ,MAAM,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC;QAC9B,MAAM,WAAW,GAAG,MAAM,CAAC,OAAO,CAAC;QACnC,MAAM,KAAK,GAAG,IAAI,cAAc,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;QACtD,IAAI,SAAS,GAAG,aAAa,CAAC;QAC9B,IAAI,SAAS,EAAE,CAAC;YACd,MAAM,kBAAkB,GACtB,0BAA0B,CAAC,SAAoD,CAAC,CAAC;YACnF,SAAS;gBACP,wBAAwB,CAAC,kBAA2D,CAAC,CAAC;QAC1F,CAAC;QACD,IAAI,uBAAe,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC;YAC9C,YAAY;YACZ,KAAK,CAAC,SAAS,GAAG,KAAK,CAAC;QAC1B,CAAC;QACD,OAAO,KAAK,CAAC;IACf,CAAC;IAED,IAAI,uBAAuB,CAAC,MAAM,CAAC,EAAE,CAAC;QACpC,uGAAuG;QACvG,MAAM,KAAK,GAAG,IAAI,cAAc,CAAC,8BAA8B,CAAC,CAAC;QACjE,KAAK,CAAC,IAAI,GAAG,wBAAwB,CAAC,wBAAwB,CAAC,yBAAyB,CAAC,CAAC;QAC1F,KAAK,CAAC,SAAS,GAAG,KAAK,CAAC;QACxB,OAAO,KAAK,CAAC;IACf,CAAC;IAED,iFAAiF;IACjF,wCAAwC;IACxC,IAAI,IAAA,mBAAO,EAAC,MAAM,CAAC,IAAI,iBAAiB,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC;QACrE,MAAM,KAAK,GAAG,IAAI,cAAc,CAAC,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;QACzD,KAAK,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;QACzB,IAAI,KAAK,CAAC,IAAI,IAAI,uBAAe,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC;YAC7D,YAAY;YACZ,KAAK,CAAC,SAAS,GAAG,KAAK,CAAC;QAC1B,CAAC;QACD,OAAO,KAAK,CAAC;IACf,CAAC;IAED,OAAO,IAAA,mBAAO,EAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;AAC9D,CAAC;AAED;;GAEG;AACH,SAAS,WAAW,CAAC,KAAU;IAC7B,OAAO,IAAA,0BAAe,EAAC,KAAK,CAAC,CAAC;AAChC,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/* eslint-disable eqeqeq */\n\nimport type { AmqpError } from \"rhea-promise\";\nimport { AmqpResponseStatusCode, isAmqpError as rheaIsAmqpError } from \"rhea-promise\";\nimport { isDefined, isError, isNodeLike, isObjectWithProperties } from \"@azure/core-util\";\nimport { isNumber, isString } from \"./util/utils.js\";\n\n/**\n * Maps the conditions to the numeric AMQP Response status codes.\n * @internal\n */\nexport enum ConditionStatusMapper {\n  \"com.microsoft:timeout\" = AmqpResponseStatusCode.RequestTimeout,\n  \"amqp:not-found\" = AmqpResponseStatusCode.NotFound,\n  \"amqp:not-implemented\" = AmqpResponseStatusCode.NotImplemented,\n  \"com.microsoft:entity-already-exists\" = AmqpResponseStatusCode.Conflict,\n  \"com.microsoft:message-lock-lost\" = AmqpResponseStatusCode.Gone,\n  \"com.microsoft:session-lock-lost\" = AmqpResponseStatusCode.Gone,\n  \"com.microsoft:no-matching-subscription\" = AmqpResponseStatusCode.InternalServerError,\n  \"amqp:link:message-size-exceeded\" = AmqpResponseStatusCode.Forbidden,\n  \"com.microsoft:server-busy\" = AmqpResponseStatusCode.ServiceUnavailable,\n  \"com.microsoft:argument-error\" = AmqpResponseStatusCode.BadRequest,\n  \"com.microsoft:argument-out-of-range\" = AmqpResponseStatusCode.BadRequest,\n  \"com.microsoft:store-lock-lost\" = AmqpResponseStatusCode.Gone,\n  \"com.microsoft:session-cannot-be-locked\" = AmqpResponseStatusCode.Gone,\n  \"com.microsoft:partition-not-owned\" = AmqpResponseStatusCode.Gone,\n  \"com.microsoft:entity-disabled\" = AmqpResponseStatusCode.BadRequest,\n  \"com.microsoft:publisher-revoked\" = AmqpResponseStatusCode.Unauthorized,\n  \"amqp:link:stolen\" = AmqpResponseStatusCode.Gone,\n  \"amqp:not-allowed\" = AmqpResponseStatusCode.BadRequest,\n  \"amqp:unauthorized-access\" = AmqpResponseStatusCode.Unauthorized,\n  \"amqp:resource-limit-exceeded\" = AmqpResponseStatusCode.Forbidden,\n}\n\n/**\n * Maps the amqp error conditions to the Error names.\n */\nexport enum ConditionErrorNameMapper {\n  /**\n   * Error is thrown when the address is already in use.\n   */\n  \"com.microsoft:address-already-in-use\" = \"AddressAlreadyInUseError\",\n  /**\n   * Error is thrown when the store lock is lost.\n   */\n  \"com.microsoft:store-lock-lost\" = \"StoreLockLostError\",\n  /**\n   * Error is thrown when a matching subscription is not found.\n   */\n  \"com.microsoft:no-matching-subscription\" = \"NoMatchingSubscriptionError\",\n  /**\n   * Error is thrown when an attempt is made to access a partition that is not owned by the\n   * requesting entity.\n   */\n  \"com.microsoft:partition-not-owned\" = \"PartitionNotOwnedError\",\n  /**\n   * Error is thrown when access to publisher has been revoked.\n   */\n  \"com.microsoft:publisher-revoked\" = \"PublisherRevokedError\",\n  /**\n   * Error is thrown when an attempt is made to create an entity that already exists.\n   */\n  \"com.microsoft:entity-already-exists\" = \"MessagingEntityAlreadyExistsError\",\n  /**\n   * Error is thrown when trying to access/connect to a disabled messaging entity.\n   */\n  \"com.microsoft:entity-disabled\" = \"MessagingEntityDisabledError\",\n  /**\n   * Error is thrown when the lock on the message is lost.\n   */\n  \"com.microsoft:message-lock-lost\" = \"MessageLockLostError\",\n  /**\n   * Error is thrown when the lock on the Azure ServiceBus session is lost.\n   */\n  \"com.microsoft:session-lock-lost\" = \"SessionLockLostError\",\n  /**\n   * Error is thrown when the Azure ServiceBus session cannot be locked.\n   */\n  \"com.microsoft:session-cannot-be-locked\" = \"SessionCannotBeLockedError\",\n  /**\n   * Error is thrown when an internal server error occurred. You may have found a bug?\n   */\n  \"amqp:internal-error\" = \"InternalServerError\", // Retryable\n  /**\n   * Error for signaling general communication errors related to messaging operations.\n   */\n  \"amqp:not-found\" = \"ServiceCommunicationError\",\n  /**\n   * Error is thrown when the message is not found.\n   */\n  \"com.microsoft:message-not-found\" = \"MessageNotFoundError\",\n  /**\n   * Error is thrown when relay is not found.\n   */\n  \"com.microsoft:relay-not-found\" = \"RelayNotFoundError\",\n  /**\n   * Error is thrown when a feature is not implemented yet but the placeholder is present.\n   */\n  \"amqp:not-implemented\" = \"NotImplementedError\",\n  /**\n   * Error is thrown when an operation is attempted but is not allowed.\n   */\n  \"amqp:not-allowed\" = \"InvalidOperationError\",\n  /**\n   * Error is thrown the the Azure EventHub/ServiceBus quota has been exceeded.\n   * Quotas are reset periodically, this operation will have to wait until then.\n   * The messaging entity has reached its maximum allowable size.\n   * This can happen if the maximum number of receivers (which is 5) has already\n   * been opened on a per-consumer group level.\n   */\n  \"amqp:resource-limit-exceeded\" = \"QuotaExceededError\",\n  /**\n   * Error is thrown when the connection parameters are wrong and the server refused the connection.\n   */\n  \"amqp:unauthorized-access\" = \"UnauthorizedError\",\n  /**\n   * Error is thrown when the connection parameters are wrong and the server refused the connection.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-duplicate-enum-values\n  \"com.microsoft:auth-failed\" = \"UnauthorizedError\",\n  /**\n   * Error is thrown when the service is unavailable. The operation should be retried.\n   */\n  \"com.microsoft:timeout\" = \"ServiceUnavailableError\", // Retryable\n  /**\n   * Error is thrown when no new messages are received for the specified time.\n   */\n  \"com.microsoft:message-wait-timeout\" = \"MessageWaitTimeout\",\n  /**\n   * Error is thrown when an argument has a value that is out of the admissible range.\n   */\n  \"com.microsoft:argument-out-of-range\" = \"ArgumentOutOfRangeError\",\n  /**\n   * Error is thrown when a condition that should have been met in order to execute an operation was not.\n   */\n  \"amqp:precondition-failed\" = \"PreconditionFailedError\",\n  /**\n   * Error is thrown when a condition that should have been met in order to execute an operation was not.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-duplicate-enum-values\n  \"com.microsoft:precondition-failed\" = \"PreconditionFailedError\",\n  /**\n   * Error is thrown when data could not be decoded.\n   */\n  \"amqp:decode-error\" = \"DecodeError\",\n  /**\n   * Error is thrown when an invalid field was passed in a frame body, and the operation could not proceed.\n   */\n  \"amqp:invalid-field\" = \"InvalidFieldError\",\n  /**\n   * Error is thrown when the client attempted to work with a server entity to which it\n   * has no access because another client is working with it.\n   */\n  \"amqp:resource-locked\" = \"ResourceLockedError\",\n  /**\n   * Error is thrown when a server entity the client is working with has been deleted.\n   */\n  \"amqp:resource-deleted\" = \"ResourceDeletedError\",\n  /**\n   * Error is thrown when the peer sent a frame that is not permitted in the current state.\n   */\n  \"amqp:illegal-state\" = \"IllegalStateError\",\n  /**\n   * Error is thrown when the peer cannot send a frame because the smallest encoding of\n   * the performative with the currently valid values would be too large to fit within\n   * a frame of the agreed maximum frame size.\n   */\n  \"amqp:frame-size-too-small\" = \"FrameSizeTooSmallError\",\n  /**\n   * Error is thrown when an operator intervened to detach for some reason.\n   */\n  \"amqp:link:detach-forced\" = \"DetachForcedError\", // Retryable\n  /**\n   * Error is thrown when the peer sent more message transfers than currently allowed on the link.\n   */\n  \"amqp:link:transfer-limit-exceeded\" = \"TransferLimitExceededError\", // Retryable\n  /**\n   * Error is thrown when the message sent is too large: the maximum size is 256Kb.\n   */\n  \"amqp:link:message-size-exceeded\" = \"MessageTooLargeError\",\n  /**\n   * Error is thrown when the address provided cannot be resolved to a terminus at the current container.\n   */\n  \"amqp:link:redirect\" = \"LinkRedirectError\",\n  /**\n   * Error is thrown when two or more instances connect to the same partition\n   * with different epoch values.\n   */\n  \"amqp:link:stolen\" = \"ReceiverDisconnectedError\",\n  /**\n   * Error is thrown when the peer violated incoming window for the session.\n   */\n  \"amqp:session:window-violation\" = \"SessionWindowViolationError\",\n  /**\n   * Error is thrown when input was received for a link that was detached with an error.\n   */\n  \"amqp:session:errant-link\" = \"ErrantLinkError\",\n  /**\n   * Error is thrown when an attach was received using a handle that is already in use for an attached link.\n   */\n  \"amqp:session:handle-in-use\" = \"HandleInUseError\",\n  /**\n   * Error is thrown when a frame (other than attach) was received referencing a handle which is not\n   * currently in use of an attached link.\n   */\n  \"amqp:session:unattached-handle\" = \"UnattachedHandleError\",\n  /**\n   * Error is thrown when an operator intervened to close the connection for some reason.\n   */\n  \"amqp:connection:forced\" = \"ConnectionForcedError\", // Retryable\n  /**\n   * Error is thrown when a valid frame header cannot be formed from the incoming byte stream.\n   */\n  \"amqp:connection:framing-error\" = \"FramingError\",\n  /**\n   * Error is thrown when the container is no longer available on the current connection.\n   */\n  \"amqp:connection:redirect\" = \"ConnectionRedirectError\",\n  /**\n   * Error is thrown when the server is busy. Callers should wait a while and retry the operation.\n   */\n  \"com.microsoft:server-busy\" = \"ServerBusyError\", // Retryable\n  /**\n   * Error is thrown when an incorrect argument was received.\n   */\n  \"com.microsoft:argument-error\" = \"ArgumentError\",\n  /**\n   * Error is thrown when server cancels the operation due to an internal issue.\n   */\n  \"com.microsoft:operation-cancelled\" = \"OperationCancelledError\", // Retryable\n  /**\n   * Error is thrown when the client sender does not have enough link credits to send the message.\n   */\n  \"client.sender:not-enough-link-credit\" = \"SenderBusyError\", // Retryable\n  /**\n   * Error is thrown when the client sender's link isn't ready\n   */\n  \"client.sender:link-not-ready\" = \"SenderNotReadyError\", // Retryable\n\n  /**\n   * Error is thrown when a low level system error is thrown by node.js.\n   * {@link https://nodejs.org/dist/latest-v8.x/docs/api/all.html#errors_class_system_error}\n   */\n  \"system:error\" = \"SystemError\",\n}\n\n/**\n * Maps the Error names to the amqp error conditions.\n */\nexport enum ErrorNameConditionMapper {\n  /**\n   * Error is thrown when the address is already in use.\n   */\n  AddressAlreadyInUseError = \"com.microsoft:address-already-in-use\",\n  /**\n   * Error is thrown when the store lock is lost.\n   */\n  StoreLockLostError = \"com.microsoft:store-lock-lost\",\n  /**\n   * Error is thrown when a matching subscription is not found.\n   */\n  NoMatchingSubscriptionError = \"com.microsoft:no-matching-subscription\",\n  /**\n   * Error is thrown when an attempt is made to access a partition that is not owned by the\n   * requesting entity.\n   */\n  PartitionNotOwnedError = \"com.microsoft:partition-not-owned\",\n  /**\n   * Error is thrown when access to publisher has been revoked.\n   */\n  PublisherRevokedError = \"com.microsoft:publisher-revoked\",\n  /**\n   * Error is thrown when an attempt is made to create an entity that already exists.\n   */\n  MessagingEntityAlreadyExistsError = \"com.microsoft:entity-already-exists\",\n  /**\n   * Error is thrown when trying to access/connect to a disabled messaging entity.\n   */\n  MessagingEntityDisabledError = \"com.microsoft:entity-disabled\",\n  /**\n   * Error is thrown when the lock on the message is lost.\n   */\n  MessageLockLostError = \"com.microsoft:message-lock-lost\",\n  /**\n   * Error is thrown when the lock on the Azure ServiceBus session is lost.\n   */\n  SessionLockLostError = \"com.microsoft:session-lock-lost\",\n  /**\n   * Error is thrown when the Azure ServiceBus session cannot be locked.\n   */\n  SessionCannotBeLockedError = \"com.microsoft:session-cannot-be-locked\",\n  /**\n   * Error is thrown when an internal server error occurred. You may have found a bug?\n   */\n  InternalServerError = \"amqp:internal-error\", // Retryable\n  /**\n   * Error for signaling general communication errors related to messaging operations.\n   */\n  ServiceCommunicationError = \"amqp:not-found\",\n  /**\n   * Error is thrown when message is not found.\n   */\n  MessageNotFoundError = \"com.microsoft:message-not-found\",\n  /**\n   * Error is thrown when relay is not found.\n   */\n  RelayNotFoundError = \"com.microsoft:relay-not-found\",\n  /**\n   * Error is thrown when a feature is not implemented yet but the placeholder is present.\n   */\n  NotImplementedError = \"amqp:not-implemented\",\n  /**\n   * Error is thrown when an operation is attempted but is not allowed.\n   */\n  InvalidOperationError = \"amqp:not-allowed\",\n  /**\n   * Error is thrown the the Azure EventHub/ServiceBus quota has been exceeded.\n   * Quotas are reset periodically, this operation will have to wait until then.\n   * The messaging entity has reached its maximum allowable size.\n   * This can happen if the maximum number of receivers (which is 5) has already\n   * been opened on a per-consumer group level.\n   */\n  QuotaExceededError = \"amqp:resource-limit-exceeded\",\n  /**\n   * Error is thrown when the connection parameters are wrong and the server refused the connection.\n   */\n  UnauthorizedError = \"amqp:unauthorized-access\",\n  /**\n   * Error is thrown when the service is unavailable. The operation should be retried.\n   */\n  ServiceUnavailableError = \"com.microsoft:timeout\", // Retryable\n  /**\n   * Error is thrown when no new messages are received for the specified time.\n   */\n  MessageWaitTimeout = \"com.microsoft:message-wait-timeout\",\n  /**\n   * Error is thrown when an argument has a value that is out of the admissible range.\n   */\n  ArgumentOutOfRangeError = \"com.microsoft:argument-out-of-range\",\n  /**\n   * Error is thrown when a condition that should have been met in order to execute an operation was not.\n   */\n  PreconditionFailedError = \"amqp:precondition-failed\",\n  /**\n   * Error is thrown when data could not be decoded.\n   */\n  DecodeError = \"amqp:decode-error\",\n  /**\n   * Error is thrown when an invalid field was passed in a frame body, and the operation could not proceed.\n   */\n  InvalidFieldError = \"amqp:invalid-field\",\n  /**\n   * Error is thrown when the client attempted to work with a server entity to which it\n   * has no access because another client is working with it.\n   */\n  ResourceLockedError = \"amqp:resource-locked\",\n  /**\n   * Error is thrown when a server entity the client is working with has been deleted.\n   */\n  ResourceDeletedError = \"amqp:resource-deleted\",\n  /**\n   * Error is thrown when the peer sent a frame that is not permitted in the current state.\n   */\n  IllegalStateError = \"amqp:illegal-state\",\n  /**\n   * Error is thrown when the peer cannot send a frame because the smallest encoding of\n   * the performative with the currently valid values would be too large to fit within\n   * a frame of the agreed maximum frame size.\n   */\n  FrameSizeTooSmallError = \"amqp:frame-size-too-small\",\n  /**\n   * Error is thrown when an operator intervened to detach for some reason.\n   */\n  DetachForcedError = \"amqp:link:detach-forced\", // Retryable\n  /**\n   * Error is thrown when the peer sent more message transfers than currently allowed on the link.\n   */\n  TransferLimitExceededError = \"amqp:link:transfer-limit-exceeded\", // Retryable\n  /**\n   * Error is thrown when the message sent is too large: the maximum size is 256Kb.\n   */\n  MessageTooLargeError = \"amqp:link:message-size-exceeded\",\n  /**\n   * Error is thrown when the address provided cannot be resolved to a terminus at the current container.\n   */\n  LinkRedirectError = \"amqp:link:redirect\",\n  /**\n   * Error is thrown when two or more instances connect to the same partition\n   * with different epoch values.\n   */\n  ReceiverDisconnectedError = \"amqp:link:stolen\",\n  /**\n   * Error is thrown when the peer violated incoming window for the session.\n   */\n  SessionWindowViolationError = \"amqp:session:window-violation\",\n  /**\n   * Error is thrown when input was received for a link that was detached with an error.\n   */\n  ErrantLinkError = \"amqp:session:errant-link\",\n  /**\n   * Error is thrown when an attach was received using a handle that is already in use for an attached link.\n   */\n  HandleInUseError = \"amqp:session:handle-in-use\",\n  /**\n   * Error is thrown when a frame (other than attach) was received referencing a handle which is not\n   * currently in use of an attached link.\n   */\n  UnattachedHandleError = \"amqp:session:unattached-handle\",\n  /**\n   * Error is thrown when an operator intervened to close the connection for some reason.\n   */\n  ConnectionForcedError = \"amqp:connection:forced\", // Retryable\n  /**\n   * Error is thrown when a valid frame header cannot be formed from the incoming byte stream.\n   */\n  FramingError = \"amqp:connection:framing-error\",\n  /**\n   * Error is thrown when the container is no longer available on the current connection.\n   */\n  ConnectionRedirectError = \"amqp:connection:redirect\",\n  /**\n   * Error is thrown when the server is busy. Callers should wait a while and retry the operation.\n   */\n  ServerBusyError = \"com.microsoft:server-busy\", // Retryable\n  /**\n   * Error is thrown when an incorrect argument was received.\n   */\n  ArgumentError = \"com.microsoft:argument-error\",\n  /**\n   * Error is thrown when server cancels the operation due to an internal issue.\n   */\n  OperationCancelledError = \"com.microsoft:operation-cancelled\", // Retryable\n  /**\n   * Error is thrown when the client sender does not have enough link credits to send the message.\n   */\n  SenderBusyError = \"client.sender:not-enough-link-credit\", // Retryable\n  /**\n   * Error is thrown when the client sender's link isn't ready\n   */\n  SenderNotReadyError = \"client.sender:link-not-ready\", // Retryable\n  /**\n   * Error is thrown when a low level system error is thrown by node.js.\n   * {@link https://nodejs.org/api/errors.html#errors_class_systemerror}\n   */\n  SystemError = \"system:error\",\n}\n\n/**\n * Describes the fields on a Node.js SystemError.\n * Omits fields that are not related to network calls (e.g. file system calls).\n * See https://nodejs.org/dist/latest-v12.x/docs/api/errors.html#errors_class_systemerror\n */\nexport interface NetworkSystemError {\n  address?: string;\n  code: string;\n  errno: string | number;\n  info?: any;\n  message: string;\n  name: string;\n  port?: number;\n  stack: string;\n  syscall: string;\n}\n\n/**\n * @internal\n */\nconst systemErrorFieldsToCopy: (keyof Omit<NetworkSystemError, \"name\" | \"message\">)[] = [\n  \"address\",\n  \"code\",\n  \"errno\",\n  \"info\",\n  \"port\",\n  \"stack\",\n  \"syscall\",\n];\n\n/**\n * Determines if an error is a MessagingError.\n *\n * @param error - An error that can either be an Error or a MessagingError.\n */\nexport function isMessagingError(error: Error | MessagingError): error is MessagingError {\n  return error.name === \"MessagingError\";\n}\n\n/**\n * Describes the base class for Messaging Error.\n */\nexport class MessagingError extends Error {\n  /**\n   * Address to which the network connection failed.\n   * Only present if the `MessagingError` was instantiated with a Node.js `SystemError`.\n   */\n  address?: string;\n  /**\n   * A string label that identifies the error.\n   */\n  code?: string;\n  /**\n   * System-provided error number.\n   * Only present if the `MessagingError` was instantiated with a Node.js `SystemError`.\n   */\n  errno?: number | string;\n  /**\n   * The error name. Default value: \"MessagingError\".\n   */\n  name: string = \"MessagingError\";\n  /**\n   * The unavailable network connection port.\n   * Only present if the `MessagingError` was instantiated with a Node.js `SystemError`.\n   */\n  port?: number;\n  /**\n   * Name of the system call that triggered the error.\n   * Only present if the `MessagingError` was instantiated with a Node.js `SystemError`.\n   */\n  syscall?: string;\n  /**\n   *\n   * Describes whether the error is retryable. Default: true.\n   */\n  retryable: boolean = true;\n  /**\n   * Extra details about the error.\n   */\n  info?: any;\n  /**\n   * @param message - The error message that provides more information about the error.\n   * @param originalError - An error whose properties will be copied to the MessagingError if the\n   * property matches one found on the Node.js `SystemError`.\n   */\n  constructor(message: string, originalError?: Error) {\n    super(message);\n\n    if (!originalError) {\n      return;\n    }\n\n    // copy properties from system error\n    for (const propName of systemErrorFieldsToCopy) {\n      if ((originalError as NetworkSystemError)[propName] != undefined) {\n        this[propName] = (originalError as NetworkSystemError)[propName];\n      }\n    }\n  }\n}\n\n/**\n * Provides a list of retryable AMQP errors.\n * \"InternalServerError\", \"ServerBusyError\", \"ServiceUnavailableError\", \"OperationCancelledError\",\n * \"SenderBusyError\", \"SenderNotReadyError\", \"MessagingError\", \"DetachForcedError\", \"ConnectionForcedError\",\n * \"TransferLimitExceededError\"\n */\nexport const retryableErrors: string[] = [\n  \"InternalServerError\",\n  \"ServerBusyError\",\n  \"ServiceUnavailableError\",\n  \"OperationCancelledError\",\n\n  // The service may throw UnauthorizedError if credentials have been rotated.\n  // Attempt to retry in case the user has also rotated their credentials.\n  \"UnauthorizedError\",\n\n  // OperationTimeoutError occurs when the service fails to respond within a given timeframe.\n  // Since reasons for such failures can be transient, this is treated as a retryable error.\n  \"OperationTimeoutError\",\n\n  \"SenderBusyError\",\n  \"SenderNotReadyError\",\n  \"MessagingError\",\n  \"DetachForcedError\",\n  \"ConnectionForcedError\",\n  \"TransferLimitExceededError\",\n\n  // InsufficientCreditError occurs when the number of credits available on Rhea link is insufficient.\n  // Since reasons for such shortage can be transient such as for pending delivery of messages, this is treated as a retryable error.\n  \"InsufficientCreditError\",\n];\n\n/**\n * Maps some SystemErrors to amqp error conditions\n */\nexport enum SystemErrorConditionMapper {\n  /* eslint-disable @typescript-eslint/no-duplicate-enum-values */\n  ENOTFOUND = \"amqp:not-found\",\n  EBUSY = \"com.microsoft:server-busy\",\n  ECONNREFUSED = \"amqp:connection:forced\",\n  ETIMEDOUT = \"com.microsoft:timeout\",\n  ECONNRESET = \"com.microsoft:timeout\",\n  ENETDOWN = \"com.microsoft:timeout\",\n  EHOSTDOWN = \"com.microsoft:timeout\",\n  ENETRESET = \"com.microsoft:timeout\",\n  ENETUNREACH = \"com.microsoft:timeout\",\n  ENONET = \"com.microsoft:timeout\",\n  EADDRNOTAVAIL = \"com.microsoft:timeout\",\n  EAI_AGAIN = \"com.microsoft:timeout\",\n  /* eslint-enable @typescript-eslint/no-duplicate-enum-values */\n}\n\n/**\n * Checks whether the provided error is a node.js SystemError.\n * @param err - An object that may contain error information.\n */\nexport function isSystemError(err: unknown): err is NetworkSystemError {\n  if (!isObjectWithProperties(err, [\"code\", \"syscall\", \"errno\"])) {\n    return false;\n  }\n\n  if (!isString(err.code) || !isString(err.syscall)) {\n    return false;\n  }\n\n  if (!isString(err.errno) && !isNumber(err.errno)) {\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * @internal\n * Since browser doesn't differentiate between the various kinds of service communication errors,\n * this utility is used to look at the error target to identify such category of errors.\n * For more information refer to - https://html.spec.whatwg.org/multipage/comms.html#feedback-from-the-protocol\n * @param err - object that may contain error information\n */\nfunction isBrowserWebsocketError(err: any): boolean {\n  let result: boolean = false;\n  if (\n    !isNodeLike &&\n    self &&\n    err.type === \"error\" &&\n    err.target instanceof (self as any).WebSocket\n  ) {\n    result = true;\n  }\n  return result;\n}\n\n/**\n * @internal\n * Checks whether a object is an ErrorEvent or not. https://html.spec.whatwg.org/multipage/webappapis.html#errorevent\n * @param err - object that may contain error information\n */\nfunction isErrorEvent(err: any): err is { message: string; error: any } {\n  return typeof err.error === \"object\" && typeof err.message === \"string\";\n}\n\n/**\n * @internal\n */\nconst rheaPromiseErrors = [\n  // OperationTimeoutError occurs when the service fails to respond within a given timeframe.\n  \"OperationTimeoutError\",\n\n  // InsufficientCreditError occurs when the number of credits available on Rhea link is insufficient.\n  \"InsufficientCreditError\",\n\n  // Defines the error that occurs when the Sender fails to send a message.\n  \"SendOperationFailedError\",\n];\n\n/**\n * Translates the AMQP error received at the protocol layer or a SystemError into a MessagingError.\n * All other errors are returned unaltered.\n *\n * @param err - The amqp error that was received.\n * @returns MessagingError object.\n */\nexport function translate(err: unknown): MessagingError | Error {\n  if (!isDefined(err)) {\n    return new Error(`Unknown error encountered.`);\n  } else if (typeof err !== \"object\") {\n    // The error is a scalar type, make it the message of an actual error.\n    return new Error(String(err));\n  }\n\n  const errObj = isErrorEvent(err) ? err.error : err;\n\n  // Built-in errors like TypeError and RangeError should not be retryable as these indicate issues\n  // with user input and not an issue with the Messaging process.\n  if (errObj instanceof TypeError || errObj instanceof RangeError) {\n    return errObj;\n  }\n\n  if (isAmqpError(errObj)) {\n    // translate\n    const condition = errObj.condition;\n    const description = errObj.description!;\n    const error = new MessagingError(description);\n    if ((errObj as any).stack) error.stack = (errObj as any).stack;\n    error.info = errObj.info;\n    if (condition) {\n      error.code = ConditionErrorNameMapper[condition as keyof typeof ConditionErrorNameMapper];\n    }\n    if (\n      description &&\n      (description.includes(\"status-code: 404\") ||\n        description.match(/The messaging entity .* could not be found.*/i) !== null)\n    ) {\n      error.code = \"MessagingEntityNotFoundError\";\n    }\n    if (error.code && retryableErrors.indexOf(error.code) === -1) {\n      // not found\n      error.retryable = false;\n    }\n    return error;\n  }\n\n  if (errObj instanceof Error && errObj.name === \"MessagingError\") {\n    // already translated\n    return errObj;\n  }\n\n  if (isSystemError(errObj)) {\n    // translate\n    const condition = errObj.code;\n    const description = errObj.message;\n    const error = new MessagingError(description, errObj);\n    let errorType = \"SystemError\";\n    if (condition) {\n      const amqpErrorCondition =\n        SystemErrorConditionMapper[condition as keyof typeof SystemErrorConditionMapper];\n      errorType =\n        ConditionErrorNameMapper[amqpErrorCondition as keyof typeof ConditionErrorNameMapper];\n    }\n    if (retryableErrors.indexOf(errorType) === -1) {\n      // not found\n      error.retryable = false;\n    }\n    return error;\n  }\n\n  if (isBrowserWebsocketError(errObj)) {\n    // Translate browser communication errors during opening handshake to generic ServiceCommunicationError\n    const error = new MessagingError(\"Websocket connection failed.\");\n    error.code = ConditionErrorNameMapper[ErrorNameConditionMapper.ServiceCommunicationError];\n    error.retryable = false;\n    return error;\n  }\n\n  // Some errors come from rhea-promise and need to be converted to MessagingError.\n  // A subset of these are also retryable.\n  if (isError(errObj) && rheaPromiseErrors.indexOf(errObj.name) !== -1) {\n    const error = new MessagingError(errObj.message, errObj);\n    error.code = errObj.name;\n    if (error.code && retryableErrors.indexOf(error.code) === -1) {\n      // not found\n      error.retryable = false;\n    }\n    return error;\n  }\n\n  return isError(errObj) ? errObj : new Error(String(errObj));\n}\n\n/**\n * @internal\n */\nfunction isAmqpError(error: any): error is AmqpError {\n  return rheaIsAmqpError(error);\n}\n"]}