{"version":3,"file":"messageHeader.js","sourceRoot":"","sources":["../../src/messageHeader.ts"],"names":[],"mappings":";AAAA,uCAAuC;AACvC,kCAAkC;AAClC,2BAA2B;;;AAG3B,qCAAkC;AA+BlC;;GAEG;AACH,4GAA4G;AAC/F,QAAA,iBAAiB,GAAG;IAC/B;;;;;OAKG;IACH,mBAAmB,CAAC,KAAwB;QAC1C,MAAM,UAAU,GAAsB,EAAE,CAAC;QACzC,IAAI,KAAK,CAAC,aAAa,IAAI,SAAS,EAAE,CAAC;YACrC,UAAU,CAAC,cAAc,GAAG,KAAK,CAAC,aAAa,CAAC;QAClD,CAAC;QACD,IAAI,KAAK,CAAC,OAAO,IAAI,SAAS;YAAE,UAAU,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;QACnE,IAAI,KAAK,CAAC,aAAa,IAAI,SAAS,EAAE,CAAC;YACrC,UAAU,CAAC,cAAc,GAAG,KAAK,CAAC,aAAa,CAAC;QAClD,CAAC;QACD,IAAI,KAAK,CAAC,QAAQ,IAAI,SAAS,EAAE,CAAC;YAChC,UAAU,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;QACvC,CAAC;QACD,IAAI,KAAK,CAAC,UAAU,IAAI,SAAS,EAAE,CAAC;YAClC,UAAU,CAAC,GAAG,GAAG,KAAK,CAAC,UAAU,CAAC;QACpC,CAAC;QACD,eAAM,CAAC,OAAO,CAAC,0BAA0B,EAAE,UAAU,CAAC,CAAC;QACvD,OAAO,UAAU,CAAC;IACpB,CAAC;IAED;;;;;OAKG;IACH,qBAAqB,CAAC,KAAwB;QAC5C,MAAM,SAAS,GAAsB,EAAE,CAAC;QACxC,IAAI,KAAK,CAAC,cAAc,IAAI,SAAS,EAAE,CAAC;YACtC,SAAS,CAAC,aAAa,GAAG,KAAK,CAAC,cAAc,CAAC;QACjD,CAAC;QACD,IAAI,KAAK,CAAC,OAAO,IAAI,SAAS,EAAE,CAAC;YAC/B,SAAS,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;QACpC,CAAC;QACD,IAAI,KAAK,CAAC,cAAc,IAAI,SAAS,EAAE,CAAC;YACtC,SAAS,CAAC,aAAa,GAAG,KAAK,CAAC,cAAc,CAAC;QACjD,CAAC;QACD,IAAI,KAAK,CAAC,QAAQ,IAAI,SAAS,EAAE,CAAC;YAChC,SAAS,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;QACtC,CAAC;QACD,IAAI,KAAK,CAAC,GAAG,IAAI,SAAS,EAAE,CAAC;YAC3B,SAAS,CAAC,UAAU,GAAG,KAAK,CAAC,GAAG,CAAC;QACnC,CAAC;QACD,eAAM,CAAC,OAAO,CAAC,4BAA4B,EAAE,SAAS,CAAC,CAAC;QACxD,OAAO,SAAS,CAAC;IACnB,CAAC;CACF,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/* eslint-disable eqeqeq */\n\nimport type { MessageHeader as RheaMessageHeader } from \"rhea-promise\";\nimport { logger } from \"./log.js\";\n\n/**\n * Describes the defined set of standard header properties of the message.\n */\nexport interface AmqpMessageHeader {\n  /**\n   * If this value is true, then this message has not been\n   * acquired by any other link. If this value is false, then this message MAY have previously\n   * been acquired by another link or links.\n   */\n  firstAcquirer?: boolean;\n  /**\n   * The number of prior unsuccessful delivery attempts.\n   */\n  deliveryCount?: number;\n  /**\n   * time to live in ms.\n   */\n  timeToLive?: number;\n  /**\n   * Specifies durability requirements.\n   */\n  durable?: boolean;\n  /**\n   * The relative message priority. Higher numbers indicate higher\n   * priority messages.\n   */\n  priority?: number;\n}\n\n/**\n * Describes the operations that can be performed on the message header.\n */\n// eslint-disable-next-line @typescript-eslint/no-redeclare -- renaming constant would be a breaking change.\nexport const AmqpMessageHeader = {\n  /**\n   * Converts MessageHeader to RheaMessageHeader.\n   *\n   * @param props - Message header.\n   * @returns RheaMessageHeader\n   */\n  toRheaMessageHeader(props: AmqpMessageHeader): RheaMessageHeader {\n    const amqpHeader: RheaMessageHeader = {};\n    if (props.deliveryCount != undefined) {\n      amqpHeader.delivery_count = props.deliveryCount;\n    }\n    if (props.durable != undefined) amqpHeader.durable = props.durable;\n    if (props.firstAcquirer != undefined) {\n      amqpHeader.first_acquirer = props.firstAcquirer;\n    }\n    if (props.priority != undefined) {\n      amqpHeader.priority = props.priority;\n    }\n    if (props.timeToLive != undefined) {\n      amqpHeader.ttl = props.timeToLive;\n    }\n    logger.verbose(\"To RheaMessageHeader: %O\", amqpHeader);\n    return amqpHeader;\n  },\n\n  /**\n   * Converts RheaMessageHeader to MessageHeader.\n   *\n   * @param props - Amqp Message Header\n   * @returns MessageHeader.\n   */\n  fromRheaMessageHeader(props: RheaMessageHeader): AmqpMessageHeader {\n    const msgHeader: AmqpMessageHeader = {};\n    if (props.delivery_count != undefined) {\n      msgHeader.deliveryCount = props.delivery_count;\n    }\n    if (props.durable != undefined) {\n      msgHeader.durable = props.durable;\n    }\n    if (props.first_acquirer != undefined) {\n      msgHeader.firstAcquirer = props.first_acquirer;\n    }\n    if (props.priority != undefined) {\n      msgHeader.priority = props.priority;\n    }\n    if (props.ttl != undefined) {\n      msgHeader.timeToLive = props.ttl;\n    }\n    logger.verbose(\"From RheaMessageHeader: %O\", msgHeader);\n    return msgHeader;\n  },\n};\n"]}