{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../src/utils.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { IncomingMessage } from \"node:http\";\nimport type { NodeJSReadableStream } from \"./models.js\";\n\nexport function createStream<T>(\n  asyncIter: AsyncIterableIterator<T>,\n  cancel: () => PromiseLike<void>,\n): ReadableStream<T> & AsyncDisposable & AsyncIterable<T> {\n  const stream = iteratorToStream(asyncIter, cancel);\n  /** TODO: remove these polyfills once all supported runtimes support them */\n  return polyfillStream(stream, cancel);\n}\n\nfunction polyfillStream<T>(\n  stream: ReadableStream<T>,\n  dispose: () => PromiseLike<void>,\n): ReadableStream<T> & AsyncIterable<T> & AsyncDisposable {\n  makeAsyncIterable<T>(stream);\n  makeAsyncDisposable(stream, dispose);\n  return stream;\n}\n\nfunction makeAsyncDisposable<T>(\n  webStream: any,\n  dispose: () => PromiseLike<void>,\n): asserts webStream is ReadableStream<T> & AsyncDisposable {\n  (Symbol.asyncDispose as any) ??= Symbol(\"Symbol.asyncDispose\");\n  if (!webStream[Symbol.asyncDispose]) {\n    webStream[Symbol.asyncDispose] = () => dispose();\n  }\n}\n\nfunction makeAsyncIterable<T>(\n  webStream: any,\n): asserts webStream is ReadableStream<T> & AsyncIterable<T> {\n  if (!webStream[Symbol.asyncIterator]) {\n    webStream[Symbol.asyncIterator] = () => toAsyncIterable(webStream);\n  }\n\n  if (!webStream.values) {\n    webStream.values = () => toAsyncIterable(webStream);\n  }\n}\n\nfunction iteratorToStream<T>(\n  iterator: AsyncIterableIterator<T>,\n  cancel: () => PromiseLike<void>,\n): ReadableStream<T> {\n  return new ReadableStream({\n    async pull(controller) {\n      const { value, done } = await iterator.next();\n      if (done) {\n        controller.close();\n      } else {\n        controller.enqueue(value);\n      }\n    },\n    cancel,\n  });\n}\n\nexport function ensureAsyncIterable(\n  stream: IncomingMessage | NodeJSReadableStream | ReadableStream<Uint8Array>,\n): {\n  cancel(): Promise<void>;\n  iterable: AsyncIterable<Uint8Array>;\n} {\n  if (isReadableStream(stream)) {\n    makeAsyncIterable<Uint8Array>(stream);\n    return {\n      cancel: () => stream.cancel(),\n      iterable: stream,\n    };\n  } else {\n    return {\n      cancel: async () => {\n        // socket could be null if the connection is already closed\n        if (\"socket\" in stream && stream.socket) {\n          stream.socket.end();\n        } else {\n          stream.destroy();\n        }\n      },\n      iterable: stream as AsyncIterable<Uint8Array>,\n    };\n  }\n}\n\nfunction isReadableStream(body: unknown): body is ReadableStream {\n  return Boolean(\n    body &&\n      typeof (body as ReadableStream).getReader === \"function\" &&\n      typeof (body as ReadableStream).tee === \"function\",\n  );\n}\n\nasync function* toAsyncIterable<T>(stream: ReadableStream<T>): AsyncIterableIterator<T> {\n  const reader = stream.getReader();\n  try {\n    while (true) {\n      const { value, done } = await reader.read();\n      if (done) {\n        return;\n      }\n      yield value;\n    }\n  } finally {\n    const cancelPromise = reader.cancel();\n    reader.releaseLock();\n    await cancelPromise;\n  }\n}\n"]}