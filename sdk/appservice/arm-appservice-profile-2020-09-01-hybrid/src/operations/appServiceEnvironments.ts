/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as msRestAzure from "@azure/ms-rest-azure-js";
import * as Models from "../models";
import * as Mappers from "../models/appServiceEnvironmentsMappers";
import * as Parameters from "../models/parameters";
import { WebSiteManagementClientContext } from "../webSiteManagementClientContext";

/** Class representing a AppServiceEnvironments. */
export class AppServiceEnvironments {
  private readonly client: WebSiteManagementClientContext;

  /**
   * Create a AppServiceEnvironments.
   * @param {WebSiteManagementClientContext} client Reference to the service client.
   */
  constructor(client: WebSiteManagementClientContext) {
    this.client = client;
  }

  /**
   * Description for Get all App Service Environments for a subscription.
   * @summary Get all App Service Environments for a subscription.
   * @param [options] The optional parameters
   * @returns Promise<Models.AppServiceEnvironmentsListResponse>
   */
  list(options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsListResponse>;
  /**
   * @param callback The callback
   */
  list(callback: msRest.ServiceCallback<Models.AppServiceEnvironmentCollection>): void;
  /**
   * @param options The optional parameters
   * @param callback The callback
   */
  list(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.AppServiceEnvironmentCollection>): void;
  list(options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.AppServiceEnvironmentCollection>, callback?: msRest.ServiceCallback<Models.AppServiceEnvironmentCollection>): Promise<Models.AppServiceEnvironmentsListResponse> {
    return this.client.sendOperationRequest(
      {
        options
      },
      listOperationSpec,
      callback) as Promise<Models.AppServiceEnvironmentsListResponse>;
  }

  /**
   * Description for Get all App Service Environments in a resource group.
   * @summary Get all App Service Environments in a resource group.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param [options] The optional parameters
   * @returns Promise<Models.AppServiceEnvironmentsListByResourceGroupResponse>
   */
  listByResourceGroup(resourceGroupName: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsListByResourceGroupResponse>;
  /**
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param callback The callback
   */
  listByResourceGroup(resourceGroupName: string, callback: msRest.ServiceCallback<Models.AppServiceEnvironmentCollection>): void;
  /**
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByResourceGroup(resourceGroupName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.AppServiceEnvironmentCollection>): void;
  listByResourceGroup(resourceGroupName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.AppServiceEnvironmentCollection>, callback?: msRest.ServiceCallback<Models.AppServiceEnvironmentCollection>): Promise<Models.AppServiceEnvironmentsListByResourceGroupResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        options
      },
      listByResourceGroupOperationSpec,
      callback) as Promise<Models.AppServiceEnvironmentsListByResourceGroupResponse>;
  }

  /**
   * Description for Get the properties of an App Service Environment.
   * @summary Get the properties of an App Service Environment.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param [options] The optional parameters
   * @returns Promise<Models.AppServiceEnvironmentsGetResponse>
   */
  get(resourceGroupName: string, name: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsGetResponse>;
  /**
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param callback The callback
   */
  get(resourceGroupName: string, name: string, callback: msRest.ServiceCallback<Models.AppServiceEnvironmentResource>): void;
  /**
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(resourceGroupName: string, name: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.AppServiceEnvironmentResource>): void;
  get(resourceGroupName: string, name: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.AppServiceEnvironmentResource>, callback?: msRest.ServiceCallback<Models.AppServiceEnvironmentResource>): Promise<Models.AppServiceEnvironmentsGetResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        name,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.AppServiceEnvironmentsGetResponse>;
  }

  /**
   * Description for Create or update an App Service Environment.
   * @summary Create or update an App Service Environment.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param hostingEnvironmentEnvelope Configuration details of the App Service Environment.
   * @param [options] The optional parameters
   * @returns Promise<Models.AppServiceEnvironmentsCreateOrUpdateResponse>
   */
  createOrUpdate(resourceGroupName: string, name: string, hostingEnvironmentEnvelope: Models.AppServiceEnvironmentResource, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsCreateOrUpdateResponse> {
    return this.beginCreateOrUpdate(resourceGroupName,name,hostingEnvironmentEnvelope,options)
      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.AppServiceEnvironmentsCreateOrUpdateResponse>;
  }

  /**
   * Description for Delete an App Service Environment.
   * @summary Delete an App Service Environment.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param [options] The optional parameters
   * @returns Promise<msRest.RestResponse>
   */
  deleteMethod(resourceGroupName: string, name: string, options?: Models.AppServiceEnvironmentsDeleteMethodOptionalParams): Promise<msRest.RestResponse> {
    return this.beginDeleteMethod(resourceGroupName,name,options)
      .then(lroPoller => lroPoller.pollUntilFinished());
  }

  /**
   * Description for Create or update an App Service Environment.
   * @summary Create or update an App Service Environment.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param hostingEnvironmentEnvelope Configuration details of the App Service Environment.
   * @param [options] The optional parameters
   * @returns Promise<Models.AppServiceEnvironmentsUpdateResponse>
   */
  update(resourceGroupName: string, name: string, hostingEnvironmentEnvelope: Models.AppServiceEnvironmentPatchResource, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsUpdateResponse>;
  /**
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param hostingEnvironmentEnvelope Configuration details of the App Service Environment.
   * @param callback The callback
   */
  update(resourceGroupName: string, name: string, hostingEnvironmentEnvelope: Models.AppServiceEnvironmentPatchResource, callback: msRest.ServiceCallback<Models.AppServiceEnvironmentResource>): void;
  /**
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param hostingEnvironmentEnvelope Configuration details of the App Service Environment.
   * @param options The optional parameters
   * @param callback The callback
   */
  update(resourceGroupName: string, name: string, hostingEnvironmentEnvelope: Models.AppServiceEnvironmentPatchResource, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.AppServiceEnvironmentResource>): void;
  update(resourceGroupName: string, name: string, hostingEnvironmentEnvelope: Models.AppServiceEnvironmentPatchResource, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.AppServiceEnvironmentResource>, callback?: msRest.ServiceCallback<Models.AppServiceEnvironmentResource>): Promise<Models.AppServiceEnvironmentsUpdateResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        name,
        hostingEnvironmentEnvelope,
        options
      },
      updateOperationSpec,
      callback) as Promise<Models.AppServiceEnvironmentsUpdateResponse>;
  }

  /**
   * Description for Get the used, available, and total worker capacity an App Service Environment.
   * @summary Get the used, available, and total worker capacity an App Service Environment.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param [options] The optional parameters
   * @returns Promise<Models.AppServiceEnvironmentsListCapacitiesResponse>
   */
  listCapacities(resourceGroupName: string, name: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsListCapacitiesResponse>;
  /**
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param callback The callback
   */
  listCapacities(resourceGroupName: string, name: string, callback: msRest.ServiceCallback<Models.StampCapacityCollection>): void;
  /**
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param options The optional parameters
   * @param callback The callback
   */
  listCapacities(resourceGroupName: string, name: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.StampCapacityCollection>): void;
  listCapacities(resourceGroupName: string, name: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.StampCapacityCollection>, callback?: msRest.ServiceCallback<Models.StampCapacityCollection>): Promise<Models.AppServiceEnvironmentsListCapacitiesResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        name,
        options
      },
      listCapacitiesOperationSpec,
      callback) as Promise<Models.AppServiceEnvironmentsListCapacitiesResponse>;
  }

  /**
   * Description for Get IP addresses assigned to an App Service Environment.
   * @summary Get IP addresses assigned to an App Service Environment.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param [options] The optional parameters
   * @returns Promise<Models.AppServiceEnvironmentsGetVipInfoResponse>
   */
  getVipInfo(resourceGroupName: string, name: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsGetVipInfoResponse>;
  /**
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param callback The callback
   */
  getVipInfo(resourceGroupName: string, name: string, callback: msRest.ServiceCallback<Models.AddressResponse>): void;
  /**
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param options The optional parameters
   * @param callback The callback
   */
  getVipInfo(resourceGroupName: string, name: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.AddressResponse>): void;
  getVipInfo(resourceGroupName: string, name: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.AddressResponse>, callback?: msRest.ServiceCallback<Models.AddressResponse>): Promise<Models.AppServiceEnvironmentsGetVipInfoResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        name,
        options
      },
      getVipInfoOperationSpec,
      callback) as Promise<Models.AppServiceEnvironmentsGetVipInfoResponse>;
  }

  /**
   * Description for Move an App Service Environment to a different VNET.
   * @summary Move an App Service Environment to a different VNET.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param vnetInfo Details for the new virtual network.
   * @param [options] The optional parameters
   * @returns Promise<Models.AppServiceEnvironmentsChangeVnetResponse>
   */
  changeVnet(resourceGroupName: string, name: string, vnetInfo: Models.VirtualNetworkProfile, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsChangeVnetResponse> {
    return this.beginChangeVnet(resourceGroupName,name,vnetInfo,options)
      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.AppServiceEnvironmentsChangeVnetResponse>;
  }

  /**
   * Description for Get diagnostic information for an App Service Environment.
   * @summary Get diagnostic information for an App Service Environment.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param [options] The optional parameters
   * @returns Promise<Models.AppServiceEnvironmentsListDiagnosticsResponse>
   */
  listDiagnostics(resourceGroupName: string, name: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsListDiagnosticsResponse>;
  /**
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param callback The callback
   */
  listDiagnostics(resourceGroupName: string, name: string, callback: msRest.ServiceCallback<Models.HostingEnvironmentDiagnostics[]>): void;
  /**
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param options The optional parameters
   * @param callback The callback
   */
  listDiagnostics(resourceGroupName: string, name: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.HostingEnvironmentDiagnostics[]>): void;
  listDiagnostics(resourceGroupName: string, name: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.HostingEnvironmentDiagnostics[]>, callback?: msRest.ServiceCallback<Models.HostingEnvironmentDiagnostics[]>): Promise<Models.AppServiceEnvironmentsListDiagnosticsResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        name,
        options
      },
      listDiagnosticsOperationSpec,
      callback) as Promise<Models.AppServiceEnvironmentsListDiagnosticsResponse>;
  }

  /**
   * Description for Get a diagnostics item for an App Service Environment.
   * @summary Get a diagnostics item for an App Service Environment.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param diagnosticsName Name of the diagnostics item.
   * @param [options] The optional parameters
   * @returns Promise<Models.AppServiceEnvironmentsGetDiagnosticsItemResponse>
   */
  getDiagnosticsItem(resourceGroupName: string, name: string, diagnosticsName: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsGetDiagnosticsItemResponse>;
  /**
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param diagnosticsName Name of the diagnostics item.
   * @param callback The callback
   */
  getDiagnosticsItem(resourceGroupName: string, name: string, diagnosticsName: string, callback: msRest.ServiceCallback<Models.HostingEnvironmentDiagnostics>): void;
  /**
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param diagnosticsName Name of the diagnostics item.
   * @param options The optional parameters
   * @param callback The callback
   */
  getDiagnosticsItem(resourceGroupName: string, name: string, diagnosticsName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.HostingEnvironmentDiagnostics>): void;
  getDiagnosticsItem(resourceGroupName: string, name: string, diagnosticsName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.HostingEnvironmentDiagnostics>, callback?: msRest.ServiceCallback<Models.HostingEnvironmentDiagnostics>): Promise<Models.AppServiceEnvironmentsGetDiagnosticsItemResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        name,
        diagnosticsName,
        options
      },
      getDiagnosticsItemOperationSpec,
      callback) as Promise<Models.AppServiceEnvironmentsGetDiagnosticsItemResponse>;
  }

  /**
   * Description for Get the network endpoints of all inbound dependencies of an App Service
   * Environment.
   * @summary Get the network endpoints of all inbound dependencies of an App Service Environment.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param [options] The optional parameters
   * @returns Promise<Models.AppServiceEnvironmentsGetInboundNetworkDependenciesEndpointsResponse>
   */
  getInboundNetworkDependenciesEndpoints(resourceGroupName: string, name: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsGetInboundNetworkDependenciesEndpointsResponse>;
  /**
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param callback The callback
   */
  getInboundNetworkDependenciesEndpoints(resourceGroupName: string, name: string, callback: msRest.ServiceCallback<Models.InboundEnvironmentEndpointCollection>): void;
  /**
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param options The optional parameters
   * @param callback The callback
   */
  getInboundNetworkDependenciesEndpoints(resourceGroupName: string, name: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.InboundEnvironmentEndpointCollection>): void;
  getInboundNetworkDependenciesEndpoints(resourceGroupName: string, name: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.InboundEnvironmentEndpointCollection>, callback?: msRest.ServiceCallback<Models.InboundEnvironmentEndpointCollection>): Promise<Models.AppServiceEnvironmentsGetInboundNetworkDependenciesEndpointsResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        name,
        options
      },
      getInboundNetworkDependenciesEndpointsOperationSpec,
      callback) as Promise<Models.AppServiceEnvironmentsGetInboundNetworkDependenciesEndpointsResponse>;
  }

  /**
   * Description for Get all multi-role pools.
   * @summary Get all multi-role pools.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param [options] The optional parameters
   * @returns Promise<Models.AppServiceEnvironmentsListMultiRolePoolsResponse>
   */
  listMultiRolePools(resourceGroupName: string, name: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsListMultiRolePoolsResponse>;
  /**
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param callback The callback
   */
  listMultiRolePools(resourceGroupName: string, name: string, callback: msRest.ServiceCallback<Models.WorkerPoolCollection>): void;
  /**
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param options The optional parameters
   * @param callback The callback
   */
  listMultiRolePools(resourceGroupName: string, name: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.WorkerPoolCollection>): void;
  listMultiRolePools(resourceGroupName: string, name: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.WorkerPoolCollection>, callback?: msRest.ServiceCallback<Models.WorkerPoolCollection>): Promise<Models.AppServiceEnvironmentsListMultiRolePoolsResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        name,
        options
      },
      listMultiRolePoolsOperationSpec,
      callback) as Promise<Models.AppServiceEnvironmentsListMultiRolePoolsResponse>;
  }

  /**
   * Description for Get properties of a multi-role pool.
   * @summary Get properties of a multi-role pool.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param [options] The optional parameters
   * @returns Promise<Models.AppServiceEnvironmentsGetMultiRolePoolResponse>
   */
  getMultiRolePool(resourceGroupName: string, name: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsGetMultiRolePoolResponse>;
  /**
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param callback The callback
   */
  getMultiRolePool(resourceGroupName: string, name: string, callback: msRest.ServiceCallback<Models.WorkerPoolResource>): void;
  /**
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param options The optional parameters
   * @param callback The callback
   */
  getMultiRolePool(resourceGroupName: string, name: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.WorkerPoolResource>): void;
  getMultiRolePool(resourceGroupName: string, name: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.WorkerPoolResource>, callback?: msRest.ServiceCallback<Models.WorkerPoolResource>): Promise<Models.AppServiceEnvironmentsGetMultiRolePoolResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        name,
        options
      },
      getMultiRolePoolOperationSpec,
      callback) as Promise<Models.AppServiceEnvironmentsGetMultiRolePoolResponse>;
  }

  /**
   * Description for Create or update a multi-role pool.
   * @summary Create or update a multi-role pool.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param multiRolePoolEnvelope Properties of the multi-role pool.
   * @param [options] The optional parameters
   * @returns Promise<Models.AppServiceEnvironmentsCreateOrUpdateMultiRolePoolResponse>
   */
  createOrUpdateMultiRolePool(resourceGroupName: string, name: string, multiRolePoolEnvelope: Models.WorkerPoolResource, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsCreateOrUpdateMultiRolePoolResponse> {
    return this.beginCreateOrUpdateMultiRolePool(resourceGroupName,name,multiRolePoolEnvelope,options)
      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.AppServiceEnvironmentsCreateOrUpdateMultiRolePoolResponse>;
  }

  /**
   * Description for Create or update a multi-role pool.
   * @summary Create or update a multi-role pool.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param multiRolePoolEnvelope Properties of the multi-role pool.
   * @param [options] The optional parameters
   * @returns Promise<Models.AppServiceEnvironmentsUpdateMultiRolePoolResponse>
   */
  updateMultiRolePool(resourceGroupName: string, name: string, multiRolePoolEnvelope: Models.WorkerPoolResource, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsUpdateMultiRolePoolResponse>;
  /**
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param multiRolePoolEnvelope Properties of the multi-role pool.
   * @param callback The callback
   */
  updateMultiRolePool(resourceGroupName: string, name: string, multiRolePoolEnvelope: Models.WorkerPoolResource, callback: msRest.ServiceCallback<Models.WorkerPoolResource>): void;
  /**
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param multiRolePoolEnvelope Properties of the multi-role pool.
   * @param options The optional parameters
   * @param callback The callback
   */
  updateMultiRolePool(resourceGroupName: string, name: string, multiRolePoolEnvelope: Models.WorkerPoolResource, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.WorkerPoolResource>): void;
  updateMultiRolePool(resourceGroupName: string, name: string, multiRolePoolEnvelope: Models.WorkerPoolResource, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.WorkerPoolResource>, callback?: msRest.ServiceCallback<Models.WorkerPoolResource>): Promise<Models.AppServiceEnvironmentsUpdateMultiRolePoolResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        name,
        multiRolePoolEnvelope,
        options
      },
      updateMultiRolePoolOperationSpec,
      callback) as Promise<Models.AppServiceEnvironmentsUpdateMultiRolePoolResponse>;
  }

  /**
   * Description for Get metric definitions for a specific instance of a multi-role pool of an App
   * Service Environment.
   * @summary Get metric definitions for a specific instance of a multi-role pool of an App Service
   * Environment.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param instance Name of the instance in the multi-role pool.
   * @param [options] The optional parameters
   * @returns
   * Promise<Models.AppServiceEnvironmentsListMultiRolePoolInstanceMetricDefinitionsResponse>
   */
  listMultiRolePoolInstanceMetricDefinitions(resourceGroupName: string, name: string, instance: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsListMultiRolePoolInstanceMetricDefinitionsResponse>;
  /**
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param instance Name of the instance in the multi-role pool.
   * @param callback The callback
   */
  listMultiRolePoolInstanceMetricDefinitions(resourceGroupName: string, name: string, instance: string, callback: msRest.ServiceCallback<Models.ResourceMetricDefinitionCollection>): void;
  /**
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param instance Name of the instance in the multi-role pool.
   * @param options The optional parameters
   * @param callback The callback
   */
  listMultiRolePoolInstanceMetricDefinitions(resourceGroupName: string, name: string, instance: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ResourceMetricDefinitionCollection>): void;
  listMultiRolePoolInstanceMetricDefinitions(resourceGroupName: string, name: string, instance: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ResourceMetricDefinitionCollection>, callback?: msRest.ServiceCallback<Models.ResourceMetricDefinitionCollection>): Promise<Models.AppServiceEnvironmentsListMultiRolePoolInstanceMetricDefinitionsResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        name,
        instance,
        options
      },
      listMultiRolePoolInstanceMetricDefinitionsOperationSpec,
      callback) as Promise<Models.AppServiceEnvironmentsListMultiRolePoolInstanceMetricDefinitionsResponse>;
  }

  /**
   * Description for Get metric definitions for a multi-role pool of an App Service Environment.
   * @summary Get metric definitions for a multi-role pool of an App Service Environment.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param [options] The optional parameters
   * @returns Promise<Models.AppServiceEnvironmentsListMultiRoleMetricDefinitionsResponse>
   */
  listMultiRoleMetricDefinitions(resourceGroupName: string, name: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsListMultiRoleMetricDefinitionsResponse>;
  /**
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param callback The callback
   */
  listMultiRoleMetricDefinitions(resourceGroupName: string, name: string, callback: msRest.ServiceCallback<Models.ResourceMetricDefinitionCollection>): void;
  /**
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param options The optional parameters
   * @param callback The callback
   */
  listMultiRoleMetricDefinitions(resourceGroupName: string, name: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ResourceMetricDefinitionCollection>): void;
  listMultiRoleMetricDefinitions(resourceGroupName: string, name: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ResourceMetricDefinitionCollection>, callback?: msRest.ServiceCallback<Models.ResourceMetricDefinitionCollection>): Promise<Models.AppServiceEnvironmentsListMultiRoleMetricDefinitionsResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        name,
        options
      },
      listMultiRoleMetricDefinitionsOperationSpec,
      callback) as Promise<Models.AppServiceEnvironmentsListMultiRoleMetricDefinitionsResponse>;
  }

  /**
   * Description for Get available SKUs for scaling a multi-role pool.
   * @summary Get available SKUs for scaling a multi-role pool.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param [options] The optional parameters
   * @returns Promise<Models.AppServiceEnvironmentsListMultiRolePoolSkusResponse>
   */
  listMultiRolePoolSkus(resourceGroupName: string, name: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsListMultiRolePoolSkusResponse>;
  /**
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param callback The callback
   */
  listMultiRolePoolSkus(resourceGroupName: string, name: string, callback: msRest.ServiceCallback<Models.SkuInfoCollection>): void;
  /**
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param options The optional parameters
   * @param callback The callback
   */
  listMultiRolePoolSkus(resourceGroupName: string, name: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SkuInfoCollection>): void;
  listMultiRolePoolSkus(resourceGroupName: string, name: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.SkuInfoCollection>, callback?: msRest.ServiceCallback<Models.SkuInfoCollection>): Promise<Models.AppServiceEnvironmentsListMultiRolePoolSkusResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        name,
        options
      },
      listMultiRolePoolSkusOperationSpec,
      callback) as Promise<Models.AppServiceEnvironmentsListMultiRolePoolSkusResponse>;
  }

  /**
   * Description for Get usage metrics for a multi-role pool of an App Service Environment.
   * @summary Get usage metrics for a multi-role pool of an App Service Environment.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param [options] The optional parameters
   * @returns Promise<Models.AppServiceEnvironmentsListMultiRoleUsagesResponse>
   */
  listMultiRoleUsages(resourceGroupName: string, name: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsListMultiRoleUsagesResponse>;
  /**
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param callback The callback
   */
  listMultiRoleUsages(resourceGroupName: string, name: string, callback: msRest.ServiceCallback<Models.UsageCollection>): void;
  /**
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param options The optional parameters
   * @param callback The callback
   */
  listMultiRoleUsages(resourceGroupName: string, name: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.UsageCollection>): void;
  listMultiRoleUsages(resourceGroupName: string, name: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.UsageCollection>, callback?: msRest.ServiceCallback<Models.UsageCollection>): Promise<Models.AppServiceEnvironmentsListMultiRoleUsagesResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        name,
        options
      },
      listMultiRoleUsagesOperationSpec,
      callback) as Promise<Models.AppServiceEnvironmentsListMultiRoleUsagesResponse>;
  }

  /**
   * Description for List all currently running operations on the App Service Environment.
   * @summary List all currently running operations on the App Service Environment.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param [options] The optional parameters
   * @returns Promise<Models.AppServiceEnvironmentsListOperationsResponse>
   */
  listOperations(resourceGroupName: string, name: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsListOperationsResponse>;
  /**
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param callback The callback
   */
  listOperations(resourceGroupName: string, name: string, callback: msRest.ServiceCallback<Models.Operation[]>): void;
  /**
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param options The optional parameters
   * @param callback The callback
   */
  listOperations(resourceGroupName: string, name: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.Operation[]>): void;
  listOperations(resourceGroupName: string, name: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.Operation[]>, callback?: msRest.ServiceCallback<Models.Operation[]>): Promise<Models.AppServiceEnvironmentsListOperationsResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        name,
        options
      },
      listOperationsOperationSpec,
      callback) as Promise<Models.AppServiceEnvironmentsListOperationsResponse>;
  }

  /**
   * Description for Get the network endpoints of all outbound dependencies of an App Service
   * Environment.
   * @summary Get the network endpoints of all outbound dependencies of an App Service Environment.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param [options] The optional parameters
   * @returns Promise<Models.AppServiceEnvironmentsGetOutboundNetworkDependenciesEndpointsResponse>
   */
  getOutboundNetworkDependenciesEndpoints(resourceGroupName: string, name: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsGetOutboundNetworkDependenciesEndpointsResponse>;
  /**
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param callback The callback
   */
  getOutboundNetworkDependenciesEndpoints(resourceGroupName: string, name: string, callback: msRest.ServiceCallback<Models.OutboundEnvironmentEndpointCollection>): void;
  /**
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param options The optional parameters
   * @param callback The callback
   */
  getOutboundNetworkDependenciesEndpoints(resourceGroupName: string, name: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.OutboundEnvironmentEndpointCollection>): void;
  getOutboundNetworkDependenciesEndpoints(resourceGroupName: string, name: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.OutboundEnvironmentEndpointCollection>, callback?: msRest.ServiceCallback<Models.OutboundEnvironmentEndpointCollection>): Promise<Models.AppServiceEnvironmentsGetOutboundNetworkDependenciesEndpointsResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        name,
        options
      },
      getOutboundNetworkDependenciesEndpointsOperationSpec,
      callback) as Promise<Models.AppServiceEnvironmentsGetOutboundNetworkDependenciesEndpointsResponse>;
  }

  /**
   * Description for Reboot all machines in an App Service Environment.
   * @summary Reboot all machines in an App Service Environment.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param [options] The optional parameters
   * @returns Promise<msRest.RestResponse>
   */
  reboot(resourceGroupName: string, name: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
  /**
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param callback The callback
   */
  reboot(resourceGroupName: string, name: string, callback: msRest.ServiceCallback<void>): void;
  /**
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param options The optional parameters
   * @param callback The callback
   */
  reboot(resourceGroupName: string, name: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
  reboot(resourceGroupName: string, name: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        name,
        options
      },
      rebootOperationSpec,
      callback);
  }

  /**
   * Description for Resume an App Service Environment.
   * @summary Resume an App Service Environment.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param [options] The optional parameters
   * @returns Promise<Models.AppServiceEnvironmentsResumeResponse>
   */
  resume(resourceGroupName: string, name: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsResumeResponse> {
    return this.beginResume(resourceGroupName,name,options)
      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.AppServiceEnvironmentsResumeResponse>;
  }

  /**
   * Description for Get all App Service plans in an App Service Environment.
   * @summary Get all App Service plans in an App Service Environment.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param [options] The optional parameters
   * @returns Promise<Models.AppServiceEnvironmentsListAppServicePlansResponse>
   */
  listAppServicePlans(resourceGroupName: string, name: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsListAppServicePlansResponse>;
  /**
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param callback The callback
   */
  listAppServicePlans(resourceGroupName: string, name: string, callback: msRest.ServiceCallback<Models.AppServicePlanCollection>): void;
  /**
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param options The optional parameters
   * @param callback The callback
   */
  listAppServicePlans(resourceGroupName: string, name: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.AppServicePlanCollection>): void;
  listAppServicePlans(resourceGroupName: string, name: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.AppServicePlanCollection>, callback?: msRest.ServiceCallback<Models.AppServicePlanCollection>): Promise<Models.AppServiceEnvironmentsListAppServicePlansResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        name,
        options
      },
      listAppServicePlansOperationSpec,
      callback) as Promise<Models.AppServiceEnvironmentsListAppServicePlansResponse>;
  }

  /**
   * Description for Get all apps in an App Service Environment.
   * @summary Get all apps in an App Service Environment.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param [options] The optional parameters
   * @returns Promise<Models.AppServiceEnvironmentsListWebAppsResponse>
   */
  listWebApps(resourceGroupName: string, name: string, options?: Models.AppServiceEnvironmentsListWebAppsOptionalParams): Promise<Models.AppServiceEnvironmentsListWebAppsResponse>;
  /**
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param callback The callback
   */
  listWebApps(resourceGroupName: string, name: string, callback: msRest.ServiceCallback<Models.WebAppCollection>): void;
  /**
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param options The optional parameters
   * @param callback The callback
   */
  listWebApps(resourceGroupName: string, name: string, options: Models.AppServiceEnvironmentsListWebAppsOptionalParams, callback: msRest.ServiceCallback<Models.WebAppCollection>): void;
  listWebApps(resourceGroupName: string, name: string, options?: Models.AppServiceEnvironmentsListWebAppsOptionalParams | msRest.ServiceCallback<Models.WebAppCollection>, callback?: msRest.ServiceCallback<Models.WebAppCollection>): Promise<Models.AppServiceEnvironmentsListWebAppsResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        name,
        options
      },
      listWebAppsOperationSpec,
      callback) as Promise<Models.AppServiceEnvironmentsListWebAppsResponse>;
  }

  /**
   * Description for Suspend an App Service Environment.
   * @summary Suspend an App Service Environment.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param [options] The optional parameters
   * @returns Promise<Models.AppServiceEnvironmentsSuspendResponse>
   */
  suspend(resourceGroupName: string, name: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsSuspendResponse> {
    return this.beginSuspend(resourceGroupName,name,options)
      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.AppServiceEnvironmentsSuspendResponse>;
  }

  /**
   * Description for Get global usage metrics of an App Service Environment.
   * @summary Get global usage metrics of an App Service Environment.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param [options] The optional parameters
   * @returns Promise<Models.AppServiceEnvironmentsListUsagesResponse>
   */
  listUsages(resourceGroupName: string, name: string, options?: Models.AppServiceEnvironmentsListUsagesOptionalParams): Promise<Models.AppServiceEnvironmentsListUsagesResponse>;
  /**
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param callback The callback
   */
  listUsages(resourceGroupName: string, name: string, callback: msRest.ServiceCallback<Models.CsmUsageQuotaCollection>): void;
  /**
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param options The optional parameters
   * @param callback The callback
   */
  listUsages(resourceGroupName: string, name: string, options: Models.AppServiceEnvironmentsListUsagesOptionalParams, callback: msRest.ServiceCallback<Models.CsmUsageQuotaCollection>): void;
  listUsages(resourceGroupName: string, name: string, options?: Models.AppServiceEnvironmentsListUsagesOptionalParams | msRest.ServiceCallback<Models.CsmUsageQuotaCollection>, callback?: msRest.ServiceCallback<Models.CsmUsageQuotaCollection>): Promise<Models.AppServiceEnvironmentsListUsagesResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        name,
        options
      },
      listUsagesOperationSpec,
      callback) as Promise<Models.AppServiceEnvironmentsListUsagesResponse>;
  }

  /**
   * Description for Get all worker pools of an App Service Environment.
   * @summary Get all worker pools of an App Service Environment.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param [options] The optional parameters
   * @returns Promise<Models.AppServiceEnvironmentsListWorkerPoolsResponse>
   */
  listWorkerPools(resourceGroupName: string, name: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsListWorkerPoolsResponse>;
  /**
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param callback The callback
   */
  listWorkerPools(resourceGroupName: string, name: string, callback: msRest.ServiceCallback<Models.WorkerPoolCollection>): void;
  /**
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param options The optional parameters
   * @param callback The callback
   */
  listWorkerPools(resourceGroupName: string, name: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.WorkerPoolCollection>): void;
  listWorkerPools(resourceGroupName: string, name: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.WorkerPoolCollection>, callback?: msRest.ServiceCallback<Models.WorkerPoolCollection>): Promise<Models.AppServiceEnvironmentsListWorkerPoolsResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        name,
        options
      },
      listWorkerPoolsOperationSpec,
      callback) as Promise<Models.AppServiceEnvironmentsListWorkerPoolsResponse>;
  }

  /**
   * Description for Get properties of a worker pool.
   * @summary Get properties of a worker pool.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param workerPoolName Name of the worker pool.
   * @param [options] The optional parameters
   * @returns Promise<Models.AppServiceEnvironmentsGetWorkerPoolResponse>
   */
  getWorkerPool(resourceGroupName: string, name: string, workerPoolName: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsGetWorkerPoolResponse>;
  /**
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param workerPoolName Name of the worker pool.
   * @param callback The callback
   */
  getWorkerPool(resourceGroupName: string, name: string, workerPoolName: string, callback: msRest.ServiceCallback<Models.WorkerPoolResource>): void;
  /**
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param workerPoolName Name of the worker pool.
   * @param options The optional parameters
   * @param callback The callback
   */
  getWorkerPool(resourceGroupName: string, name: string, workerPoolName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.WorkerPoolResource>): void;
  getWorkerPool(resourceGroupName: string, name: string, workerPoolName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.WorkerPoolResource>, callback?: msRest.ServiceCallback<Models.WorkerPoolResource>): Promise<Models.AppServiceEnvironmentsGetWorkerPoolResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        name,
        workerPoolName,
        options
      },
      getWorkerPoolOperationSpec,
      callback) as Promise<Models.AppServiceEnvironmentsGetWorkerPoolResponse>;
  }

  /**
   * Description for Create or update a worker pool.
   * @summary Create or update a worker pool.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param workerPoolName Name of the worker pool.
   * @param workerPoolEnvelope Properties of the worker pool.
   * @param [options] The optional parameters
   * @returns Promise<Models.AppServiceEnvironmentsCreateOrUpdateWorkerPoolResponse>
   */
  createOrUpdateWorkerPool(resourceGroupName: string, name: string, workerPoolName: string, workerPoolEnvelope: Models.WorkerPoolResource, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsCreateOrUpdateWorkerPoolResponse> {
    return this.beginCreateOrUpdateWorkerPool(resourceGroupName,name,workerPoolName,workerPoolEnvelope,options)
      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.AppServiceEnvironmentsCreateOrUpdateWorkerPoolResponse>;
  }

  /**
   * Description for Create or update a worker pool.
   * @summary Create or update a worker pool.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param workerPoolName Name of the worker pool.
   * @param workerPoolEnvelope Properties of the worker pool.
   * @param [options] The optional parameters
   * @returns Promise<Models.AppServiceEnvironmentsUpdateWorkerPoolResponse>
   */
  updateWorkerPool(resourceGroupName: string, name: string, workerPoolName: string, workerPoolEnvelope: Models.WorkerPoolResource, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsUpdateWorkerPoolResponse>;
  /**
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param workerPoolName Name of the worker pool.
   * @param workerPoolEnvelope Properties of the worker pool.
   * @param callback The callback
   */
  updateWorkerPool(resourceGroupName: string, name: string, workerPoolName: string, workerPoolEnvelope: Models.WorkerPoolResource, callback: msRest.ServiceCallback<Models.WorkerPoolResource>): void;
  /**
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param workerPoolName Name of the worker pool.
   * @param workerPoolEnvelope Properties of the worker pool.
   * @param options The optional parameters
   * @param callback The callback
   */
  updateWorkerPool(resourceGroupName: string, name: string, workerPoolName: string, workerPoolEnvelope: Models.WorkerPoolResource, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.WorkerPoolResource>): void;
  updateWorkerPool(resourceGroupName: string, name: string, workerPoolName: string, workerPoolEnvelope: Models.WorkerPoolResource, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.WorkerPoolResource>, callback?: msRest.ServiceCallback<Models.WorkerPoolResource>): Promise<Models.AppServiceEnvironmentsUpdateWorkerPoolResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        name,
        workerPoolName,
        workerPoolEnvelope,
        options
      },
      updateWorkerPoolOperationSpec,
      callback) as Promise<Models.AppServiceEnvironmentsUpdateWorkerPoolResponse>;
  }

  /**
   * Description for Get metric definitions for a specific instance of a worker pool of an App
   * Service Environment.
   * @summary Get metric definitions for a specific instance of a worker pool of an App Service
   * Environment.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param workerPoolName Name of the worker pool.
   * @param instance Name of the instance in the worker pool.
   * @param [options] The optional parameters
   * @returns Promise<Models.AppServiceEnvironmentsListWorkerPoolInstanceMetricDefinitionsResponse>
   */
  listWorkerPoolInstanceMetricDefinitions(resourceGroupName: string, name: string, workerPoolName: string, instance: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsListWorkerPoolInstanceMetricDefinitionsResponse>;
  /**
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param workerPoolName Name of the worker pool.
   * @param instance Name of the instance in the worker pool.
   * @param callback The callback
   */
  listWorkerPoolInstanceMetricDefinitions(resourceGroupName: string, name: string, workerPoolName: string, instance: string, callback: msRest.ServiceCallback<Models.ResourceMetricDefinitionCollection>): void;
  /**
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param workerPoolName Name of the worker pool.
   * @param instance Name of the instance in the worker pool.
   * @param options The optional parameters
   * @param callback The callback
   */
  listWorkerPoolInstanceMetricDefinitions(resourceGroupName: string, name: string, workerPoolName: string, instance: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ResourceMetricDefinitionCollection>): void;
  listWorkerPoolInstanceMetricDefinitions(resourceGroupName: string, name: string, workerPoolName: string, instance: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ResourceMetricDefinitionCollection>, callback?: msRest.ServiceCallback<Models.ResourceMetricDefinitionCollection>): Promise<Models.AppServiceEnvironmentsListWorkerPoolInstanceMetricDefinitionsResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        name,
        workerPoolName,
        instance,
        options
      },
      listWorkerPoolInstanceMetricDefinitionsOperationSpec,
      callback) as Promise<Models.AppServiceEnvironmentsListWorkerPoolInstanceMetricDefinitionsResponse>;
  }

  /**
   * Description for Get metric definitions for a worker pool of an App Service Environment.
   * @summary Get metric definitions for a worker pool of an App Service Environment.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param workerPoolName Name of the worker pool.
   * @param [options] The optional parameters
   * @returns Promise<Models.AppServiceEnvironmentsListWebWorkerMetricDefinitionsResponse>
   */
  listWebWorkerMetricDefinitions(resourceGroupName: string, name: string, workerPoolName: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsListWebWorkerMetricDefinitionsResponse>;
  /**
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param workerPoolName Name of the worker pool.
   * @param callback The callback
   */
  listWebWorkerMetricDefinitions(resourceGroupName: string, name: string, workerPoolName: string, callback: msRest.ServiceCallback<Models.ResourceMetricDefinitionCollection>): void;
  /**
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param workerPoolName Name of the worker pool.
   * @param options The optional parameters
   * @param callback The callback
   */
  listWebWorkerMetricDefinitions(resourceGroupName: string, name: string, workerPoolName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ResourceMetricDefinitionCollection>): void;
  listWebWorkerMetricDefinitions(resourceGroupName: string, name: string, workerPoolName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ResourceMetricDefinitionCollection>, callback?: msRest.ServiceCallback<Models.ResourceMetricDefinitionCollection>): Promise<Models.AppServiceEnvironmentsListWebWorkerMetricDefinitionsResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        name,
        workerPoolName,
        options
      },
      listWebWorkerMetricDefinitionsOperationSpec,
      callback) as Promise<Models.AppServiceEnvironmentsListWebWorkerMetricDefinitionsResponse>;
  }

  /**
   * Description for Get available SKUs for scaling a worker pool.
   * @summary Get available SKUs for scaling a worker pool.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param workerPoolName Name of the worker pool.
   * @param [options] The optional parameters
   * @returns Promise<Models.AppServiceEnvironmentsListWorkerPoolSkusResponse>
   */
  listWorkerPoolSkus(resourceGroupName: string, name: string, workerPoolName: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsListWorkerPoolSkusResponse>;
  /**
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param workerPoolName Name of the worker pool.
   * @param callback The callback
   */
  listWorkerPoolSkus(resourceGroupName: string, name: string, workerPoolName: string, callback: msRest.ServiceCallback<Models.SkuInfoCollection>): void;
  /**
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param workerPoolName Name of the worker pool.
   * @param options The optional parameters
   * @param callback The callback
   */
  listWorkerPoolSkus(resourceGroupName: string, name: string, workerPoolName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SkuInfoCollection>): void;
  listWorkerPoolSkus(resourceGroupName: string, name: string, workerPoolName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.SkuInfoCollection>, callback?: msRest.ServiceCallback<Models.SkuInfoCollection>): Promise<Models.AppServiceEnvironmentsListWorkerPoolSkusResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        name,
        workerPoolName,
        options
      },
      listWorkerPoolSkusOperationSpec,
      callback) as Promise<Models.AppServiceEnvironmentsListWorkerPoolSkusResponse>;
  }

  /**
   * Description for Get usage metrics for a worker pool of an App Service Environment.
   * @summary Get usage metrics for a worker pool of an App Service Environment.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param workerPoolName Name of the worker pool.
   * @param [options] The optional parameters
   * @returns Promise<Models.AppServiceEnvironmentsListWebWorkerUsagesResponse>
   */
  listWebWorkerUsages(resourceGroupName: string, name: string, workerPoolName: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsListWebWorkerUsagesResponse>;
  /**
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param workerPoolName Name of the worker pool.
   * @param callback The callback
   */
  listWebWorkerUsages(resourceGroupName: string, name: string, workerPoolName: string, callback: msRest.ServiceCallback<Models.UsageCollection>): void;
  /**
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param workerPoolName Name of the worker pool.
   * @param options The optional parameters
   * @param callback The callback
   */
  listWebWorkerUsages(resourceGroupName: string, name: string, workerPoolName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.UsageCollection>): void;
  listWebWorkerUsages(resourceGroupName: string, name: string, workerPoolName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.UsageCollection>, callback?: msRest.ServiceCallback<Models.UsageCollection>): Promise<Models.AppServiceEnvironmentsListWebWorkerUsagesResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        name,
        workerPoolName,
        options
      },
      listWebWorkerUsagesOperationSpec,
      callback) as Promise<Models.AppServiceEnvironmentsListWebWorkerUsagesResponse>;
  }

  /**
   * Description for Create or update an App Service Environment.
   * @summary Create or update an App Service Environment.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param hostingEnvironmentEnvelope Configuration details of the App Service Environment.
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginCreateOrUpdate(resourceGroupName: string, name: string, hostingEnvironmentEnvelope: Models.AppServiceEnvironmentResource, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        resourceGroupName,
        name,
        hostingEnvironmentEnvelope,
        options
      },
      beginCreateOrUpdateOperationSpec,
      options);
  }

  /**
   * Description for Delete an App Service Environment.
   * @summary Delete an App Service Environment.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginDeleteMethod(resourceGroupName: string, name: string, options?: Models.AppServiceEnvironmentsBeginDeleteMethodOptionalParams): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        resourceGroupName,
        name,
        options
      },
      beginDeleteMethodOperationSpec,
      options);
  }

  /**
   * Description for Move an App Service Environment to a different VNET.
   * @summary Move an App Service Environment to a different VNET.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param vnetInfo Details for the new virtual network.
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginChangeVnet(resourceGroupName: string, name: string, vnetInfo: Models.VirtualNetworkProfile, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        resourceGroupName,
        name,
        vnetInfo,
        options
      },
      beginChangeVnetOperationSpec,
      options);
  }

  /**
   * Description for Create or update a multi-role pool.
   * @summary Create or update a multi-role pool.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param multiRolePoolEnvelope Properties of the multi-role pool.
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginCreateOrUpdateMultiRolePool(resourceGroupName: string, name: string, multiRolePoolEnvelope: Models.WorkerPoolResource, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        resourceGroupName,
        name,
        multiRolePoolEnvelope,
        options
      },
      beginCreateOrUpdateMultiRolePoolOperationSpec,
      options);
  }

  /**
   * Description for Resume an App Service Environment.
   * @summary Resume an App Service Environment.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginResume(resourceGroupName: string, name: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        resourceGroupName,
        name,
        options
      },
      beginResumeOperationSpec,
      options);
  }

  /**
   * Description for Suspend an App Service Environment.
   * @summary Suspend an App Service Environment.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginSuspend(resourceGroupName: string, name: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        resourceGroupName,
        name,
        options
      },
      beginSuspendOperationSpec,
      options);
  }

  /**
   * Description for Create or update a worker pool.
   * @summary Create or update a worker pool.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param workerPoolName Name of the worker pool.
   * @param workerPoolEnvelope Properties of the worker pool.
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginCreateOrUpdateWorkerPool(resourceGroupName: string, name: string, workerPoolName: string, workerPoolEnvelope: Models.WorkerPoolResource, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        resourceGroupName,
        name,
        workerPoolName,
        workerPoolEnvelope,
        options
      },
      beginCreateOrUpdateWorkerPoolOperationSpec,
      options);
  }

  /**
   * Description for Get all App Service Environments for a subscription.
   * @summary Get all App Service Environments for a subscription.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.AppServiceEnvironmentsListNextResponse>
   */
  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsListNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.AppServiceEnvironmentCollection>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.AppServiceEnvironmentCollection>): void;
  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.AppServiceEnvironmentCollection>, callback?: msRest.ServiceCallback<Models.AppServiceEnvironmentCollection>): Promise<Models.AppServiceEnvironmentsListNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listNextOperationSpec,
      callback) as Promise<Models.AppServiceEnvironmentsListNextResponse>;
  }

  /**
   * Description for Get all App Service Environments in a resource group.
   * @summary Get all App Service Environments in a resource group.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.AppServiceEnvironmentsListByResourceGroupNextResponse>
   */
  listByResourceGroupNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsListByResourceGroupNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listByResourceGroupNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.AppServiceEnvironmentCollection>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByResourceGroupNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.AppServiceEnvironmentCollection>): void;
  listByResourceGroupNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.AppServiceEnvironmentCollection>, callback?: msRest.ServiceCallback<Models.AppServiceEnvironmentCollection>): Promise<Models.AppServiceEnvironmentsListByResourceGroupNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listByResourceGroupNextOperationSpec,
      callback) as Promise<Models.AppServiceEnvironmentsListByResourceGroupNextResponse>;
  }

  /**
   * Description for Get the used, available, and total worker capacity an App Service Environment.
   * @summary Get the used, available, and total worker capacity an App Service Environment.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.AppServiceEnvironmentsListCapacitiesNextResponse>
   */
  listCapacitiesNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsListCapacitiesNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listCapacitiesNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.StampCapacityCollection>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listCapacitiesNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.StampCapacityCollection>): void;
  listCapacitiesNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.StampCapacityCollection>, callback?: msRest.ServiceCallback<Models.StampCapacityCollection>): Promise<Models.AppServiceEnvironmentsListCapacitiesNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listCapacitiesNextOperationSpec,
      callback) as Promise<Models.AppServiceEnvironmentsListCapacitiesNextResponse>;
  }

  /**
   * Description for Move an App Service Environment to a different VNET.
   * @summary Move an App Service Environment to a different VNET.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.AppServiceEnvironmentsChangeVnetNextResponse>
   */
  changeVnetNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsChangeVnetNextResponse> {
    return this.beginChangeVnetNext(nextPageLink,options)
      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.AppServiceEnvironmentsChangeVnetNextResponse>;
  }

  /**
   * Description for Get the network endpoints of all inbound dependencies of an App Service
   * Environment.
   * @summary Get the network endpoints of all inbound dependencies of an App Service Environment.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns
   * Promise<Models.AppServiceEnvironmentsGetInboundNetworkDependenciesEndpointsNextResponse>
   */
  getInboundNetworkDependenciesEndpointsNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsGetInboundNetworkDependenciesEndpointsNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  getInboundNetworkDependenciesEndpointsNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.InboundEnvironmentEndpointCollection>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  getInboundNetworkDependenciesEndpointsNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.InboundEnvironmentEndpointCollection>): void;
  getInboundNetworkDependenciesEndpointsNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.InboundEnvironmentEndpointCollection>, callback?: msRest.ServiceCallback<Models.InboundEnvironmentEndpointCollection>): Promise<Models.AppServiceEnvironmentsGetInboundNetworkDependenciesEndpointsNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      getInboundNetworkDependenciesEndpointsNextOperationSpec,
      callback) as Promise<Models.AppServiceEnvironmentsGetInboundNetworkDependenciesEndpointsNextResponse>;
  }

  /**
   * Description for Get all multi-role pools.
   * @summary Get all multi-role pools.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.AppServiceEnvironmentsListMultiRolePoolsNextResponse>
   */
  listMultiRolePoolsNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsListMultiRolePoolsNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listMultiRolePoolsNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.WorkerPoolCollection>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listMultiRolePoolsNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.WorkerPoolCollection>): void;
  listMultiRolePoolsNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.WorkerPoolCollection>, callback?: msRest.ServiceCallback<Models.WorkerPoolCollection>): Promise<Models.AppServiceEnvironmentsListMultiRolePoolsNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listMultiRolePoolsNextOperationSpec,
      callback) as Promise<Models.AppServiceEnvironmentsListMultiRolePoolsNextResponse>;
  }

  /**
   * Description for Get metric definitions for a specific instance of a multi-role pool of an App
   * Service Environment.
   * @summary Get metric definitions for a specific instance of a multi-role pool of an App Service
   * Environment.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns
   * Promise<Models.AppServiceEnvironmentsListMultiRolePoolInstanceMetricDefinitionsNextResponse>
   */
  listMultiRolePoolInstanceMetricDefinitionsNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsListMultiRolePoolInstanceMetricDefinitionsNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listMultiRolePoolInstanceMetricDefinitionsNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ResourceMetricDefinitionCollection>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listMultiRolePoolInstanceMetricDefinitionsNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ResourceMetricDefinitionCollection>): void;
  listMultiRolePoolInstanceMetricDefinitionsNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ResourceMetricDefinitionCollection>, callback?: msRest.ServiceCallback<Models.ResourceMetricDefinitionCollection>): Promise<Models.AppServiceEnvironmentsListMultiRolePoolInstanceMetricDefinitionsNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listMultiRolePoolInstanceMetricDefinitionsNextOperationSpec,
      callback) as Promise<Models.AppServiceEnvironmentsListMultiRolePoolInstanceMetricDefinitionsNextResponse>;
  }

  /**
   * Description for Get metric definitions for a multi-role pool of an App Service Environment.
   * @summary Get metric definitions for a multi-role pool of an App Service Environment.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.AppServiceEnvironmentsListMultiRoleMetricDefinitionsNextResponse>
   */
  listMultiRoleMetricDefinitionsNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsListMultiRoleMetricDefinitionsNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listMultiRoleMetricDefinitionsNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ResourceMetricDefinitionCollection>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listMultiRoleMetricDefinitionsNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ResourceMetricDefinitionCollection>): void;
  listMultiRoleMetricDefinitionsNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ResourceMetricDefinitionCollection>, callback?: msRest.ServiceCallback<Models.ResourceMetricDefinitionCollection>): Promise<Models.AppServiceEnvironmentsListMultiRoleMetricDefinitionsNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listMultiRoleMetricDefinitionsNextOperationSpec,
      callback) as Promise<Models.AppServiceEnvironmentsListMultiRoleMetricDefinitionsNextResponse>;
  }

  /**
   * Description for Get available SKUs for scaling a multi-role pool.
   * @summary Get available SKUs for scaling a multi-role pool.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.AppServiceEnvironmentsListMultiRolePoolSkusNextResponse>
   */
  listMultiRolePoolSkusNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsListMultiRolePoolSkusNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listMultiRolePoolSkusNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.SkuInfoCollection>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listMultiRolePoolSkusNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SkuInfoCollection>): void;
  listMultiRolePoolSkusNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.SkuInfoCollection>, callback?: msRest.ServiceCallback<Models.SkuInfoCollection>): Promise<Models.AppServiceEnvironmentsListMultiRolePoolSkusNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listMultiRolePoolSkusNextOperationSpec,
      callback) as Promise<Models.AppServiceEnvironmentsListMultiRolePoolSkusNextResponse>;
  }

  /**
   * Description for Get usage metrics for a multi-role pool of an App Service Environment.
   * @summary Get usage metrics for a multi-role pool of an App Service Environment.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.AppServiceEnvironmentsListMultiRoleUsagesNextResponse>
   */
  listMultiRoleUsagesNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsListMultiRoleUsagesNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listMultiRoleUsagesNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.UsageCollection>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listMultiRoleUsagesNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.UsageCollection>): void;
  listMultiRoleUsagesNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.UsageCollection>, callback?: msRest.ServiceCallback<Models.UsageCollection>): Promise<Models.AppServiceEnvironmentsListMultiRoleUsagesNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listMultiRoleUsagesNextOperationSpec,
      callback) as Promise<Models.AppServiceEnvironmentsListMultiRoleUsagesNextResponse>;
  }

  /**
   * Description for Get the network endpoints of all outbound dependencies of an App Service
   * Environment.
   * @summary Get the network endpoints of all outbound dependencies of an App Service Environment.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns
   * Promise<Models.AppServiceEnvironmentsGetOutboundNetworkDependenciesEndpointsNextResponse>
   */
  getOutboundNetworkDependenciesEndpointsNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsGetOutboundNetworkDependenciesEndpointsNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  getOutboundNetworkDependenciesEndpointsNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.OutboundEnvironmentEndpointCollection>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  getOutboundNetworkDependenciesEndpointsNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.OutboundEnvironmentEndpointCollection>): void;
  getOutboundNetworkDependenciesEndpointsNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.OutboundEnvironmentEndpointCollection>, callback?: msRest.ServiceCallback<Models.OutboundEnvironmentEndpointCollection>): Promise<Models.AppServiceEnvironmentsGetOutboundNetworkDependenciesEndpointsNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      getOutboundNetworkDependenciesEndpointsNextOperationSpec,
      callback) as Promise<Models.AppServiceEnvironmentsGetOutboundNetworkDependenciesEndpointsNextResponse>;
  }

  /**
   * Description for Resume an App Service Environment.
   * @summary Resume an App Service Environment.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.AppServiceEnvironmentsResumeNextResponse>
   */
  resumeNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsResumeNextResponse> {
    return this.beginResumeNext(nextPageLink,options)
      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.AppServiceEnvironmentsResumeNextResponse>;
  }

  /**
   * Description for Get all App Service plans in an App Service Environment.
   * @summary Get all App Service plans in an App Service Environment.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.AppServiceEnvironmentsListAppServicePlansNextResponse>
   */
  listAppServicePlansNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsListAppServicePlansNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listAppServicePlansNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.AppServicePlanCollection>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listAppServicePlansNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.AppServicePlanCollection>): void;
  listAppServicePlansNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.AppServicePlanCollection>, callback?: msRest.ServiceCallback<Models.AppServicePlanCollection>): Promise<Models.AppServiceEnvironmentsListAppServicePlansNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listAppServicePlansNextOperationSpec,
      callback) as Promise<Models.AppServiceEnvironmentsListAppServicePlansNextResponse>;
  }

  /**
   * Description for Get all apps in an App Service Environment.
   * @summary Get all apps in an App Service Environment.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.AppServiceEnvironmentsListWebAppsNextResponse>
   */
  listWebAppsNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsListWebAppsNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listWebAppsNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.WebAppCollection>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listWebAppsNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.WebAppCollection>): void;
  listWebAppsNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.WebAppCollection>, callback?: msRest.ServiceCallback<Models.WebAppCollection>): Promise<Models.AppServiceEnvironmentsListWebAppsNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listWebAppsNextOperationSpec,
      callback) as Promise<Models.AppServiceEnvironmentsListWebAppsNextResponse>;
  }

  /**
   * Description for Suspend an App Service Environment.
   * @summary Suspend an App Service Environment.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.AppServiceEnvironmentsSuspendNextResponse>
   */
  suspendNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsSuspendNextResponse> {
    return this.beginSuspendNext(nextPageLink,options)
      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.AppServiceEnvironmentsSuspendNextResponse>;
  }

  /**
   * Description for Get global usage metrics of an App Service Environment.
   * @summary Get global usage metrics of an App Service Environment.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.AppServiceEnvironmentsListUsagesNextResponse>
   */
  listUsagesNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsListUsagesNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listUsagesNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.CsmUsageQuotaCollection>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listUsagesNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.CsmUsageQuotaCollection>): void;
  listUsagesNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.CsmUsageQuotaCollection>, callback?: msRest.ServiceCallback<Models.CsmUsageQuotaCollection>): Promise<Models.AppServiceEnvironmentsListUsagesNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listUsagesNextOperationSpec,
      callback) as Promise<Models.AppServiceEnvironmentsListUsagesNextResponse>;
  }

  /**
   * Description for Get all worker pools of an App Service Environment.
   * @summary Get all worker pools of an App Service Environment.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.AppServiceEnvironmentsListWorkerPoolsNextResponse>
   */
  listWorkerPoolsNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsListWorkerPoolsNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listWorkerPoolsNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.WorkerPoolCollection>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listWorkerPoolsNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.WorkerPoolCollection>): void;
  listWorkerPoolsNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.WorkerPoolCollection>, callback?: msRest.ServiceCallback<Models.WorkerPoolCollection>): Promise<Models.AppServiceEnvironmentsListWorkerPoolsNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listWorkerPoolsNextOperationSpec,
      callback) as Promise<Models.AppServiceEnvironmentsListWorkerPoolsNextResponse>;
  }

  /**
   * Description for Get metric definitions for a specific instance of a worker pool of an App
   * Service Environment.
   * @summary Get metric definitions for a specific instance of a worker pool of an App Service
   * Environment.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns
   * Promise<Models.AppServiceEnvironmentsListWorkerPoolInstanceMetricDefinitionsNextResponse>
   */
  listWorkerPoolInstanceMetricDefinitionsNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsListWorkerPoolInstanceMetricDefinitionsNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listWorkerPoolInstanceMetricDefinitionsNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ResourceMetricDefinitionCollection>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listWorkerPoolInstanceMetricDefinitionsNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ResourceMetricDefinitionCollection>): void;
  listWorkerPoolInstanceMetricDefinitionsNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ResourceMetricDefinitionCollection>, callback?: msRest.ServiceCallback<Models.ResourceMetricDefinitionCollection>): Promise<Models.AppServiceEnvironmentsListWorkerPoolInstanceMetricDefinitionsNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listWorkerPoolInstanceMetricDefinitionsNextOperationSpec,
      callback) as Promise<Models.AppServiceEnvironmentsListWorkerPoolInstanceMetricDefinitionsNextResponse>;
  }

  /**
   * Description for Get metric definitions for a worker pool of an App Service Environment.
   * @summary Get metric definitions for a worker pool of an App Service Environment.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.AppServiceEnvironmentsListWebWorkerMetricDefinitionsNextResponse>
   */
  listWebWorkerMetricDefinitionsNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsListWebWorkerMetricDefinitionsNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listWebWorkerMetricDefinitionsNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ResourceMetricDefinitionCollection>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listWebWorkerMetricDefinitionsNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ResourceMetricDefinitionCollection>): void;
  listWebWorkerMetricDefinitionsNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ResourceMetricDefinitionCollection>, callback?: msRest.ServiceCallback<Models.ResourceMetricDefinitionCollection>): Promise<Models.AppServiceEnvironmentsListWebWorkerMetricDefinitionsNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listWebWorkerMetricDefinitionsNextOperationSpec,
      callback) as Promise<Models.AppServiceEnvironmentsListWebWorkerMetricDefinitionsNextResponse>;
  }

  /**
   * Description for Get available SKUs for scaling a worker pool.
   * @summary Get available SKUs for scaling a worker pool.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.AppServiceEnvironmentsListWorkerPoolSkusNextResponse>
   */
  listWorkerPoolSkusNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsListWorkerPoolSkusNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listWorkerPoolSkusNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.SkuInfoCollection>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listWorkerPoolSkusNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SkuInfoCollection>): void;
  listWorkerPoolSkusNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.SkuInfoCollection>, callback?: msRest.ServiceCallback<Models.SkuInfoCollection>): Promise<Models.AppServiceEnvironmentsListWorkerPoolSkusNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listWorkerPoolSkusNextOperationSpec,
      callback) as Promise<Models.AppServiceEnvironmentsListWorkerPoolSkusNextResponse>;
  }

  /**
   * Description for Get usage metrics for a worker pool of an App Service Environment.
   * @summary Get usage metrics for a worker pool of an App Service Environment.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.AppServiceEnvironmentsListWebWorkerUsagesNextResponse>
   */
  listWebWorkerUsagesNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsListWebWorkerUsagesNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listWebWorkerUsagesNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.UsageCollection>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listWebWorkerUsagesNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.UsageCollection>): void;
  listWebWorkerUsagesNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.UsageCollection>, callback?: msRest.ServiceCallback<Models.UsageCollection>): Promise<Models.AppServiceEnvironmentsListWebWorkerUsagesNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listWebWorkerUsagesNextOperationSpec,
      callback) as Promise<Models.AppServiceEnvironmentsListWebWorkerUsagesNextResponse>;
  }

  /**
   * Description for Move an App Service Environment to a different VNET.
   * @summary Move an App Service Environment to a different VNET.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginChangeVnetNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        nextPageLink,
        options
      },
      beginChangeVnetNextOperationSpec,
      options);
  }

  /**
   * Description for Resume an App Service Environment.
   * @summary Resume an App Service Environment.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginResumeNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        nextPageLink,
        options
      },
      beginResumeNextOperationSpec,
      options);
  }

  /**
   * Description for Suspend an App Service Environment.
   * @summary Suspend an App Service Environment.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginSuspendNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        nextPageLink,
        options
      },
      beginSuspendNextOperationSpec,
      options);
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/providers/Microsoft.Web/hostingEnvironments",
  urlParameters: [
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.AppServiceEnvironmentCollection
    },
    default: {
      bodyMapper: Mappers.DefaultErrorResponse
    }
  },
  serializer
};

const listByResourceGroupOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.AppServiceEnvironmentCollection
    },
    default: {
      bodyMapper: Mappers.DefaultErrorResponse
    }
  },
  serializer
};

const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.name,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.AppServiceEnvironmentResource
    },
    default: {
      bodyMapper: Mappers.DefaultErrorResponse
    }
  },
  serializer
};

const updateOperationSpec: msRest.OperationSpec = {
  httpMethod: "PATCH",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.name,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "hostingEnvironmentEnvelope",
    mapper: {
      ...Mappers.AppServiceEnvironmentPatchResource,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.AppServiceEnvironmentResource
    },
    201: {
      bodyMapper: Mappers.AppServiceEnvironmentResource
    },
    202: {
      bodyMapper: Mappers.AppServiceEnvironmentResource
    },
    default: {
      bodyMapper: Mappers.DefaultErrorResponse
    }
  },
  serializer
};

const listCapacitiesOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/capacities/compute",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.name,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.StampCapacityCollection
    },
    default: {
      bodyMapper: Mappers.DefaultErrorResponse
    }
  },
  serializer
};

const getVipInfoOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/capacities/virtualip",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.name,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.AddressResponse
    },
    default: {
      bodyMapper: Mappers.DefaultErrorResponse
    }
  },
  serializer
};

const listDiagnosticsOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/diagnostics",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.name,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: {
        serializedName: "parsedResponse",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "HostingEnvironmentDiagnostics"
            }
          }
        }
      }
    },
    default: {
      bodyMapper: Mappers.DefaultErrorResponse
    }
  },
  serializer
};

const getDiagnosticsItemOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/diagnostics/{diagnosticsName}",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.name,
    Parameters.diagnosticsName,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.HostingEnvironmentDiagnostics
    },
    default: {
      bodyMapper: Mappers.DefaultErrorResponse
    }
  },
  serializer
};

const getInboundNetworkDependenciesEndpointsOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/inboundNetworkDependenciesEndpoints",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.name,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.InboundEnvironmentEndpointCollection
    },
    default: {
      bodyMapper: Mappers.DefaultErrorResponse
    }
  },
  serializer
};

const listMultiRolePoolsOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/multiRolePools",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.name,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.WorkerPoolCollection
    },
    default: {
      bodyMapper: Mappers.DefaultErrorResponse
    }
  },
  serializer
};

const getMultiRolePoolOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/multiRolePools/default",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.name,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.WorkerPoolResource
    },
    default: {
      bodyMapper: Mappers.DefaultErrorResponse
    }
  },
  serializer
};

const updateMultiRolePoolOperationSpec: msRest.OperationSpec = {
  httpMethod: "PATCH",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/multiRolePools/default",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.name,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "multiRolePoolEnvelope",
    mapper: {
      ...Mappers.WorkerPoolResource,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.WorkerPoolResource
    },
    202: {
      bodyMapper: Mappers.WorkerPoolResource
    },
    default: {
      bodyMapper: Mappers.DefaultErrorResponse
    }
  },
  serializer
};

const listMultiRolePoolInstanceMetricDefinitionsOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/multiRolePools/default/instances/{instance}/metricdefinitions",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.name,
    Parameters.instance,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ResourceMetricDefinitionCollection
    },
    default: {
      bodyMapper: Mappers.DefaultErrorResponse
    }
  },
  serializer
};

const listMultiRoleMetricDefinitionsOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/multiRolePools/default/metricdefinitions",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.name,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ResourceMetricDefinitionCollection
    },
    default: {
      bodyMapper: Mappers.DefaultErrorResponse
    }
  },
  serializer
};

const listMultiRolePoolSkusOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/multiRolePools/default/skus",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.name,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.SkuInfoCollection
    },
    default: {
      bodyMapper: Mappers.DefaultErrorResponse
    }
  },
  serializer
};

const listMultiRoleUsagesOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/multiRolePools/default/usages",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.name,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.UsageCollection
    },
    default: {
      bodyMapper: Mappers.DefaultErrorResponse
    }
  },
  serializer
};

const listOperationsOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/operations",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.name,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: {
        serializedName: "parsedResponse",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Operation"
            }
          }
        }
      }
    },
    default: {
      bodyMapper: Mappers.DefaultErrorResponse
    }
  },
  serializer
};

const getOutboundNetworkDependenciesEndpointsOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/outboundNetworkDependenciesEndpoints",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.name,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.OutboundEnvironmentEndpointCollection
    },
    default: {
      bodyMapper: Mappers.DefaultErrorResponse
    }
  },
  serializer
};

const rebootOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/reboot",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.name,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    202: {},
    default: {
      bodyMapper: Mappers.DefaultErrorResponse
    }
  },
  serializer
};

const listAppServicePlansOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/serverfarms",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.name,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.AppServicePlanCollection
    },
    default: {
      bodyMapper: Mappers.DefaultErrorResponse
    }
  },
  serializer
};

const listWebAppsOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/sites",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.name,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.propertiesToInclude,
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.WebAppCollection
    },
    default: {
      bodyMapper: Mappers.DefaultErrorResponse
    }
  },
  serializer
};

const listUsagesOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/usages",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.name,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.filter,
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.CsmUsageQuotaCollection
    },
    default: {
      bodyMapper: Mappers.DefaultErrorResponse
    }
  },
  serializer
};

const listWorkerPoolsOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/workerPools",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.name,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.WorkerPoolCollection
    },
    default: {
      bodyMapper: Mappers.DefaultErrorResponse
    }
  },
  serializer
};

const getWorkerPoolOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/workerPools/{workerPoolName}",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.name,
    Parameters.workerPoolName,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.WorkerPoolResource
    },
    default: {
      bodyMapper: Mappers.DefaultErrorResponse
    }
  },
  serializer
};

const updateWorkerPoolOperationSpec: msRest.OperationSpec = {
  httpMethod: "PATCH",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/workerPools/{workerPoolName}",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.name,
    Parameters.workerPoolName,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "workerPoolEnvelope",
    mapper: {
      ...Mappers.WorkerPoolResource,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.WorkerPoolResource
    },
    202: {
      bodyMapper: Mappers.WorkerPoolResource
    },
    default: {
      bodyMapper: Mappers.DefaultErrorResponse
    }
  },
  serializer
};

const listWorkerPoolInstanceMetricDefinitionsOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/workerPools/{workerPoolName}/instances/{instance}/metricdefinitions",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.name,
    Parameters.workerPoolName,
    Parameters.instance,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ResourceMetricDefinitionCollection
    },
    default: {
      bodyMapper: Mappers.DefaultErrorResponse
    }
  },
  serializer
};

const listWebWorkerMetricDefinitionsOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/workerPools/{workerPoolName}/metricdefinitions",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.name,
    Parameters.workerPoolName,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ResourceMetricDefinitionCollection
    },
    default: {
      bodyMapper: Mappers.DefaultErrorResponse
    }
  },
  serializer
};

const listWorkerPoolSkusOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/workerPools/{workerPoolName}/skus",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.name,
    Parameters.workerPoolName,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.SkuInfoCollection
    },
    default: {
      bodyMapper: Mappers.DefaultErrorResponse
    }
  },
  serializer
};

const listWebWorkerUsagesOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/workerPools/{workerPoolName}/usages",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.name,
    Parameters.workerPoolName,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.UsageCollection
    },
    default: {
      bodyMapper: Mappers.DefaultErrorResponse
    }
  },
  serializer
};

const beginCreateOrUpdateOperationSpec: msRest.OperationSpec = {
  httpMethod: "PUT",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.name,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "hostingEnvironmentEnvelope",
    mapper: {
      ...Mappers.AppServiceEnvironmentResource,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.AppServiceEnvironmentResource
    },
    201: {
      bodyMapper: Mappers.AppServiceEnvironmentResource
    },
    202: {
      bodyMapper: Mappers.AppServiceEnvironmentResource
    },
    default: {
      bodyMapper: Mappers.DefaultErrorResponse
    }
  },
  serializer
};

const beginDeleteMethodOperationSpec: msRest.OperationSpec = {
  httpMethod: "DELETE",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.name,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.forceDelete,
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    202: {},
    204: {},
    default: {
      bodyMapper: Mappers.DefaultErrorResponse
    }
  },
  serializer
};

const beginChangeVnetOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/changeVirtualNetwork",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.name,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "vnetInfo",
    mapper: {
      ...Mappers.VirtualNetworkProfile,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.WebAppCollection
    },
    202: {
      bodyMapper: Mappers.WebAppCollection
    },
    default: {
      bodyMapper: Mappers.DefaultErrorResponse
    }
  },
  serializer
};

const beginCreateOrUpdateMultiRolePoolOperationSpec: msRest.OperationSpec = {
  httpMethod: "PUT",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/multiRolePools/default",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.name,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "multiRolePoolEnvelope",
    mapper: {
      ...Mappers.WorkerPoolResource,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.WorkerPoolResource
    },
    202: {
      bodyMapper: Mappers.WorkerPoolResource
    },
    default: {
      bodyMapper: Mappers.DefaultErrorResponse
    }
  },
  serializer
};

const beginResumeOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/resume",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.name,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.WebAppCollection
    },
    202: {
      bodyMapper: Mappers.WebAppCollection
    },
    default: {
      bodyMapper: Mappers.DefaultErrorResponse
    }
  },
  serializer
};

const beginSuspendOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/suspend",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.name,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.WebAppCollection
    },
    202: {
      bodyMapper: Mappers.WebAppCollection
    },
    default: {
      bodyMapper: Mappers.DefaultErrorResponse
    }
  },
  serializer
};

const beginCreateOrUpdateWorkerPoolOperationSpec: msRest.OperationSpec = {
  httpMethod: "PUT",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/workerPools/{workerPoolName}",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.name,
    Parameters.workerPoolName,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "workerPoolEnvelope",
    mapper: {
      ...Mappers.WorkerPoolResource,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.WorkerPoolResource
    },
    202: {
      bodyMapper: Mappers.WorkerPoolResource
    },
    default: {
      bodyMapper: Mappers.DefaultErrorResponse
    }
  },
  serializer
};

const listNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.AppServiceEnvironmentCollection
    },
    default: {
      bodyMapper: Mappers.DefaultErrorResponse
    }
  },
  serializer
};

const listByResourceGroupNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.AppServiceEnvironmentCollection
    },
    default: {
      bodyMapper: Mappers.DefaultErrorResponse
    }
  },
  serializer
};

const listCapacitiesNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.StampCapacityCollection
    },
    default: {
      bodyMapper: Mappers.DefaultErrorResponse
    }
  },
  serializer
};

const getInboundNetworkDependenciesEndpointsNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.InboundEnvironmentEndpointCollection
    },
    default: {
      bodyMapper: Mappers.DefaultErrorResponse
    }
  },
  serializer
};

const listMultiRolePoolsNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.WorkerPoolCollection
    },
    default: {
      bodyMapper: Mappers.DefaultErrorResponse
    }
  },
  serializer
};

const listMultiRolePoolInstanceMetricDefinitionsNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ResourceMetricDefinitionCollection
    },
    default: {
      bodyMapper: Mappers.DefaultErrorResponse
    }
  },
  serializer
};

const listMultiRoleMetricDefinitionsNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ResourceMetricDefinitionCollection
    },
    default: {
      bodyMapper: Mappers.DefaultErrorResponse
    }
  },
  serializer
};

const listMultiRolePoolSkusNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.SkuInfoCollection
    },
    default: {
      bodyMapper: Mappers.DefaultErrorResponse
    }
  },
  serializer
};

const listMultiRoleUsagesNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.UsageCollection
    },
    default: {
      bodyMapper: Mappers.DefaultErrorResponse
    }
  },
  serializer
};

const getOutboundNetworkDependenciesEndpointsNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.OutboundEnvironmentEndpointCollection
    },
    default: {
      bodyMapper: Mappers.DefaultErrorResponse
    }
  },
  serializer
};

const listAppServicePlansNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.AppServicePlanCollection
    },
    default: {
      bodyMapper: Mappers.DefaultErrorResponse
    }
  },
  serializer
};

const listWebAppsNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.WebAppCollection
    },
    default: {
      bodyMapper: Mappers.DefaultErrorResponse
    }
  },
  serializer
};

const listUsagesNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.CsmUsageQuotaCollection
    },
    default: {
      bodyMapper: Mappers.DefaultErrorResponse
    }
  },
  serializer
};

const listWorkerPoolsNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.WorkerPoolCollection
    },
    default: {
      bodyMapper: Mappers.DefaultErrorResponse
    }
  },
  serializer
};

const listWorkerPoolInstanceMetricDefinitionsNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ResourceMetricDefinitionCollection
    },
    default: {
      bodyMapper: Mappers.DefaultErrorResponse
    }
  },
  serializer
};

const listWebWorkerMetricDefinitionsNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ResourceMetricDefinitionCollection
    },
    default: {
      bodyMapper: Mappers.DefaultErrorResponse
    }
  },
  serializer
};

const listWorkerPoolSkusNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.SkuInfoCollection
    },
    default: {
      bodyMapper: Mappers.DefaultErrorResponse
    }
  },
  serializer
};

const listWebWorkerUsagesNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.UsageCollection
    },
    default: {
      bodyMapper: Mappers.DefaultErrorResponse
    }
  },
  serializer
};

const beginChangeVnetNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.WebAppCollection
    },
    202: {
      bodyMapper: Mappers.WebAppCollection
    },
    default: {
      bodyMapper: Mappers.DefaultErrorResponse
    }
  },
  serializer
};

const beginResumeNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.WebAppCollection
    },
    202: {
      bodyMapper: Mappers.WebAppCollection
    },
    default: {
      bodyMapper: Mappers.DefaultErrorResponse
    }
  },
  serializer
};

const beginSuspendNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.WebAppCollection
    },
    202: {
      bodyMapper: Mappers.WebAppCollection
    },
    default: {
      bodyMapper: Mappers.DefaultErrorResponse
    }
  },
  serializer
};
