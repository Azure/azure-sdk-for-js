/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import "@azure/core-paging";
import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  ResourceHealthMetadata,
  ResourceHealthMetadataOperationsListOptionalParams,
  ResourceHealthMetadataOperationsListByResourceGroupOptionalParams,
  ResourceHealthMetadataOperationsListBySiteOptionalParams,
  ResourceHealthMetadataOperationsListBySiteSlotOptionalParams,
  ResourceHealthMetadataOperationsGetBySiteOptionalParams,
  ResourceHealthMetadataOperationsGetBySiteResponse,
  ResourceHealthMetadataOperationsGetBySiteSlotOptionalParams,
  ResourceHealthMetadataOperationsGetBySiteSlotResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a ResourceHealthMetadataOperations. */
export interface ResourceHealthMetadataOperations {
  /**
   * Description for List all ResourceHealthMetadata for all sites in the subscription.
   * @param options The options parameters.
   */
  list(
    options?: ResourceHealthMetadataOperationsListOptionalParams
  ): PagedAsyncIterableIterator<ResourceHealthMetadata>;
  /**
   * Description for List all ResourceHealthMetadata for all sites in the resource group in the
   * subscription.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: ResourceHealthMetadataOperationsListByResourceGroupOptionalParams
  ): PagedAsyncIterableIterator<ResourceHealthMetadata>;
  /**
   * Description for Gets the category of ResourceHealthMetadata to use for the given site as a
   * collection
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of web app.
   * @param options The options parameters.
   */
  listBySite(
    resourceGroupName: string,
    name: string,
    options?: ResourceHealthMetadataOperationsListBySiteOptionalParams
  ): PagedAsyncIterableIterator<ResourceHealthMetadata>;
  /**
   * Description for Gets the category of ResourceHealthMetadata to use for the given site as a
   * collection
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of web app.
   * @param slot Name of web app slot. If not specified then will default to production slot.
   * @param options The options parameters.
   */
  listBySiteSlot(
    resourceGroupName: string,
    name: string,
    slot: string,
    options?: ResourceHealthMetadataOperationsListBySiteSlotOptionalParams
  ): PagedAsyncIterableIterator<ResourceHealthMetadata>;
  /**
   * Description for Gets the category of ResourceHealthMetadata to use for the given site
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of web app
   * @param options The options parameters.
   */
  getBySite(
    resourceGroupName: string,
    name: string,
    options?: ResourceHealthMetadataOperationsGetBySiteOptionalParams
  ): Promise<ResourceHealthMetadataOperationsGetBySiteResponse>;
  /**
   * Description for Gets the category of ResourceHealthMetadata to use for the given site
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of web app
   * @param slot Name of web app slot. If not specified then will default to production slot.
   * @param options The options parameters.
   */
  getBySiteSlot(
    resourceGroupName: string,
    name: string,
    slot: string,
    options?: ResourceHealthMetadataOperationsGetBySiteSlotOptionalParams
  ): Promise<ResourceHealthMetadataOperationsGetBySiteSlotResponse>;
}
