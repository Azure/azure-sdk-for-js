/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import {
  DetectorResponse,
  DiagnosticsListHostingEnvironmentDetectorResponsesOptionalParams,
  DiagnosticsListSiteDetectorResponsesOptionalParams,
  DiagnosticCategory,
  DiagnosticsListSiteDiagnosticCategoriesOptionalParams,
  AnalysisDefinition,
  DiagnosticsListSiteAnalysesOptionalParams,
  DetectorDefinitionResource,
  DiagnosticsListSiteDetectorsOptionalParams,
  DiagnosticsListSiteDetectorResponsesSlotOptionalParams,
  DiagnosticsListSiteDiagnosticCategoriesSlotOptionalParams,
  DiagnosticsListSiteAnalysesSlotOptionalParams,
  DiagnosticsListSiteDetectorsSlotOptionalParams,
  DiagnosticsGetHostingEnvironmentDetectorResponseOptionalParams,
  DiagnosticsGetHostingEnvironmentDetectorResponseResponse,
  DiagnosticsGetSiteDetectorResponseOptionalParams,
  DiagnosticsGetSiteDetectorResponseResponse,
  DiagnosticsGetSiteDiagnosticCategoryOptionalParams,
  DiagnosticsGetSiteDiagnosticCategoryResponse,
  DiagnosticsGetSiteAnalysisOptionalParams,
  DiagnosticsGetSiteAnalysisResponse,
  DiagnosticsExecuteSiteAnalysisOptionalParams,
  DiagnosticsExecuteSiteAnalysisResponse,
  DiagnosticsGetSiteDetectorOptionalParams,
  DiagnosticsGetSiteDetectorResponse,
  DiagnosticsExecuteSiteDetectorOptionalParams,
  DiagnosticsExecuteSiteDetectorResponse,
  DiagnosticsGetSiteDetectorResponseSlotOptionalParams,
  DiagnosticsGetSiteDetectorResponseSlotResponse,
  DiagnosticsGetSiteDiagnosticCategorySlotOptionalParams,
  DiagnosticsGetSiteDiagnosticCategorySlotResponse,
  DiagnosticsGetSiteAnalysisSlotOptionalParams,
  DiagnosticsGetSiteAnalysisSlotResponse,
  DiagnosticsExecuteSiteAnalysisSlotOptionalParams,
  DiagnosticsExecuteSiteAnalysisSlotResponse,
  DiagnosticsGetSiteDetectorSlotOptionalParams,
  DiagnosticsGetSiteDetectorSlotResponse,
  DiagnosticsExecuteSiteDetectorSlotOptionalParams,
  DiagnosticsExecuteSiteDetectorSlotResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Diagnostics. */
export interface Diagnostics {
  /**
   * Description for List Hosting Environment Detector Responses
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Site Name
   * @param options The options parameters.
   */
  listHostingEnvironmentDetectorResponses(
    resourceGroupName: string,
    name: string,
    options?: DiagnosticsListHostingEnvironmentDetectorResponsesOptionalParams
  ): PagedAsyncIterableIterator<DetectorResponse>;
  /**
   * Description for List Site Detector Responses
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param siteName Site Name
   * @param options The options parameters.
   */
  listSiteDetectorResponses(
    resourceGroupName: string,
    siteName: string,
    options?: DiagnosticsListSiteDetectorResponsesOptionalParams
  ): PagedAsyncIterableIterator<DetectorResponse>;
  /**
   * Description for Get Diagnostics Categories
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param siteName Site Name
   * @param options The options parameters.
   */
  listSiteDiagnosticCategories(
    resourceGroupName: string,
    siteName: string,
    options?: DiagnosticsListSiteDiagnosticCategoriesOptionalParams
  ): PagedAsyncIterableIterator<DiagnosticCategory>;
  /**
   * Description for Get Site Analyses
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param siteName Site Name
   * @param diagnosticCategory Diagnostic Category
   * @param options The options parameters.
   */
  listSiteAnalyses(
    resourceGroupName: string,
    siteName: string,
    diagnosticCategory: string,
    options?: DiagnosticsListSiteAnalysesOptionalParams
  ): PagedAsyncIterableIterator<AnalysisDefinition>;
  /**
   * Description for Get Detectors
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param siteName Site Name
   * @param diagnosticCategory Diagnostic Category
   * @param options The options parameters.
   */
  listSiteDetectors(
    resourceGroupName: string,
    siteName: string,
    diagnosticCategory: string,
    options?: DiagnosticsListSiteDetectorsOptionalParams
  ): PagedAsyncIterableIterator<DetectorDefinitionResource>;
  /**
   * Description for List Site Detector Responses
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param siteName Site Name
   * @param slot Slot Name
   * @param options The options parameters.
   */
  listSiteDetectorResponsesSlot(
    resourceGroupName: string,
    siteName: string,
    slot: string,
    options?: DiagnosticsListSiteDetectorResponsesSlotOptionalParams
  ): PagedAsyncIterableIterator<DetectorResponse>;
  /**
   * Description for Get Diagnostics Categories
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param siteName Site Name
   * @param slot Slot Name
   * @param options The options parameters.
   */
  listSiteDiagnosticCategoriesSlot(
    resourceGroupName: string,
    siteName: string,
    slot: string,
    options?: DiagnosticsListSiteDiagnosticCategoriesSlotOptionalParams
  ): PagedAsyncIterableIterator<DiagnosticCategory>;
  /**
   * Description for Get Site Analyses
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param siteName Site Name
   * @param diagnosticCategory Diagnostic Category
   * @param slot Slot Name
   * @param options The options parameters.
   */
  listSiteAnalysesSlot(
    resourceGroupName: string,
    siteName: string,
    diagnosticCategory: string,
    slot: string,
    options?: DiagnosticsListSiteAnalysesSlotOptionalParams
  ): PagedAsyncIterableIterator<AnalysisDefinition>;
  /**
   * Description for Get Detectors
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param siteName Site Name
   * @param diagnosticCategory Diagnostic Category
   * @param slot Slot Name
   * @param options The options parameters.
   */
  listSiteDetectorsSlot(
    resourceGroupName: string,
    siteName: string,
    diagnosticCategory: string,
    slot: string,
    options?: DiagnosticsListSiteDetectorsSlotOptionalParams
  ): PagedAsyncIterableIterator<DetectorDefinitionResource>;
  /**
   * Description for Get Hosting Environment Detector Response
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name App Service Environment Name
   * @param detectorName Detector Resource Name
   * @param options The options parameters.
   */
  getHostingEnvironmentDetectorResponse(
    resourceGroupName: string,
    name: string,
    detectorName: string,
    options?: DiagnosticsGetHostingEnvironmentDetectorResponseOptionalParams
  ): Promise<DiagnosticsGetHostingEnvironmentDetectorResponseResponse>;
  /**
   * Description for Get site detector response
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param siteName Site Name
   * @param detectorName Detector Resource Name
   * @param options The options parameters.
   */
  getSiteDetectorResponse(
    resourceGroupName: string,
    siteName: string,
    detectorName: string,
    options?: DiagnosticsGetSiteDetectorResponseOptionalParams
  ): Promise<DiagnosticsGetSiteDetectorResponseResponse>;
  /**
   * Description for Get Diagnostics Category
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param siteName Site Name
   * @param diagnosticCategory Diagnostic Category
   * @param options The options parameters.
   */
  getSiteDiagnosticCategory(
    resourceGroupName: string,
    siteName: string,
    diagnosticCategory: string,
    options?: DiagnosticsGetSiteDiagnosticCategoryOptionalParams
  ): Promise<DiagnosticsGetSiteDiagnosticCategoryResponse>;
  /**
   * Description for Get Site Analysis
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param siteName Site Name
   * @param diagnosticCategory Diagnostic Category
   * @param analysisName Analysis Name
   * @param options The options parameters.
   */
  getSiteAnalysis(
    resourceGroupName: string,
    siteName: string,
    diagnosticCategory: string,
    analysisName: string,
    options?: DiagnosticsGetSiteAnalysisOptionalParams
  ): Promise<DiagnosticsGetSiteAnalysisResponse>;
  /**
   * Description for Execute Analysis
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param siteName Site Name
   * @param diagnosticCategory Category Name
   * @param analysisName Analysis Resource Name
   * @param options The options parameters.
   */
  executeSiteAnalysis(
    resourceGroupName: string,
    siteName: string,
    diagnosticCategory: string,
    analysisName: string,
    options?: DiagnosticsExecuteSiteAnalysisOptionalParams
  ): Promise<DiagnosticsExecuteSiteAnalysisResponse>;
  /**
   * Description for Get Detector
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param siteName Site Name
   * @param diagnosticCategory Diagnostic Category
   * @param detectorName Detector Name
   * @param options The options parameters.
   */
  getSiteDetector(
    resourceGroupName: string,
    siteName: string,
    diagnosticCategory: string,
    detectorName: string,
    options?: DiagnosticsGetSiteDetectorOptionalParams
  ): Promise<DiagnosticsGetSiteDetectorResponse>;
  /**
   * Description for Execute Detector
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param siteName Site Name
   * @param detectorName Detector Resource Name
   * @param diagnosticCategory Category Name
   * @param options The options parameters.
   */
  executeSiteDetector(
    resourceGroupName: string,
    siteName: string,
    detectorName: string,
    diagnosticCategory: string,
    options?: DiagnosticsExecuteSiteDetectorOptionalParams
  ): Promise<DiagnosticsExecuteSiteDetectorResponse>;
  /**
   * Description for Get site detector response
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param siteName Site Name
   * @param detectorName Detector Resource Name
   * @param slot Slot Name
   * @param options The options parameters.
   */
  getSiteDetectorResponseSlot(
    resourceGroupName: string,
    siteName: string,
    detectorName: string,
    slot: string,
    options?: DiagnosticsGetSiteDetectorResponseSlotOptionalParams
  ): Promise<DiagnosticsGetSiteDetectorResponseSlotResponse>;
  /**
   * Description for Get Diagnostics Category
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param siteName Site Name
   * @param diagnosticCategory Diagnostic Category
   * @param slot Slot Name
   * @param options The options parameters.
   */
  getSiteDiagnosticCategorySlot(
    resourceGroupName: string,
    siteName: string,
    diagnosticCategory: string,
    slot: string,
    options?: DiagnosticsGetSiteDiagnosticCategorySlotOptionalParams
  ): Promise<DiagnosticsGetSiteDiagnosticCategorySlotResponse>;
  /**
   * Description for Get Site Analysis
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param siteName Site Name
   * @param diagnosticCategory Diagnostic Category
   * @param analysisName Analysis Name
   * @param slot Slot - optional
   * @param options The options parameters.
   */
  getSiteAnalysisSlot(
    resourceGroupName: string,
    siteName: string,
    diagnosticCategory: string,
    analysisName: string,
    slot: string,
    options?: DiagnosticsGetSiteAnalysisSlotOptionalParams
  ): Promise<DiagnosticsGetSiteAnalysisSlotResponse>;
  /**
   * Description for Execute Analysis
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param siteName Site Name
   * @param diagnosticCategory Category Name
   * @param analysisName Analysis Resource Name
   * @param slot Slot Name
   * @param options The options parameters.
   */
  executeSiteAnalysisSlot(
    resourceGroupName: string,
    siteName: string,
    diagnosticCategory: string,
    analysisName: string,
    slot: string,
    options?: DiagnosticsExecuteSiteAnalysisSlotOptionalParams
  ): Promise<DiagnosticsExecuteSiteAnalysisSlotResponse>;
  /**
   * Description for Get Detector
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param siteName Site Name
   * @param diagnosticCategory Diagnostic Category
   * @param detectorName Detector Name
   * @param slot Slot Name
   * @param options The options parameters.
   */
  getSiteDetectorSlot(
    resourceGroupName: string,
    siteName: string,
    diagnosticCategory: string,
    detectorName: string,
    slot: string,
    options?: DiagnosticsGetSiteDetectorSlotOptionalParams
  ): Promise<DiagnosticsGetSiteDetectorSlotResponse>;
  /**
   * Description for Execute Detector
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param siteName Site Name
   * @param detectorName Detector Resource Name
   * @param diagnosticCategory Category Name
   * @param slot Slot Name
   * @param options The options parameters.
   */
  executeSiteDetectorSlot(
    resourceGroupName: string,
    siteName: string,
    detectorName: string,
    diagnosticCategory: string,
    slot: string,
    options?: DiagnosticsExecuteSiteDetectorSlotOptionalParams
  ): Promise<DiagnosticsExecuteSiteDetectorSlotResponse>;
}
