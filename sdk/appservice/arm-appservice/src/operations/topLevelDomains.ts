/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/topLevelDomainsMappers";
import * as Parameters from "../models/parameters";
import { WebSiteManagementClientContext } from "../webSiteManagementClientContext";

/** Class representing a TopLevelDomains. */
export class TopLevelDomains {
  private readonly client: WebSiteManagementClientContext;

  /**
   * Create a TopLevelDomains.
   * @param {WebSiteManagementClientContext} client Reference to the service client.
   */
  constructor(client: WebSiteManagementClientContext) {
    this.client = client;
  }

  /**
   * Description for Get all top-level domains supported for registration.
   * @summary Get all top-level domains supported for registration.
   * @param [options] The optional parameters
   * @returns Promise<Models.TopLevelDomainsListResponse>
   */
  list(options?: msRest.RequestOptionsBase): Promise<Models.TopLevelDomainsListResponse>;
  /**
   * @param callback The callback
   */
  list(callback: msRest.ServiceCallback<Models.TopLevelDomainCollection>): void;
  /**
   * @param options The optional parameters
   * @param callback The callback
   */
  list(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.TopLevelDomainCollection>): void;
  list(options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.TopLevelDomainCollection>, callback?: msRest.ServiceCallback<Models.TopLevelDomainCollection>): Promise<Models.TopLevelDomainsListResponse> {
    return this.client.sendOperationRequest(
      {
        options
      },
      listOperationSpec,
      callback) as Promise<Models.TopLevelDomainsListResponse>;
  }

  /**
   * Description for Get details of a top-level domain.
   * @summary Get details of a top-level domain.
   * @param name Name of the top-level domain.
   * @param [options] The optional parameters
   * @returns Promise<Models.TopLevelDomainsGetResponse>
   */
  get(name: string, options?: msRest.RequestOptionsBase): Promise<Models.TopLevelDomainsGetResponse>;
  /**
   * @param name Name of the top-level domain.
   * @param callback The callback
   */
  get(name: string, callback: msRest.ServiceCallback<Models.TopLevelDomain>): void;
  /**
   * @param name Name of the top-level domain.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(name: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.TopLevelDomain>): void;
  get(name: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.TopLevelDomain>, callback?: msRest.ServiceCallback<Models.TopLevelDomain>): Promise<Models.TopLevelDomainsGetResponse> {
    return this.client.sendOperationRequest(
      {
        name,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.TopLevelDomainsGetResponse>;
  }

  /**
   * Description for Gets all legal agreements that user needs to accept before purchasing a domain.
   * @summary Gets all legal agreements that user needs to accept before purchasing a domain.
   * @param name Name of the top-level domain.
   * @param agreementOption Domain agreement options.
   * @param [options] The optional parameters
   * @returns Promise<Models.TopLevelDomainsListAgreementsResponse>
   */
  listAgreements(name: string, agreementOption: Models.TopLevelDomainAgreementOption, options?: msRest.RequestOptionsBase): Promise<Models.TopLevelDomainsListAgreementsResponse>;
  /**
   * @param name Name of the top-level domain.
   * @param agreementOption Domain agreement options.
   * @param callback The callback
   */
  listAgreements(name: string, agreementOption: Models.TopLevelDomainAgreementOption, callback: msRest.ServiceCallback<Models.TldLegalAgreementCollection>): void;
  /**
   * @param name Name of the top-level domain.
   * @param agreementOption Domain agreement options.
   * @param options The optional parameters
   * @param callback The callback
   */
  listAgreements(name: string, agreementOption: Models.TopLevelDomainAgreementOption, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.TldLegalAgreementCollection>): void;
  listAgreements(name: string, agreementOption: Models.TopLevelDomainAgreementOption, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.TldLegalAgreementCollection>, callback?: msRest.ServiceCallback<Models.TldLegalAgreementCollection>): Promise<Models.TopLevelDomainsListAgreementsResponse> {
    return this.client.sendOperationRequest(
      {
        name,
        agreementOption,
        options
      },
      listAgreementsOperationSpec,
      callback) as Promise<Models.TopLevelDomainsListAgreementsResponse>;
  }

  /**
   * Description for Get all top-level domains supported for registration.
   * @summary Get all top-level domains supported for registration.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.TopLevelDomainsListNextResponse>
   */
  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.TopLevelDomainsListNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.TopLevelDomainCollection>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.TopLevelDomainCollection>): void;
  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.TopLevelDomainCollection>, callback?: msRest.ServiceCallback<Models.TopLevelDomainCollection>): Promise<Models.TopLevelDomainsListNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listNextOperationSpec,
      callback) as Promise<Models.TopLevelDomainsListNextResponse>;
  }

  /**
   * Description for Gets all legal agreements that user needs to accept before purchasing a domain.
   * @summary Gets all legal agreements that user needs to accept before purchasing a domain.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.TopLevelDomainsListAgreementsNextResponse>
   */
  listAgreementsNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.TopLevelDomainsListAgreementsNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listAgreementsNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.TldLegalAgreementCollection>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listAgreementsNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.TldLegalAgreementCollection>): void;
  listAgreementsNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.TldLegalAgreementCollection>, callback?: msRest.ServiceCallback<Models.TldLegalAgreementCollection>): Promise<Models.TopLevelDomainsListAgreementsNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listAgreementsNextOperationSpec,
      callback) as Promise<Models.TopLevelDomainsListAgreementsNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/providers/Microsoft.DomainRegistration/topLevelDomains",
  urlParameters: [
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.TopLevelDomainCollection
    },
    default: {
      bodyMapper: Mappers.DefaultErrorResponse
    }
  },
  serializer
};

const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/providers/Microsoft.DomainRegistration/topLevelDomains/{name}",
  urlParameters: [
    Parameters.name,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.TopLevelDomain
    },
    default: {
      bodyMapper: Mappers.DefaultErrorResponse
    }
  },
  serializer
};

const listAgreementsOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "subscriptions/{subscriptionId}/providers/Microsoft.DomainRegistration/topLevelDomains/{name}/listAgreements",
  urlParameters: [
    Parameters.name,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "agreementOption",
    mapper: {
      ...Mappers.TopLevelDomainAgreementOption,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.TldLegalAgreementCollection
    },
    default: {
      bodyMapper: Mappers.DefaultErrorResponse
    }
  },
  serializer
};

const listNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.TopLevelDomainCollection
    },
    default: {
      bodyMapper: Mappers.DefaultErrorResponse
    }
  },
  serializer
};

const listAgreementsNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.TldLegalAgreementCollection
    },
    default: {
      bodyMapper: Mappers.DefaultErrorResponse
    }
  },
  serializer
};
