/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as msRestAzure from "@azure/ms-rest-azure-js";
import * as Models from "../models";
import * as Mappers from "../models/kubeEnvironmentsMappers";
import * as Parameters from "../models/parameters";
import { WebSiteManagementClientContext } from "../webSiteManagementClientContext";

/** Class representing a KubeEnvironments. */
export class KubeEnvironments {
  private readonly client: WebSiteManagementClientContext;

  /**
   * Create a KubeEnvironments.
   * @param {WebSiteManagementClientContext} client Reference to the service client.
   */
  constructor(client: WebSiteManagementClientContext) {
    this.client = client;
  }

  /**
   * Description for Get all Kubernetes Environments for a subscription.
   * @summary Get all Kubernetes Environments for a subscription.
   * @param [options] The optional parameters
   * @returns Promise<Models.KubeEnvironmentsListBySubscriptionResponse>
   */
  listBySubscription(options?: msRest.RequestOptionsBase): Promise<Models.KubeEnvironmentsListBySubscriptionResponse>;
  /**
   * @param callback The callback
   */
  listBySubscription(callback: msRest.ServiceCallback<Models.KubeEnvironmentCollection>): void;
  /**
   * @param options The optional parameters
   * @param callback The callback
   */
  listBySubscription(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.KubeEnvironmentCollection>): void;
  listBySubscription(options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.KubeEnvironmentCollection>, callback?: msRest.ServiceCallback<Models.KubeEnvironmentCollection>): Promise<Models.KubeEnvironmentsListBySubscriptionResponse> {
    return this.client.sendOperationRequest(
      {
        options
      },
      listBySubscriptionOperationSpec,
      callback) as Promise<Models.KubeEnvironmentsListBySubscriptionResponse>;
  }

  /**
   * Description for Get all the Kubernetes Environments in a resource group.
   * @summary Get all the Kubernetes Environments in a resource group.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param [options] The optional parameters
   * @returns Promise<Models.KubeEnvironmentsListByResourceGroupResponse>
   */
  listByResourceGroup(resourceGroupName: string, options?: msRest.RequestOptionsBase): Promise<Models.KubeEnvironmentsListByResourceGroupResponse>;
  /**
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param callback The callback
   */
  listByResourceGroup(resourceGroupName: string, callback: msRest.ServiceCallback<Models.KubeEnvironmentCollection>): void;
  /**
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByResourceGroup(resourceGroupName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.KubeEnvironmentCollection>): void;
  listByResourceGroup(resourceGroupName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.KubeEnvironmentCollection>, callback?: msRest.ServiceCallback<Models.KubeEnvironmentCollection>): Promise<Models.KubeEnvironmentsListByResourceGroupResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        options
      },
      listByResourceGroupOperationSpec,
      callback) as Promise<Models.KubeEnvironmentsListByResourceGroupResponse>;
  }

  /**
   * Description for Get the properties of a Kubernetes Environment.
   * @summary Get the properties of a Kubernetes Environment.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the Kubernetes Environment.
   * @param [options] The optional parameters
   * @returns Promise<Models.KubeEnvironmentsGetResponse>
   */
  get(resourceGroupName: string, name: string, options?: msRest.RequestOptionsBase): Promise<Models.KubeEnvironmentsGetResponse>;
  /**
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the Kubernetes Environment.
   * @param callback The callback
   */
  get(resourceGroupName: string, name: string, callback: msRest.ServiceCallback<Models.KubeEnvironment>): void;
  /**
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the Kubernetes Environment.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(resourceGroupName: string, name: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.KubeEnvironment>): void;
  get(resourceGroupName: string, name: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.KubeEnvironment>, callback?: msRest.ServiceCallback<Models.KubeEnvironment>): Promise<Models.KubeEnvironmentsGetResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        name,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.KubeEnvironmentsGetResponse>;
  }

  /**
   * Description for Creates or updates a Kubernetes Environment.
   * @summary Creates or updates a Kubernetes Environment.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the Kubernetes Environment.
   * @param kubeEnvironmentEnvelope Configuration details of the Kubernetes Environment.
   * @param [options] The optional parameters
   * @returns Promise<Models.KubeEnvironmentsCreateOrUpdateResponse>
   */
  createOrUpdate(resourceGroupName: string, name: string, kubeEnvironmentEnvelope: Models.KubeEnvironment, options?: msRest.RequestOptionsBase): Promise<Models.KubeEnvironmentsCreateOrUpdateResponse> {
    return this.beginCreateOrUpdate(resourceGroupName,name,kubeEnvironmentEnvelope,options)
      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.KubeEnvironmentsCreateOrUpdateResponse>;
  }

  /**
   * Description for Delete a Kubernetes Environment.
   * @summary Delete a Kubernetes Environment.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the Kubernetes Environment.
   * @param [options] The optional parameters
   * @returns Promise<msRest.RestResponse>
   */
  deleteMethod(resourceGroupName: string, name: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse> {
    return this.beginDeleteMethod(resourceGroupName,name,options)
      .then(lroPoller => lroPoller.pollUntilFinished());
  }

  /**
   * Description for Creates or updates a Kubernetes Environment.
   * @summary Creates or updates a Kubernetes Environment.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the Kubernetes Environment.
   * @param kubeEnvironmentEnvelope Configuration details of the Kubernetes Environment.
   * @param [options] The optional parameters
   * @returns Promise<Models.KubeEnvironmentsUpdateResponse>
   */
  update(resourceGroupName: string, name: string, kubeEnvironmentEnvelope: Models.KubeEnvironmentPatchResource, options?: msRest.RequestOptionsBase): Promise<Models.KubeEnvironmentsUpdateResponse>;
  /**
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the Kubernetes Environment.
   * @param kubeEnvironmentEnvelope Configuration details of the Kubernetes Environment.
   * @param callback The callback
   */
  update(resourceGroupName: string, name: string, kubeEnvironmentEnvelope: Models.KubeEnvironmentPatchResource, callback: msRest.ServiceCallback<Models.KubeEnvironment>): void;
  /**
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the Kubernetes Environment.
   * @param kubeEnvironmentEnvelope Configuration details of the Kubernetes Environment.
   * @param options The optional parameters
   * @param callback The callback
   */
  update(resourceGroupName: string, name: string, kubeEnvironmentEnvelope: Models.KubeEnvironmentPatchResource, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.KubeEnvironment>): void;
  update(resourceGroupName: string, name: string, kubeEnvironmentEnvelope: Models.KubeEnvironmentPatchResource, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.KubeEnvironment>, callback?: msRest.ServiceCallback<Models.KubeEnvironment>): Promise<Models.KubeEnvironmentsUpdateResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        name,
        kubeEnvironmentEnvelope,
        options
      },
      updateOperationSpec,
      callback) as Promise<Models.KubeEnvironmentsUpdateResponse>;
  }

  /**
   * Description for Creates or updates a Kubernetes Environment.
   * @summary Creates or updates a Kubernetes Environment.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the Kubernetes Environment.
   * @param kubeEnvironmentEnvelope Configuration details of the Kubernetes Environment.
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginCreateOrUpdate(resourceGroupName: string, name: string, kubeEnvironmentEnvelope: Models.KubeEnvironment, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        resourceGroupName,
        name,
        kubeEnvironmentEnvelope,
        options
      },
      beginCreateOrUpdateOperationSpec,
      options);
  }

  /**
   * Description for Delete a Kubernetes Environment.
   * @summary Delete a Kubernetes Environment.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the Kubernetes Environment.
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginDeleteMethod(resourceGroupName: string, name: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        resourceGroupName,
        name,
        options
      },
      beginDeleteMethodOperationSpec,
      options);
  }

  /**
   * Description for Get all Kubernetes Environments for a subscription.
   * @summary Get all Kubernetes Environments for a subscription.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.KubeEnvironmentsListBySubscriptionNextResponse>
   */
  listBySubscriptionNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.KubeEnvironmentsListBySubscriptionNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listBySubscriptionNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.KubeEnvironmentCollection>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listBySubscriptionNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.KubeEnvironmentCollection>): void;
  listBySubscriptionNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.KubeEnvironmentCollection>, callback?: msRest.ServiceCallback<Models.KubeEnvironmentCollection>): Promise<Models.KubeEnvironmentsListBySubscriptionNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listBySubscriptionNextOperationSpec,
      callback) as Promise<Models.KubeEnvironmentsListBySubscriptionNextResponse>;
  }

  /**
   * Description for Get all the Kubernetes Environments in a resource group.
   * @summary Get all the Kubernetes Environments in a resource group.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.KubeEnvironmentsListByResourceGroupNextResponse>
   */
  listByResourceGroupNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.KubeEnvironmentsListByResourceGroupNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listByResourceGroupNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.KubeEnvironmentCollection>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByResourceGroupNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.KubeEnvironmentCollection>): void;
  listByResourceGroupNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.KubeEnvironmentCollection>, callback?: msRest.ServiceCallback<Models.KubeEnvironmentCollection>): Promise<Models.KubeEnvironmentsListByResourceGroupNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listByResourceGroupNextOperationSpec,
      callback) as Promise<Models.KubeEnvironmentsListByResourceGroupNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listBySubscriptionOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/providers/Microsoft.Web/kubeEnvironments",
  urlParameters: [
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.KubeEnvironmentCollection
    },
    default: {
      bodyMapper: Mappers.DefaultErrorResponse
    }
  },
  serializer
};

const listByResourceGroupOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/kubeEnvironments",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.KubeEnvironmentCollection
    },
    default: {
      bodyMapper: Mappers.DefaultErrorResponse
    }
  },
  serializer
};

const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/kubeEnvironments/{name}",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.name,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.KubeEnvironment
    },
    default: {
      bodyMapper: Mappers.DefaultErrorResponse
    }
  },
  serializer
};

const updateOperationSpec: msRest.OperationSpec = {
  httpMethod: "PATCH",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/kubeEnvironments/{name}",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.name,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "kubeEnvironmentEnvelope",
    mapper: {
      ...Mappers.KubeEnvironmentPatchResource,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.KubeEnvironment
    },
    201: {
      bodyMapper: Mappers.KubeEnvironment
    },
    default: {
      bodyMapper: Mappers.DefaultErrorResponse
    }
  },
  serializer
};

const beginCreateOrUpdateOperationSpec: msRest.OperationSpec = {
  httpMethod: "PUT",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/kubeEnvironments/{name}",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.name,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "kubeEnvironmentEnvelope",
    mapper: {
      ...Mappers.KubeEnvironment,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.KubeEnvironment
    },
    201: {
      bodyMapper: Mappers.KubeEnvironment
    },
    default: {
      bodyMapper: Mappers.DefaultErrorResponse
    }
  },
  serializer
};

const beginDeleteMethodOperationSpec: msRest.OperationSpec = {
  httpMethod: "DELETE",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/kubeEnvironments/{name}",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.name,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {},
    202: {},
    204: {},
    default: {
      bodyMapper: Mappers.DefaultErrorResponse
    }
  },
  serializer
};

const listBySubscriptionNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.KubeEnvironmentCollection
    },
    default: {
      bodyMapper: Mappers.DefaultErrorResponse
    }
  },
  serializer
};

const listByResourceGroupNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.KubeEnvironmentCollection
    },
    default: {
      bodyMapper: Mappers.DefaultErrorResponse
    }
  },
  serializer
};
